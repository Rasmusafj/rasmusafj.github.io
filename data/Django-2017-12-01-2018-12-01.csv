author,comment,timestamp
max_daddio,"Check out the docs on serializer relations: [https://www.django-rest-framework.org/api-guide/relations/](https://www.django-rest-framework.org/api-guide/relations/)

If I understand you correctly, you probably want a StringRelatedField? That would serialize your tutor relation on the student to a single string, ie. the name.

There is the PrimaryKeyRelated field which returns just the ID of the tutor, or a slug, which is a shortened string made up of any number of fields on the tutor.

Hope this helps.

If you want to show all the information, you need to write your own serializer, a TutorSerializer, for example, which you must then nest in your StudentSerializer. Nesting is absolutely common. You may just have a specific TutorSerializer for use in your nested relationships, so that you don't end up nesting Students in Tutors in Students in Tutors, etc.

Then have a separate TutorSerializer which is called when you hit the Tutor view.

If that makes sense.

The docs are pretty good at explaining this: [https://www.django-rest-framework.org/api-guide/relations/#nested-relationships](https://www.django-rest-framework.org/api-guide/relations/#nested-relationships)",1543616181.0
thehardsphere,"No. You don't even need to read a 2000 page book to learn python.

Build things.",1543610705.0
CallJ,"I don’t think so.  With some basics, U can easily be a django boy.
Loop, conditions, function and U are good to go. ",1543609381.0
this_is_trash_really,All the Python.,1543609935.0
wasa_b,"To get started and build something easy, the basics will do. To do something more complex, you'll need to have understanding of classes and inheritance, decorators, and concepts outside of Python per se (databases mostly).",1543615206.0
twistdafterdark,"Start building stuff, exercises from books really only get you so far. You think you understand a concept until you have to actually implement it.",1543621661.0
deveshsayshi,"Learn basics, try solo learn. And you should be ready to go for django.",1543610272.0
ge0n1,Learn Linux -> Then Django -> Then Intermediate Python -> then SQL,1543611006.0
jonknee,"Why not just put it inside a block?

    {% block header_parent %}
      <div class=""header"">
        {% block header %}{% endblock %}
      </div>
    {% endblock %}

On those two pages just empty out the parent block:

    {% block header_parent %}{% endblock %}
",1543600453.0
jomofo,Use a template context processor to modify your context accordingly then use conditionals in your template,1543604927.0
this_is_trash_really,"You could write a template tag for it. I do that for eCommerce sites, showing one block if there are items in the cart and another if there aren't. 

&#x200B;

[https://docs.djangoproject.com/en/2.1/ref/templates/builtins/](https://docs.djangoproject.com/en/2.1/ref/templates/builtins/)",1543598084.0
NateSmith28,"You can clean a particular field by defining a method like ""clean\_end\_date(self):"" in your forms. That will allow you to generate errors specific to a field.

    def clean_end_date(self):
        start_date = self.cleaned_data['start_date']
        end_date = self.cleaned_data['end_date']
    
        if end_date <= start_date:
            raise forms.ValidationError(""End date must be later than start date"")
    
        # Always return a value to use as the new cleaned data, even if
        # this method didn't change it.
        return end_date

Your error is more of a form level validation, so you might want to do this validation in the clean method.

    def clean(self):
        start_date = self.cleaned_data['start_date']
        end_date = self.cleaned_data['end_date']
    
        if end_date <= start_date:
            raise forms.ValidationError(""End date must be later than start date"")
        return super(YourFormClass, self).clean()

Documentation on these methods is:

[Cleaning a specific field](https://docs.djangoproject.com/en/2.1/ref/forms/validation/#cleaning-a-specific-field-attribute)

[Cleaning and validating fields that depend on each other.](https://docs.djangoproject.com/en/2.1/ref/forms/validation/#cleaning-and-validating-fields-that-depend-on-each-other)

&#x200B;

If you would prefer to do the validation in the model it is very similar. Look at overriding the Model.clean() method:

[model validation](https://docs.djangoproject.com/en/2.1/ref/models/instances/#django.db.models.Model.clean)

&#x200B;",1543589911.0
rocky-ji,Did you miss a letter?,1543540609.0
smegbot,can you run migrations as normal? ./manage.py makemigrations?,1543544550.0
I_said_wot,"I use django-autocomplete-light also, and I do this:

    class LoginRequiredMixin(LoginRequiredMixin):
    login_url = '/accounts/login'

    class AircraftAutocomplete(LoginRequiredMixin, autocomplete.Select2QuerySetView):

Hope it helps.",1543552674.0
pemboa,"> I wouldn't want a normal user to access this webpage

Strictly speaking it's not a web page, but let's explore this. Why wouldn't you want a normal user to access it?",1543527149.0
iBlag,This is answered in the Django tutorial and the Django documentation.,1543521518.0
thereShouldBeaLogin,"You see, django admin shows you fields of a registeted model from your_app.models. Go check how much fields are there, and try to fix it to what you need. Googling direct question will help.",1543521766.0
fdemmer,"if you are through the official documentation and you are missing details: read the code.

doesn't get more ""low level"" than that and you'll see, that there is no magic at all, but yes of course it is trying to do a lot for you that's the whole point of it. :)

want to do everything by yourself just use django alone.",1543513757.0
porksmash,"DRF highly leverages class based views, which are pretty similar to how they're implemented in plain Django but oriented towards API usage. Then there's an additional layer of abstraction if you use DRF's ModelViewSets which provide auto-magic for working with Django models directly - which is an extremely common use case. I would recommend reading about Django's CBVs and reaching an understanding there if you think that is where the confusion is coming from: https://docs.djangoproject.com/en/2.1/topics/class-based-views/. 

If you are confused on other things it would help if you could comment on what specifically you're struggling with. ",1543522207.0
real_trizzaye,I’ve been wondering about how to approach this with one of my projects. This was a helpful article. Thanks!,1543532689.0
nickdjones,Why not start with https://github.com/bfirsh/django-ordered-model,1543535652.0
new_ca_grower,Great article!,1543586397.0
pemboa,"I'd recommend not calling the field ""order"" maybe ""ord""?",1543550951.0
GeeWengel,"This is a very nice article. I've had to implement something like this myself for drag&drop purposes. I'm doing it mostly the same way as them, except I hadn't realized you could use F expressions like this!

We're also playing around with an alternate implementation, which requires no re-shuffling of the database.
Basically you map the position on the frontend to a ""position"" in the table by multiplying it by some large amount, e.g. 
insertion_id = frontend_pos * 100 + 1

And then when you want to insert before or after this entry, you simply calculate the insertion id, subtract a set amount and insert the order there. I think if you pull this off, you can get a lot of order switching (depending on the initial gap) you chose, where each order insertion / movement is O(1)",1543559949.0
KarlSayle,"Hi. In the view, you can access the object via self.get\_object(). Check out [http://ccbv.co.uk/projects/Django/2.0/django.views.generic.detail/DetailView/](http://ccbv.co.uk/projects/Django/2.0/django.views.generic.detail/DetailView/) for all the methods available.",1543494169.0
NateSmith28,"You can just add the extra queryset to the context by overriding get_context_data(). Based on your description I don't think you need to be changing the queryset or anything.

    def get_context_data(self, **kwargs):
        context = super(ObjectDetailView, self).get_context_data(**kwargs)
        context['extra_qs'] = self.get_object().m2mfield.all()
        return context

Now extra_qs will be available in your view.
Also, to clear up some confusion, in a detail view you get access to a model instance in the template named ""object"". That object is whatever self.get_object() returns. By default get_object() will look for a pk in the url, and the model defined in the view to get the model instance. In a list view, you get access to a queryset called ""object_list"" in the template, and that is whatever get_queryset returns.

As one last point, you don't have to do this in the view. You should be able to do something like this in the template:

    {% for related_object in object.m2mfield.all %}
        // render stuff
    {% endfor %}",1543506112.0
thenoonefromukraine,I assume you're using class based views?,1543504898.0
oliw,"Ooo, Ooo, I do this sometimes!

We're retrofitting some elements of a Django app with some Vue views, so it's mostly Django driven and occasionally we dump an extra blob of JS on the page alongside a mount point.

Here's one of the more complicated examples.

    <div id=""my_app"" data-my-prop=""{{django_variable}}""></div>

Then we can wire that into a Vue component's props directly while mounting it. Here's the entry point JS:

    import Vue from 'vue'
    import MyApp from './components/MyApp'

    const root_element = document.getElementById(""my_app"");
    const Component = Vue.extend(MyApp);
    new Component({
        el: root_element,
        propsData: { ...root_element.dataset }
    });

There's a big pile of Webpack crap around this as well, so that it runs on a toaster, but that's another story for another day.

---

Because we have multiple entry points and many chunks split between them (your webpack config will vary), we use a fork of `django-webpack-loader` that is slightly more capable of differentiating chunks

    -e git+git://github.com/dmytrokyrychuk/django-webpack-loader.git@chunks#egg=django-webpack-loader

And then calling `{% render_bundle 'main' 'css' %}` will render all the CSS (and vendor CSS) required my our ""main"" entry point, as generated by webpack. It sounds like you're all over this already, but I thought I should mention the availability of a slightly better fork if you're also chunking things out into shared chunks (which I recommend).",1543441021.0
yoongkang,"> How do I import external Vue components into the main Vue instance rendered within the Django template? For example, the Ticket object has a component called 'CommentFeed'. Right now I have them rendering as two separate Vue instances, but really want to nest them together.

It's been a while since I did Vue, but couldn't you just register your components as described here, in one Vue instance? 

https://vuejs.org/v2/guide/components-registration.html#Local-Registration

> With django_webpack_loader it looks like I'm setting up two servers still. Is that the case?

I don't think so. It's supposed to create a JS bundle for you, which you include in your Django template via `<script>` tags (and `{% static %}`).


> How can I pass variables from the template to the Vue instance?

What kinds of variables do you want to pass in?

Generally for JavaScript, you can use the `json_string` template filter to create a JavaScript variable. Once it's a JavaScript variable you can then pass that variable into the rest of your JavaScript code. 

You could also use a package called argonauts, but I'm not sure how well that's maintained.

See this for the template filter: https://docs.djangoproject.com/en/2.1/ref/templates/builtins/#json-script


",1543487891.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1543435130.0
qdivya1,Good stuff. I went to school in Zim and it's good to see that there is a Python community there,1543446267.0
qdivya1,"Looks good at first glance. Some quick questions:

\- Why not use Google Auth integration? 

\- This isn't a Data Science Platform as much as it is a Data Science **Showcase**. You need to create an ""About Us"" section to indicate this.

\- Can you share a little about how you wrote this? Components etc? What back end DB? What hosting choices? ",1543421151.0
synw_,"The landing page looks good but the user experience could be improved. About the html/css: I can see an horizontal scrollbar at the bottom (Firefox, Brave): this looks unprofessional. Also the register form fields stick to the image with no spacing.

The content is actually lightweight but the notebooks about regression are interesting and detailed. My first minute of navigation was positive so I wanted to know more, specially about why I should engage and upload some notebooks. I'm already using Binder to share notebooks, and they can be executed online. Reading the headline I saw ""Easily get peer review"": this is interesting. So I wanted to have more details about the feature: is there a mechanism on the website for this, or is it just mentioned as a consequence of uploading some notebooks? Next step was to click on ""Get started"" to have more details. And then a form pops up in my face inviting me to create an account: this gave me frustration. The ""Get started"" button action is the same as the ""Create account"" action. End of the story for me: I don't want to register just to know what I can have if I register.

I would suggest an informative detailed page when you click on get started, and at the end of this the link to register.",1543486645.0
kimaero,Looking for that too ,1543399996.0
alexandremjacques,"There’s a Python package called `sh`. Take a look at it. As far as I can remember, it can execute scripts and you can capture the output. Even asynchronously. ",1543416960.0
,[deleted],1543594654.0
freko247,"Seems like there's not a lot of people with experience with this here. I did a test where I created a new django project, when starting the shell the total memory usage is \~340Mi. Still high, but it is evident that something in my project is adding to the foot print.",1543497652.0
FunDeckHermit,"He koekwaus, dit is de verkeerde subreddit voor deze troep.",1543394456.0
vishal180618,"what you can do is write a mixin which checks if the user is logged in if not it will redirect it to the login page.

    class UserLoginRequiredMixin(object):
        def dispatch(self, request, *args, **kwargs):# redirect if not loggedin
            if not request.user.is_authenticated():
                redirect_url = '{}?next={}'.format('write you own login page url')
                return redirect(redirect_url)
            return super(LoginRequiredMixin, self).dispatch(request, *args, **kwargs)

now your view can inherit this mixin

    class YourOwnView(UserLoginRequiredMixin):
        def write_your_own_view(self):

now whenever a user gets on your `YourOwnView` it will be check for logged in user and will redirect it to the login page if not logged in.",1543386556.0
gratteux68,"I don't know Django CMS but you should be able to do all this with Wagtail. You'll have to understand how Django and Wagtail are tied together as Wagtail is built on top of Django, but both are so good that I would definitely pick Wagtail for this kind of project. Plus Django REST Framework, which is great for APIs. ",1543381472.0
eazy17,"I have personally tried mezzanine and wagtail. I think wagtail is best suited in terms of integration to an existing project as well. Mezzanine is good too but the documentation isn't so straight forward to follow.

So yes, Wagtail ftw!",1543392162.0
oliw,"I've used both Wagtail and Django-CMS in anger. They both have problems find me a single CMS that doesn't. If I had to pick something, I'd probably pick Django-CMS. It *does* have options for mirroring a ""content types"" workflow:

 - You can have a custom template for certain types, these templates can dump a pile of default controls on a new page ready to be set. This is all handled through hard files and hard django.conf.settings.
 - [Page types](http://docs.django-cms.org/en/latest/how_to/page_types.html) which is something I've not used before but appears to be user-configurable version of what I've just described above.

These are not the same as modelling out the content, but in my experience, that only makes them better. Especially when you have multiple editors (and I have one project with about a dozen), limitations help people get started but mean you're going to get requests for adding things. Weird edge-cases. Christmas theming on some promos. Whatever. Again, nothing perfect here but Django CMS (IMO) lets *them* deal with that a lot more of the time.

Having also used both with non-technical (people competent with using systems but unable to write HTML), I also find people understand Django CMS's Pages treeview layout a lot better. It also keeps them closer to Django's Admin which is something I've needed for integrated products before. And being able to integrated apps without needing to turn them into fully-blown pages really helps.

Editing in-page also cuts both ways. It is nice to get some focus back with Wagtails StreamField controlling all you need, but you don't see it until you're done. Django CMS lets you peck away at a page until it's finished. And because you're often not defining anything other than a top-level placeholder layout, you don't have people coming back to you every ten minutes asking to add fields for stuff.

Integrating e-commerce systems on top of a CMS is ***always*** a cludge. I've never met one in any framework using any language that made me think ""Oh I'm really happy how well integrated these are"". They bump around each other, spawn a lot of noisy interfaces with too many options. Honestly, I'd almost always vote to keep them as separate as possible. Subdomain styled up the same, even an external service. That way you pick the best software for the job, not just the best of what will work together. The license tracking (I assume content?) can be integrated externally.",1543408568.0
petedee,"If you are looking at eCommerce then Mezzanine has the Cartridge module that just works out of the box, it is more setup to selling physical things so there is some work that will need to be done on that end of things but it's very extensible, can support custom content types and you can throw DRF and Mezzanine REST API at it if you want a REST API (although - full disclosure - I haven't tried this)

The documentation for it can be a little bare bones and it sometimes feels a bit ""traditional"" in that the way it works (It's certainly not one of these GraphQL / MongoDB / Docker powered Progressive Web Apps deals) but its got solid foundations and these days that can mean a lot.",1543393594.0
if1then0,Wagtail for the streamfields and admin interface. That was my conclusion when I did a survey of Django projects a few months ago at least.,1543806207.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1543321223.0
athermop,"When and how to use other libraries is a hard question to answer.

Of course, the at-first-blush answer is ""yes, use them!  Why re-invent the wheel?""

However, there are costs to using a library, and sometimes those costs are more than the costs of writing the functionality yourself.

Some questions to ask about using another library:

1. How confident are you that the library is secure and will continue to be?
2. Will it be updated with new features, security patches, and any other updates it might need?
3. Does the abstraction the library offers mesh well with the abstraction you need?  Using a library usually means altering your requirements or how you think about the problem being solved.
4. How much code, thought, labor, maintenance is the library saving you?  Many libraries are very small wrappers around very little functionality.
5. Is the scope of the library much larger than the functionality you actually need?  Many times you need just a bit of functionality, but the library brings in a bajillion lines of code and configuration, and potential security vulnerabilities.
6. Do the core devs seem responsive?  Are they answering issues on the issue tracker?  Are pull requests being accepted?
7. Do you have the know-how to implement the functionality yourself or can you gain the know-how in an amount of time reasonable to you?  I use high-level machine learning libraries all the time because I'm a dummy and don't currently have the time to gain a deeper understanding of the subject matter.

I use django packages (and libraries in general) constantly.  I also write much functionality that I *could* use a library for.

For example, I don't use stuff like django-allauth and other third-party social auth type of libraries.  With some of them you can peruse the issue trackers and find problems that have gone many months or years without any progress, they include functionality for tons of different providers, they have convoluted configuration.  It's just easier to write the functionality for myself.

&#x200B;

edit:  I wanted to address this part of your post:  *There are also frameworks? Isn't Django already a framework?* 

All a framework is is  a collection of tools and paradigms for solving a problem.  There is no technical specification for what can and cannot be called a framework. There is no formal, logical place where to stop calling something a pile of code and ideas and start calling it a framework.

I just bought a cordless circular saw.  Stored in its handle is a wrench for taking the blade on and off.  

The cordless circular saw is a tool.  So is the wrench.  You could call the removable blade a tool.  In the right circumstances, you could call each tooth on the blade a tool.

In this example, *tool* is analogous to a *framework*.",1543342341.0
monim67,"If the package does not affect your app anyways and includes tests and has no security concerns, you can use it. There's no point of reinventing the wheel without reasons.

There are lot of popular and regularly maintained packages and frameworks you can and should use if possible in my opinion. As other developers with past experience using the same package can easily join your team.

I would say a well maintained package developed and continuously maintained by a group of people is better choice than what you/your team are going to reinvent.",1543326698.0
booooomba,"I'm trying to use as few packages as possible. For example loads of people use crispy forms even though you can just render out a Django form manually without any problems.

However there are instances where I use plugins as well. For social authentication for example. I'm not good enough with OAuth and similar to code it myself.

> There are also frameworks?

There's something like Django REST framework, which is pretty popular and helps you with REST APIs. There's no problem with having smaller frameworks within Django.",1543324012.0
scwaffle,"You could make a [django admin command](https://docs.djangoproject.com/en/2.1/howto/custom-management-commands/) that handles the scraping and error notification and call it via cron job.  
If you use venv you have to use the python executable from your environment [like this](https://stackoverflow.com/questions/3287038/cron-and-virtualenv)",1543305618.0
Faiiya,I use django-background-tasks,1543309025.0
CKreuzberger,"Template Caching has nothing to do with your CACHES setting (other than the fact that the Dummy Cache is ""lost"" when you restart your application - which is also the cause of why restarting your application will lead to rendering the updated templates). 

Templates and Static Files are not cached while you are in Debug Mode (DEBUG = True).

What might be cached however is the output of the Django View (do not confuse Django Views with the templates used to render). You are using UpdateCacheMiddleware and FetchFromCacheMiddleware, and I suggest you read up in the caching documentation of django: https://docs.djangoproject.com/en/2.1/topics/cache/#the-per-site-cache",1543301545.0
plahcinski,"Personally I'm not a fan of fetch. Maybe I'm bitter from the old browser days but I just don't trust native implementations not waste my time. I'd rather put my trust in a library like axios to iron out any cross browser stuff.

I just create a `djangoAxios.js` that import and it looks like this

    import axios from ""axios"";
    
    axios.defaults.xsrfHeaderName = ""X-CSRFToken""
    axios.defaults.xsrfCookieName = 'csrftoken'
    
    export default axios

If you stumble upon this wondering why yours doesn't work, double check that [csrf isn't set to http only.](https://docs.djangoproject.com/en/2.1/ref/settings/#csrf-cookie-httponly)",1543286492.0
thenoonefromukraine,Can't wait to try this out. Been looking for a project to do with drf and now I have boilerplate. Sweet.,1543356346.0
wpg4665,What is this sorcery?! Is anyone else using this generator for their django apps?,1543282575.0
guili618,it's really cool，keep going ，ribozz！！！,1543373025.0
ehomrich,"A little scary at first, but fantastic. I'll definitely take a look at this.",1543333300.0
twistdafterdark,I think you're looking for [forms.FileField](https://docs.djangoproject.com/en/2.1/ref/forms/fields/#filefield),1543276935.0
yoongkang,"You're using a FileField, which allows you to pass a function as the `upload_to` parameter.

The function will take two parameters, the model instance, and the filename.

I would simply add a CharField (or any field that uses choices really) to the model which tells you which directory is selected. 

Then in the upload_to function, I'd simply make a decision on the destination directory based on this field.

Here, look at this: https://docs.djangoproject.com/en/2.1/ref/models/fields/#django.db.models.FileField.upload_to",1543293390.0
NateSmith28,If I was doing this I would probobly just create a virtual folder structure with models. If that doesn't work you can use a 3rd party file management application like [django-filer](https://github.com/divio/django-filer).,1543257924.0
andrey_shipilov,"name_of_the_class_lowercase/**datetime.today().year**/datetime.today().strftime('%m%d%H%M%S%f') + extension_lowercase
",1543270626.0
twistdafterdark,"I found [this article](https://glebbahmutov.com/blog/disable-inline-javascript-for-security/). It does seem to be a security issue however not a Django specific issue.

If I understood it correctly, it is more of an issue when using JS to process user input.",1543247359.0
jonknee,"No, there is no problem with it. It's no different than including a script tag to in your Django template that loads JS.",1543247836.0
souldeux,"What is ""run the debug?""",1543261734.0
metraon,Did you reload gunicorn/ uwsgi  ?,1543239235.0
pemboa,Did you delete you delete the .pyc files?,1543264473.0
apreche,You should check out factory boy. ,1543237223.0
poor_little_pinkus,"You could put all the logic of creating instances into class methods (or just pure functions at the top level). Then instead of accessing `self.car` inside the tests you do `car = self.create_car(user=None)` at the top of each test (and you can vary if it should have a user, what type of car it should be by adding in parameters as you need them), which really doesn't add much of extra code clutter imho. Sometimes it can be even more clear when you define what data you're testing at the top of the function scope instead of having to backtrack to the `setUp` method. Of course it will depend on the use case and I use both methods depending on my feel :).

Another solution could be to make different classes - `CarWithUserTestCase` and `CarWithoutUserTestCase` \- unless you think you might need to split it up even more in the future.

Also check out [https://model-mommy.readthedocs.io/en/latest/basic\_usage.html](https://model-mommy.readthedocs.io/en/latest/basic_usage.html) which makes creating instances super easy. You could use mommy recipes for better control of how things are made, but I often make a small function at the top of my test file similar to this

    def make_contact(**kwargs):
        if 'customer' not in kwargs:
            kwargs['customer'] = mommy.make('customers.Customer')
        kwargs.setdefault('email', 'some-random@email.com')
        return mommy.make('contacts.Contact', **kwargs)

Then invoke it like `contact = make_contact(customer=make_customer(source=Source.WEB))` if I need to test a contact connected to a specific type of customer.",1543238039.0
imomaliev,"I suggest using `pytest` [https://docs.pytest.org/en/latest/](https://docs.pytest.org/en/latest/), it looks like your issues will be solved with pytest's fixtures [https://docs.pytest.org/en/latest/fixture.html#fixture](https://docs.pytest.org/en/latest/fixture.html#fixture). There is pytest django plugin [https://github.com/pytest-dev/pytest-django](https://github.com/pytest-dev/pytest-django). Also yes factory boy is good idea

&#x200B;",1543301663.0
smedes,It will work perfectly fine. I have added channels to an existing project using DRF to talk to a Vue frontend with no significant issues.,1543238746.0
yoongkang,"The question doesn't make sense as they're used for very different things. DRF is for RESTful API served via HTTP, whereas Channels is used for Websockets. 

They can coexist within the same codebase of course (but you'll need an ASGI server like Daphne for Channels), and your channels consumers can use bits of DRF code like Serializers. But ""combining DRF and Channels"" doesn't make any sense whatsoever.

Perhaps you'll want to elaborate what exactly you want to achieve?
",1543225996.0
pimsn3000,"Probably not the answer you are looking for, but django channels now lets me think of the phoenix framework right away.

I do lots of python/django stuff at my job,but mehr really used channels. I have been working with async io, but in general i really dislike working with due to the single threaded nature of python (\#GIL).

I have a private project with similar requirements and also started with drf. I just find it really appealing what elixir/phoenix has to offer. But i havent really done much with it so far, but iam looking pretty much if there is a convenient way of maybe even combine these worlds",1543236595.0
igncampa,Always post your code man.,1543195486.0
yuppiepuppie,"A couple of things that stood out to me:

1. It seems strange that one of the apps is called www.  And looking into it I'm not sure what its doing.  The models.py in that app is actually sending emails...

2. All the commands listed in your Readme, should be condensed into a Makefile or something like that. To make this as user friendly as possible, I shouldn't have to copy-pasta all those commands to get up and running.  

Other than those and the lack of tests, nothing else popped out to me.  Good work and keep it up!",1543176183.0
pkkid,"You need a better page widget. The one you have shows all pages? Its larger than the table on my screen. 

The table is using a header and check boxes. This is very hard to understand and I actually have to try hard to see which check boxes goes with which header, or I suppose I could use a ruler.

You posted your Django secret key in the code!! Change that, remove it from settings asap. Note: changing this will probably invalidate all your stored passwords. But I'm pretty sure they may be useless now anyway that the secret is posted online. 

Did you mean to put www/base.html template in both the www app and the taxonomy app? I don't even know ow which one would win here. Maybe the one lowest in the INSTALLED_APPS?",1543189736.0
ComfortableMirror1,"The features dropdown moves the whole page and takes up space it doesn't need.

&#x200B;

And the next previous bar at the bottom is off-centre in my viewer.

&#x200B;

Can it tie in with WikiPedia and Direct PuMed Search.  


It will thicken it up and keep people there, and might give you some advertising space and time.

&#x200B;

Maybe pre-read both and inject the PubChem readouts?",1543204879.0
The_Amp_Walrus,"Not exactly what you asked for, and you may already know this, but a landing page that explains more about your site (what it does, who is it for, what it can do, social proof from people / orgs that like it) would go a long way to convert the curious into users. ",1543210472.0
Sonic_Pavilion,I certainly know this username from somewhere ;),1543223072.0
Hookless123,The layout of your site is broken when viewing on mobile. ,1543240538.0
malditostuntman,"In SQL with a many to many relationship you will actually need a third table to hold all the relations between objects (It would be something like A\_B\_relation). In Django you do that with the [ManyToManyField](https://docs.djangoproject.com/en/2.1/topics/db/examples/many_to_many/). 

In SQL it is not possible to store an array of elements as a value, so you will have to use the ManyToManyField.  
",1543168138.0
pancakeses,Why not just a model B with Many to Many relationship with model A? Sounds like you may be over complicating this.,1543169403.0
fdemmer,"Type 	| Avg time | Returned objects
-------|------------|-------------
DRF w/select related |	50.0 ms |	100
Deep GraphQL query |	441.6 ms |	100

am i understanding this correctly?

drf when using `select_related()` (which you should, there is no reason not to) is almost 10 times faster, than graphql to deliver the same (full) data.

is there no way to use `select_related()`with graphene?
",1543105548.0
tomfa,"Code and demonstration of the transition from [Django REST Framework](https://www.django-rest-framework.org/) (DRF) to [Graphene-Django](https://docs.graphene-python.org/).

Parts of the documentation of Graphene is currently a bit slim. The purpose of the repository is to show code examples compared against DRF, and help getting started with GraphQL on a Django backend, or transitioning from DRF.

I hope it can be useful, and that it motivates some to go for it. We've liked it very well at our company so far :)

Summary:

* Transition from DRF is surprisingly easy, and is done in quite few lines of code.
* Documentation from Django `help_text` will be reused in schema generated from GraphQL.
* You can reuse existing DRF serializers and validation.
* Addressing authentication and authorization is not a part of GraphQL spec and there's little help in Graphene or documentation about it.
* Graphene performs comparably to DRF even if you have ""ideal"" REST endpoints that avoid overfetching.",1543105258.0
,[deleted],1543123152.0
pancakeses,"Why aren't you just creating an actual form with the ModelChoiceField, and then passing that in the view?

Something like (untested, but should be right):

forms.py

    class ClassificationForm(forms.Form):
        classification = forms.ModelChoiceField(queryset=Classification.objects.all()) 


views.py

    from .forms import ClassificationForm, PairForm

    class NewPairFormView(View):
        def get(self, request, term_count): 
            classification_form = ClassificationForm(prefix='classification')
            pairs = formset_factory(PairForm, extra=term_count, prefix='pairs') 

            return render(request, 'new_pair_formset.html', {'formset':pairs, 'classification':classification_form})

When using multiple forms/formsets in a single view, you'll want to use [prefix](https://docs.djangoproject.com/en/2.1/ref/forms/api/#prefixes-for-forms) to help django distinguish one from another. Make sure you also use the same prefixes in the post method of your view class. Also, by creating an actual form, you get to use the great feature of field cleaning afforded by forms.


Now you should be good in your template:

    <h1> New Pair Form </h1>

    <form method='post' action='create_pair_form'>
        {{ crsf }}
        {{ classification }} # <-- Working, because it's actually a form now!
        
        {% for form in formset %}
            <div>
                {{ form }}
            </div>
        {% endfor %}
        <button type='submit'>Create</button>
    </form>",1543103080.0
Dom4n,"You can create another mixin extending for example `UserPassesTestMixin` (from `contrib.auth.mixins`). Test function can check if user has in session ""`{pk}_detail_access_granted`"", if yes then url can be accessed, if no... override function `handle_no_permission` and return a small page asking for password, with querystring for next page (this can be page pk for example) - check out how this is done in function `redirect_to_login(next, ...)`. If user gives good password for page in querystring then save this information in session and redirect to this page.

Then You can use this mixin in all pages where it is needed.

Maybe You don\`t need to save this info in session, but then after each page reload user must give password again, with information stored in session as long as session exists user can go to given page.",1543080391.0
ThePixelCoder,">I am storing the 'passwords' in plain text in my database.

Don't.",1543236984.0
ramse,"You need to double up `{` and `}` in a string that you plan on using `.format` on where a replacement is not actually happening.


    >>> 'my string {{will not be replaced}} but {this_will}'.format(this_will='replaced!')
    'my string {will not be replaced} but replaced!'
",1543065972.0
dpineo,"What is a ""tag"" in this context?  When someone refers to a tag in the context of Wagtail, I assume they mean [this](http://docs.wagtail.io/en/v2.3/reference/pages/model_recipes.html#tagging).",1543070923.0
lzantal,Which theme is that for Django. Looks very nice. ,1543071821.0
Mekhami,"that depends entirely on what her company wants. digital ocean servers, amazon ec2 instances, a SaaS like Heroku, it depends on what her job wants to pay and manage when your girlfriend leaves and you're not there to maintain it.",1543035865.0
yoongkang,"Good options:

""Can't be bothered, just want to push and deploy"":

* Heroku
* Divio (https://www.divio.com)

""I don't mind mucking around with Linux and nginx"":

* DigitalOcean
* Vultr
* AWS EC2
* AWS LightSail",1543047492.0
zookz42,Serverless AWS Lambda for DRF .. and just S3 static website for the React frontend.,1543061483.0
waybovetherest,if you wanna do it for light weight apps with not much traffic try python anywhere,1543051622.0
whodis123,I like Digital Ocean. Cheapest one is $5/mo,1543039922.0
levnikmyskin,"Have a look at Hetzner cloud servers. Their basic server is pretty cheap and does really well for low/medium traffic websites. Also you get a really nice HTTP api!
Just for the record, archlinux's wiki page is hosted on hetzner if I remember correctly ",1543043377.0
icyfire_,I suggest using heroku. Unlike other cloud solutions you don't need to worry about infrastructure management if you're using heroku. You'll be able to concentrate more on the application. The deploying procedure is as easy as a git push.,1543047352.0
bzsearch,100% heroku. super easy -- the $7 hobby is totally worth it to save time for app development .,1543045745.0
Cictani,"I run my django app on a virtual server with Ubuntu 18.04 installed. I also run other stuff on the virtual, it has 4 cores (xeon 2.3 GHz), 16 GB Ram and 60 GB SSD space. I pay 12.99€ per month for it with unlimited traffic included.

&#x200B;

The provider also offers smaller servers 2 cores, 8 GB, 40 GB SSD is 6.99€ a month also unlimited traffic.

&#x200B;

If you don't need dedicated cores you can get 1 virtual core 2 GB RAM, 20 GB SSD and 40 TB included traffic for 2.99€ a month

I compared it to some of the cloud providers and I was baffled how much you pay there...

&#x200B;",1543049779.0
leros,I run a Django app on a $5 digital ocean VPS. I'm using the Docker setup from the pydanny cookie cutter Django project. It woukd work great for your scale. ,1543076807.0
icyfire_,I agree but I was talking about ease of deployment and management,1543177813.0
igncampa,If you decide to go the VPS route I can share some notes with you to aleviate a some of the headache. In my opinion it's a good learning experience.,1543196036.0
yoongkang,"Hey, thanks for writing this. 

I mostly disagree, and have a few comments. 

> Flexible: No need to store it into the database before checking the invariants (as in overriding save or clean). 

I don't know if I'm misunderstanding you, but that isn't how `clean()` works. The method `clean()` is never called when saving to the database (e.g through `save()`). You can try it yourself, have `clean()` raise an exception. You can save just fine)

The method `clean()` is meant to be called from the Form, usually a `ModelForm`. See the docs for more info: https://docs.djangoproject.com/en/2.1/ref/models/instances/#validating-objects

The form is a perfectly good object to ""know"" the algorithm to validate an object before saving, and the algorithm to validate an object is to call `full_clean()` on a model instance. 

In fact that's what a form object is for! Think about the API of a form -- it's a class with a public method called `is_valid()`. Usually, `is_valid()` is the only method that people have to use (e.g in a view). 

If you don't like that it calls a method on the model, `Form` has a `clean()` method too: https://docs.djangoproject.com/en/2.1/ref/forms/api/#django.forms.Form.clean

You've basically duplicated that responsibility by creating your `TripFactory` object.

By the way `Factory` often has a different meaning to this. I usually reserve `Factory` when I am implementing the factory pattern: https://www.oodesign.com/factory-pattern.html

The factory pattern is usually used in the context of polymorphism (as in, give me the object of the correct type in response to these parameters I give), I don't think it's appropriate naming for something that validates if its attributes are correct.

> Overriding save could work, but you will not be validating the instantiation of the object, only its persistance. You **could** have invalid Trip objects that have not been persisted in the db on your code, breaking the invariants you assume this object always has.

In practice, this very rarely happens, and your solution doesn't even solve this problem.

For example, say I create an unpersisted instance via your `TripFactory` with valid parameters:

```
trip = TripFactory.create(start, end, distance)
```

Ok, then I have application code that simply does this:

```
trip.start = end
trip.end = start
```

See now how your `trip` instance breaks your assumptions too? 

There is no way around this!

The most reliable way is to pass the instance to an object that is responsible for validating an object instance before saving, and that object is a `Form`.

In other words, stick to using `clean()` -- it's what the method is for.

> Can be used from everywhere: I don't care if you use Forms, Serializers or decided to create your own framework to parse user data. Just make sure that the last thing those classes to is to call a TripFactory, and you can feel completely safe your invariants are being kept.

Or you could save a step and just call `is_valid()` on a Form or Serializer. They're both classes that are meant to perform validation.

> Putting the business logic inside Forms or Serializers (for the django-rest people). This works - if and only if you never need to instantiate an object yourself, from your own code and data. That is: if you are sure you will only instantiating Trip from the data your user give you in a request, go ahead. But that is usually not the case, nor is a flexible approach, couples two classes in an unnecessary fashion.

This sounds slightly strange to me. In this case, you are responsible for providing the values you pass to instantiation, not a user request. Why would you need to validate anything? You could simply generate the right values. Can you provide an example?

Also, you do know that you don't need to pass `request.POST` to a form or a serializer right? You could pass any dict too.

IMO, I think you're probably overthinking OO-design concepts.

",1543031265.0
kyerussell,"**TL;DR:** [**https://www.dabapps.com/blog/django-models-and-encapsulation/**](https://www.dabapps.com/blog/django-models-and-encapsulation/) **might give you some good solutions. Have you considered model methods?**

I've been using Django for a little while (3-4 years professionally). I think that your concern is valid for the 'long tail' of larger projects. I deal in a lot of smaller projects, where I think that using `clean()` is still a valid design choice - though it falls over a bit with model relationships.

I first started exploring line of thinking you're describing when I discovered that DRF does not call a model's `full_clean()` before `save()`ing it.

I came across this Stack Overflow thread: [https://stackoverflow.com/a/32836543/729785](https://stackoverflow.com/a/32836543/729785) \- the main (only?) answer is written by the second-highest contributor to Django REST Framework. So whilst it'd be an appeal to authority to trust this person on good Django practices, I do trust them to understand the philosophies behind Django REST Framework. **However, Django REST Framework to my knowledge doesn't make make a big deal of this, and seems to encourage behaviour that's antithetical to the principles outlined in the Stack Overflow post** (though I'm not a huge fan of DRF's docs layout, so I could've missed it).

(I don't think that I fully agree with the author - or more specifically their justification for DRF working this way. The design decision (and as an extension I guess, your suggestion) feels like an extremely opinionated one that runs against practices and patterns outlined in the Django documentation. That is again a bit of an appeal to authority on my part, *and I want to reiterate that I think your concern is valid*. However I think that it's a poor design choice **for default functionality in Django REST Framework** given that it tries to mimic Django in terms of design patterns in pretty much every other way that I can think of. I digress).

The SO answer author (in a comment) references a blog post ([https://www.dabapps.com/blog/django-models-and-encapsulation/](https://www.dabapps.com/blog/django-models-and-encapsulation/)) by who seems to be the main author / contributor of Django REST Framework. Again, it'd be an appeal to authority to blindly trust what's being said, but the author makes the same (compelling) argument that you do, and provides a potential solution and the reasoning for it.

**To summarise the blog post in a sentence: write model methods to accomplish all model creation / mutation and do not otherwise create / mutate models outside of these methods.**

I like that quite a lot.

I don't have much to offer beyond that. As I said, I often cannot justify the extra time to implement this, given the projects that I tend to work on. However, when I can justify it, I have a couple of rules:

* Complex / nameable queries should almost always be implemented as QuerySet methods. The justification is pretty obvious (unit testability, documentability, DRY.etc).
* Model mutation occurs via model methods which perform all necessary validation to ensure data consistency.",1543048792.0
alexandremjacques,"IMHO, if you’re talking about instantiation you should take a serious look at `__init__`. 

It is quite common, not only in Python, having to remember to call `super`. 

But, as the method name says, `init` is where you initialize stuff. It’s there to do that and just that. 

The “magic” happens on `super` and you just need to remember to call it.

:)

",1543053376.0
richardcornish,You might be over thinking this. Why not use a model field validator? https://docs.djangoproject.com/en/2.1/ref/models/fields/#validators,1543080755.0
Mekhami,"You shouldn't be writing these tests. You're testing that django's internal code works, and that's already covered under it's own extensive test suite.",1543004313.0
intrepidev,"I don't know if it's better, but you could try moving the db set up stuff to the class setUp method since the db structure you're testing seems highly related. in the first test you're creating local variables to test, but in the second you're assigning everything as attributes of the object (self.x = ). Something I still struggle with is knowing what to test. Since the relationships and manager's are managed by Django, I'm not sure this is something you would need to test anyway. I'd be interested in someone else's opinion on that.",1543000793.0
yoongkang,"I agree with another poster, don't do this. You're testing Django's internals -- I assure you, Django has enough tests.",1543033441.0
zookz42,Spaghetti ?😉,1542998582.0
Brachamul,"Don't have much time ahead of me, but regarding the auth thing :

If you used Django's ""startproject"", you have password validators, which you can see [here](https://github.com/django/django/blob/master/django/conf/project_template/project_name/settings.py-tpl#L87) in the source code for the startproject template. So your password was too short, and you probably weren't seeing an error message because you didn't give your template a place to put the error messages in.

Yes there is a view for each auth action in Django, but you can use the same template for each of them. The title and form will change, which will work fine. You can also use django-allauth, which will help you a lot, especially if you want to add comments, as it will let people log in with facebook, instagram, twitter, or anything else. You can also use third-party comment services that can just be added to your site as code snippets.",1542990258.0
ge0n1,"I would definitely go learn some foundational stuff. Learn linux well enough to deploy flask and django. Learn git.

&#x200B;

Python is used all over linux they basically grew up together.",1542991793.0
fyeah,"You can't be good at django without understanding  how it works internally.  In order to that, you need to be decent at reading and programming in python.  After that a little server knowledge is extremely helpful.

It sounds like you are missing the foundations of django and python.  Watching a few tutorials and creating your own blog is a huge leap away from making a custom web app.  I highly recommend you come up with a sample project where you're consuming an API from some website and doing something with that data, creating user accounts etc.  Do all of this without using a tutorial and you will learn a lot, which will hopefully help you fill in the gaps when there is poor documentation of a library you want to use.

I hope that helps.",1542993972.0
fractal_engineer,"It sounds like you're trying to hit the ground sprinting and that's generally not a good idea with a framework with a steep learning curve like django.     
I would step away from django before you get discouraged by its complexity and as other have suggested and get some more foundation skills in place. I would follow something like:     
1. Install linux (ubuntu) on a VM. Follow a flask (much simpler python web framework), nginx, gunicorn tutorial [\[here\]](https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-18-04). Make a simple website, nothing involving a database, use python linters and write tests for your code so you develop good habits.   
2. Use git for the project so you get some experience there.      
3. Set your VM up so you can reach the website from your browser on your host OS.   
4. Set up a systemd service for that project site so when you reboot the VM you can always reach your website.   
After all that, and it will take you a few weeks, then start looking into heavier ORM frameworks like django. Personally, I wouldn't touch javascript until you've developed good coding habits. ",1542995334.0
Sonic_Pavilion,"Hi Marcos, fellow Brazilian here. My advice to you is: LEARN English. I'd suggest this to be your number one priority when learning programming. You'll have access to a new wealth of learning material and have better interactions with the community. 

As for studying things other than Django, you need to know what your end goal is. Do you want to make beautiful user interfaces? Learn a front end framework. Do you want better control over your back end? Perhaps learn some SQL, or study deploy strategies with AWS or some other web service provider.",1543012748.0
grouchoboy,"> the majority of the vacancies are for those who have more than 2/3 years of experience, and is practically a back-end expert with basic / intermediate knowledge on the front end

Don't worry much if you don't know everything or don't have a lot of experience. They can require whatever they want, but, if they've posted a job offer is because they don't have anybody who fills the requirements. So, probably they are offering less than the market price. And in that situation or they offer more money or accept that maybe they should lower the requirements.",1542995351.0
d__-__b,"Contrary to what everyone else is saying in here (not that I fully disagree with them)... But I would recommend sticking with it. Every time I hit a road block like this, people would suggest to learn this, that, and everything else under the moon as foundations first. The problem with this approach, if you're like me and many others, is that you'll never get back to your project. Just put in some focus on each little aspect and feature, and it will come together. Focus on learning how each part of Django interacts with each other. If you don't understand how something is working or it feels like magic, then dig into it until you figure out that little part. Repeat this many more times for every issue you experience. Jumping from learning one technology stack to another is an infinite loop where the result is usually never really learning anything.

Maybe check out this book as a reference: [https://www.packtpub.com/application-development/django-2-example](https://www.packtpub.com/application-development/django-2-example)

I read through the first iteration of the book (which you may or may not be able to find as a pdf for free online) and it seems to have been updated recently using Django 2. One of the example projects the book builds is a blog (the first one), and then it goes on to build other projects which eventually covers most of the main and even advanced topics.",1542996704.0
yoongkang,"My two cents:

* Django is just some software that gives you tools to do HTTP and talking to the database (among other things).
* If you understand the HTTP request/response cycle, and understand how databases work, using Django (not even ""learning""), is just a matter of looking up the API to do what you want.
* So, instead of ""learning Django"" per se -- learn a bit about the fundamentals instead, like HTTP, databases, authentication and security (cookies, tokens, hashing, etc). 

",1543017494.0
Horoism,"Learn some programming first. You sound as if you miss ANY basics yet are already thinking of learning Vue. Learn basics. Real basics. Not framework basics, programming basics.",1543020302.0
Azelphur,Step one would be go through [Writing your first Django app](https://docs.djangoproject.com/en/2.1/intro/tutorial01/) - it'll teach you pretty much everything you need to know to achieve what you want.,1542988731.0
max_daddio,"I don't know what your problem is in this specific case, but I can guarantee you that Django is not ""like this"". You've made a mistake in your config somewhere, and you're missing something. Sorry I can't be much more help, but you are are working to your own detriment if you are looking for a bug in Django. The bug is in something you've set up, so you should start there. Good luck.",1542989568.0
fdemmer,"> Why is Django like this?

django is not like this.

do you run locally with DEBUG=True and using the runserver command? 
https://docs.djangoproject.com/en/2.1/howto/static-files/#serving-static-files-during-development

if you are in production make sure something serves the files: https://docs.djangoproject.com/en/2.1/howto/static-files/deployment/
",1542988658.0
NateSmith28,"Everytime I have had an issue like what you describe, it was a problem with the settings file, and it was my fault, not django's. Make sure your apps are in INSTALLED\_APPS. Otherwise it will not find their templates. Other than that, check your settings again.",1543260867.0
ramse,Are you sure the folder structure is identical between both for the static folders? Also does one have `__init__.py` while the other doesn't maybe?,1542986775.0
fdemmer,"serializers define that: https://www.django-rest-framework.org/tutorial/1-serialization/

they can be nested to include data from more than one model: https://www.django-rest-framework.org/api-guide/relations/",1542977838.0
AdventureBuffalo,"Without knowing the specific details, there are a few things you could look at:

* Override some of the base class methods (likely `get_queryset` and `list`) to customize what data you retrieve and how it is formatted (The official documentation on this topic: [https://www.django-rest-framework.org/api-guide/generic-views/#api-reference](https://www.django-rest-framework.org/api-guide/generic-views/#api-reference); some simple examples I used in a website: [https://github.com/studybuffalo/studybuffalo/blob/master/study\_buffalo/rdrhc\_calendar/api/views.py](https://github.com/studybuffalo/studybuffalo/blob/master/study_buffalo/rdrhc_calendar/api/views.py)).
* As noted by u/fdemmer, you could use serializers to retrieve data based on model relations (this would be good if you need to get foreign keys and other related models).",1542983216.0
gsousa92,"I think that i didn't fully understand your question, but i think you have to read the serializers docs.:D",1542982949.0
boyombo,Are you using Django rest framework? Or just returning json from your views?,1542988755.0
booooomba,Just watch/read some Django REST framework videos/blog posts. There are loads of them out there. Just work through them and you're good.,1542977592.0
LeavesEveryGame,"String replacement returns a string, so use `value = value.replace(...)`.",1542962784.0
Mekhami,"your url, in urls.py, says <int:pk>. that means whatever is passed into the url for that value is going to get passed as a keyword argument to its view, in this case views.vote.

your views.vote function does not take any keyword arguments. you need to change the function signature to `def vote(request, pk)` or change the url definition to `path('<int:question_id>', views.vote, name='vote')`",1542942425.0
pancakeses,"Either is just fine. Some people prefer CBV because they tend to be more DRY. FBVs tend to be easier to generate quickly a lot of the time, so some people recommend starting there and refactoring to CBV once it's all working. I use a mix of the two.

Also, questions like this belong in /r/djangolearning- that's why you're getting heavily downvoted. ",1542946241.0
thebatlab,"I usually do CBV for dashboard views, and function-based for API views. My brain is already mostly shut off today, but it tends to be that API calls don't share a lot of logic, and what is shared is generally things I put in decorators. It makes it simpler to follow the logic IMO. With dashboard views, there tends to be a lot going on, and having the request->response flow handled, and being able to take bits by overriding only certain methods along the way has generally proved better than when I did dashboards with FBV.

But as always, YMMV :)",1543002875.0
booooomba,"You can pull all of this out of the database. Should be pretty straight forward. Just filter for whatever you want:

https://docs.djangoproject.com/en/2.1/topics/db/queries/#retrieving-specific-objects-with-filters",1542907868.0
ComfortableMirror1,"Make a database model for [datetime.now](https://datetime.now)() at login, as well as an invoice for spending.",1542934017.0
njancsar,/r/djangolearning,1542907748.0
420Phase_It_Up,I'm glad to see more examples of using Docker with various stacks. It seems like Docker can be very unintuitive when you are first learning about it. This in my mind makes good examples even more valuable. ,1542914938.0
acousticat,Thanks!,1542920505.0
thenoonefromukraine,How does this differ from cookiecutter Django? I do like the inclusion of a make file. Similiar to Pelican. Are make files for python only?,1542929242.0
aeyes,"Suggestion: let make stop run docker-compose stop instead of down

down will clear your volumes so your DB gets lost.",1543111328.0
The_Amp_Walrus,"One thing I've experiemented with recently is splitting the Dockerfile up into two parts:

- a base image that changes rarely [`Dockerfile.base`](https://github.com/AnikaLegal/clerk/blob/master/Dockerfile.base)
- another image that changes frequently [`Dockerfile`](https://github.com/AnikaLegal/clerk/blob/master/Dockerfile)

I'm trying out manually building the base image and pushing it to DockerHub ([script here](https://github.com/AnikaLegal/clerk/blob/master/scripts/build_base_image.sh)), and then all you have to do on your dev machine / build server is pull the ~400MB base image (which is usually faster than building from scratch).

It it goes well I might farm the base image build out to a scheduled job on a build server.
",1543285582.0
igncampa,"If you really went through the book then that's all you need for now.

Learning intermediate/advanced topics without applying them won't get you very far. Start a project. Solve problems as you go. Learn as you go. It's really the only way to break the novice barrier. Plus it's much more engaging and motivating.",1542902728.0
TheDumbfounds,"Haven't read the first two books on Django, but just for your information, I've seen that Django 2 By Example has come out which is a newer version of the first book you've mentioned. The Django docs are always a great resource. I can also highly recommend ""**Two Scoops of Django**"" and ""**Test-Driven Development with Python**"", although the former is more intermediate. A good book for high-level design patterns and a general high-level overview of web development is ""**Django Design Patterns And Best Practices**"". All the best!",1542902788.0
jillesme,Have you tried actually building something? I read 2 scoops but as soon as I started to work on a big Django app things started to click. ,1542906778.0
pancakeses,"Reading a book on football won't get you to the Superbowl (or get the win at your local Turkeybowl). In general, you wont really learn django until you start applying the things you read about.",1542918584.0
,[deleted],1542892154.0
alexandremjacques,"If you have this scenario today, you’ll probably need that in the future for others clients. 

Having that in mind I would go writing a reusable app (like a Django package) with a fixed interface so it could be interchangeable. 

From there, in your build process, just pip install the right app for the right client. 

We did something like that for a company I worked for but, in Java. ",1542916151.0
bartergames,"We're doing something that may give another point of view. 

To change things in the settings.py, we have a file with python code parametrized with jinja2 tags. We also have a custom django command that renders the template file and copies the generated python file in the right folder, becoming the new settings.py.",1542923411.0
pp314159,My channel app is here: https://github.com/pplonski/simple-tasks,1542884116.0
charettes,"`TestCase` classes are wrapped in a transaction (`BEGIN`/`ROLLBACK`) which prevents them from appropriately testing transactional behavior.

One example where `TestCase` wouldn't be appropriate is when testing code using `COMMIT` related code such as [`on_commit` hooks](https://docs.djangoproject.com/en/2.1/topics/db/transactions/#django.db.transaction.on_commit). Because of the transaction and per-test method savepoint wrapping `on_commit` would never be called in a `TestCase`.

Another use of `TransactionTestCase` is when you want to assert data persistence from another process such as a browser communicating with a test server through Selenium. Since the data changes have to be observable from another connection the transaction wrapping trick used by `TestCase` to speed up test execution wouldn't be appropriate.

Long story short you'll want to use `TestCase` in 95% of the cases and only rely on `TransactionTestCase` when explicitly testing transactional behavior. ",1542866812.0
fucktalk,"When you start a database transaction, after running some database queries you can either use ""commit"" to have your changes made to the database, or ""rollback"" to undo your changes. The purpose of the database transaction is to allow you to group together multiple queries and have them either all happen together or not happen.

""TestCase"" uses the database transaction commands to prevent your test from changing the database. It runs your test and then does a rollback. 

But if your test itself uses transactions, you can't use ""TestCase"" because you can't do a transaction within a transaction. ""TransactionTestCase"" will undo the effects of your test by just deleting the data, so it is ok if the test uses a transaction.

If you want to understand the transaction concept better it is probably to look up the documentation for the specific database you're using.
",1542866502.0
abhijeetpal321,"Today I set up a project with graphene and Apollo to connect Django and react. It works really great don't know why is this method so underrated. 

Maybe because Graphql is relatively new but can assure it's the future! ",1542891760.0
glyphack,very complete guide [www.howtographql.com](https://www.howtographql.com) for the stacks you want,1542895021.0
Zoro-Zen,"DjangoCon US channel on youtube has a talk about this subject, I think the DjangoCon Europe has a video about it too.",1542882889.0
sebastianmr6_,"Vote for my, please 🙏",1542845038.0
django_noob,"This may sound harsh, but the app isn't the solution. You need to learn django from the beginning. If you try to find shortcut solutions, it's just going to cause headaches for u down the road. Check out CODINGFORENTREPRENEURS on YouTube for tutorials that will get you what u need to know",1542847370.0
njancsar,/r/djangolearning,1542844126.0
Ken_E_Dangerously,It gets the job done but can be pretty basic. Very doable for a beginner. Start with polls app and djangogirls. Simpleisbetterthancomplex has some good content so does craigderington Google them,1542858407.0
Mekhami,"your 'get_search_results' function shouldn't take a request. it should take a search terms/filters, grab those out of the request and pass them into get_search_results. Otherwise, this is a good way to approach this.",1542826091.0
rockingthecasbah,"Not gonna read through all the comments that have already been posted, but I agree with u/Mekhami. Don't pass the request around.

I prefer to put stuff like this on the model manager, and implement the manager separately. You could also move some of it to the Queryset and implement a custom queryset / manager combo.

    class FoodManager(models.Manager):
    
    	def filter_by_user(self, user):
    		return self.get_queryset().filter(user=user)
    
    	def ranked_search(self, 
    					  rank_by_field, 
    					  rank_by_value, 
    					  filter_names, 
    					  rank_threshold=0.001, 
    					  limit=50,
    					  result_fields=('id', 'quantity', 'grams', 'description'), 
    					  initial_qs=None):
                        # you'd pass in the result of filter_by_user(request.user) here, or any other `Food` qs
    		qs = initial_qs or self.get_queryset()
    
    		return qs.annotate(rank=SearchRank(rank_by_field, rank_by_value))
    			.only(result_fields)
    			.filter(food_group__informal_name__in=filter_names)
    			.filter(rank__gte=rank_threshold)
    			.order_by('-rank')[:limit].values()
    
    	def _put_this_in_above(self):
    		# I've already spent too much time on this and need to get back to my work
    		# Ultimately it's your application and only you have the context and knowledge to make the right decisions
    
    		# That being said..
    	    # I'd find a way to include this in the above, and avoid hitting the database again inside this loop
    	    for result in search_results:
    	    	# list() will get called whenever the result is coerced into JSON, if not sooner... 
    	    	# shouldn't need to force it here 
    	        result['servings'] = list(Servings.objects.filter(
    	            food__pk=result['id']
    	        ).values('quantity', 'grams', 'description'))
    
    class Food(models.Model):
    	objects = FoodManager()
    	# your model here",1542860477.0
fucktalk,"Since get_search_results is searching Foods and returning Foods objects, I would have added it as a method of the Foods model. People may disagree if you want to put all that in the model itself, but that is what I'd usually do.

Also, I might have used prefetch_related('servings_set') on the Foods query to avoid doing 50 separate queries, but I'm not sure if this that would work how I'm imagining. ",1542845064.0
smegbot,"Not going to go over what everyone else said (they are right), but if you want to be really snazzy you might also consider placing that entire def in a class and busting that def up into more bit sized defs, one for each of your action blocks. Add some getters/properties and setter decorators and now you don't have to pass nothing, just set the value in the class before invoking the main method/def

Makes your code much more re-usable and you can conduct even more granular tests if you want, do mock tests, all sorts of cool stuff. That's just general OOP though and nothing intrinsic of python.",1542842243.0
lzantal,Depends on how many places are you going to use the exact same search results function? ,1542845736.0
lasizoillo,">After reading a bit of TwoScoops, and seeing that they reccomend keeping ""business logic"" out of views

I like fat (db)models or even business\_models if there are no persistence, but I've a better advice to you, recommendations are only recommendations, be critical and don't read books as a bible. Sorry, this is tip for a co-worker that after read in TwoScoops or a blog that mixins are a good practice wrote class based views with more than 10 mixins :-O

Be critical with each line of code that you write.

```python
search_terms = request.GET['search_terms'].split(' ')
filter_names = request.GET.getlist('filters[]')
```
What happen if you don't receive a search_terms params? It's correct?

```python
    # build query
    vector = SearchVector('name')
    terms_query = SearchQuery(search_terms[0])

    for term in search_terms[1:]:
        terms_query |= SearchQuery(term)
```
`SearchVector` its a postgresql extension, so your database is no more a commodity and your are getting married with postgresql. It's a problem? If it can you solve it? Many times is better do a MVP with some technology that create backends and compatibility layers for conserve the concept of commodity. Other times be capable to change a technology is better. There are no silver bullets :-(

```python
    search_results = list(
        Foods.objects.annotate(
            rank=SearchRank(vector, terms_query)
        ).filter(
            food_group__informal_name__in=filter_names
        ).filter(rank__gte=0.001).order_by('-rank')[:50].values()
    )
```
Why are you doing a transformation to list? What want you do with `values()`? Why is 50 hard coded? Don't worry about this questions too much. I only want distract you from TwoScoops (sincerily a very great book) recommendations and talk about hard criticism. Said that I give you a hint: ""Query sets are great, don't transform it to silly list"". Thing in this little change to code:

```python
is_ads = ...
fair_rank=SearchRank(vector, terms_query)  # DB is not touched yet
paid_rank=F('paid_weight') * fair_rank
foods_rank = Foods.objects.annotate(
            rank=paid_rank if is_ads else fair_rank
        ).filter(
            food_group__informal_name__in=filter_names
        ).filter(rank__gte=0.001)
# Get 12 or 50 in template, its a presentation thing, not a controller responsability
# Even here DB is not touched
```
ORM allow you compose parts if they are not transformed to list. And yes, refactor to a model manager make easier to reuse this complex query to put paid results in one view and fair results in another. And you can delegete presentation logic to templates too.

```python
    # add servings
    for result in search_results:
        result['servings'] = list(Servings.objects.filter(
            food__pk=result['id']
        ).values('quantity', 'grams', 'description'))

    return search_results
```
How many queries are you doing in this view? 51. Can you reduce the number of queries with select_related or prefetch_related? Use django debug toolbar as TwoScoops recommends.

TwoScoops is the very best book about django, but if you are critic is even better.

Finally:
* Validate well user input in your views.
* Sometimes tech decision are hard. Sometimes is better use DB as a commodity and other times is better use one at 100% of their capabilities.
* Explode ORM possibilities. Use fat models to reuse queries easily. Avoid N+1 problem in your queries.
* Views, also called controllers sometimes, must control who is the better actor for a task. Templates for presentation logic, models for business logic, view for user interaction.
* Be careful with overly sharp phrases like the previous point. Are you sure that having to touch on 4 files to make trivial use cases is a good practice? It will not be a lesser evil to avoid ending with spaghetti code when you mix everything? How many people avoiding the spaghetti code has ended up with a lasagna architecture of too many layers?",1542865398.0
massover,"To test the way the serializer is used along with a view in a put request, use the [test client](https://www.django-rest-framework.org/api-guide/testing/#apiclient) or [request factory](https://www.django-rest-framework.org/api-guide/testing/#apirequestfactory). You can also write a test around the update method itself on the serializer. This is some untested code to get you started!

    class TestIt(TestCase):
        def setUp(self):
            self.user = User.objects.create(
                username='username',
                email='email@example.com'
                ...
            )
    
        def test_serializer_update(self):
            serializer = UserDetailSerializer()
            data = {
                'username': 'changed_username',
                'email': 'changed_email@example.com',
                ...
            }
            serializer.update(self.user, data)
            self.user.refresh_from_db()
            self.assertEqual(self.user.email, 'changed_email@example.com')
            self.assertEqual(self.user.username, 'changed_username')
    
        def test_put_request(self):
            data = {
                'username': 'changed_username',
                'email': 'changed_email@example.com',
                ...
            }
            url = reverse('your-user-url')
            response = self.client.put(url, data)
            self.assertEqual(response.status_code, 200)
            self.user.refresh_from_db()
            self.assertEqual(self.user.email, 'changed_email@example.com')
            self.assertEqual(self.user.username, 'changed_username')
    ",1542822580.0
petsyart,"/u/massover, /u/gddrt_ if it's not too much to ask, could I get some feedback on my serializer tests? I've spent the day writing tests. I used coverage html as a guide for what I needed to test. My test.py and serializers.py are in [this repository](https://github.com/peterzernia/countries/tree/master/api). The coverage report says 94% for serializers. There's not really that much logic, but I just want to make sure I'm doing this correctly. Thanks!",1542892710.0
apreche,You have to urlencode it in the query parameter.,1542817606.0
Brandhor,"https://docs.djangoproject.com/en/2.1/topics/db/multi-db/#automatic-database-routing

also set [managed to false](https://docs.djangoproject.com/en/2.1/ref/models/options/#managed) in the project that is using the other project db",1542797980.0
i_like_trains_a_lot1,"Although it is not required, it can really save you a lot of development time once you get comfortable with it. 

If you are dealing only with CRUD operations and database backed models, DRF fits like a glove and it will save you a lot of time.

I was developing at some moment such an application and I was spending 10% of time writing the backend with DRF and 90% of the time writing the frontend.",1542788666.0
EpokeWeb,Someone has a good demo project with reactjs and DRF?  ,1542807563.0
makavelixx,"Well DRF is okay, but for simple CRUDs you most likely do not need it (necessarily).

I'd definitely recommend you to build a REST API instead of using Django Templates if you want to go for React, though",1542792372.0
yoongkang,"1. No.

2. Yes, if your API is RESTful.

If you're building a GraphQL API, DRF isn't useful. 

Don't know what GraphQL is? Then use DRF.",1543029597.0
enesimo,I tend to (try to) follow django news and I had no idea this was going on in the background.,1542791621.0
rackmountrambo,Things like this make me really miss Malcolm. There are still parts of the ORM that only he really understands the mechanicals without investigating it for hours.,1542831311.0
oliw,"Telling your users that the community maintenance is failing can cut two ways. It can either spur them onto take up more of the slack... Or you can labour the point and make it sound so bloody depressing, a task so insurmountable that we start looking for other frameworks.

I don't think I was the only dev here who read the intro and thought about what I'll be using for my next project. Which in itself is silly because Django is awesome. There are some things that really need to be pulled in and embraced tightly (looking at you, Channels and async) but it is and will remain viable as-is for years to come... I've been using Django for 12 years but reading that really made me worry. 

Moreover, I think I disagree with the recommendations. Removing status levels just gives people less progression within the community. It's nice (albeit petty) when a community can recognise and reward you with a title. You might not use it, but people look up to it.

There are certainly things identified here that need to be helped along, but you can make the commit process more friendly (omfg throw Trac into the sea), encourage women into the project, and all the other stuff without removing django-core.",1542833266.0
,[deleted],1542800885.0
alexandremjacques,"I would export the data you need on the network database to the cloud one and work solely from there. 

Just make a routine/cron job/task that runs after the data update locally and send this data to the cloud database. 

Than you can create whatever tool you need: Rest API, Django page or whatever suits your skills to expose that data. 
",1542799629.0
Mekhami,Did you try googling Django Graphene??,1542773606.0
yoongkang,"You really need to give an example.

> Currently, I have a generic product offering table (abstract class) that consists of a many-to-many relationship called objects with an object table. 

That sounds like a recipe for sadness, because the convention is that `objects` refers to the model's manager. 

> A product offering can consist of many different objects, and an object can be part of multiple different product offerings.

I suggest a naming change, since this is confusing. `ProductOffering` is fine, but `ProductBundle` is clearer. Don't use `Object`, use `Item`.

> I will have multiple different products that all extend the product offering table. One such product (let's say Product A) requires that the objects associated with it be split into one of 4 different categories. How should I model this?

I don't think you should model this differently at all. 

Currently, here's what I think your model definition is: A `ProductBundle` will have a m2m relationship with `Item`, and each `Item` has a m2m relationship to `Category`.

One of the concrete `ProductBundle` classes has a special requirement that each item needs to belong to exactly one `Category`.

Is that correct?

If so, what you need is to put custom *validation* on your `ProductBundle` model, not extend the model fields.",1542754070.0
JaredOzzy,Have a diagram? Not understanding exactly what you are describing. ,1542752028.0
bifoot,"A bit confusing, giving an example would probably help. Also, can you clarify what are the existing models? Is Category a separate model? If yes, would adding an M2M between ProductA & Category, and an FK from Object to Category help?

And the relationship named objects is a bit ambiguous IMO - could end up being really confusing at some point.",1542754227.0
youlleatitandlikeit,"The `annotate` and `aggregate` methods on Django querysets provide this functionality; documentation is available on [Django's documentation on Aggregation](https://docs.djangoproject.com/en/2.1/topics/db/aggregation/).

So what you might be doing might look something like:

    TimeEntry.objects.aggregate(
        total_regular_hours=models.Sum('regular_hours'),
        total_overtime_hours=models.Sum('overtime_hours'),
        total_doubletime_hours=models.Sum('doubletime_hours')
    )

And total by job and category:

    timeentry_report = TimeEntry.objects.values('job__pk', 'category__pk').annotate(
        total_regular_hours=models.Sum('regular_hours'),
        total_overtime_hours=models.Sum('overtime_hours'),
        total_doubletime_hours=models.Sum('doubletime_hours')
    )

Hopefully this should point you in the right direction.    

Note that in order to do the aggregation, you will have to group by category and job, which means grouping by their IDs. Then you would pull the matching categories and jobs from the database.

You could do something like this:
    
    jobs = Job.objects.filter(pk__in=[rr['job__pk'] for rr in timeentry_report])
    job_index = { job.pk: job for job in jobs }
    categories = Category.objects.filter(pk__in=[rr['category__pk'] for rr in timeentry_report])
    category_index = { category.pk: category for category in categories }

Then, to generate the final report:

    final_report = [dict(job=job_index[rr.pop('job__pk')], category=category_index[rr.pop('category__pk')], **rr) for rr in timeentry_report]

",1542748930.0
booooomba,Please post your view,1542747620.0
Vitrivius,"Write a custom middleware class.  
[https://stackoverflow.com/a/16523260/1977847](https://stackoverflow.com/a/16523260/1977847)",1542717419.0
Soupinmyfly,"Just add the @login_required decorator to all your views. 

Don't try over think or over engineer it.",1542716496.0
adamcharming,"I would seriously consider delegating password protection of the entire site to be done by your server, usually Apache or Nginx. They’re well documented and supported and there’s less chance of messing it up.

However if you have a requirement to password protect the entire site in python due to some limitation I’d investigate wrapping all the views in  urls.py with a decorator, or wrapping the urlpatterns themselves if possible.
However the bad thing about this approach is it won’t stop static files or media being served, unlike the sever config change that will stop this content being served",1542719263.0
randlet,I use [django-stronghold](https://github.com/mgrouchy/django-stronghold) in most of my projects and it works well for me.  I prefer this to sprinkling @login_required everywhere.,1542724062.0
yoongkang,"Use LoginRequiredMixin in a base view and have every view inherit from it.

The other way is using the decorator, but if you're going that way you should put decorate the view in urls.py rather than in the views definition. That helps to catch things you've missed.

You could also write middleware.",1542752254.0
tastycat,You can do Basic HTTP Authentication with NGINX - https://www.howtoforge.com/tutorial/basic-http-authentication-with-nginx/,1542716398.0
Brachamul,"Hi, I had a go at your issue, tell me if this works for you.

Interface you end up with : [https://i.imgur.com/mBmQsfx.png](https://i.imgur.com/mBmQsfx.png)

**models.py**

    class Task(models.Model):
    	pass
    
    
    class InstructionWindow(models.Model):
    
    	text = models.TextField()
    	task = models.ForeignKey(Task, on_delete=models.CASCADE)
    	position = models.CharField(max_length=2, choices=(
    			('00', 'intro'),
    			('01', 'block 1'),
    			('02', 'block 2'),
    			('03', 'block 3'),
    			('04', 'block 4'),
    			('05', 'block 5'),
    			('06', 'block 6'),
    			('08', 'block 8'),
    			('09', 'block 9'),
    			('10', 'block 10'),
    			('XX', 'outro'),
    			))
    
    	class Meta:
    		unique_together = (""task"", ""position"")
    		ordering = ['position', ]

**admin.py**

	class InstructionWindowInline(admin.TabularInline):
		model = InstructionWindow
		list_display = ('text', )
		extra = 0

	class TaskAdmin(admin.ModelAdmin):
		model = Task
		inlines = [InstructionWindowInline, ]

	admin.site.register(Task, TaskAdmin)

Fairly simple implementation, though the number of blocks is limited, which may or may not be suitable to your needs.

The automatic ordering is pretty handy, and you can add some JS magic in the admin if you want a drag and drop interface instead.",1542713140.0
i_like_trains_a_lot1,I think the admin interface is too limited for your needs and you will spend more time tweaking it than implementing it from scratch.,1542710407.0
Mekhami,"I think the correct assembly of models here is:

Task
  Intro : FK to Instruction Window
  Outro: FK to Instruction Window

Block
  Task: FK to Task

Instruction Window
  Block: Optional FK to block
  Content: whatever your content is

You get a task's blocks by task.block_set.all, you get a block's windows by block.instruction_window_set.all etc.",1542729858.0
MarsupialMole,Look up static files in Django to serve your Json file,1542700807.0
,[deleted],1542684408.0
never_safe_for_life,"You say it froze: how many rows are there and how long did you wait? It's probably just still processing.

Froze is usually a good sign. If there were a problem it would raise an error. ",1542684942.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/postgresql] [How to clear rows in a table?](https://www.reddit.com/r/PostgreSQL/comments/9yo6bp/how_to_clear_rows_in_a_table/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1542684399.0
JediJediBinks,"> Again it froze.

Check your server. ",1542685097.0
daxaxelrod,"Hi! [Give this a shot.](https://django-qr-code.readthedocs.io/en/latest/pages/README.html#installation) You can set up the qr config in your view and then embedd the data you want the user to have (be it a URL or some kind of code). You can then use Django's email apis to send rendered emails. Note that if you are sending some kind of code instead of a URL, you're going to want to hash it so people can't game your product :)",1542683440.0
pemboa,"1. Generate code that will be used for QR and store
2. Generate the QR code
3. Add QR code to a PDF
4. Attach PDF to email.
",1542750589.0
Bishonen_88,"without any example code, we cannot 6th sense what exactly you've written. Either post your code or better yet, link to a github or something.",1542666278.0
Lacon1c,Do you have privilege on your system? Are you running on administrative mode?,1542666958.0
quackmeister,"RTFM!

https://docs.djangoproject.com/en/2.1/ref/contrib/admin/

It's really easy to add sections based on your models & combine various models into single views using the InlineModelAdmin class. You can obviously edit any of the templates/CSS provided as well. ",1542666130.0
theWyzzerd,"It's all available in django, so you can do whatever you want with it.  Generally speaking it is better to extend Django-admin than it is to modify it, and Django makes doing so pretty easy right out of the gate.",1542663693.0
JackiePuppet_,"Check this out. You can override admin templates (like any other Django Template)

[https://docs.djangoproject.com/en/dev/ref/contrib/admin/#overriding-admin-templates](https://docs.djangoproject.com/en/dev/ref/contrib/admin/#overriding-admin-templates)

&#x200B;",1542669471.0
geosoco,"You can fully customize it, but the extent to which it's easily doable depends on what you want to change. There's a number of packages that basically add new skins and some new functionality ([grappelli](https://django-grappelli.readthedocs.io/en/latest/) is one of those). You can also add custom links and stuff pretty easily. 

If you're looking for custom filters or custom templates by model, that is described [in the docs](https://docs.djangoproject.com/en/2.1/ref/contrib/admin/). ",1542663835.0
,Just curious: Why would you want to?,1542665794.0
zettabyte,"It's easy to get swept up in ""\[X\] is taking over the world!"" talk, so I wouldn't sweat that too much.  Where X is Node, Go, latest functional language du jour, etc.

There is no question that Javascript is the most common language on the planet.  Every web page, save the most modest, uses it in some form.  No matter your back-end platform, if you're developing for the web, you're using your back-end language + Javascript.

Python has been steadily growing over the last 10 years, and is often listed in the Top 5 languages.   Django is pretty popular /within/ Python circles, but it's far from what I would call ""common"" in the job market.  If nothing else, Python will be a great tool in your toolbox, and will give you an ideal job to look for.

However, if your concern is largely towards the availability of jobs, and you're willing to be a front-end developer, you will never want for work as a Javascript programmer.  If you want to sling Javascript on the backend, I would wager that is a harder gig to find. 

If you want to work back-end and you want a plethora of jobs to choose from, learn PHP, C#, or Java.  There are many of those out there.  And with the amount of systems built on those over the last decade+, you'll have plenty of jobs to look at.

&#x200B;

And as apreche says, focus on the principles and core concepts of programming and the web stack.  If I'm going to hire a developer, I would much prefer someone with web stack experience first, and my language second.  Learning Python is a heck of a lot easier than learning \[DB + ORM + App Framework + Web Server + HTML + JS & Framework + CSS\].",1542663418.0
apreche,"If you actually learn the core concepts of programming and web development, you should be able to switch easily between languages and frameworks. I've been working in Django for years, but I am entirely confident I can build a site with Rails or Node after just reading a bit of documentation. 

Think of it like this. Imagine if someone said they learned Google Chrome, but somehow they didn't have any clue how to browse the web with Safari or IE or Firefox. If someone says they can drive a Ford, but not a Chevy, that person probably doesn't really know how to drive at all.",1542661517.0
yoongkang,"Don't predict the future. You'll lose.

Python and Django are both heavily used today. There is no evidence that's changing. However, this is highly dependent on your location, so you should check your local job market to see if anyone uses it.

JavaScript on the frontend and NodeJS are both really good things to learn as well, and you are likely to use them (especially frontend JavaScript). ",1542678960.0
aeyes,"What's cool about Python is: You can build a backend for your large site with it, you can build a GUI application with it, you can write a script for automating some server task with it, you can do data analysis or machine learning with it. No other language has such broad use-cases throughout the whole industry.

Frameworks tend to come and go and Django has been around for so long that it still has and will keep a strong standing. It is still a top choice for starting a new Python project.

In general, Python isn't first choice if you are looking for a job as a backend developer even though it is gaining traction.",1542679757.0
tibb,"Python is a great place to start, and yeah there are plenty of jobs in python/django.",1542680463.0
Rodkor,apreche is right. I remember picking up Node after 8 or 9 months of experience with Django and being able to build a serious application within hours.,1542662777.0
gsousa92,"Even if you won´t work with another language besides js, that doesn´t mean you don't need to learn them. I've been working with Django/JS (full-stack) for a while now, and I came from low-level languages (HDL, C, etc). The fact of learning another languages was important, because when you learn different mechanisms and paradigms, you\`ll see the problems (and solutions) in a different way, and that was my strongest point. Even if i took some time in the beggining going around the documentation, i could deliver elegant and efficient solutions. ",1542672899.0
japanfrog,"What no one has mentioned yet, is that your choice of language and/or framework means little when it comes to getting a job as a web developer. You need to demonstrate a good understanding of CS principles and a general understanding of Web related processes. 

You are competing for the same job someone has spent 4+ years learning the fundamentals of, and probably has a few years already of some internship experience.

Once you actually get experience, build your portfolio. The easiest way is to contribute to open source projects. Usually there is a list of issues that you can contribute towards fixing. Even if your code isn’t perfect, someone will come along and help. You also gain team working experience that is expected by any web development company.

The same still applies if you choose to become a contractor instead. My plea for you if you chose to do this is don’t. Your customers might not know whether your skills are up to par or not, and in the end you hurt them by producing non production quality applications.

Aside from that, Django is used by a LOT of companies worldwide. As well as most popular node frameworks and ruby frameworks and etc...",1542677261.0
quackmeister,"You could do that. I'd probably extend the OAuth model or create my own Application model so that I could include other fields/methods in it that weren't relevant to OAuth itself.

Beyond that you can treat it similarly to how you'd handle segregation of User data.",1542666370.0
booooomba,"On mobile but: What’s wrong with the google hits? Found this on page 1: 

https://medium.com/@taranjeet/adding-forms-dynamically-to-a-django-formset-375f1090c2b0

Isn’t that what you want?",1542652297.0
crunching_karma,"I usually use this js tool:

&#x200B;

[https://bitbucket.org/tim\_heap/django-formset-js](https://bitbucket.org/tim_heap/django-formset-js)

&#x200B;

It may require additional tweaking from project to project but is ok as a base to start from.",1542652416.0
booooomba,OR you could just use Wordpress! ;-),1542639361.0
pemboa,Sounds like WordPress.,1542639789.0
scwaffle,"Have you read this:  [docs](https://django-oscar.readthedocs.io/en/releases-1.6/howto/how_to_change_a_url.html)  

",1542641366.0
fuckslavs,"/r/djangolearning 

[websockets](https://channels.readthedocs.io/en/latest/)

",1542625398.0
kraymer,"The logic is that you create object records via async tasks and your html file is the rendering of a template that processes objects obtained via querysets.
So at different times querysets return different results (as new objects have been created from gathered data), and your template get fed with these objects and so the html is updated.",1542626418.0
CodingSnowman,"On first sight, I also immediately thought about Django Channels and Websockets, as others suggest. This is relevant if you want real-time updates without the user having to refresh the page in their browser. However, based on this sentence:

>It seems that once the server starts, it renders the html file and then it wont change.

It seems that you are having trouble getting any updates after starting your server? When your script runs, how does it store the results? In Django, [the view](https://docs.djangoproject.com/en/2.1/intro/tutorial03/) is the part that should gather the data, which is then passed to templates to be rendered as HTML. The view can get this data in many ways, e.g from models via querysets or by calling your script and using the results. The latter might not be the best idea though, if your script takes time to run and returns the same results for every user. Then your approach of running the task in the background is preferred, however you need to store the results somewhere persistent, like model instances or cache, for the view to fetch them when you want to get updated results in HTML.",1542634853.0
mothzilla,The easy way is to have a javascript function that runs on an interval (say every 3 seconds). That function requests data from your django server and injects it into the page (using something like createElement and appendChild),1543876871.0
booooomba,"It's not only a Django question, but also/foremost a JS one. You'll definitely have to be a familiar with JS to solve this. So lots of research coming your way! :-)",1542627066.0
fdemmer,"you just configure the [postgis backend engine](https://docs.djangoproject.com/en/2.1/ref/contrib/gis/tutorial/#configure-settings-py) instead of the normal postgres backend and continue using your database as if nothing changed.

you then can use the geo features in addition to everything you had before. there is no need for a separate database or separate project.",1542624497.0
wtgeographer,"Put simply.

1) on your db.   


CREATE EXTENSION postgis;

2) From application.

Use ajax plus your php/Python server side script to make an st\_envelope query on the DB and return feature collection of geojson objects. Use your mapping library (leaflet or Google) to retrieve bbox SW and NE coordinates of the map view before passing to ajax function.

Some reference...

https://gis.stackexchange.com/questions/131612/postgis-bbox-vs-st-intersects-queries&ved=2ahUKEwjQ\_vzqyuDeAhVLT6wKHcMeCBwQrAIoAjAAegQIBhAO&usg=AOvVaw0HQyl92zy5kMHQf7vG8TVa  
",1542635559.0
max_daddio,"Try something like this:

&#x200B;

{{ date\_object|date:'Y-m-d' }}

&#x200B;

Formatting strings should be in the docs somewhere.

&#x200B;

&#x200B;",1542624172.0
pgeorgiadis,[https://docs.djangoproject.com/el/2.1/ref/templates/builtins/#date](https://docs.djangoproject.com/el/2.1/ref/templates/builtins/#date),1542625011.0
DerTopher,"It might be a bit of a hack, but you could split the string at ""T"" and use the first part",1542630600.0
pylenin,"The most ideal option would be to use a payment provider like Mollie. They will provide you with an API to easily integrate all kinds of payment services using ideal !! To directly get the service from ideal, you have to become a partner first. I don't think you will be eligible. But feel free to let me know if that is not the case.  


[https://www.ideal.nl/en/businesses/](https://www.ideal.nl/en/businesses/)",1542619946.0
nannooo,Ask Stripe if you have issue. I really like Stripe and have used its Ideal payment gate - no problem at all.,1542622718.0
upsettruffles,"Is it the rendered HTML or the Django template? You might want to use a 'safe' filter while printing JSON, like this:

`var n = {{ qrjs|safe }};`",1542571831.0
antgweb,Try look at umap-project on GitHub. This has been implemented in this project.,1542572116.0
daxaxelrod,[Echarts is incredible](https://ecomfe.github.io/echarts-examples/public/index.html),1542572886.0
HopefulCheesecake,"https://www.chartjs.org is free and relatively nice out of the box but the clean and modern piece isn't that great.

https://d3js.org is also free but not as nice out of the box. If you can get a hang of it you can make awesome stuff. A lot of the best data visualizations you see on NYT and other popular media are d3. You can add endless interactions, etc. you just need to figure out how to do it which is the tricky part.",1542565526.0
max_daddio,"Check out Plotly [https://plot.ly/python/](https://plot.ly/python/). We've been using them for our JS and python apps, they're great. Active, open source development with enterprise support if you need it.

&#x200B;

Edit: Sorry, I just saw you tried Plotly/Dash. I also used Dash and don't really like it as it is an embedded React app, basically. But plotly itself is just a plotting library, independent of Dash, so it should do everything you need it to. There just aren't really any better free alternatives, tbh.",1542565211.0
vallejooo,"[https://bokeh.pydata.org/en/latest/](https://bokeh.pydata.org/en/latest/) \- ticks all your boxes, is easy to use, I love it",1542572770.0
pkkid,"Non-free for commercial use, but highcharts is my go to chart library. But damn, when I bought it years ago it was $80. Now its $1500! If this is a personal project, its free.

It should be noted that if aesthetics is what you're after, you should be ignoring the demo charts, as everything mentioned in this thread is pretty much fully customizable, so you can make it look however pretty you want aside from how the charts look on their site.",1542572690.0
demestav,"If you working with large time series, check out [dygraphs](http://dygraphs.com/). It was designed to handle large datasets and it is really snappy. I couldn't find another library to match the performance of dygraphs.",1542576147.0
synw_,"[Altair](https://github.com/altair-viz/altair) rocks:  it's built on the Vega Lite grammar of graphics. I would also highly recommend [Holoviews](https://github.com/ioam/holoviews), which is a high level wrapper around Bokeh and Matplotlib. 

The great thing with those libs is that they are declarative: you make your charts by annotating your data rather than writing imperative steps. They are python based and generate html with all the js required for the interactivity: easy to use, short code, no js to write, and fully open source. They work very well in notebooks for interactive data exploration or prototyping. 

Shameless plug btw: I made an [api](https://github.com/synw/dataswim) on top of those libs + Seaborn, and a [module](https://github.com/synw/django-chartflo) to distribute charts with Django",1542650120.0
fractal_engineer,"[amcharts](https://www.amcharts.com/demos/) is not free, $140/per site, but is worth the price. The alternative would be to use something like d3, however getting it perfectly customized to suit your needs borders on masochism.     
Whatever route you go down for the charts, you'll ultimately want to use django rest framework DRF to make the serialized endpoints for the charts. Don't use jinja templated views.",1542573121.0
twistdafterdark,"[Chartjs.org](https://www.chartjs.org/) or [D3js.org](https://d3js.org/).

They are both Javascript frameworks for making charts.

With [Chartjs](https://www.chartjs.org/) you can get up and running pretty quickly, however the capabilities/possibilities are somewhat limited. 

 [D3js](https://d3js.org/) is more difficult to wrap your head around, however the possibilities are pretty much limitless in what you can display and interact with. It is not only limited to making plots, you could also draw and make animations with it.",1542576863.0
Amiquus,Take a look at [Apexcharts](https://apexcharts.com/)! Their design is very nice imo,1542625482.0
diek00,"Wiki has a good basic overview of relational databases, I suggest you give it a read. I suggest you then look up the concept of ERD and then get out a piece of paper and pen and create one(there are programs to do this, but paper and pen will serve the purpose)",1542566557.0
bifoot,"Hello.
Models - Theory, Area, Proposition, Cause, Effect

Theory has an FK to Area
Proposition has an FK to Area (Not sure about this relation, can a proposition belong to multiple Areas? In that case, this would be a M2M)
Proposition has an M2M to both Cause and Effect
Cause and Effect both have FKs to Area

A Proposition should be linked to a Cause or Effect only if they have the same Area - this could be a logical check.

Hope this helps.",1542563985.0
wldcordeiro,Just the phrasing of this question suggests that you bit off a lot more than you can chew. ,1542548594.0
oliw,"ParanoidManager should actually be a Queryset. And its delete and undelete methods should call update instead of iterating each record.

",1542528849.0
shobble,"one issue you might also want to consider is what happens when you have a `unique=True` field on your model.

IIRC my eventual solution was to change them all to `unique_together = ('field', 'is_valid')` where `is_valid` is nullable, and set to either True or None.   ",1542532399.0
Gagaro,"Hi I'm the maintainer of django-safedelete.

Thanks for the article, and if you have any questions, you can ask them here :).",1542554731.0
parijath,"I feel I'm still a 'learner' though I've done one working website for stock movements with django 1.8 and now doing another one for ticketing, orders, inventory etc with django 2.1. Your article is clear, concise and straight to the point. I have enjoyed reading it and also learnt a few tricks here and there. Thank you.",1542520890.0
Improvotter,I’m glad to read an article about a project I helped work on (not the maintainer). But I helped revamp some of the inner workings to get a more desired behaviour iirc (it’s been a while).,1542530856.0
nelsonko,"Be careful about soft deletes. It might cause you some problems if you write more complex queries. This applies to the both suggested strategies. Eg union/prefetch etc. As was mention before there is also issue with indexing the data. 

Other solution is to create table with deleted records. This would remove the indexing/query problem. But of course it is hard delete with a copy. ",1542564600.0
yoongkang,"Thanks for sharing, nice article.

I've considered soft deletes in the past, but recently I don't think it works as one would intend. The main reason I think this way is UPDATE.

When you think about it, UPDATE is just DELETE with an INSERT. In many cases that's even worse. So your data is still lost and unless you keep track of when the update happened, you don't even know you've lost data. All of these approaches deal with deletions, but they don't deal with updates, which is the main reason I think they're flawed.

EDIT: I have no idea why this post deserved to be downvoted. Can't we discuss the pros/cons of soft deletes?",1542528943.0
tibb,great article,1542516859.0
booooomba,Post your code. Otherwise we cannot help,1542504203.0
pemboa,Need at least a stack trace.,1542511208.0
fyeah,"It's not hard at all.

use the pure python library called 'subprocess' to call with the parameters that are fed into a view as entered by a user.  you can redirect the results to a file or something if you want to capture them and parse them",1542495402.0
BuyHighExpire,"Possible? Yes. Python can run shell commands. Dangerous? Depends on how well you design it and cleanse/validate the input.

If its running commands directly on the server, if the username/pw (or whatever auth you use) is compromised, they may be able to escalate to root and have full access of your server. 
  
Probably a pentesters dream. 
  
For example if they dont even care about your program, for the last argument, do a [ falseParamThatWillMakeItFail || echo ""im in"" && sudo rm -rf / ] 

You'd have to take things like that into consideration. ",1542495481.0
Dom4n,"Maybe Wooey can be helpful? [https://wooey.readthedocs.io/en/latest/](https://wooey.readthedocs.io/en/latest/) 

""Wooey is a simple web interface to run command line Python scripts. Think of it as an easy way to get your scripts up on the web for routine data analysis, file processing, or anything else.""

Built on Django and can extend current project too. Makes web GUI from Your script and provides output if needed.

""web portal that builds a script"" - what do You mean here? Some .py files will be changed from withing web app and then You want a button to run it? Like in [repl.it](https://repl.it) ?",1542500798.0
IanHoffman10,"I can’t answer your question re: inputting photos in various places (sounds like a headache), but I can speak to uploading photos asynchronously, as I’ve worked on code to handle that for the production webapp at my job. Essentially our practice is:

- user drags photo into a Django image field;
- image is POSTed to an endpoint via Ajax;
- that endpoint validates the dimensions and then uploads the image to s3;
- returns a unique guid used to identify the image in s3 (you could also use the URL);
- the unique guid is then set as the value of a charfield;
- the unique guid is saved (along with the rest of the form data) when the form is synchronously submitted.

Make sense?",1542475032.0
fdemmer,"have you considered wagtail as cms? it provides ""streamfields"" to mix content of different types in one ""post"".",1542475710.0
ramse,"Do you really need to keep track of images uploaded for a posting? Why not just have an endpoint that receives the uploaded image and sends to S3 and then returns the needed url which you then, i'm guessing via javascript of sorts, insert into the text where ever the cursor was?",1542475146.0
alxhghs,This can be done by using a content management system. I have used Django CMS in the past for this,1542458510.0
heo5981,"I've been meaning to start a blog about programming for some time now.

If you think about it, it's not that complicated.

Since I've found about Wagtail, it looks like the perfect choice. 

We create pages with defined fields - heading, paragraph, images, etc - that will be saved to the database. Then we just use templates to display the content in the frontend.

I like Wagtail because it lets me customize, it doesn't seem to have a way to create code snippets natively but I can create a custom way to display it, I define how to save it to structure it and save it the database and how to display it on the frontend. I'm thinking about using Pygments to highlight the syntax.

Once you create your pages, you can easily create new content using Wagtail's built in admin interface.

I wonder if I could also integrate it with DRF to use React for instance, on my frontend. But that's something to look to in the future.

Definitely, take a look at Wagtail or another CMS to create these kind of websites.

",1542476923.0
yoongkang,"Pretty sure that blog is mostly Jekyll:

https://simpleisbetterthancomplex.com/questions/2017/08/03/wordpress-or-self-made-blog.html",1542468286.0
Rodkor,"Mezzanine / Wagtail are the most popular CMS in Django.

&#x200B;

I recommend codingforentrepreneurs' videos too if you are interested in building your own CMS from scratch

[https://www.youtube.com/watch?v=yfgsklK\_yFo&list=PLEsfXFp6DpzQFqfCur9CJ4QnKQTVXUsRy](https://www.youtube.com/watch?v=yfgsklK_yFo&list=PLEsfXFp6DpzQFqfCur9CJ4QnKQTVXUsRy)

&#x200B;

Basically you can build it with any frontend you want but if you are going to use Django it's strongly recommended that you use Rest Framework on the backend.",1542459493.0
shameer_kash,"Going with a CMS is a better option, as have mentioned already. However, In the past while i was coding a blog site, i came across this problem when the site was almost prepared. So, i integrated an editor (Froala Editor) myself using javascript. I still encourage to use a popular CMS because integrating an HTML editor wouldn't really be easy. ",1542468553.0
pancakeses,"Alternatively, just a category model and an article model with a WYSIWYG editor for the article content will work as well. I wanted a simple Knowledgebase for one of my projects, and that's how I approached it. Updates are easy, and everything looks great, and I didn't have to install a full-blown cms package.",1542473424.0
ssekuwanda,"Thanks guys. I honestly thought such sites used markdown, just like medium.",1542480674.0
andytwoods,Thinking you've an Nat gateway issue. My external Internet 'broke' for periods of time in a similar fashion with one of my past apps. I had public and private subnet settings incorrectly set up. Stackoverflow this question and I'll flesh out more details. ,1542447735.0
andytwoods,"Might be worth seeing if it works over a long period of time with * permissions. If not, more likely my suggestion.",1542559461.0
njancsar,If you want to use Class Based Views you will need to use something like: https://github.com/AndrewIngram/django-extra-views to get CreateWithInlinesView,1542429604.0
thebatlab,"I'm sure I'm missing something, because this shouldn't be a common occurrence. It would typically be a very last resort. 

I also don't see a link to any code/repo :)",1542384048.0
krispy2009,But.. where is it ?!,1542383984.0
Investisseur,"Same: https://github.com/modernproject/recreatedb

This is a huge help when dealing with multiple database environments, recreating test data (non fixture), fixing screwed up migrations 

Thanks for posting m8",1542387398.0
njancsar,Why do you constantly have to do this?,1542383011.0
pemboa,Those are rare actions for me.,1542397674.0
gardens_of_slish,"Thanks, I'll be using this pretty soon as I'm just about to switch to a customised User model, which is easiest to do with a DB reset.",1542405506.0
zettabyte,"I like to do this with production db copies, when the project's DB is on the smaller side.  Basically automated \`scp\`  and  \`pg\_restore\`.

I add an \`--if-exists\` to the drop statement too, in case the db doesn't exist.  For new machines and such.

And I usually wrap it up inside some Fabric target(s).

&#x200B;

Presumably this is for early development?  You only pick up migrations 1-9....

&#x200B;

&#x200B;",1542395422.0
SHDighan,"Generally, I do this... https://imgur.com/gallery/cAFOwQ3",1542428390.0
yoongkang,That's the wrong way to go IMO. Why not just use `pg_dump` and restore?,1542432137.0
shacker23,"I don't run \*any\* Django projects that don't include \`django-extensions\` as a dependency. And extensions provides \`./manage.py reset\_db\` which does essentially this, so I would consider this somewhat redundant.

On my work project, the production db is massive and we don't want to copy it around. So we have a smart FactoryBoy implementation that sets up a migrated db stocked with reasonable fake data, which is used for both local dev and for testing. I wrap \`reset\_db\` in another shell script that populates the fake data. I run it several times per week.",1542445686.0
virogenesis011,get ready for day 2,1542439659.0
atlbeer,"Yes, always wear a condom with anything you  interact with on the internet",1542387563.0
acdha,"Yes, CloudFlare – it’s usually not doing much but the cost is right and for complex sites it’s useful to have a safeguard against a subcomponent (marketing wants to have WordPress for this landing site…) or something which shows up outside your release cycle, especially if you’re not lavishly staffed.",1542407601.0
fdemmer,"quick look in the sidebar:

> New to Django? Check out the /r/djangolearning subreddit.",1542381825.0
booooomba,"1. Work through the official Django tutorial
2. Check any other topics of interest in Youtube. There are looooooooads of videos about learning Django!",1542382127.0
booooomba,How are you running Django? Looks like it’s being called multiple times ,1542362632.0
DrMaxwellEdison,"For a personal project and knowing what you're inputting, using `|safe` should be... well, safe. :)

Be aware that using `|safe` on content that may be submitted by other users has security implications, as nothing would prevent content containing `<script>` tags from running (of course, JS can be executed from a wide variety of tag attributes, but that's a different story). That is, unless you ensure that all inputs are sanitized before they reach the template to begin with.

Have a look at [bleach](https://bleach.readthedocs.io/en/latest/index.html), which can sanitize HTML input for white-listed tags, attributes, and styles. That should be able to do the heavy lifting for you so you can allow user-submitted HTML content without the security problems.",1542345905.0
rrgrs,"The ""safe"" filter is meant to protect against user input data that could contain malicious HTML and/or Javascript. If it's your own data you're displaying then you're fine, that is if you can trust yourself :P

EDIT: the inverse of what I said is true, use ""safe"" on trusted input. Whoops!",1542345544.0
DabsJeeves,"If you are doing that, you need to make sure the code coming out is safe to use. Which basically means, if any of this code coming out contains input from a user other than yourself, you need to make sure it's totally sanitized before storing it in the database. ",1542345565.0
tastycat,"Wagtail, a Django-based CMS, uses something called [StreamField](http://docs.wagtail.io/en/v2.0/topics/streamfield.html) to allow for discrete chunks of content to be added as the content of a post with a reorderable layout that doesn't require the use of `safe`, but that might be bit much to dive into on your first project.",1542370626.0
pancakeses,"[Django-organizations](https://github.com/bennylope/django-organizations/) does invitations, but that's not its main focus.",1542344359.0
spoetnik,No webapp? Why not just sqlalchemy?,1542314065.0
VanaTallinn,Or peewee maybe?,1542317704.0
krispy2009,Or [PonyORM](https://ponyorm.com) !!,1542319657.0
mischiefunmanagable,do you know it and does it save you more time than learning something from scratch? then do it,1542332912.0
synw_,Or Go for concurrency and speed? With Gorm or Xorm. If you have time to invest in it it's really worth it.,1542375377.0
mroximoron,The difference is in the database where with a 1-on-1 relationship you have an extra table and there is nothing there making it mandatory to have a row for every user in the user table; while by extending the abstractuser your model becomes the definition of a user and there will be only one table where the required fields will be filled.,1542307231.0
meiralins,"Those options are not exclusive. I usually do both of them.  
I always try to follow a simple rule: the user model should handle only Authentication.  


So I inherit from AbstractBaseUser to tweak authentication. ( tbh, I always inherit it even If i don't change a thing)  
And I use a UserProfile in each app ( or a related group of apps) to store information relative to it.  
",1542325874.0
daredevil82,"aside from what's been said, the biggest difference is changing direction mid project.  its a PITA to implement and not a trivial thing to do with an existing project.",1542312741.0
randlet,"You do this in the views and then pass the query set to the template in the context (e.g. `YourModel.objects.filter(type=z)`).  The official Django tutorial is good and you should go through it!

Here's a similar query adapted from the tutorial:

    from django.http import HttpResponse
    from django.template import loader
    
    from .models import Question


    def index(request):
        latest_question_list = Question.objects.filter(pub_date__gte=timezone.now() - timezone.timedelta(days=7))
        template = loader.get_template('polls/index.html')
        context = {
            'latest_question_list': latest_question_list,
        }
        return HttpResponse(template.render(context, request))
",1542306062.0
njancsar,/r/djangolearning,1542326680.0
Nicksil,"It looks like you're trying to implement a [query string](https://en.wikipedia.org/wiki/Query_string).

[`django.http.QueryDict`](https://docs.djangoproject.com/en/2.1/ref/request-response/#django.http.QueryDict)",1542297951.0
SkawPV,"Every week I search for Django in Youtube, filtering by the last week and I found this tutorial. I did all the 25 videos and I enjoyed it, and I subscribed. Good work.",1542284925.0
diek00,"Be prepared for Python questions too. Our Django group has a list of potential questions. I will post it.Note, these questions were gathered from several members.

**Python-specific:**

1. What do you like about Python?
2. What is your favorite Python package (third-party or built in)?
3. Are you familiar with PEP8? Can you explain what it is and why it is helpful? How do you document your code?
4. What is the difference between a \_\_docstring\_\_ and a comment?
5. What is a tuple?
6. What is a list, and why would you use it over a tuple?
7. Have you ever used list comprehensions? If so, can you give an example of a use case?
8. Are you familiar with decorators? If so, can you explain what they are and why/where they would be used?
9. Are you familiar with generators? If so, what is the advantage of using them?
10. How good are with regex?

**Django-specific:**

1. Are you familiar with the term MVC? Can you explain how this is similar to Django?
2. Explain models, views, and templates. How do they work together?
3. Explain the ORM.
4. What is a QuerySet?
5. Explain how to filter QuerySets.
6. Are you familiar with Class-Based Views? What are their advantages/disadvantages?
7. How would I display the variable ""section"" in a django template, assuming that the variable is a string?
8. Explain how MVT differs from traditional MVC.
9. Explain difference between Forms and ModelForms? When you should use which?
10. Describe request object and it's main features.
11. Explain Cross-Site Request Forgery (**CSRF**), and how Django prevents it.
12. Walk me through what happens between when I type the URL into my browser and when the response is rendered. Your answer should be as detailed as possible. 
13. *What is work of middleware and decorators ? What is their difference ?? how you will create these 2 .*
14. *Explain complete process (what happens inside) of models and migrations .*
15. Why is MongoDB a bad choice to use with Django.

**General:**

1. Are you familiar with Git? Explain why it is used\*\*.\*\*",1542250324.0
mischiefunmanagable,"know how gunicorn, nginx/apache, and wsgi work together  
too often I see devs come in for interviews expecting production usage of the django built in server

&#x200B;

know why/how to serve static content outside of django  


know how to use the django ORM, and learn the weaknesses/strengths of it compared to other non-django ORMs, you're stuck with the django one but knowing why is useful

&#x200B;

know how to write a RESTful api, decode/encode json  


know how/why/what to cache into redis/memcached  


and for any of those be able to explain it to your grandma

&#x200B;",1542236222.0
souldeux,"Understand how (and why) to write unit tests.

Many Django jobs these days are looking for backend developers to make an API that their JS-driven frontend can consume. You should be comfortable using Django to return responses containing either rendered templates or data that a JS framework can consume.

Don't forget your interpersonal skills. They're as important as the technical stuff, if not more.",1542235975.0
hachoo,"If you haven't done a lot of technical interviews before, here is some basic advice.  Never be afraid to say that you don't know something.  Technical interviews can be hard, and a lot of times they are just probing to see what you know. If you don't know something, don't BS (it won't work anyway :) and don't get flustered. It's fine.

Talk about what you do know. If they ask you something, and you aren't quite sure, relate it to something you have done and discuss that. Give them the feeling that even if you don't know something, you're the kind of person who would learn it quickly. If this is entry-level, they know you aren't going to know everything already.

Developers are very in demand. Be personable and confident and you will get a job. Maybe this one, maybe the next one.  Good luck.",1542237505.0
SkawPV,"So you're a developer with one project under your belt with experience, looking for your first Django job?

That's nice. I was a developer with no project under my belt, with no experience nor idea what Django was when I got my first Django job. You'll be cool.",1542272900.0
fractal_engineer,"Some fake it till you make it advice: ask some devops questions that hint you're not a rookie. How do you deploy applications? What is your CI/CD pipeline? How do you get the final build artifacts onto your production servers? Do you follow semantic versioning? What are the roll back strategies in production?     
Python wise, study up on when/where you use Threads vs Processes. Caching strategies. ",1542239055.0
simonw,"""a self taught developer with only one real project under my belt"" - don't talk yourself down. Self-taught developers have proven they can learn on their own, which can be a big positive to the right hiring manager (and a critical ongoing skill). Having a real project under your belt means you have something you can talk about in interviews!

Don't should consider this ""a shot in the dark"". You already have desirable skills and experience. Good luck!",1542255169.0
betazoid_one,Make sure you can explain what a “Middleware” is. As well as the whole Request/Response lifecycle,1542235080.0
d0ug,"Are you applying for a position as part of a team? If so, focus on git workflow within the context of a team. My favorite videos (and how I got a job while in a similar position as yourself 3 years ago) were here: https://thoughtbot.com/upcase/videos/git-thoughtbot-git-flow. thoughtbot's language of choice is Ruby, but git workflow and fundamentals transcend language.

I mention this especially because of how lacking I have found devs on my current team to be. It's an underrated skill that can prove to be effective in continuous integration, team management, environment backups, and you can establish yourself as a subject matter expert very quickly.",1542240428.0
igncampa,"Some very good advice in here.

One thing I haven't seen mentioned and that might be relevant (depending on the job description) is writing SQL, specifically querying databases.

As you may know the ORM has its limitations and in specific cases writing raw SQL might better suited. However if you say that you can expect to be asked about the potential security issues of doing so, which is always good to know anyway. Basically just read up on how the ORM peotects against SQL injections and other vulnerabilities. I think the Django docs cover that.

So maybe:

  *  be able to write a simple query using a join
  *  give a hypothetical example of where a raw query might be better than using the ORM
  *  emphasize on being cautious regarding user input
  *  know about common SQL attacks and understand how the ORM provides protection

Maybe a bit too advanced but knowing what indexing is and why it might speed up queries is always good to know.

Don't think too much about it though, Python/Django internals are likely to be much more relevant to your interview.

Good luck!",1542270592.0
JobsHelperBot,"*beep beep* Hi, I'm JobsHelperBot, your friendly neighborhood jobs helper bot! My job in life is to help you with your job search but I'm just 423.4 days old and I'm still learning, so please tell me if I screw up. *boop*

It looks like you're asking about job search advice. But, I'm only ~9% sure of this. Let me know if I'm wrong!

Have you checked out Forbes, LiveCareer, TalentWorks? They've got some great resources:

* https://www.forbes.com/sites/karstenstrauss/2017/03/07/job-hunting-tips-for-2017/#794febea5c12
* https://www.livecareer.com/quintessential/15-job-hunting-tips
* https://talent.works/automate-your-job-search",1542271562.0
igncampa,"Sorry I can't link you but find their Slack in the documentation. Some very knowledgable people in there.

Otherwise u/tomdyson might be able to provide help here.",1542272277.0
tomdyson,"If I've understood you correctly, this might be a relevant example of a custom Wagtail block:

https://github.com/Frojd/wagtail-geo-widget

See also https://github.com/City-of-Helsinki/wagtail-svgmap (I haven't tried this, but it promises image map support for SVGs)

You can also try the Slack channel at https://wagtail.io/slack. Good luck!",1542314432.0
Pilferer,"Yeah, it's detailed in the docs.",1542252648.0
croisus,You'll want to look at setattr [https://www.programiz.com/python-programming/methods/built-in/setattr](https://www.programiz.com/python-programming/methods/built-in/setattr}(setattr)) It lets you set values on objects using strings as keys.,1542222384.0
ramse,"Finally got it.

I started by basically jumping straight into the sessions middleware and instantly found where the failure was coming from. From there reading the documentation I realized what I had done wrong.

Changing a users password, even if its the same password, always invalids all of that particular users sessions across all devices. Because my authentication is based on a 3rd party, I still store a copy of the password used on the django user entry as well as sometimes the 3rd party api takes a nose dive and people can still login to my system.

I was calling `user.set_password(password)` every time the user logged in, not realizing that even if the password doesn't actually change its invaliding the other sessions. I now `user.check_password` before set_password and no more problems!",1542331835.0
athermop,"Usually the way to learn everything about Django (or any programming task/framework/paradigm/whatever) is to build stuff.  Also, you will re-build stuff many times.

You can either start your project or start smaller projects.  Then, when you get stuck, search for answers and solve your problems.  Repeat thousands of times and then you'll be a Django expert.",1542214764.0
jannealien,"Just go for it. 

But when you do, don’t spread the business logic in to different Django apps unless you are absolutely sure they are really independent and can be reused. Just create a single Django app like ”core” and go with it. Then add Django Rest Framework when you feel like it.",1542215822.0
randlet,"If you don't know Python, then learn some Python first. Then, start by going through the Django tutorial.  Then make the absolute simplest version of whatever it is you want to build with Django with as little JS as possible.   Once you have the basics down you can explore doing things with AJAX and potentially an API.

Don't bite off more than you can chew with trying to learn Django, React & REST all at the same time.  Keep it as simple as possible and then make incremental improvements.",1542215077.0
twigboy,"From my experience, don't do it.

It's not worth trading the benefits of a relational database for NoSQL in the long run.",1542223071.0
pancakeses,"If you're getting the json output, it's a javascript issue, not a python/django issue. This is not the correct subreddit for diagnosing javascript. Try /r/jquery or /r/javascript",1542222398.0
betazoid_one,django-rest-auth is supported by Django Rest Framework. Would def recommend for simple streamlined auth/registration workflow,1542234961.0
mroximoron,We use [Djoser](https://github.com/sunscrapers/djoser),1542287427.0
t612j,"For all these features, Django is a good choice. Consider using the Pillow imaging library for all the image stuff.",1542218549.0
toruitas,"I usually create a separate local_settings.py file, then set a conditional in settings.py to load certain settings from local_settings.py depending on if it is present or not (of if a certain environment variable is present or not). Then I hardcode things in local_settings.py that would be set using environment variables in production, usually AWS for me.


You can check out this Gist [here](https://gist.github.com/Toruitas/0ccb453914d94673600d42d0f997a5bc).",1542209596.0
theEmoPenguin,"Whoops, apperantly it's working if i just say order\_\_in instead of order\_set\_\_in.

    Book.objects.filter(order__in=orders)

&#x200B;",1542200171.0
booooomba,"Outlook?

No you will have to use an IMAP client library! Get the new email, parse it, read the body and then just store this in the database. Should be fairly straight forward.",1542191452.0
japanfrog,"I took a peek at your document on the root of your website and I can say that it seems very much like an exercise about getting in the habit of doing exercises. You listed some examples of people that did stuff similar, but the example you list has very little to do with anything that can be called a startup, and more about some generic thing becoming viral. I think the 24 hour exercises are great to learn how to do something, but It is misleading to call it a startup or hint that it has any potential to be something more than what it is (a learning experience) The biggest downside I see with 24 hour exercises as learning experiences is the possibility for short term gratification, and surface level development, meaning you don't become adept at anything.

Don't get me wrong, I think Django is a fine choice for any project, but if you aren't familiar with it you'll be spending most of your day setting up your project and your deployment (unless you already have some workflow process in place). 

I do think that short of you taking absolutely no breaks, and literally be amped up on stimulants, you won't be able to do anything significant with Payments in 24 hours. I'm assuming you are skipping any testing, and that perhaps you are already a pro at any of those items you want to develop.

You post title is also click baity.",1542183017.0
joelschopp,"I've done a 5 day startup and a 48 hour hackathon. Both were good experiences. I think these mini pushes can get you some early momentum that you can build on afterward. Just be realistic with what you plan to accomplish.

Oh, and this is exactly the kind of thing Django was designed for. Later if you want to switch over to a single page app with react you will already have your data model and some idea of the app flow. You can then use Django Rest Framework for the backend through production at scale with the frontend using some 6 month old javascript framework. ",1542187125.0
olivg,This is a good idea to inspire people interested in python/Django programming. Good luck with the livestream,1542182995.0
crackerbiron,"I haven't tried this (still not that quick yet) but I'd be very interested in seeing an edit of your livestream!

&#x200B;

Also, one of the things I sometimes wish some tutorials would explain is not only how to do it a certain way, but why they chose to do it that way. I'm sure there are tutorials that do this, I just haven't come across any yet.",1542183262.0
cnu,"I did a 48-hour hackathon and built a product using flask, bootstrap and very minimal javascript - but that was in 2011. 
I am planning to use the same stack for the 24hrstartup and nervous & excited.

All the best for the weekend. ",1542198780.0
IWGPJapon,link to your stream? ,1542194634.0
NCFlying,Where did you get that image you posted with the stages/phases?,1542201701.0
syi916,I would interested in the edited stream! Good luck to you!,1542213491.0
sol_tex,"I’m curious as to why, in your business model canvas Customer Relationships is labeled as “Unfair Advantage.” I’ve never seen that before. Is the label more meaningful?",1542215512.0
blacwidonsfw,Use a docker project and you will be done in 2 hrs,1542254704.0
privately-profitable,Check out this blog post. It shows how to convert SQL to ORM. https://amitness.com/2018/10/django-orm-for-sql-users/,1542168145.0
yoongkang,"Here's the docs on subqueries: 

https://docs.djangoproject.com/en/2.1/ref/models/expressions/#subquery-expressions

The ORM's API has been extended quite a bit in recent years, but prior to that seeing Raw SQL queries isn't very uncommon (pretty sure we still see it sometimes). SQL injection is only a problem if you build the query string with user input, which you should never do.

I'm having a bit of trouble following the logic, can you post your models (formatted correctly) and the SQL query you want to generate?",1542167422.0
hallman76,"1. Sounds like you're in the ballpark of [aggregates](https://docs.djangoproject.com/en/2.1/topics/db/aggregation/). Have you gone down that route?
2. When I find myself at odds with the ORM it's generally the case that I need to re-frame my question. It can be awkward at first, but the ORM is a really powerful abstraction. 
3. If I run across raw SQL an django code it's usually a ""code smell"" that indicates that the previous dev didn't understand the ORM.  ",1542169579.0
charettes,"Unfortunately the \`Subquery\` API doesn't allow to annotate composite types such as models, only scalar values. Else the following wouldn't work.

&#x200B;

`Store.objects.annotate(`

`max_item=Subquery(`

`Item.objects.filter(`

`store=OuterRef('pk'),  # references outer query's primary key.`

`).order_by('-price')`

`)`

`)`

&#x200B;

Something you could do is annotate the \`max\_item\_id\` and then use \`FilteredRelation\` to filter down the \`items\` relation to it.

`Store.objects.annotate(`

`max_item_pk=Subquery(`

`Item.objects.filter(`

`store=OuterRef('pk'),`

`).order_by('-price').values('pk')[:1]`

`)`

`).annotate(`

`max_items=FilteredRelation('items', Q(items=F('max_item_pk')))`

`)`

&#x200B;

You should be able to access the max item from \`max\_item = store.max\_items.all()\[0\]\`.",1542172608.0
ramse,"What API are you using? Are you sure someone else hasn't already created something?

The callback would just be another view that the remote api can use to send data back to you on.",1542155020.0
askvictor,Here's something I googled in about 10 seconds: https://medium.com/@raiderrobert/how-to-make-a-webhook-receiver-in-django-1ce260f4efff,1542157717.0
kraymer,What is `survey_question` of the error message referring to ?,1542137458.0
krispy2009,A full trace would be useful and also an example of where your Model is used.  For example if you are querying something when the app is being registered or when your module is imported then makemigrations will try to use the new version of the model but the database has not yet been upgraded - hence the error.,1542143943.0
crunching_karma,You have code that goes to db on project initialisation (which should be avoided in most cases).,1542143039.0
zodman,Man put the code in a gist,1542178128.0
mattmc3,"The Admin screens are missing more robust UI elements. For example, a lookup that has a ton of values is tricky - they won't all fit in a dropdown and you likely want to add additional as you go. I typically install admin screen helpers like Salmonella first thing on every new Django project. [https://github.com/devxpy/django-salmonella](https://github.com/devxpy/django-salmonella)",1542121181.0
333rrrsss,Would love if the admin form had a WYSIWYG editor by default.,1542130068.0
eljohnsmith,I would like to see a nice package that allows me to create reports. Not just csv or xls but full pretty pdf reports. ,1542152022.0
mattmc3,"SQL Alchemy support. I understand the origins of Django’s ORM (came before sa, ActiveRecord vs Unit of Work, etc). It’s just frustrating that there’s no support for switching, especially when there’s a query that Django just isn’t well suited for.

Basically, the only time I use Django’s ORM is when I use Django. Otherwise, sa has pretty much won the day. When I use pandas or Flask, it’s my go-to.

I prefer Mako templates over Jinja2 as well, but those are easier to add to a Django project.",1542120491.0
Helg1121,Add wagtail to Django then it’s a more complete base to start out with ,1542130764.0
PlanetCampervan,"Don't want to sound like an asshole here, but this sub isn't really the place for problems you're having with your code. 
This sub is mainly used for Django based news and links.
If you need help debugging problems I suggest you try searching for them and posting them on Stack Overflow.
I also highly recommend the book Two Scoops Of Django to anyone.",1542101595.0
Brandhor,"it's a permission problem, I don't know what user.email_user does but I guess it send and email and save it in the /home/user/Desktop/emails folder which does not exist or the user running the django process doesn't have the permission to access it",1542105599.0
oliw,"Unlike Campervan, I'm more than happy to come off as an arsehole, especially if it makes you a better developer.

Holy balls, let Django (or crispy or whatever) render your forms. You're not doing a good job.

[There is an AJAX recipe](https://django-crispy-forms.readthedocs.io/en/latest/crispy_tag_forms.html#ajax-validation-recipe) but honestly, I prefer fragment rendering. That is submit the form, send back HTML to replace the form. This allows Django/crispy/etc to decorate the fields, inject error messages in the right place. Most of the ""reactivity"" of pure JS, but half the validation work is done for you.",1542118152.0
Zohvek,"Not English and 'Activate Windows'

&#x200B;

Nice.",1542125228.0
spicyone15,awesome exactly what im looking for,1542099041.0
superchink,Link appears to be broken. ,1542124306.0
KimPeek,"Just about any database, including SQLite which doesn't support concurrent writes, can handle 100 users without problem. PostgreSQL and MySQL are good options. I use PostgreSQL for most projects because it is easy to use with Heroku and AWS.",1542094547.0
Fun2badult,"I would go with PostgreSQL since that will be good for long term anyways. I’m a beginner Django dev myself so I don’t know a whole lot but since SQLite is built in and I’ve learned it’s not good for long term production, I would go with PostgreSQL. It’s also good to learn NoSql like MongoDB but I’ve heard PostgreSQL is better and a lot of big companies who went to NoSQL are moving back to PostgreSQL, eg Coinbase, etc",1542094954.0
c9mm9dore,"Use Postgres for your database.  For handling users, you should probably have Nginx + gunicorn to serve up your Django app.  ",1542173749.0
SeanMWalker,"For anyone else searching for this I thought I would come back and mention the reason it was showing up blank. (BTW, with the downvotes, i'm not sure why anyone would come here and ask for help.).

I have a base.html in my templates folder that was blank. In order for the allauth templates to show they all use a block content tag. So in my base.html file I needed to have

{% block content %}
{% endblock %} 

After adding this the allauth templates started working.",1542112899.0
yoongkang,Hard to tell without seeing the code.,1542079852.0
askvictor,"I will make a lot more sense if you go through one of the tutorials (either from the django site, or tango with django, or two scoops of django to name a few) and actually build something from scratch, which will give you an idea of the structure of the project, and how the different parts fit together. ",1542062195.0
askvictor,"The Flask app is the thing your django app will connect to in order to pull some data from. You don't need to understand the linked app, just to run in in order to have your app talk to the API.",1542068575.0
apreche,"If an app is reusable and is going to be a part of many projects, then it should be made into a python package that you can pip install. If an app is part of one and only one project, then just leave it in there.",1542043610.0
fractal_engineer,"if one of the apps has a much different release cadence than the rest of them, it might make sense to break it out too.",1542044241.0
thehardsphere,"The point of using pip is to manage the installation and updates of third-party dependencies for you. So, it depends on what these Django apps are:

If these are apps you wrote as part of your project, then pip should have nothing at all to do with this unless you plan to release these apps later to the entire world in a standalone fashion.

If these are apps someone else wrote, without you altering them, you should probably have pip handle them.

If you are patching apps somebody else wrote, and the somebody else isn't accepting the patches you need to make it work for you, then it makes sense to not have pip manage them anymore. In this case I would pull those in to the normal folder structure and say that I am ""internalizing the dependency"", e.g. I'm treating this code as if it's my own. Because that's basically what you're doing.

I've done this before, for apps that needed patching but I couldn't wait on the maintainer to make an update. The downside is that it adds manual work where you have to keep it up to date. The upside is you know with certainty that the app will not change unless you do it.",1542045970.0
mischiefunmanagable,"your password fields are both name=""password""",1542042366.0
TunaBoo,"Missing some forms..

but I see

    name=""password"" 

On two difference inputs in the html. Likely the names should be password1 and password2. Remember forms get submitted to the backend by NAME not by ID",1542042366.0
BlueSnakeYellowSnake,"In the password input tags of your HTML you have name=""password"" for both inputs. Change those to name=""password1"" and name=""password2"". That is how Django knows what inputs to match to what form fields when validating the form.",1542042331.0
NateSmith28,"If you changed the password field names to password1 and password2 like you said, then request.POST still doesn't have those fields. Set a breakpoint and show us the contents of request.POST",1542310409.0
thecal714,"You have the form's `action` set to post. It should be `method`, as `action` specifies the URL to which the form should be submitted.

To be more clear, you want:

    <form method=""POST"" id=""contact-form"" novalidate>
",1542039662.0
youlleatitandlikeit,"You need to see what is happening. The ""right"" way to do this is with a debugger, but you can also get away with just using some print statements.

Then run the code in the shell:

    >> from django.db.contrib.auth import authenticate
    >> authenticate('user@example.com', 'password')

Then sprinkle some print statements throughout your `EmailOrUsernameModelBackend`: check that it's correctly pulling in your record to begin with, check that the ""check_password"" check is being run correctly. See if the get_user function is being called and, if so, what its inputs are when called.

That should tell you what is happening and is a fast solution to narrowing down the problem. It's going to be almost impossible to troubleshoot this from your browser.


    
    from django.conf import settings
    from django.contrib.auth import get_user_model
    
    class EmailOrUsernameModelBackend(object):
    
        def authenticate(self, username=None, password=None):
            print(""EmailOrUsernameModelBackend authenticate called; username="", username, ""password="", password[:3]+'...')
            if '@' in username:
                print(""Using email"")
                kwargs = {'email': username}
            else:
                kwargs = {'username': username}
            try:
                user = get_user_model().objects.get(**kwargs)
            except User.DoesNotExist:
                return None
            else: # move the rest of the logic outside of the ""try"" block
                print(""Found user"", user)
                if user.check_password(password):
                    print(""Password matches"")
                    return user
    
        def get_user(self, username):
            print(""EmailOrUsernameModelBackend get_user called; username="", username)
            try:
                return get_user_model().objects.get(pk=username)
            except get_user_model().DoesNotExist:
                print(""No user found for"", username)
                return None",1542041476.0
DudaFromBrazil,"I Use Django All Auth, learned about it from the awesome Django cookie cutter. You can easily config this and other stuff.",1542066316.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1542035636.0
y0y,"One possible strategy would be to include a `last_modified` timestamp in your model. When you present the form to your user to update the object, the form can send an `if-not-modified-since` HTTP header with that timestamp upon submission. Your controller logic can check if the object has been modified since that timestamp by requesting the current copy from the database and comparing.

If it **has** been modified since the timestamp passed in the header, you can return an [HTTP 412 Precondition Failed](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.13) status code, rejecting the update due to the object being stale. Or, you could employ some deeper logic to to verify if the change is okay even to a stale object. Of course, this is very context specific and may not even be possible. Rejecting the update is the safest strategy.

If it **hasn't** been modified since the timestamp passed in the header, you know you're updating a fresh model. For additional protection, you can include a `WHERE last_modified = :timestamp` clause to your `UPDATE` to ensure atomicity during the `UPDATE`, avoiding the tiny window between your `SELECT` to check the timestamp and the `UPDATE`. If the result of the `UPDATE` is 0 rows, then you can employ the same logic as above for resolving the conflict of the stale object: returning an HTTP status code or automatically merging the data based on some logic for determining if it's safe.

You could also used a shared data store to employ a shared locking strategy for the individual objects being updated.
",1542016164.0
i_like_trains_a_lot1,"To avoid this, you can use either transactions with rollback/retrying if the record was meanwhile modified. But this is time consuming and not 100% foul proof, as you handle this at the application level and need to make some assumptions.

The other method is to use atomic operations as much as possible and let the database worry about concurrent access. Eg. instead of select, instance update and then save, you can perform an update directly and use the select filter as the where clause.",1542007906.0
geosoco,"Not 100% certain, but I don't think Django does much internally about this, and to some extent it may depend on how you have the server set up (# processes) and your database of choice. If you've got a request that changes multiple rows over the call of a single request, and you aren't doing it in a transaction the possibility of a race condition is likely there. Django does provide some transaction support which can help with certain aspects of the problem -- at least with multiple changes within the same request. 

",1542003663.0
umbrellapokedeye,"Assume you will get race conditions. A service that only queries and updates a model is prone to race conditions. Wrap it in a transaction and it will depend on your database and transaction isolation level. 


Use optimistic locking for backoffice / management pages and very unlikely cases (not many users performing the same action at the same time). Pessimistic for more critical / contended operations and welcome to the wonderful world of deadlocks.


You can test race conditions by adding sleep calls (in the example above, between the read and the write) or with load testing (locust.io).
",1542020536.0
never_safe_for_life,"TLDR; databases are amazing and you probably don’t need to worry about this

If multiple people make requests at about the same time, the web server will process them as fast as possible. Each is in a separate thread running your Django app and there’s no guarantee here about ordering. You can assume each will try and finish its work as quickly as possible. These threads will fire off update queries to your database, which guarantees a lot off the bat, as databases are ACID. That means you’re guaranteed that a row will contain the data from the last query executed. 

Now, there’s not much of a problem here. If your app supports multiple people rapidly writing to the same data, the user needs to be wise to the idea that once their request returns they might already have stale data. 

Where you would run into a problem is if one query updates multiple rows/tables and they all need to match. Meaning it’s not ok if person A writers the first record last, but person B writes the second record last. If that’s the case, you would need to build an atomic lock around both queries. ",1542014784.0
angellus,"There are already some great answers here for you issue, but it seems you do not fully understand your issue. So I wanted to give some details on how Django or any similar app works.

Django (and Flask and most other Python based Web frameworks) use something called [WSGI](https://en.wikipedia.org/wiki/Web_Server_Gateway_Interface). As a result, you can use any WSGI server implementation to run the application (uWSGI, gunicorn, and even Apache httpd has a mod for it). When you run using `manage.py runserver` you are not using these server implementations. For `runserver` you are running a single process, which means yes you will not have any concurrence problems. It will run sequentially one after another. However, when you are using a production WSGI server implementation like uWSGI, you often define a number of workers to run. These workers are separate process that can each do their own things, each running your application. It is *roughly* like running `runserver` multiple times (it is a lot more complicated then that). This means it is possible for two users to hits your uWSGI server at the same time and get 2 of the 10 different workers and it would be possible to do the same action at the same time, so yes you would need to account for that type of concurrency. ",1542045484.0
cx11111111,"I too wanted to know about a similar situation.

What about for example, an view which triggers a bunch of model updates followed by filesystem updates? A person creates a new project repo, which needs the model to be created, followed by the creation of a base directory and some copied over configuration files. What if the server happens to go down in the middle of those actions?",1542040112.0
dikamilo,[https://docs.djangoproject.com/en/2.1/ref/models/querysets/#select-for-update](https://docs.djangoproject.com/en/2.1/ref/models/querysets/#select-for-update),1542040776.0
hallman76,">As in, I'm not sure what Django does on its own to handle them.

Django doesn't do anything automatically, but does offer up features that may be helpful, e.g. transaction support, session variables.

>If a single user makes multiple post requests to make changes to a model, will each request be handled one by one sequentially. Or can they happen concurrently.

Most webservers will run multiple worker threads so multiple requests can be processed concurrently. Each request is generally executed in the order it's received in.

>If multiple users make a post request to make changes to the same model instance, will each request be handled one by one sequentially or can they happen concurrently.

Each request will be processed in the order it was received. Unless you implement a `last_modified` strategy suggested by y0y then the last write ""wins"".",1542047976.0
buleria,"Things will happen concurrently. Your app is probably read-mostly anyway, so one of these will do:

 1) a transaction + select_for_update 

 2) an optimistic update, inspect return value, if OK - select to return ""new"" data (if this is feasible - depends on your business logic)

I think 1) is more or less fool-proof, still you need to know what you're doing. Don't worry about locking overhead and such, until you actually hit the wall.
",1542150533.0
crunching_karma,"You absolutely can. Django will make most of the work automatically for you.

&#x200B;

[https://docs.djangoproject.com/en/2.1/howto/legacy-databases/](https://docs.djangoproject.com/en/2.1/howto/legacy-databases/)",1541980480.0
synw_,"> do your model classes have to be the same names as the tables in that database file

Yes. The tables and columns names have to match with the models. Table names are set to `appname_modelname`. 

What I usually do in this situation is to run a notebook in the Django context (with the django-extensions's `shell_plus --notebook` command), read the Sqlite (you can use [Dataset](http://dataset.readthedocs.io/) it's easy, or just sql) and transfer it using the Django orm into the database.
Tip: use `bulk_create` if you have many records and don't want to wait for too long.",1541980984.0
liquidpele,"$100/hour and I’m yours.   I work on security products that use Django and code review all the time.  I do not do pentesting though, if you want that you may want to try /r/netsec ",1541966621.0
MarsupialMole,"The first independent security audits you should be doing are static analysis with safety for CVEs in your dependencies and bandit for antipatterns in your own code.

After that I imagine threat modelling for your target environment would be valuable. It's one thing to say your application is not leaking data, but that's not true in the event that someone threatens to hit you with a $5 wrench in order to make your application leak data. Audits are also out of date unless your app is unmaintained, which is a security red flag anyway. Note that if you're serious about security you need to leave the door open to the idea that your application represents an unacceptable risk and can't be secured. If that's not really an option I would not be spending money on an independent audit.",1541980763.0
Sector_Corrupt,"How would you call messages.success after you've returned the redirect? redirect just returns a response that's a 3xx status code & directs the browser to another page. That needs to be returned for it to take effect because it happens at the client side, and obviously any code after the return isn't going to be run, so effectively there'd be no way to call the success message. 

There's not an easy way in the view code to pass data between multiple request handlers, so messages does that for us instead. You queue up the message by calling .success and it gets sent somewhere, and then you finish the request. On the *next* request the message that was queued up in the request gets added to the context so that the message can be displayed in the next request, which is the successful one after the redirect.

The way you're describing it, it sounds like you want to queue up the success method in the following request, but at that point you need to stick it in the view you're redirecting to and need some sort of market to indicate ""we just came from a succeessful action, add a message"" which is more complex than just queuing it up directly after the successful action and letting it get passed to the next request. ",1541962574.0
di-erz,"It's right. `messages.success`  only add you message to message storage. After redirect, on the rendering of page, django added messages to response context via `django.contrib.messages.context_processors.messages`",1541963259.0
AnderperCooson,"A few observations:

1. Your view is marked CSRF exempt but you're including the CSRF token in the form. [You should give this a read.](https://docs.djangoproject.com/en/2.1/ref/csrf/#ajax)
2. Your model is called `User` but it represents a product? Either your description above is confusing me or your model should probably be called `Product`.
3. You've got a typo in `desscription` in your Model. It should be `description`.

Also, r/djangolearning",1541952756.0
shobble,"unless I'm missing something, the JS syntax for your `$.ajax(...) ` call is invalid, and should be throwing up errors in the browser/devtools console  when it gets called.
Specifically, the `      console.log(name), console.log(description), console.log(price)` bit and maybe `success.function`  as well.

Also, are you sure you mean `name = request.POST.get['name']`? I would have thought eitehr `req.POST['param']` or `req.POST.get('param')` (note the [] for dict access vs teh () for method call)
",1541962177.0
TheoR700,"It looks like you are using HTML forms and Ajax requests, you should look up Django forms. They are seriously way easier than using ajax requests.

https://docs.djangoproject.com/en/2.1/topics/forms/",1541949110.0
cleancole,Use forms with AJAX! They are not mutually exclusive.  The way you are accessing your POST data in the view is sketchy and may or may not work depending on what other packages and middleware you might have installed.,1541951867.0
idiomatik,"Could it be that you are missing""action"" property in form HTML?

You should have something like this:
<form method=""POST"" action=""{% url ""something"" %}"">...</form>",1542010468.0
kraymer,"**Edit: formatting**

It happens on the manager level :

~~~
    class ProductManager(models.Manager):
        def get_queryset(self):
            return super(ProductManager, self).get_queryset().filter(active=True)
    
    class Product(models.Model):
        [...]
        objects = ProductManager()
~~~",1541934638.0
unklphil,"I understand not wanting to change all your `.get()` calls, but for the sake of understandability, I'd strongly suggest adding a `.active()` queryset method.

Your `get` calls would then look like: `Product.objects.active().get()`

From the Zen of Python: _Explicit is better than implicit._",1541944660.0
daredevil82,you might want to check out https://github.com/wq/django-rest-pandas,1541943494.0
Dr_Ironbeard,"I don't use DRF, but my project heavily uses Pandas. I just store data in an HDFStore (which Pandas supports natively, see DataFrame.to_hdf() and pd.read_hdf()), and read when needed. Using MultiIndices and storing as ""table"" format (as opposed to ""fixed"") will allow you to just read portions of your data.

I'm on mobile now, so not expounding as much, but feel free to hit me up with any questions. ",1542676847.0
NewDimension,Did you use any CSS framework? Is this material UI?,1541909319.0
carlio,"Source still has `
    <!-- SEO -->
    <link rel=""canonical"" href=""https://beta.ceiphr.com/"">` - dunno if that is still correct?",1541916693.0
pointyball,"I love the site. I've been working on something similar, so I know your pain. ♥️

It looks great!",1541922566.0
IamATechieNerd,Where are you hosting this?,1541929610.0
karimoff,Neatly organized. Love background raining effect. ,1541948276.0
padjana,"Everything looks very neat and clean! Congrats on publishing your project online and getting your work out there!

If I may nitpick a little about your ceiphr.com website and repository:

* If I'm not mistaken, there is no link towards the homepage if the header nav is collapsed. No big deal though because your current homepage is the same as the project list page, but that might not always be the case. A simple link on the side nav logo will do the trick.

* I'm guessing the `bin/` and `include/` directories come from your Python virtual environment. I would suggest not committing these to version control. There are multiple reasons for this. One is that some scripts use hardcoded paths, which means that the virtual env might not work as expected everywhere if you simply copy or pull it. Besides, it does not contribute directly to the project. A simple and very common workaround consists in listing all your Python dependencies into a requirement file so that you can still reproduce the virtual env easily. More information there: https://pip.pypa.io/en/stable/user_guide/#requirements-files

* Another directory I would keep out of version control is `media/`, your MEDIA_ROOT storing user-uploaded files. One reason is that if those files are modified on your production server (e.g. by an upload through the prod admin), the next `git pull` will raise conflicts, which means you'll either have to stash or push from your production server towards your local environment. A possible workaround consists in committing the media directory but not the files it contains (see https://stackoverflow.com/a/5600673).",1541957489.0
morinonaka,Cut aspiring from your resume and the site. You're not aspiring you ARE a web developer. ,1541959578.0
di-erz,Remove 5th point from start instructions of [https://gitlab.com/ceiphr/eth0](https://gitlab.com/ceiphr/eth0),1541917004.0
goldenhawkes,Looks really slick! Well done :),1541922498.0
itsmegeek,Cool. It looks awesome.,1541923263.0
makavelixx,"I just checked the source code, here are 2 tips:

* you shouldn't use camelCase for your methods if you want to write pythonic code (sortByLevel -> sorty\_by\_level) (see the PEP 8 guidelines)
* instead of sorting your model instances manually, I'd recommend you to use the Django Model API. You will reduce alot code and demonstrate that you know how to use the django models API",1541977739.0
concisecoder,Great job! Looks great. I really like your skills page with confidence/last used. Really neat way to present that information.,1541907455.0
GTpyro,Very nice! It looks super sharp!! ,1541911243.0
new_day_yo,This is amazing. thanks for sharing!,1541909152.0
keyboardsoldier,You don't need a django backend for this. It can be done all in Javascript frontend.,1541905065.0
booooomba,"In Django you'll need to refresh the page. There's also a REST framework, but if your use case is the only use case you have, you might want to look at a pure JS framework.",1541903501.0
furyfred,"Did you open a github issue or just complain here? If all you did was complain here,that's mean to the maintainers.",1541870790.0
Ociden,Could you develop the card counter into an anything counter? So people can easily change it to say Pokemon cards or other collectables?,1541856579.0
SHDighan,"Procatinator, but it plays only acid rock songs and uses deep neural learning to transmogrify the gifs.",1541861027.0
Ramast,"Good idea for providing different serializers for different actions (create, list, update, ..).

Why this function is written like that?

    def get_serializer_class(self):
        ser = self.serializer_class_map.get(self.action, None)
        self.serializer_class = ser or self.serializer_class
        return super().get_serializer_class()

instead of

    def get_serializer_class(self):
        return self.serializer_class_map.get(self.action, self.serializer_class)

Also could you please clarify a little bit what does `options` and `initialize_request` function implementation does?

Thank you for sharing the code",1541865490.0
SauronsUnderpants,"I don't know geodjango, but it seems like the obvious way would be to check if x_min > x_max, in that case the box crosses the anti meridian.

If it does, divide the dB query into two boxes one between x_min and the anti meridian and one between the anti meridian and x_max and combine the results.

If you need to handle the north or south pole though... Good luck. :) ",1541837516.0
njancsar,/r/djangolearning,1541807340.0
DudaFromBrazil,"Reverse Will evaluate and render the URL with the given url name and the arguments you provide. Redirect will... redirect to a new url, usually generated with the reverse function, Wich returns a string. You can also do like return redirect(""my-non-existing-url"") and get a 404",1541802444.0
pemboa,">  know that Framework needs your code and it transforms into the Python language.

Unless you mis-wrote this, that's definitely not what a framework does.",1541792461.0
caffodian,"If you keep going through the tutorial, the next paragraph or so explains how the function is called (and answers a few more of your questions.) :) 

&#x200B;

Going deeper, if you're curious about how view functions work and why request is a parameter, you can check out the section on views here:  [https://docs.djangoproject.com/en/2.1/topics/http/views/](https://docs.djangoproject.com/en/2.1/topics/http/views/) ",1541791027.0
jeffsays,Are you familiar with python or HTTP in general?,1541791003.0
ramse,"I've got a feeling you're in the same space I was when I started. I came from PHP, writing actual php files and all my urls ended at a php file (i didn't bother with rewriting urls..etc).

* The request comes into django
* django obtains the url from the request `/users/login/`
* using regex or however your `urls.py` are written, it then matches the url in the request to a match `urls.py` path
* your `urls.py` will then have a link to the function to be called for that particular url.

In my example I used `/users/login/`. As I have an app within my project called users, my main project level urls looks like:

    url('^users/$', include('users.urls'))

This tells django that any request url that starts with /users/ is to be passed onto the users app version of urls.py

In my users/urls.py i'll then have:

    from . import views

    urlpatterns = [
        url('^login/$', views.login),
    ]

Because when you're within an app, the original part of the request url that matched the projects url pattern is stripped off so now `/users/login`/ is just `login/`. And then here we're telling it that when `login/` is matched, display the `views.login` method. You don't add the () because adding () causes the function to actually run versus just assigning it to be run when the match happens.",1541805599.0
dikamilo,"django request-response cycle

[https://qph.fs.quoracdn.net/main-qimg-586989d5f6a1160d70d00b989137f2e3](https://qph.fs.quoracdn.net/main-qimg-586989d5f6a1160d70d00b989137f2e3)",1541791853.0
c0un7d0wn,[https://www.youtube.com/watch?v=Lwp73bSaplo](https://www.youtube.com/watch?v=Lwp73bSaplo),1541791919.0
fares_siouane,"1.the function called when a user #request a url which is related to that view...
2.you have to use request as a argument for your view to call it and make it return something to the user (in your case its just a httpresponse with a msg)
3.django knows that with  django.http which is a http module and responsible of http requests and response ..
..........
A user does a crud or surfing action (tyres to reach /admin  )that would send a #request through  your main urls.py   which gonna check for the correct view and call which gonna send a #response to that user...
Was that understood?   ",1541793859.0
CKreuzberger,"Don't learn Django as your first web framework. It has so much things built-in that you wouldn't expect, and especially if you haven't dealth with web frameworks at all, you won't get what they do.

I recommend that you take a look at flask first: http://flask.pocoo.org/

It has many of the features that you will see in Django, but it is very lightweight. It's easy to start with, and you can transition to django at a later point.

",1541791345.0
kurosikucinggemuk,"I find it funny to see Admin being compared with Wagtail and DRF.

If Admin is sufficient for your need, it could seriously cut down work. This is however, compared to vanilla Django (CBV/FBV, forms, and html template).

If what you're looking for is a CMS or a backend API, then even the vanilla Django won't be the right tool for the job.",1541802662.0
searchingfortao,I've used Jet and Suit heavily.  I can't recommend either of them.  I'm also pretty sure Jet is abandonware.,1541811707.0
jamesf510,I never touch the Django admin. I recently have been using Wagtail CMS. I love it. ,1541785371.0
FunDeckHermit,"I am using a minor improvement: 

* [Django bootstrap Admin](https://github.com/douglasmiranda/django-admin-bootstrap)
   * [This specific fork](https://github.com/douglasmiranda/django-admin-bootstrap/pull/128) to enable sidebar customization ",1541783006.0
pkkid,I feel like an odd duck as I stopped using the Django Admin all together and always enable Django Rest Framework for my projects. It forces me to create a nice Rest API for all my models; which leads to a nice separation of frontend client vs backend data gathering.,1541782840.0
versesane,Relevant link [https://github.com/originalankur/awesome-django-admin](https://github.com/originalankur/awesome-django-admin) ,1541960033.0
daneah,This is the talk version of [the slides I previously posted](https://speakerdeck.com/daneah/serverless-django-with-zappa-djangoconus-2018)! I hope it's helpful :),1541793897.0
booooomba,"nginx + gunicorn (as a systemd service) + PostgreSQL + Python + virtualenv

That's the easiest and also the best way at the same time.

IMHO of course! ;-)",1541764454.0
nannooo,Dokku. Love it.,1541765821.0
NewDimension,Sounds like you want a dependent field https://simpleisbetterthancomplex.com/tutorial/2018/01/29/how-to-implement-dependent-or-chained-dropdown-list-with-django.html,1541776616.0
urkh_,"You can do it with an additional model, with something like

id | object_id | options | active

where you options field is an ArrayField with the available options for that fk",1541769225.0
ublike,I mean this is r/Django and while I’ve never seen it referenced I’m pretty sure this project is named after him. A month or so a go I found an obscure clue that leads me to believe that. Anyone know if that’s true?,1541761250.0
FeatheryAsshole,"Manual is more work than automated, which means you think you're doing less work, when it's actually MORE. 

While writing tests might be too much overhead when you can fit all of the required debug output into a single quarter tile of your display, it quickly becomes a lot of work once you exceed that.",1541742675.0
ubernostrum,"Anything I write for work, or for distribution on PyPI, has tests, has coverage metrics (more as a canary than as a guide to quality -- I check test quality manually), and has a policy of refusing patches unless they include tests for any bugfixes or new features.",1541745408.0
earthwormdude,I write Rest API and write tests for every function and view. Years of experience have taught me you'll always miss something with manual testing. Especially when your doing maintenance work. ,1541763817.0
SkawPV,"I actually do, but I'm so lazy that I want to do even more testing",1541761429.0
BurgaGalti,"Plenty, but then my job title is ""Software Tester"" even though half of what I do is develop test automation tools & Django sites.

They've caught plenty of stupid, subtle, mistakes over the years.",1541769190.0
Rodkor,"I try to have decent coverage in all my projects, even if you are a CRUD master you will catch subtle mistakes from time to time. If you care about code quality you should write plenty of tests.",1541774652.0
njancsar,What is the best tutorial / documentation that you have found for writing and running tests?,1541779372.0
bzsearch,Anything that you will manually test more than once usually signifies a need for tests. ,1541877657.0
shacker23,"I used to wonder the same thing. Now I can't imagine life without rigorous tests. It partly depends on the number of people on your team - if it's just you, you probably know the whole codebase inside out and can anticipate the ramifications of any given change. If there's more than one person and you've ""specialized"" in one area, you need tests to make sure you don't unintentionally break code elsewhere. 

And it depends on the complexity of your codebase. If you're just doing default Django stuff without much custom python, there probably isn't much risk. But if you have custom code that reflects complex business rules, you NEED tests. Lots of them. The more business rules, the more tests you need. 

I'm amazed that I got as far as I did in software without testing. Now I wouldn't work on a codebase that didn't treat tests as first class citizens. Just yesterday I wrote some python in which I had high confidence. All of the view functions appeared to work. Then I wrote tests for them and was surprised to find a  broken usage case. My mistake? I should have written the tests FIRST to establish the expected outcome, then the python methods SECOND (I should have been doing TDD). 

Write tests. Even if you're working solo. Even if they're simple at first. At the very least, test that every expected URL in your project responds without crashing. Develop good habits. You'll thank yourself later.

&#x200B;",1541924613.0
sPENKMAn,Yes but to be fair I only test my models and functions the expected output. Haven’t actually tested my forms or other webpage content.,1541748459.0
devxpy,"Meet Gary.

https://www.youtube.com/watch?v=RAxiiRPHS9k",1541779333.0
sentyaev,"Test always. I'm trying to do TDD, but I'm not strong enough in TDD, so do it only 50% of the time for now, but trying go do it more and more.
On my current job we have more that 80% coverage, and our codebase hundreds of thousands lines of code.",1541803531.0
Oriphiel1,"We do in the past, but the APP change every week that test become impossible, need to rewrite half of them, so we stopped written test.",1541784059.0
,"if you know the code well enough you shouldn't need to test the fact that crypto is better than fiat for payment gateways, but then, who would trust a server to do that for them..?",1541826937.0
alexandremjacques,"Have you created a Custom User extending AbstractBaseUser? 

If so, it’s normal that your user doesn’t appear anymore. You”ll have to add it manually to your admin.py:

admin.site.register(<your custom user class>)",1541758938.0
njancsar,/r/djangolearning,1541718208.0
iKenshu,What should I **MUST** see? ,1541734605.0
devxpy,Where is Russel Keith Magee's talk??,1541741441.0
ghostofgbt,"Welp, guess I know what I'm spending my weekend doing!",1541730532.0
jillesme,Damn it's really cool of them to make all talks available for free,1541757896.0
jaushman,Here’s a link to the playlist: https://www.youtube.com/playlist?list=PL2NFhrDSOxgW5tKoKmUyuubsbTfRgvT6z,1541768228.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1541713796.0
CKreuzberger,"Do you have django debug toolbar activated? This seems to have a bad impact on performance under certain conditions.

Other then that, make sure that you have no debugging/logging active with regards to django deprecation warnings.

Also, let us know some more details about your setup (webserver, os, python version, python packages, ...) to dig deeper.",1541713319.0
hip_modernism,"Here's a weird way to come at this, but consider signing up for a new relic APM trial account. You can just cancel after the trial is up.

I've had the experience where new relic has been able to surface things for me I would never have seen otherwise (even via Django Debug Toolbar). It can break down the whole page load in pretty good detail. It will explain if a particular sql query has a problem (like a missing index) etc.

It can also catch out of band stuff to the page load, something debug tool bar can't, like if you are using celery tasks queues or similar.

Consider it!",1541714491.0
Brandhor,"I never used silk but it's normal for profiling to make things slower, I would try to run both versions on the same hardware and then profile both of them to find where's the difference",1541714885.0
meeb,"I've had quite a few people ask about how they should use [django-distill](https://github.com/mgrp/django-distill), particularly with continuous deployment. This is an example blog that shows how you could use it to automatically deploy your static Django site every time you make content changes and do a push.",1541699837.0
iBlag,This is working as designed. Dig into the docs on Django templates a bit more - they are intentionally restrictive to try to avoid the n+1 scenario.,1541715517.0
pancakeses,"Here are a few cursory recommendations after looking through your post:

I wouldn't recommend using csrf_exempt on a form that creates new users. Is there a particular reason you are manually disabling cross site forgery protection in this view & url?

Also, in your urls.py, you can stick with path. No need to import both url and path.

    from django.contrib import admin
    from django.urls import path
    from testapp import views
    from django.views.decorators.csrf import csrf_exempt

    urlpatterns = [
        path('admin/', admin.site.urls),
        path('', views.index),
        path('user/create/', csrf_exempt(views.create_user), name='create_user')
    ]


Then in your javascript you can do:

    url:""{% url 'create_user' %}"",

Now, if you change the url pattern for the create_user view, you only have to make that change in urls.py and it will reflect in the template.",1541699965.0
Phalelashvili,"default HTML form doesn't make post requests, it makes get request, in your case, on the very same page, add onsubmit=""return false"" attribute to form so it doesn't execute it's default action, if it doesn't work, turn your code into function and use

<form onsubmit=""yourFunction(); return false"">        


&#x200B;",1541699278.0
Stanulilic,"    <form id=""new_user_form"">

have you tried putting a method on the form?

     <form id=""new_user_form"" method=""post"">
     </form>
",1541700007.0
GoochRash,"Is ajax adding the trailing slash on the URL? ""/user/create"" should produce a 404 since Django is expecting ""/user/create/"". Add an error callback to the ajax call to check if any errors are being returned.",1541700698.0
dkeeper09,"Have you tried:

&#x200B;

 `name = request.POST.get('name')`

&#x200B;

&#x200B;",1541702800.0
Nicksil,"Are there any projects being returned from the query in the first place?

also look into setting logging to DEBUG to look for any exceptions caught during rendering.",1541691378.0
upsettruffles,"Have you checked, if the query parameter (pk) is an integer?

 `project = get_object_or_404(Project, pk=int(pk))`",1541692927.0
demestav,Maybe it has something to do with the filtering by published date. Do you fill in the date when creating an object? Try to remove that from the view querystring and see if it works.,1541693551.0
pancakeses,"One thing that's easy to do is to print the queryset into the template. Somewhere outside the loop (in fact, temporarily remove the entire loop), just add {{ projects }} and see what you get. Should list out the returned queryset results. If that's empty, your template isn't the issue.

Likewise, within the loop get rid of the current content and replace with {{ project }} to print out each project object.

These may give you insight into what's happening, and will show what context the template has access to for your projects queryset.

Last, try using id rather than pk in your url. I seem to remember having a similar problem that was resolved in this way.

<a href=""{% url 'project_detail' pk=project.id %}"">",1541696226.0
,[deleted],1541704268.0
pkkid,"I tend to make my debug line like the code below, so I never accidentally deploy DEBUG=True. I suppose a check in my ansible script might also be a good idea. The other idea is to use a local\_settings.py and only put the DEBUG=True in there; just make sure you remember to add local\_settings to the .gitignore.

    import platform
    HOSTNAME = platform.node()
    DEBUG = HOSTNAME in ['home-pc', 'dev-pc']

Another thing I do is have a secrets.py settings file where all my secrets go which is also not commited.",1541709539.0
bachkhois,"You want it powerful but don't want to give it enough power source (battery), that is unfair.

Raspberry Pi 3 with 4-core ARM is already powerful enough for your kind of app. My Django app is running on a BeagleBone Black with only 1 core. The most resource consumption is from InfluxDB, installed on the same board.",1541679130.0
strange-humor,"UDOO X86 variants.

Or just go to an Intel NUC.  I run two of these are servers due to the low power consumption for home lab.  Just make sure to get a battery that is 5 times as big to run it.

RPi 3 B has the max RAM supported by the SoC used.  I'm running tons of custom software and hardware connected to RPi 3s and using about 50% RAM.  There is enough to do tons of work on this device.   But RAM does become the limiting factor over CPU.  ",1541682217.0
Helg1121,"The UDOO X86... the Pi I always wanted it to be.

[https://www.udoo.org/udoo-x86/](https://www.udoo.org/udoo-x86/)",1541692213.0
k6aus,"I’ve been running Django on a tinkerboard S - 2 GB ram and 16 GB onboard eMMC storage. MicroSDD cars expansion slot. Works well. I haven’t really hit it hard with anything though.

https://www.asus.com/us/Single-Board-Computer/Tinker-Board-S/",1541697621.0
powerwizard,"You might have reasons against this but have you considered just using a cheap-ish laptop? They're built for power efficiency, battery included AND a charging system so you don't have to rig something together. The screen and keyboard are also an asset for seeing the system status and debugging the wifi connectivity of the other devices.

I'm sure you can figure something out with a rpy style single board computer or an NUC, and battery packs, chargers, etc, but I can't personally see a way it would be more effective than a $500 laptop. I guess you'd have to either use a USB LoRa interface or use wifi based arduino if the range is adequate for your needs. The laptop could potentially be your wifi AP and you could get rid of that router as well. A tablet could also work and it might be easier to tack on battery packs but I'm not certain there would be a good way to run Django.",1541704339.0
di-erz,Odroid?,1541843950.0
tyroneslothtrop,"It's `put(url, data, config)`. You're passing the last two arguments in the wrong order.",1541678375.0
CodingSnowman,"Depending on which kind of actions you want to log, I would suggest looking through these Django Packages grids:

If you want to store changes made to model instances, one of these auditing and model history packages might be useful: [https://djangopackages.org/grids/g/model-audit/](https://djangopackages.org/grids/g/model-audit/). Keep in mind what you want to achieve and how much data you're working with, because some of these solutions might become very data-heavy very quickly.

If you want to store user actions outside the scope of a single model instance change, take a look at these logging packages: [https://djangopackages.org/grids/g/logging/](https://djangopackages.org/grids/g/logging/). Again, some of these might not fit your use case, but some look quite promising.

And you always have the option to just create a log model, where you store the user, timestamp, the log message and perhaps an event type, and just create these model instances whenever needed (form posts, model saves etc).",1541672756.0
andrey_shipilov,Looks like wrong sub.,1541667125.0
efxhoy,Hold up. You're planning on hosting medical records on an external drive in a home made system on an rpi and an external USB drive? ,1541631873.0
strange-humor," I've much preferred setups with nginx over apache on the RPi.   Easier to configure and deal with for a single site.  Although, I've primarily been using Flask instead of Django, as I didn't require the extra functionality for the 20 or so embedded installs I did.",1541628226.0
rincewind123,"What type of database are you using? (PostgreSQL, MySQL, sqlite)?",1541620576.0
vixter55,"So you are going to boot from the SD card but just use the HD for the database and other data?  

I just set up a system where it boots from the HD and there is no SD card after initial setup.   You have to boot from the SD card and do a special command.  Also when you boot from the hard drive, it is now a boot drive and has to be mounted in a special way in order to see the files if the drive is connected to another computer.
",1541641061.0
vinyasmusic,"Hey, just a suggestion.

Start with a small client/user which will help you iron out issues especially major security related or performance related. In time you will be confident enough for bigger ones and the product will be in a better shape.",1541650074.0
alexandremjacques,"While not Django related, take a look at http://hospitalrun.io/

It’s an open source solution for this kind of work. It’s lighter than running a full python server. ",1541685121.0
pancakeses,"You want a custom [context processor](https://docs.djangoproject.com/en/2.1/ref/templates/api/#writing-your-own-context-processors)

Something like this:

    from .models import Posts
    
    def latest_posts_context(request):
        context = Posts.objects.order_by('-posted_date)[:10]
        
        return {'latest_posts': context}
        

Make sure you specify the location of the **latest_posts_context** context processor in your settings. Now latest_posts context is available throughout the site for any template.",1541548637.0
NateSmith28,If you are thinking that you need to include the sidebar in multiple places then there may be room for some refactoring to remove redundancy. Have a template that includes that sidebar and then all of those ones that need the sidebar can extend from it.,1541543947.0
pancakeses,"You're only processing the files in your view, and doing nothing with the actual FieldEvaluation object instance. You should be able to do something like this (untested, just writing from memory so it may not work as-is, but something similar should):

    class FieldEvaluationView(CreateView):
        model = FieldEvaluation
        form_class = FieldEvaluationForm
        template_name = 'QA.html'
        success_url = '?success'

        def get_object(self, **kwargs):
            # Don't remember if you'll need to override this method
            self.field_evaluation = super(FieldEvaluationView, self).get_object()
            return self.field_evaluation

        def post(self, request, *args, **kwargs):
            self.object = self.get_object()
            form_class = self.get_form_class()
            form = self.get_form(form_class)
            files = request.FILES.getlist('attachments')
            if form.is_valid():
                for f in files:
                    FA_Attachments.objects.create(
                        image=f, field_evaluation=self.object)
                return self.form_valid(form)
            else:
                return self.form_invalid(form)

---

Also, looks like you're misunderstanding ForeignKeys. Not sure what 'order' is supposed to be, but that field is not what the ForeignKey in FA_Attachments uses to attach to FieldEvaluation. It's wanting to use the FieldEvaluation.id. So when you do this:

    field_evaluations = request.POST.get('order')

You're telling the ORM that the ForeignKey to FieldEvaluation should be a string from your CharField, but since the ORM is expecting a FieldEvaluation instance and NOT a string, it kind of freaks out.

That's what

    Cannot assign ""'test'"": ""FA_Attachments.field_evaluation"" must be a ""FieldEvaluation"" instance.

is telling you. You tried to pass the string ""test"", but your ForeignKey needs a FieldEvaluation object instance.",1541552627.0
TheoR700,Do you have a domain for your API? If you move the API to run on a different server then you just change the IP of the server your domain points to and then your Mobile App is just using the domain of your API.,1541536780.0
duckseasonfire,"Are you speaking in regards to moving to a different provider?  Stand up a new environment, and change over your dns/load balancer settings.

Obviously you would need downtime or a synchronized environment if you are going to be moving the data and application.",1541536859.0
NateSmith28,"In your project\_detail function you send a context with a ""project"" variable defined. In your detail template you are referencing ""Project.picture"" instead of ""project.picture"". That might be it. Also I think you want the src to be ""project.picture.url"".",1541544700.0
Penguinverse,so you're not getting a 404 when you try to look at a project_detail?,1541545044.0
PawelDecowski,"You need to restructure your template so that `if` tag is inside the `block` tag.

`block` tags are processed without any regard for containing `if` tags.",1541517444.0
hachoo,"For point #1, I think that is expected.  ""If"" statements have no affect on whether a block is rendered.

[https://stackoverflow.com/questions/12088222/calling-block-inside-an-if-condition-django-template](https://stackoverflow.com/questions/12088222/calling-block-inside-an-if-condition-django-template)

So, in your case, your fclass block will always be ""fixed-bottom"" if ""posts"" is empty or not.",1541515948.0
Mekhami,"you don't have an 'if' block, you have a for block. if you don't want the things inside that block to render if there are no posts, use a {% if posts %} block.",1541513406.0
pkkid,"There is another option surprisingly not mentioned here. Postgres and MySQL already include an estimate of table rows which is very useful for large tables. They are estimates, but good enough for an admin page. Maybe add a few pages at the end with proper error handling to make sure you're not missing anything.

* Postgres - You can use the [stats collector or vacuum stats](https://www.citusdata.com/blog/2016/10/12/count-performance/).
* MySQL - You can use the [information\_schema](https://dba.stackexchange.com/questions/151769/mysql-difference-between-using-count-and-information-schema-tables-for-coun).
* SQLite - Shouldn't really be used for large tables anyway.. :P

They also say they don't want to throw accuracy out the window, but are completely happy showing a page count of 9999999 anytime the query takes over 200ms?!? I also thought it was weird the writer simply wrote off the idea of caching simply because they considered it ""boring and unimaginative""?  Not the type of attitude we hire at our workplace, but to each their own.",1541514407.0
kraymer,"Good original content, a nice optimization backed up with data ! Thanks for that, I archive a trello card with that link for the day I'll optimize our admin pages.",1541498366.0
devxpy,"Oh man, I wonder what Instagram has to deal with!",1541533108.0
mimi89999,"Why do you absolutely want to avoid caching? You just need to invalidate the cache when an element is added or removed. If you don't have a dozen places where this might happen, it should be feasible.",1541510625.0
searchingfortao,"This is a problem that's typically solved with multiple app servers and a load balancer.  If you only want one app server though, you might be able to rig Nginx in front of your container proxying to your container on port `x`, then spin up your new container on port `y`, then reconfigure Nginx to point to port `y`and reload Nginx.

It's a big pain in the ass though, and if you consider that many deploys involve database migrations that necessitate downtime, your resources are probably better spent making downtime less painful for your users.",1541490128.0
dailytentacle,"If you’re using docker, consider using kubernetes to manage your docker deployments. With kubernetes, when you do an update, one of the options is for rolling updates where new instances will be brought up (and old instances killed) in stages. This prevents any downtime on the web server side. Things are a little more complicated when a migration is needed. ",1541491658.0
davvblack,"If downtime really matters, you can't host on just one server.  If downtime doesn't really matter, downtime doesn't really matter.",1541483936.0
KarlSayle,Have you looked into Dokku? (http://dokku.viewdocs.io/dokku/),1541499871.0
Grelek,"When you use any Docker orchestrator (be it Swarm or Kubernetes), it allows you to do rolling updates which fire up containers of new images and kill the old ones.

Swarm is fine for small projects or even small companies and easier to get up and running than Kubernetes. Kubernetes on the other hand offer much more configurability and options in general.",1541506035.0
pemboa,I'm curious as to why you dockerized if you're running a simple single VPS.,1541486526.0
charettes,Not sure which version of `django-filter` you are using but a simple solution could be to override your `FilterSet`'s subclass `__init__` to call `super()` and then set `self.queryset = self.queryset.none() if not self.is_bound`.,1541459129.0
booooomba,"Haha, someone's not happy :-)

Just do it in the WSL. Don't you have Windows 10?",1541439977.0
threeminutemonta,"If you use the enterprisedb installer of PostgreSQL you need to stay around for the stack builder part of the installer and check postgis. Only then can you create the extension.

Alternatively I had some luck with using  docker on MAC OS for postgis locally as long as I used -v for volume when using the docker run command. If I didn’t every time I rebooted I lost my data. The following docker repo uses postgres and installs the postgis extension. It also uses 5433 as the port as I had a local install that used the default port

```
cd /Users/threeminutemonta/Downloads/playpen
git clone https://github.com/appropriate/docker-postgis.git
cd docker-postgis/11-2.5/alpine
docker build -t alpine-pg11-postgis2.5 .
docker run -p 5433:5432 -v /Users/threeminutemonta/Downloads/postgresql-11/data:/var/lib/postgresql/data alpine-pg11-postgis2.5
```

Edit formatting
",1541446106.0
pemboa,"> on windows for dev

Why must you torture yourself. Learning a new programming framework is difficult enough.",1541470361.0
yoongkang,"Hi, I'm a developer who uses Django for a living. 

My 2 cents: Don't learn ""Django"" or ""Flask"". They're just tools. Learn how the web, server, and databases work. Use whatever tool you need, Flask, Django, Rails, Laravel, or even none of them, in order to understand how the web works. 

By that I mean things like HTTP, web servers, relational databases, authentication/security. Think of all the frameworks you mention as just stuff that gives you tools to do HTTP and talk to the database.

That means, once you learn those things, using a web framework is simply looking up the bits in order to achieve HTTP + talk to the database.
",1541456132.0
volkandkaya,Try https://tutorial.djangogirls.org/en/ first. Also I recommend Django over Flask.,1541439825.0
JediJediBinks,"Yes. Just keep in mind these things take time. 

I'd recommend going through the tutorial a couple of times until the basics click. Mozilla also has a good library app tutorial. Personally I learn by pulling down existing projects and playing around with them.

Good luck.",1541445682.0
RolandBuendia,"I do think it is worth sticking around. Just like you, I had a hard time at the beginning. The whole new paradigm of inversion of control can be quite tough to get. But, once you get through it, you will be very thankful for all the things Django does for you.",1541432628.0
c9mm9dore,"Python is a high-level, general purpose language... so there are lot of things you can do with it besides web frameworks.  As far as web frameworks go, Django is a decent one to use at the beginning.  In my professional life I picked this framework to handle a couple projects with inexperienced programmers and it worked out well.  ",1541436890.0
TommyRabetian,Stick to Django. You'll get it over time. you have to do some of the tutorials on Django web site more than once and eventually you'll see that everything is syncing in your head!,1541442642.0
booooomba,Can you give an example URL from the Rest API? Why can't you just use that as a link. I don't quite understand the problem here.,1541418748.0
Niicodemus,"Follow the example in the docs for [generating CSV files](https://docs.djangoproject.com/en/2.1/howto/outputting-csv/), but instead of creating the CSV, download it with `requests` and send it to the client. The important bits of the header are covered there. If it's a large file, then stream it as they also cover there. In this way your view will basically just be a middle man.",1541431443.0
haloweenek,Nginx proxy pass or proxy the request in django view. ,1541436831.0
brtt3000,"Methods that do a query should by convention on the models QuerySet or Manager, not as method on the model class.",1541416247.0
HisAwesomeness,">  Google-like search field

Finally a django addon that collects my data and sells it to third parties. On a more serious note: ""has a search box"" should definitely not be the only criterion for you to label something google-like.",1541448868.0
pkkid,"I don't get the hate from others here. He's simply providing a clean interface to specify columns and criteria to filter down a list of results. This is not full-text search, this is more akin to something like Bugzilla advanced search (or filtering for a better term). I wrote something similar that we use very heavily in our company's internal dashboard and even on our product. So I have a few questions and recommendations. I personally love the single input approach as opposed to the many checkboxes and options approach, so I'm commenting on only that.

* I think you may get less flack if you use the term filtering instead of searching. There seem to be a lot of passionate people who say ""You are doing it wrong"", maybe this term will help them understand better? ¯\\\_(ツ)\_/¯
* The documentation directory is empty; needs more documentation obviously.
* I found in my use that people often wanted to look for 'contains' or 'exact' matches. Do you support both in the single input syntax? The syntax I ended up using was ':' for contains and '=' for exact matches.
* I like that you support `parenthesis`, `and` and `or`; I had trouble parsing all that out cleaning in quick n' dirty implementation. Where if the code you used to parse this syntax?
* Is there a reason at all to require the keyword `and` though, seems like that one can be implied if absent.
* Not sure you support it or not, but I always find the excludes option very handy. Something like `-title:cats` to remove all cat books.
* How are you handing datetime input? One really nice package I have used in  the past is timelib, it has a function that lets you enter strings like `yesterday` or `two days ago` and gives back a proper datetime that can be used in the query.
* Datetimes often got tricky in my implementation because people often would provide a single datetime, but they really meant it to be a date range. For example, they would enter stings like `purchased:yesterday` or `signup:June`. I had to write some special code to catch these implied ranges and convert them to start and end times.
* Do you support number fields with `>`, `>=` etc? I actually had to take that a step further and provide an option to provide a compare function to the Search class for complex comparisons such as build numbers where I wanted to search `build>=10.4-123`.
* How are you handling `null` and `blank` values? Can I input something like `author:None`, `author:null`, `author:`, `author:""""`?
* For all that is holy, use the multiplication symbol × for the close icon instead of the big X in your UI. :D
* What do you mean by *""JSON-based search exhausts what Django's ORM can do so it does not return a Django QuerySet.""* What could you not do with the Django ORM that required you not return a proper queryset?

FWIW: Here is my [not as well polished implementation](https://github.com/pkkid/pushingkarma/blob/master/pk/utils/search.py). -- To use it, you provide the `Search` class a base queryset, a fields value (where you define the searchable fields and their types, and the search string, which looks similar to your search string without and, or, or parens.

    # Define which fields are searchable
    NOTESEARCHFIELDS = {
        'title': SearchField(FIELDTYPES.STR, 'title'),
        'body': SearchField(FIELDTYPES.STR, 'body'),
        'tags': SearchField(FIELDTYPES.STR, 'tags'),
    }
    
    # searchstr could be something like: title:fubar body:""Hello World""
    searchstr = request.GET.get('search')        # Get searchstr from GET args
    notes = Note.objects.order_by('-modified')   # start with a base queryset
    notes = Search(notes, NOTESEARCHFIELDS, searchstr).queryset() if searchstr else notes

&#x200B;",1541430146.0
japanfrog,"You are getting criticized because your project naming and description doesn't match what it does, or in other words, you imply it is a search, but it is not. What you created is essentially filtering not search, which isn't very different than what Django provides out the box.",1541449820.0
SumatranRatMonkey,"I don't want to be rude or disrespectful and I understand that for (very) small projects you wouldn't want to go through the (relative) hassle of using a search engine, but then at least use postgres with [https://docs.djangoproject.com/en/2.1/ref/contrib/postgres/search/](https://docs.djangoproject.com/en/2.1/ref/contrib/postgres/search/).

&#x200B;",1541412552.0
daredevil82,What sort of investigation have you done?,1541360016.0
daredevil82,"I doubt you can use async with anything even touching the orm or models.

Check out https://www.aeracode.org/2018/06/04/django-async-roadmap/ by the author of django channels",1541360121.0
aleury,"I'm pretty sure there's good support for SQS in Python and Golang, so that might be a decent option if you're not committed to Celery and Redis.",1541615551.0
athermop,"FWIW, Celery *is* usually overkill.  I prefer python-rq for most projects.

I don't see why it wouldn't be possible to use asyncio in a management command, however you'll likely have to skip using the ORM and use an async-compatible db driver to do raw SQL...which sounds much more difficult than it actually is.",1541359354.0
IReallySuckAtChess,Make use of an intermediate model and many to many relationships. ,1541420636.0
booooomba,"The newest version: 2.1

2.2 will be a LTS release",1541411299.0
KimPeek,Start with the [official documentation](https://docs.djangoproject.com/en). There is a tutorial there.,1541419120.0
Rodkor,"New books are leaning towards Django 2.x, but 1.11 can be perfect if you don't care about bleeding edge stuff. The biggest difference in every day usage is the URL idioms.

My advice is that you use both so you get better Django fundamentals.",1541443978.0
banjochicken,"I am fearful of 2.0s in general. Oftentimes 2.0 is an excuse to make loads of incompatible changes. Django is not like that and is very incremental. So my answer is that there are few real differences between 1.11 and 2.x. Start with the latest tutorial and if you have to work on an older project, you’ll be fine!",1541549130.0
whatever_meh,"Instead of 

Person.objects.all().select_related('father')

I tend to write 

Person.objects.select_related('father')

and wonder if others feel the same. 

",1541353544.0
itreallyisthat,"This is brilliant - thanks for making it. I fail to use some of these principles sometimes (more often than I'd like to admit TBH.)  


Just shared with the other backend devs on my company's Slack.",1541345435.0
mephistophyles,"I don't find the gist very helpful as a cheat sheet since it's not easy to see what each section does at a glance. 

The blog post however I found very helpful. So thank you. I too would love any other tips. ",1541343808.0
comalex,"I like the gist, a bit formatting and good stuff to update your memory. ",1541353606.0
bhat,"It might be worth pointing out that `values_list()` doesn't actually return a list, but a queryset that behaves like a list most of the time.

It doesn't support `.sort()` or `.reverse()`, which is fine, because those should be done in the queryset with `.order_by()`.

But if you want to (for example) append a default value to the result, you'll need to convert the queryset to a list first:

    person_ids = list(Person.objects.values_list('id', flat=True)).append(-1)

&#x200B;",1541375489.0
kkert,"Number 7 is controversial.

> Your database can do almost anything data-related much faster than Python can.

That is by far not a given. Query optimizers can often get stuck on pathological cases and normally 50-millisecond query can get stuck for seconds - when you are dealing with sufficiently large tables.

In other words, this highly depends. Processing and doing detailed business logic filtering/sorting etc in Python on a couple dozen or a few hundred records that are queried out with broad criteria, in index-friendly query is often much more stable and on average faster.


Also, you forgot the most important piece: the fastest queries are the ones you don't make. I.e. use Django cache where possible to avoid queries entirely.",1541367394.0
pingutuxy,"Question:

If a function returns a queryset, `return Person.objects.all()` , and I call that function to get the queryset, is it evaluated already?",1541395063.0
andrey_shipilov,Another copy-pasta from Docs post...,1541347926.0
HORACE-ENGDAHL,"What makes you think most people on reddit would want or even be capable of watching a video in Hindi?

Disclaimer: English is NOT my native language. ",1541338553.0
japanfrog,"Nice, you read the official documentation and copied it.",1541331268.0
Hope-for-Hops,"Did anybody else read the ""byte academy"" link as ""by tea academy""? ",1541335171.0
andrey_shipilov,Cause Django docs is not enough?,1541337053.0
Gagaro,Your company field have `read_only=True` on the serializer. It will be ignored for the creation.,1541322576.0
keyboardsoldier,"Have you created a company instance with id 1?

Also check if you have done the migration for the latest version of models.py.",1541321684.0
booooomba,Sounds like Javascript is needed here. There are JS editors that do something similar. You cant do this with Django/pure HTML/CSS.,1541328593.0
dipitinmayo,"I've been thinking about this a lot this evening, I think I might approach this via nginx:

- On a new deploy, start a new set of gunicorn processes, on a new socket file.
- Modify the nginx config: point to the new socket file.
- Reload nginx. 

This can all be handled by tools like Ansible, or even Fabric.",1541288801.0
ccb621,"Each deployment is a new box. On AWS EC2 this means building an AMI with the new code, starting a new instance, and adding it to the load balancer. If you're using Docker, build a new image, download it on the server, and restart (more easily done with Docker Compose).",1541282700.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1541279052.0
booooomba,Why do you want to kill it instead of just restarting the service? ,1541279225.0
KimPeek,"Use those frameworks when you need highly interactive, dynamic user interfaces.",1541282946.0
athermop,"Look at Google Sheets or other similar web apps.  Think about if you could implement them with Django.

(hint: you can't.  You have to do lots of stuff in the user's browser with Javascript.  A JS framework makes that easier just like the Python framework called Django makes the backend stuff easier.)",1541279619.0
oliw,"> When is the right time to implement any of them?

When you need the reactivity of a real application. That's it.

You certainly can do this sort of stuff with jQuery (or less). I still do a lot of partial HTML with Django and javascript. You don't ""need"" Vue until you've got an actual interface. And it's in bigger projects where you might reuse something, having stateful components makes things much more maintainable.

But fuck a duck, it comes with *serious* cost. Just getting our webpack configuration to the point where it suits our requirements has taken a couple of months. The documentation around *everything* in Javascript-Land rots at 10x the speed of Python stuff. New version of Webpack? Everything you knew yesterday is shit today. Same for Vue. Every little library has a dozen alters. Nothing is quite what you wanted.

And then there's the time of taking your wonderfully optimised ORM queries out of Python and rewriting everything as a second layer of REST API endpoints, or worse (IMO) exposing everything to Graphene and suffering an absolute hail of abuse from your database guys when you're putting through thousands more queries. I'm sure this will get better after time... But it's all extra stuff you didn't have to do before.

But there are other benefits from frontend build systems. I used to write my own little Makefiles to compile SASS down, bundle the JS I need, but webpack is actually pretty decent once you've figured out what the hell it does.  Probably worth it, even without the Vue et al.

My biggest problem with it all is the pace that everything you knew turns to crap. It's a relentless hipster tyre fire of throwing everything away and starting again with whatever's hot this week. What Django does will still be as relevant in 10 years time as it was 10 years ago. Server side will always be good for what it's good at.",1541282288.0
booooomba,"Well you have two options. Render the pages on the server (what Django does) or render them on the frontend (the browser). That's when you need a frontend framework like the ones you mentioned. It's that simple. If you still have questions, ask along!

And my two cents: I don't like SPAs (Single Page applications) and I think the recent Reddit redesign is a beautiful example of this. It has gotten slower and I constantly see the loading circle. But if that's what you want to do....go for it. The trend towards SPAs is an obvious one.",1541278615.0
brosterdamus,"See this thread: https://news.ycombinator.com/item?id=18288961

And my own reply to that comment: https://news.ycombinator.com/item?id=18289460

Essentially, once you need to add a little bit of dynamic stuff, it becomes tricky. You can sprinkle jQuery here and there but then it's hard to maintain (once it grows a lot) and hard to test.

Having said that, I think for 99% of cases, server side rendering is best.",1541289013.0
MattBD,"Ever written an application that needs a lot of JavaScript using just jQuery? It can be done, but there are serious issues. It enforces no structure, means you have to write a lot of boilerplate code, it's a nightmare to navigate or test, and you have to add a load of ID's and classes just so you can select different elements.

Whereas if I use React, I can break my UI up into a set of reusable components, each of which can be tested in isolation as the code for the functionality lives in the component itself. I can pass my top-level React component a representation of my data, and if I've done it right it will all be rendered correctly. Changing the data results in it being re-rendered to match the new state. It enforces a certain amount of structure so I can more easily find where everything is, and allows for easier code reuse. I can add client-side routing if I need it too.

I used to build Phonegap apps for a living, and for that use case a front-end framework is pretty much essential as I couldn't render anything server-side. At the time I used Angular 1 and that handled templating, routing and AJAX requests pretty nicely.",1541335614.0
bishoplocke,"I'm gonna take the ELI5 road on this one.

Basically, Django is for backend code. That's what you use to build out the *how* of your project. If you need to be able to register new users, if you want a comments section, or if you want people to be able to upload files - that's all done in Django.

The JS frameworks you listed are for the frontend! This is what your users will see, and how your users will interact with your project. 

You don't *need* to use a Javascript framework, you *could* design a website in just HTML, CSS, and vanilla JS. These frameworks just exist to make things a little easier on your part!

You can implement them at any stage you want. Some people prefer to build out a full backend first, then tackle the front end.

Some people like to have a full site design first, then add functionality to it.

Some people split the road down the middle, and go half and half.

In short, it's up to you!",1541279212.0
McPluckingtonJr,"For server side rendered views you honestly don't. Vanilla js is generally good enough for the interactions that you need.

Just modularize it so it doesn't get out of control",1541278284.0
marneu,"1. Have you ever used JavaScript? IMO, it gets obvious fast why one would use a JS framework over plain JS.

2. JavaScript is necessary for AJAX. Don't need to make a single page application to make use of the option to update the data on a page without reloading the entire thing.",1541278885.0
yoongkang,"The same reason you use Django -- so that you don't have to rewrite boilerplate code or have to think too much about the platform. In the case of JS frameworks, the platform is your browser, rather than the server.

Now, think about why you're using Django, instead of just rolling out your own code to e.g speak HTTP/TCP on port 80, parse HTTP requests, generate HTTP responses, generate SQL, map SQL queries to Python objects, do authentication/security/CSRF. Sometimes you do want to do it yourself, but most of the time you could just use Django -- these things are already written for you.

In the past 5-7 years (a long time after Django was created) it became more popular to build websites with a lot of high interactivity. This needs JavaScript, often a lot of it. Websites initially tried to roll out their own solutions themselves, by writing JavaScript to do things like attaching listeners to DOM elements, manipulating or creating DOM elements in response to events, manage the state (this is a big one). But over time, instead of building these things over and over, people decided to write frameworks that more or less free you from writing this boilerplate yourself, and this allows you to concentrate on your actual app.
",1541294026.0
IIGrudge,When you feel like you're writing too much JS and/or CSS.,1541314197.0
godhatesmetoo,"Those allow you to build Single Page Apps, which communicate with a backend via an API. That gives you a nice decoupling and gives both the front-end and the back-end guys more freedom. You can also use the same API with a native app or go with Vue/Angular + NativeScript or React Native. If you want something you can learn quickly, go with Vue. React requires a lot of setup and Angular requires to learn a lot of conventions. You can drop in Vue with a single line of JS and use it as replacement for jQuery. That way you can get nice two-way data binding even in websites which were not designed as SPAs.",1541325189.0
lakerskill,"React is so much easier than vanilla js.  I barely know any JS, however, React simplifies the process quite a bit.  Plus JSX looks remarkably similar to HTML and django templates.",1541279551.0
Cictani,"The problem is that gdal203.dll requires sqlite3.dll which is also located in the same bin directory as gdal203.dll. Normaly this wouldn't be a problem but for some reason gdal203.dll first uses the sqlite3.dll included with python in your virtualenv.

&#x200B;

So if you don't use sqlite with django just rename the sqlite3.dll in your virtual env (it is in the Scripts folder). If you need it you can try to copy the sqlite3.dll from the gdal203.dll folder to the django virtualenv.",1541279502.0
andrey_shipilov,"Jesus... Geodjango on spacialite? I guess some people just like it rough.

Just bloody use Postgis and Postgres.",1541337140.0
kontekisuto,You'll have better luck integrating your existing app into a saleor instance.,1541230344.0
alexandremjacques,Saleir has just launched a headless version of their product. You could use it as a service provider to your app. https://link.medium.com/Nx7DdHJFxR,1541244261.0
furyfred,400k monthly? And all you offer is $130k/year! Ha ha ha,1541196151.0
TheoR700,"This is a really great write up. I have recently setup something very similar. The few things I noticed you did slightly different from me is in your [`entrypoint.sh`](https://entrypoint.sh).

    echo ""Waiting for postgres...""
    
    while ! nc -z db 5432; do
      sleep 0.1
    done

At first glance, I thought this approach is good and I thought I would adjust my [`entrypoint.sh`](https://entrypoint.sh) to do this. Currently, I was just running sleep for 10s before doing the rest. After thinking about it, I realized there is a flaw in your version, Docker images are suppose to work on their own. A user should be able to make a container with your Docker image and it will work, but with your method, the Docker container will never start if there isn't a database container with it called 'db'.

You may also consider taking the gunicorn command out of the [`entrypoint.sh`](https://entrypoint.sh) and defining it as the Docker images `CMD`. This will allow users of the Docker image to override the container start command.

I also notice you define an environment variable called SECRET\_KEY in your docker-compose.yml file, but you never setup your Django code to use the environment variable or at least, you never explained in the write up that you did. The way I fix this is in my [`settings.py`](https://settings.py), I change the SECRET\_KEY variable to be:

    SECRET_KEY = os.getenv('SECRET_KEY')

Now the settings.SECRET\_KEY variable is actually being defined as the environment variable SECRET\_KEY.",1541174644.0
xBBTx,"Did I miss it, or are you ignoring/skipping your `Pipfile.lock`? Isn't the point of that to exactly pin your dependency versions?",1541195377.0
mathuin2,"The trivial case is straightforward.  I haven't yet found a good example that handles anything more than one front-end and one database.  I would very much like to see a good example which runs on multiple hosts, even if it uses Kubernetes -- though that seems amazingly overkill, nobody seems to bother with anything simpler anymore now that Rancher has gone 2.0.",1541183743.0
haloweenek,"Ok... all of that is preety easy for generic setups. I need an example for: 
Patroni/Postgres cluster, 
Redis cluster, 
etcd cluster, 
glusterfs cluster,
Ha proxy with read/write partitioning,
3 front end servers and 
4 different apps

In other words - show me that for a HA deployment ",1541196357.0
crackered,Including celery worker and celery beat would be another good addition in a future version. I keep debating whether to run separate images or bundle into the same image with something like honcho.,1541241617.0
Helg1121,Now what about setting it all up with GitLab CI,1541167090.0
michaelherman,"Just updated the post -> https://testdriven.io/dockerizing-django-with-postgres-gunicorn-and-nginx

1. Added info about updating the SECRET_KEY in the settings.py file
1. Passed the Postgres host and port in as environment variables to the entrypoint.sh script
1. Moved the gunicorn command out of the entrypoint.sh

I don't think the image associated with Django can ever be truly independent since the project is set up with Postgres. I do like the approach taken in https://github.com/BashfulBandit/docker-django; however, how would you maintain the image's independence and still use Postgres at the same time?",1541428153.0
pmclanahan,"Nice write up! Just in case you’re interested I wrote a small python package to wait for external services based on URLs in environment variables (‘DATABASE_URL’ by default). Makes things just a little easier and has time-out support. 

https://github.com/pmac/urlwait",1541212088.0
snaaaaaaaaaaaaake,Their microservices with flask tutorial is really good too. ,1541179426.0
antikytheraton,Excellent post,1541175480.0
booooomba,"lol...an async Django chat bot is already not that easy. And all of that based on NLP/NLTK?

I don't wanna be a party pooper, but it sounds like you have no idea how complicated that is. It's not gonna be explained in a simple 30 minute tutorial video.

You have two options:

1. Use a chatbot service and pay for it
2. Spend weeks/months on learning Python, Django and NLTK/NLP and do it yourself.

Sorry.",1541163148.0
marneu,"I don't think Django is the right tool for the job. If anything, I'd use Django REST framework and call it from an external script that's actually responsible for the chat stuff.",1541170403.0
dtmzr,Actually a chat bot with django is not that hard you probably want to look into django channels. ,1541335080.0
pancakeses,Would be helpful if you put the language in the title.,1541169728.0
,[removed],1541122388.0
Mekhami,"maybe check out codementor? it's paid, but it's basically what you're asking for.",1541135553.0
I_said_wot,"Just use Django's CBVs for Create and Update. You could create custombform class and render the form as an {% include 'form.html' %} in each of the CBV templates.

Edit: I'm on mobile so, I can't really show you more but I'd be happy to later if no one else answers. This is something the docs cover super well.",1541118697.0
yoongkang,"You can already do this by passing an instance to the `ModelForm`, for example:

```python
add_form = CommentForm()
edit_form = CommentForm(instance=comment)
```

You can then hide or show the form with JavaScript, or just take it to a different view.",1541129538.0
eljohnsmith,Django can do this. It’s something common. What you do is usually pass an id of the object to your view and in your view fetch the record and instantiate the form with the record data. When you send the form in context all the fields will be filled out. ,1541120070.0
,[deleted],1541208972.0
suzukipunk,"PostGIS is a DB specially made for geospatial data I think, you should check it out",1541159792.0
george-silva,PostgreSQL + postgis = Win,1541346350.0
mzayani,"Try https://django-registration.readthedocs.io/en/3.0/
",1541104912.0
iBlag,"No, this isn't ""different"". You can customize just the Django admin page to do this for you, and use Django's normal auth flow for everything else. I _highly_ recommend you do use that because authentication systems are difficult to implement securely.",1541105849.0
Mekhami,"tests are supposed to test logic. Your code base has no logic in it, it's just a framework mapping 1 to 1 with a data source to translate the data into a different format. All the logic for that mapping and translation is already tested as part of the Django codebase's test suite. You shouldn't try to test that, and you shouldn't bend over backwards to write tests when you have no actual application logic.",1541100269.0
petedee,"Pretty cool, but I'm still struggling to see the benefits of all this.

I mean, Saleor had a pretty good templates to begin with, am I now going to have to learn a bunch of JS / React / GraphQL to do more or less the same thing?

They promote the ability to browse the store and make purchases without an internet connection but surely that only works for content that has already being downloaded?

They say the modularity allows for decoupling the front end from the back but when is this useful? I'm just building a website, I know our users aren't going to want to install an extra app just for our store.

I don't want to discourage the hard work that has gone into this (I know they've been at it for months) but I've never gotten a satisfactory answer as to why its better.",1541159567.0
kontekisuto,Neat,1541121434.0
Tabledwler,"Did you ever upload the code without the price? 

I would look into caching and see if Digital Ocean does any of it. It could be that you’re seeing the cached page sometimes and the non-cached one others. I’ve encountered this on AWS sometimes and clearing AWS’s cache (or using hashed file names) does the trick.",1541079406.0
Ociden,Can’t read the article for all the ads.,1541857348.0
dtmzr,"About the circular dependency, mostly you can fix this by using a string as model reference instead the class.

owner = models.ForeignKey(‘MyModel’)

This way you don’t need to import the dependency.

About the migration, it would help to have more information, like why you’re moving to a custom user model and what you want to add to it.

I don’t know if this works but if you create a new model like MyUser, only add a pass to it, inherit from the django user model and set it up as the user model in the settings, I guess during a migration you may get asked if you just changed the models name. This way you would’ve switched to a custom class first and from there on you could migrate towards your goals.",1541067830.0
charettes,"I suggest you have a look at this ticket to document how to migrate from a built-in User model to a custom User model

https://code.djangoproject.com/ticket/25313",1541086391.0
jedi_stannis,"Deleting Django's cache on demand is easy, not sure why you think it is hard or that you have to wait for it to expire.

Get the template fragment cache key: https://docs.djangoproject.com/en/2.1/topics/cache/#django.core.cache.utils.make_template_fragment_key

Then delete it using the delete cache method:https://docs.djangoproject.com/en/2.1/topics/cache/#basic-usage",1541032859.0
IReallySuckAtChess,"As an aside, if things are expensive, off load to the client. The more you do on the server side the harder it is to scale. It's also good because the faster a client gets a response the better the experience. People don't mind waiting for pages to load, but they hate hitting a link and waiting 5s for the page itself to be returned. By offloading the expensive bits to Javascript, your page renders server side super fast and the client gets a quick response, then the rest loads later. Just note that Twitter is a PWA for the reasons I mentioned about getting stuff in front of you as fast as possible. 

It's a really well studied phenomenon in UX that feedback is important. Press a button on a UI and wait a minute then people think the app is slow. Press the same button and have a bullshit loading bar and even if it takes twice as long people experience it as being faster. It's why loading bars are everywhere despite mostly being useless. It's also why above the fold loading is so important to getting a good score on Google Page Speed Test. So get something to the client as fast as possible. 

You don't necessarily have to go full blown rest interface ala DRF, sometimes if it's simple, just manually write it. You don't have to do the whole page, maybe just the really expensive loop. HeckThe Javascript would probably be very easy, and hell, there may be a nifty library that does the magic for you list.js and DataTables are pretty great. No need to go crazy and adopt some big framework like Angular, React or Vue for something so small. 

If you're wondering about caching, with this you can still cache the Javascript response but maybe do so for one minute. One minute is as good as real time for most people. Hell, if I make a Tweet, it actually does take a few minutes to propagate throughout Twitters infrastructure. You can test it by sitting in Europe and having a Skype call to Australia and posting a tweet and checking how long it takes to show up in a Friends Feed. If they view your profile specifically then some magic gets the response must faster.

As a final aside, you do know that Cloudflare doesn't cache html? It only caches static objects like images, javascript, css, favicons, pdfs and some other doc formats. Html is requested from the origin server on every request. You still see substantial speed improvements even with just this. Cloudflare does actually do full page html caching as well using page rules but you only get three on the free plan so use them very wisely. It's also trickier to invalidate it but not hard at all. ",1541055439.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1541027570.0
SeanMWalker,"As a SQL guy that always struggles with the ORM, this is awesome! Thanks for sharing.",1541006076.0
KimPeek,Good article. You should make this into a cheat sheet.,1541005563.0
DrMaxwellEdison,"Just want to comment that the JOIN example is slightly incorrect.

The Django ORM will not automatically JOIN tables as the post suggests. The code `book.publisher.id` will run a second SELECT query for Publisher, given the `publisher_id` stored in the Book row instance.

To actually JOIN, you would need to run `.select_related(...)` on the queryset:

    Book.objects.select_related('publisher').get(id=...)

This will execute a JOIN. Then, accessing `book.publisher` returns the Publisher instance that has already been loaded to memory.

---

In a similar vein, `prefetch_related` can be used to fetch rows of objects related as a one-to-many. This runs a second query, but the benefit is that *only* one extra query is run, instead of one query per object set.

Say you take a list of Publishers and want to print books belonging to each one. This might be done like so:

    publishers = Publisher.objects.all()
    for publisher in publishers:
        for book in publisher.book_set.all():  # this runs a new query for each publisher!
            print(book.title)

As noted, calling `publisher.book_set.all()` is a new query for the books belonging to a publisher. For 10 publishers, that is 10 new queries: for 100, 100 new queries. Not very efficient!

If we prefetch books first, we run a single new query from the start. Then, accessing the book sets is only an in-memory operation:

    publishers = Publisher.objects.prefetch_related('book_set').all()
    # One additional query runs to grab all our book instances
    # note that `.all()` is optional in the above.
    for publisher in publishers:
        for book in publisher.book_set.all():  # No new queries!
            print(book.title)

---

**Edit**: Coming back to this from this morning, I would suggest one final tip the author can include: analyzing the SQL query that any given statement generates.

Suppose you have a queryset written like so:

    some_publishers = Publisher.objects\
        .filter(name__icontains='foo')\
        .prefetch_related('book_set')

Any given queryset could easily become more complex than this, and parsing out exactly what SQL is being executed from the code alone can be difficult.

Thankfully, you can print `some_publishers.query` to see the SQL statements that will be run on the database. If you are more familiar with SQL than Django, this can help you analyze whether the queryset is doing what you expect it to do.

Even when running migrations for your models, you can see the SQL statements generated by the migration code by using the [`sqlmigrate`](https://docs.djangoproject.com/en/2.1/ref/django-admin/#sqlmigrate) command.

---

Finally, I highly recommend getting django-debug-toolbar coupled with SQL debug logging, both of which are described in [this SO question](https://stackoverflow.com/questions/4375784/log-all-sql-queries). Check the toolbar and logs for duplicate queries and extra queries, which will almost certainly be the biggest killers of an app's performance.",1541078435.0
DabsJeeves,"This is great. I feel like there may be a line missing in the LIKE operator section? 5 SQL statements and 6 Django statements

My SQL isn't great but I think it might be the django line 5

    Person.objects.filter(name__endswith='A')

missing SQL statement

    WHERE name like '%A';

Thank you though,  I will definitely be using this even though I fall under the reverse of what you have intended it for",1541006555.0
ryangallen,"And vice versa too! Good to understand what the ORM is doing under the hood so to speak.

Learned about some features I didn't know about the ORM as well. Thanks!",1541008021.0
dalittle,I think the biggest problem with Django's ORM when coming from SQL is that it is pretty horrible at making reasonable sql statements as the complexity of your model expands.  So instead of doing one sql query with a couple of joins it will happily go off and make thousands of individual queries or worse.  Even prefetch does not help and I often find myself fighting the ORM syntax to do something that would take 5 minutes in SQL.  It really makes no attempt to limit the data it queries unless you add a bunch of code to do just that.  ,1541006809.0
vilczy,"And still slower than raw sql UPDATE. There is no solution for bulk update. Updating huge databases is pain in the ass.

Edit. Somethings changed https://github.com/aykut/django-bulk-update/issues/75",1541007086.0
NewDimension,"Quality post, good job.",1541007676.0
Stanulilic,"OP, this is great. We need more of this.",1541008974.0
charettes,"Nice article, a few comments.

- Your `distinct()` example is not correct. [Passing values to `distinct` will use `DISTINCT ON` if supported by your database backend](https://docs.djangoproject.com/en/2.1/ref/models/querysets/#django.db.models.query.QuerySet.distinct). You want to use `Person.objects.only('name', 'age').distinct()` to achieve the SQL you mentionned.
- In your `IS NULL` example you can also pass `filter(age=None)` to achieve `IS NULL` and `exclude(age=None)` to achieve `IS NOT NULL`.
- You can use `save(update_fields=['age'])` to only update the field you changed.",1541010555.0
pkkid,"A few things I would change.

* The CREATE TABLE example isn't really explaining that you need to migrate to actually get Django to create the table.
* The ""Update A Single Row"" example while correct should also include the newer method to actually update a single row with a single query rather than two queries as your example shows. To update a single row with a single query, you can use [update\_or\_create()](https://docs.djangoproject.com/en/1.7/ref/models/querysets/#update-or-create). -- *There should really be an update\_or\_error() function in Django. Just like I complain there is no get\_object\_or\_none(). :P*
* The JOIN example is not a good example because the result would actually be two queries, and not an actual join. Not understanding what is happening under the hood is one biggest issues with new people learning the ORM, which in turn usually results in a working application with very poor performance. The example should look more like: `book = Book.objects.select_related('publisher').get(id=1)` which does result in the expected JOIN and then calling `book.publisher.name` is only one query instead of two.
* Describing a  few performance related functions as above would be helpful such as `queryset.select_related(...)` and `queryset.prefetch_related(...)`.
* One of the biggest beginner mistakes I see over and over again is allowing Django to create 1000's of objects when when only a few simple ints or strings are pulled out and used. It should be made very clear that whenever you can you should try to be using `.values()` or `.values_list()`. Both of these functions result in not building the full objects, but return the values as a dict or list. Not always possible if you want to interact on the result as an object, but when you can, its a massive performance gain as creating objects is the slowest part of the ORM by far.  Any time someone says ""My Django app is slow,"" this is 95% of the time the solution. -- *In 10 years of using Django, I think this is such a problem with new users, I believe Django should default to returning .values() unless the programmer explicitly asks to be returned model objects.*",1541080226.0
guili618,Thank you @amitness.It really helps !!!!,1541167267.0
privately-profitable,This is awesome. I have a strong SQL background and I always struggle to convert (simple) raw SQL into ORM speak. ,1541017414.0
asheeshcric,Nice,1541045735.0
eqVnox,Thank you @amitness. This is a great article.,1541047020.0
jillesme,"Really cool article. I didn't know about \`\_\_range\`! Would be could if there was an example of a \`HAVING\` query in there, too. ",1541071117.0
vinyasmusic,I want a reverse article of this,1541088023.0
Gagaro,The [`blank`](https://docs.djangoproject.com/en/2.1/ref/models/fields/#blank) parameter refers to validation in forms. Null in the DB is configured by the [`null`](https://docs.djangoproject.com/en/2.1/ref/models/fields/#null) one.,1541090341.0
Cictani,"Why

&#x200B;

`age id int`

&#x200B;

shouldn't it be

&#x200B;

`age int not null`

&#x200B;

Very useful overview, thanks for sharing.",1541018481.0
frankwiles,"Forget stars. Look for tests, maintainers (and who they are), and overall activity. 

If for example the package has 2 stars but was written by a notable Django person you can feel reasonably sure that security was thought about to some degree and definitely doesn’t have any purposefully malicious bits in it. 

And if it’s small just audit it all yourself. In all my years of Django I don’t recall very many situations where security was compromised because of a third party app. ",1541002437.0
toyg,"Small packages are easy to review. Big packages are easy to trust.

Make sure you are careful with your requirements.txt (or equivalent build system): pin your versions and make sure to avoid typos.

If security is paramount, there will be a pentest exercise anyway; if they detect a problem with a 3rd-party lib you can take action then, and if they don't... well, it's not your problem what happens next! 

If there is no pentest, the security angle is basically a joke and it won't matter.",1541004281.0
jillesme,This seems fishy ,1540997358.0
brtt3000,"A few things:

1. The mobile app has the domain of the official API, so the app would not connect to your API. For your own device/network you might be able to spoof the domain and point it to your mirror API but that won't work for other users unless they do the same. 
1. You could theoretically intercept the API calls with some clever networking hacks or a debugger mode/app on your mobile device and attempt to mirror the calls. 
1. If they use some sort of verification step like cryptographically signing responses you might not be able to generate valid responses.
1. If they use HTTPS it'll be difficult to spoof the URL because you don't have the key. I'm not sure if you can generate a fake self signed one that your mobile device will accept. Maybe on Android if you root your device and add your fake certificate?
1. Not sure what you try to accomplish but this probably breaks the Amino TOS.

",1540993798.0
jeffbaier,"With websockets, I think using an RPC system makes more sense. Check out https://www.jsonrpc.org/",1540961284.0
NomNomDePlume,"This is in channels 2, if it makes any difference.",1540955319.0
vishal180618,not experienced but asking how can I contribute to this project??,1540913915.0
ijustwannacode,"Is the goal of the website to help facilitate physical meetups, or to serve as a virtual meetup platform? ",1540916834.0
vinyasmusic,Interested. Even if Hacktoberfest has finished :P,1540924166.0
redalastor,"Start by reading the documentation.

Did you try to figure out how to build it? Did you get stuck? Where?",1540854718.0
hachoo,"This sounds like a great first project for Django.  If you walk through a tutorial, it should apply fairly clearly to exactly what you are planning to do.

You are going to build a simple model with a model class for your list of equipment and a model class for your customer requests. You are going to build a few views, at least one for you equipment requests and one for your reports. For handling the requests you are going to build a form class and process the input with it.

Good luck! If you already have a handle on python, html, etc. I bet you can have a nice prototype of this up and running very quickly.",1540855585.0
never_safe_for_life,"Do you particularly want to build this from scratch? You could simply use Google Forms.

In general Django is not something that comes up when somebody asks for \`the fastest way to achieve this\`. Wordpress is. It's akin to:

* Wordpress is a bicycle that's mostly the way you want it, and with the right plugins can do what you want
* Django is a box full of bicycle parts. You can make it into anything you want! (as long as you're a bicycle mechanic)",1540855875.0
DudaFromBrazil,Check out Django cookie cutter for best practices.,1540860373.0
pemboa,"If you're just trying to get work done, Google Forms would be faster. But if you're looking for a learning experience:

    1) create project
    2) create an app
    3) create a model with required fields
    4) create migrations
    5) run migrations
    6) enable Django admin for your model(s)
    7) create view for data entry
    8) create view for data results... you can hook this into the default Django auth to protect.
",1540861419.0
ncubez,Check out [this playlist](https://www.youtube.com/watch?v=UmljXZIypDc&list=PL-osiE80TeTtoQCKZ03TU5fNfx2UY6U4p) on YouTube. ,1540855381.0
tibb,"I recommend adding Sentry (https://sentry.io/for/django/) to start, so you can see any errors in your app once it's launched.

Anything beyond that, or solving for scale before you have any users, is premature in my opinion.",1540827414.0
pancakeses,"Its important because it's another tool in your toolbox.

Prometheus and similar tools can be set up to alert you if resources drop, if latency increases, if the number of database transactions starts trending upward, if views are not working, etc. It can also be used with Grafana or other visualization tools to provide a nice dashboard of whatever metrics you feel are important. 

All of this can help you diagnose or prevent problems when you're running larger, more critical projects.

Recommendation: read The DevOps Handbook and/or check out /r/devops for more on this topic.",1540825311.0
haloweenek,"Appenlight
New relic",1540832829.0
,[deleted],1540850808.0
whodis123,"If you have to write the urls and views yourself then what's the point of using this library? The whole point is to reuse work someone else did and modify it as needed. 

What I have done with django-notifications in the past is periodically put 

`notify.send(user, recipient=user, verb=""my message')`

in different views as certain actions happened.

Then in my base template have a display which shows all the notifications as they come up. I customized my own template snippet for the notification. 

Clicking on the notification takes them to a view where I can set the notification as read or not. (Of course you could use ajax to do it in the same view if you wish).",1540830651.0
Stanulilic,"It turns out I wasn't aware that in Django you can override templates. I was confused with the urls and views that come with django-notifications because I thought they will only render django-notifications templates. 

After I did some digging, I found ""Django Notify""  which is similar to django-notifications. The light bulb came on when I read [its documentation](https://django-notify-x.readthedocs.io/en/latest/templates.html#for-rendering-notifications) where it said I had to override  the templates.  This was the part that was missing from django-notifications which drove me crazy because I knew nothing about overriding templates. So I went to the [django documentation](https://docs.djangoproject.com/en/2.1/howto/overriding-templates/), It explains clearly on  how to override templates. 

I lost two days trying to find the solution for the problem I was facing. I hope my thread can help somebody in the future who might face the same problem.

Thank you to everybody who replied, especially u/whodis123 for the statement ""If you have to write the urls and views yourself then what's the point of using this library? The whole point is to reuse work someone else did and modify it as needed.
""  It had me thinking for hours, It made me realize that I was missing something crucial, and I was.",1540893738.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/djangolearning] [Am confused with Django notifications](https://www.reddit.com/r/djangolearning/comments/9sblp7/am_confused_with_django_notifications/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1540805910.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1540804247.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1540799226.0
brtt3000,"It is difficult to to better then MPTT but easy to do worse. 

Reading a tree is fast and unless you have reddit level of comment traffic you don't need to update the tree that often. If you do have a lot of read traffic then you'll want to do the regular profiling and optimisation and cache stuff anyway.",1540805986.0
frankwiles,Good. Your tree is read/traversed WAY more often than something is added to it. Even if you’re Reddit!,1540854628.0
IReallySuckAtChess,"It's not perfect, but it's also not bad. That's what you need to understand, the best solution isn't always the most performant or the easiest to use or some other metric. It's why there is a diversity of programming languages, and libraries and frameworks and even paradigms. Very rarely is there even a theoretical perfect solution for most problems. 

Nothing is perfect across the board so whilst MPTT isn't perfect, it's not bad and I would use it if I were you. Trees are updated far less than they are read. Writing is slow, reading is fast. Don't worry about it. ",1540880535.0
dailytentacle,"It looks like you’re generating the api key within the model. That will cause the api key to be generated when the model is loaded and result in the same key for many model instances. 

You can either call a function with functions.partial which will cause a new api key to be generated when you instantiate the model or you can override the save method to create the key. Save isn’t called in all cases and this could cause confusion later. It might be simpler to generate the api key in the view or wherever you create the model instance. ",1540809121.0
pancakeses,"As dailytentacle pointed out, you want to do it this way:


    def api_key():
        api_key = ''.join(secrets.choice(alphabet) for i in range(32))
        return api_key

    class MyModel(models.model):
        apikey = models.CharField('API Key', max_length=32, default=api_key, unique=True, editable=False, null=False) 
",1540823008.0
subhajeet2107,"You need to use ManifestStaticFileStorage as a Storage backend or subclass this for django-compressor, [https://docs.djangoproject.com/en/2.1/ref/contrib/staticfiles/#manifeststaticfilesstorage](https://docs.djangoproject.com/en/2.1/ref/contrib/staticfiles/#manifeststaticfilesstorage)",1540743564.0
PetterOfCats,I use google storage as my backend. And am able to specify ‘private’ as the cache-control header. Tells everything down the chain to not cache the asset. ,1540770956.0
yoongkang,"Is this for static files or uploaded files?

If it's static files, use `ManifestStaticFileStorage` as another commenter mentioned.

Otherwise, you can pass a function to the `FileField`'s `upload_to` parameter which adds the hash of the file to the filename.",1540780406.0
IReallySuckAtChess,Django-pipeline is better than compressor. Cache busting is built in. ,1540787964.0
PetterOfCats,"My bad, that is absolutely correct. It will make downloading your static assets slower. I use this in a couple of my CDN buckets, but not my site wide assets.

For the OP, setting the cache-control directive to something shorter would be ideal. Tho there might be an issue with assets already cached. Max-age=3600. Or something like that. 

See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control for detail. ",1540795451.0
lindsaylohanreddits,"[https://django-allauth.readthedocs.io/en/latest/installation.html](https://django-allauth.readthedocs.io/en/latest/installation.html)

[https://www.intenct.nl/projects/django-allauth/](https://www.intenct.nl/projects/django-allauth/)",1540755553.0
booooomba,Isn’t it enough to just use the login required decorator?,1540747676.0
verkaufer,"You would probably want to have the [Google Login OAuth Scope ](https://developers.google.com/identity/protocols/googlescopes#google_sign-in) include a user's email and then split the email on the ""@"" symbol before comparing the domain of the email returned.",1540761212.0
milkandtang,"if you're looking to put it completely behind google auth, it's relatively trivial to integrate with [Google Identity-Aware Proxy](https://cloud.google.com/iap/); it's worked out well for my setup, although it's easy in our case since we host on Google Cloud.",1540783929.0
ramse,"You say you're using a form, make sure you're passing `instance=obj` to the form.

    obj = MyModel.objects.get(pk=123)
    form = MyModelForm(instance=obj)
    if request.method == 'POST':
        form = MyModelForm(request.POST, instance=obj)
        if form.is_valid():
            form.save()

You have to pass instance in both cases.",1540739970.0
j03,"It would be good if you could share some of your code, since ""but it not work"" doesn't give much for us to go by!

That said, check out `create_or_update` (https://docs.djangoproject.com/en/2.1/ref/models/querysets/#update-or-create). This function will let you update a model if a matching instance already exists (you can specify which fields it should check for), or will create a new one if not. ",1540737636.0
mzayani,Use class based update Form. ,1540756757.0
mzayani,You don't need to use any method. Have a class based update view and a matching url. That's it. ,1540785026.0
rocky-ji,"I use this method, 
Model.objects.filter(Id=ok).first(), because I just want to modify one.  Is it right?",1540775097.0
rocky-ji,What’s the class name?,1540808785.0
TheoR700,"This isn't really a Django question, but as the other commenter mentioned, just include your CSS and JS files and use CDNs for the rest.

Now you mentioned moving to production and static files in the same post, so I think it is worth linking the Django documentation on this very topic.

https://docs.djangoproject.com/en/2.1/howto/static-files/deployment/",1540732741.0
booooomba,I only need my CSS framework and maybe one JS library. And I always use CDNs. There's absolutely no reason to mess around with this myself.,1540732038.0
never_safe_for_life,"Djano has several apps that handle compression/minification of CSS/JS. Django compressor seems to be the most popular right now:

https://github.com/django-compressor/django-compressor
",1540757524.0
IReallySuckAtChess,"Look at Django Pipeline, then just tell nginx to cache those kinds of files for a period of time. If you need you can throw the site behind Cloudflare as well. ",1540787812.0
Felekis,"Integrating webpack will take some time until you understand the basics of webpack. After that though, the benefits outweigh the time it took you setup webpack.

&#x200B;

I suggest you start reading & coding along the webpack [docs](https://webpack.js.org/guides/getting-started/).

You will most definitely use [django-webpack-loader](https://github.com/owais/django-webpack-loader)",1540997478.0
pkkid,"[Another example here](https://github.com/pkkid/pushingkarma/blob/master/pk/settings/settings.py#L87). To breakdown the top level sections:

* **handlers** \- decides where the logs go, I have two handlers, console and file.
* **loggers** \- different logger names (can have different handlers, log levels, and formats).
* **formatters** \- different log formats, I generally only have one.

Once the LOGGING option is setup in django settings, you can use the logger by fetching it by it's name. For example, my main logger is named 'pk', so I use the below code. I take it one step further and generally put the below code in the \_\_init\_\_.py file of my project root. Then I simply grab the logger by adding the import `from project_name import log`.

    # <project_root>/__init__.py
    import logging
    log = logging.getLogger('pk')",1540689380.0
KimPeek,"Here is Django's [default logging configuration](https://github.com/django/django/blob/master/django/utils/log.py#L18).

Here is how the [Django cookiecutter](https://github.com/pydanny/cookiecutter-django/blob/master/%7B%7Bcookiecutter.project_slug%7D%7D/config/settings/production.py#L262) does it. There is an alternative configuration above this one on line 200 for use with Sentry.",1540695108.0
ramse,"This is in my settings.py:

    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters': {
            'verbose': {
                'format': ""[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s"",
                'datefmt': ""%Y-%m-%d %H:%M:%S""
            },
            'simple': {
                'format': '[%(asctime)s] %(levelname)s %(message)s',
                'datefmt': ""%Y-%m-%d %H:%M:%S""
            },
        },
        'handlers': {
            'djangofile': {
                'level': 'DEBUG',
                'class': 'logging.handlers.WatchedFileHandler',
                'filename': os.path.join(LOGGING_DIR, 'django.log'),
                'formatter': 'verbose'
            },
            'issues': {
                'level': 'DEBUG',
                'class': 'logging.handlers.WatchedFileHandler',
                'filename': os.path.join(LOGGING_DIR, 'issues.log'),
                'formatter': 'verbose'
            },
            'console': {
                'class': 'logging.StreamHandler',
                'level': 'DEBUG',
                'formatter': 'verbose'
            },
        },
        'loggers': {
            'django': {
                'handlers': ['djangofile'],
                'propagate': True,
                'level': 'INFO',
            },
            'issues': {
                'handlers': ['issues'],
                'propagate': True,
                'level': 'DEBUG',
            },
        }
    }

    logging.config.dictConfig(LOGGING)

Handlers tells the system how to format the log line within the file, it also tells you which file to log to, the level...etc.

Within any python file within the django project I can just do...

    import logging
    log = logging.getLogger('issues.my_script_name')


    ...
    log.info('blah blah')
",1540688795.0
rocky-ji,"It’s very useful, Thank ",1540701555.0
rocky-ji,"It’s very nice about your codes, It’s helpful for me ",1540701631.0
carlio,http://lmgtfy.com/?q=django+logging+examples,1540685695.0
Nicksil,Probably best you state what you're having issues with so someone knowledgeable can address it.,1540687989.0
furyfred,Terrible article. No mention of DRF or 2 scoops. And no one cares about Pyramid,1540664986.0
goodbrocolli,"Same here minus previous server setup.

2. You can use Django's logging. It's in the documentation.

And

View the system log yourself in /var/log/syslog

If you print in view, it will be in there.",1540629161.0
zholmquist,"Digital Ocean + Dokku, I think, would get you close to what you want! https://realpython.com/deploying-a-django-app-on-dokku/",1540643277.0
Ramast,"for database, could try installing [pgadmin](https://www.pgadmin.org/screenshots/)",1540633038.0
okazdal,"For admin UI you could use Django admin.
https://docs.djangoproject.com/en/2.1/ref/contrib/admin/",1540639639.0
leros,"I'm using the pydanny cookie cutter Django which uses docker compose. I just created a droplet with the Docker image on it, checked out my repo, and ran docker-compose up. I did hit a few issues along the way but it's mostly preconfigured and, more importantly, repeatable. ",1540660938.0
pdsbecks,You can't ,1540596712.0
iBlag,"You can’t get a signed cert from LE for your localhost,  it you should be able to generate all of the necessary certs and add them to your OS’s cert list.",1540597323.0
thehardsphere,"Why do you need a trusted cert for this? 

If you need to test SSL connections on localhost (not sure why you would but w/e) you could generate a self-signed certificate and import it into your system's trust store, so that the browser will trust it automatically.",1540599874.0
antgweb,"Have you tried setting up a DDNS such as duckdns, and then setting a certificate for that?",1540596877.0
oliw,"I occasionally expose my dev server as dev.mydomain.com by SSHing into my server and reverse-forwarding a port back to my machine's localhost:8000. I have a nginx rule on the prod server for this subdomain and it uses the same wildcard certificate as the rest of my nginx rules.

It's a massive pain in the arse to set up (wildcard is PITA enough), more effort to run (you need to SSH in), and is *considerably* slower than testing locally. But it works without constantly exposing that port. I use it for client previews.

---

If this is just for local testing, you could also get a certificate created on a domain you control, and then copy that back to your local machine [every 60-90 days] and run nginx with that certificate locally, and edit your `/etc/hosts` file to resolve that domain to 127.0.0.1.

---

Or just self-issue. If this is just for testing, there's no problem in accepting this.",1540624854.0
yoongkang,"Why not just copy the `QueryDict`? For example `new_data = request.GET.copy()`, then you can modify `new_data` any way you want, as `copy()` returns a mutable copy. 

I wouldn't recommend modifying the request. It becomes difficult to track down what's in the request if application code is free to modify it.",1540649293.0
oliw,"> ... the Request object [is] immutable

I don't think it is. I add variables to the incoming request (eg `request.company = request.user.profile.company`) all the time. This is particularly convenient for sharing data across the whole stack (eg middleware, view, template) without having to work it out each time. I use it as a per-request cache, of sorts. It's usually a bit more complex than the example I shared above.

The GET and POST QueryDicts are immutable because they are a both supposed to be a source of truth; eg a record of what was actually requested.

You can do what you need without modifying the model or poisoning request's QueryDicts. You could:

 - Just query for both at once from the frontend? No idea what your view is like but I know filtering on multiple values is possible because I do it.
 - Write a special custom filterer that does this transformation (and filters for both) without changing the frontend or the model.
 - It's probably not very performant but you could even annotate the transformation and search for that.
",1540662102.0
fdemmer,"i'd use different parameters for different ids. they may describe the same object/dataset, but as you say, they come from different sources. so not external_id, but something like sourcex_refid, systemb_refid, or whatever. (i use _refid for external/reference ids that are not orm primary keys.)",1540582459.0
hallman76,"Altering an incoming request is quite common in django. That's exactly why the [Middleware](https://docs.djangoproject.com/en/2.1/topics/http/middleware/) feature exists. You could certainly put logic in a middleware component to normalize your incoming requests.

Mentioning ""serializer or deserializer"" makes me think you're using Django Rest Framework. By the time a request gets to DRF, you probably should consider it immutable.",1540930681.0
twigboy,"Sane route is to have a build script.

In django settings, set a static root folder where EVEYTHING is collected into once the build script finishes.

Build script does the following:

* runs your webpack build and spits it out everything to a specific folder
* run django collectstatic which grabs things from various folders (from django apps) and puts them into static root
* staticdirs should also include the output folder of webpack, so everything is together in one sane place

Use webpack tag to load webpack entrypoints. Use static tag to use stuff from django",1540588848.0
DabsJeeves,"With jquery

	$.ajax({
		url: ""/yoururl/"",
		type: ""POST"",
		data: JSON.stringify(your_object) ,
		success: function(data) {
                       // Do something with callback data
		},
	});

And then in the django view

     import json
     def AjaxRequest(request):
          json.loads(request.body)
         # Now you have a dict of the data to do whatever you need with


You can also find vanilla js or other libraries to send data, the jquery one is just because it's simple and familiar. Superagent is another good library whose motto is ""AJAX with less suck."" ",1540575929.0
merican_atheist,While not necessary you should take a look at Django REST Framework.,1540575134.0
Rodkor,"You can make a view render your data at an endpoint and then fetch it with any frontend you like.

Other than that, you should really look at Django Rest Framework if the app is going to have any users.",1540666303.0
Rorixrebel,"JavaScript vanilla fetch api should be able to do that, setup a view or endpoint and go crazy",1540585014.0
cubiclegnome,"To represent this with django models, you might use several django models with many-to-many relationships. See: https://www.django-rest-framework.org/api-guide/serializers/#dealing-with-nested-objects",1540564973.0
jillesme,"The data-model seems pretty straight forward.

&#x200B;

* Create a \`Country\` model. It will have all the properties you listed
* One field should be \`borders = models.ManyToManyField('self')\` (see [https://docs.djangoproject.com/en/dev/ref/models/fields/#django.db.models.ManyToManyField.symmetrical](https://docs.djangoproject.com/en/dev/ref/models/fields/#django.db.models.ManyToManyField.symmetrical)) They should be symmetrical.

For every other foreign key just create a new model (e.g. Languages, Currencies). Try going to the Django tutorial and you should have a good idea. Then it's just a matter of using django-rest-framework.

&#x200B;

Adding that from a JSON file can be done in many ways. If you know a bit of Python you can just run a Django shell and import the JSON file and iterate over it while writing it to your models (check out bulk\_create).",1540565326.0
DisagreeableMale,"Could you create a subclass of your default caching class and then modify it as “GuestCache” that is conditional on the logged in status?

If you mean more theoretically, I would keep in mind that caching is a way to make knowingly accessed content easier to access. That said, I would make an effort to cache all of the insensitive, static assets like images, fonts, style sheets, JavaScript, etc, and then make adjustments for the few things that’ll need to be cached as a guest. I don’t think the content being read-only to guests is a factor in the implementation, but maybe I’m misunderstanding.

If you have a guest, limit the HTTP methods they can call, and give them full access or no access to the content. Caching is mainly for performance in my experience.",1540519434.0
jeffbaier,"Cache your data, not your page output. It's cheap to render templates, it's expensive to make database lookups.",1540591097.0
charettes,"Keep in mind that the following is completely untested but it should point you in the right direction. First I think your query can be reduced to the following

    SELECT * FROM myapp_userfriend uf1
    LEFT JOIN myapp_userfriend uf2 on (uf1.by_user_id = uf2.for_user_id)
    WHERE (
        uf1.for_user_id = 1
        AND uf2.by_user_id = uf1.for_user_id
    )

From that point you only need to be able to express a _self_ relationship between `by_user` and `for_user`. You'll be able to achieve just that by using `ForeignObject`. Without going into much details `ForeignKey` is really just a wrapper around `ForeignObject` that happens to force the usage of non-composite from/to fields and creates a foreign key constraint. `ForeignObject` does all the magic to allows related fields to be referenced in the ORM.


    from django.db.models.fields.related import ForeignObject

    class UserFriend(models.Model):
        by_user = models.ForeignKey(User, models.CASCADE)
        for_user = models.ForeignKey(User, models.CASCADE)
        mutual = ForeignObject(
            'self', models.DO_NOTHING,
            from_fields=['by_user'], to_fields=['for_user'],
            related_name='reverse_mutual',
        )
    
    UserFriend.objects.filter(
        for_user=1,
        mutual__by_user=F('for_user'),
    )


By the way you should probably add a unique constraint on the `(by_user, for_user)` tuple.

If you really want to move the conditions to the `JOIN` you can achieve it using a [`FilteredRelation`](https://docs.djangoproject.com/en/2.1/ref/models/querysets/#filteredrelation-objects) but I don't think this is necessary here.",1540518774.0
gctaylor,I'd suggest including your budget so folks know what this will pay upfront.,1540514138.0
govoval,"Yeah, not only don't you have a finished product, you also can't even share the scope of work?

This sounds like a bad idea.",1540516543.0
RelevantToMyInterest,"sincere question: why not just learn from the docs? It literally will take you an hour or two just to go through the  quick start. 

https://docs.djangoproject.com/en/2.1/intro/tutorial01/",1540506188.0
cosmothekleekai,What are you trying to do?,1540512146.0
arya-nix,"From django's documentation:


""The inheritance relationship introduces links between the child model and each of its parents (via an automatically-created OneToOneField)""


Since you are using meta. Also consider this statement. 


In the multi-table inheritance situation, it doesn’t make sense for a child class to inherit from its parent’s Metaclass. All the Meta options have already been applied to the parent class and applying them again would normally only lead to contradictory behavior


See here:
https://docs.djangoproject.com/en/2.1/topics/db/models/#multi-table-inheritance

My opinion:

Explicit is better than implicit. 
Use One To One field instead. It will be more clear to understand. 

Also it will be more convenient to think inventory moving from location to location, whether it's a vendor or a customer. 

",1540499130.0
LeavesEveryGame,"Does it work when you run Django with the runserver command?

Does the console of your browser provide any hints?

Are you using HTML5 or did you forget to close the tag?

We need a bit more information, as it all seems ok to me.",1540510000.0
zettabyte,"\> but that is not the problem as developer tools show the page correctly fetching the css file from the server. 

So you're saying that from the Developer Tools, you can see /static/css/styles.css fetched and view it's contents?  And you can hit the URL directly and view it's contents?

Then I'd say this isn't an nginx / server issue.  There's probably something wrong in the HTML or stylesheet...

&#x200B;

&#x200B;",1540563246.0
JediJediBinks,I would create a 'Challenge' table that has fk's for the challenger and challengee(?) with the challenge amount and any other necessary data.,1540490305.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1540481089.0
j03,"Yes, this is possible. Forward the remote DB port to your machine with:

```
ssh user@host -L 5432:localhost:5432
```

You can then set up your Django app on your local machine, and alter the settings to point to localhost on port 5432 (or whatever port your database is listening on).

You can then run the Django server locally, from a remote database. I suggest writing your resource intensive script as a management command -- you'll then have easy access to Django ORM (and all other features).",1540475854.0
oliw,"My first though it just do this all on the server with a management command.

You say your existing script has memory consumption issues. I would personally look at improving that first. In my experience, the bigger it is, the more low-hanging fruit there is ripe for plucking. I've done this a few times. Big wins came from:

 - Only keeping data you need in memory. Sounds obvious but rather than actual Model instances, keep and pass around tuples of values you need. Use of `values_list and `only` help a lot here.
 - If you're doing silly numbers of SELECT queries to calculate this data in the first place, try to make sure that's batched up in good time too. Judicious use of `prefetch_related`, etc.
 - Use Model.objects.bulk_create and bulk_update (external package) to minimise the write load.
 - Use bulk-loaders like that to also skip custom .save() logic.
 - Only write the fields you need (both save() and the bulk_update library have options for this).
 - Use iterators where possible, rather than declaring a list of objects you only use once and ticking through them.
 - Model.objects.update can reference other fields through F, even those annotated. You can, for example, annotate on a subquery result of an aggregation from other tables and then update a local field to match. It can also handle simple arithmetic.

If you can't do these sorts of improvements, how important is timing of this? Could you download the production database, run your data into and then upload it? Or `./manage.py dumpdata model` and `loaddata` it back in onto the server? However, in my experience `loaddata` is a serious memory hog.

Failing all that, you could host a local version of the site and plumb it into your remote database. Ideally it's shielded from direct connections so you would use SSH to tunnel the Postgres port back to local and hook your local instance of Django up to that. It'll be megabeans slow but it'll be real.",1540477743.0
angellus,"The best way would be to separate your models out into a standalone [Python package](https://packaging.python.org). Then you can install it into your Django ""project"" that is the site and also create a separate one you install the models package into. This one you can put on a remote server with no URLs or anything, a separate settings file for the remote DB and just a [management commands](https://docs.djangoproject.com/en/2.1/howto/custom-management-commands/) to do whatever you need. ",1540475641.0
doot,You can create a management command and run it via cron,1540475547.0
booooomba,Why the AJAX? You don't need it if you just use plain Django. ,1540461053.0
crackerbiron,"/u/booooomba is correct that plain old Django will do this for you.

Many of the tutorials online for Django teach you specifically how to handle this actually.

I believe Sentdex’s tutorials(as well as CodingForEntrepreneurs) on YouTube go over setting up your URLs and the parameters to be passed within the URL, setting up the DetailedView(don’t have to use it but saves a lot of work for you) and working with absolute_urls inside the template.

",1540462444.0
tehyosh,"why wouldn't you include the migrations? how do you intend to keep your db schema up to date if you don't add the migrations to git, especially after you have data in your db?",1540452333.0
webpigeon,"The migrations should be a description from how to get from one database state (say v1) to another (say v2) - Even though you are generating them locally, they will still describe the changes that you need to go though in order to move between versions. 

&#x200B;

If your production envrioment doesn't include a release (ie, it's on v0.9 or something) then it'll just do all the migrations between versions.

&#x200B;

eg. v0.9 -> v1 -> v2

&#x200B;

Note that even though I said v1 and v2 these in simply would simply be changes made to your models rather than 'formal' versions",1540458254.0
andrey_shipilov,How else would you deploy or CI.,1540452624.0
strikex,"I don’t upload my local migration files to Git or production because I just run makemigrations and migrate on the app server at every patch. 

The app server calculates the difference between model states and creates its own migration files, which doesn’t include all my intermediate local migrations used for testing. This has worked very smooth for a large app over the past 3 years. This also works with multiple developers, as there are no merge conflicts.

Unless you write your own custom migrations, I don’t see why you would commit them to Git.

StackOverflow discussion: https://stackoverflow.com/questions/28035119/should-i-be-adding-the-django-migration-files-in-the-gitignore-file",1540453559.0
Durp56789,"Yes you should. All databases need to know how to get from their current state to the current state.

Could you say why it seems counterintuitive to help give a better explanation?",1540453195.0
IAmJahoo,"If You for some reason don't want to include all of Your migrations, You could concider [squashing them into one](https://docs.djangoproject.com/en/2.1/topics/migrations/#migration-squashing). In most cases You don't need all versions between first and final states of Your DB, only difference between them.
So You can replace all files
` 0001.py
  0002.py
  0003.py
  0004.py
  0005.py
`
into for example one `0001_squashed_0005.py`

Please be aware of migrations dependency described in tutorial page that I linked ;)",1540473670.0
chrisrazor,"On further reflection, I think the correct way to manage migrations and version control, in a project with multiple active branches should be:

- NEVER commit migrations on feature branches, only the trunk/master branch.

- When working on a branch, create local migrations according to your needs but don't commit them. Before  switching branches, reverse migrate to the last master branch migration and delete the rest (but keeping any custom data transformations somewhere safe).

- After merging a branch, create the necessary migrations (incorporating any custom transformations here) and commit them to git.

That way, you have a single, unbranching list of migrations in your git repo, with no conflicts, that you can confidently deploy to and run on the server.",1540542202.0
PyBet,"What's the difference between including migrations and applying them and not including migrations, making them on the server with the updated code ?",1540461244.0
strikex,">One thing that comes to mind is to simply populate my 'custom user category table' with all the default values when the user is being created, but that will basically mean same repeating entries for each user, which does not sound efficient to me.

Reason about it this way: if users get full ownership of the default categories (then can edit, delete them), it may be useful to treat them as any other custom category and in this case this will mean you will have repeating entries for each user. That's just a simple trade-off for the flexibility you're offering.",1540482408.0
tehyosh,"https://docs.djangoproject.com/en/2.1/topics/class-based-views/generic-editing/

TLDR: you're missing a return in form_valid()

      return super().form_valid(form)",1540452155.0
parijath,"I am giving the stack trace here ...

    Traceback:
    File ""/home/parijath/Projects/webportal21/venv/lib/python3.6/site-packages/django/core/handlers/exception.py"" in inner
      34.             response = get_response(request)
    File ""/home/parijath/Projects/webportal21/venv/lib/python3.6/site-packages/django/core/handlers/base.py"" in _get_response
      137.                 ""returned None instead."" % (callback.__module__, view_name)
    Exception Type: ValueError at /customers/cboi-bangalore/update/
    Exception Value: The view core.views.CustomerUpdate didn't return an HttpResponse object. It returned None instead.

&#x200B;",1540452070.0
Bonteq,"The issue could be that your STATICFILES_DIR is referencing ‘launches/static/css’ whereas in your template you are referring to ‘css/launches.css’. It looks to me like you’re referencing the css directory twice. 

I think what’s happening here is your STATICFILES_DIR should only be ‘launches/static’.

A good way to debug this is to inspect the source code through Chrome and see  the path that is generated and where Chrome is looking for that CSS file. My guess is it’ll look something like ‘href=“launches/static/css/css/launches.css”’. 

Hope this helps. Good luck. ",1540439207.0
marcoscoder,"If it's in chrome, sometimes it will not load. Try with CTRL + F5.

If it is in production, you need to run ./manage.py collectstatic

&#x200B;

No more, it seems all right. Try to remove STATICFILE\_DIRS and add bar to static ( '/static/' ) and see if everything is ok.",1540438255.0
paradiselost79,"So when I look at the gunicorn errors, a ton of errors show, final one is this. Seems like true django error:

File ""/home/ubuntu/mysite/mysite/urls.py"", line 17, in <module>

from django.urls import path, include

ImportError: cannot import name path

",1540406367.0
pancakeses,"As I first started out, I found that the best things to do was identify lots of good projects and dig through to see how they approached the problems I was interested in.

&#x200B;

***Be warned: this is very opinionated.***

&#x200B;

Prerequisites:

* Understand the basics of [PEP8](https://www.python.org/dev/peps/pep-0008/). Are there any good Django projects that don't use PEP8? Probably not.
* Understand the basics of Django. If you haven't worked through the [official tutorial](https://docs.djangoproject.com/en/2.1/intro/tutorial01/), now is probably a good time. You won't have much luck differentiating a good project from a bad or poorly structured one without knowing the basics of Django.
* Remember that the source code of the [Django Project](https://github.com/django/django) itself is often the first place to look when trying to figure out how to do something. How did the project developers solve a similar problem? Take a look at the relevant code and you'll learn a TON.
* Very first thing - with whatever problem-solving and programming experience you already have (even if you're brand new to Django/python/programming/etc), think through how you might approach whatever problem you're trying to solve. This is super important. You may find a better way later on or learn about better tools for the job, but taking 10 minutes to think through how you might approach this with the tools & knowledge you have *now* will benefit you in the long run. Draw up a diagram. Write a short description. Whatever. Just be sure you [think for a bit](https://www.essentiallifeskills.net/thinkcritically.html) before you jump on stackoverflow or start googling.

&#x200B;

Alright, so now you're ready to begin.

&#x200B;

* A good first step in your search is to check [Django Packages](http://www.djangopackages.com) to see if any apps are listed that match (or are similar to) your goals. If you find something useful and decide not to use the app in your project outright, you should at least check out the code and see how they approached the problem. Did
* What sort of app (or specific problem) are you trying to build/solve? Build a short list of search terms. For instance, if I were looking to build a scheduling app we might use terms like ""django scheduling"" ""django calendar"" ""django schedule""
* Open a new browser window, it's time to get to work. We're going to do some quick work to find the low-hanging fruit. Good projects we can identify quickly.
* Go to [github.com](https://www.github.com) and use the search box in upper left to [try you first search terms](https://i.imgur.com/WYPnLYG.png). Make sure you select ""All of github"" if that option appears. On the results, make sure you're looking at repositories (in the nav bar on the left) and sort by ""Recently Updated"" to weed out some of the old, outdated projects. My search for ""django scheduling"" got me 274 repository results.
* Now start scrolling through the [titles and descriptions](https://i.imgur.com/OdVIRZo.png) (I have no relation to the highlighted example and didn't actually look at its code). While some decent projects fail to include a title and description, you can be pretty sure that if they skimp on this then they skimp on documentation and other important aspects of developing a good quality project. As you find projects with a title and description that seem to match what you're looking for, open them in a new tab. Do this for the first few pages of results. You may end up with 50 tabs. That's okay.
* On each tab, [take a look at the number of commits and number of contributors](https://i.imgur.com/saWFDo7.png). If there are fewer than 20 commits, throw it out. Modern development involves lots of commits. Ideally, any little change you make while working should be tested and committed, so a lot commit number means either the project is new, it was moved from some other revision control tool, or the project author(s) don't follow good development conventions. If you aren't [testing](https://docs.djangoproject.com/en/2.1/topics/testing/) and [committing](https://medium.com/quick-code/top-tutorials-to-learn-git-for-beginners-622289ffdfe5) your code on a regular basis yet, don't worry. It's okay at the start, but \*please\* make an effort to start doing this. It's really important, and harder to get started doing it the bigger your project gets (trust me, I learned from experience). Also, generally a higher number of contributors is a good things, because multiple people have found the project worthwhile enough to invest their time and energy. Close any tabs with only a few commits, and if you still have dozens of tabs open, close the ones with only one contributor or those that have no real description on the readme (the first page you see when you open the repository from the reach results).
* With your remaining tabs, take a quick look at the code. Are the models.py files sparse with only the bare minimum fields and no model managers, querysets, methods, etc? Probably not a great project to emulate. Are there tests written for each app? If not, the project might still be worth checking out, but a poor example of overall [DevOps](https://www.reddit.com/r/devops/) philosophies.

Following these instructions, you should be able to identify at least a handful of quality Django projects that you can use as a base for gaining insights, learning new approaches to your problem, and improving your code. Remember that different programmers sometimes use different project structures, fancy tools you may not be using, and sometimes are working on an older version of Django even if the project is recently updated (checking the requirements file(s) in the project can help you identify which version of Django is being used). A project working with Django 1.11 will still be useful as long as you keep in the [few changes from 1.11 to 2.0/2.1](https://docs.djangoproject.com/en/2.1/releases/).

Rinse and repeat, and one day your projects will be what someone new uses to learn better Django.

&#x200B;

Edit: Can't speell good",1540408269.0
mchlstnr,"[The official Django tutorial is a great starting point. ](https://docs.djangoproject.com/en/2.1/intro/tutorial01/)  

 [I would also recommend the Django girls tutorial. ](https://tutorial.djangogirls.org/en/) ",1540396573.0
diek00,"After the official tutorial this is one my top pick, [https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django)   
Learn Django first, then learn to integrate js, imo",1540397294.0
,[deleted],1540391047.0
ssekuwanda,[https://simpleisbetterthancomplex.com/series/](https://simpleisbetterthancomplex.com/series/),1540404785.0
anfil89,RemindMe! 3 days,1540391343.0
meatypocket,"Why 3 days? Don't invalidate the cache until there is new data.    
It seems like you are invalidating the cache before you generate the new result?    

When new data is uploaded, start a celery process to generate the new result and replace the cache.    
",1540391498.0
tomchuk,"The right way to do this is as /u/meatypocket suggests - Cache indefinitely and have a signal fire off a celery task to compute the result of the expensive function and update the cache. The only thing you have to account for there is if the record gets purged from cache via some other means and you have to compute it on the spot, in which case, you're back where you started.

You can use something like this to avoid the thundering herd problem without having to resort to celery.

    import datetime
    import time
    import wrapt  # IMO, the only way to write decorators (pip install wrapt)
    from django.core.cache import cache


    def cached(cache_key, ttl, lock_ttl):
        @wrapt.decorator
        def wrapper(wrapped, instance, args, kwargs):
            lock_key = cache_key + '__refreshing'
            use_cache = kwargs.get('cache', True)
            results = None
            while not results:
                now = datetime.datetime.now()
                if use_cache:
                    results = cache.get(cache_key)
                if (not results or results[1] < now) and cache.add(lock_key, 1, lock_ttl):
                    results = wrapped(*args, **kwargs)
                    expires = now + datetime.timedelta(seconds=ttl)
                    cache.set(cache_key, (results, expires))
                    cache.delete(lock_key)
                    return results
                elif results:
                    return results[0]
                else:
                    time.sleep(1)
        return wrapper


    @cached('some_cache_key', 3 * 24 * 60 * 60, 60)
    def some_expensive_function(cache=True):
        time.sleep(30)
        return 'result'


If you combine that with celery by calling `some_expensive_function(cache=False)` from a celery task triggered from a signal, you've got the best of both worlds.

",1540420852.0
brtt3000,"Cacheops has it but I don't know how well it works: https://github.com/Suor/django-cacheops#dog-pile-effect-prevention

It says 'lock' so probably doesn't serve old data while it is locked. But you probably don't want to do this slow process in a view but do it offline in background.

I think I'd just roll my own thing using redis-py (and possibly a django-rq task) to process the new data offline after it is uploaded, and cache the intermediate data as JSON bytes. Maybe add a regular cached_view with short-ish timeout on the view.",1540391767.0
jedi_stannis,Cache back is a library that implements the asynchronous cache update that others here are talking about https://github.com/codeinthehole/django-cacheback,1540423972.0
IReallySuckAtChess,"Whilst not pure Django... I love Varnish. You can set a page to cache and then when a cached page needs to be purged, you can just call the purge route of the Varnish api with something like requests when your page is ready. Super simple, super easy... Cache invalidation can be either by just expiring over time, but I like to actually manually do it. ",1540452029.0
haloweenek,"I'd render that offline using a cronjob and serve a prerendered page.

In a cronjob i'd check the last rendered state, and if it changed i'd rebuild the flatpage.

Let's say file we're serving is named: current\_state.html

Job logic would look like this:

1. Check currently rendered state - if it's unchanged -> EXIT
2. Check for a lock\_key in cache (so we don't run multiple update processes) -> lock\_key present -> EXIT
3. Set a lock\_key in cache - it can be used to display info on the flatpage that new data is being processed - (you also display progress status from cache)
4. Process new dataset to new\_state.html
5. During the process you can update progress\_key in cache and display it for clients or admins
6. Touch the lock\_key so it doesn't expire
7. Processing done -> Rename new\_state.html to current\_state.html
8. Remove cache lock and progress\_key key

In this apporoach you don't need any magical row locks and other weird stuff. And it's preety bulletproof.

* If the process dies during the job you still have the current\_state.html on storage.
* The lock\_key will invalidate itself after certain time so the process can restart.
* You can wrap that in a nice try / except block with email alert if the update died.",1540402287.0
tastycat,"I'd probably call it something like `self_relation` or `next_variant` depending on how I was using it.

I like the way `{% if product.next_variant == None %}` describes what's happening, but you can probably think of a better description since you have more context.",1540383198.0
alexandremjacques,Does “relates_to” sounds reasonable?,1540390286.0
AlexKondrashev,"The reason why it's hard to give it a name is that there is no object in real world for this ""next related"" product. In real world there is the same product but with different price. I would just make a cart with items (linking to the corresponding product), and each item would have amount. Then Item would have a method which returns the right subtotal depending on the amount of this product added to cart.",1540417260.0
never_safe_for_life,"I like \`related\`. I totally get it, it is a list of products related to this one. It's a single word, which will be nice when you type it over and over in queries.",1540419642.0
KarlSayle,Take a look at Django Notifications: https://github.com/django-notifications/django-notifications ,1540367531.0
Fun2badult,Maybe signals?,1540367701.0
Rodkor,I use Ajax and Signals for real time notifications.,1540387598.0
madtriks,"It sounds like you would like a way to capture what was added or changed in a table and capture the user who did it.   


Track the changes in a model and then you can use that model to show what got changed and who by. But this would mean going through all the relevant changes that can be made, you want to track and create a new instance for each.",1540370756.0
bo_knows,"Are you looking for this notification on page load, or does it have to dynamically pop up even if they're not reloading?  

I've done the former, with a context processor that added all notifications to the context of every view, and I made my own ""Notification"" model. Then on my base view, I made a place for notification popups to be listed.",1540423336.0
pramodliv1,"Sounds like a perfect use case for [Channels](https://channels.readthedocs.io/en/latest/)? 

",1540384617.0
DJ_Spock,"Maybe make Ajax calls polling for notifications from some other view? In that view, you’d check whatever you’re using to store those notifications. Using a service from AWS like SNS or SQS? Storing it in some DB? In memory for a single server?",1540367598.0
pancakeses,What are these native ads?,1540362094.0
throwbible,Are you sure you know what native advertising is?,1540364816.0
Mekhami,your question is completely unanswerable as asked. try asking more specific questions.,1540360696.0
IReallySuckAtChess,"The entire post is a full stop? Umm... Okay....

Anyways, if by native ads you mean clickable banners you could implement a model with an integer field to count clicks, another integer field to count views, an image field for the banner itself, and I guess a url field to which clicking on it redirects. Write a template tag that randomly picks an ad model object or something and displays it within any templates....

Just so you know, you won't get paid for these. Most companies use Google etc because they want third party validation of the ad interactions and want to be able to place ads at multiple sites simultaneously. Doing your own custom ads should only be undertaken as a personal exercise. ",1540397501.0
haloweenek,"I'm currently running a custom build adserver with simple ad matching(topic / url) on a health oriented website. 

If you have any specific questions - i can help ?",1540402511.0
nerdwaller,"https://instagram-engineering.com/web-service-efficiency-at-instagram-with-python-4976d078e366

My guess is the Instagram story is enough to answer this - but the short version is “yes”. The long version is “if the business matters, yes but you’ll need some solid devs”.

I don’t mean to be harsh, but if you’re asking here before some research of large companies depending on python/Django - you may not have the right people yet.",1540357166.0
coderanger,"Yes. It can handle any number of users. There will be many other challenges along the way, but Django is not inherently a bottleneck.
",1540358122.0
oliw,"> How many users can django can handle?

It's the same as absolutely everything else: the bits that limit how many users you can have are infrastructure engineering questions. You can add more servers and a load balancers, cluster out the database, use thin frontends, build shared session caches, CDN the media, so on and so forth.

It also depends on the quality of your code, again, just like absolutely everything else. If you don't cache anything, or group your queries, or if you do stupid things, your server isn't going to support many users, whatever the framework.

Django isn't stopping you from doing any of that. But none of Django's ""rivals"" are either.

> i have to show some user activity to get funded!

You also need an MVP, a business plan and ideally some active users. At the moment it seems like you only have the idea part.

Stop worrying about webscale 2.0. You aren't there yet.",1540382175.0
yoongkang,"I suspect it's got more to do with your infrastructure than Django, really. Also, there are lots of types of scaling, depending on what problems you have.

For example:

* Too many requests -- Lots of caching, failing that using a load balancer behind a number of application servers
* Too many reads from db -- use database replication
* Too much data -- database sharding, nosql
",1540362654.0
pramodliv1,"[Yes](https://stackoverflow.com/questions/886221/does-django-scale). As others have mentioned, focus on building your features and launching quickly. 

If you also want to be prudent and ensure everything works well before launch, use tools like 

* **Django debug toolbar** during development to measure performance on each page and identify bottlenecks

* **Opbeat** to measure performance in production

* **Locust** to load test your site.",1540388576.0
haloweenek,Yes. But that depends.,1540402573.0
VegasTamborini,"A bad way to do it would be to catch the exception in a while loop that keeps deleting protected objects until an exception isn't raised. 

A much better way to do it is to set your foreign keys to have the attribute: `on_delete=models.CASCADE`. This will delete referenced objects as the original object is deleted.",1540352738.0
,[deleted],1540357251.0
shebazz42,"Try doing a log on your selector, like:

>	console.log(django.jQuery(‘#id_is_multiple_choice’))

before your handler definition.

If nothing shows up in the console, the code isn’t running. If it shows up with a length of 0, your selector is wrong.",1540330830.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1540324118.0
rajbabu0663,"I don't have the book. However, you can sign up for a free 10 day trial at Safari books online. I am not sure if this particular book is there but countless others are there on similar topics. ",1540318217.0
dougie-io,So much free info on Django Rest Framework you probably never need a book on it.  FYI though [bookfinder.com](https://bookfinder.com) is a great resource to find used books dirt cheap. Unfortunately since that one is a lesser known one you won't find any great deals on it.,1540323083.0
CraigTorso,"You appear to be registering the wrong class.

I believe it should be :

    admin.site.register(Response, ResponseAdmin)",1540308085.0
ubernostrum,"The `bulk_create()` method inserts objects in batches, with one `INSERT` query per batch.

The batch size is determined by:

* The `batch_size` parameter, if passed explicitly, or
* The database backend's `bulk_batch_size()` method, if the `batch_size` parameter was `None`.

`bulk_batch_size()` is only relevant on Oracle (which caps the number of parameters permitted in a single query). On Postgres there is no limit, so if you do not pass `batch_size`, you will get a single `INSERT` query. That query will insert a number of rows equal to the number of objects (a single `INSERT` query is permitted to insert multiple rows).",1540292020.0
scwaffle,Adding to the other answer it still depends on how you create the trigger.  You can specify your trigger to execute once per statement or once per row. Take a look at the [postgresql trigger syntax](https://www.postgresql.org/docs/9.1/static/sql-createtrigger.html),1540295769.0
boxidea,"These 2 methods are returning lists. You're assigning them to the form fields:

    self.fields['Help_group'] = list_Help_groups(self.registered_account)
    self.fields['anon_group'] = list_anon_groups(self.registered_account)

You probably want to assign them to choices instead:

    self.fields['Help_group'].choices = list_Help_groups(self.registered_account)
    self.fields['anon_group'].choices = list_anon_groups(self.registered_account)

",1540296017.0
i_like_trains_a_lot1,"> Fastest Static Files Served

On what do you base this affirmation? It doesn't benchmark against anything at all. There are better configurations that serve static files way faster (and reliably) than the configuration presented in the article. For example, nginx + cloudflare, or s3 + cloudfront.",1540300192.0
oliw,"This all assumes that using a CDN is faster. Are they?

I rather thought that for low-to-medium loads (eg <=500KB), serving static from the same server would be faster through HTTP2. Single multiplexed connection for the win.

Kinda moot without benchmarking though.

**Edit**: [CSS-Tricks did benchmarks of various configurations](https://css-tricks.com/http2-real-world-performance-test-analysis/). I really haven't gone too far into their optimisations but over 7MB (a HUGE page in my books), HTTP2 was only 0.1s slower than HTTP2+CDN. Anecdotally, I'd say smaller loads would be faster from your own servers unless you're bandwidth starved.",1540300872.0
haloweenek,"We cloudflare everything. It does http2. 
I also run my own nginx so I can bypass adblockers and analytics blockers....",1540311528.0
bisexual_fork,I pretty much learned python on Django. You'll be fine 😊,1540258650.0
bangemange,Just fly through the codecademy python course and you'll do just fine.,1540265853.0
jollybobbyroger,"The scientific coding is quite different from the standard Python coding. I'm a systems programmer dipping my toes in scientific programming.

Here's the thing though. Jump in! Head first. That's always the best way to learn.
Good luck and have fun!",1540278226.0
i_amwithnail,I had only really done the codecademy python course (as suggested before) and was fine.  I now do backend django and devops for a living. :) I imagine you'll be more than fine. ,1540301819.0
elarroba,"Third party Django apps are not part of your project repository. They are installed via pip (or conda, pipenv, etc) and then added on your Django project INSTALLED_APPS variable. 

Example:

Run: pip install django-app
Add:

INSTALLED_APPS = [
    ...
    ‘django-app’,
    ...
]

As a rule of thumb, you should always follow the third party app documentation.

Hope this helps.",1540254381.0
sol_tex,When you add the third-party app’s name to the INSTALLED_APPS variable under your local settings file Django will look for that app *wherever pip installed it* first before looking in your project for an app of the same name.,1540262494.0
nouvelledeveloppeur,"From the research that I have done online, it appears that it is not a good idea to directly work on the source code.

1. Fork the app.
2. Modify the code on the app that I am forking.
3. Pip install the forked version from the repo into my project's virtual environment.

An alternative appears to be just creating a completely new app into my  Django project and copying the contents of the app that I have forked and modified into that app.  

I am including this here for other newbies who might have questions about this. Any tips from more experienced Django developers would be greatly appreciated. ",1540315685.0
brylie,"Woohoo! Thanks for the tip, and for promoting Wagtail :-)

Edit: the tip you shared should probably be part of the Wagtail docs, as it seems really useful 😎",1540238532.0
CraigTorso,"You aren't testing the same url path

",1540217197.0
jillesme,"Looks really good. Especially for a first web app. 

Using you app the first thing I noticed is that you use IDs for posts. (e.g. [https://peter176.pythonanywhere.com/post/11/](https://peter176.pythonanywhere.com/post/11/)) this is pretty bad because I can just run a scraper to get all the posts on your app. Consider something like creating hashes (e.g. [https://www.instagram.com/p/BpKZp7nF6m5/](https://www.instagram.com/p/BpKZp7nF6m5/)).

&#x200B;

* In users app you have signal handlers in [signals.py](https://signals.py) and in [models.py](https://models.py) \- Why?
* models.ImageField + storing it in /media/ is nice for debugging but does not scale. Consider uploading images to S3. If you get a lot of users you will run out of disk space in a heartbeat.
* \`Post.likes\` should return a number, it currently returns a QuerySet. Consider making it \`likers\` or someting and having a method called \`likes\` which returns \`self.likers.count()\`. 
* You can just do \`.filter()\` on your queries. You keep doing \`a = Model.objects.all(), b = a.filter()\` while you can do \`Model.objects.filter()\`
* Some naming could be better. \`queryset\_list\` (from photo\_blog.views) makes no sense. It's a QuerySet, not a list. \`queryset\_list = Model.objects.filter().values(flat=True)\` would be a list

That's just from a quick 5 min look. You could get rid of all your Django templates btw and just create a full JavaScript app (using React / Vue / Angular). Impressive stuff man! ",1540205924.0
IReallySuckAtChess,"Hey, awesome bit of code. Very respectable for a first app. Just one little gotcha.... I don't see tests. 

Tests are important. Tests help catch errors when moving between Django versions, when libraries used get upgraded or when you make changes yourself. Tests aren't a nice to have, they're as important as the actual business side of your code. Tests are rarely 100% comprehensive but when you discover a bug that your tests don't cover then you write a test for it and forget about it. That bug won't happen again because your test will catch in the future. Over time you end up with a huge amount of tests but that's a good thing. More tests means less bugs.

Writing tests is also what makes code acceptable for use by most people. No tests usually disqualifies your code from use by most people. On top if that, tests are a cornerstone of the dev world, if you want to get employed, showing that your Github projects are well tested just looks amazing. Tests are also absolutely essential when more than one person works on code so people don't break each other's word. 

I've hired people based on the strength of the tests and documentation they've written even where their code made use of less than perfect algorithms or implementations.

As a final aside, document your app. The more you document, the easier it makes things for future you, a user, or a contributor. This is also something that helps with adoption of your app or employability. Hell, it helps you with developing and maintaining your code.

I know tests and documentation suck. It's boring, but it's so important. It's what gets you hired, is a big part of the job/hobby, and helps with getting your code used and makes your own life easier.

Tl;dr Great first attempt, but..... Tests and documentation! ",1540273520.0
TheoR700,"You should take a look at the different ways to use the include function in Django documentation. 

[https://docs.djangoproject.com/en/2.1/ref/urls/#include](https://docs.djangoproject.com/en/2.1/ref/urls/#include)

    include(module, namespace=None)
    include(pattern_list)
    include((pattern_list, app_namespace), namespace=None)

&#x200B;",1540216803.0
Rorixrebel,This helped me understand it. https://youtu.be/_B2yip40LFI,1540212713.0
Fun2badult,"I believe include(‘blogs.url’) just points the urls to the app blogs urls.py where the app name or the namespace is blogs. 

So when you have path(‘blog/‘, include(‘blogs.urls’,namespace= blogs)), when you go to www.website.com/blog it will use the urls in the blogs urls.py. So when you are linking the urls in the template and you’re trying to send it to some extension in blog/something then you just direct the url by using {% urls ‘blogs:something’ %} 

You would also have a urls.py under the app blogs where you would have every urls that come after blog/ like blog/create, blog/list, blog/update etc. 

I believe you also have the option of declaring app_name within the blog app instead. So in blogs urls.py you write

app_name = ‘blogs’

Then declare urlpatterns that fall under blog",1540193774.0
Comm4nd0,/r/djangolearning maybe?,1540194059.0
michael01angelo,"We have started a tutorial for creating django blog site  
Check it out :)",1540173721.0
hijinks,"Make sure question_num is an integer. It's good practice to sanitize and user input before doing anything with it

Never trust the client",1540162173.0
malditostuntman,"First thing I gotta point out, Is the secret key in the github repo the same from your project? If it is you should change, since it has gone public.
Also, the links in the nav bar doesn’t seem to work :( 

Everything else seems solid! Great work!",1540159480.0
detimirikajidedo,"Yeah, thanks!",1540193187.0
never_safe_for_life,"Vue is simpler, React is more mature, but whichever you use it'll be old hat in 2 years. 

Seriously though, based on what you said I'd go with Vue. You have customers asking for ""more"", Vue fits the bill and is still relatively understandable. Unless they are really big steer them away from the complexities of React. ",1540151114.0
xemoka,"Do keep in mind what you can get from things like [turbolinks](https://github.com/turbolinks/turbolinks) and [intercooler.js](http://intercoolerjs.org/). Sometimes when you need just a _bit_ of interactivity, this can easily save you from having to re-implement everything on the front end. Turbolinks will turn your website into essentially a full page SPA, swapping out the <body> and <head> on each navigation event; where intercooler will let you swap out individual elements with a server rendered view at request. Worth investigating for that ""quick and simple"" ""modern web experience"". 

But, I use VueJS myself. I quite like single-file components and you get to keep using everything youv'e learned about HTML/CSS without much fuss -> react makes you cover everything in javascript; which is great if that's what you want... but not really a smooth _level-up_ processes from what you might already be well versed with. ",1540153530.0
strig,I use vue if I can. I've used React before as well but I prefer vue. ,1540151163.0
farebord,"I worked with both. Actually I'm using React. I prefer React, and the react-way of coding. But I must say Vue templating is great, the v-if, v-for, are powerful tools that makes your templates clean and nice to read. Is up to you, both tools are great, I think React is a little more popular this day, and have much more libraries (extensions).",1540151287.0
porksmash,Both! React has a wider ecosystem of tools or other packages designed around React specifically. Vue is easier (for me) to get small projects done.,1540151623.0
athermop,"It doesn't matter.  React is a more marketable skill by far, but that doesn't matter if you're just delivering finished projects.

They'll both do the job and they both work well.",1540162518.0
turd_burglar7,"""Frontend language""",1540178761.0
cristoper,"I'm a big fan of Vue, and I think it is easier to understand if you've never used either before, but of course you can use either with a Django backend so it doesn't really matter in that regard.",1540157184.0
makavelixx,"Are you gonna use Django templates or REST? If the first one, then I'd recommend you not to use React. You don't want to mess with the DOM Model with react and do some ugly hacky HTML injections. I like React, especially because you'll also learn React native as it works exactly the same, which also increases your market value tremendously. Don't know about Vue.js, sorry",1540162318.0
bondoli,Depends. I like react for the bigger projects and Vue for smaller stuff the templating system has trouble with. ,1540167512.0
hhh333,"I went with [Quasar](https://quasar-framework.org/) which is built on top of Vue.js.

I think both React and Vue are good options, but I always had a preference for Vue's simplicity and Quasar made the learning curve even faster because it takes cares of the development stack, project structure and the MANY other things you would otherwise have to figure out by yourself.",1540171385.0
Durp56789,"I prefer react but you cant go wrong with vue. Both are great.

You can go wrong with angular though, stay away from that.",1540195208.0
ncubez,I use Angular. ,1540153383.0
,[deleted],1540152377.0
khalifornia420,Angular!,1540169555.0
ramse,"If you're using django forms, you can just pass an model object into the form itself and it'll auto-populate the data.

    MyForm(instance=obj)

If you're not using django forms you can pass an initial parameter:

    MyForm(initial={'field1': 'blah'})",1540143692.0
ramse,"You need to match the format used, or supply the format you're submitting.

https://docs.djangoproject.com/en/dev/ref/forms/fields/#django.forms.DateTimeField.input_formats",1540143819.0
mentix02,Can you share your code for `views.profile` please?,1540143999.0
ammkh1,Can you share your template file? ,1540144767.0
Whoopska,The @login_required is taking users to settings.LOGIN_URL which is accounts/login by default. If it should have another value you'll need to override it in your settings or hook up a page to that url.,1540145090.0
winterchapo,"You could set the LOGIN_REDIRECT_URL to a different route:

[https://docs.djangoproject.com/en/2.1/ref/settings/](https://docs.djangoproject.com/en/2.1/ref/settings/)

",1540146627.0
booooomba,"The Django ORM can of course handle SQL joins. And quite a few other things as well.

This might be helpful for you: https://docs.djangoproject.com/en/2.1/topics/db/queries/",1540141118.0
i_like_trains_a_lot1,"You can also make joins with django models, using foreign keys and custom made queries. The ORM paradigm treats each table as an object type (or collection of objects of the same type) and each row as an object instance.

But how you query the data is up to you. You can also use unmanaged models if you don't want django to manage the tables. (https://docs.djangoproject.com/en/2.1/ref/models/options/#django.db.models.Options.managed)

But it might really not be the best choice if you don't know the table schemas beforehand. But you can always hook up another database layer independent of django's.",1540140975.0
jtinsky,"Django does this exact thing very well. I’ve used it to parse, store then present election results for 8 years now. The read volume I experience is around 20K requests per minute at times and I’m running it all on super cheap shared hosting with no issues. 

The only significant change I’ve made over time has been to use an unmanaged model (as mentioned by /u/i_like_trains_a_lot1) and a PostgreSQL materialized view for the various different output formats I need.",1540145062.0
SuperheroicJo,"Absolutely, 100%. There is also SQL Alchemy (for Python), but also every single web application framework would handle this just fine. If all you want to do is this, then Django seems a bit overkill. Why not try Flask? Or even Sinatra from the Ruby world... or NodeJS!

But not PHP, do not go with PHP.",1540143662.0
arraybit,"Frigging auto-correct makes me look like an idiot.  I wrote  the batch process in python,  so I want to stick to one language. ",1540309658.0
arraybit,All of these comments are vary helpful.  Thank you. ,1540309748.0
Nicksil,"you haven't given us much to work with

post the code 

post the stack trace from the exception ",1540141703.0
simonw,The conference organizers said it would probably take about three weeks.,1540093657.0
brylie,Dang it! This post title got my hopes up... should have been phrased as a question 😛,1540109185.0
4022a,A couple weeks from now.,1540129920.0
A1AbAmA,I didn't even know djangocon was a thing!!,1540169608.0
Nicksil,"Give us the complete stack trace printed in your console when the exception occurs.
",1540087002.0
njancsar,R/djangolearning,1540082044.0
Niicodemus,"I would write just a normal view that's not under DRF that generates the PDF, and have your front-end open a new window/tab to that URL when the user clicks Print.",1540082145.0
VegasTamborini,"It sounds like you have all the Models' information already, and you just need to convert it all to a PDF?

If that's the case, then take a look at [reportlab](https://pypi.org/project/reportlab/). It's a library for PDF generation. I haven't used it in a while, but I remember it being fairly simple to use, and integrate with Django. [Here](https://docs.djangoproject.com/en/2.1/howto/outputting-pdf/) is the Django documentation on using reportlab to return a PDF response from a view.",1540089743.0
Jtb066,"I use PdfMake (http://pdfmake.org/#/) to build the pdf in the front-end. By doing that, you can use your rest api call as you would normally and get all the data you need. ",1540093458.0
Nicksil,Reference the documentation on [custom model managers](https://docs.djangoproject.com/en/2.1/topics/db/managers/#custom-managers). It'll talk about table-level filtering similar to what you're getting at.,1540072940.0
njancsar,http://www.reddit.com/r/djangolearning,1540052041.0
k_wade_a,if you don’t see an JS error in the console. Try Google’s Tag debugger. https://chrome.google.com/webstore/detail/tag-assistant-by-google/,1540082844.0
thebluelight1,"Only the path gets stored in the database, the files are stored in the MEDIA_ROOT in the settings. ",1540036385.0
oliw,"You *can* store files in the database, in blobs, and you can use a Django Storage class to do this ([example](https://www.djangosnippets.org/snippets/1305/))...

There *are* use-cases for database blobs but typically —certainly in the domain of Django websites— you want your files served by the webserver that sits in front of Django, not Django itself. This frees up Django to deal with real requests.

",1540043559.0
athermop,"As the other user noted, it just stores the path.  Of course, if you want to store files in the database you can do that ""manually"".",1540042451.0
njancsar,http://www.reddit.com/r/djangolearning,1540052055.0
mephistophyles,Source? Link to where it's hosted publicly? Github repo?,1540043267.0
Bishonen_88,That's awesome! thanks for sharing the code!,1540074211.0
mmcardle,"Have you tried printing out the value of [request.POST](https://request.POST) for both requests and seeing the difference in the case when only the last form gets saved? 

&#x200B;

Also looks like your using my site [http://mmcardle.github.io/django\_builder/#!/home](http://mmcardle.github.io/django_builder/#!/home) :) nice",1540331113.0
Nicksil,"Not a Django-related question, mate. Check out subreddits with a focus toward front-end web development using technologies such as HTML, CSS and, *maybe*, JavaScript.",1540102516.0
huntdyla,"I like it a lot. I had an economics competition in high school where one of the challenges was to identify country flags. Our teams was the only one to score 100%.


One thing I noticed about this. It repeats a LOT. In the first 50 round, ~30% were repeats (I got Bahrain 6 times in the first 50).


I can see repeats being useful for studying. Maybe adding a toggle option for “no repeats” would be a cool bit of additional practice for you.


Overall I had fun messing with this for a bit :) ",1540009447.0
chanamasala4life,"This is neat!

Just a heads-up from the perspective of an educator: Learning is very context-dependent. The game right now teaches you to select the right answer from a field of four possibilities. Adding levels of difficulty later in the game would permit a wider corridor of learning. Some ideas off the top of my head:

* increase the number of choices to 8, 12, 16 every 10 or 15 rounds.
* show only false choices and add a field ""None of the above""
* Reverse the pattern: Show a country name and 4, 8, 12, 16 flag choices

Hope this helps!",1540027417.0
maks25,nice work!,1540003073.0
eqVnox,pretty cool !,1540005387.0
enesimo,"TIL about whitenoise. 

In what other situations can it be useful other than deploying a prototype or a quick and dirty POC?",1540015876.0
jimmyjimmy777,excellent!,1540020283.0
sPENKMAn,"Nice, work! would recommend to turn off debugging though ;)

",1540016895.0
brandonmacer,Very nice!  Maybe make it reveal all four correct flags regardless?,1540072948.0
japanfrog,Nice job. Why Django tho? You could do  the same with plain JavaScript stored locally and local storage if you need any client side persistence. Seems like a large codebase overhead for something so simple.,1540021360.0
porksmash,Are you saying `created` is True for both update and creation?,1539993286.0
angellus,"https://docs.djangoproject.com/en/2.1/ref/templates/builtins/#add

    <a href=""{% url 'index' question_num=question_num|add:1 %}"" >Next</a>

This is done via something called ""filters"". If you are not familiar with what these are, you should read more about the templating language: https://docs.djangoproject.com/en/2.1/ref/templates/language/",1539984550.0
rocky-ji,"It’s really useful to me,thank you did it ",1539994444.0
makavelixx,"Are you planning to execute logic on the client or on the backend? If on the client, then this has nothing to do with Django and you can not execute Python within your HTML page. JavaScript (or even better, TypeScript) is the correct solution to this.

 If it is code you want to execute on the server (backend), then, since you are in the django subreddit, I assume you're familiar with the idea of what Django already is.  I invite you to finish the Django tutorial because this is a common thing in Backend development. In fact, Django has been built for this",1539971613.0
Notion67,"You can use JavaScript but I would recommend using a hyperlink and styling it like a button. See below.

<a href='/index'></a>

Then in your urls.py create a url in your urlpatterns to match the url in your HTML and point that to the view.",1539971700.0
omgplsno,Cron is a really good way to run a cronjob. Give it a shot!,1539971661.0
nannooo,"Normal cron jobs with a Django command are fine, though I use Celery periodic tasks as I think it's a bit easier to manage. 

For example: if you have a cronjob that you want to change from running once an hour to twice an hour, then you can do that through your code and it will be all set when you deploy it again (do this with continuos integration and you don't even have to touch the server). A cronjob isn't triggered by Django and therefore you will generally have to login to the server and change it manually in the crontab. 

Besides that, there are tools like Celery Flower to manage the workers and see the output. But you could of course install some other random software to manage cronjobs...",1539958197.0
brtt3000,"Make some custom management commands and use regular cron.

There are also some cron django apps but ultimately regular cron and some commands is fine and you can run the commands manually if you need to.


edit: LPT: in the cron command you need to use the python from your virtual env, see stackoverflow etc",1539967607.0
nouvelledeveloppeur,"Does anyone have advice about how to implement Chron with DJango. I read this tutorial:

[http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html](http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html)

Does this mean that Celery should be made into a separate app?",1539970105.0
zookz42,I use https://apscheduler.readthedocs.io/en/latest/ on  heroku for some projects.,1539970929.0
j03,"I have had good experiences with both Celery/Celery Beat and Kronos.

Kronos is good in that you can define tasks dynamically -- you set up a general cronjob that calls Kronos, then Kronos fires off tasks as appropriate.

For anything hefty or where I'm using celery elsewhere, celery-beat is a good bet -- but Kronos feels more lightweight.",1539976548.0
naren8642,May be specific to my use case but I liked using cron for my scheduled tasks because I want them to run even if the other stuff crashes or whatever for any reason. Is that an invalid fear?,1539992118.0
GreatCosmicMoustache,"[Computer, pip install celeryman please.](https://www.youtube.com/watch?v=maAFcEU6atk) 
 
Great work, thanks, was looking for something like this. ",1539937363.0
cleancole,"Love the name, but what's the goal? Using a DB instead of AMQP or others?",1539954889.0
nouvelledeveloppeur,This looks interesting. This means that celeryman will automatically create the tasks and we do not have to create the tasks ourselves with celery?,1539967304.0
black_loop,"Why can't you connect to the database? If you are trying to connect remotely, you have to edit postgres configuration to allow remote coonections by specifying your ip address.",1539929929.0
GertBurger,If you have django_extensions installed then checkout the graph_models management command. ,1539934955.0
Chobibubu,If you create a paypal business account you will get access to their developer api and you there you can create sandbox accounts.,1539930078.0
11010001101001,I use AWS S3 as my storage bucket for django media and static,1539892476.0
Mekhami,You don't.,1539885543.0
peoplemonster,"Third party packages use them because it's an easy way to make a model that'll work regardless of your schema. 

They need to do that because they can't possibly know your schema.

You do, so you likely won't need them except for special cases.

I avoid them for normal use because they aren't natively supported by database, so you will have a tougher time with database tools that aren't built specifically for django

",1539895187.0
defmacro-jam,Generic foreign keys are awesome when you need them. But it sounds like you don’t need them right now. ,1539886775.0
spookylukey,"I'm the author of that post. My comment would be that you unless you need voting across a wide variety of things in your app (it sounds like you've got just two) it would be much better to make something specific for your Post and Comment models.

For voting you probably need to keep track of who voted for something (to prevent multiple votes), so you could simply have a CommentVote and PostVote model (potentially with an abstract Vote base class for the common things in it) - this is a technique I didn't think of for that post. It works quite well in Django/Python because you can easily write code that manipulates both CommentVotes and PostVotes and doesn't care which one, because of duck typing.

Alternatively, you could have a single concrete Vote model and use one of the other techniques I put in my article. There really isn't a huge amount of functionality in django-vote, it wouldn't take you long to build something custom for your application that doesn't come with all the downsides of generic foreign keys. 

One way to look at it is this: start by implementing voting for one of your models. Then implement it for the second, avoiding duplication by abstracting out the common stuff, but avoid GenericForeignKey.

&#x200B;",1539971024.0
ruraro,"Looks very sleek. I've used your old admin theme previously with great satisfaction.

I have to say the pricing model here is a bit complex and to my understanding prohibitive - at least for my use cases, where it would be used by n+1 self-servicing customers who I can't really invoice for admin view usage.

I get it, though, that just releasing an admin theme for a fixed fee (+ e.g. renewable yearly support) is not always the most appealing business model in a crowded market.

Good luck, and good hunting!",1539893692.0
iKnowSearchEngines,Wow I’m just experiencing Mezzanine-Django and now this... mind blown here.,1539888829.0
bjorn6,"Is this a replacement for the Django admin or a backend for end users of a saas created with Django? I'm a beginner, please eli5. Thanks!",1539884859.0
f1nal_,"Live Demo can be found here:  
[Open Demo](https://jetadmin.io/?utm_source=reddit&utm_medium=banner&utm_campaign=django_demo&utm_content=link&utm_term=promo)",1539881759.0
malditostuntman,"Just discovered this, but I think I don't get the pricing. 50$ per month and per 500 activities? That sounds crazy expensive to me :(",1539955285.0
Brachamul,Sweeeet,1539908890.0
sarcastic_potato,gorgeous,1539919364.0
nouvelledeveloppeur,How does this compare to django-grappelli?,1539957524.0
antonsvetlov,How much time needs to spend all free activities?,1539892851.0
please_to_help,"So I already use the Django default admin for people at my company to enter data into. All I do are specify models and use the default model admin for everything. So, that being said, if I follow the installation instructions on the github Readme, what changes will I see? By installation I mean what comes out of the box when I follow:

Installation
Download and install latest version of Django JET:

    pip install django-jet
# or

    easy_install django-jet

Add 'jet' application to the INSTALLED_APPS setting of your Django project `settings.py` file (note it should be before `'django.contrib.admin'`):

    INSTALLED_APPS = (
        ...
        'jet',
        'django.contrib.admin',
    )

Make sure `django.template.context_processors.request` context processor is enabled in `settings.py` (Django 1.8+ way):

    TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                ...
                'django.template.context_processors.request',
                ...
            ],
        },
    },
    ]",1539902607.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/djangolearning] [Great django 2 tutorial](https://www.reddit.com/r/djangolearning/comments/9vdkpd/great_django_2_tutorial/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1541708794.0
IReallySuckAtChess,"Honestly this is where a simple rest api for Django is best, and then really implementing the UX client side with Javascript. I'd recommend you look at something called Full Calendar, it's a great JS calendar and will probably deal with most of your frontend needs as is. ",1540452755.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1539864391.0
booooomba,"Nothing easier than that. Just browse the ""django"" tag on Github:

https://github.com/topics/django

",1539864570.0
KimPeek,"https://djangopackages.org/categories/projects/

Lot of variety here and some great examples.",1539882942.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1539863339.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1539862066.0
changedmyusername,"holy shit, it actually works!
I've been searching for this for a couple of days! thanks for sharing!

If anyone is wondering,  you can declare the number of items in each page this way:
{% lazy_paginate 6 entry_list %}",1540420666.0
cr4zy3ng1n33r,Thank you so much!,1542837697.0
booooomba,"You need to learn 2.1

No idea about what is most commonly used, but probably 1.8 and 1.11 as they're both LTS releases. 2.2 Will be LTS as well.",1539895774.0
FreakAzar,The talk if you want to watch [https://www.youtube.com/watch?v=r1ckr0ll](https://www.youtube.com/watch?v=ix_DSdxgoK0),1539841957.0
synw_,"The security questions in the end are interesting and important. About authentication and authorizations this can be managed via the `info.context.user` object that is the same as the usual `request.user` object. About malicious queries and nesting limits how to implement that? I usually add a csrf token to the graphql request to mitigate problems like this but it might not always be possible, depending on the app.
About caching this is a know pain point of graphql, I guess it has to be done client side.",1539957313.0
morinonaka,Because python is a lot nicer language than php?,1539806084.0
monim67,"Django is lot faster to setup, learn and develop, any app you build is reusable. What more do you want? ",1539806531.0
Rodkor,I'm pretty good at both PHP5 and Django. I use Django because PHP is much worse than Python in pretty much every aspect. It's easy to produce smelly code with PHP.,1539809511.0
compscigurl,"I have worked with both and honestly Laravel is much more complex than Django in my opinion with a bigger learning curve. 

I personally think it’s easier to create technical debt misusing Laravel instead of Django.",1539806910.0
athermop,"I do know php and python.

I would use Django instead of Laravel because Python is a nicer language to work with.

That being said, I will quote myself from another [similar question](https://www.reddit.com/r/Python/comments/9ih95r/i_am_php_developer_what_can_python_do_that_php/e6jyvbd/):

&#x200B;

>  
>  
>Speaking at a high enough level, any modern language can do everything any other modern language can do...particularly if you're willing to write some C glue into some more low-level stuff, it's just a matter of how much work you want to put in to it.  
>  
>So your question becomes ""What can python do more easily than PHP?""  
>  
>If you know PHP and don't know python...there's not much that you're doing, if anything, that python can do *more easily* than PHP. But that's largely because as a PHP developer you're not even attempting to do a lot of the things you can do easily with python.  
>  
>The problem with questions like yours is that I can point out some particular thing that Python can do easily, and then someone else can say ""well, you can do that with PHP by doing X, Y, and Z"". Then you've got this frustrating back and forth for eons of time that does not really end up with a solid answer.  
>  
>So to avoid that problem you can start talking about intangibles like how the design of the languages lead to more or less correct/maintainable/safe/readable/blah code, but that is neither satisfying nor likely to yield a result where someone changes their mind.  
>  
>I think that really the only way you can answer your question in a satisfying way is for you to try solving problems with python instead of PHP.

&#x200B;",1539807230.0
pydanny,"While I vastly prefer Python and Django, one argument for Laravel is the tight integration with the awesome Vue.js framework. That said, I think that's a gap being closed soon.",1539815242.0
brtt3000,"Zappa works pretty good, and if you set everything up well you can do a lot of traffic fast and cheap. Probably best for small to medium apps without crazy dependencies.",1539809387.0
morinonaka,Nice!,1539804764.0
KimPeek,Great slides. Do you have a recording to accompany it?,1539804998.0
ghostofgbt,Very cool! Must have been a great presentation considering with even a rudimentary understanding of django and AWS one could learn a lot just by flipping through the slides for 5 minutes! I'm definitely going to try this with a small test project ASAP,1539836133.0
IReallySuckAtChess,"How does Zappa compare with Heroku?

Heroku looks amazing at first glance but often turns out to be stupidly expensive for my deployments. The ease of scalability is great but automatic elastic scaling is so easy these days... Does this also become cost prohibitive on busier sites? ",1539846659.0
vilczy,In django template make 3 divs with same name html class and use something like https://jqueryui.com/tabs/,1539804790.0
tabizzle,Get Bootstrap,1539874664.0
unkz,"You should look into database locking.  What you need is a lock on the table that holds the schedules, which will prevent other people from reserving on that  time slot.",1539802198.0
NotSelfAware,"I think the way I would do it is to basically use an API call to create an instance of the WeekendSession model when a person initially selects a session time in the form. Have a flag on the model to indicate that it hasn't been confirmed yet. Use a scheduler (either cron or some Redis backed solution depending on scale, but sounds like cron would work fine for your use case) to check for all unconfirmed models above a certain age and delete them. You could do all this through Websockets to make it truly asynchronous.",1539805897.0
DabsJeeves,"Make the selection update a flag in the database on click. If they had been sitting on the page before making a selection and somebody else takes it, it can return a ""That date and time is not currently available, please select another."" ",1539801555.0
nannooo,"If I remember right - when a worker is down, you should not get a 404 error. But if you think it is the worker, then you could also reboot your server to see if that solves the issue.

Sure it's not some weird coding issue? 

Have you tried to reproduce the error on your local environment as well?",1539796456.0
Rodkor,"Even if debug is false the info is still being printed in the backend, it's just not being rendered for everyone to see. I tell you this because I've found logging Django's output and checking it in cases like these extremely helpful.

Journalctl is also a very helpful tool. Most of the times you can solve these trivially after reading your journals.",1539888765.0
IonTichy,a quick [googling](https://stackoverflow.com/questions/619616/resource-for-recognizing-framework-cms-from-url-or-other-clues) helps: Vignette CMS,1539783673.0
Niicodemus,"Old CMSes before WordPress and SEO best-practices. You used to see them all over the place. I think I remember this being in the docs back pre 1.0, so probably just time to update them.",1539787985.0
Gagaro,The `pk_set` parameter should include the primary key of the removed instance.,1539775723.0
IReallySuckAtChess,"Migrate to Python 3 first. That is absolutely essential since Django 2+ now only supports Python 3.

After that migration has been done I would migrate to 1.11 and then 2 and 2.1. Honestly, outside of the large improvements in the ORM in 1.11 and the move to path instead of url for routing in 2, I can't think of much off the top of my head that you could get caught up on. Hell, I'd even brave the jump from 1.10 to 2.1 one shot. The big issue might be whether you rely on any external libraries that are not Django 2 or Python 3 compatabile. Unfortunately the Django ecosystem isn't as vibrant and alive as it once was so many packages have become abandoned. Updating them is usually quite easy although time consuming...

A big gotcha would be if you rely on Django channels or DRF. 1.10 is so old and many of those libraries have had huge internal changes, probably applies to many things in general. ",1539767065.0
devxpy,"I found the best way to upgrade is to open up the django changelog and go through each of the things, checking whether you have used any of the features mentioned and accomodating for them.

",1539768327.0
angellus,"I would do it in the following way:

1. Upgrade to 1.11 (most recent LTS version) **1.10 is no longer supported, getting to a supported version should be your highest priority**
2. Upgrade to Python 3 (2.x does not support Python 2)
3. Figure out and plan upgrade to Django 2.0, but do not release it until ~March (unless you need a feature from it).
4. Once April comes, upgrade to Django 2.2 (next LTS release).
5. Fix all of your deprecation warning in preparation for the 3.2 upgrade. 

Django is kind of in a transition phase. They have changed how they do release and versions in the 2.x releases. Starting with 2.0, all A.2 releases will be LTS releases and it will be backwards compatible with that A.0 release. So you can go straight from 2.0 to 2.2 and skip 2.1. If you follow only the LTS releases, you upgrade/maintenance cycle would be this:

1. Wait for next A.2 release (usually once every 3 years)
2. Upgrade to B.0 release.
3. Fix deprecation warning in B.0 release
4. Upgrade to B.2 release.
5. Fix deprecation warning in B.2 release.

[Full details on the Django release process](https://docs.djangoproject.com/en/dev/internals/release-process/)",1539779257.0
morinonaka,Definitely upgrade sequentially. ,1539759411.0
rockingthecasbah,"Try the upgrades sequentially, run tests. Upgrade python first and get the code running on newer version. Iirc the recent versions of Django do not support 2.7. ",1539761994.0
CKreuzberger,"Should upgrade sequentially. Also have a look at this blog:

https://nezhar.com/blog/upgrade-a-django-based-application-from-1-11-to-2-0/",1539768269.0
chason,"One request, please for the love of god, even if you do allow someone to change their language, at least on first load respect whatever the browser says.

&#x200B;

Also don't confuse language and country.",1539765234.0
ryselis,You may use Django's `LocaleMiddleware` and change the language using `set_language` view as described [here](https://docs.djangoproject.com/en/2.1/topics/i18n/translation/#the-set-language-redirect-view),1539758123.0
IReallySuckAtChess,"The best way to internationalise is via the url i.e. https://example.com/en/test. You can do subdomain Internationalisation as well e.g. https://en.example.com/test but I don't recommend that. I then allow the drop down to reroute to the new url. 

In terms of internationalising things in general, I make heavy use of the built-in gettext functionality. It's just very convenient being able to just wrap something in a {% trans %} tag in templates or _(' ') in Python code.

Translating the actual model objects, there are a number of approaches. What approach you take is really dependent on your desired workflow...

I like to store a user language preference in the cookies so even not logged in users get some kind of consistent experience. ",1539767831.0
TheoR700,">blog/post/detail.html (this is the file that is being told it doesn't exist)

The error says it is looking for blog/post/list.html, but you say this file is blog/post/detail.html. Is it detail.html or is it list.html?

Your view post_list is trying to render the template blog/post/list.html and so is the post_detail view.",1539735310.0
variables,Pricing based on 'activities' - only 500 for free.  Want to update an email address? That's an activity.,1539733601.0
synw_,"The idea looks interesting but reading the presentation page I have no clue on how it works: there is no code demo. The ""Get started"" button takes me straight to a registration form. I would like to see some example code or documentation before eventually take some time to register and try it out. I""m not hot for blindly registering just to check it out.",1539711036.0
jnvilo,What does this actually do? I gave it a spin and the only functionality I could see is a way to add new fields to the User model and then do nothing else.  ,1539712239.0
furyfred,"Interesting idea, like a paid version of Cookiecutter templates.",1539787990.0
algorithmatic,"Nice. I've already seen something similar, also in Django, that's open source, but it doesn't offer hosting. ",1539744163.0
toyg,"Reaction 1: fuck, our industry is fixated on making itself unemployable.

Reaction 2: ok, give us an API to automate your automation (yo dawg) and we’ll kill Squarespace in no time.

Reaction 3: most of the value has always been in finely-tuned customizations to make more interesting services than contact forms; we’ll just have to be more explicit about people paying for that part. Panic somewhat reduced.

Reaction 4: 15 years, I just need another 15 years and all this will be over. Let’s go make an extra pension payment...",1539770504.0
njancsar,That is cool.,1539709871.0
ippy98gotdeleted,"Love the idea!  
I will have to look at this later. ",1539713791.0
leonrlr4,so i guess this is a django in an django great work man!,1539735503.0
IReallySuckAtChess,"5000ms? Well huge times need to be assessed as follows:

* Are my database queries efficient? 
* Is my channels code actually running async or properly calling async_to_sync? 
* Is my server properly configured? This often comes to ensuring that you provision enough resources and don't have some stupid configuration mistakes like serving static via the built-in web server. 
* Is there something wrong with the network infrastructure i.e. Server is very far away? Database is slow to access. Whatever. 

We need to know more. Its very normal to use Nginx as a load balancer and to manage the incoming connections. Is Nginx properly configured? 

Some services spin down your instance and then only spin it back up again when there is a request. So the first request might be slow but it's fast after that. I think Heroku does this. 

There are so many things to consider and we just don't know enough. 5s is stupidly slow and something is wrong, we just don't have enough information to know what that is. ",1539768971.0
IReallySuckAtChess,"What is data? Django performs lazy loading, and calling data might any number of formats depending on your code.

In your case your trying to include your data which is GeoJSON object as a string. You could probably just leave the quotation marks out where you define and assign blah. If Django doesn't output it as a valid JSON object then you might need something like {{ data.as_json }} or whatever. NB: as_json might not exist but something similar should or there may be a filter e.g. {{ data|json }} ",1539769349.0
Barnezhilton,"Get that geom column out of your properties.

Geom is the binary spatial column.. you already have text pair coordinates in the GeoJSON. You don't need to binary version in leaflet.


Looks like you need to modify your data pull (SQL) or drop the geom column after you pull it.",1540984301.0
GoddamnEggnog,"I do kinda like the idea. Basically Python 3.7 data classes that happen to have persistence. That said, not a fan of how this one:

    class Bar(TypedModel):
        name: str = String(max_length=30)

is inconsistent with the basic case:

    class Bar(TypedModel):
        count: int = 0

For the integer case, the rvalue is an actual value, but for the string it's just more typing metadata.

Python could really benefit from introducing refined types like in Scala, where you can add additional constraints like ranges or regexes to your types. Even if it were valid to specify this as

    class Bar(TypedModel):
        name: String(max_length=30) = ""Name""

it would be more consistent.",1539699314.0
bluetech,"This is sorely needed.

mypy does have a way to cater to special cases: [plugins](https://github.com/python/mypy/tree/master/mypy/plugins). For example you can see there are plugins for `attrs` and `dataclasses` with their special syntax. In my experience the attrs plugin works well! (I am using the `attr.ib(type=str)` syntax and not the type-annotation one).

There is some effort going on [here](https://github.com/mkurnikov/django-stubs) but I haven't tried it yet. I hope they succeed.",1539720939.0
CraigTorso,"I don't really understand the problem being solved here.

What type hinting do you need to know an integer field is expecting an integer?


",1539696762.0
Nicksil,"For the most part, each app will have a urls.py to route to its own views.",1539649252.0
tastycat,"You can get this deal for renewals, even though the page says otherwise: 

> Use IDONATETODJANGORENEW to get 30% discount renewing your old license. As with the original promo codes all proceeds will go to the Django Software Foundation.

from: https://www.reddit.com/r/django/comments/9nop4n/support_framework_of_a_strong_relationship_30_off/e7t5rbe/",1539625242.0
cnu,Just yesterday I got a monthly license. Any way I can use this code and get a yearly license?,1539663560.0
brtt3000,See https://www.djangoproject.com/weblog/2018/oct/12/djangopycharm-promotion-2018/,1539617822.0
doot,"    shop = Shop.objects.first()
    all_reviews = Review.objects.filter(product__shop=shop)",1539611732.0
opinicus,"Since you've set `related_name` on the `ForeignKey` fields, the example you included in your request should work:

    my_shop = Shop.objects.first()
    reviews = my_shop.reviews

[See the Django docs on backwards relations](https://docs.djangoproject.com/en/2.1/topics/db/queries/#backwards-related-objects)",1539613827.0
IReallySuckAtChess,You really should explore the ORM a bit. Go check out the docs. ,1539630005.0
OMDB-PiLoT,"Nice package, may come handy in the next project. Saving it.",1539621829.0
masklinn,"> Do you know how I might be able to attach a different value to each button

Exactly like that. The `<button>` tag can have [`name` and `value` attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-name). When a form is submitted through a button, that button's `name` and `value` are used as if it were a regular `<input>`.

This works just fine in all browsers from IE8 onwards (IE6 and IE7 had pretty horrendous bugs there but I hope for your sake you're not supporting them).",1539590985.0
mumbaimaari,"it has to be read only, secondly 'policy' is not a field in POlicyDocSigning, so you will have to include it separately '\_\_all\_\_' doesnt cover extra fields",1539573494.0
pancakeses,"Share the code from the view in App A where you're creating an instance of model 'a'.

Really, if you are already creating an instance of model 'a', you can just append the creation of model 'b' right afterward, with the appropriate FK field pointing to the newly created 'a'. Assuming you manually created model 'a' instance:

    from myproject.app_b.models import ModelB
    
    ...
    
    new_instance = ModelA.objects.create(this_field='yes', that_field=False, another_field='sure')
    ModelB.objects.create(fk_field=new_instance)
            

Alternately, use signals, and when Model 'a' is created, create a Model 'b' instance. Something like this in models.py for app_a:

    from myproject.app_b.models import ModelB
    
    ...
    
    @receiver(post_save, sender=ModelA)
    def create_model_b(sender, instance, created, **kwargs):

        if created:
            ModelB.objects.create(fk_field=instance)
            

Either option should be really simple. Edit your post to include the relevant view code, and maybe we can help you :)

Also, is ForeignKey appropriate, or should this be a OneToOne relationship?",1539563236.0
TheoR700,"    <!-- register.html -->
    <form method=""post"" enctype=""multipart/form-data"">
        {% csrf_token %}
        <h3 class=""text-center"">Customer Registration</h3>
        <div class=""card-group"">
            <div class=""card"">
                <div class=""card-body"">
                    {{ user_form|crispy }}
                </div>
            </div>
            <div class=""card"">
                <div class=""card-body"">
                    {{ customer_form|crispy }}
                </div>
            </div>
        </div>
        <button type=""submit"" class=""btn btn-primary mt-1 btn-lg btn-block"">Register</button>
    </form>

&#x200B;

    # views.py
    def register(request):
    
        template_name = 'register.html'
        context = {}
    
        if request.method == 'POST':
            user_form = UserCreationForm(request.POST)
            customer_form = CustomerCreationForm(request.POST)
    
            if user_form.is_valid() and customer_form.is_valid():
                # Handle valid forms.
            else:
                # Handle invalid forms.
        else:
            user_form = UserCreationForm()
            customer_form = CustomerCreationForm()
    
        context.update({
            'user_form': user_form,
            'customer_form': customer_form
        })
    
        return render(request, template_name, context)

I needed to do something similar over the summer for a class project. I needed to create a customer and user at the same time. Above is an abbreviated version of what I had. ",1539563358.0
ramse,"You could try putting both forms within the same element however they could not share the same field names and I'm not sure if django would throw a fit due to the other form fields being present in the POST data or not, you would have to test that.",1539557341.0
yoongkang,"Pass a different endpoint to the action. For example:

```html
<form action=""/contact/"" method=""POST"">
</form>

<form action=""/newsletter_signup/"" method=""POST"">
</form>
```

Use two different views for those URLs targeted above: like this:

```python
@require_http_methods([""POST""])
def contact_view(request):
    form = ContactForm(request.POST)
    if form.is_valid():
       ....

@require_http_methods([""POST""])
def signup_newsletter_view(request):
    # Much the same
    form = SignupNewsletterForm(request.POST)
    if form.is_valid():
    ...
```

",1539578878.0
elbiot,"If they share the same submit button, just make it one form. Why pretend like they are two forms?",1539562011.0
neurotoxiq,Are they related at all by foreign key?  Inline formsets would work for that.,1539575221.0
i_like_trains_a_lot1,"What I usually do when I have to do something like this, is that I have the two forms, and a hidden `form_type` field with the form ID, in each form, and each form is rendered in separate `form` elements. And in the view, you can overwrite `get_form_class` method (if you are using generic form views) where you check against `request.POST[""form_type""]` and use the correct form class. 

This way, you can submit only one form, even when the other one has required fields and the validation works as expected, one form at a time.

It's a little hack-ish, I am aware, but I hope this helps!",1539587872.0
Nicksil,>[A formset is a layer of abstraction to work with multiple forms on the same page.](https://docs.djangoproject.com/en/stable/topics/forms/formsets/),1539554546.0
massover,Check out the [get_context_data](https://docs.djangoproject.com/en/2.1/ref/class-based-views/mixins-multiple-object/#django.views.generic.list.MultipleObjectMixin.get_context_data) method. You can super this method and add whatever context you want to the template. Here’s an [example](https://docs.djangoproject.com/en/2.1/ref/class-based-views/mixins-simple/#django.views.generic.base.ContextMixin.get_context_data) ,1539530434.0
wskyindjar,The url name can’t be the same. It’ll only pick up the last one. ,1539528109.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1539525318.0
brtt3000,https://docs.djangoproject.com/en/2.1/topics/auth/,1539512976.0
IReallySuckAtChess,Django has built in auth. Use it. Don't roll your own ever. If you're qualified to write auth then you wouldn't be asking questions like this. ,1539521723.0
ncubez,It seems you're new to Django. Watch [this playlist on YouTube](https://www.youtube.com/playlist?list=PL-osiE80TeTtoQCKZ03TU5fNfx2UY6U4p) and code along. ,1539524711.0
magnumbaguette,"This section in particular can help you:
https://docs.djangoproject.com/en/2.1/topics/auth/default/#how-to-log-a-user-in",1539535261.0
yoongkang,Have you tried placing a form below the last reply?,1539487906.0
elbiot,"> Also, is there any way to rename each form that will be passed as context? 

Really no idea what you're trying to achieve in general. For example, is this nested commenting like Reddit?  Are you going to make dozens of these forms on every page? But the answer to the quoted question is probably to include a hidden field that specifies what comment is being replied to.

If you have two different types of forms, the easiest thing would be to have two different submit urls.",1539490924.0
IReallySuckAtChess,"I'm unsure of what exactly you want to do? If it's just normal comments like at the bottom of a blog or something then why not just use django-comments. If you want something super easy for the public to use then there is Disqus app for Django.

Sketch something on paper and clearly describe what you want. If you do then we can better understand and help.",1539502292.0
pancakeses,"What issues are you experiencing?

I'm using GeoDjango with a current project. Django 2.0 and Python 3.6 no problem. ",1539476337.0
Niicodemus,"I use it fine with Python 3.5 and 3.6 and Django 2.1. There are some new things in the latest Django release (look at release notes), but the admin version of OpenLayers is lagging way behind, and I wonder why.",1539475231.0
IReallySuckAtChess,"I've used it with Python 3.6 and Django 2. No issues at all. You're doing something wrong.

Are you installing the packages as sudo so they're installed as system packages, or via the package manager? Make sure you're installing it in your virtualenv with the user permissions of the user accessing said virtialenv. Are you letting your IDE install packages? Are you using a requirements.txt that might be forcing specific combinations of packages? ",1539501354.0
Rodkor,"I worked with Python on Windows for the last time like 3 years ago, but my ass hurts to this day.",1539538038.0
IReallySuckAtChess,"You should look at overriding the save method. Signals aren't bad but they're bad for performance and don't work for bulk creation and deletion.

By the way, you should totally look at using intermediate models and the `through` argument. I don't know if its entirely useful for you but when I hear lots of models connected via foreign keys then it always makes me think of using one. ",1539501575.0
elbiot,That's what signals are for https://docs.djangoproject.com/en/2.1/topics/signals/,1539465873.0
elbiot,You can write your own template tag. Not sure if that helps you,1539480160.0
brtt3000,".. or use django's session or cache framework? 

Consider if you need the whole cart of just some basic info like amount of items?

Invalidation of cached data is tricky: both when the user changes their cart (or places the order) but also when items go out of stock or get renamed or whatever. Best to keep it simple and only cache if (optimized) database queries are not good enough.
",1539450728.0
japanfrog,"* [Understanding Cookies and Sessions](http://www.lassosoft.com/Tutorial-Understanding-Cookies-and-Sessions)
* [How to use sessions - Django docs](https://docs.djangoproject.com/en/2.1/topics/http/sessions/)
* [Best place to get started](http://google.com)",1539469560.0
oOUOo,"Yes. That extra database call isn't going to cost you much in terms of performance unless your queries are inefficiently written. 
Speaking from experience, storing your cart in DB and grabbing it each page is far easier and a more straightforward approach than the alternative of using session based carts. 

Storing and calling your cart from db has benefits too:

* Cart persistence is guaranteed for users (at least those authenticated). Users losing their carts when their cache is cleared is a terrible experience.

*  You can easily track and analyze abandoned carts linked to users. This is very useful for e-commerce but is a little harder to do when your cart data is stored in sessions.

",1539484937.0
Fun2badult,"I just made a simple shopping cart. I used PostgreSQL, backed up the data and uploaded it to amazon S3. Then I used heroku PostgreSQL addon to link the amazon s3 bucket to serve the static files. 

I’m a beginner so I’m not sure how efficient this is ",1539463043.0
nannooo,Big fan of PostMark. Have been using them for years.,1539441375.0
daeatenone,"I highly recommend you NOT use mandrill. Ever since they rolled it into mail chimp as an add on they stopped making improvements and everything has been going to shit. Deliverability and API availability have taken the biggest hit. The worst thing is that they have no SLA, they even took down their embarrassing service status page and redirect to twitter where they infrequently post anything useful. Go with a provider whose only product is SMTP. /rant",1539447989.0
throwbible,"I have previously used Sendgrid, Mandrill and Postmark. Of the three Postmark was a clear favorit. Both Mandrill and Sendgrid are great options, but I felt that the web interfaces where a little slow and not that obvious to use. 

Regardless of what you pick, start with a service that offer an SMTP service, then you can switch to their APIs later if you need it. Often the different services will have more options if you go with their API, but SMTP makes it easier and faster to switch provider.

One important thing to keep in mind is to get DNS cleaned up if you jump between providers. You'd typically need to add DNS records to deal with DKIM or SPF, and if you don't remember to clean up those records as you go, they will get rather messy.

TLDR: Try [Postmark](https://postmarkapp.com) their pricing is reasonable and they have the features most of us need.",1539441711.0
manowar689,"Sendgrid can struggle around  DEMARC policies, I would suggest tracking API requests on your side also as I have worked in a support perspective and it was hard to get usable stats from the portal, I would look to implement a DB model that would use a ""to"" field and then a URL field with a customer unique id embedded and an is_sent bool , after that I would look to render the email content and push to a sendgrid class be it created by you or a sendgrid library, i would personally create a sendgrid class which uses requests under the hood as it can tend to be more flexible and you shouldn't need alot to implement alot for the API calls",1539450902.0
gerardv-anz,I’m using mailgun and it is great for my application FWIW,1539482100.0
brtt3000,If you use Amazon AWS then SES and django-ses worked fine for me. ,1539460002.0
hiren_p,"I wish there were a single transactional service provider that's good at everything - Sendgrid offers better A/B testing, Postmark has a better Time to Inbox (TTI), Amazon has great pricing...Would you need incoming email support?

 I think that's not available on Amazon. And last I checked, multi-user login and phone support are not available with Mandrill. 

Since I like reading posts that compare services, I read this one: [https://quickemailverification.com/blog/top-transactional-email-services-compared/](https://quickemailverification.com/blog/top-transactional-email-services-compared/).

Anyway, which one did you finally opt for and how's the experience been?",1540379388.0
snipperbytes,"Which ESP you are using now have started using any ESP ?

I was having same question in mind so done some R & D on ESP.

Have you tried [Pepipost](https://pepipost.com)?

i am using it for a while. it gives good inbox delivery rate , various integration options and Cool UI for tracking your email activity. checkout if you have not yet chosen. 

&#x200B;",1542882776.0
pemboa,Do they support having _only_ the IDE running on the local machine yet? Ie. everything else is on a remote machine via SSH?,1539399093.0
ElDyudo,My current PyCharm license expires in 2 month. Is it possible to renew now using the code?,1539420138.0
TheoR700,"By definition a foreign key has to be a key to another table or the same table that will uniquely identify a record in the table, a.k.a. a primary key. Otherwise, a foreign key wouldn't be referencing a single record and you could get undefined behavior.",1539374471.0
angellus,"You have to create a third/different model to store the phone object:

1. Create a model named something like `Phone` with only a single field of `number` or something.
2. Create a [data migration](https://docs.djangoproject.com/en/2.1/topics/migrations/#data-migrations) to copy all existing `phone` in the `Main` records into new `Phone` records.
3. Change `phone` on `Main` from a `CharField` to a `ForeignKey` (or even `OneToOne` if that is the proper relationship type)
4. Now you can either still create the `Serial` model like you have above and point it to the `Phone` model, *or* you can just add `serial_num` to the `phone` model. 

You do not actually want to have the phone number stored in two different tables (`Main` and `Serial`) that would completely defeat the purpose of normalizing the data. ",1539378067.0
arbitraryuser,"A couple of pointers:

Firstly, don't call your model ""Main""; it is ambiguous and the word has specific meaning in python. It might work, but the next coder who comes along is going to be very confused. (See 
https://en.m.wikipedia.org/wiki/Zen_of_Python)


Then, in general you should stick to standard ways of doing things unless you have *very* good reasons not to. There's two reasons for this: 1. When you're starting out you should probably assume the the standard way is better for a reason you might not yet understand (technical humility) and 2. The next developer to come along is going to struggle to understand *why* you did what you did, and their technical humility would dictate that they'll assume you had a good reason for doing something non standard, and then they'll hurt their heads trying to figure out why. 

Based on your description of what you're trying to achieve, there's no reason not to call the first model ""Business"" and make the second model have a field called ""business"" (lower case ""b"") that foreign keys to ""Business"". 

There are lots of reasons to use a foreign key normally, specifying it's easier to understand for the next dev, faster to query, and most importantly, if a business's phone number changes then it only needs to be updated in one place.

Then, you should look up _set queries https://docs.djangoproject.com/en/2.1/ref/models/relations/

This would allow you to do things like ""for widget in business.widget_set.all():""

Lastly, while namespaces protect you, I would also advise against calling a model ""Serial"" (pySerial has a module called ""serial.Serial"")",1539378390.0
IReallySuckAtChess,"In short, no. BUT. Big but, you absolutely must point to a column that only has unique values. The Django automatic primary key functionality ensures this. Most databases also have built-in primary key stuff that ensures uniqueness. I know some people use uuid fields for their primary keys and that is for all practical purposes guaranteed to be unique. Others generate unique keys using their own methodology. The issue is, this isn't something you should ever be doing yourself if it's not absolutely necessary. Same with Auth, if you don't absolutely have to then don't do it. 

What a database does when it points to a duplicated primary key (this breaks the definition of a primary key) is, if I remember correctly, undefined behaviour. Mssql, MySQL, and Postgres could all return differently thus you're code will cease to be database agnostic as you will have to write logic specific for handling such a case. This makes your code flawed by design.

So the long answer, yes it has to point to a primary key with the primary key being some unique key inherent to a specific column for any said row. It does not have to point to the pk field Django automatically includes with all models. 

Now I have done something incorrect above, I speak of a primary key. Your primary key isn't necessarily the pk Django includes by default, but a primary key can be any field that has a guaranteed unique value for a column. So it must point to a primary key, just not necessarily the pk primary key Django auto generates. ",1539411908.0
brtt3000,"You can use `to_field` option to specify another field but that field has to have `unique=True` but I'm not sure if that works for your case:

https://docs.djangoproject.com/en/2.1/ref/models/fields/#django.db.models.ForeignKey.to_field",1539372959.0
IonTichy,"In my opinion, this is misusing css classes as ids and bad style.  
A better way would be to group all those links in one element that has the post-id as an attribute (e.g. id attribute).  

This way, you can access the id in your js by simply looking for the parent element, the toggles would have all class ""imageElement"" and you could remove the id attribute from the ""likeCount"" link.

Also, consider putting the js logic into a separate file instead of polluting your templates.
",1539364806.0
booooomba,Nice. Will take a Look. But what is AWS Lightsail?,1539369104.0
esseeayen,"Wait, have you tried pydanny's Django boilerplate?",1539371593.0
pkkid,"Cool. -- Just FYI: This will most likely work on servers besides Lightsail if anyone uses other hosting. I think anyone using this will have to tailor it a bit for their needs. Similarly, I made one a few weeks ago. It sets up nginx, uwsgi, letsencrypt, redis for my Django environment and supports playing around with websockets as well. Maybe it's useful as a second reference? -- [https://github.com/pkkid/pushingkarma/tree/master/ansible](https://github.com/pkkid/pushingkarma/tree/master/ansible)",1539396757.0
carlio,"You didn't say *why* you want to separate them, and that motivation and explanation might help know the best way to answer. I personally am doing the same thing but mostly to learn frontend tech :-)

* Edit: also now it's React after I wasted way to much of my life trying to get Angular to work consistently...",1539340182.0
old_faraon,"I'm doing webapps and upgrading from templates+jquery to React+DRF was really nice.

To solve Your SEO problem You use server prerendering. It's easier easier if Your full stack is JS but looks like people are doing it with Django+React (https://medium.com/meural-product-development/setting-up-server-side-rendering-with-react-redux-and-django-4d6f4d2fd705 )

Or You can do User-Agent detection and serve a static page using templates to bots instead of the dynamic website. It would mean writing a lot of views twice though. ",1539346766.0
pat_the_brat,"I use [Nuxt.JS](https://www.youtube.com/watch?v=nteDXuqBfn0), which is a server-side rendering library for VueJS. I love that combination.

Haven't worked with React, but I heard that [Redux](https://redux.js.org/recipes/serverrendering) does for React what Nuxt does for Vue.

Basically, you have:

- API server (DRF)
- Node.JS(?) server running Redux (or Nuxt)
- React (or Vue) clients

When a client connects to the Nuxt server, Nuxt loads the VueJS components, calls the API to get the data, and returns HTML with the data embedded into it. All other calls go to the API from your SPA.",1539350964.0
pdsbecks,"My approach would be to combine the two approaches. If you write content that is supposed to be ranked high by search engines, like landing pages, blog entries or similar I would go with some sort of backend rendered solution.

If you are writing an application that's used mainly behind an user login, google isn't supposed to rank the pages high anyways so I wouldn't worry about it.

",1539344892.0
Ebriggler,Submit a sitemap to Google and Bing. For the most part the web crawlers are smart enough to find your content. ,1539344875.0
_under_,"The solution here is to render JavaScript server side. However, that's easier said than done, especially since your back end is not JavaScript.

That being said, if your reasons are SEO related, you probably don't need to worry too much as Google can crawl JavaScript rendered websites. Though, YMMV.",1539364353.0
pydanny,"Just so you know, scraping Craigslist violates the terms of Craigslist. And Craigslist is pretty hardcore about finding people who do this and kick/banning their accounts for life. I know because I've had to turn down client requests for projects doing this precise activity.",1539293747.0
ubernostrum,"Well, you have to retrieve 50k rows of data from your DB (maybe more depending on relations and maybe a lot more queries depending on whether you’re correctly using select_related), and then instantiate 50k model objects. That takes time. Then you have to perform serialization on all of them and send that out over the network. Which takes more time. 

Why can’t you paginate these records?",1539281898.0
Daishiman,"That's a gigantic number of objects to pass around quickly. It's also very likely that you're performing at least one query to a related object for each item.

Increase the logging verbosity to see the emitted queries for serialization and try to remove those from the request.

Also, beyond more than a couple of objects you should use server-side pagination. ",1539299191.0
angellus,"First: make sure you actually need converters. You can use [regular expressions in your URLs already](https://docs.djangoproject.com/en/2.0/topics/http/urls/#using-regular-expressions). I personally have never used a converter or even heard of them until I saw this post. 

Second: The docs you posted already told you were to keep them:

    from . import converters, views

That means they would go in the the `converters` submodule inside of the module for your project/app (depending on what level the `urls` module is in that you are using the converters for)",1539285305.0
_under_,"Django doesn't really care where you put (most of) your classes. In this case, you could put the converters in any module (e.g. converters.py), so long as you register them with the `register_converter` function. Note that the registering code would need to be executed. That means you should put them somewhere where they'll eventually be called. (Usually by getting imported, e.g. models.py or urls.py)",1539365054.0
mi1ord,Try return self.author.username in def __str__ Comment model,1539389333.0
oliw,"This is doing a huge pile of crap in Python. Getting every measurement, sorting and slicing. All. In. Python.

Your database can do this for you. Change the query.

    Device.objects.annotate(last_measurement=Max('measurements__timestamp'))

Edit, I see you're currently iterating (and regrouping) a list of measurements. You *could* annotate a `last_device_measurement` onto each measurement (similar to above) but if you're only doing that so you can regroup by device, annotate the devices directly.",1539258656.0
spookylukey,"It looks like both versions of your code are going to be really inefficient - you are fetching a load of data from the database to then sorting it in Python to get one piece of info out. Try to do the sorting in the DB. 

&#x200B;

Start by writing a function (not a method, just a function) that gets the piece of data you want. Test that function. Then in your view code call that function and include that piece of data in the context you pass to the template. There is no need to put methods on a view function, just do it the simplest way. For class based views you may need to override \`get\_context\_data\` (one of the reasons I disloke CBVs), for function based views just include it in the context data you are already passing.

&#x200B;

&#x200B;",1539257886.0
DustPuppySnr,"If you use class based views, you can add a method to the view called `last_measurement` and in the template you can just use `{% view.last_measurement.timestamp %}`. You can even decorate it with `@cached_property` if you use it more than once.


If you use it in multiple views, add a method called `last_measurement` to `Device`.",1539246675.0
_under_,"You probably want to move that logic into a custom [template tag](https://docs.djangoproject.com/en/2.1/howto/custom-template-tags/).

Generally, if you find that your template logic code is beginning to do more than just render variables, you'll want to extract that code into template tags or filters.",1539364661.0
Ablastado,"What you are looking for is called a zero downtime migration. Check this link http://pankrat.github.io/2015/django-migrations-without-downtimes/ for an extensive guide.

Essentially, what you need to do is create the new table (s) on the database with a migration. Do this deploying only the migrations, the app shouldn't know anything about the new table(s) yet, so don't deploy the models.py or any other code that tries to access this new table(s). The second step is a data migration or management command to populate the new table(s) from the existing data. Finally, you can deploy the code that will access the correct data. In addition, you may want to remove any access to the wrong table in the code in the next deploy and finally run a migration that removes the wrong column or table.

It involves many steps, but it works without having to take your site offline.",1539207336.0
hhh333,"u/Ablastado's answer point in the right direction.

However, in my experience, this approach is usually worth the effort for large or mission-critical databases.

In real-world scenarios, this is usually a one-time deal and once it's completed, migrations can handle further database changes.

What I usually do is prepare a migration script that will do all the work and test it thoroughly with a copy of the production database in a test environment.

The downtime will largely depend on how much data you have to crunch and how efficiently your script does it.

You can also operate on a copy of the database and flip the database in your Django settings at the last moment once your code is deployed.

Whatever solution you pick, automate and test it :)",1539216010.0
oOUOo,"Correct me if I'm wrong, but I believe the solution is a lot more straightforward. To allow each customer to have more than one order, you may not need a separate table, but just an additional foreign key field (customer) in your order. 

You can take it one step at a time. 
1) Add a foreign key field to your Orders table relating it to Customers. Allow for null=True.
2) Run migration
3) Write a simple script that filters your existing customers based on each order id, get the customer id, and populate the new customer foreign key field in the corresponding Order.

Doing this will have minimal down time. Then again, I'm making my own assumptions of your requirements. A many-to-many relationship as you have described allows each customer to have more than one order (which is standard), but also allows each order to be attributed to many customers (do you need this?). If you just need the former requirement, then a simple foreign key field will suffice.


",1539222588.0
yoongkang,"Depends if you want downtime or not. Even banks have downtime for migrations -- so some downtime to stop new data from coming in is usually fine.

If you cannot have downtime, then it becomes a bit more difficult. Here's some of the steps I would take:

* Create the join table first (between customer and order). 
* Update the code so that any new orders will be saved to the db in the old style (in the foreign key on Customer), but also to the new table we've created, but we won't use the new table for any reads yet.
* Do a data migration to copy all the old orders to the new customer join table
* Update the code to read from the new table
* Delete the old foreignkey

Also you should always take backups. Always.
",1539223249.0
DudaFromBrazil,You should look for pydanny's Django cookie cutter. It has docker and some Django best practices built in.,1539217166.0
DudaFromBrazil,"The advantages is that the production, staging and Dev will all have the the same setup, so you can narrow down differences and possible bugs related to those differences. Also, you can easily deploy on structures and scale it easily if necessary.",1539217301.0
TheoR700,"I have a docker-django Docker image that I use for most of my Django projects. The README is not up to date. I am planning on updating it later today, but the Dockerfile is pretty straight forward to understand.

[https://github.com/BashfulBandit/docker-django](https://github.com/BashfulBandit/docker-django)",1539265136.0
nouvelledeveloppeur,Can Saleor be used to create a two-sided marketplace?,1539223304.0
Atoro113,"I'm eager to try this out, Django is great and this would be so much easier to customize than something like Magento. The only thing keeping me on WooCommerce for now (ew, I know) is Printful integration.

Maybe I could make my own API for that...",1539230048.0
adonese,Customizing the payment gateway would be a huge win for saleor. I intended to work on this feature (to add our own payment gateway support) and make it available for the community. ,1539252710.0
blacwidonsfw,Lol looks exactly like Shopify.  I guess if it's not broken copy it why not,1539208653.0
DudaFromBrazil,"Yes, you can setup your Django stack (namely ngnix, gunicorn and what not) on, usually, port 80 and the ftp server on the regular 21. As they run on the same server (you can push the files to 127.0.0.1:22 so you don't have to deal with it setup.",1539217543.0
IReallySuckAtChess,Absolutely useless piece of junk article. Engrish at its best. Meaningless paraphrasing of various other sources. Just don't bother with it. ,1539169360.0
japanfrog,"A lot of wrong assumptions made in that article. I fear for an uninformed reader that uses it as a reference source and ends up spreading misinformation in turn. If anyone here is thinking about writing an article like that when you have little to no qualification to pass your opinions as factual knowledge, state that on the article. Be up front and inform your readers in the fact that you are inexperienced and that you are writing it as part of your journey. I frankly believe that it is not only bad to make articles on very popular subjects like this and pass your opinion as if it fact, but it hurts whatever credibility you might be trying to build by posting such content. ",1539161421.0
Tpm248167,Ugh self promoting shit blog.,1539166647.0
strasna_kobila,"From django rest docs:

>This authentication scheme uses a simple token-based HTTP Authentication scheme. Token authentication is appropriate for client-server setups, such as **native desktop** and **mobile clients**.


I think is much better solution to use SessionAuthentication over https and CSRF for React Apps. 

LocalStorage (redux-persist) doesn't provide expire option and there is a risk of it getting stolen in an XSS attack.

If i am wrong please correct me.

Edit: And i don't see how in this example verifies user on reload.",1539177311.0
andrey_shipilov,"Well, look at this template for example: https://github.com/stephenmcd/mezzanine/blob/master/mezzanine/pages/templates/pages/menus/dropdown.html

It's called here: https://github.com/stephenmcd/mezzanine/blob/master/mezzanine/core/templates/base.html#L67

It recursively renders the descendants of the current page in the context.",1539167220.0
oliw,"I would consider what data you need to get back out of this. How many hours is this department working? How much capacity do we have and where for each month? What projects are costing us most?

I think the following model layout makes sense

    Project(..)  
    Department(int:people)
    Allocation(fk:project, fk:department, date:month, int:hours)

I'm using a date for storing a month there. Just use the first of each month. This will allow you to retain __year and __month lookups, as well as getting natural, single-field ordering all built in.

But it *might* make sense to create a Month model and FK that from allocation. The number of work days varies month-by-month and holidays and training days also impact the amount of time available.

You could probably keep adding things to mirror real life but this more than covers my suggested queries.",1539174121.0
Nicksil,A single model with a char field and choices set to months in a year. Then a duration/integer field to represent time allotted,1539150311.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1539133535.0
tsqd,"Can you expand more on your general thoughts here? It sounds like you feel you need some sort of child user model class, but you should be able to have a the child users be just additional User objects.",1539138248.0
yoongkang,I don't think that's the way to go because Django already has an abstraction for this called Inline Formsets: https://docs.djangoproject.com/en/2.1/topics/forms/modelforms/#inline-formsets,1539224550.0
treqbal,Maybe create your own template tag: https://docs.djangoproject.com/en/2.1/howto/custom-template-tags/,1539148889.0
RolandBuendia,"I managed to do it. The trick was to use a custom tag based on simple\_tag. In a nutshell, I created a new module in a templatetags folder containing a new tag called load\_snippet with with:

from django import template  
register = template.Library()  
@register.simple\_tag  
def load\_snippet(file\_name):

&#x200B;

Then, inside the definition I read the contents of the file with read() and return it (by default it will escape tags this way). ",1539181981.0
CraigTorso,https://docs.djangoproject.com/en/2.1/ref/templates/builtins/#verbatim,1539125208.0
AlexFromOmaha,Autoescape should do this. Did you disable it elsewhere?,1539149300.0
Tpm248167,Your best bet is probably to put the route that will aggregate data from multiple tenants in a “shared app”. From there you can iterate over all tenants and query the respective schema.,1539167432.0
njancsar,I am interested in this too.,1539099918.0
zieben,"So, wanted to have some level of isolation on the indexed data. The current project structure:

Shared apps:

\--accounts (db 1 schema public) middleware lives here

Tenant apps:

\--business logic (db 1 all tenant schemas )

Installed apps:

\--accounts

\--business logic

\--indexing app (db 2 public schema )

Followed the suggested approach querying on the indexing app on db2, retrieving needed tenant and querying db1 on respective tenant. Thanks for the input",1539704369.0
GamersPlane,"Well, I found the solution, though I don't totally get what's going on.

I needed to explicitly set `media_type`. This wasn't clear from code, as best as I was able to follow it (probably because I'm new to Python).",1539100072.0
420Phase_It_Up,"I would recommend DigitalOcean. They have very flexible pricing that is also very transparent and easy to understand. They also have a lot of really good tutorials you can use, particularly for Django. If you are worried about the load you might experience I would recommend the following steps:

* Enable caching for your views. Django supports many different cache backends, such as Redis or memcache.
* Use Nginx as reverse HTTP proxy to terminate HTTP and HTTPS. You should also use it to serve all static assets. 
* Make sure you have gone through your code for any low hanging fruit in terms of optimizations.

I hope this helps.
",1539095966.0
booooomba,"Well Heroku is quite/very expensive. Especially when compared to a VPS. Also VPS here in Europe are significantly cheaper than in the US. And that even goes for high availability servers in a German datacenter. Downside is that you have to administer your own server.

What also could be interesting is managed Docker hosting. So something like http://sloppy.io 

",1539094891.0
keepdigging,"Couple pieces of advice:


Load test! You have estimates of how many users and what they will be doing so automate it and run it against a separate test environment, that way you will know for sure how many users you can support.

Start small, but keep Postgres on a different machine. You can get away with only 2 5$ servers to start, but application servers scale differently then databases and this will make it much easier in the future.

Monitor your development/production infrastructure!
When cpu and disk or IO performance is bad and page loads are slowing down make sure you know and can react by scaling up your infrastructure.

Databases are trickier to scale in most setups, you would need to take the site down and pass traffic to a splash page while you dump the database to a file and transfer it to a larger machine, import the data again and point all your traffic through to the new box.
This is a place where managed services are quite useful, AWS RDS lets you scale up with a couple clicks or you can automate it when load is high and there is 0 downtime.

Application servers are much easier to scale. Once you have found the right size you can just add more to the cluster and balance traffic across them with a load balancer.
AWS or digital ocean or most others have ways to do this easily.",1539099464.0
lzantal,Grab either DigitalOcean or Linode $5/month server and deploy there. Can’t get any cheaper than that and their support when needed is excellent. I am using both of them for smaller projects around 30-45k users or less. All the bigger ones are on aws. ,1539096047.0
ItsAPuppeh,"Digital Ocean $5 droplets will take you way further than you think, as long as your app is relatively well designed and not blocking for dozens of seconds on I/O to 3rd party APIs or the DB. If it turns out you do need more resources, upgrades are pretty easy as well.",1539116649.0
iconfinder,"We are moving from AWS to Heroku and it looks like we'll be saving money. So on the surface Heroku might look expensive, but you will quickly pay for wasted resources on AWS",1539093217.0
JimBoonie69,"Not being a jerk but are you sure you will have thousands of users live on your app at anytime? If you have thousands of concurrent users you should probably be making $$$ on ur app.

A hobby project sounds like perfect use case for free heroku tier. I've made plenty of little toy apps that still run after many years.",1539112729.0
ckinsey,I costs money to serve 1000 users my friend--there's no free lunch!,1539113046.0
japanfrog,"I second the advice of Digital Ocean. I’ve been using them for the past 3 years and it costs me 10$ a month for two servers running all my Django websites. Also unless you actually have data backing up your “1000” users statement, get ready to have less than 2 users on your site at anytime. My website had over 3,000 users, but I never saw more than 5 users on at once so it was pointless to over deploy. A clients website had over 20,000 monthly visits and had a very similar traffic pattern of less than 5 users online at any given time. Something that even a original Raspberry PI would handle with ease.",1539135036.0
pydanny,"At my old job (Cartwheel) which I left in July for BriteCore of this year, we moved all our servers from Heroku, Amazon EC2, and Digital Ocean to AWS Lambda. What a huge difference. Most of our servers went from several hundred dollars a month down to $0. Our only real cost now is database and file storage. We also did the same for all our clients, and they loved it.

_We do have one open source project still on Digital Ocean, and that's [Django Packages](https://djangopackages.org). It costs us $70/month, which if we could bring to AWS Lambda would bring down our costs to $20/month. And that entire cost would be the database expense, not the server._

AWS Lambda does have its shortcomings, primarily with video or other gigantic file handling. For that we offloaded to third-party services, but the savings in devops time and worrying about traffic spikes easily offset using third-party services for large file handling.

Speaking of traffic spikes, one of our customers got mentioned on one of their countries' television. We weren't ready for it (no CloudFront, DB caching half-implemented) but between AWS Lambda and the resiliency of Aurora RDS meant that nothing went down. In the end, it wasn't cheap, costing about as much as one of our old Heroku setups (which would have died under that load).

All that said, if you know Heroku backwards-and-forwards, and are exploiting certain edge cases, [there's ways to make Heroku run at insane load inexpensively](https://www.rdegges.com/2018/to-30-billion-and-beyond/). I've known about Ipify for years and it's awesome. Of course, what Randall doesn't mention in that article are his database choices, how much he's broken up things to exploit small dynos, and the tiny scope of his awesome project. ",1539151139.0
BuyChristianSlaves,DO is not expensive wtf are you talking about,1539174096.0
krakster,"DO, Linode and the like are top tier, if you wanna save some more there are valid options, check out lowendtalk.com.

I personally use CloudCone with excellent results, a 512mb kvm vps costs around $24 the year.

My referral if you wanna use it: https://app.cloudcone.com/?ref=493

Their current offers: https://www.cloudcone.com/offers

Check out the low end plan, $2/month, also after you're a registered client they send even better offers by mail (I currently have 1GB/20Gb for just $20/year)

Digital Ocean is the big leagues no doubts, but for starting I like going small with these guys.",1539194013.0
Rilakai,"I think what you're looking for is Ajax! It lets you make calls to views without loading the page.

We have a similar example for subscribing.  We have a subscribe toggle button with an onclick event that calls our jQuery toggleSubscribe() function containing the Ajax call like so:

    // Subscribe or unsubscribe
    function toggleSubscribe(){
        $.ajax({
          url: ""{% url 'subscribe' object.id %}"",
        });
    }

You can definitely find more advanced examples out there by Googling Django and Ajax, but if you have any questions about the one above I'd be happy to try and help.",1539099601.0
goodbrocolli,Yes I've been also wondering about this one. I didn't know where to start simply because I have zero idea on what tech is behind it. It would be great to know if there's an accessible tech that works with Django.,1539096754.0
Boofern,I guess if I'm being down voted I must be missing something :/ I'll keep looking.,1539093381.0
porksmash,Did that happen in a properly reversed URL? Everything I can read leads me to believe 'en-us' LANGUAGE CODE would reverse to `/en/post`,1539117592.0
cappielockie,"Is 'en-us' in your LANGUAGES setting? https://docs.djangoproject.com/en/2.1/ref/settings/#languages
```
LANGUAGES = [
    ('de', _('German')),
    ('en', _('English')),  
    ('en-us', _('US English')),
]
```
This is how Django discovers language preference https://docs.djangoproject.com/en/2.1/topics/i18n/translation/#how-django-discovers-language-preference",1539200639.0
Boofern,"Changing the language code to ""en"" solved the problem.

I think I know the reason why, but I can't be sure. So I'll update when I'm certain instead of taking people down the wrong path.",1539421185.0
Jayeshv98,"This course on Eduonix is great! I have a website which was not very attractive but after buying this course I created my own theme which helped me so much to get real quality traffic just by changing the theme. Real projects were awesome! 

At some point instructor made a MAJOR omission in the requirements for this class. He only notes Python, and HTML/CSS/JS.

But overall explanation was clear he explained it properly, Good information . Worth to buy it. I like this course",1539099995.0
DrMaxwellEdison,"> I don't understand why, if a view in appA references index.html, it can't just be assumed from context that it should load index.html from appA. 

Two reasons:

1. Because it is possible to make a `templates` directory at the project level, outside individual apps, and you can refer to templates in that directory without special syntax. For instance, if you have `mysite/templates/404.html`, you can use that as your site's general-purpose 404 error page.
2. Because each individual app is able to contain templates for other applications, and the template system is able to resolve which template by the same name and relative path to serve based on the order of `INSTALLED_APPS`.

Say you have two apps loaded, appA and appB. Say that appA is some basic standalone application and appB is intended to override some of appA's methods and templates. In this scenario, and if set up properly, you can safely create a template as `appB/templates/appA/index.html`. This template would then be served *within appA* without having to modify the files in that application.

This is useful in certain contexts where you might override the template of an `admin` view to create some custom functionality. You don't need to make a whole copy of the admin app or file structure and then modify it in-place: all you need do is set up a template in the right place within your own app, and it should override properly.

---

So because Django has that type of overriding functionality, you can see why it can't really make that many assumptions about your `templates/` directory structure. At its most basic, it only knows to start from a `templates/` directory, so if you tell it to call up `index.html`, it will look for `templates/index.html`: it's not going to try to guess whether you've used the common convention of writing a subdirectory named for the application.

*edit for a typo*",1539091952.0
massover,"For your second item, the [APP_DIRS](https://docs.djangoproject.com/en/2.1/ref/settings/#std:setting-TEMPLATES-APP_DIRS) setting may help.",1539087838.0
yoongkang,"> My plan is to create an endpoint that will internally call the 'update item' endpoint as many times as needed (for each item) in order to use its middlewares, signals, validators and everything else that comes with a request, and not just update the object and 'save()'.

Don't do this.

If you're doing this with plain forms, use Django's formsets -- validate + update in one request-response cycle.

If you're using DRF, just pass `many=True` to your `Serializer` instantiation.",1539224752.0
floralincon,Hope this will help you in learning Django,1539094166.0
catalyst1993,Already solved the problem. The simulated solution at [pastebin.com/R30V6BYE](https://pastebin.com/R30V6BYE).,1539062404.0
I_said_wot,"If Zone is a Charfield,  I've used this before:

https://docs.djangoproject.com/en/2.1/ref/models/querysets/#icontains

Hope it helps",1539053620.0
oliw,"You solution is flabbier than it needs to be. Annotate, order, get first. Done.

    Zone.objects.values('title').annotate(event_count=Count('event')).order_by('-event_count')[0]
    Camera.objects.values('title').annotate(event_count=Count('event')).order_by('-event_count')[0]

Not clear what the relationship of the EventImage to Event is in real life. If an event needs an EventImage to count, you can (in Django 2) add something like a `filter=Exists('eventimage')` to your count to only count those events. If Django 1.11 or lower, you can do it all in one with a Subquery. You may even be able to just `Count('event__eventimage')` but if you allow more than one image per Event this may lead to duplication.",1539097935.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1539049520.0
semajames,This is a pretty good explanation of what's going on. [link to explanation.](https://docs.python-guide.org/writing/gotchas/#mutable-default-arguments),1539057355.0
coderanger,"You defined `_images_set` as a class-level value which makes it a global singleton. Think `$IMAGES_SET` in PHP. What you what is:

    def __init__(self):
        self._images_set = []
",1539072325.0
yoongkang,"Nah, the Python ecosystem doesn't really do ""shared nothing architectures"" like PHP does, unless you're doing something silly like using CGI.

See this page for history: https://docs.python.org/3.4/howto/webservers.html

",1539050683.0
igncampa,stop wondering and start writing code. at the end of the day that's the only thing that matters.,1539036017.0
i_like_trains_a_lot1,"Are you thinking about having something like Amazon where retailers come and publish products on your website and then customers come and buy their items?

You might be better off if you do everything yourself from scratch, especially of you are a beginner. This way you will learn much more than using another framework on top of Django.

And as /u/igncampa said, start writing code. You will figure things out as you go.",1539068309.0
pred4tor07,Does this finally give us intellisense for Django models? That’s what I’ve been missing most in VSCode,1539033244.0
neurotoxiq,Any idea on how to debug Django JavaScript files from vs code?,1540007610.0
andrey_shipilov,Stopped reading after advising people to create env inside the project dir. Question: is the author nuts?,1539028475.0
Brandhor,I don't think you can have [foreign keys across multiple databases](https://docs.djangoproject.com/en/2.1/topics/db/multi-db/#cross-database-relations) but you should use [routers](https://docs.djangoproject.com/en/2.1/topics/db/multi-db/#using-routers) to automatically route your model to the correct db,1539018890.0
alkelaun1,"Since your Users model comes after your CustomerExtra model it needs to be in quotes. 'Users'

rep_id = models.ForeignKey('Users', db_column=""rep_id"", on_delete=models.PROTECT, null=True, blank=True, verbose_name=""Rep"")
",1539032877.0
ammkh1,Have you migrated after creating models. Try running python manage.py migrate and then makemigrations,1539020607.0
oliw,"Anybody with a text editor and ten minutes can customise a template and throw it onto a Wordpress install. You can hack out a living doing that and call yourself a ""web developer"".

A Django developer typically gets experience in database design (albeit abstracted from SQL - not always a bad thing), frontend management (however deep you want to go there), an idea of routing which is common in many other things, ops experience if you're deploying it, form handling, and obviously a lot of Python. There is also a lot of domain-specific things depending on what you're doing (eg ecommerce, PDF-generation, screen-scraping, SAML/AD integration) and you can layer on good behaviour development things like coverage and TDD, as well as project management and client relations.

My point, if it's not coming across, is **these are all transferable skills**.

If webdev isn't the thing that you want to do for the rest of your life, having a broad appreciation and experience with these things makes you a more effective programmer.

And don't forget the speed things change. Within a decade everything industry is targeting today will be dust. In the case of ECMAScript, that'll be true as of next week. Don't worry too much about the specifics. Employers are often more interested in the systems you've built, the challenges you've overcome, than the technology you used.",1539001106.0
fdemmer,"that's a [""carrier""](https://en.wikipedia.org/wiki/Forrestal-class_aircraft_carrier#/media/File:USS_Forrestal_\(CV-59\)_underway_at_sea_in_1987_\(NH_97657-KN\).jpg) and you are looking for [""career""](https://www.merriam-webster.com/dictionary/career) advice :)",1539002458.0
makavelixx,Any dev position is a good start ,1539091389.0
alexenko,"Go with standard table. Optimizing at this point is just going to create nothing but problems. Unless you have very specific use case (model will change a lot, using json object and caching, users will store custom data, etc) stay with standard With indexing you should be fine for a while (1M users, 100+ attributes)",1538945177.0
IReallySuckAtChess,"I would rather use an ArrayField or JSONField.

Do not use pickle as a form of long term storage. You're not guaranteed that a later version of Python will be able to unpickle it successfully without you specifying a bunch of parameters. When you have pickles made by different versions then it becomes a total mess. In addition, you won't be able to lookup easily in a a field. ",1538892544.0
askvictor,"Why do you think the bog standard way would create too many rows? How many do you anticipate? Postgres has no limits to the number of rows per table (though there may be practical limits in terms of performance or from the OS). See https://stackoverflow.com/questions/21866113/how-big-is-too-big-for-a-postgresql-table

As /u/yoongkang said, a time-series DB may be more useful depending on your specific data, but I don't know if you can easily tie that to the django goodness. ",1538894228.0
yoongkang,">The HStore can only store strings, so I've had to write a __getitem__ function that converts the contents to a float.

Rather than hstore you could also serialize it to JSON format, which I suspect has other benefits. You could would then need to work out how you would serializer/deserialize JSON, but I suspect `json.dumps` and `json.loads` would work fine.


There are time-series databases for this kind of thing, which I suspect might be more suitable.",1538888075.0
yoongkang,"Sorry, I don't understand -- I usually deploy to Heroku via `git push heroku master` (but I havne't used Heroku recently). What is this about a deploy button?",1538888211.0
yoongkang,"Yes, you can do that. Foreign keys just hold the primary key for rows in a different table -- the table doesn't actually ""know"" which table this comes from.  

You should read the multi-db section of the Django docs for your database router when using multiple databases: https://docs.djangoproject.com/en/2.1/topics/db/multi-db/

Specifically, you'll probably need to write `allow_relation` in your database router.",1538876275.0
User_1310,I finally gave up and used two separate fields. ,1540548658.0
yoongkang,"I don't think the way to go is to get the file directly from the request object, you should use a serializer with a FileField: https://www.django-rest-framework.org/api-guide/fields/#filefield",1538876537.0
IReallySuckAtChess,"A UTF8 error? Whilst that isn't the root of your problem, how is that happening? Are you using Python 2 or something? ",1538907960.0
CKreuzberger,"Shameless Self Promotion: If you want to get more involved with django rest file uploads (image uploads), please take a look at the tutorial series that I've created for django rest framework image upload at YouTube and Github:

* https://www.youtube.com/watch?v=hMiNTCIY7dw
* https://github.com/ChristianKreuzberger/django-rest-imageupload-example/blob/master/tutorial/README.md

Anyway, don't use postman or curl, they are way too hard to configure for that kind of thing. Just use a plain old html file upload form that you post to that endpoint:


    <form method=""post"" enctype=""multipart/form-data"">
      <label>Select a file
        <input name=""my_file"" type=""file"" > 
      </label>  
      <button>Go</button>
    </form>


Also, you seem to be trying to access request.data without an argument. E.g., within the upload form your argument is ""my_file"". This is important, as request.data contains ALL the things that come within your form. 

",1538942557.0
Ablastado,Have you checked that the request is submitted as JSON? ,1539207992.0
academicbadger,Thank you for sharing. Now I remember why I use a fabric file for deployment easy to forget how much time it saves!,1538850388.0
furyfred,Why old and expensive EC2? Why not lambda deployment?,1538939872.0
j03,"Elastic Beanstalk makes deploying Django Applications (or any other really, especially with docker) very easy -- it's worth checking it out. ",1538898058.0
PawelDecowski,Use [Django Rest Framework](https://www.django-rest-framework.org/).,1538831540.0
yoongkang,"You're interested in only one model? What about this:

```python
class SomeModel(models.Model):
    ...
    def serialized(self):
        return {'name': self.name, 'title': self.title}


def some_view(request, pk):
    obj = get_object_or_404(SomeModel, pk)
    return JsonResponse(data=obj.serialized)
```

If you have more than one model it quickly gets out of hand, in which case you might want something like DRF like others have suggested",1538839274.0
angellus,"DRF like /u/PawelDecowski said if you need a full REST API. If you just need something simple to retrieve data for a couple of models, you can make use [\_\_dict\_\_](https://docs.python.org/3/library/stdtypes.html#object.__dict__) in combination with a [JSONReponse](https://docs.djangoproject.com/en/2.1/ref/request-response/#jsonresponse-objects). ",1538832343.0
McPluckingtonJr,`json.dumps(data)`,1538839970.0
AlexFromOmaha,"If you don't want to add a new dependency in DRF, there's [https://docs.djangoproject.com/en/2.1/topics/serialization/#serialization-formats-json](https://docs.djangoproject.com/en/2.1/topics/serialization/#serialization-formats-json)

DRF is actually really great if you're going to do more than a couple REST APIs. It's worth taking the time to learn. If you're really just trying to get out a JSON-serialized model in one spot, just make a view for it, then return the serialized model.

If you were hoping to skip making a view entirely, that's not a thing.  You're going to have to specify what model you're trying to get, error handling, permissions, get a URL handler registered, all that good stuff - it's not like there's ""just give me an object in my template"" without the rest of a view. The view might not be much more than 2-4 lines with some standard decorators, though.",1538845680.0
njancsar,Do you have a question?,1538769851.0
igncampa,"It's never a bad idea to learn *anything* if you think it improves your chances of landing a job in the industry. 

You are already figuring out what's in the market around you, what the local industry is looking for, etc., now build a plan around that knowledge. Don't stress about what's modern or outdated. You will have time for that once you're in. For now keep your focus on landing that first job.",1538769888.0
jastr,"Have you opened port 8000 in the firewall? Open AWS, head to your Lightsail instance, click Networking, scroll down to Firewall and Add Another: Custom TCP 8000",1538759704.0
diek00,"Digital Ocean has some very helpful guides on this. If you are having issues, make sure to read the log file for nginx. ",1538758773.0
KronenR,"I can't help you because I'm not a fortune-teller yet, but maybe I could help you if you post your project in github or somewhere or your settings and javascript or recheck that you are doing what the [documentation](https://docs.djangoproject.com/en/2.1/ref/csrf/) says:

For CORS use [django cors headers](https://github.com/ottoyiu/django-cors-headers/)

For CSRF you can add the token to every jQuery/AJAX POST like this:

    function getCookie(name) {
        var cookieValue = null;
        if (document.cookie && document.cookie !== '') {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = jQuery.trim(cookies[i]);
                // Does this cookie string begin with the name we want?
                if (cookie.substring(0, name.length + 1) === (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
    var csrftoken = getCookie('csrftoken');


    function csrfSafeMethod(method) {
        // these HTTP methods do not require CSRF protection
        return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
    }
    $.ajaxSetup({
        beforeSend: function(xhr, settings) {
            if (!csrfSafeMethod(settings.type) && !this.crossDomain) {
                xhr.setRequestHeader(""X-CSRFToken"", csrftoken);
            }
        }
    });


",1538765915.0
jameserrico,Check all your server clocks are synched to ntp. If I'm not mistaken clock times that are out of synch could cause your requests to be invalid. ,1538794132.0
yoongkang,"Way too little info to tell, but if you're getting CSRF errors that means, obviously, your CSRF token is not the right token.

Many things could cause that, really. The CSRF token is tied to your session, so if you've logged off from a different tab (or if your session expired) then your CSRF token won't work anymore.

 ",1538800677.0
japanfrog,"I really don't understand the point of all these videos, that are taking the documentation exactly as it is, and putting a voice over and some screen samples. If you must make a video on something you don't have an expertise in, try to guide the viewer on your journey towards becoming proficient, not just a view count video.",1538798884.0
yoongkang,"Nicest way is using some JavaScript. So in addition to the view that displays the list of users, you have two more views to process the (a) their deletion, and (b) the is_admin attribute of users.

For deletion, just have some JavaScript to send an ajax POST request to `/users/231/delete/`.

For update, you want to have your JavaScript retrieve the values of all checkboxes (the value should be the primary key, you should be able to know if it's checked or not via the `checked` attribute). With that you can build a JSON payload that you can send with an ajax POST request to update the list.",1538843242.0
CraigTorso,"If you're already using the django admin create a group for admin users, add the create/update/delete powers for Users to that group.

Then add your admin users to that group.

You shouldn't need to write any code at all.",1538759072.0
yoongkang,"You're talking about caching SQL queries, yeah? Implementations differ among libraries, but here's one way I've seen it done in the past, roughly:

* Your store contains key-value pairs between table names and a random key. Let's call this the ""table key"".
* When you read, you will try to get the cached value of a ""query key"" which combines the table key + the sql string. Obviously, you will need to read the table key first -- you can get this because when you query you know the table name (or table names). Once you get the table name, you can look for the value associated with the query key (table name + sql string).
* Each time you have a cache miss on a read, you do the query, then you need to store this in the store. This will use, again, the ""query key"" which combines the table key + the sql string.
* When you insert/delete/update you generate a new table key. So the other query results in cache won't ever be used again because the table key is now different (remember you're using the table key + sql string as the query key). That way you don't worry about invalidating old entries -- they will never be read again.
* Some cache backends like memcached will eventually push out old entries as memory becomes full. 

So basically, you're reading at least twice from the cache for each read, one to get the ""table key"" and one to get the ""query key"". This only gives you benefits if the reads for the cache are much faster than querying the db, which in practice will not always be the case.

If you want to know the exact details I suggest looking at the code of such a library.",1538742370.0
fuckslavs,https://redditblog.com/2017/01/17/caching-at-reddit/,1538732115.0
IReallySuckAtChess,You can cache for a specific period of time. You can also manually invalidate the cache if you update a model. ,1538733221.0
raduhek,"Online resources are your best learning center, but here's the gist of it. 

As a storage system, you want to use an ACID compliant system for the benefits it offers, mainly persistence. Persistence happens on a storage hardware (local and/or remote) and that is slow in regards to user experience. 

You code your app so it fethes data from there, guaranteed it will be there, every time an user visits a page. But you want it faster. 

So you introduce a cache layer, which is not used for storing, but solely for caching. The nice thing about cache is the fast response from the service because the data is kept in RAM which is way way faster than storage. Most common cache systems are key/value systems, but they're getting smarter now. I won't go into it. 

There are two main configuration values to consider: ttl and freeing algorithm.

You create the key in a deterministic manner say for a forum ""front_page_entries"" or, for a specific user, something like ""user_<id/>_threads"" as a key to store threads subscribed to.  Code becomes like this:

```
entries = cache.get(""front_page_entries"")
if empty(entries):
  entries = db.get(""front_page_entries"")
  cache.set(""front_page_entries"", 600)
```

That's it: try to get data from cache first, otherwise feth it from db and store it.
Now here come the configuration values. Ttl specifies how much the data is to be stored in cache, aka for how long is it valid. After the time passes, the cache system will return no data for that key, even though it might still be in memory, but you don't have to be concerned about that. Due to cache being stored in memory, it could get filled and this is where the freeing algorithm comes in. When you want to store additional data, some of it has to go, but you can choose how: be it least used, last used or other methods.

These two determine, depending on the application you have, how fast the page loads for the user and how much you retrieve data from database. 

I didn't provide links as I'm writing from mobile. ",1538732957.0
about3fitty,"My understanding is that the cache invalidation time is configurable. The query and results are stored as a “record” along with the time the request was processed, and when the current time - time of request is greater than the invalidation time, the request is processed again, resulting in some latency for that request alone. Would love to hear from someone with more experience however!",1538731467.0
charettes,"Another thing you could do if you are using PostgreSQL is to setup database triggers to produce `NOTIFY` https://www.postgresql.org/docs/current/static/sql-notify.html

And have a service that converts message received through `LISTEN` to `group_send`.",1538753521.0
Rodkor,Signals / receivers are what you are looking for. [https://coderwall.com/p/ktdb3g/django-signals-an-extremely-simplified-explanation-for-beginners](https://coderwall.com/p/ktdb3g/django-signals-an-extremely-simplified-explanation-for-beginners),1538830151.0
FunDeckHermit,So you want to trigger a consumer on a database event?,1538727008.0
ND01,Thank you all very much! Signals saved my day!,1538910589.0
twistdafterdark,"Speaking purely from what I've noticed from Django, you may have to redo migrations , or deleting the pycache and redoing the migrations.
Ones you've done this then the new name might be recognized.",1538723545.0
ramse,"So [reading this](https://github.com/mbourqui/django-constrainedfilefield/blob/master/constrainedfilefield/fields/file.py#L69) they obtain the content type from 2 separate methods and then a bit of logic later... basically it could be something else.

Try this in a test script and see what it outputs pointing to a local file:

    from django.conf import settings
    import os

    # magic_file_path used only for Windows.
    magic_file_path = getattr(settings, ""MAGIC_FILE_PATH"", None)

    if magic_file_path and os.name == 'nt':
        mg = magic.Magic(mime=True, magic_file=magic_file_path)
    else:
        mg = magic.Magic(mime=True)

    with open(file) as fo:
        content_type_magic = mg.from_buffer(fo.read(4096))

    print(content_type_magic)
",1538693229.0
furyfred,"> How to Connect & Continuously update my Github & Prod Server ?

Use continuos integration. Travis is good.

> Hosting => Server Specs, Security etc Suggestion

Heroku is cheap for hobby projects but expensive if you get real traffic. Digital Ocean or AWS is cheaper if you know what you are doing.",1538757390.0
h00dies-and-g00dies,I'm doing the exact same thing as you. Gotchu buddy. Here is some help/resources I wrote down: https://hastebin.com/jusowotehi.sql,1538766729.0
FunDeckHermit,"Your question is too broad, better split it up and ask mote concise questions. This will just gets downvoted.  ",1538728512.0
carlio,"The Q object might help : https://docs.djangoproject.com/en/2.1/topics/db/queries/#complex-lookups-with-q-objects

Dunno if it works on multiple querysets.

perhaps `(modelA | modelB | modelC).filter(whatever=criteria)`?

I haven't tried this just spitballing.",1538676276.0
pingutuxy,"https://github.com/MattBroach/DjangoRestMultipleModels

This is what you're looking for.
Although I suggest creating multiple api view that handles the same filters since it is faster than multiplemodels.",1538679039.0
jtinsky,"My suggestion is to not do this in the ORM and do it in a SQL view.

1) Create a SQL [view](http://www.postgresqltutorial.com/postgresql-views/) in your database that has the same fields as your unmanaged model
2) Make an [unmanaged](https://docs.djangoproject.com/en/2.1/ref/models/options/#managed) model that has the same fields as models A, B & C. Point the unmanaged model to the SQL view
3) In your SQL view select select into the view 
4) For bonus points make the view materialized if your data doesn't change frequently or if you can run some periodic process like a cron job to populate and refresh the view

",1538688271.0
thereShouldBeaLogin,Mb union and value_fields could help,1538679286.0
yoongkang,"A QuerySet gives you a collection of instances of one model class, so by definition you can't do this.

I think you might want to give a little more information on what business problem you're trying to solve -- you're asking for an implementation detail but your business problem might be able to be solved with a different implementation.



",1538702611.0
angellus,https://github.com/stephenmcd/django-forms-builder,1538656611.0
mendozao,"Try creating the form class dynamically with python’s type().

Something like:

from django.forms import Form

MyDynamicForm = type('MyDynamicForm', (Form,), fields_dict)",1538657797.0
IReallySuckAtChess,Django-forms-builder is great. If using Wagtail it has some simple dynamic form creation and usage built-in that is worth checking out. ,1538664479.0
Brandhor,"this example only use charfield but you can extend it to use whatever kind of field you like


    class JsonModel(models.Model):
        fields = JSONField()

    class JsonForm(forms.ModelForm):
        def __init__(self, *args, **kwargs):
            self.jsonfields = kwargs.pop(""jsonfields"", None)
            super().__init__(*args, **kwargs)

            for field in self.jsonfield:
                f = forms.CharField(label=field[""name""], required=False)
                self.fields[field[""slug""]] = f

        def save(self, commit=True):
            d = {}
            for field in self.jsonfields:
                v = self.cleaned_data.get(field.slug)
                d[field.slug] = v

            self.instance.fields = d

            return super().save(commit)

        class Meta:
            model = JsonModel
            fields = []
            
    class JsonUpdateView(UpdateView):
        template_name = ""...""
        model = JsonModel
        form_class = JsonForm
        jsonfields = [{""name"":""First Name"", ""slug"":""first_name""}, {""name"":""Last Name"", ""slug"":""last_name""}]
        
        def get_form_kwargs(self):
            kw = super().get_form_kwargs()
            kw[""jsonfields""] = self.jsonfields
            return kw
            
        def get_initial(self):
            initial = super().get_initial()
            for field in self.jsonfields:
                initial[field[""slug""]] = self.object.fields.get(field[""slug""])
            return initial",1538686358.0
Michaelyin,"You can check this post (it includes a video to show you how to do this using Wagtail Formbuilder)

https://blog.michaelyin.info/how-build-landing-page-using-wagtail-cms/",1538716277.0
jillesme,"Wow there is very little context to go with here. If you just need the JSON, by all means use just a JSON file (or .txt and parse it). ",1538652498.0
IReallySuckAtChess,"I'm a bit lost... There is no such thing as a JSON file. Is it JSON stored in a text file that you then zip and send? That's very roundabout and pointless. I can't think of a case where this would make sense. Maybe clarify what you are saying. 

If your server is running with http2 then when the client sends you some JSON it will automatically be compressed before sending, and automatically uncompressed on receiving. When you send something to the client it will also be automatically compressed and uncompressed client side later. Compression is transparent with http2.",1538664761.0
NotSelfAware,"The structure I've settled on for most projects:

```
- /project_root
--/apps
---/app1
----/api
-----/serializers.py
-----/viewsets.py
----/models.py
----/admin.py
---/app2
----/api
...
```

So I have apps within the apps folder (e.g., one app for Orders, Products, Customers etc.), and each app has an `/api` directory within it that contains API code specific to that app. I'm generally quite liberal with apps. I try to limit the number of models per app to one or two, and might have a dozen or so apps per project. I've found this helps to keep code nicely separated and easy to reason about. ",1538645478.0
yoongkang,"Structure it just like any other Django project. The fact that you're building an API shouldn't change the structure.

If all you're building in the backend is an API, it doesn't really make sense to namespace anything in a subfolder named `api` -- your entire project is the API.

I would add a number of files to each app, like `serializers.py`. I'd put ViewSets in `views.py`. You could also put it in `viewsets.py`, but I sometimes have a combination of ViewSets and api_views -- ViewSets are just subclasses of Views, so I'd put them in views.py.",1538809340.0
ramse,"I know this is an older question, perhaps you got an answer somewhere else. Did you have a look at the url generated in templates? Did you try going to that url? If so, did it ask for a username and password? Most ftp servers are not public like that.",1539121886.0
i_like_trains_a_lot1,"So the creation of ``Lead`` instances is not conditioned by the existence of an ``User``, right? If that's the case, having a foreign key to the ``User`` model that is nullable (``null=True``) is what you need because as you said, ""at this point, a user with that email may not exist"". 

So you might need to have the email stored in a separate field and handle the ``Lead`` - ``User`` association in a signal attached to ``User``'s ``post_save`` signal. 

So the flow would be more like: 

- if there is already a user with the specific email, create ``Lead`` with ``user_email`` and ``user`` set accordingly
- if not, create ``Lead`` with user_email populated with certain email and ``user`` being ``None``.
- have a ``post_save`` signal handler for the ``User`` model where you search for the ``Lead`` instances with ``user`` being ``None`` and has the user's email.",1538636489.0
DustPuppySnr,"Just add

    null=True",1538635693.0
FunDeckHermit,"I think you want to inherit from User instead of incorporating it as an attribute. 

    class User(models.Model):
       email = models.CharField(max_length=255, unique=True)
       ...
    
    class Lead(User):
       att1 = ??
       att2 = ??

Now you can create a Lead object and it has an email field. I am not sure if I understand your question correctly though. ",1538635729.0
IReallySuckAtChess,"Python doesn't have static typing. You're getting confused much the same way that many people do.

Python is a strongly typed dynamic language, whilst C++ is a strongly typed static language (ignore the hokus pokus associated with meta programming.) Php is a weakly typed dynamic language. A weakly typed static language? ~~You could possible throw C# in here, maybe C as well but only to a small extent.~~ Edit: Only C can really be considered weakly typed (I was corrected in one of the comments.)

Type hinting is a Python feature meant to do exactly that, hint what type is expected. This is mostly used by tools that make developing easier and to reduce errors when programming. You can still try pass a wrong type and in many cases it will still work but you'll end up getting weird errors or unexpected behaviour exactly as you would have if type hinting wasn't there. Type hinting helps stop this before the program ever runs by helping the programmer. As an aside you can totally give entirely wrong type hints, but pass the right inputs and your code will work fine; however, the tools meant to assist the programmer should let you know.

My primary usage of type hints is actually in documenting my code. sphinx-autodoc and sphinx-autodoc-typehints make documenting my code absolutely trivial.",1538635382.0
naught-me,"There's no static typing in Python.  That syntax is ignored by the parser.  It's only used by the developer's toolchain, to help with stuff like auto-completion and catching stupid errors.

I use it when developing libraries to help with that kind of stuff.  There's no real disadvantage, unless it doesn't mesh with your team or something.",1538628524.0
yee_mon,"I use mypy in Django projects. I find that its usefulness increases as your get away from Django: In models, is just noise, and honestly, I don't know how anyone can expect mypy to figure out that MyModel.x=CharField means that a) MyModel.x does not exist, and b) my_instance.x is a str that also accepts many but not all other types...

In views, it is mostly there so the syntax checker can tell at me when I forget to return a response.

Anything that uses lazy instances, like translation and such, is too difficult to get right, at least for me, for now.

Code that is 100% my own is usually 100% type checked, and I wouldn't want to have it any other way. The sheer amount of typo- and thinko-kind bugs that it tells me about while I'm typing is staggering. I totally recommend it even just for the way that it shapes how you think about code.",1538638401.0
pydry,"I skip type hints altogether. I have no doubt that in completely untested code that they can catch a number of bugs. I think that the ROI is much, much lower compared to integration & property testing though.

Moreover, I reckon the ROI goes negative if you have high quality tests - the tests will catch 95+% of the type errors caught by mypy but mypy will catch only a fraction of the bugs caught by integration tests.",1538642645.0
yoongkang,"I think you mean type annotations.

It's quite useful, and I like it. If you don't like the annotation syntax, you could also put types in your docstring Sphinx-style. IDEs like PyCharm have supported the docstring style for a while now.",1538648868.0
Cictani,"I tried to use it for my own models etc. But as long as the complete framework (Django) isn't using it, it is almost pointless.

&#x200B;

Static typing could catch some errors. For example when I started using Django I forgot the as\_view() in the url which led to some strange errors which did not point me well to my mistake. With static typing, the compiler or interpreter would know that you passed the wrong type.",1538660357.0
angellus,"Python cannot do static typing because it is a dynamically typed language. However, you can do validation on fields. Django already has very verbose validation built in if you are using Models and Forms like you should be. You can have a high confidence level that if a form passes validation or a model comes back from the database, it will have the type it is suppose to have. 

If you are not using Django, you can use [Data Classes](https://www.python.org/dev/peps/pep-0557/), which are a new addition to Python 3.7, that add this validation layer to the class/methods themselves similarly to how TypeScript works for Javascript.",1538660563.0
IReallySuckAtChess,"Nginx may be blocking this.

Also, most browsers will only allow you to embed https iframes, and some go as far as only permitting https iframes on https websites. ",1538635461.0
pemboa,Is the application returning the correct header?,1538637294.0
elbiot,Looks very straight forward. What have you tried?,1538618103.0
hughsient,"This is spam, the same message was posted to every open source mailing list this morning.",1542443160.0
cosmothekleekai,What are the benefits here over postgresql for instance? ,1538607643.0
PhilosophicalSanders,"This is great. I may just end up using this exact setup. 

However, I have a question as I’m not as familiar with SQL as I’m sure you are! With 10GB capping out the database, I’m curious to what that would limit you to? That seems like a large database but could you provide some examples where that simply wouldn’t be enough? ",1538596820.0
pred4tor07,"I love it, keep it up guys!",1538585829.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/djangolearning] [Django Security Video Series](https://www.reddit.com/r/djangolearning/comments/9kzq3a/django_security_video_series/)

- [/r/u_mosfotoh] [Django Security collaboration series with Arun Ravindran!](https://www.reddit.com/r/u_mosfotoh/comments/9l6o3o/django_security_collaboration_series_with_arun/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1538610560.0
staz,"Congrats on starting your first app!

The ""simple"" direct response is to take the second approach, which avoid creating a lot of data in the database that may not be used in the end. But they are quite a number of way to improve on that.

&#x200B;

The biggest and most necessary one would be to not actually re-create a whole instance of the habit model each time but instead mark the day of completion in a separate model, which would be linked to the habit model via a ForeignKey (one to many in database speak), that way you avoid recopying all the fields of the Habit for each day. Which is important for consistency in case you need to update one of them.

An example of that is the Choice model in the Django tutorial. [https://docs.djangoproject.com/en/2.1/intro/tutorial02/](https://docs.djangoproject.com/en/2.1/intro/tutorial02/)

&#x200B;

Then it's possible to do a few optimisations to ameliorate the database utilisation but it's not really important and  blocking. You could for example, store date done as range (start and finish)

&#x200B;

&#x200B;",1538511866.0
squire_louseII,"The latter.  Based on what you have described, it makes more sense to only save an instance of your model (aka add a record to the habit table in your db) if the user actually takes an action regarding that model.   Out of curiosity, what are the fields in your Habit model?  ",1538511423.0
Ocantico,"I started to make something similar, and this is the basic schema I'm using:

&#x200B;

Habits (""flossing""), Frequency (""every two weeks""), Activity (actual instances of activity performed against the Habit, e.g. ""Flossed on <date>"".

&#x200B;

Later, if you want to make reports or views (e.g. overdue habits, recent habits, upcoming habits), you could run queries like:

* Overdue habits: For Habit X, if there is no activity in the past <Habit X's frequency interval date range>, then the habit is overdue
* Recent habits: For Habit X, show recent activity that's taken place in the past week
* Upcoming habits: For Habit X, look at the most recent activity. Now, add the Habit's frequency interval (e.g. 5 days) to that date. Does that date occur in the next week or so? If so, that's an upcoming habit.

Model structure:

&#x200B;

**\[Habit\]**

* \- id
* \- name (e.g. ""Floss"", ""Call grandma"")
* \- description (optional: more text about what the habit is and why do it)
* \- activities (FK: one to many to \[Activity\]) (this is a lookup field that lets me query all activities associated with this habit)
* \- frequencyInterval (FK: one to one with \[FrequencyInterval\]) (lookup table to pre-fab date ranges, like, ""daily"", ""weekly"", ""quarterly"", etc)

&#x200B;

**\[Activity\]**

* \- id
* \- Habit (FK: many to one) (which habit this activity contributes to)
* \- summary (notes on what happened. E.g. ""talked to grandma about gardening"")
* \- datetime (date that it occurred, or is planned)
* \- status (optional: completed, planned, on hold, etc)

&#x200B;

**\[FrequencyInterval\]**

* \- id
* \- name (e.g. ""daily"", ""weekly"", ""annually""...)
* \- days (e.g. 1, 7, 365)
* \- Habits (FK: one to many) lookup field that lets me find all habits which have this frequency)

\---

&#x200B;

Other considerations, if you have multiple users, you may have something like:

&#x200B;

User -> UserHabit (habits that the user ""subscribes"" to) --> Habit. And since each User may have a different idea of what interval they'd like to have for a Habit, you might have something like User --> UserHabit --> FrequencyInterval. And then for the Activity model, you'd have User field on there to associate with them. 

Maybe you want to have categories of Habits (e.g. Health, Fitness, Family, Mental, etc), then you could tie those together...

I'd start simple though; it's quite easy to overthink this ""grand system!"". Good luck!",1538512597.0
IReallySuckAtChess,"You should seriously consider django-recurrence

 https://github.com/django-recurrence/django-recurrence",1538542812.0
ramse,That's a rather interesting way of laying out apps and settings. Does it work well? Have you ever run into issues?,1538584660.0
japanfrog,"What’s the problem? You’ve already identified the error, now fix it. The traceback tells you exactly what field and hints at what kind of error occured. You can’t expect to change field types with existing data and have it all work without doing some cleanup.

If your question is about figuring out what caused the error, assuming you are in debug mode it should list the field it failed the conversion on. 

Alternatively you can just limit the fields one by one until the error goes away, therefore using process of elimination.

This shouldn’t take you more than 10 mins to do even with large models.",1538504041.0
iMichael_,"This approach is probably fine for small sites, but if you want to support thousands/millions of of subdomains, its best to remove the concept of ""subdomain"" from Django and do the routing in middleware. 

For example, foo.domain.com where ""foo"" is a user's username.

- A request comes in.
- A real host header is provided by a provider like Cloudflare.
- SSL is terminated at Cloudflare.
- The request is forwarded to a WSGI  server like gunicorn (or another proxy that forwards to gunicorn).
- Django Middleware validates the request.
- Django Middleware queries the username ""foo"" in the users table.
- If the username exists, the appropriate url conf is overridden (if necessary)
- The views associated with the URL conf handle the request.",1538518988.0
ruraro,"Start a project.  
Google.  
No joke.",1538506406.0
booooomba,The official Django tutorial is very good and very beginner friendly!!,1538497055.0
Ulle82,I'm watching the YouTube series by Corey Schaffer at the moment. Seems like a pretty good into to Django,1538524488.0
lovesocialmedia,This is a good website: https://www.tutorialspoint.com/django/,1538527480.0
idazuwaika,"Youtube - by thedumbfounds.

This was the best for me as starting point.

Then only I followed with official Django tutorial.",1538667114.0
soulproprietor99,"Everyone says Django official tutorial is easy... definitely wasn’t easy for me as a noob.  First there are no pictures of what things should look like, also you have to really go far in the tutorial before you have anything that resembles an app live.  

I found a Django for beginners book that helped me.

For me, the best way to learn is decide to make a really simple project that excites you, something that will keep you motivated, then make something really simple and add complexity to learn.

Use examples to copy then tweak.

Let us know if you find a great resource for beginners, there really isn’t a lot out there.. ",1538509141.0
crunching_karma,"`listaDemanda`, `PrediccionDemanda` and all those strange lists are created upon project start. Every new instance of the class uses the same lists in memory. You need to move them to class constructor if you want new list for every new class instance.

Never use other language in code. Never use pictures to show code.


    class Foo():
        alist = []

    foo1 = Foo()
    foo1.alist.append(1)

    foo2 = Foo()
    foo2.alist
    >>> [1]",1538502896.0
DustyCakeRendy,"Im an student working for a simple project, the thing is that when i run the method everything works fine, but when i reload the page the counter i goes to 10 inatead of begining from 0
And i need to restart django and everything works fine
Anyone has a solution? I dont need something sofisticated just something to make it work",1538492330.0
brtt3000,"Django native serializers are very basic and mostly suited for using within the project, like for fixtures, loaddata/dumpdata etc. They have the primary key in there and don't include FK or M2M relations as nested structures but uses the bare foreignkey, and you don't have much control over formatting or adding or excluding data.

REST framework (or Marshmallow) serializes have at ton more features suited to using it for an API.",1538487903.0
lherr,You can use the rest\_framework serializers even if you're not using it to create endpoints.,1538493680.0
SilentDune,"What you want to do is create a class based on rest\_framework.authentication.BaseAuthentication and implement the authenticate() and has\_permission() methods. You then add that class to the REST\_FRAMEWORK (DEFAULT\_AUTHENTICATION\_CLASSES) config settings.

&#x200B;

There is code in this project: [https://github.com/robabram/Quickstart-Secure-Django-Template](https://github.com/robabram/Quickstart-Secure-Django-Template)

Look at proj/settings/base.py (REST\_FRAMEWORK section) and proj/api\_authentication.py.

That should help you get onto the right path.  This also assumes that you use SSL to encrypt API tokens in transit.",1538509735.0
devxpy,"I have a project that does good django integration with react.

There is no auth though. You will have to look into django-rest-framework

https://github.com/pycampers/react-pages",1538497383.0
IReallySuckAtChess,Sync consumers basically operate on the same principles as normal Django views and thus a request is blocking. Async consumers are built fully with async in mind thus requests aren't blocking and are completed when they are completed. You can use some sync code in async consumers though it eliminates some of the performance benefit. It's often a must though for accessing the ORM,1538480032.0
ezaquarii_com,"Async consumers are written with async/await in mind. Sync consumers behave more like an ordinary view, blocking until request is completed.

Check out Python asyncio documentation about concurrent programming.
",1538467068.0
IReallySuckAtChess,"Built-in docs for the api or general? If the api specifically then I still make the canonical docs my own and have the coreapi be a convenience for those who care for it. 

For general docs my go to is still to use Sphinx with the type hints plugin and a few others. I type hint my code and Pycharm makes adding parameter descriptions trivial. At the end I just spit out some html and a pdf and I'm done with documentation. Do it right and you end up with quite fantastic documentation. It's also the de facto standard way of doing documentation. ",1538459484.0
alexandremjacques,"One other alternative would OpenAPI. If I’m not mistaken, Rest Framework will use it more in 3.9 version (saw a post yesterday about that). 

It’s an standard for documenting APIs. I think it worth a look. ",1538480925.0
,[deleted],1538443271.0
whatever_meh,Make a class MyTestMixin(UserPassesTestMixin) having test_method and have your classes inherit MyTestMixin. ,1538443067.0
i_like_trains_a_lot1,"Spend some time learning and getting used to OOP in general. This is an OOP question, not a django specific one. It seems that you lack knowledge of the basic concepts.",1538463875.0
pauloxnet,I wrote this solution the first time as an [answer](https://stackoverflow.com/a/50134728/755343) to a question on Stack Overflow.,1538463760.0
ubernostrum,"I’ll be there. I’m giving the “Mastering the ORM” tutorial, and I’m confident it will contain things you couldn’t learn just from Googling.",1538430784.0
vixter55,"I'm going.  Just for the talks, because I'm paying for it myself.  This will be my 4th DjangoCon.   

Most talks seem interesting at the time, but it's the ones you go back to see on video several times, such as Serverless https://2017.djangocon.us/talks/serverless-django/ that you may not have ever found if you were just looking for talks on youtube.  

I also go to see people I met at previous conferences.  A guy I met at DjangoCon 2010 is now the conference chair.  He personally encouraged me to submit a talk.  I  actually did, but it got rejected but hey.  Only 1 in 6 got accepted.   ",1538447251.0
tehfink,"In case anyone else is wondering, I assume OP is talking about [DjangoCon US](https://2018.djangocon.us/), from October 14-19 in San Diego, California.",1538465900.0
thatdamnedrhymer,I wish I could go. Haven't won the company over to Django from Pyramid yet. They're really into SQLAlchemy. Maybe next year I'll pay out of my own pocket to go.,1538451019.0
frankwiles,Wouldn’t miss it! Always my favorite conference of the year.  I’ll be in a booth most of the time so sadly won’t get to see too many of the talks until later online. It’s looking to be a great year! ,1538459913.0
SkawPV,"Are the talks going to be recorded? 

&#x200B;

I can't go, but I would like to watch them.",1538465712.0
tomdyson,"I'm going. I'm talking about [Django and machine learning](https://2018.djangocon.us/talk/here-come-the-robots-django-and-machine/), and hoping to give a lightning talk about Wagtail's roadmap. If anyone has questions or ideas about Wagtail, please seek me out!",1538470022.0
,[deleted],1538429875.0
synw_,"Is this a joke? Automatically create superusers in a [post endpoint](https://github.com/pharzan/django_sms_login/blob/master/sms_login/views.py#L32) from random data and save it unescaped to the database, seriously?",1538440998.0
pibcola,More $$$?,1538425629.0
thisisRio,"print(“Thank You, here’s a tip $$”)",1538485836.0
sPENKMAn,I can see how this is considered information disclosure but is this worth a CVE? The fact that such weak algorithms are still in use seems the more important part than that the hash is revealed?,1538413438.0
CraigTorso,"There's no real benefit if you have your nginx set up to do gzip compression.

It's far more worthwhile to look at caching than it is to worry about minifying HTML",1538381048.0
IReallySuckAtChess,"Django-pipeline.

Somebody else mentioned compressor, but compressor is, I believe, no longer actively maintained. Django-pipeline is absolutely fantastic for minification of html, css, and js. It's also nice because it allows you to reduce your total number of requests by concatenating files together as well. ",1538406832.0
m-51,"Not full minifer, but something that can be done without much trouble is using `{ spaceless }` tag. Here is [documentation](https://docs.djangoproject.com/pl/2.1/ref/templates/builtins/#spaceless).",1538476421.0
AlexKondrashev,"It's not a problem at all. Pls, check out the code of a little middleware solving it: https://github.com/AlexLSB/django-htmlspaceless/blob/master/htmlspaceless/middleware.py",1538420589.0
emilepetrone,"Thanks everyone for the  thoughts. I went ahead and took a swing at Django-compressor but I'm running into issues. If anyone has any ideas, I've been keeping track of the issue on SO.

https://stackoverflow.com/questions/52598423/django-compressor-s3-boto-static-files-not-compressed",1538429831.0
furyfred,We used webpack.,1538450147.0
eazy17,"Follow https://pypi.org/project/django-htmlmin/

It's the simples way of doing it. ",1538732288.0
DonScotty89,You can do it quite easily with Django-compressor. ,1538387445.0
,[deleted],1538360206.0
DrMaxwellEdison,"If you're using Django 2.0 or later, `Count` and all other aggregate classes include a [`filter`](https://docs.djangoproject.com/en/2.1/ref/models/querysets/#id6) argument. You can pass a [`Q`](https://docs.djangoproject.com/en/2.1/ref/models/querysets/#q-objects) object to this argument to achieve the desired result:

    from django.db.models import Q
    ...
    
    clients = Client.objects.filter(...).annotate(
        completed_request_count=Count('request', filter=Q(request__completed=True))
    )

*small edits for code clarity*",1538361912.0
charettes,"Yes, if you are using Django 2.0 then you can rely on the `filter` argument of `Count`.

    Client.objects.annotate(Count('request', filter=Q(request__completed=True))

If you are on Django < 2.0 you'll need to use  `Count(Case(When(request__completed=True, then='request')))`",1538361938.0
jomofo,May not be a popular opinion but you'll thank yourself later if you just write the SQL for stuff like this,1538361665.0
oliw,"The modern Django 2+ way allows a direct filter on the database function `Count()`. But you can use `Subquery`. This was brought in towards the end of v1 and is a lot more verbose, but it can achieve what you want. It is complicated and there is some syntax here you have to just accept.

    requests = Request.objects.filter(client=OuterRef('pk'), completed=True).values('client')
    count_requests = spaces.annotate(c=Count('*')).values('c')
    clients_with_count = Client.objects.annotate(completed_count=Subquery(count_requests))",1538371984.0
DrMaxwellEdison,"Change your last line in the above views code from this:

    return render('poll/result.html', {'Gender': queryset})

to this:

    return render('result.html', {'Gender': queryset})

The template file path starts from ""templates/polls/"" automatically. Thus, if you tell `render` to look for `poll/result.html`, you are asking it to find a file at `templates/polls/poll/result.html`, which in your file structure does not exist.

---

And for future reference, [please format your code before posting](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F). If you have a lot of code (like in the above case) you wish to share, please use a service like Pastebin or Github Gists.",1538363047.0
IReallySuckAtChess,Code that isn't formatted is unlikely to get responses. Four spaces before each line of code. ,1538406899.0
eliotberriot,"Hi there!

I'm the maintainer of [Funkwhale](http://funkwhale.audio/) which is an audio streaming server with federation over activity pub, written in django.

The code related to federation is is available here: https://code.eliotberriot.com/funkwhale/funkwhale/tree/develop/api/funkwhale_api/federation

Let me know if you have any question :)


",1538338013.0
brylie,"The following example might be helpful:

https://github.com/tOkeshu/activitypub-example",1538337261.0
Tanger68,"You might want to look up partial caching. You can cache the form elements as fragments, but leave the csrf token to be dynamically generated. 

This may help: https://docs.djangoproject.com/en/2.1/topics/cache/#template-fragment-caching",1538314693.0
IReallySuckAtChess,No. Not if you want to cache the whole page. Django does allow template caching though so you can cache parts of your template. This is probably the best way to do this if you need to. ,1538406988.0
TunaBoo,"The first question of caching is do you need to cache?

How many daily views is this page getting?",1538320322.0
TunaBoo,"Whatever I’m coding.

Using a model form? Go read what it does so I am sure I get it. Using a built in tag? Go read the source so you really get what it does.

I have never had good luck just pleasure reading a big codebase. Instead a read a tiny bit every day.",1538317113.0
KaczuhH,"Here are some places that after reading expanded my knowledge of Django and Python

* [Template Lexer](https://github.com/django/django/blob/033d842e84b6211aa21a34fce49a98aed1d6c557/django/template/base.py#L333) \- dive into internals of template parsing, rendering and execution.
* [Queryset](https://github.com/django/django/blob/033d842e84b6211aa21a34fce49a98aed1d6c557/django/db/models/query.py#L179) \- read how filter, get, values\_list etc works, don't omit magic methods. Boosts understanding of ORM significantly
* [prefetch\_related](https://github.com/django/django/blob/033d842e84b6211aa21a34fce49a98aed1d6c557/django/db/models/query.py#L1531) \- continue learning advanced concepts of ORM, interesting code.
* [Query expressions](https://github.com/django/django/blob/master/django/db/models/expressions.py) \- one of the most advanced concept, mastering them will enable you to create custom functions and extend ORM functionality
* [ORM INTERNALS](https://github.com/django/django/tree/master/django/db/models/sql) \- lowest level of django orm, here querysets are compiled do sql, still don't understand everything but every time i return to it i learn new things
* [Migrations related code](https://github.com/django/django/tree/master/django/db/migrations) \- topological sort, optimizer, direct acyclic graph of migrations
* [ModelBase](https://github.com/django/django/blob/master/django/db/models/base.py#L61) \- practical lesson on meta programming in python and valuable resource for models inner workings
* [lazy decorator](https://github.com/django/django/blob/master/django/utils/functional.py#L49)
* [Related fields descriptors](https://github.com/django/django/blob/033d842e84b6211aa21a34fce49a98aed1d6c557/django/db/models/fields/related_descriptors.py#L72) \- you will learn about how relations are implemented on model level

And many more. Let me just drop some keywords:

*authentication, csrf protection, different database backends, signals, sessions, cache, admin*",1538349005.0
Anon314271,"I'm at a similar stage 

Have found looking at the  source  in template and templatetag folders interesting. 

I thought of looking at the source code from the early days to get an understanding of what is essential and how things have changed. Maybe something worth considering 

",1538309134.0
eljohnsmith,The source for HttpRequest and HttpResponse helped me a great deal to figure out how things were put together. ,1538324598.0
powerwizard,"My recommendation is to read django.contrib.auth: https://github.com/django/django/tree/497e3942b53bc0d60aa2c688796c5c4bfc4b3df4/django/contrib/auth

1. Many or even most projects use it -- easy to view it in context of how it is used and get into it with a debugger etc. It is essentially a CRUD problem so the basic concepts are widely applicable.

2. It is written to provide reusability using some of the more advanced features of Django that (if I recall) aren't covered in the tutorial, I'd suggest reading it to discover how you can move from solving your immediate problems to solving problems in a reusable way.

My 2nd recommendation was mentioned by someone already, HttpRequest and HttpResponse -- the web technologies that apply to essentially all web projects regardless of backend framework or language choice are very high value knowledge IMO and you can start by learning how Django handles this stuff. Knowing about the browser interfaces and protocols gives you another way to debug problems because they have their own tools (i.e. browser debugger network tab, wireshark, charles proxy) and the knowledge has value for anything web based.",1538340481.0
nhannguyen95,"Try 2 scoops of Django, i find its a perfect resource for Diango best practices",1538316836.0
tomfa,"What a good idea. I'd like to read your blog when you start writing about this. I think forms or serializers would be my choice: it's huge, super useful and sometimes confusing. How django handle middlewares would be nice too. Migrations is probably quite interesting, but wouldn't be as useful for (at least my own) coding. I'd rather go for the ORM if I was keen on learning Django+DB.  ",1538317959.0
makavelixx,"You're not an intermediate if you have only looked a couple of times under the hood of django. My brother has been learning python for 5 months now, I told him several weeks ago to see how Django works under the hood and try to understand the flow from request to response. He's still a novice",1538421482.0
jannealien,"Typing on my phone, but something like this:

Entity.objects.all().values('key').annotate(count=Sum('count'))",1538298078.0
unkz,"If you want the page to react to selecting the date from a datepicker instead of pushing a submit button, you're going to have to use javascript.  If you're ok with them hitting a submit button which loads a new page, then you could do this with regular django forms.",1538272008.0
vikkkki,"Any reason you don't want to use JS?

Are you using REST?",1538283890.0
yoongkang,"Ajax is probably a better user experience, but if you don't want to use JS at all you would need a slightly different flow, which is something like this:

* The first screen/form (e.g at the url `/select_date/`) should have a single date field. Have the installer submit the form via GET with a target to a different url, say `/jobs/`. This should redirect you to something like `/jobs/?date=2018-10-15` (because of the form).
* The new url should be rendered by a different view which takes the date from the query params, and render a list of all jobs for that day. Each job should have a link to edit the page (i.e. a link to `/jobs/23/edit/`
* The installer can then click on the link mentioned which has a prefilled `ModelForm`.

So that's 3 screens.

If you want fewer screens, you'll need to use JavaScript. The idea is something like this:

* Everytime the dropdown value changes, it will trigger what's called an ""Event"". You can write JavaScript to listen to this event, and you could also pass in a function for what you want to happen.
* The function you pass to it should do an Ajax request to the server, which returns the details for the job. The most common format today for this kind of data is JSON, so your view should return a `JsonResponse`.
* Using JavaScript, you then replace the customer details form with the values in the JSON.",1538289633.0
DrMaxwellEdison,"Without using JS, you are looking at producing 3 different screens based on inputs submitted. This should actually be your starting point, I think, even if you later decide to overhaul it with an AJAX flow that loads data into the page.

As for pre-filled data, you're looking at producing a Django form object that has data filled in using the `initial` argument. In view code, while instantiating a form, pass initial values to that argument as a dict, and the resulting template form should have those values displayed automatically.

For future reference, you *can* leverage a Django form object in AJAX. I haven't messed around with it too much as a serialized object, but you can have an AJAX call return a standard template (HTML response) and then inject that returned code into the page. That way, the form is created and the fields are pre-filled per standard Django forms, and you can load that form dynamically into the page.

Hope that gives you some ideas on how to proceed. The work ahead will take a bit of time, as I'm sure you know already, but I've been in your shoes before, and you'll get through it no problem. :)",1538295088.0
richardcornish,"Simple is Better Than Complex had a post on ""[chained dropdown lists](https://simpleisbetterthancomplex.com/tutorial/2018/01/29/how-to-implement-dependent-or-chained-dropdown-list-with-django.html).""",1538418605.0
JLBeiiJ,"You want a row in your database for every possible float value of temperature? This really sounds like something that you should make into a simple field instead of a foreign key, ie 

     temperature = models.FloatField()

where you would then store the temperature in some chosen unit (always the same!). You could then add property get/set functions for eg temperature_C or temperature_F easy use/conversion in frontend.",1538257987.0
DrMaxwellEdison,"While what you're asking is possible, I think the overall design is flawed. Rather than have a separate table (model) for Temperature and Velocity, you could create subclassed model fields for floating point / decimal values specific to those measurements and simply store those values on the same Flight model.

Either that, or you could write the Temperature and Velocity models as abstract models (calling it something like ""TemperatureMixin"", for example), such that you can extend the Flight model with their extra fields and methods. This would accomplish the same kind of encapsulation of logic you have in the model methods for Velocity and Temperature, while simplifying the database layout so you wouldn't need to worry about OneToOneField connections. ",1538259141.0
pemboa,This is why you don't rely on Django Admin for your end-user frontend.,1538248701.0
Jigglytep,"I deployed on digital ocean and it was amazingly simple, I followed their tutorial.

What I did was followed their tutorial to a t and then copied and pasted my code and apps into the myproject folder.

",1538248451.0
MariiaHep,"hi there!
we've just updated the article and now you need just to follow these simple steps https://jelastic.com/blog/how-to-get-mezzanine-cms-inside-jelastic-cloud/",1538396626.0
pancakeses,"Your code is difficult to read, so people will tend to skip over/downvote your post.

Please format your post. Add 4 spaces to each line to format as code, and another 4 spaces to indent lines.",1538238994.0
IReallySuckAtChess,Code not formatted will not get responses. I'm not going to try either. Four spaces before a line of code is what you need to format correctly. ,1538296709.0
Magoots,"I think this is more of a question about relational database design. You can create a new model and call it role or something. This role could have an id, name, and probably booleans for permissions. Then edit the user table to add this model as a foreign key so that each user has a role. The rest is just designing your website to check for these roles and applying necessary changes for each user. Hope this helps.",1538201260.0
Lanze-Spezzate,You can use permissions in combination with groups. Assuming that the admin for every group has the same rights (within that group) you can make a group called admins which you give the desired permissions. Then add this group to the person/user you want to have as admin (and also add the group he should be admin of). This should give the functionality that you want (the groups basically become roles),1538220460.0
IReallySuckAtChess,I think you should look at Django guardian as well. You can do a helluva lot with it if you know what you're doing. ,1538231650.0
pancakeses,Django-Organizations might work great for your project. ,1538238820.0
kunalgrover05,"In the end, I have found out that you will need to write down querysets for every single model which needs to be permissioned.

```
class User:

class A:
    user = ForeginKey(User)

class B:
    a = ForeignKey(A)

qs_for_user = B.objects.filter(a__user__prop=request.user.prop)
```

I have found that when you start with these querysets, it makes things easier to think about the correct relations. Even if you don't need the QS today, you might need it in the future.",1538294063.0
initysteppa,"This is example is a bit outdated, but might give you an idea:

https://github.com/mhelmer/dockerize-uwsgi-nginx-webpack",1538202524.0
alexandremjacques,"There’s nothing different in accessing a Django rest api or any other api. Since you mentioned JWT, there are some packages that help Django apps to implement the boiler plate code for that. 

Take a look around for articles that explain best practices on accessing apis from React+Redux. 

Take a look at this one: https://techblog.appnexus.com/five-tips-for-working-with-redux-in-large-applications-89452af4fdcb

Cheers. ",1538222144.0
furyfred,Use vue.js 😁,1538450225.0
bradshjg,"I could be wrong but I _think_ the `get_response` argument to your middleware should be the `view` callable itself and _not_ what the `view` callable returns.

i.e.

```
from middlewaremodule import mymiddleware
from views import MyViewThatRaisesCustomError

def setUp():
    self.MyMiddleware = mymiddleware

def test_something(self):
    factory = django.test.client.RequestFactory()
    view = MyViewThatRaisesCustomError
    request = factory.get('THE URL')
    response = self.MyMiddleware(view)(request)
```",1538165771.0
porksmash,Use django-auth-ldap. You need to understand LDAP a little bit so I'd recommend working with whoever manages that to make sure you are doing it correctly,1538160206.0
ziztoun,"Do you need to implement an LDAP server as well? Or do you have to plug your Django app to an existing LDAP server?

If it's the first one, I'll try to help. You'll need django-auth-ldap which uses python-ldap which doesn't have an official package available for Windows. You'll either have to compile it yourself or use an unofficial one (see doc https://www.python-ldap.org/en/latest/installing.html that redirects to unofficial packages from a university:
https://www.lfd.uci.edu/~gohlke/pythonlibs/).
Once you've installed those, everything happens in your Django settings file. Follow the doc from the installation https://django-auth-ldap.readthedocs.io/en/latest/install.html, and then you can try with the example :  
https://django-auth-ldap.readthedocs.io/en/latest/example.html
You'll have to ask your LDAP administrator for all the info to actually set in your settings. Not just the password, dn and uri but also the format of the data.

If it's the second one, can't help, never set an LDAP server. But I guess you can learn that and then plug your Django app to it as seen above.

Good luck!",1538162937.0
booooomba,"I just googled ""django ldap"". What's wrong with everything on the first page?",1538155513.0
njancsar,"I would recommend that you let your boss know that you don't feel comfortable working with authentication because of the security implications (as a beginner).

You are not going to get an easy answer to this question, you need to do some work.",1538162169.0
,[deleted],1538160433.0
reedjones_prague,"perhaps your server is just restarting, django has some watcher that looks for changes in the view file and restarts the server...if you reload while server is restarting the page wont work...",1538151787.0
cryptopian,Are you typing this into the command line or into the Python shell? Because it looks like you're typing it into the Python shell,1538146983.0
nannooo,Can you paste the command that you type in exactly? Are you in your virtual environment?,1538147219.0
Fun2badult,You have to do it in the terminal. Also python manage.py makemigrations,1538154711.0
Rorixrebel,"Read the official docs, best resource",1538136646.0
yoongkang,How much are you willing to pay?,1538289833.0
IonTichy,Have a look at this: https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04,1538151759.0
soulproprietor99,"The Django tutorial is incredibly thorough. However if you are new to web dev and you want to make simple stuff, it’s difficult to get a big picture understanding from their tutorial. ",1538162144.0
RadioactiveCats_18,"I just had a near breakdown over choosing and understanding my first Django hosting account (came from LAMP stack and I just didn't get the process of hosting Django versus a PHP app).  I found a tutorial written by THIS guy, in a Youtube video, and it turned me right around.    
[https://pythonprogramming.net/](https://pythonprogramming.net/)

It says on his contact page he does consulting and teaching via Skype.  Pricey but worth it IMO.  I will totally contact him next time I get super stuck.",1538430065.0
ammkh1,What are your offers? I won't mind,1538431022.0
soulproprietor99,"Django official docs are terrible for a beginner.  It was super dense and complex for me. If you are new to web dev it’s impossible to get a simple site up and running.  

The one resource I found that made it start to “click” for me was this e-book:
https://djangoforbeginners.com

That book iterates over many small apps that creates small reusable components that you can customize and repurpose for your own ideas.

(I’m not affiliated with that site, I just found it useful)

Have fun",1538140814.0
kunal097,"According to my experience Overiq is the best place to learn Django for begginer.
https://overiq.com
In this tutorial you are building a simple project with step by step explaination.
When you complete the single project you'll be able to understand the Django flow.",1538146150.0
jaht1989,I could help you.,1538153081.0
idiomatik,What does this has to do with Django?,1538149439.0
power78,Maybe more context like a code snippet would be helpful as there are many ways to do this. ,1538133320.0
IReallySuckAtChess,"You can use a template to add something to any text file although it won't quite work in your case. Maybe you could make a template tag that basically does what your export method does. Make a blank template.csv do the template stuff at the top and then use the template tag to spit put the csv e.g.

    {{ TEXT_AT_TOP }}
    {% populate_csv data %} ",1538299630.0
elingeniero,"Have an endpoint which sets the cache but shouldn't be used by users, then have a cron job that pings that endpoint at regular intervals - either on the server or using something like https://cron-job.org/",1538124575.0
tomchuk,"If your project is using sitemaps or feeds, you’ve already got a handy list of URLs you can use to warm your cache. ",1538133249.0
Im_Cynical,"Its called cache warming. And just hit the endpoint directly programmatically. 

Edit: spelling!",1538127670.0
geosoco,You can add [success_url](https://docs.djangoproject.com/en/2.1/ref/class-based-views/mixins-editing/#django.views.generic.edit.FormMixin.success_url) to redirect to another page. ,1538094568.0
monim67,"The question is not clear to me, why do you need to point to another form, point to same form if you are going to input same data. You can show the last value user entered in the same form.",1538089442.0
ProgOx,"If youve been working on something yourself for a year it’s probably not large in my opinion.

At work I work on a fintech app that has been in development for like 5 years by a team of developers. It’s huuuge.

There are probably over 100 apps in the project.",1538086199.0
Investisseur,"To put this in perspective, Instagram runs on Django. So that’s what people consider BIG.",1538086723.0
checock,"What version are you using? From Django 2.0, the framework is Python 3 only.",1538074599.0
xilitos,"You should stick to learn django and avoid devops meanwhile.

You could use heroku which makes very easy to deploy any app. You can do it really easy following their guides.
So you can focus all your efforts on developing the web.

That's my opinion. One thing at a time.
",1538076048.0
booooomba,"There are loads of them. Just take the ones from DigitalOcean. They are very good.

Also it would be more helpful if you could present actual problems that you're facing.",1538074337.0
souldeux,"Digital Ocean isn't the problem. They provide you with a cloud server running Ubuntu or something. You should be able to deploy a Django app onto a server like that regardless of who's branding it.

How are you serving your application? Are you using nginx/gunicorn like many folks around here, or something else? Whatever you're using, what does your config file look like? What specific errors are you encountering? Your server doesn't and shouldn't show a Django project screen; a browser making a request of your server should hopefully display that screen after receiving a response to that request. What do you see instead? A blank screen, a 502 Bad Gateway error, something else?

Without knowing what you're doing, and what specific errors you're encountering, it's impossible to help you debug your current situation. If you really want a sixth guide to follow then I'm sure you can find one, but why not try to figure out what's going on here and learn more about the ops side of life in the process?",1538074765.0
inflammatoryusername,"Same thing happened to me on DO and using their guides. There is maybe two parts wherein they reference a part of a config file and tell you what to change, it's wrong and you have to know enough about it to figure it out and make the correct change to the right location in the config file. 

Now then, I know that isn't very specifically a solution, but I do at least recall that it was in the part where you set up the application server being served via proxy pass.  I wish I could be of more of a help, best of luck to you though.",1538076203.0
fdemmer,"in addition to the helpful comments already here, please use r/djangolearning for help/questions.",1538076369.0
fdemmer,"that's not how you set headers.

see: https://docs.djangoproject.com/en/2.1/ref/request-response/#setting-header-fields",1538065431.0
plahcinski,"How about examples of what you want to do? What you said can be interrupted many ways. Start with defining the problem, what do your models look like, what does the one serializer do and what do you want the other one to do",1538058562.0
IReallySuckAtChess,"I don't understand what you mean, but if you want to use the models associated with one serialiser somewhere else then yes, you can. Just import the model and access it as you normally would... ",1538062700.0
lilfolr,You could try use a serializerMethodField http://www.django-rest-framework.org/api-guide/fields/#serializermethodfield,1538087817.0
TailoredBeats,There's no reason that data rich applications can't be rendered server side. It just takes a little bit more thought. Basecamp is a Rails app but it's a great example. I'd look into how it [is setup](https://signalvnoise.com/posts/3112-how-basecamp-next-got-to-be-so-damn-fast-without-using-much-client-side-ui) and see if you can't replicate that using Django. I know that you can use the [Turbolinks library](https://github.com/turbolinks/turbolinks) that they use with Django it just [requires a Middleware](https://stackoverflow.com/questions/47240766/to-use-turbolinks-5-with-django-how-can-i-automate-inclusion-of-the-turbolinks) to set the headers it requires. You might also pick up [Two Scoops of Django](https://www.amazon.com/Two-Scoops-Django-1-11-Practices/dp/0692915729/ref=pd_sim_14_6?_encoding=UTF8&pd_rd_i=0692915729&pd_rd_r=7edc28fc-c1e1-11e8-9d8c-cbd4feed3ce3&pd_rd_w=7bJm6&pd_rd_wg=JushP&pf_rd_i=desktop-dp-sims&pf_rd_m=ATVPDKIKX0DER&pf_rd_p=18bb0b78-4200-49b9-ac91-f141d61a1780&pf_rd_r=M844WSKA1PJYNEZ5JGRF&pf_rd_s=desktop-dp-sims&pf_rd_t=40701&psc=1&refRID=M844WSKA1PJYNEZ5JGRF) and read the sections on templating best practices. ,1538003933.0
bulldog_in_the_dream,"It's not completely clear to me if the problem you're trying to solve has more to do with UI responsiveness or complexity. 

If it's the first, you can have a look at Turbolinks, Unpoly and Intercooler, all JS libraries that aim for SPA like responsiveness while using as little JS as possible. If you just add the library to Django, e.g. as a CDN in you base template, it will speed up all your navigation on the page. If you want Turbolinks for POST, PUT etc. you need to wrap these requests as Ajax calls. Finally if you want Turbolinks for redirects you have to add Middelware to Django.

If your problem has more to do with UI complexity that is better handled by client side state, logic and rendering, then you can use a JS library like React for just those pages without going full SPA for the whole app. There are many ways to do this, e.g: https://hackernoon.com/reconciling-djangos-mvc-templates-with-react-components-3aa986cf510a

The MEAN stack is not better in an of itself for SPAs. You could acheive the same with DjangoREST. It has to be said that for hybrid solutions, or for using things like Turbolinks, Rails comes with a lot more out of the box an is easier to set up.",1538039513.0
jobelenus,"I don't know what ""data intense"" means -- but the Django templating system (especially the native one, there are other pluggable ones) is actually slow. And known to be slow.

That has nothing to do with ""lots of related data"". If those lookups are slow, it won't matter what templating system you're using. However, serializing lots of related data (which is what you'd need to do to use angular), is also slow.

InlineFormSets are a great feature and I've used them plenty.",1538054372.0
NomNomDePlume,Why not use the Django admin interface? It's not very beautiful out-of-the-box but you can give different groups different editing permissions and fields can be customized.,1538000530.0
tkc2016,"You may want to look into JavaScript components to load the data via Ajax call.

For example, I created a page that would display a table with a large amount of data. I use Django templates to display most of my page, but I used datatables to pull in my data from an API call.",1538015337.0
opsdisk,"This looks like a web directory brute force program, like wfuzz ([https://wfuzz.readthedocs.io/en/latest/](https://wfuzz.readthedocs.io/en/latest/)).  Any web server exposed to the Internet will be constantly scanned.  Ensure any sensitive Django url routes that require authentication are protected.  If you are self hosting, there are options like fail2ban ([https://en.wikipedia.org/wiki/Fail2ban](https://en.wikipedia.org/wiki/Fail2ban)), but I noticed heroku in the logs.  I'm not familiar with hosting on that platform, so you may be at the mercy of any protection and prevention policies they have in place.",1538168904.0
bukens,"There are milions of bots like that scanning entire world for vulnerabilities, thats huuuuuuuge money.",1538558914.0
Rodkor,Get used to getting tons of these. As long as you don't have SSH with password allowed you should not worry too much.,1538809539.0
ianastewart,"Here's two useful sites that I used when combining django filters and tables2. The second one also includes django crispy forms integration.

[http://www.craigderington.me/django-generic-listview-with-django-filters-and-django-tables2/](http://www.craigderington.me/django-generic-listview-with-django-filters-and-django-tables2/)

[https://kuttler.eu/en/post/using-django-tables2-filters-crispy-forms-together/](https://kuttler.eu/en/post/using-django-tables2-filters-crispy-forms-together/)",1538122507.0
Investisseur,"Is it psql or mysql? Nope. Is there a Database engine for it yet? Nope. Even if there was, all non relational databases don’t work particularly well with Django. You can “get” data, but attempting to integrate DRF is an uphill battle. And I will never think it wise to hold meaningful auth + session tables in a nosql db.

This mongodb engine fork is the closest you’re going to get https://github.com/django-nonrel/mongodb-engine

Ask yourself what you really need from a non relational database before going down this road. 99% of your answers will be, you don’t.",1537985732.0
FunDeckHermit,"I run Django 2.1 on Ubuntu 18.04 running a Microsoft SQL database using pyodbc and  django-pyodbc-azure without any problems. I can view my database with  Azure Data Studio. 

The django-pyodbc-azure can connect to normal Azure databases so if cosmosdb is similar you should be fine.  ",1537985880.0
iBlag,Do your own homework.,1537991393.0
mroximoron,"Have a look here: [https://stackoverflow.com/questions/3328577/additional-conditions-on-join-in-django](https://stackoverflow.com/questions/3328577/additional-conditions-on-join-in-django) 

&#x200B;

Haven't tested it, but something like this maybe?

    class UserVoteForeignKey(models.ForeignKey):
    
     def get_extra_restriction(self, where_class, alias, remote_alias):
            other_field = self.remote_field.model._meta.get_field('user')
            field = self.model._meta.get_field('user')
            cond = where_class()
            lookup = field.get_lookup('exact')(other_field.get_col(remote_alias), field.get_col(alias))
            cond.add(lookup, 'AND')
     return cond
    
    class Post(models.Model):
    
     ...
    
        user_vote = UserVoteForeignKey(Vote)
    ",1538056774.0
pydanny,Have you considered asking Heroku through their support channels? They are a commercial service and support is one of the things they are supposed to provide.,1537978397.0
iconfinder,If the task is not complete it will run again when you restart. You need to remove it from the queue.,1537991430.0
IReallySuckAtChess,The DRF tutorial is pretty good... It's also almost definitely the framework you'd be using so it's probably the best one to get acquainted with.,1537941656.0
IcyManner,"You might want to change search engine if you couldn't find anything on this topic

But as commentators mentioned DRF (Django-rest-framework) is the standard one. I recommend completing multiple YouTube and blogs tutorials to try wrap your head around it.",1537958269.0
JulianCienfuegos,"Just did th DRF tutorial on the website. Pretty solid, doesn't take too long to work through. I'm using 3.5.2 and Django 2.1.1. you have to change a couple of import statements but that's about it.

 Im planning to make a PR for the tutorial repo  but if you get around to it first go ahead!",1537942443.0
mikefromru,I didn't see better totorial than the DRF totorial.,1537956463.0
Rodkor,William S. Vincent's Rest APIs with Django https://www.amazon.com/REST-APIs-Django-powerful-Python/dp/198302998X,1538340657.0
lakerskill,Drf it is!,1537982557.0
lakerskill,"All:

&#x200B;

This was the go to for youtube right here

:[https://www.youtube.com/watch?v=uZgRbnIsgrA](https://www.youtube.com/watch?v=uZgRbnIsgrA)  

&#x200B;

At least the first part is django

&#x200B;",1538029984.0
therealyakkob,"Honestly, given industry trends, I’d suggest something like a Docker image that has everything prepackaged and ready to go. Make multiple Docker images for each installation “option.”",1537932964.0
Investisseur,Make a Python Egg !,1537934207.0
never_safe_for_life,Use virtualenv,1537939635.0
luzzew,"I had similar requirements and currently use venv, but am moving to Docker.  Either would be fine solutions for what you want to accomplish.",1537959852.0
skeledrew,"An AppImage (https://appimage.org/) may be the way to go. Super simple one click use, no install. I've been exploring it for the past few weeks and have had great results. ",1537963837.0
hpca,"Look into msi installer tool chain, I believe you gotta learn how to write a manifest file, not that hard to do imo.",1537964552.0
MagicWishMonkey,Make sure you're not using encrypted cookies if you're running locally,1537931784.0
pemboa,Why didn't you just implement an auth backend?,1537948323.0
nannooo,"You know this is a Django subreddit, right?

By any chance... Is that video yours?",1537914541.0
Blackburn_parias,Yes,1537999264.0
never_safe_for_life,"You are heading towards The Inner-Platform Effect: https://thedailywtf.com/articles/The_Inner-Platform_Effect

A database defines a schema; you're trying to define a meta-schema stored in a schema. 

A simpler way to accomplish this is a JSON field. ",1537943323.0
Cictani,"Shouldn't ""Charfield(name)"" be in the addressbookrecord class instead of addressbook class?

&#x200B;

You could also think about storing the actual address in a separate table, because maybe you want to add multiple addresses like private and work address. Same for phone number

&#x200B;

&#x200B;

&#x200B;",1537973104.0
igncampa,"I think it's a common mistake to think that the process goes:

* **I learn >> then I create >> finish**

When in reality it's more something like:

* **I start creating >> problems arise >> I learn how to solve them >> more problems arise >> more problem solving >> ... >> finish**

Some 65 AD food for thought by Seneca:

>It is not because things are difficult that we do not dare, it is because we do not dare that they are difficult.",1537912562.0
nannooo,"It's definitely possible to build something like Twitter or Instagram as a starter, but it will be limited and don't expect it to be great.

What do I mean by great? Let's pick Twitter as an example. You will be able to list someone's tweets, you will be able to post a tweet, but it will be very barebone. You will probably skip the JavaScript that is involved and therefore, it will need to refresh the page every time there is posted a new tweet for example. You will probably not check on the front end if the length of the tweet is within the limit and so on. But you can improve this all over time.

The Twitter site in itself - at its core - isn't rocket sience. Getting that all done will take some effort from you, it won't be coded pretty as you obviously don't know everything Django can do and it probably won't be scalable, maintanable or secure. 

But... Does that matter? As long as you are building it to learn - then no. Test stuff, try to break it, try to add more features and Google your way through it.

Courses are great to learn from, but they have issues. Don't get me wrong - I actually sell a course about Django, but courses in itself make you a bit lazy. They might teach you a lot, but you don't have to do a single bit if you don't want to. You don't have to think about design issues, you don't have to think about syntax errors, you don't have to learn how to Google for solutions. They are not all that bad though, there is still much to be learned especially regarding best practices.

As a developer, your ability to Google is worth much more than your ability to remember. No one remembers everything. We just find out way back to the docs that we need. You will start remembering the things you use a lot.

Sorry for the typos - written from my phone.",1537912211.0
thehardsphere,">So, in case you say it's best to drop the book and go to the doc, what major topics should I read entirely, to have the ability to build 80% of the backend types of most sites?

You already did the tutorial. That is enough to start. Your next question is a lot more astute.

>And what do you do to not get lost or improve your development? Something like organizing structure properly and things like that.

Start with a description of what you want the software to do. Write it down, in terms that any user of the software can understand (you have users in mind, right?). It's even better if you have a user who can tell you what they want the software to do.

Then break that description down into a set of the smallest descriptive pieces. Instead of saying ""I want the site to be Twitter"", say ""I want to be able to post short messages, I want other people to be able to read them, I want to be able to read other people's messages, I want to have a feed of all messages"" etc. Until you have a detailed description of what the software should do.

Then go through that list of things, and start implementing them. When it does all of those things, that's when you know you're ""done"" or close to it. If you don't know how to do something, that's when you go reading the documentation. If you do know how to do something, just do it. Once you have something close to working, then you can find out if you did it right; it is hard enough to get things working at all when you are just starting something new.

If I may be so bold as to say so, you seem to have a lot of anxiety. You keep asking the same question over and over again, which is basically ""how do I know everything I need to know?"" Which I think is a question based in fear of not knowing enough. I had similar concerns when I was just starting out in this field, and the most important thing I have learned is that nobody is capable of knowing everything they need to know. The trick to becoming really good at software is to simply embrace this as a fact, and develop your skill at finding out _what specifically_ you need to know _exactly at the time when you need to know it._ Like any skill, it is one you develop through practice.

Start practicing.",1537978780.0
ramse,"You may want to double check that allauth doesn't already force someone to set a password if they do not already have a usable password set upon removal of the last social account. It's been a long while since I dug into allauth docs but I think I recall that happening.

It also sounds like you need a profile page for them to edit details, but thats on you to develop, its not built into allauth.

Another note, in settings.py you can actually supply the url path name instead of the actual url.

    LOGIN_REDIRECT_URL = '/users/'
    # or
    LOGIN_REDIRECT_URL = 'users:index'
",1537894641.0
oliw,"I'm not sure what's stopping you selling one there. I don't think you'll find any marketplaces that are *solely focused* on Django+React though. Thaaaat's pretty niche.

Most for-sale Django projects I've seen are dual-licensed as AGPL+commercial. AGPL is annoying enough that if you want to use the project commercially without giving away your own project source, you just spring for a license. These are commonly marketed from their Github pages and listed in various Django app lists.

But yeah, at this point where you're still learning, I'd focus on the learning rather than the return. I'm certainly not springing for a license for something if I can see, and we'll be able to see, that it's made by a novice. That's the barrier to entry here. Anybody *using* a pre-made Django app is likely moderately experienced with Django.

Most professional Django developers —he said without any numbers to back up the claim— make their bread by working for people who want sites built out and maintaining them. The Django element —again, just IME— isn't that important to the client, it's just a tool you use.",1537883566.0
IReallySuckAtChess,"Spin up a vm, setup the machine and just run it? Nothing particularly different from doing it on Amazon or Digital Ocean or Linode or your local machine to be honest. ",1537887194.0
adamcharming,"I see that you're running the API and frontend servers on different domains, had you considered running it like this setup? [https://fractalideas.com/blog/making-react-and-django-play-well-together-hybrid-app-model/](https://fractalideas.com/blog/making-react-and-django-play-well-together-hybrid-app-model/#fnref-3)

What's your production setup to get it it working on the different domains, just nginx config or something fancier?",1537875081.0
IReallySuckAtChess,"I recently had to put a pretty sizeable site together and tried Mezzanine at first... I respect it for existing, but I think it's past its prime. Wagtail is substantially superior right across the board in my opinion. I really do recommend people look at it first. ",1537867206.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1537850638.0
IReallySuckAtChess,"Your code is terribly formatted. Fix it.

Since you're talking about serialisation I'm assuming you're talking about a rest api here. Look at DRF since that would make this a trivial exercise. If you want to do it manually then just use the built-in Django json serialisation for something simple. ",1537867363.0
elingeniero,Not really sure what you're asking for but Trello is a pretty easy project management tool which I have had success with. ,1537830814.0
nannooo,Yes. Use nuxt.js for your front end and use Django as an API with Django Rest Framework.,1537820507.0
cristoper,"You can pre-render vue from python by either calling out to nodejs (the approach taken by [python-react](https://github.com/markfinger/python-react)) or embedding a javascript interpreter in python (like [pyv8](https://github.com/flier/pyv8) or [v8eval](https://github.com/sony/v8eval)).

But I suspect in the long run things will remain much simpler and less fragile if you use a nodejs server to handle your server-side UI including server-side rendering, and a separate Django server to interface with your app backend like /u/nannooo has recommended.",1537823452.0
fedenko,"You can try to run separate node service to render react (not sure about vue).  
Check out this: [https://medium.com/meural-product-development/setting-up-server-side-rendering-with-react-redux-and-django-4d6f4d2fd705](https://medium.com/meural-product-development/setting-up-server-side-rendering-with-react-redux-and-django-4d6f4d2fd705)",1537966451.0
catcint0s,"`get_user_model()` is mostly useful if you are writing a 3rd party app cause it always points to the correct User model (defined by AUTH_USER_MODEL).

If you want a custom/extended user model just subclass AbstractUser imo (https://docs.djangoproject.com/en/2.1/topics/auth/customizing/#using-a-custom-user-model-when-starting-a-project), it's way cleaner than doing ForeignKeys",1537813083.0
haloweenek,"Proper way to do this is by Extending the AbstractUser

&#x200B;

from django.contrib.auth.models import AbstractUser

class MyUser(AbstractUser):xxxxx

&#x200B;

And in settings

AUTH\_USER\_MODEL = 'myuserapp.MyUser'

AUTH\_PROFILE\_MODULE = 'myuserapp.MyUser'

&#x200B;

&#x200B;",1537813209.0
Investisseur,"Also consider doing it this way if it is only small changes, as described by the docs (at lunch can’t find quickly):
https://github.com/modernproject/backend/blob/master/project/users/models.py",1537810661.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1537808957.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1537808236.0
TheoR700,"Depending on how simple it really is, the Django tutorial will probably get you most of the way to what you want. It walks you through making a polls app.

https://docs.djangoproject.com/en/2.1/intro/tutorial01/#creating-the-polls-app",1537790435.0
srsstuff,"So just to be clear, there's no other data being stored on the M2M relationship between users and leaderboards, correct? Points are stored on the user?

If that's the case, it seems like you'd just need to build a global view and a friends view that returns exactly what you mentioned.  You could add methods on User for `get_all_friends`, but that seems to be it.

Does that answer your question?",1537805773.0
moonjazzz,"[Bookstack!](https://github.com/BookStackApp/BookStack) Open source, simple, has all the features one would require for a wiki. Easy to self-host.",1537765355.0
IReallySuckAtChess,"Django-wiki is pretty great. I haven't used it, but I've seen implementations of it and it seems pretty competent... 

Anyways, my go to is always mediawiki, it's what Wikipedia is built on and what most wikis use. You can use it on any shared hosting which is super convenient for most people. ",1537809844.0
ojii,"It was written specifically for django CMS and solved a specific use case there, de-duplicating css and js. In traditional django apps/projects it likely has limited use.",1537731998.0
Mekhami,"The latest commit to that project was 2 years ago, so I'd have to say the answer is probably 'it doesn't.'",1537728894.0
oliw,"To super, you need to run that on a template that extends (in some form) the template with that block. It works well when you can always do bottom-up templates. As soon as you need to go the other way and include something, it goes pear-shaped.

Django CMS has placeholders. You can have many of these on a template (eg header, sidebar, content). The content of these are database controlled and they get rendered out in their own context and injected into the template. Having sekizai means that each plugin in each placeholder can independently write to the header. As can anything else as part of this tree.

sekizai also allows things that aren't even directly rendering to add to the output.

It's certainly not the Django Way™ but it's still solving a problem for people who need something different.",1537785667.0
tagnydaggart,"It is particularly useful for reusable templates. Say you have an include that you use multiple time on a page and that the template requires some supporting JS or CSS (or both). If you include the template multiple times, you'd normally get those includes multiple times, which is probably not what you want.

Sekizai essentially de-dups anything included via \`addtoblock\` and only emits the uniques in the template.",1537731182.0
jefwillems,"How are you running your apps? 
Can you be more specific about the pictures? Give us as much information as you can because i don't think we can help you with the info provided. 

Anyway, if the pictures should be dynamic (as in, the pictures change often and are loaded from the backend) they should be in the backend. If the pictures stay the same, it's entirely possible to include them in the frontend. 

Including them in the frontend is like writing a simple html file with an <img/> tag. 

Including them in the backend makes it so that they are loaded dynamically by your frontend framework of choice",1537729512.0
Classic_Camel,"I'm planning on switching to pipelines soon so I will totally check this out in the next month or so. thanks for sharing. 
",1537729560.0
mikerooker,And thank you for all your patience. I have seen other places where people may had forgotten that they too once started somewhere and a lending hand and not hate was given. Cheers to you!,1537723626.0
jarshwah,"3 part series that steps through 2 common ways of developing an app using Django and React. It focuses mostly on the integration between the two, not so much the specifics on routing and connecting APIs. 

https://fractalideas.com/blog/making-react-and-django-play-well-together/",1537687814.0
Investisseur,"Lord. You gotta use both homie.

Your React app lives by itself and has its own routing. It GETS and POSTS data to your backend via the Django url system.

This is like the most asked question on this subreddit. Search around the posts ",1537671990.0
XarR,"In Youtube you can actullay find hight quality material regarding this exact topic:

[https://www.youtube.com/watch?v=AHhQRHE8IR8](https://www.youtube.com/watch?v=AHhQRHE8IR8)

&#x200B;

[https://www.youtube.com/watch?v=uZgRbnIsgrA](https://www.youtube.com/watch?v=uZgRbnIsgrA)",1537740682.0
nickdjones,"Replacing backend Django operations with front-end React ones is one of the worst current antipatterns in web development. Unless you're creating something like Google Docs where the site's entire purpose for existing is its front end capabilities, you want to have as much logic in the backend as possible. There are many reasons for this, the primary one being because the backend controls your data and the front end is so easy to bypass.",1537694762.0
iMichael_,"I've launched tons of React/Django sites into production. Here are some tips. 

- Learn Django Rest Framework, React Router and Redux. Do not take shortcuts, learn these tools well. 
- Embrace Single Page Applications.
- Limit the jurisdiction of Django to ""REST API only"". Literally make Django responsible for nothing accept serving requests made from React. Delete all your templates and static configuration. 
- Separate domains for the frontend and backend.

",1537941014.0
avinasht1997,Does anyone knows any tutorial of authenticating a user with django+react???,1537705661.0
ghostofgbt,"I've got some good stuff on this. Currently building exactly this ... DRF, django and react in a real world production project. Do you have any specific questions? Tutorials are kinda meh on the subject but mainly I just wanted to respond here to get some inbox messages when people respond to this so I remember to come back when I have time, lol

Anyway in the mean time if you have any specific questions then fire away",1537725264.0
twigboy,Do it without the try/catch and read the error log,1537652733.0
athermop,And the error you get is what?,1537652745.0
McDivvy,"Is an error being thrown?

    try:
        sample = models.Sample()
        ...
        sample.save()
    except Exception as e:
        print e.message, e.args

&#x200B;",1537653011.0
Mekhami,`__import__('pdb').set_trace()`,1537653341.0
verkaufer,"How are users getting these ""game codes?"" Via email? The party host? There's not a good way to prevent ""spoofing"" if the ""code"" for a room is static/shared amongst everyone trying to join a room. 

You could consider password-less authentication via email where a user requests access to a room and a token is generated and sent to their email. The user clicks the link and it authenticates that user for however long you want a user to remain authenticated for. 

To prevent people from ""spoofying"" other players in a room, you could make a table of Usernames-to-Rooms with a timestamp that prevents people from using a certain username if it was used in the past X minutes/hours/days/weeks.",1537657905.0
geosoco,"Are usernames unique in this instance, or is it just the combo of username & code? How will you determine the user names before login? 

I've made a few experiments were codes could be sent out, and what I did was have a class similar to your player class that had a FK to the django user class. I generated random usernames and passwords for these people and set up some other specific limitations on the users. Then, when the code was entered in, I just logged in the user. 

I've also done it where I just generate the codes, and when a person enters a valid code and then some information, then it creates that user and logs them in. 

This certainly isn't the most efficient, but these were low use scenarios and it saved me a lot of time by having django users attached to them. 

The latter is closest to the jackbox scenario. You probably just wanna create new users every time with the code. You'd also want the codes to expire both manually and with time. So when a user typed in the code, you'd then ask for their username. You'd then create the player/user, log them in. However, the real username would be random and you'd have to use one of the other fields (or a field in your player class) for the display name. ",1537665524.0
CumberbunBundlebunch,"I've played quite a few hours of these games with friends. I'm unconvinced that any form of authentication is necessary - the user simply provides a username + room code, and the usernames are ephemeral.

I believe what happens in Jackbox is that the room code is used to establish a websocket connection to the correct game channel and then the client performs most of the communication through that channel. There _may_ be a JWT involved to uniquely identify the user, but I can't say for sure. 

Take a look at [Django Channels](https://channels.readthedocs.io/en/latest/)",1537679013.0
AsceticMind,Django-Dynamic-Scraper has celery functionality built into it for scheduling tasks with celery you really don't need anything more. The following documentation has everything you need to get it running with celery: [https://django-dynamic-scraper.readthedocs.io/en/latest/advanced\_topics.html#scheduling-scrapers-checkers](https://django-dynamic-scraper.readthedocs.io/en/latest/advanced_topics.html#scheduling-scrapers-checkers),1537642235.0
emilepetrone,"Are there any issues running Django-dynamic-scraper in a large project? I'm wondering if you are running a lot of spiders and you have a lot of users, your DB could take a hit with that much activity. Is that a correct assumption? It would seem like splitting them would have more advantages than combining them. However I could be wrong..",1537667835.0
flawlesscibal,Any specific reason you don’t want to use scrapinhub to run/host your crawlers? I’ve done it through Django in the past with redis (without scrapyd) shooting off the jobs. It was just a pain to also have to build monitoring that is built in with scraping hub. ,1537658467.0
hijinks,Did you check the log? It should tell you why,1537651543.0
lovelylittlegangster,"Your db is probably corrupt. Restore from your backup.

If you don't have a backup, make a copy of your current db right now before you try to get any further fixing this.

Exactly how did you edit your db? Admin page? SQL query? What does ""updated 3 id name"" mean? You updated some fields? Changed some column names?",1537738245.0
,[deleted],1537677422.0
dirtybutter,are you asking how to web development or just how to do everything?,1537588066.0
execrator,You need to pay someone to help you finish this project.,1537622181.0
linevich,"It's really hard to understand what are you talking about :/

Looks like copy-pasted specs for some trial for Django CMS trainee.",1537569629.0
deeds4life,Start [Here](https://www.youtube.com/watch?v=FNQxxpM1yOs&list=PLQVvvaa0QuDeA05ZouE4OzDYLHY-XH-Nd),1537602137.0
mikerooker,"Hey guys my bad hard to type onto a cell phone with these sausage fingers.  
My apologies.  


1-How to connect to to a django website ( see everything )  
OK I had hooked up to Atom with files created on GitLab with a contractor who re-built  it from files from Heroku, Digital Ocean and a database.   
For some reason I am not seeing all - Weird is it the Gitlab ( the ex-ontractor- I turned off is permissioncan that afect it?

&#x200B;

So I'll just narrow it down tot eh shpiping issue:  


We  have a copy of our finished app from a contractor an , files created on  GitLab with a contractor who re-built  it from files from Heroku,  Digital Ocean and a databaseI  had a contractor who was working on the site but I belive something  happened to him personally ( too much drinking )- bad choice never again  ) and suddenly his gitlab project name which had his name chnaged after  his account was closed . App still works but focusing on 

Now we to fix our Shipping Costs choices ( UPS , Fedex ) Which have disappeared in  our new copy of the environment Please see images: Get these fixed and I  have more for you. I am looking for a reliable , respectable, time  conscience dev. These are test fixes- I have more work.    


&#x200B;

&#x200B;",1537611183.0
elbiot,You can have django be a restful backend and do the front end however you want,1537572943.0
yen223,You could consider using Clojure for the backend too ....,1537603421.0
liquidpele,Performance.,1537563678.0
iBlag,"In one word: performance. But also because it’s simply not necessary.

Because the database will delete those objects by itself without needing to run any Python.

IF that is the only way you can think to handle things, then there is a semi-elegant solution.

If you want to register a `pre_delete` function on or for all subclasses make it a setting in your app and register the signal handler in your app’s `ready()` function for all of those classes. Bonus points for a useful default settings value.

I’ve been out of the Django game for a bit, so double check me a bit, but that’s how I would do it.",1537568142.0
MountainReason,"You could use [python-docx](https://python-docx.readthedocs.io/en/latest/user/documents.html)
to read the files, apparently paragraph by paragraph like this 
[SO answer](https://stackoverflow.com/questions/25228106/how-to-extract-text-from-an-existing-docx-file-using-python-docx). Then if you have the `experience` field in your model you can update it with the text from the right paragraph.
",1537561143.0
ricolives,"You have a few way to do this.

1.) Create custom SQL queries, to calculate all this data on the fly. Link these SQL queries to a new view in your django app. The disadvantage here is that these queries will require multiple joins, so are expensive computationaly, users have to wait for query to execute before view can load. For small databses it won't take long, but if datasets are large it becomes a problem.

2.) You can get over the calculation overhead, by using a database side function to cache this operation. So this operation runs aynsnchronously, once a day for each user, and the result is cached in the databased, ready to served immediately. This requires some advanced SQL skills, and is frowned upon, because its bad practice to code business logic directly into the databse.

3.) A third option is to create a new statistics table linked to each user. This table is automatically updated by your controller everytime an action is performed such as a sale. This is a hybrid between 1 or 2. This is easiest when you've considered this problem in advance. It can still be done with migrations, but you have to prepopulate this table with existing sales data, and then update your view functions/controllers to make sure it remains updated. 
",1537664207.0
booooomba,">Before coding all this by myself 

This is just a few lines of database/model queries. Shouldn't take longer than an hour.",1537545000.0
FatWireInTheNun,It would be useful if you would comment instead of just downvoting ,1537549460.0
DrKimJongUnSupreme,Bump,1537572804.0
IReallySuckAtChess,"Django doesn't have an assets folder. It makes use of a static system. Each app can have its own static folder and then Django automatically groups it all for the purpose of serving to clients. 

So look at the page source and find the static asset you want to change. It should be along the lines of /static/app-name/something.something or maybe another folder or two deeper under the app-name.

Go to the relevant app, go into the static folder, and then find the relevant asset and replace it. 

This has nothing to do with your IDE. Atom is a very good IDE and isn't at fault here; however, if you want the absolute best IDE out there then Pycharm is the answer. If you're a student then you can even get access to the full version gratis and that makes web dev so much easier. ",1537510928.0
FreakAzar,"Hey, although I haven't done this myself, [this](https://jeffy.info/2017/01/24/offline-first-for-your-templated-site-part-2.html) looks to be what you're after.

You will need some JS to setup the service worker it looks like, but it doesn't assume any frontend framework.",1537501991.0
anddam,"I periodically check for python in frontend app, last round didn't found something that was ready out of the box and went with Angular.

This time however I found [AnPyLar](https://www.anpylar.com/), not sure it fits the bill about the progressive part you asked for but I'll be checking it for my next frontend need.

Announced [in this thread](https://www.reddit.com/r/Python/comments/7oulyg/anpylar_the_python_frontend_web_framework/).",1537526302.0
t_hack04,"No, there cannot be a pure Django implementation of a P.W.A (YET!). A typical PWA will have the following:

1. **Service Worker ( JS )**
2. **Application Shell Architecture (App Shell) (HTML/CSS/JS)**
3. **Transport Layer Security (TLS)**
4. **Web App Manifest (JSON)**

So Django can be used to **deliver** these files but it cannot implement these features, for example registering a Service Worker can only be done on the browser after the .js file that has the appropriate code been delivered to the device.

&#x200B;

Django being a backend tool, is a wrong fit for PWA's, and hence you wont find any tutorials or implementations of a django driven PWA. What is possible though, is to serve these files through django but this as mentioned before is only delivering the files, that will in turn set up your PWA.

&#x200B;",1537508572.0
daeatenone,"There's no official standalone Django ORM as far as I know. From a quick Google search (""standalone django ORM""), it appears that [some people have figured out how to use the ORM without any other django functionality](https://stackoverflow.com/questions/302651/use-only-some-parts-of-django). If you do decide to go in this direction you could simplify your setup even more by install django on the client + configure it to persist data to a remote database (your server), then the workflow would look like this:

1. Client reads data from device, initializes django model instances, calls model.save()
1. Django takes care of persisting to DB over the network
1. Your server is not just a simple database server (no django)

If you have limited client capacity and can't install django, consider just using some other standalone ORM like SQLAlchemy, the workflow would be identical to the one above.",1537481101.0
i_like_trains_a_lot1,"you can do the actions you need in a management command. This way you don't have to start the server or anything and you have access to the configured models. On the client side, you can use the standard database configuration as django needs a database to work with no matter what.",1537512295.0
tagnydaggart,No. ,1537480285.0
HORACE-ENGDAHL,"> \#roastme

You don't understand even the basics of programming and you're reluctant to learn HTML, which is literally what the entire web is built on and depends on. You're going to fail. 

Stop looking for a magic solution and start doing what you for some reason feel that you're above: learn basic shit that anyone that wants to make anything related to the web needs to know. Learn HTML. Learn CSS. Learn basic JavaScript. Yes, **all three**. When you can make something that **looks** half way non-shitty by pasting together shit that actual programmers and designers made but achieves absolutely nothing (i.e. a dead front-end), you can start learning about server-side code like python and php. You're not even close to it right now.

The fact that you're even talking about HTML frames (in a comment) shows that you haven't touched HTML in at least ten years. Whatever your irrational fear is, get over it.",1537476349.0
booooomba,Bad news (for you): Django is based on html templates as well. ,1537470359.0
itreallyisthat,"""I wish it weren't the case, but HTML is just a non-starter.  I need a solution that does not require me to code HTML.""

Seriously can't tell if you're trolling or not...

Django typically communicates by rendering HTML templates. Meaning: you can expect to write HTML at some point in the process. Unless you just want to barf up some JSON or whatever, but I'm not sure how useful that would be for you in this case.

There's not much difficult about HTML. You can learn the basics in 30 minutes. Making a slick responsive site with good CSS is another story, but learning basic HTML is super simple.",1537474125.0
nao89,"Why do you afraid of html? It only took an hour to learn html tags, django and any other framework do the logic, database etc... Stuff, not front of your application. In case of admin site, django will do all the hard work for you but in general, for your front end, you need html, css or bootstrap which is easier to start.

There are some python libraries that can create web applications like [pyforms](https://pyforms.readthedocs.io/en/v3.0/) , you can try it to see if it suits your needs.",1537473065.0
Azelphur,"Hi,

You are kind of at an impasse here. Web browsers are HTML viewers - that's literally what they do. It is impossible to display something in a web browser without using HTML at some level.

It seems like you might benefit from quick web technologies 101, so here we go.

HTML (HyperText Markup Language) is not a programming language, it is a type of document, like a word/writer document. The tags (such as <p> for paragraph or <a> for a hyperlink) allow you to apply basic styling to the document. HTML can't actually *DO* anything. No variables, no functions, nothing. It's a glorified text document.

CSS (Cascading style sheets) is essentially a language designed to apply more advanced styling to a HTML document. It is also not a programming language. You can do colours, fancy layouts, and even some animations using it.

JavaScript is a programming language, I dunno why the people you spoke to hate it, it's not a bad language at all and a lot of people use it for a variety of tasks. Web browsers can run javascript, and you can ship some JavaScript along with your HTML. This enables you to do some fun client-side programming, usually to change the HTML in response to some user or server side input.

Node.js is a JavaScript run-time environment that allows you to execute JavaScript code outside of the web browser. It's typically used in a similar role to Django, you run a server side program which listens for HTTP requests, and responds with generated HTML.

PHP is a programming language, typically used for web development. The web server runs the PHP script when it receives a HTTP request, the PHP generates some HTML, which is then passed back to the web server, and to the users web browser.

Django is a web development framework written in Python. It listens for HTTP requests, and responds with HTML.

You could do the same thing (generate HTML) with Java too, or any programming language you wanted. But, as I hope you now understand, if you want it to show up in a web browser, it has gotta end up as HTML.

As for a solution to your problem, I think realistically you only have three choices

A) Learn some basic HTML, this would be a good starter project.

B) Get someone else to do your HTML (either pay for it, or use something like wordpress, drupal, joomla, ...)

C) Write a GUI in the language of your choosing (native app, not web browser)

Feel free to ask if you have any more questions, good luck :)",1537475541.0
Nicksil,"If you can, run through the [official Django tutorial](https://docs.djangoproject.com/en/stable/intro/tutorial01/). Rather than me typing out a wall of text (at least at first), go through the tutorial -- which takes you through the steps of creating a simple application -- to get a sense of what Django does. The tutorial touches upon all major aspects of the framework and will leave you with a much better understanding of what Django offers as well as what it does not do (for instance, it does not write [all] of the HTML for you).

At the end of the day, you will need to have a cursory understanding of HTML. If not for the fact that Django does not write all the HTML for you, having a general understanding of what's going on will aid in your development and debugging.",1537472530.0
athermop,"HTML is like the easiest part of programming.  If you learn Django, you've learned something way harder than HTML.  Of course, you couldn't learn Django without learning HTML because Django requires HTML.",1537475960.0
theWyzzerd,"You say you want a web interface solution but then you say that web technologies are a non-starter.  I'm afraid if that's the case you're shit out of luck.  

Honestly HTML and CSS are fucking easy, JS is too.  Django + Bootstrap make it even moreso.   Bite the bullet.",1537476714.0
tagnydaggart,"Wow, this has gotten a lot of attention. Django is a web framework. It provides a lot of support for dealing with HTTP and related standards and best practices plus a really nice interface for modeling database tables and their relationship to other tables. At its core, it is Python, but you will still need to know HTML and probably CSS and JS.

I have an IoT-ish, data-centric project running on a RaspPi (Gen3) that is front ended with Django and it works great. It’s been running, silently and serving web pages displaying the collected data for about 3 years now with zero maintenance. Can’t beat that!

I think it’s a great tool to use in your project, but you will probably need to learn a little, never a bad thing!

Good luck!",1537478084.0
hlipschitz,"Django is a web framework (so HTML is kinda the point).  
You want to forgo all the fanciness? 

    import socket 

and go nuts. ",1537489136.0
hpca,"Although I don't advocate against HTML, I too don't like it that much. However you don't have to know everything, most of the stuff can just be picked out from bootstrap components and put together in a decent website. 
If you still insist, try using dash and plotly components they'll generate an HTML on your behalf with requisite react js. BUT, and here is the big BUT, you'll still need to learn how HTML works otherwise your page rendering will look shitty... So long story short, learn the very basics of HTML.",1537476860.0
Ondrysak,"If you do not want to touch html, make an api with flask or something. ",1537517233.0
alexandremjacques,"Django appears not to be the solution you need. The only framework I now that do what you want is not in Python, is a Java one. Take a look at Vaadin Framework: https://vaadin.com/framework

Write Java -> compiles to JS + HTML

But, as said here, learn HTML. It’s easy. You’ll probably need some knowledge of it to use Vaadin. 

",1537530374.0
makavelixx,"According to your other posts you want to learn C++ and Java, yet get nightmares from HTML? ...""dude no stahp""",1537734314.0
ImOverThereNow,"Have a look at Flask. It’s a micro python framework for web applications.

Much like Django but without the bloat.

Edit: He’ll have to use Django or Flask to make an API then ",1537472800.0
IonTichy,without reading your text: yes.,1537479503.0
Investisseur,You have an endpoint that only takes specific values. You can even see those if you navigate to the URL you are trying to PUT/POST to. Those values you can send and or see in the browsable API come from the serializer. Open up your network tab and make sure your passing those values in the body. Willing to bet you also are going to run into CSRF and CORS problems so you should look into that.,1537466963.0
IReallySuckAtChess,Django-filters? Check the DRF documentation on it. ,1537510567.0
hpca,"Seems like config parser, am I missing something? ",1537476487.0
Nerdenator,Would this do anything to make management of things like SECRET_KEY easier?,1538600766.0
gifgifgifgifgif,"I know this is not the answer you want, but I'm going to post it anyway:

* Django 1.9 is unsupported. You should use django 1.11 if you absolutely must stick to 1.x
* Django 1.11 is only supported until 2020. After that it will not receive security updates
* Django 1.11 is the last version to support Python 2

You may have a migration strategy already, in which case fine, but otherwise the best thing you can do with your time now is to get your application ported to Python 3. It's not that hard!",1537448235.0
IReallySuckAtChess,"Some stuff is served via gunicorn, some via Daphne. You don't have to use just one. ",1537445788.0
itreallyisthat,"Don't think there is an objective 'best' - depends on personal preference, team preference, client expectations, etc. BUT:

My vote is for separate apps. Why? Better organization, more readable, more maintainable, etc.

The first repo is a monster in relation to the second repo and it would be hell working with all objects mashed together into one app. Look how small shopping-cart's models.py is: [https://github.com/damnee562/shopping-cart/blob/master/backend/cart/models.py](https://github.com/damnee562/shopping-cart/blob/master/backend/cart/models.py)",1537440873.0
ruathudo,"My experience is grouping apis based on how close they are related. For example. I wouldn't have separated app for cart, product, order... Instead I group them in one app called Store. Same with Auth app for handling all user authentication stuff.",1537440611.0
catalyst1993,"Separating apps based on logical approach is a best way to go.  


Let's take the universal example of Blog app. Inside this app, we put Articles, Categories and other homogeneous models. I wouldn't definitely mix up anything with this app.

Another example would be, transaction related all models go to transaction app, store related all models go to store app. It's the relationship I would focus more.  
",1537442293.0
AnderperCooson,"While it depends on what you have in mind, in general, I'd say separate apps.

And as for the examples you've provided, keep in mind that Saleor is a real, commercially supported product that powers actual eCommerce sites, and Shopping-cart is clearly a toy/demo. Saleor's Product model has more LoC than the entire `models.py` file in Shopping-cart...",1537476962.0
ublike,"Completely disagree with most. For a blog app I’d do just one. If it’s a complex app with components that truly stand on their own, the separate them into their own apps. I tend to restructure app layout quite a bit for projects. While certain things expect a component/module a certain way like a models module in the app root, there’s nothing wrong with organizing other files/modules as you see fit. I tend to start a new project/app with nothing other than app.py and a models/__init__.py and then build out the app structure as fits the project.",1537497101.0
,[deleted],1537440547.0
bhat,This is a very good use case for [http://intercoolerjs.org](http://intercoolerjs.org); you'll need to refactor both your views and your template a bit. The advantage is that all the AJAX is hidden away in the Intercooler library so you don't need to write it yourself.,1537485250.0
IReallySuckAtChess,Your choice is javascript or javascript.... Web pages that consist only of CSS and HTML are static and have no interactivity without either refreshing the whole page or doing a post and being redirected. ,1537445895.0
ChaoticDoGooder,Django Rest Framework - setup endpoints to do what you want then tie those to your controls on your template.,1537455714.0
booooomba,"There is no alternative. What's your problem with channels exactly?

Also: Python 2 in 2018? Really? Why?",1537432281.0
synw_,Try [django-instant](https://github.com/synw/django-instant) (disclaimer: I'm the author),1537456188.0
IReallySuckAtChess,I can clearly see English isn't your strong point but I honestly can't figure out what you're asking or even really saying. Maybe get some help with the translation of your question and then post it here again. ,1537425517.0
muenchener,"If I understand your question correctly, you want to filter so that the student only sees subjects s/he is studying?

Then your MarksSubjectInstanceInline needs to override the get_queryset method. Something like this:

    def get_queryset(self, request):
        qs = super().get_queryset(request)
        qs = qs.filter(request.user.subject_set.all())
        return qs

",1537803181.0
booooomba,"> Seems to me like the framework just isn't scalable except for small web projects

lolwut? :-D",1537392923.0
IReallySuckAtChess,This is just a troll. Ignore it. ,1537425277.0
athermop,"What about it seems ""not scalable""?",1537399255.0
zaneyhaney54,Disqus had an insane throughput at one point. Pintrest is built on Django and they’ve scaled pretty well. Scalability is often more about architecture decisions than framework. ,1537412256.0
IamNotTheMama,"You're aware django was invented to be the CMS for a Midwestern newspaper, right?",1537416002.0
i_pay_too_much_tax,"> Seems to me like the framework just isn't scalable except for small web projects

Based on?",1537409724.0
tomdyson,"https://www.nhs.uk, which is perhaps the highest-profile public sector site in the UK, runs Wagtail, a Django app. Other Wagtail users include NASA, Google and Mozilla.",1537479191.0
Nicksil,Yes,1537392696.0
ManicalEnginwer,"Reddit? And more!

https://www.shuup.com/django/25-of-the-most-popular-python-and-django-websites/",1537403337.0
ottirob,"Beginner myself. Just use html template and views.py. No need to use the Forms module at all if you dont want to.

HTML:

...

<form action=""{% url your_action %}"" method=""post"">
{% csrf_token %}
    <input name""username"" ...
...

Then on views.py:

def your_action(request):

    if request.method == POST:

        username = request.POST['username']
        ...

        user = authenticate(
                username=username, 
                password = password
                )
        ...

And on urls.py route some url to views/your_action with name your_action.

See https://docs.djangoproject.com/en/2.1/topics/auth/default/ for authentication.

You need to do form field validation yourself if you dont use django forms though.",1537387126.0
njancsar,"You can literally use any of the common JS frameworks: React, Vue, Angular, etc.

You would mainly hook any of these frameworks up with Django via Django Rest Framework.",1537382910.0
tagnydaggart,"Totally depends on your requirements.

If you need team-editing without committing new code for each change, you may want a CMS: django CMS and [Wagtail](https://wagtail.io/) are currently the most popular/capable, but there are others. My preference is [django CMS](https://www.django-cms.org/en/).

If you really want to decouple your backend from your front-end (perhaps so you can have different front-ends for different devices/applications), you'll want to look at React, Vue, etc. AND have a look at a REST Framework, like [Django REST Framework](http://www.django-rest-framework.org/).

If you have a fairly simple site and you're the sole maintainer, and none of the above items are requirements, consider just keeping with Django's templates and static file mechanism.",1537388553.0
IReallySuckAtChess,Values are stored in the database as being UTC. So you can store it with Timezone data but it will convert it to UTC and store it as such. You can then recall it and it will be returned as UTC but you can easily convert that to a specific time zone using built-in functions. The reason for this is that 99% of clients want the timezone in UTC and will do the conversion to the local time themselves. ,1537378982.0
mipadi,"Dates don't have associated time zone information, since they don't have any associated time information, either; a date is a date no matter what ""time zone"" it is in (e.g., December 25th, 2018 is the same in every time zone). If you need time zone information, use a `DateTimeField`, which does include time zone data when you use `auto_now` or `auto_now_add`.",1537391122.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1537369109.0
radiacnet,"Django-GDPR-assist is a Django app which helps you anonymise and export user data. At Wildfish we have several clients who have needed a way to handle GPDR requests from users, so we built this to deal with the real-world issues we've been seeing since GDPR took effect. We are now open sourcing this project in the hope it will help others.

You tell it which fields on which models contain private data, and it then gives you several ways to control how and when the data is anonymised. There is also an admin tool to let you search and either export, anonymise or delete objects in those models. It also logs which objects are anonymised or deleted, and can then replay those actions if you ever need to restore your database from an older backup. It supports Django 1.8 to 2.1 on Python 2.7 and 3.5+.

It is [available on pypi](https://pypi.org/project/django-gdpr-assist/), and there's detailed [documentation on RTD](https://django-gdpr-assist.readthedocs.io/en/latest/). The [project in github](https://github.com/wildfish/django-gdpr-assist) also contains an [example project](https://github.com/wildfish/django-gdpr-assist/tree/develop/example) which you can install and have play with.",1537366861.0
lordrashmi,Thank you for this! Setting up a new system now which this will be perfect for. ,1537409869.0
pemboa,"> This seems obviously wrong

Why?",1537365009.0
brtt3000,"Using a through model should work fine as described in the docs: the through models has the two ForeignKeys, and one of the related models specifies the ManyToManyField with through. Django will create reverse relations for all of those so you can query everything you need (you can customise the related_name attribute on the fields).

If you don't explicitly specify a through model on the ManyToManyField Django will implicitly create one (you can even access it via an instances m2m field). 

You can use your base model for the through model. 

I also like to create custom managers and querysets for every model so you can centralise queries and things. This also works fine for fk, m2m and reverse relations if you set the use_for_relations attribute on the custom manager. 

Only thing I can think of that is problematic is creating m2m relations (iirc .add() doesn't work with explicit through models) but you could just add a method somewhere.",1537366975.0
daxaxelrod,"Token auth works well. Send the token as a response if the user successfully logs in and store that token on the clients side in persistent storage. Whenever you make another request, just include the token in the authorization header. Drf handles all the auth for you from there and you will then have access to request.user in the view.",1537358732.0
eskemojoe007,I recently was trying to do the same thing with VUE.  I found this react/Django Rest tutorial: [http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/](http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/)  It seems to be exactly what we're looking for.,1537363973.0
IReallySuckAtChess,"JWT is probably the best way to do it, but DRF includes a pretty decent token system to begin with... ",1537378300.0
Brandhor,"you are using FilterView but you are doing a few things wrong

* you are overriding get_queryset without calling super and then you filter the queryset manually, unless you need to add some special filtering I would completely remove get_queryset and if you need to order_by just use [ordering](https://docs.djangoproject.com/en/2.1/ref/class-based-views/mixins-multiple-object/#django.views.generic.list.MultipleObjectMixin.ordering)

* you are also overriding get_context_data and manually creating  your JobPostFilter object but since you are using FilterView there's no need since it's done automatically

* again since you are using FilterView which inherits from MultipleObjectMixin you have to use object_list in the template instead of filter.qs",1537350860.0
japanfrog,"Have you tried [django-cities](https://github.com/coderholic/django-cities)?


    
    # Get zip codes near Mountain View, CA
    PostalCode.objects.distance(City.objects.get(name='Mountain View', region__name='California').location).order_by('distance')[:5]
    [<PostalCode: 94040>, <PostalCode: 94041>, <PostalCode: 94043>,
     <PostalCode: 94024>, <PostalCode: 94022>]",1537334689.0
igncampa,"Hmm, interesting. This sounds like a GIS problem. I couldn't find the library django-distance, however why don't you read the source code and extract ideas? There's also the [GeoPy](https://geopy.readthedocs.io/en/stable/#module-geopy.distance) client that looks very robust. [This gist](https://gist.github.com/zacharydenton/833151) I found might also be valuable for you.",1537334814.0
daxaxelrod,"If you are able to get the raw lat and long data you can use the greater circle equation. No API and no package to install.

from math import sin, cos, radians, degrees, acos


def calc_dist_in_mi(lat_a, long_a, lat_b, long_b):

    

    lat_a = radians(lat_a)

    lat_b = radians(lat_b)

    long_diff = radians(long_a - long_b)

    distance = (sin(lat_a) * sin(lat_b) +

                cos(lat_a) * cos(lat_b) * cos(long_diff))

    resToMile = degrees(acos(distance)) * 69.09

    # resToMt = resToMile / 0.00062137119223733

    return resToMile

",1537336692.0
ShootPassSlam,Not a direct answer to your question since it is not a library but when I think of problems relating to maps I use google maps API: [https://cloud.google.com/maps-platform/](https://cloud.google.com/maps-platform/) ,1537334400.0
fabiocaccamo,"It is quite simple and it doesn't require 3rd party libs.

* Geocode the zip codes to obtain lat,lng for each one.
* Calculate the distance using the [haversine formula](https://stackoverflow.com/questions/4913349/haversine-formula-in-python-bearing-and-distance-between-two-gps-points).",1537364529.0
fdemmer,"you are sending clients the full size images for preview, eg https://photocritique.io/media/photos/timo-wagner-362623-unsplash.jpg (>4MB!)

use something like https://easy-thumbnails.readthedocs.io/en/stable/ to resize serverside.",1537350466.0
casualcodingcody,Great app! Some things are offset on mobile but none the less i love it! Only real issue i had was how to submit a photo was not very obvious and the submit button was wonky and wouldn’t work until i reached and odd zoom point. ,1537340225.0
rrsis6217,Looks like impossible for me to build like this,1537352231.0
kolloid,"Source code is formatted a bit in a weird way. You're using Python 3, so you can call `super()` without arguments. There's no need to add `\` when multi-line expression is inside brackets.

These days I try not to include 3rd party JS/CSS dependencies in the repository (like your Bulma framework), but install them separately using `yarn`. I think they do not belong to the repository - they're a dependency and should be installed during deployment.",1537326305.0
LudwikTR,"I also recently created a project with Django and Bulma. If you want to compare and see what we did differently, you will find the source code [in the repository](https://github.com/ludwiktrammer/shrew). The resulting site is located here: https://shrew.app

If you have any questions, don't hesitate to ask.",1537338823.0
mephistophyles,"A great way to get feedback would be to deploy the site somewhere,  so we can interact with it. ",1537340761.0
godhatesmetoo,"I always went with pure-css instead of bulma, because they strictly prepend a 'pure-' prefix to their class names, which allows you to use it in extended admin templates if necessary. ",1537348832.0
makavelixx,now you need vegeta to stress test,1537350160.0
_my_name_is_earl_,Some screenshots would help. (Unless you're looking exclusively for tips to improve your Python code.) Some of us are a bit paranoid about running foreign code on our machines without carefully looking things over.,1537310768.0
furyfred,For best practices the book to get is Two Scoops Django,1537311350.0
bulldog_in_the_dream,https://wsvincent.com/django-for-beginners/,1537303505.0
SkawPV,Enjoy them [https://books.agiliq.com/en/latest/](https://books.agiliq.com/en/latest/),1537337526.0
shobble,"something like [this](http://www.django-rest-framework.org/api-guide/filtering/#filtering-against-query-parameters), along with a [Q](https://docs.djangoproject.com/en/2.1/topics/db/queries/#complex-lookups-with-q) query specification, most likely.

So, it'd be along the lines of:

    keyword = self.request....
    queryset = queryset.filter(Q(model__icontains=keyword) | Q(make__icontains=keyword)",1537305456.0
OMDB-PiLoT,Saved,1537250586.0
FiniteElemente,Beautiful diagram. Mind if I ask which software did you use to create it? ,1537278163.0
xenopizza,Hero!,1537268597.0
mogop,For which version? The last one? ,1537295539.0
mr_baboon,CCBV for DRF (http://www.cdrf.co/) complements it nicely for implementation details.,1537338150.0
IReallySuckAtChess,"Umm so if your SPAs can access the API but they're not public, does that mean you're doing server side rendering?

Remember, SPAs run client side so if you're querying them you have to have public access meaning you need some auth framework and session management. If Django is serving up the pages then you can use the built-in auth and session management, if not you will need to look at JWT or api keys. ",1537258800.0
7776777,"request.FILES.getlist(param_name)

If you're trying to save a model with a FileField you've got a little work ahead of you. As far as I know best practice is to abstract your filefield out to a model of its own, and many to many into that model. We (going against best practice) just rolled a multifieldfield and it was a bit of a bear.

Is this what you were looking for?",1537302759.0
m-51,"Well, its simple. You don't need any external package.

Just use universal disqus code, here is [documentation](https://disqus.com/admin/universalcode/). Add provided code to you template. Only thing you need to do is replacing:

* PAGE\_URL with cannonical URL of current page
* PAGE\_IDENTIFIER with something unique to your current page. For example ""id"" of your blog post.
* EXAMPLE in [https://EXAMPLE.disqus.com/embed.js](https://EXAMPLE.disqus.com/embed.js) with you disqus shortname.",1537282391.0
IReallySuckAtChess,I'd probably look at how Puput does it. Puput is a Django app that leverages the Wagtail CMS. It makes use of Disqus for comments. ,1537225313.0
Nicksil,[Telling the browser to treat the response as a file attachment](https://docs.djangoproject.com/en/stable/ref/request-response/#telling-the-browser-to-treat-the-response-as-a-file-attachment),1537202299.0
opsdisk,"This is how I serve files requiring authentication (through Django) and nginx:

urls.py and view.py

[https://github.com/rackerlabs/scantron/tree/master/master/django\_scantron/results](https://github.com/rackerlabs/scantron/tree/master/master/django_scantron/results)

template:

[https://github.com/rackerlabs/scantron/blob/master/master/django\_scantron/templates/django\_scantron/scheduled\_scan\_list.html#L44](https://github.com/rackerlabs/scantron/blob/master/master/django_scantron/templates/django_scantron/scheduled_scan_list.html#L44)

nginx config:

[https://github.com/rackerlabs/scantron/blob/master/ansible-playbooks/roles/master/templates/etc/nginx/sites-available/scantron\_nginx.conf.j2](https://github.com/rackerlabs/scantron/blob/master/ansible-playbooks/roles/master/templates/etc/nginx/sites-available/scantron_nginx.conf.j2)",1537221495.0
randlet,"It's easy to get a list of tables from Postgres with a query (which you can run whenever a user loads a page so adding new tables is not a problem)
  
    from django.db import connection                                                                                                                                                                                         
    cur = connection.cursor()                                                                                                                                                                                                
    cur.execute(""SELECT table_name  FROM information_schema.tables WHERE table_schema='public'   AND table_type='BASE TABLE';"")                                                                                              
    table_names = [r[0] for r in cur.fetchall()]
                                                                                                                                                                                                                                    
Running SQL queries can be done with something like [Django SQL Explorer](https://github.com/groveco/django-sql-explorer).  Note: you need to be very careful about security when allowing users to run SQL queries!",1537278221.0
godhatesmetoo,Why not contribute to [this](https://github.com/rosarior/awesome-django) (much more extensive) awesome Django list?,1537197643.0
IReallySuckAtChess,"Look at your backend. You even have the comment right there showing you what is wrong. You may have filled all those details in, but your email backend is still the one which prints to the console and doesn't actually send an email. Change it to:

    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'",1537379484.0
4022a,They're not mutually exclusive.,1537188458.0
Durp56789,"If you're just building a json api, highly recommend django rest framework. Serializers from there will do what you need. Would probably have a serializer class for each website and construct the correct one when you get the response.",1537181588.0
galqbar,"Foreign keys exist to solve problems like this. Rather than working out an odd one off solution that goes against normal design practices, I think you’re going to be better off learning to use foreign keys. They’re not that bad, and it’s better to work with the framework than to reimplement low level things to fight the framework. ",1537162516.0
slimjimmys,"Are you creating them at the same time?

&#x200B;",1537150047.0
IReallySuckAtChess,"Looking at foreign keys, and maybe also consider an intermediate model and using the through function... ",1537172450.0
whatever_meh,"You could override the save method of model 2 to populate the value from model 1. If all you want is that data you don’t need a relationship between the two. 

If you further explain what you are trying to achieve you might get a more helpful and specific answer. ",1537149951.0
Eli_the_Iceman,"My advice - if you've never installed this stack on your own, try to do it on your own first. A lot of learning happens there and will help for fixing issues in the future. And if you already know the tech well, this is a great time saver!",1537145897.0
here_because_wife,Am I wrong or is this Python 2.7 and Django 1.11 (LTS)?,1537133743.0
pancakeses,"Just realized I've posted 2 DO links in 2 days, but rest assured I'm not affiliated with them - I'm a Vultr guy myself.",1537127780.0
fessacchiotto,Thank you for posting this. Looks promising. ,1537129172.0
philbagg,Django noob here. What’s a droplet?,1537133637.0
willworth,So does this just work? Has anyone tried it? ,1537130007.0
KingKliffsbury,They've offered this for some time. I used one last year. This year I tried to use a new one and it was a major headache. I found it easier just to start from scratch. ,1537195095.0
ac201,Nice! This will make it so much easier to deploy django. ,1537142967.0
Nicksil,The hell is this?,1537118353.0
metraon,Savoir faire linux in Montréal !,1537124079.0
chicocheco,"I'm looking for the same, but in Madrid. Pretty difficult... ",1537125919.0
kiwiheretic,I've struck a similar issue but from the opposite end of the spectrum.  Difficult to find web hosts who will even consider hosting Django apps (for reasonable prices) but plenty who will manage WordPress.,1537128155.0
pydry,You could make it a custom template tag.,1537114560.0
Designer023,Stupid question... should you use a context processor. I know that you can... but should you. Asking for. Friend 😂,1537167305.0
not-bergerboi,"The custom template tag is probably a better idea, but I've done something similar using a custom middleware.",1537211527.0
pithed,TL:DR Use Postgres. /s (but only a little bit of /s). I am really glad I finally forced myself to move away from MySQL. I still have some legacy databases that I haven't migrated but I don't see using MySQL for any new projects. Also postGIS is awesome.,1537117809.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1537058420.0
Valachio,"Pure JavaScript!

Seriously it's not that bad at all.  Maybe it used to be bad like 10 years ago (which is probably why jQuery was so popular), but I managed to build a 100% responsive web app with pure JS.",1537073564.0
hijinks,vue.js,1537057320.0
raddingy,"I have used Vue.js with Django before and it works out well. I have also used React and liked it.   


I honestly don't have a preference for which one to use. There are things I like in react and there are things I like in Vue.   


Once you use a framework like React or Vue, you'll never use jQuery ever again.",1537066801.0
Investisseur,React ,1537066554.0
yoongkang,"They should all work quite well. Vue.js, as others have mentioned, makes it easy to add interactivity piecemeal without committing to a full blown SPA setup. You could basically use it like Knockout.js, a lightweight library I really liked back in the day.",1537086667.0
i_like_trains_a_lot1,"I use bootstrap with jquery. I am working for an mvp and django has a ton on support libraries for rendering forms, messages and whatnot that saves a lot of time. If your app is a basic some CRUD based application pure django with bootstrap does a damn good job.",1537095591.0
mattwritescode,I tend to go with angular for bigger projects. It plays well. ,1537175741.0
thehardsphere,"If you aren't doing an SPA, why do you need a front end framework? The whole point of most of them is that they make SPAs easier. 

Unless we're using a loose definition of framework, to include things like Bootstrap and Foundation. ",1537094030.0
Comm4nd0,Use this at work. It's pretty good but there are some more features that could be added. Still very good though.,1537081142.0
Isvara,"I believe this was written by Jeremy Stretch, who has the excellent packetlife.net web site.",1537114910.0
ClickableLinkBot,"##r/opensource
---------------------------------------------
^(For mobile and non-RES users) ^| 
[^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| 
^(-1 to Remove) ^| 
[^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/853qg2/ignore_list/)",1537050426.0
Nicksil,">if I have to override an inherited method I suddenly have to override a bunch of other methods

What?",1537049059.0
Anon314271,"Just use them selectively, you can use a mix of class based and functions.

You can also use functions that return class based views 

Django makes things incredible straightforward... ",1537050378.0
pemboa,"You don't have to use them. 

> And if I have to override an inherited method I suddenly have to override a bunch of other methods leaving me no better off than using function views

You're conflating ""generic class based views"" with ""class based views"". You don't actually have to use the generic class based views.",1537052317.0
yoongkang,"Yeh, it's perfectly fine not to use them. If it saves you time, use it by all means. My views are often very simple (logic is elsewhere in domain objects, or helper functions) so FBVs are fine for me.",1537093499.0
bhat,"Django's built-in Generic CBVs are indeed complex. Tom Christie thought so too, and developed [Django Vanilla Views](http://django-vanilla-views.org/). From the webpage:

&#x200B;

>Django's generic class-based view implementation is unneccesarily complicated.  
>  
>Django vanilla views gives you **exactly the same functionality**, in a vastly simplified, easier-to-use package, including:  
>  
>No mixin classes.  
>  
>No calls to super().  
>  
>A sane class hierarchy.  
>  
>A stripped down API.  
>  
>Simpler method implementations, with less magical behavior.

&#x200B;",1537141602.0
booooomba,That question doesn't make any sense. Please give us more details. MUCH more details.,1537048138.0
tagnydaggart,"Nope. You create the table in your app, then refer to it with the \`through=YOUR\_MODEL\` property in your M2M field.

Here's a Gist from Jacobian himself from 8 years ago that might help clarify things for you.

[https://gist.github.com/jacobian/827937](https://gist.github.com/jacobian/827937)",1537048300.0
not-bergerboi,I don't think so. I just add it to the same 'models.py'. Why were you considering a new app for it?,1537048280.0
yoongkang,"It doesn't have to, but it can. Literally every model in your project can be within a single app if you wanted to. Using separate apps is a way to separate concerns, and is not required. 

If you have a many-to-many between two models that are in different apps, you should put the ""through model"" in the more appropriate one of the two, but it can also be in a separate, third app.",1537113392.0
hilmar8,"Django is very readable and very well documented. My process when tackling a problem like this is the following:

1) Locate the source for FormView. Leads me to: https://github.com/django/django/blob/2.1.1/django/views/generic/edit.py#L156

2) Inspect the classes that it inherits from. Find out what they are based on. Leads me to https://docs.djangoproject.com/en/2.1/ref/class-based-views/base/#django.views.generic.base.View

3) Understand that when someone calls HTTP GET that the 'get' method of View is called.

4) For FormView, 'get' is overwritten here https://github.com/django/django/blob/2.1.1/django/views/generic/edit.py#L129

5) Overwrite the method with what I need to do.

    from django.urls import reverse
    from django.http.shortcuts import redirect

    class SignUpView(FormView):
        ....
        def get(self, request, *args, **kwargs):
            # If the user is already authenticated. Redirect to home.
            if request.user.is_authenticated:
                return redirect(reverse('app_home:home'))
        
            # User is not authenticated. Display signup form.
            return super().get(request, *args, **kwargs) # Will need to modify this if using Python 2.x

Some reading material:
https://docs.djangoproject.com/en/2.1/ref/contrib/auth/#django.contrib.auth.models.User.is_authenticated

https://docs.djangoproject.com/en/2.1/topics/http/shortcuts/#redirect

https://docs.djangoproject.com/en/2.1/ref/urlresolvers/#reverse
    ",1537046742.0
Anon314271,"Use a decorator or include some logic as follows:
I'm assuming youre using Django auth

A quick an easy solution would be to do:


    If User is not None:
        #Do something for authenticated users
    else:
        #Do something for unauthenticated users


For instance you can return your form view class 



Edit : formatting 
",1537046193.0
whatever_meh,The method you want is “get”.,1537046240.0
Mikael8,Use calls ‘Mixins’ to check authentication in view class,1537069344.0
jcampbelly,Django has class based views and DRF has serializers and CRUD generic views. Take a look at https://ccbv.co.uk and http://www.cdrf.co,1537024153.0
sanreikaj,Django Rest Framework is your solution.,1537024078.0
leros,"I've seen those concepts in Java backends which are probably similar to C#. We have tons of classes that correspond to request and response JSON and there are Java libraries that automatically generate objects from request JSON and automatically generate reponse JSON from objects. 

It's a lot of boilerplate but does keep your backend nicely structured and strongly typed, which is nice especially in larger teams with lots of people working on a project. 

Using classes has other benefits as well.

Reading request data right off the request is great, but can be kinda fragile in large teams with lots of people changing code. If you change a parameter, you end up changing your request class, which then let's you use IDE refactoring tools and also let's your compilation find bugs.

Another benefit is that you can mock up your request and response objects to do unit testing. 

It's a lot of overhead but I do think it can have value in larger professional environments. I don't generally like it when working alone on personal projects. ",1537022123.0
kkert,"Look up Django Rest Framework class-based views or CBV, which is pretty much exactly the same thing. Note that most of your code will actually reside in Serializer, rather than View classes. 

Also, for a lot of cases there is little to no code needed, as generic classes and pre-written mix-ins do most of what you want already. So you just end up with pretty declarative structure of Views, Serializers, mix-ins and meta-objects attached to them.",1537035848.0
,[removed],1537022604.0
kurashu89,"> I'm a uni student that works for a company where they use dotnet core (c#) and and AngularJS.

dotnet core, noice. You might bring up a migration to Angular 2+ with Typescript since that'll feel very familiar to C# developers. Eventually someone will want to redo the frontend and being honest Angular is light years beyond AngularJS. Just food for thought there.

> On my own i use Python mostly since i really like it. At the moment i have a project where i exercise my skills with Django rest and Vue.

Nice, side projects are how I managed to break into professional development and how I keep sharp. 100/10 would recommend continuing doing this.

> At the work I'm at the backend mostly and i do create APIs at the moment.

Me, too. I'd recommend after your comfortable doing this in C# and Python, try your hand at creating things like console/CLI applications, implementing queue workers, or something that isn't related to building APIs. This will help you stay rounded and explore different ways of solving problems and how compromises need to be made in a request-response architecture like the web vs a long running task in a CLI environment.

> Since i'm now gaining experience, my supervisor tells me to use some certain concepts that he insists that are used widely in the industry. For example, he wants me to create a different C# response model (class) that corresponds to a certain api call..

> Eg: if you call the api for a users list i have to return a UsersListResponseModel, if you do it for groups i have to return a GroupResponseModel etc.

I'd echo your boss's sentiments, though if there are enough similarities between the two, you can collapse them into a generic model. 

e.g. if you have a paged endpoint, all your models might look like:

    public class PagedUserModel
    {
        public List<User> Results { get; set; } = new List<User>();
        public long LastIdSeen { get; set; }
        public bool HasMore { get; set; }
    }

You can instead do:

    public class PagedModel<T>
    {
        public List<T> Results { get; set; } = new List<T>();
        public long LastIdSeen { get; set; }
        public bool HasMore { get; set; }
    }


And use that model for all of your paged response needs.

I won't claim to understand your boss's, coworkers' or company's motivations for multiple models, but it is very common in my experience -- I'd hesitate to call it an industry standard though. The reason my coworkers and I do this is because different contexts put different demands on the data. Someone in collections doesn't care about a user's profile, they care about knowing how delinquent  the customer is and how they can help fix that situation. That's different from someone in shipping who just cares about where this stuff is going and very little about anything directly involving the customer. Someone in sales view is also different, repeat ad nauseam for every department.

So a single model of the data is insufficient for everyone. And even if you did manage to cram all that into a single model, you then run the risk of breaking the application with any update to it because ""Oh, the accounting application assumed the customer biography would never been more than 500 characters but now it barfs for every customer because it can be 1000 characters. whoops""

> I'm new to the industry, some things may seem wrong so mentioning them would be good too.

I hope you stick around and learn a lot, form your own opinions and when you feel comfortable answer questions from other newcomers.",1537027709.0
android2222,"C# is a 'typed' language and you create types with classes. By using a class in C# you are able to be sure that your responses coming out of the API fit a certain structure, have certain properties in certain places etc. The way it works in C# is that you pack your response into an object of the response class you created, and submit that as your response object in a C# WebAPI. C# takes care of serializing that class object of properties down into a HTTP Web response with a JSON payload. If you're going to consume the response of that API, it would still be handled as normal JSON in Django, just like you'd handle an API response from anywhere else. It's possible that you've already interacted with some APIs out in the world that use this paradigm. You will not be able to tell that it's a 'C# response', because it's all JSON in the end. Of course, there are other serializers like XML, but JSON being the most common. Doing it this way allows developers to create a 'contract' for the API by giving you the certainty that all responses will come out the exact same for API calls across the API. 

&#x200B;

Also, with inheritance, you can easily start chaining classes together to build a beefy response object. One  example would be to think about something like pagination or error messages. You can give those properties to other response classes easily to ensure that you do have consistency throughout each response. ",1537022726.0
bulldog_in_the_dream,"Sounds like he wants you to use data transfer objects (DTOs). They're usually not used nor needed in dynamic languages like Python, Ruby or JS.

You should check out .NET MVC/C# docs.

https://www.codeproject.com/Articles/1050468/Data-Transfer-Object-Design-Pattern-in-Csharp",1537027904.0
sweatroot,"Run away from anything Windows related and get into a proper Python/Django/Unix shop ASAP. One is on the raise in web tech, the other in decline.

MVC is the “industry standard” for web apps, but it is a relatively vague pattern which every language and framework tend to do it a bit differently, and none of the ways is particularly better. You got models (models.py, db/data layer), views (views.py + templates, the display layer)  and “controller”, which is the logic of transforming data into views (you can do that with fat models or put it in separate modules, in Django it’s not really specified, there is no idiomatic way in the community, do your research and pick what works best for you).

Other than MVC there are no “industry wide standards” that would define low level technical implementation like you described. if you’re implementing something in a RESTful way, then you should have a single, well defined resource (model) that you provide access to (eg CRUD) with a single / bunch of endpoints. Definitely not having many models for same data.

Maybe that person meant different serialisers not models, but general advice is: run if you can, you already make much better tech choices than that company. Don’t take other people’s BS, use stack overflow, checkout Two Scoops of Django (best resource on idiomatic Django usage). Good luck!",1537022380.0
mred_wtfe,Quite. It might be helpful to explain a problem or be more specific about your question.,1537009625.0
IReallySuckAtChess,"Your question is far too vague... Whilst people may not be running the exact combo as you, most issues are trivial to resolve if you give even a modicum of meaningful information. 

Give us details and give us your errors. 

What OS? What version of Django-tables 2? What version of Django? What errors are you getting? Have you checked that your code is not the problem by running on say 1.11 which is officially supported by them? Give us info... ",1537009791.0
Ken_E_Dangerously,"Yep. Definitely works. 

This explanation helped me.

http://www.craigderington.me/generic-list-view-with-django-tables/",1537018033.0
mbrochh,"of course you can. Make ""data"" a String field of the Mutation and return json.dumps into that field. Make ""errors"" another field on the mutation.",1537006557.0
IReallySuckAtChess,"Hey, you've got a problem... You're talking about an image url and not an actual file so you won't make use of the static system. Even so static isn't applicable if you had used a FileField since we're talking about a media file... If you had uploaded a file using a FileField then it would be different.

Corrected Current:

    <img src=""{{post.imgurl}} />

This is used when you're passing the CharField a url and not a file e.g. linking to an image in Wikipedia. 

If using models.FileField

    <img src=""{{ post.imgurl.url}}"" />

This is used when you actually want to upload your own image for use and requires using models.FileField",1536995370.0
cubiclegnome,"try <img src=""{% static post.imgurl %}"">",1536987550.0
fdemmer,https://docs.djangoproject.com/en/2.1/ref/templates/builtins/#static,1536987953.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1536947427.0
yoongkang,"I think you might need to think about the problem more deeply. Nowhere in the problem does it say to give users the ability to define custom ""models"" -- only custom ""risk types"". The representation of this does not have to be a ""table corresponding to a risk type"", the metadata could be spread across different tables.

For example, one thing you could do (but not the only thing) is to have a ""RiskType"" model, which has a one-to-many relationship with a ""FieldType"" model. This relationship creates the ""metadata"" part of the data model.

Then you need somewhere else to house data (as opposed to metadata). So you could have a ""Risk"" model with a foreign key to RiskType, and have a ""FieldValue"" model with a foreign key to both Risk and FieldType.",1537114349.0
pancakeses,"Search for ""dynamic model"" here and on Stack Overflow/Exchange. There are a couple different approaches. For instance, if you use a Postgresql database, you might be best just using a JSONField.

https://stackexchange.com/search?q=Django+dynamic+model",1536944714.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1536941435.0
-NewGuy,"I'm going through the same thought exercise at the moment. I would suggest you break apart the marketing app (static content + blog) from the product. Throw the product on a subdomain and utilize something like serverless to leverage Lambda to cut your overhead on marketing spend. The sign up can still be on the main site, just have the link 301 to the signup functionality on the subdomain",1536931007.0
fullstack_dev,A good compromise is having django templates render react prop values and state into the React javascript.  This way you can lean on Django's session management and url routing which works out of the box unlike React.  Then put SSR in front of Django.,1536933241.0
_under_,"Do not have two separate repos. You **will** regret it.

I say do option 1. It's the simplest solution. If you keep the authentication system and SPA under the same subdomain, you could just use cookie authentication instead of JSON web tokens, which will be faster to start with.

* You will want to have different CSS/JS bundles for your marketing site and SPA for efficiency.
* You can use a single Django view to serve the root of your SPA. Make sure you route all sub-paths to this view and let the JS router  handle them. (`/app/*`)
* Authentication through regular Django auth. Auth cookie can be used for DRF authentication. (For free, pretty much)",1536936687.0
twigboy,"I've done this recently and completely separate back/front end is the way to go.

Use a single django template at root URL (the / path) to serve the webpacked content so every URL shows the root URL. This is literally the only template you need

Then use react router to determine how each url works.

Fetch data through a consistent DRF interface when needed.",1536934589.0
Thispicnic,"My current approach is one repository with three folders:

web/ - Landing page, Pricing, etc.

app/ - React App

api/ - DRF


web is deployed to example.com

app is deployed to app.example.com

api is deployed to api.example.com",1536988139.0
ghostofgbt,"I'm doing something like this right now. I've structured it like your first option. My homepage is a simple form that posts to the dashboard URL. Inside the dashboard django app lives my react SPA. Within the SPA I use react router to handle navigating between the different /dashboard/xyz urls. I also have 5 or 6 other templates which will be individual SPAs with django handling the routing between them and react router handling navigation within them. Lastly, I use DRF as a back end API to query commonly used stuff across all SPAs (like hitting external APIs and such)",1536943390.0
yoongkang,"Yeh, I'd separate the two codebases, whether or not they're in different repos doesn't really matter. For example you could have a subfolder for the django app and another subfolder for the React app.

Just make everything static except the API, which you can host in a different subdomain. ",1536970309.0
dikamilo,"This is because of default implementation \`\`run\_validation\`\` method in the serializer. First, empty values are checked and if any of the required fields are empty, rest of validation is skipped and errors are raised. Workaround for this is to remove required from your email field and check it manually in custom validation.",1536928577.0
sgoel_,Are you running the same Python version locally and on GCP?,1536901041.0
existential-duck,"Check the packages you own with

    pip list",1536921444.0
SomeShittyDeveloper,"I use Docker for my Django app. TeamCity automatically builds the new Docker image whenever I commit. When I commit to master, it pushes the new image to DockerHub. SSH into my server and run a script that stops the current container, updates the image, starts the new container runs migrations, starts Celery daemons.",1536891025.0
xBBTx,"Ansible to automate everything and template out server config, setting up notifiers so that uwsgi is restarted if the source code or dependencies changed. You can make it as simple or crazy as you want, but I know that I my server can burst into flames right now, and spinning up a new VPS, running my playbook against it and my site will be back up in 15-30 minutes from scratch.

On other projects, it's just a matter of calling Kubernetes and telling it to update the docker image version from X to Y and all the rest is magic.",1536874772.0
thehardsphere,"I haven't used any of the approaches anyone mentioned here.

All I do is run:

1. Git pull
2. python manage.py migrate (if I have migrations)
3. python manage.py collectstatic (if I have new statics)
4. Restart Apache (yes I use mod_wsgi)

I think all this stuff about Docker and everything else only really makes sense if you are going to deploy on multiple servers, or when you want to deploy absolutely _everything_ every time. This doesn't apply in my case, because the app I'm running in production is on a single, low traffic server with lots of legacy crap I'm still in the middle of replacing piece by piece.

Don't be afraid to keep things simple.",1536951677.0
jannealien,I use Fabric. You write it in Python code and it provides different kinds of tasks etc. that you can run on another computer over an SSH connection.,1536871112.0
wizpig64,"my app's server has a bash script at `/usr/local/sbin/upgrade` that pulls code from git, runs things like collectstatic, and restarts gunicorn. then on my workstation i just run this after pushing my changes:

    ssh root@myserver upgrade",1536880382.0
nkuttler,"> Do everyone simply just use git or is there a simpler way?

Git alone can't do the job. But I basically git clone the repository into a new location, create a new virtualenv, stop the services, point the symlink of the app path to the new location, and start the service again. I have automated such a procedure using fabric (easier) and saltstack (more powerful).",1536871863.0
Jigglytep,"I use git update on digital ocean, [using this guide](https://www.digitalocean.com/community/tutorials/how-to-set-up-automatic-deployment-with-git-with-a-vps).

I need to find a way to run:
sudo systemctl restart guinicorn
everytime I update so my changes appear right away
",1536887780.0
kraymer,"Because code is not the only part involved in a deployment, just using git does not cut it, you have to deal with statics to.
My fabric setup involves a build server in charge of creating a .deb that is then installed on EC2 instances. Since recently I also automated the creation of AMI and upgrade autoscalers during deployments.  
I have a [blog draft](http://kray.me/2018/09/gitflow_fabric/) giving a detailed view of my fabric `release` task.
",1536926712.0
_under_,"[Dokku](http://dokku.viewdocs.io/dokku/)

Why? It's

* Free
* Easy to use and set up on your own server
* Open source
* Docker
* [12 Factor](https://12factor.net/)
* Also handles your backing services (database, cache, etc.)

Once you have Dokku set up on your server, all you need to do to deploy is:

    $ git remote add dokku@yourserver:my-app
    $ git push

It also makes it dead simple to spin up support services like Postgres

    $ ssh dokku@yourserver postgres:create my-app-db
    $ ssh dokku@yourserver postgres:link my-app-db my-app

Since you're already using DigitalOcean, you can use their pre-built Dokku droplet. You can follow the [set up tutorial here](https://www.digitalocean.com/docs/one-clicks/dokku/). (It's not very long.)

If anyone can show me a cheaper, more hassle-free way to host low-traffic apps, I would very much like to see it.",1536937334.0
DonHaron,"For one of my apps I use a git hook on the server that runs the migrations and restarts the services. For this setup there was some specific wsgi and nginx knowledge I needed to obtain, but after having it set up it always runs smoothly.

On another project at work we're using Heroku. That one works like a charm, and the setup was easy too.

For an older project we're using Fabric to deploy, but compared to the other 2 options don't like it at all.

Something else I'd like to try is having a setup with Docker / Kubernetes, that doesn't sound too complicated either. ",1536872049.0
v_krishna,"We use docker and rancher (k8s for new apps). Jenkins builds docker images when certain branches are pushed to github. New containers come into the load balancer, once they are healthy the old ones go out. ",1536894339.0
nityananda,"Using Ansible based on this: [https://github.com/jcalazan/ansible-django-stack](https://github.com/jcalazan/ansible-django-stack)

You can use it to setup whole your server(s) or just to deploy newest version of that Django app (it automatically   
 get latest source, install all requirements, migrate database, collecstatic, ....)",1536956090.0
fuckslavs,"    git pull
    sudo supervisorctl restart app

If necessary I'll migrate db changes before restart.",1536880954.0
godhatesmetoo,"    git checkout master
    git merge dev
    git push
    ./manage.py collectstatic --no-input
    eb deploy",1536876796.0
njancsar,New to Django? Check out the /r/djangolearning subreddit.,1536865623.0
Nicksil,"That's basic Django stuff. Go to Django docs and run through the ""getting started"" tutorial.",1536864814.0
fdemmer,"maybe try with `--keepdb`.

write/run a single test, that does nothing.

that way you get timing for only the setup.

are you sure the tests don't access network resources, that are waiting for timeouts?",1536853562.0
kunalgrover05,"I tried out everything and have conclusive answers to all questions finally:

* Using keepdb and better password hashing are great solutions, there is no reason why not to use them. If they are not adding delays today, they will tomorrow.
* I am not convinced to not have tests hit the database. The reason is simple, ORM's are not perfect abstractions since databases work differently. What might work with one Database, might completely fail on another. I want my tests to fail if my MySQL version upgrade is going to not work. For some context, we run 200 tests today in 2 minutes, so I don't see why we should try to save on this.
* There is no way your tests are going to have this regression, 4 minutes vs 40 unless something is fundamentally wrong. I found that out when I switched to SQLite and they still were slow. In hindsight, this should have been the first step before doing SQL profiling or buying a bigger server. I found that the Cachalot library which queries everything first from Cache was causing the regression, and [have opened a bug here](https://github.com/noripyt/django-cachalot/issues/116). The bug is quite interesting since it is possibly related to [how interaction happens with the TCP stack.](https://bugs.python.org/issue3766)

&#x200B;",1537006446.0
kraymer,Maybe start by doing some verbose output to see if the time is passed in the tests or the fixtures (creating empty db and db init) ?,1536848729.0
yoongkang,"Hard to tell, Profiling definitely helps, but here's a few things I might also look at:

* Have you been running the tests in parallel? The number of cores on the server and your laptop might differ.
* Do you have many tests that hit the database? Have you considered not writing tests that hit the database (not trolling).
* If you have code that makes HTTP requests to external APIs you should really be mocking them.




",1536890347.0
i_like_trains_a_lot1,ManyToManyField ?,1536822317.0
eljohnsmith,Really cool and useful. Thanks. Bookmarked. ,1536807216.0
james_is_an_ok_guy,This is awesome! Thanks for sharing!,1536824517.0
sol_tex,I was just wondering about this last night! Thank you!,1536859021.0
nannooo,"I have been using AWS CodeStar, which automatically sets up what you need (not docker though). SQS, RDS etc.

Nowadays, I would just use Dokku instead since it is much more cost efficient and works well.",1536775474.0
TunaBoo,"I use docker + GKE.

Depends on what kind of scale you need... but docker is great.",1536778349.0
FlipperPA,"If you want to go lo-fi over SSH to bare-metal or VMs, I put this together: https://github.com/FlipperPA/django-ssh-deployer

It's mainly for personal projects, deploy with a Django management command.",1536786167.0
pydanny,"These days I use serverless function deployment via Zappa on AWS (have tried Azure too). While it requires a little domain knowledge to get started, the savings generated for most projects are incredible. ",1536810036.0
netok,Started a project based on django-oscar and find it lacking. Will defintely try saleor in next project.,1536765031.0
OMDB-PiLoT,Excellent!!! Look forward to using it in a new project.,1536760770.0
IReallySuckAtChess,The Google Python API covers exactly this. Just call the API from your app and use the authentication etc as specified in the Google documentation. ,1536751861.0
spinNothing,"Perhaps try some of the beginner tutorials on django, might help.

https://tutorial.djangogirls.org/en/

https://docs.djangoproject.com/en/2.1/intro/tutorial01/
",1536749795.0
heo5981,"Try following Mozilla's tutorial, it's excellent. If you wish, you could just look at the authentication part but I recommend going through it all.

https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django",1536754176.0
rushnmob,"This playlist might be useful. There is a section where a profile page is created. 
 https://www.youtube.com/playlist?list=PL-osiE80TeTtoQCKZ03TU5fNfx2UY6U4p",1536756474.0
alexandremjacques,"I don't right as much tests I should too.  I guess the idea here is that you can ""lose"" this hour now but, if somebody (or even a future you) change this code again, it would be covered by testing and guarantee that something will not break, saving some time debugging. ",1536751596.0
colly_wolly,Good call. The benefits of unit testing are oversold. In this situation they wouldn't appear to bring you much benefit.  ,1536756059.0
massover,"It sounds like you’re on the right track always doing a cost/benefit analysis on the feature vs tests. 

It also does sound like you still have a bit to learn. I’d say continue to push forward and always write the tests, even if it seems like a pointless test, as the book suggests. Consider this as developing your ability to write tests and architect testable code. 

After a while, you’ll get a feel for what tests are valuable for your team/project and what would be a waste.  Unfortunately there’s no magic formula here which is why testing is such a hot topic.

For complicated one time use data migration/management commands, I usually find that I’ll write some happy path regression tests to assert correctness about any complicated business logic. Usually I’ll have to iterate on a data migration a few times, either due to memory constraints or data constraints that I missed because the prod dataset is different than local. Once the data migration is complete, I delete the test and management command from the codebase. YMMV. 

From your problem and solution description, it’s hard to understand if your solution is a data migration, view level logic, some admin code, a combination of the above, or something entirely different.",1536770492.0
skullone,"No major risks as long as you keep the schema the same as to what django expects. 
But maybe building a REST endpoint in django that external scripts could use would be cleaner",1536726921.0
pemboa,"> I have a vague memory of the 'max_id' for each table being stored somewhere else - and updating a table directly can through Django out of sync?

No.",1536736931.0
brtt3000,"External SQL bypasses any Django-level validation or processing on your data, like from custom fields.

Signals won't trigger if you use SQL somewhere outside django, which could be a problem for some business logic or dependencies.

Probably best to create an API instead of direct SQL access (at least for writes).",1536744890.0
whatever_meh,If you are doing any database caching like with cachalot you’ll need to manually invalidate it after any external writes. ,1536747628.0
thehardsphere,"There probably aren't any issues if you're careful about making sure the data inside is valid.

May I ask why you want to do this with a separate ""microservice?"" I've seen these sorts of approaches done before (though not with Django apps) and they tend to increase the overall complexity of the system and introduce maintenance problems later.",1536773780.0
makavelixx,"as others have stated already, why don't you create an API for your microservice and secure it through a secret that is shared with the service?",1536817491.0
thehardsphere,"To give the best answer, I would need to know what you actually do with the primary address. 

I mean, my immediate answer would be to add a boolean field to the network address that indicates whether or not the address is primary. That way, you can still say ""give me all of the network addresses"" by doing the foreign key lookup when you need to know all of them, and you can only ask for the primary one in the cases where you only care about that.

With Django this is easy; you use the QuerySet API, and add the primary term as a filter criteria when you care about that. The only thing to watch out for is if you use SQLite; it doesn't always handle boolean fields correctly so your query may not work that way (though you can also do something other than a boolean, e.g. a single character string or a number or something)",1536774304.0
shobble,"Maybe with an [m2m through model](https://docs.djangoproject.com/en/2.1/topics/db/models/#extra-fields-on-many-to-many-relationships)?

So you'd have `Host`, `NetworkAddress`, and `AddressAssignment` where `host.addresses = ManyToManyField(NetworkAddress, through='AddressAssignment')`, and the assignment model has some flags or primary or wahtever.

IIRC it can be a bit fiddly querying them, and you'll maybe need code (or a separate DB index/constraint) to ensure that a host only has a single primary interface, and what have you.",1536780928.0
raddingy,"Gahhhhh no! Don’t do this! This is a bad idea!

Instead you need to set up some sort of scheme with this third party.

Instead of just asking them for their hashing algorithm, ask them if they have anything for oauth authentication, or SAML/SSO Authentication. Personally I would prefer SAML because this is what SAML is built for. ",1536666855.0
fdemmer,"https://docs.djangoproject.com/en/2.1/topics/auth/customizing/#authentication-backends

please use r/djangolearning for questions/help",1536653299.0
alex_w,"For what it sounds like you're actually trying to accomplish I agree with /u/raddingy. SAML or some kind of explicit standardised authentication/authorisation is the best approach. Perhaps the third-party app has some support alternative auth backends, ie. both the PHP app and Django would be authenticating against some common backed, LDAP say.

But in the interest of answering the question and you are learning this stuff etc.. check out the hashes, they might say on them what the hash is.

`$2a$12$nwtXRD.zpXu0ay3uQewtQe` for example is a b-crypt hash (`$2a` prefix) with 12 rounds of work (the `$12` second arg.).",1536682554.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1536640098.0
SomeShittyDeveloper,Your WSGIScriptAlias is pointing to a “wsgi.py” file. Is that different than wsgi.auth.py?,1536664837.0
Brandhor,"I think this is a feature that no one use and it broke with [this commit](https://github.com/django/django/commit/cb7bbf97a74fa7800865e3615f196ad65dc4f281#diff-90fe70df914f29f00e83d4a2acaf6601)

you should probably report the bug to django",1536668083.0
IReallySuckAtChess,"Mezzanine is a CMS that allows in place editing. So does Django-CMS. Consider checking if you can use whatever they are using to do it. Django CMS is particularly famous for how modular it is... 

Many CMSes allow you to use bits and pieces of them even though they appear to be monolithic at first glance. I've often used Wagtail bits and pieces in other projects usually without much hassle.",1536651758.0
charettes,"While I believe you should contain you validation logic in a `Form` subclass you could use `FormMixin.form_valid` to achieve what you're after.

e.g.

    def form_valid(self, form):
        # Perform validation based on form.cleaned_data
        # ...
        if error:
            # See https://docs.djangoproject.com/en/2.1/ref/forms/api/#django.forms.Form.add_error
            form.add_error('field', error)
            return self.form_invalid(form)
        return super().form_valid(form)",1536615490.0
efDev,"You may need to run collect static on your prod server: [https://docs.djangoproject.com/en/2.1/howto/static-files/#deployment](https://docs.djangoproject.com/en/2.1/howto/static-files/#deployment)

&#x200B;

The dev server handles this for you locally and is a common point of pain for first time deploys/deployers.",1536610520.0
jafrancov,"As @efDev said, you first need to cllect the statics, but you may need this configs before the collecstatic.

On settings.py

    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')

At the end of urls.py:

    urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)",1536615157.0
fahdinho,Take a look at django-storages,1536673136.0
Designer023,Take a look at Django white noise for a quite simple setup. If you plan on having lots of static files and also media uploads then Django storages is your best best,1536689330.0
FlipperPA,"I'd put a vote in for `django_s3_storage`, which only supports S3 rather than many storage systems, keeping it simple. https://github.com/etianen/django-s3-storage",1536786974.0
volkandkaya,"Might be worth just creating the Vue part and using https://github.com/agconti/cookiecutter-django-rest as the backend. That way it reduces workload for you.

The same could be done for React and Angular, even React Native and Flutter. ",1536595276.0
synw_,"For those who want simple ES5 stuff with no complex js pipeline overhead like Webpack, Babel and friends there is [django-vitevue](https://github.com/synw/django-vitevue) (disclaimer: I'm the author) to assemble a Vue frontend from several Django modules. I'm a backend guy who don't want to deal with js tooling so I made this to use Vue in a an old school way.",1536596725.0
madkplusplus,I needed this 4 years ago. Nicely done :),1536602765.0
godhatesmetoo,Awesome! Thank you! :-),1536603942.0
tenji73,"i am currently building an application that enables registered users to set their own colors for the app.. my idea was to run something like
`subprocess.call(""grunt..."")`
in order to render their static css files.. what kinda suck...
as far as i am seeing it right, your customizer is solving this very task?
",1536648496.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1536589793.0
croisus,"Instead of using urls.py, why not make a SETTINGS setting that they can set, and load that using the static template tag?  That’s what I’d do in this situation. ",1536591418.0
fdemmer,"sure.

use an option in the urls to pass the configuration to the view as a kwarg (should have a default): https://docs.djangoproject.com/en/2.1/topics/http/urls/#passing-extra-options-to-view-functions

and then pass that value on to the template in the context: https://docs.djangoproject.com/en/2.1/ref/class-based-views/mixins-simple/#django.views.generic.base.ContextMixin

imho, an additional setting is out of scope of a reusable view. the view and templates should just work out of the box. if someone wants to change the css they can set it maybe on the view (sub)class as an attribute or overload via urls.py. crating a setting for that is not necessary. anyone using the view could always make the setting themselves and use it as the option in urls.py.


and r/djangolearning is better suited for questions.",1536836886.0
booooomba,Why not do it directly in the template?,1536589895.0
hidden_knife_man,Is there any reason the [built-in authentication system](https://docs.djangoproject.com/en/2.1/topics/auth/default/) doesn't work for you?,1536554738.0
sweatroot,"Check Django allauth, it has good defaults",1536564837.0
RolandBuendia,"Is Apache running in a Linux Server? If so, you should probably need to use chmod to change the group permissions for the folder containing your settings file. In my case, I normally use the Linux command on my terminal: chmod :www-data myproject (where my project is the folder containing the settings.py file.",1536540704.0
ynotna,"It looks like Django is falling back to trying to connect to mysql on localhost with the user it is running as (apache)

Does the apache user have access to the my.cnf file?",1536561171.0
ByronEster,"I've never used my.cnf before for credential information.
I'd recommend specifying the username and password in the settings.py file for the database and see if that works

EDIT: Typo",1536585954.0
tink3rio,You need to put the username and password in your my. cf file for the database access.,1536547091.0
tink3rio,"Like so...
[client]
user=mysqluser
password=mysqlpass",1536547165.0
sweatroot,Use nginx,1536566702.0
masahazen,Seeing your videos m8.,1536672577.0
kunal097,"What is the database you are using ?
",1536516965.0
jomofo,File system permissions? Can your webserver process read the files to serve them?,1536513535.0
japanfrog,Most of the time it's some configuration setting regarding the static file directory. What's your docker-compose.yml look like?,1536518050.0
-NewGuy,"I know you are looking to solve this specific issue, but perhaps this could be used as an opportunity to offload your static resources to an S3 bucket. [Something like this](https://simpleisbetterthancomplex.com/tutorial/2017/08/01/how-to-setup-amazon-s3-in-a-django-project.html)",1536523827.0
redditor_id,what version of django? ,1536516321.0
MarcoBuster,Please send your CaddyFile,1536527521.0
sweatroot,Viewset in CBV,1536508528.0
spicy_mayo,"I don't think your create user view is ever going to be used, since the list user view is first in the list. Like I don't think it's going to get to list user view, see that only GET requests are allowed, then go to the next one in the url list. It's going to just throw the POST method not allowed wit that you saw. 

Changing the url for create user would probably be the easiest way to remedy this.

 If you really want to use the same url, you could do in your view:

if request.META == 'Get':
     #list user code

elif request.META == 'Post':
    #create user code

",1536504699.0
SauronsUnderpants,It seems like you haven't installed django_filters?,1536476741.0
Nicksil,The very last line tells you what's wrong. Your application uses a package named `django_filters` and it cannot find it. Install that package and try again .,1536476990.0
DonScotty89,"Django channels is for creating WebSockets that other people / services can consume. For listening to WebSockets you can just use the python WebSockets API, which may be ran in a background task. 

The standard Django WSGI can’t handle asynchronous request. For this you need a ASGI, which usually is daphne when you are working with Django channels. ",1536481818.0
dirtybutter,"in addition to what /u/IReallySuchAtChess said about IDEs...

you're overwriting `attrs` immediately after setting the class. you might use the `update` method instead

also, it wouldn't hurt to extract the fields into some variables instead of performing lookups every time",1536485059.0
shobble,"This line modifies the existing attrs dict (adding/changing the class key):

    self.fields['username'].widget.attrs['class'] = 'form-control'

This subsequent line undoes the previous by completely replacing teh attrs dict with a new one containing only a single 'placeholder' entry).

        self.fields['username'].widget.attrs = {'placeholder': 'Enter Username'}

Either swap them around (replace, then modify), or put both changes into a single dict (or use `dict.update()` as mentioned below).

No clue why it would work in some environments but not others, unless you weren't using *exactly* the same code, or there's some other witchcraft going on.",1536493403.0
IReallySuckAtChess,"So the IDE does not determine how your page is rendered. That is done by your code and the browser. If the code is identical then the rendering should be identical... 

That said, I can't figure out what browser you're running so that gives me no clues if it's some quirk there. What I can see though is that you're using ""form-control"" which is pretty typical of Bootstrap 3/4. So what I recommend you do is run the code and then select view source in your browser. Check that the stylesheets and javascript you need is being loaded (you will have to check the link exists and that if it exists that it points to the actual resource.)

I can almost guarantee you're not loading your css and/or javascript on the page. Your IDE isn't responsible for that and as such isn't relevant here. ",1536472029.0
jarshwah,"Careful using this. The first few pages will be returned quickly, but as the page number increases so does time. 

This is because each query will need to be sorted, and the result set scanned to find the min and max pk before returning the result. 

I’ve tried another version of this where you get the min and max of the table, determining each pk in each page from python, and doing many __in queries. This is better for dense tables (where most pks exist between min and max) but is terrible for sparse data. 

The fastest way is to do a values_list(“pk”) on the entire table, chunking the pks in memory, and firing off __in queries. Only works if you have enough RAM to contain the entire list of pks. 

iterator() is the better tool if using postgres and not using pgpool in transaction mode (the usual mode) as it’ll utilise server side queries. Oracle also supports server side queries. ",1536466673.0
thebru,"How's this better than iterator? Does the batching loading I to memory help performance, or does the overhead hurt?",1536449970.0
bjarkias,"I guess you either have huge tables or ant sized ram if you need this.
I've had to use ""for model in Model.objects.all().iterator()"" in a couple data migrations but that has always sufficed. (n=10.000.000)",1536442092.0
rodabi,Do you have an \`\_\_init\_\_.py\` in the \`polls\` directory?,1536436364.0
infinite_blot,"is there a views.py file in your polls directory? that's what it's trying to import from, make sure it's there.",1536429718.0
wilkc,Is this the URL.py in your project directory? I believe you have to include the poll app in there otherwise it's looking for views in the main project and is unaware that poll exists.,1536430758.0
TheoR700,Have you added your polls app to the INSTALLED_APPS list in your project settings.py?,1536433854.0
Nicksil,"You're using the file in your command. Hence the `__main__` name. Don't do that.

What command are you executing?",1536438596.0
if1then0,"I just looked at my Django [urls.py](https://urls.py) and I declare the namespace variable:

&#x200B;

`include('charts.urls', namespace='charts')`

&#x200B;

it's optional AFAIK but might be worth giving it a shot.",1536511521.0
prophetben,"For what it's worth, I started with the tutorial listed on django website and quickly got overwhelmed, I tried a few other online and paid tutorials, but was really impressed with William S. Vincent's book ""Django for Beginners."" It's well written, well thought out, and very accessible to those with limited programing knowledge.  At $40, it's not cheap, but you can go through the first few chapters for free on his website. [https://djangoforbeginners.com/](https://djangoforbeginners.com/)  


&#x200B;",1536436790.0
attreya12,"Reading the comments I think you might doing it in the wrong [urls.py](https://urls.py) file or your Django isn't installed properly.

Also if it helps I have a Django tutorial that you can follow along in video if you want - [Django (2.1) - Build a Personal Website with Python](https://www.youtube.com/watch?v=ehCjpQXetgo&list=PLhTjy8cBISEpXc-yjjSW90NgNyPYe7c9_)",1536430975.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1536399429.0
anddam,"You are only getting the Child attributes belonging to Parent, not Child.objects.all(). You likely used two concrete class and got two tables with Child data being split between them.

Try using an abstract base class from which you then subclass both concrete ones, this way you'll get two tables and the issue is avoided, rather than worked around.

I wouldn't like the subtraction path you were suggesting since it seems unnecessary, but I'm no DBA.

edit: grammar",1536391543.0
pancakeses,"It's hard to help if you don't povide relevant code, please post it. Do you make use of Meta classes in either model?

Also, please post this in /r/djangolearning rather than /r/django",1536381216.0
surpriseskin,You might consider using [Django polymorphic](https://github.com/django-polymorphic/django-polymorphic),1536432998.0
unkz,Seems like you'd want to do a left join where the child is null.,1536380083.0
mbi0,"The bottleneck isn't the database, but rather Django's template engine having to render the Region select field (probably having a lot of choices) 100 times, once for each distribution.

The quick fix is to use [raw_id_fields](https://docs.djangoproject.com/en/2.1/ref/contrib/admin/#django.contrib.admin.ModelAdmin.raw_id_fields) on your Distribution admin inline class, e.g.:

`raw_id_fields = ('region', )`
",1536393258.0
oliw,"Can you use [autocomplete_fields](https://docs.djangoproject.com/en/2.1/ref/contrib/admin/#django.contrib.admin.ModelAdmin.autocomplete_fields)?

This generates mini API for each related field, and hooks in Select2 to use it. Essentially it defers all the secondary querying for when you use the select.",1536392876.0
TiredMike,Look up using select_related or prefetch_related in the get_queryset method of the Django admin. ,1536390540.0
HORACE-ENGDAHL,"I'm not great with Django but isn't the bottleneck here the database? If the 'regions_region' table is indexed on ID, shouldn't these queries be really fast? What database are you using in the back-end?",1536390604.0
fuckslavs,Override the admin class get_queryset() method to use either select_related or prefetch_related,1536347096.0
Reeveo,"Does this help:
https://simpleisbetterthancomplex.com/tutorial/2018/01/29/how-to-implement-dependent-or-chained-dropdown-list-with-django.html",1536327326.0
RadioactiveCats_18,"If you're looking at filtering a frontend table, I have found all of these functions are served ajax-style and out of the box with DataTables.  If you're interested I  have a few examples of Datatables hooking to Django Rest Framework.  Check out some of the features at r/http://datatables.net .

&#x200B;

I'm using it on an intranet site and LOVE it for the frontend filtering and sorting with ajax.

&#x200B;

You can use the ""Buttons"" plugin for DT to export spreadsheets of the data too.

&#x200B;

For backend, someone smarter than me :)",1536335161.0
jordanreiter,"It's tempting and exciting to start from a technology-oriented process, but you'll have better outcomes with a problem-oriented process. What specific problems are you solving with your website? It may be easiest to use Django's built-in user management system (I mean, it *will* be easiest, but even down the road when you figure out your future needs it will still be better).

Also, I think you're mistaking certain AWS techs that are the infrastructure and not the solution. Amazon API Gateway just allows you to create the endpoints of a RESTful app. It doesn't implement it (DRF is one possible *framework* to implement it, but you could also roll your own within Django). ElasticCache is just a cache server, and Django can use that for its cache (and it's recommended to do so if you're going to be serving from multiple instances and want data to be shared and cached across all of them).

Decoupling is *also* something that is not necessarily tied to technology. You could write a website that makes use of Cognito and Elastic Cache and is served up via the API Gateway and still have it be *incredibly* coupled.

Again, focus on the problem you need to solve. These are good questions to ask when you get to a later point and say, ""Okay, things are working so far, but how can I make them work *better*"".

If you write your code decoupled -- for example, if you keep user authentication largely separate from the rest of your code -- then you can swap in and out new components in the future.

boto is the defacto standard. In fact it is *the* SDK for integrating AWS services into Python.

It is good that you are focusing on best practices. Another best practice is test-driven development. An excellent one for Django is [Obey the Testing Goat](http://www.obeythetestinggoat.com/pages/book.html#toc).

If you do decide to go with AWS and you're engaging in test-driven development, you'll want to use [moto](http://docs.getmoto.org/en/latest/) which is a mocking framework for boto. Basically, it allows you to make all of the API calls you'd make to AWS services within a testing environment without affecting or creating real AWS resources.

Other best practices:

 - don't put configuration settings directly in the settings.py. 
    Instead of:

        MY_SETTING_VALUE=""whatiwant""

    You would use

        MY_SETTING_VALUE=os.environ.get('MY_SETTING_VALUE')

    The library you want here is [django-environ](https://django-environ.readthedocs.io/en/latest/) which simplifies passing through environmental variables, including filling in database settings using an URL-formatted string. Then you set these variables in the configuration attached to your deploy (e.g. in Elastic Beanstalk, you'd enter it as variables in the configuration section)

 - put your code in source control. AWS's CodeCommit is a pretty good deal.
 - I mentioned test-driven development above. If you go that route, look into continuous integration (CI) tools like [Jenkins](https://jenkins.io/) or [tox](https://tox.readthedocs.io/en/latest/) to automated testing your code under different environments or contexts. It tends to be more useful for code you intend to distribute as a library, but still useful
 - Possibly a bit overboard, but you can employ [coverage](https://coverage.readthedocs.io/en/coverage-4.5.1a/) to ensure that the your tests are testing as much of the code you're writing as possible.

Hope this helps! Good luck with your development.

",1536328983.0
nannooo,"This all depends on what kind of app you want to build. If it's a low traffic and simple site, you really don't need all of that. You can simply create your project and get it hosted on a VPS with Dokku or whatever. 

If you are starting a new project which \_should\_ take off, then please start with a VPS system and not set it up to scale. Fact is.. most projects that \_should\_ take off, never actually do.

The solutions that you are naming there are meant to be for high traffic sites (except perhaps Cognito). In that case, you can upgrade these components individually where needed. It's quite expensive though. I am not saying it won't work for low traffic sites, because it will work just fine.",1536323602.0
tomdyson,"> Redis can be implemented in Django

That's not quite right - Django can _use_ Redis, but it needs a Redis server. ElastiCache is Amazon's Redis service.",1536325701.0
ckinsey,"The benefit to most of these tools is that they are managed services.  You can build a serverless API with API Gateway / Lambda that's totally elastic and pay-per-usage.   Or you can build an API with DRF and manage your own computing resources to power and scale it, quite possibly at a lower operational cost if you have the resources to architect, design, and maintain it.

Neither is the definitive _right_ answer--it depends on the tradeoff between cost of services, cost of development, cost of maintenance, and the need for elasticity.",1536336404.0
Niicodemus,[pyInstaller](https://www.pyinstaller.org/),1536331772.0
ssekuwanda,"Try django-eel, a perfect solution for you. But u can look into python eel by Chris knott",1536524617.0
danielgoncalves,Have you think of [dockerize your Django application](https://runnable.com/docker/python/dockerize-your-django-application)?,1536376201.0
telmomartinho,You can use Electron...  ,1536315989.0
McDivvy,"Are the fields indexed properly?  If not this could help a LOT.

&#x200B;

Otherwise, a raspberry is not very powerful and you may have just reached a hardware limit.",1536309291.0
fabiocaccamo,"I think that your queries could be improved.  
Is it possible to see your models and queries?",1536309697.0
metraon,"startproject and startapp is the equivalent   


[https://docs.djangoproject.com/en/2.1/intro/tutorial01/](https://docs.djangoproject.com/en/2.1/intro/tutorial01/)

&#x200B;",1536287730.0
,Use dynamic filters from the request it's so much cleaner and fluid. Make sure you're prefetching and selecting related fields where appropriate. You can set the default permission classes etc to clean the code up. Specifying the fields that way on the serializer is a bit redundant. I'd also plug in something like serpy to make it faster. ,1536288236.0
Rorixrebel,"Will spin it up in a container to test, thanks.",1536289630.0
ncmoore1986,That picture tho,1536329716.0
Nicksil,"Read the docs on [customizing authentication](https://docs.djangoproject.com/en/stable/topics/auth/customizing/). Also, further down the page, it talks about how to implement a customer User model if your use-case has the need.",1536273874.0
geosoco,"Are there different access codes? Do you need to track the usage? Are they one-time use codes? 

If you only have a single code and don't need to track users, then just create a custom page and handle the [login](https://docs.djangoproject.com/en/2.1/topics/auth/default/#authentication-in-web-requests) yourself, and you keep the username in code and just have a form with a single text entry which you use for the 'password'. 

If you have multiple codes and they aren't unique per user, then you've got a slightly different problem as you'll need some sort of way to map them. If it's only a few codes, you could start each with a different character. 

If you need unique codes per user, you can also extend the user class and have the code in there, and a custom form that looks up the user by the code, then [logs](https://docs.djangoproject.com/en/2.1/topics/auth/default/#authentication-in-web-requests)them in. You'd need a special page for you to [create](https://docs.djangoproject.com/en/2.1/topics/auth/default/#creating-users) users, possibly in bulk and show you the codes which you can share to others. ",1536280707.0
lamintak,You might be interested in [django-lockdown](https://github.com/Dunedan/django-lockdown),1536282830.0
whatever_meh,"In general, rolling your own authentication systems is a bad idea. Unless the value of what you are trying to protect is insignificant, stick to proven secure methods. ",1536292628.0
j03,"I'd probably end up doing something like:

    class Card(models.Model):
        PLUS_MINUS = ""PM""
        PLUS = ""P""
        MINUS = ""M""
    
        CARD_TYPES = (
            (PLUS_MINUS, ""+/-""),
            (PLUS, ""+""),
            (MINUS, ""-"")
        )
    
        value = models.IntegerField(min_value=0, max_value=6)
        sign = models.CharField(max_length=3, choices=CARD_TYPES)

You could then create instances like:

    card1 = Card(value=1, sign=Card.PLUS_MINUS)
    card2 = Card(value=2, sign=Card.PLUS)
    card3 = Card(value=3, sign=Card.MINUS)",1536272943.0
zona_enders,If anybody who feels like downvoting the question could maybe comment with why they think it's a bad question that could also be helpful. ,1536271235.0
zona_enders,"(For anybody familiar/wondering, the game is an implementation of Pazaak from Star Wars: KOTOR and I'm just building it for learning purposes)",1536266502.0
thehardsphere,"This is very vague. Two questions immediately come to mind:

1. Is the network connection from the server where Django is running to the database reliable? You can get this message if the connections time out.

2. Are you working with unusually large data? E.g. greater than 1 MB? There is a max_allowed_packet MySQL configuration setting for both the client and the server. If your query is larger than this value, MySQL will hang up on you.",1536250573.0
hijinks,are you connecting to a DB over the internet or something?,1536246411.0
ciarancour,"Are you making the connections outside Django, like in celery or a twisted service? If so you need to call `close_old_connections()`, its in the Django docs somewhere",1536261258.0
athermop,It's a super simple library.  Not sure why you need anyone else's help?  Just fork it and do whatever you think is needed.,1536248113.0
tomdyson,"What about the slightly more active https://github.com/benoitbryon/django-downloadview? 

Its documentation includes a section on migrating from django-sendfile: https://django-downloadview.readthedocs.io/en/1.9/django-sendfile.html",1536246051.0
mhurron,"Go ahead, nothing is stopping you.",1536246205.0
BenjaminSnow,"I'm confused as to why you've phrased it as ""we"". Fork it, work on it, and when you get stuck come back and ask for help. It just looks like you're wanting someone else to fix it for you. ",1536252552.0
spapas82,I also recommend taking a look at https://github.com/edoburu/django-private-storage which offers the same functionality as django-sendfile (and some more things).,1536269466.0
thehardsphere,Isn't this a repost of what you already wrote about this thing?,1536283596.0
athermop,"As I mentioned in your last post on the subject:

You should fork it and repair it.  It's a simple library.  The fact that it hasn't been done yet is evidence for the fact that it's not important enough for anyone, or that the problem is so simple people have just rolled their own.",1536285853.0
keyboardsoldier,"I believe you need to use a custom user model. 

You can refer to this: [https://github.com/LondonAppDeveloper/byob-profiles-rest-api/blob/master/src/profiles\_project/profiles\_api/models.py](https://github.com/LondonAppDeveloper/byob-profiles-rest-api/blob/master/src/profiles_project/profiles_api/models.py)

&#x200B;

You will also need to change your [settings.py](https://settings.py) to point to your custom user model. If you follow the example above it's 

 `AUTH_USER_MODEL = 'profiles_api.UserProfile'` ",1536238521.0
fdemmer,"- https://docs.djangoproject.com/en/2.1/topics/auth/customizing/#substituting-a-custom-user-model
- r/djangolearning",1536255834.0
mohitus88,okhay as per the suggestion of you guys i have done it and been success and works fine with DRF.....thanks a lot guys,1536322048.0
zettabyte,"I think that's exactly the behavior you would expect, isn't it?

You click the link, your browser sends an HTTP request to your view, your transaction opens and begins processing data.

You click the link /again/, your browser abandons your first request, sends another request to your view, your second transaction blocks until the first request completes.  When it unblocks, the second 5,000 records is updated and the second file is returned.

Basically, when you double click the link (or button or whatever), you're sending two requests to the web server.  And because you abandoned the first request, your browser never receives the first response from web server.

If you /are/ using a link, then ""you're doing it wrong"".  A link sends a GET request to the server, and GET requests should be idempotent.  Meaning they don't change data on the server.

You should change the link to a form POST, and disable the form in the browser after submitting.  If you insist that you need it to be a link, then you need to disable that link after the first click.

",1536242064.0
daredevil82,"with your formatting of `ExportView`, can't tell what's what.  Reformat the code to be more appropriate",1536230137.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1536222877.0
hip_modernism,"You could just add this functionality yourself? I think that's the easiest thing rather than puzzling out yet another 3rd party package that does probably way more than you need.

&#x200B;

Assuming a data model something like User Model <--> Membership Model <--> Organization Model. (if what you have right now is something like User Model <--> Organization Model...that could be a problem, you really need an intermediate model that connect these two things to store more information about the nature of the membership).

&#x200B;

The Membership model would need a field of status (invited, approved, maybe ""rejected"") along with a field like ""invited email address"".

&#x200B;

You'd need to write a view that sends an invite that is really just a fancy registration link, and then do a post registration hook that matches the signed up user's email address with an outstanding invited emails once they sign up. Depending on your security situation they could be auto join the group, or you could give them another chance to manually join the requested group on first sign in (better).

&#x200B;

Once the user accepts the invitation, you could change their membership model instance status to approved and then link the membership to their User object.

&#x200B;

Or another way to do it would be instead of having a status field on Membership, create a fourth Model called ""Invites"" that is linked to Organization, and has the invited email address. Then delete this object once a User accepts the invite, and create the membership object at that time as well.

&#x200B;

At any rate, you need:

&#x200B;

\- A model track a pending invite, that is linked to an Organization

\- A form that generates an invite email with a link to sign up for the user

\- A post registration hook that checks for pending invites and links the new User to the Organization in some way

&#x200B;

Hope that helps!

&#x200B;",1536206457.0
njancsar,"https://github.com/bennylope/django-organizations

https://django-organizations.readthedocs.io/en/latest/usage.html#invitation-registration-backends",1536166734.0
raddingy,"Oh man can you. 

First I would look into a CI/CD program. You could use Jenkins because its free, but you have to host it and manage it your self, also it’s Jenkins. Travis or Circle are my go to CI services. 

CI/CD allow you to push your code up to git and then have these services pull your code, run tests, build your app and then send it to your server in to deploy automatically. It’s all scriptable so literally the only thing you have to do is push your code up to your Git server. No more having to login and clone your branch and restart the app manually. 

Next, it’s always a problem to me when I here a developer say that they need a dev machine that is basically a clone of production. This is fine once you have that server set up, but if you add a new developer, or you make some changes in production, this could lead to all sorts of problems. Instead you should focus on getting the application running locally _and_ in production without having to clone your prod machine.

Personally I would use docker to containerize your application in a distributable way. With docker, you can basically have an image that is your app, deploy that image and then you’re done. This is a little more challenging operationally because you’ll need to manage your application’s deployment, but there are tools out there like Kubernetes (which has a lot of management) or ECS (AWS; not so much management) and even Digital Ocean is coming out with a container service. So if you’re using one of those, you just need to push and let them route traffic to your app. 

Containerize got your app gives you the ability to test your production images locally (which means you can debug production locally, isn’t that cool?) and give you basically a build once deploy anywhere application. Building a docker container is super simple. 

As for celery, I haven’t used it in about 4-5 years so I don’t know ¯\\\_(ツ)\_/¯. You could probably containerize the redis portion of that and then connect the two containers on a docker network and there you go. ",1536147368.0
booooomba,"Did you complete the official Django tutorial?
And what have you come up with thus far? ",1536147447.0
yoongkang,There were quite a few improvements to the default Django admin in recent versions and a mobile-friendly one coming soon (EDIT: it's already in). Does this library build upon the more recent improvements? The screenshots seem to show the old Django admin.,1536146104.0
godhatesmetoo,This is nice. Are there any drawbacks?,1536152646.0
protone,"Well, I appreciate your work!!
Still I am not convinced with the `django-admin-interface.Theme` model! 
Just a Django thing. Each and every data is a database model object :/",1536180006.0
searchingfortao,"I'm pretty sure that Django-jet is abandonware.  There are attempts by the users to keep it going, but the core dev (last I checked) has more or less moved on.",1536133303.0
TehMoonRulz,Are you asking how the \`get\` and \`post\` methods from [class based views](https://docs.djangoproject.com/en/2.1/topics/class-based-views/intro/#using-class-based-views) work or literally the code  that detects what the HTTP verb is from the client?,1536080014.0
,[deleted],1536102550.0
yoongkang,"How are you rendering the form? You could pass an `initial` keyword argument when you instantiate the form, but that really depends if you're using the form object to display it: https://docs.djangoproject.com/en/2.1/ref/forms/api/",1536105825.0
i_like_trains_a_lot1,"Why not use the [UpdateView](https://docs.djangoproject.com/en/2.1/ref/class-based-views/generic-editing/#updateview) instead? You can have in the view's ``get_object`` something like 


    def get_object(self, queryset=None):
        return get_object_or_404(Parent, slug=self.kwargs['slug']).foreign_relation",1536137538.0
GlenBXL,Noob here. Is this any good?,1536230138.0
synw_,How does it compare with [django-user_agents](https://github.com/selwin/django-user_agents)?,1536060855.0
anddam,"You say you are already loading additional models via AJAX so I figure you are already using something like [django-dynamic-formset](https://djangopackages.org/packages/p/django-dynamic-formset/) along with Django's [inline modelform set](https://docs.djangoproject.com/en/2.0/topics/forms/modelforms/).

For a similar need I used a small mixin and tried to stay close to CBV logic.
First I overrode get_context_data  I overrode post() in the view to validate the formset along with the form, then created two new functions `submission_valid()` and `submission_invalid()` called in place of `form_valid()` and `form_invalid()` (since the payload is not anymore just a single form).

The inlineformset should automagically take care of assigning the relationship id, but if you want to do it manually you can just add the data to the forms before saving.
",1536050095.0
daredevil82,"So, django is _not_ an async framework.  There's a [proposal-(https://www.aeracode.org/2018/06/04/django-async-roadmap/) and [dicussion among core devs](https://groups.google.com/forum/#!topic/django-developers/Kw7-xV6TrSM) but django itself is not asynchronous at all.

The primary issue is its a WSGI application, not ASGI.  Specifically, you can fire and forget asyncio tasks just fine. The problem with using asyncio for background tasks is that you don’t really have control over your environment, over processes and threads. They are usually managed by an external program - uwsgi or gunicorn. They can decide to kill a worker process at any time while they think that no request is being processed. Your background task dies too, of course

Django is not an async framework and bad things will happen if you try to spawn threads/processes while processing an incoming request

If you're already working with flask and tornado, why not look at using flask with aiohttp?  That'll let you get to 3.7 compatibility right off the bat, while tornado is still 2.7 (IIRC)",1536062818.0
i_like_trains_a_lot1,You can use celery but it's overkill if you have just some requests or something like that that can be processed in parallel during request's lifetime. I guess you could use some ThreadPool to process blocking operations in parallel.,1536056665.0
unkz,"I do my development in a docker container, and I do my deployment in a docker container.  So really, there's not a whole lot of difference between them.",1536040971.0
savuporo,"First step: set up a CI build ( Travis, CircleCI, Codeship ) . Once you have that running, deployment becomes easy. 

You can have deploy trigger as a conditional build step from master/release branch, where you are free to freeze/package up all of your pip dependencies in a wheel or just a freeze file or however you prefer it. 

If you were using a setup similar to [django cookiecutter](https://github.com/pydanny/cookiecutter-django) you would have deployment template also prebuilt for you, but most importantly 12-factor configuration which makes deployment manageable.",1536043461.0
xBBTx,"Without docker:

* `virtualenv` + `pip-tools` to manage dependencies
* deployment with `Ansible` playbooks that automate everything
* handling different environments (dev vs. staging. production): `python-dotenv`. Ansible templates out my `.env` file for staging and production

With Docker:
* build Docker container image on local machine, push to Dockerhub/AWS/whatever
* parametrize container with environment variables (`docker-compose` reads `.env` as well)",1536086340.0
mypirateapp,"I dont think Django channels can act as a websocket client to connect to other wss urls if I am not mistaken, I am however not aware of how this can be accomplished so looking for an answer myself",1536428145.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1536006187.0
godhatesmetoo,Thanks! There are so many great packages. It's unbelievable! :-),1536009065.0
xBBTx,"Your readme doesn't render properly on PyPI though, might want to look into that.",1536010159.0
mattsl,I'm using an older version. It's great. I'll need to update. ,1536033679.0
ramse,"We need to see code, namely the urls.py and the url you're attempting to visit.",1535993951.0
daredevil82,"to follow up with what /u/ramse said, your job as OP, if you want any meaningful help, is to put relevant information in the question.  How helpful do you feel what you wrote is to anyone here?",1535996958.0
ramonsaraiva,What is the URL you're trying to access? Could you paste the error stack trace? Is your app \`account\` registered in your \`settings.INSTALLED\_APPS\`?,1535999430.0
Jedicode,"> Request URL:    http://127.0.0.1:8000/register

Shouldn't this be http://127.0.0.1:8000/account/register?",1536004254.0
daredevil82,"one thing I really found helpful in figuring out what urls are in a project is `django_extensions` `show_urls` management command.

https://github.com/django-extensions/django-extensions

`./manage.py show_urls` outputs a list of all the URLs mapped in the project

That said, I think you need to use [namespacing](https://docs.djangoproject.com/en/2.1/topics/http/urls/#url-namespaces-and-included-urlconfs) with your includes.

add `app_name = 'account'` to your account's url.py file, and use `account:register` when referring to the URL in your form.",1536004494.0
ramonsaraiva,"We have in our website a pretty rare use case where we need to handle session expiry times differently for specific user groups, user permissions, request metadata, etc..

This package was created to help defining those expiry rules, for anonymous and authenticated users, with simple configurations. It also helps defining default expiry times for anonymous and authenticated users.

Maybe it also fits you, so I decided to make it open-source and share it.",1535948847.0
emihir0,"What a nice app; will certainly try it out. 

Maybe you could also add a functionality that forces user logout? That is, it expires him. ",1535992003.0
angellus,https://docs.djangoproject.com/en/2.1/topics/db/multi-db/,1535940877.0
AnActualWizardIRL,"Theres two ways to do this. 
1) Use a Database router to hook up the auth to the different database as the rest of the app. There is a downside to doing this though, that things can get a bit hairy once your app needs to do joins, foreign key relationships, etc across tables. You need to think long and hard about this.
2) *IF* your database supports it, you could use a Materialized view to magic the tables from the other DB into the new DB. MySQL should be able to do this (I worked at a small VOIP provider once, and we managed to write the mother of all headfuck views that transformed the subscriber table from a OpenSIPS system into something that Django recognized as a ""user"" table, complete with password mangling and everything.). However, pay attention to the implications of the platform your deploying to. MySQL and Postgres views work very differently , and have very different rules about writing and reading from tables. Further, if your doing DB replication, your probably in an organization big enough to have a specialized DBA so you'll need to speak with her about what the implications of this are. 
Using Materialized views as a backing structure to djangos models aren't well documented , so experiment first!",1535965087.0
nkuttler,https://docs.djangoproject.com/en/2.1/ref/contrib/sites/,1535942900.0
Nicksil,https://namecheap.com,1535918832.0
IReallySuckAtChess,"Email is a service just like http or ssh or FTP etc. You don't buy it per se. You buy a domain name and then host the email where said domain points to.

So if I own the domain cool.com I will point my domain to my server e.g. 192.168.5.1. Then I configure the email service on my machine and use the name and not numbers for my clients. So then the email address becomes user@cool.com. When somebody sends an email to user@cool.com the cool.com is converted to an ip address, appropriately routed, and goes to the server running the service.

That said, some domain sellers will offer free email services and cheap hosting too. Often these email services are on servers shared by many devices and have poor performance or arbitrary restrictions. Sometimes you do get a decent service but don't bet on it. Just know that the security of your emails is heavily compromised. You also have limited control and functionality. You can also often purchase specific services like G Suite or Exchange email or whatever from the provider or you can host it yourself. 

Free email is just generally not good email. Many times the IP addresses the servers run on have low reputation so you can't run a mailing list without being blocked like crazy.

If you want managed email then expect to pay a decent amount for it. Usually its $5/month/user but that often includes stuff like groupware like webdav, caldav, exchange accounts, file sharing and a ton more features and functionality. It's nice to have and if you teach people to use it, they will. Being able to attach a 2GB iso to an email can be so useful even when it operates over Google Drive or whatever. 

G Suite from Google is reasonably priced and very good as it includes all the major protocols for mail, calendar and more (ical, Caldav, gcal, and EWS I think). If your users will only ever use Android, iOS, Windows and Mac with Microsoft Office then Office 365 or Amazon Workmail are good. Just know that these two services only operate over Exchange Web Services so Linux users will be shit out of luck, as will many users using more fringe devices like Chromebooks or alternate smartphone operating systems. Exchange Web Services is also a bitch if you want to integrate them with your own programs and services... So yeah G Suite would be my recommendation for managed. 

If you don't mind getting your hands dirty the NextCloud/Owncloud would be my recommendation. You can run your own G suite with much lower per user pricing and 99% of the same functionality. Only downside is your users will sometimes have to install an app on some devices to integrate features with their native calendar application (but only sometimes.) Big upside is you control your data, you can save lots of money, and building your own integrations is very easy. The big downside is that it's not managed so you're responsible for managing the server.

As for a domain seller. There are plenty of good ones. Just make sure you use a good one without surprise pricing for renewal. I highly recommend Google Domains. If you're in the AWS ecosystem then I can also highly recommend Amazon Domains and Route53. Amazon doesn't offer a free DNS but the pricing is very low and their performance incredible. You can always use Cloudflare as your DNS or the free one most VPS providers often.

If you have anymore questions just shoot. ",1536047203.0
gineinscruffy,"I use name.com for all domains - good combination of full featured and reliable w/ inexpensive (you can usually find coupons to bring down any price they have).

G Suite is the gold standard for email.",1535922936.0
cascott77,I've always like 1and1. Their domains comes with email as well.,1535921282.0
boxidea,"Use JavaScript to get location. 

https://www.w3schools.com/html/html5_geolocation.asp

You can send it back to the server if you need, then process it or store it accordingly. 

Showing it on a map is a matter of using a map library and passing the lat/lon. ",1535908190.0
IReallySuckAtChess,"Permissions are unavoidable, however, once granted they tend to persist.

Anyways, what you'll need to do is make use of websockets and javascript to make true real-time magic happen. You get the location from the browser in Javascript and send it over the websocket.

That said, it's unnecessary. Most browsers don't update location all that often (or constantly) so you can just write a function that transmits the location on change with a timestamp so you know the last updated time. It's be just as accurate as going the websocket route and will massively reduce your code complexity. You need to look at navigator.watchPosition() on the javascript side.

Just note, location only works over https. So you need that. You also have to use https in your dev environment. Just know that the location isn't always that accurate depending on the device, browser and settings... ",1535960892.0
dlrust,"Basically you can setup your django view to be cached, so that it returns a cached version that expires after 5 minutes (300 seconds) - there is a simple decorator that you can put on the view.

See [https://docs.djangoproject.com/en/2.1/topics/cache/#the-per-view-cache](https://docs.djangoproject.com/en/2.1/topics/cache/#the-per-view-cache)

You can cache the results in the database, in memcached, or on the file system

You could alternatively cache the resulting json/dict inside the view",1535908630.0
IReallySuckAtChess,"You can cache internally, but you could also look at using Varnish. Varnish isn't the simplest thing under the planet but it's an incredible tool and scales so well... Varnish on even a tiny server in front of your Django application will easily allow you to handle Reddit's front page. ",1535961046.0
daredevil82,"Sounds like you can use a background task like celery to run as a cron job.  Every 5 minutes, it would make the request to the API and store the result in the cache.

This way, your views would keep using the updated cached value without having to have the API fetch inside the request-response loop.",1535978388.0
yoongkang,It actually works quite nicely. You can install it via npm or just drop the source file in your static folder. You may need to change some of your JavaScript though.,1535903232.0
kmmbvnr,"There are several drawbacks. First you probably would need to disable turbolinks cache to avoid visual flickering `<meta name=""turbolinks-cache-control"" content=""no-cache"">`

A custom [middleware](https://github.com/viewflow/django-material/blob/v2/material/middleware.py#L38) required to handle redirects, and if you like to post forms through turbolinks [few lines](https://github.com/turbolinks/turbolinks/issues/85#issuecomment-338784510) of javascript required.

&#x200B;

You should take care about js even listener subscriptions. I found very convenient to wrap all js code in a web-component (with [custom-elements](https://github.com/webcomponents/custom-elements/) shim only) that would call connected/disconnected callback automatically. But i have to patch [the shim](https://github.com/webcomponents/custom-elements/blob/master/src/custom-elements.js#L33) with  


 `window.addEventListener('turbolinks:before-render', (event) => {` 

`internals.disconnectTree(document.body);` 

`internals.connectTree(event.data.newBody);`  

`});`

&#x200B;

I feel that overall solution gives look and feel of single page app, for the standard django website if you keep server ping time in 50-150 and overall response in less than 250ms. You can compare frontend and standard admin of [http://next.viewflow.io](http://next.viewflow.io) (admin:admin) 

&#x200B;",1535948310.0
emihir0,Django-material uses turbolinks and it is quite nice. ,1535910439.0
bulldog_in_the_dream,"I've now discovered the method of just adding turbolinks as a script doesn't work with redirects. Seems you have to add middleware for that to work.

https://stackoverflow.com/questions/47240766/to-use-turbolinks-5-with-django-how-can-i-automate-inclusion-of-the-turbolinks",1535921288.0
AnActualWizardIRL,"eeeeeeevil. When doing Rails jobs for people, disabling turbolinks is my first port of call. It can cause *weird as hell* issues with javascript sometimes, especially if your using the higher end frameworks that muck about in the virtual dom, like React/VueJS/etc",1535965209.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1535868971.0
4022a,"Django embraces ""fat"" models, which means you want to put as much of your code into your models as possible. 

To that end, you could override the save method on your User model to modify the Client model when saved. ",1535856790.0
jarshwah,"Aymeric (a django contributor) posted a 3 part series on creating a project that integrates Django with React. I'd highly recommend reading each part before you embark.

https://fractalideas.com/blog/making-react-and-django-play-well-together/

https://fractalideas.com/blog/making-react-and-django-play-well-together-hybrid-app-model/

https://fractalideas.com/blog/making-react-and-django-play-well-together-single-page-app-model/",1535874235.0
daredevil82,use django rest framework to make the rest api on top of django,1535833899.0
twigboy,"Seconding use of django rest framework, even if it's only for the easy to use serialisers in your own API views.

Django webpack to handle the output of javascript and css chunks after compilation.

Honestly, django is the easy part. Getting webpack to compile the way you want is gonna take you much longer.",1535835796.0
yoongkang,"Try GraphQL. I think a RESTful API that serves both a React frontend and a mobile site is nice in theory, but what I usually see is that differences in design will drive mobile-specific and frontend-specific changes to your API. So it might be a good idea to just let the client decide what data they want via GraphQL.",1535940792.0
makavelixx,"If you want to write a backend for mobile apps and use the same backend for web-frontend, too, then let me tell you this: It does not matter what you use on the frontend (react, vue, angular,, ...) nor what you use on the backend (django, flask, node.js, go, ph...nvm, c++).

What you're gonna need is a backend that exposes a rest api and clients that consume it. So if you decide to go for django, you could implement your own serializing logic of the models and return a json in your views, or you go the  very much favored way and use django-rest-framework. ",1536095131.0
AnActualWizardIRL,Django Rest Framework is an *excellent* back-end to both React and native mobile stuff (And really anything else that consumes well-formed rest). Admittedly I havent used it with React myself. But it worked excellently with both AngularJS and Backbone. Backbone of course makes an excellent Model layer to Reacts View layer chops.,1535965509.0
IReallySuckAtChess,"I love Elasticsearch but so many people are better served by just using Postgres full text search. Super easy to use, very performant up to about half a million pages and doesn't require running another (quite) hungry service.

What I will say is that Postgres full text search is a bit broken in stock Django and Wagtail but a decent fix isn't hard. You do also need to setup your own search dictionary and search configuration since the default stuff is damn lousy. 

Elasticsearch is better, I just don't think it's necessary most of the time. 

Also, as to the article, they should have looked at the Wagtail search backend for Elastic Search. I've used it without Wagtail in a few projects. It rocks... ",1535869424.0
godhatesmetoo,"[django-debug-toolbar](https://github.com/jazzband/django-debug-toolbar)

Allows you i.e. to read log entries and inspect template contexts in the browser. Incredibly helpful.",1535799141.0
lamintak,"[Django REST framework](https://www.django-rest-framework.org/)

Obligatory",1535824239.0
godhatesmetoo,"[django-import-export](https://django-import-export.readthedocs.io/en/latest/)

It allows you to export your data in tabular storage formats (csv, xls, ...). It integrates nicely with the admin and packages like django-s3-storage etc.",1535797845.0
godhatesmetoo,"[django-imagekit](https://django-imagekit.readthedocs.io/en/latest/)

Image processing for Django. Comes with a lot of image processors and admin integration. By default it generates resized images once on demand which can feel a bit slow, but you can combine it with celery to asynchronously generate the images in the background. Also works great with django-s3-storage.",1535808160.0
lamintak,"[django-environ](https://django-environ.readthedocs.io/en/latest/)

Allows you to utilize 12factor inspired environment variables.",1535824379.0
ic_97,"django_extensions

I use it in all my projects.",1535797099.0
lamintak,"[django-mptt](https://github.com/django-mptt/django-mptt)

Useful for creating categories with subcategories (and sub-subcategories, etc.)",1535824694.0
godhatesmetoo,"[django-autocomplete-light](https://github.com/yourlabs/django-autocomplete-light)

By default Django supports Select2 autocomplete but only when the underlying column is a foreign key. DAL is a very handy package when you need advanced autocompletion features in your forms (things like autocomplete from list, autocomplete with search, create new values etc.).",1535813569.0
mikefromru,"django-webpack-loader

I'm using it with vue.js",1535821739.0
leehinde,"[https://github.com/groveco/django-sql-explorer](https://github.com/groveco/django-sql-explorer)

Easiest way to provide ad-hoc reporting.

[https://github.com/ivelum/djangoql/](https://github.com/ivelum/djangoql/)

Easiest way to provide ad-hoc queries.

&#x200B;

&#x200B;",1535836829.0
lamintak,"[django-username-email](https://github.com/tmm/django-username-email)

The same as the `User` model that comes with Django, but without the `username` field (users authenticate with their email address instead).

Full disclosure: I am a maintainer of this",1535825174.0
chiproller,Django-cookiecutter ,1535830323.0
kenann7,"Wow, I think this is the most helpful post I've seen so far on this community.   
I can recommend [django-froala-editor](https://github.com/froala/django-froala-editor). It is WYSIWYG html editor. You can use it for blog posts or something else.",1535831968.0
mbrochh,django-graphene - allows you to host a GraphQL API.,1535804782.0
YellowSharkMT,"[django-crispy-forms](https://django-crispy-forms.readthedocs.io/en/latest/) - love this package, so damn flexible. Strongly recommend it! (Anyone who wants to give it a shot, feel free to hit me up with any questions!)",1535811107.0
godhatesmetoo,"[django-axes](https://github.com/jazzband/django-axes)

Blocks IP addresses from accessing a login form after too many failed login attempts. Also adds nice access logs to the admin.",1535830667.0
surpriseskin,[Django Haystack](https://django-haystack.readthedocs.io/en/master/) has been indispensable in some of the projects I've worked on. ,1535821208.0
twigboy,"Right now it's gotta be channels, saving me a lot of time setting up that stuff manually",1535835245.0
ssekuwanda,[django_eel](https://github.com/seLain/Django-Eel) helps create desktop apps out of a django powered website,1535837779.0
lamintak,"[django-kronos](https://github.com/jgorset/django-kronos)

Makes it really easy to define and schedule tasks with cron",1535824571.0
lamintak,"[django-contact-form](https://django-contact-form.readthedocs.io/)

Provides customizable contact-form functionality",1535824508.0
lamintak,"[django-adminlogentries](https://github.com/ataylor32/django-adminlogentries)

By default, `django.contrib.admin`'s index shows the logged in user's 10 most recent actions. This app provides a `ModelAdmin` for `django.contrib.admin`'s `LogEntry` model (with everything except the list disabled), allowing you to see every action taken by every user. The list can be filtered, searched, and sorted, as you would expect of a `ModelAdmin`.

Full disclosure: I created this",1535825093.0
kautkaut,django bulk-update and django excel-response. It saves a ton of work for financial application. ,1535860774.0
theredknight,"[django-sekizai](https://django-sekizai.readthedocs.io/en/latest/)    
It's basically lego blocks for html templates / javascript and css. Makes it very easy to break your html templates into code blocks that mirror your models. Also a smaller block can inject code into anywhere in a template it gets added to, such as your head <script> or <style> as well as jquery onready for instance.",1535809929.0
IReallySuckAtChess,"Django-pipeline (super useful) 
Django-silk (not as amazing as the debug toolbar but it does great profiling) 
Django-rest-framework (probably the most important Django app out there) 
Wagtail (Django based CMS that is absolutely fantastic) 
Django-crispy-forms (The best way to do gorgeous OG forms on pages) 

If I had to choose my one absolute favourite package it would be Wagtail (though DRF is like right there.) ",1535868854.0
godhatesmetoo,"[django-distill](https://github.com/mgrp/django-distill)

Transforms Django into a static website generator.",1536009171.0
kenann7,"[django-mobile](https://github.com/gregmuellegger/django-mobile)  


Detects mobile browsers",1536052602.0
justanotherwebdev999,"[Dynamic-Rest](https://github.com/AltSchool/dynamic-rest)

Faster and more features that django rest framework. Side loading reduces size of response. ",1536173086.0
rizogg,Sorl-thumbnail,1535853656.0
Mikael8,"django-rest-api

&#x200B;

It's real power for cretign servers",1535799598.0
godhatesmetoo,"[django-parsley](https://github.com/agiliq/Django-parsley)

Gives you client-side Javascript form validation. Supports to be plugged into the admin. Sadly the parsley version is a bit outdated.",1535813839.0
booooomba,"Wow you REALLY need to work through the official Django tutorial. All your questions are answered there!

Go do it right now !!",1535751561.0
eqVnox,"This tutorial is not about Django and MySQL it's about python and MySQL. That's why you don't see the Django ORM here. The argument for using the ORM is that if you later decide to use some other DB then you can still use the same code. Django ORM is really very easy to use and learn.

Connecting Django to MySQL -
https://www.digitalocean.com/community/tutorials/how-to-use-mysql-or-mariadb-with-your-django-application-on-ubuntu-14-04
",1535770345.0
genesem,"Im using mysql in prod.:

1. create DB with: CREATE DATABASE `xxxx` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;
2. run makemigrations and migrate.
Its 100% ORM in allmost all cases.

in settings.py dont forget to use:

    DATABASES = ....
            'ENGINE': 'django.db.backends.mysql',
    .....
            'OPTIONS': {'init_command': ""SET sql_mode='STRICT_TRANS_TABLES'""}
    ....







",1535753549.0
Niicodemus,"You're free to use whatever system you want to store data. Django is a ""batteries included but optional"" framework. So the ORM is completely optional. That said, many, many parts of Django (i.e. ModelForms, Admin, Generic Views, etc, etc) will require a QuerySet. You can possibly get the best of both worlds by [creating RawQuerySets](https://docs.djangoproject.com/en/2.1/topics/db/sql/). That said, the Django ORM makes many simple queries very easy and quick, so I only use raw SQL when I need to.",1535756822.0
dmckim,"I use editor on an website I built. I remember I actually had to handle the put in the view to get it to work. I don't remember exactly the reason why but I remember that you have to make sure the response from django is exactly the same as the post information.

&#x200B;

[gist of code example](https://gist.github.com/dmckim1977/875164a6bdd9da4f71c9bcab4bf3c196)

&#x200B;

After I did this I used developer tools to make sure that I was sending the information back to datatables in the exact same format as datatables posted it in.

​",1535764420.0
compscigurl,"Have you tried Handsontable: 

 [https://handsontable.com/](https://handsontable.com/)

&#x200B;

not sure if this is off topic (be kind with the downvotes..), but I was using datatables for a long time - once I switched to datatables I never went back! ",1535780912.0
jeffbaier,"We used to use Swagger with DRF and it was pretty good. But now we use the new coreapi based built in documentation. 

http://www.django-rest-framework.org/topics/documenting-your-api/",1535740516.0
alexandremjacques,"I've heard good things about https://c4model.com/

Swagger is also a great way to do that. But it's actually focused on your endpoint. C4 appears (never used myself) to be a more broad approach.",1535747831.0
ramse,I thought MVP's purpose was to obtain the capital needed to build the full-on product? Surely the whole thing can't be so terrible that it can't be reworked properly.,1535736667.0
ge0n1,unsubscribe,1535759804.0
genesem,"Django 2.1.1 release notes:
https://docs.djangoproject.com/en/2.1/releases/2.1.1/",1535711014.0
godhatesmetoo,Thank you!,1535740138.0
diek00,"From one of the most authoritative books on Django, Two Scoops of Django regarding the Admin, ""It’s Not for End Users""

""The Django admin interface is designed for site administrators, not end users. It’s a place for your site administrators to add/edit/delete data and perform site management tasks. Although it’s possible to stretch it into something that your end users could use, you really shouldn’t. """,1535689937.0
Niicodemus,"I haven't done it myself, but I think it's perfectly fine to build off of the Django Admin. You can do (custom actions)[https://docs.djangoproject.com/en/2.1/ref/contrib/admin/actions/] and even pretty easily create [buttons that do actions](https://github.com/crccheck/django-object-actions) as well as [your own views](https://docs.djangoproject.com/en/2.1/ref/contrib/admin/#django.contrib.admin.ModelAdmin.get_urls). You can also completely [customize the templates](https://docs.djangoproject.com/en/2.1/ref/contrib/admin/#overriding-admin-templates). The SO post that jabbrwocky links to cautions against doing this for security reasons, but I disagree with that argument. For one, Django is constantly being tested and hardened against security threats, and that includes the Admin. Also, I've seen so many poorly implemented websites in django that have worse security than the admin by far. So I think it's perfectly fine to use it. The downside is that it's going to be a VERY steep learning curve. I've been using Django for 10+ years and I easily get lost in the admin's code and/or templates all the time. The module is *dense* with development from dozens of contributors over many years, and it's built to be flexible at the expense of being complicated.",1535677547.0
nkuttler,"> basically a CRM 

Is this an in-house product, or will you try to sell it? If the former, the admin might be ok. If the latter, definitely build your own interface. Customizing the admin heavily is a pain, and building your own views and forms is easy if you plan accordingly.",1535683862.0
VorpalBandersnatch,"I’m glad somebody else is asking this question. I’m in the same boat. Comfortable with python, new to django, and total noob to web development. I’ve been trying to do the same thing you’re asking about here. I found a package that seems like it should do everything and looks a bit nicer imo than the ootb admin interface, it’s called django-cruds-adminlte but the documentation suuuuuuuucks. I’ve struggled implementing it mostly because I’m new to Django and templates and such. ",1535685059.0
jabbrwocky,"Yes, but not recommended. See [this stackoverflow post](https://stackoverflow.com/questions/34331152/django-admin-on-the-frontend) for reasons against, along with links to alternative Django style solutions (note it links to an older version of Django docs than current).

For your own needs, custom actions are possible: you can add actions above the ""Delete"" action in the dropdown, add buttons to the header, or add a new column with a field value that has the html for a button. You can also provide your own css for rendering the page in your own style.",1535674873.0
kkert,"> allow custom actions to take place (add a button to run a custom function)

It does allow that. Pretty much all of the admin interface is fully customize-able, it just gets exponentially harder and more brittle the further you try to take it. And most of the far out tricks aren't really documented but can be figured out through the code.",1535683679.0
iBlag,"Hey OP, these two projects on GitHub probably will interest you:

 * https://github.com/crccheck/django-object-actions
* https://github.com/DjangoAdminHackers/django-admin-row-actions

They both add actions to the admin interface. I have used both.

Disclaimer: I’m _a_ maintainer (but not the original author or the major maintainer) of django-admin-row-actions.",1535699454.0
colly_wolly,"Have you looked up django actions? Its not a button to do what you want it to do but a dropdown list (it has a default delete action in it). 

https://docs.djangoproject.com/en/2.1/ref/contrib/admin/actions/

You could hack around with tempates to be a bit more front end friendly, but there is a certain point where you need to realise that the admin is not designed for front end users, and writing custom views is the way to go. Unfortunately it is a fair bit more work. ",1535703284.0
ramse,"> allow custom actions to take place (add a button to run a custom function)

Just wanted to note that you can [create custom actions](https://docs.djangoproject.com/en/dev/ref/contrib/admin/actions/#ref-contrib-admin-actions) but they don't appear as a button though, they appear in the dropdown where you normally see ""Delete Selected ___"".",1535676166.0
godhatesmetoo,"I recently build a big app based on Django's admin interface. I knew it wasn't right, but it saved me a lot of time and it was for internal use only. Using the admin caused some trouble but it allowed me to build the app quickly.",1535706696.0
IllegalThings,"I've done it, it technically worked, but it was much more effort than it was worth. The 90% of what we needed was quick, the remaining 10% took much more effort than I'm willing to admit. Honestly, writing a user friendly CRUD app that supports searching, sorting, and auth is such an easy thing to do that you really should just bite the bullet and do the work. You can thank me later.",1535746577.0
AnActualWizardIRL,"You'd be quite surprised what that admin interface can do with a bit of coaxing. I worked a government job once that used pretty extensive django, and two of the big projects we had was a system for managing burn-offs for fire prevention in national parks. This was a massive system involving forms with 30-40 pages in length , complex workflows involving routing approvals between various departments, notifying stakeholders, integrating GIS data, sending batch jobs off for physics modelling (its not nice to burn down neighboring towns), dealing with various regulatory agencies etc, and it was all done by mangling the admin interface. 

The other, was a lovely little app for volenteers to monitor video feeds from a penguin habitat and create reports of activity for the biologists to mangle into scientific reports and wildlife management plans and stuff. Again, all django admin. 

Essentially the key with it is to learn how the context data is processed through the views and getting at them to extra data, etc for the templates. Then you just wrangle the templates into shape to add the functionalities that you need. I've had success mashing it up with the CSS from AdminLTE for instant flashiness.

A great starting is django-admin-bootstrap, but don't bring it in as a pip requirement, actually download it into your project as an app so you can open it up and do surgery on it. ",1535967312.0
fabiocaccamo,"If the default django admin does what you need, you should try [django-admin-interface](https://github.com/fabiocaccamo/django-admin-interface) to improve it.

The main features are **logo/colors customization** and the old **popup windows replaced by modals**.",1536140549.0
hilmar8,"The DRF documentation should provide enough information http://www.django-rest-framework.org/api-guide/serializers/#specifying-which-fields-to-include. 

The fields option specifies what fields to output and what fields to take as input for creating and updating the model instance. Prevents you from outputting the password of the user and prevents users being able to update their is_superuser status for example.

Validation on the fields is based on attributes on the model fields, max_length, null, blank, unique etc. Use extra_kwargs to add or remove validation http://www.django-rest-framework.org/api-guide/serializers/#additional-keyword-arguments.

I think it's great that they added 'fields' or 'exclude' as a requirement.",1535884045.0
kraymer,"Kudos for the README.md, the best summary I've ever read about pitfalls to avoid when writing Django migrations.",1535659821.0
evangrim,Wow - you actually did what I've dreamed of tackling.  Thank you!,1535665337.0
yoongkang,"Sweet, thanks. This is really helpful.",1535675429.0
dorsal_morsel,"> In the last attempt gave an ""importerror"" I do not know why

Figuring out why errors occur is fundamental. You will need to be able to figure that out no matter what language or framework you use. You might start here: http://cs.franklin.edu/~ansaria/traceback.html

I also get the impression that you are approaching this as if there are a series of steps to take that you must memorize and retrace. What you want to do is learn how to apply the features you read about in a tutorial to a real-life project.

Also there is r/learndjango ",1535654014.0
bulldog_in_the_dream,Mozilla's Django tutorial is also good: https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website,1535658419.0
bulldog_in_the_dream,"Check out https://djangoforbeginners.com/introduction/

It's should be pretty accessible and gives step by step instructions.",1535653103.0
defmacro-jam,Have you worked through the official Django tutorial?,1535656296.0
jafrancov,"I HIGHLY recommend Coding for entrepreneurs 
https://www.codingforentrepreneurs.com/

Or his YouTube channel
https://www.youtube.com/user/CodingEntrepreneurs

Doesn't matter if you are a beginner, will take you step by step from scratch, look for the ""Try Django"" series. 

Good luck!",1535660749.0
matiasmir17,You can search for sentdex tutorials on youtube and he also has a website pythonprogramming.net,1535719150.0
IReallySuckAtChess,Django Official Tutorial and the one on MDN are amazing places to start... ,1536151525.0
protone,"If you want to learn from the basics, I would recommend [djangobook](https://djangobook.com/the-django-book/) 

They might say django version is outdated, but don't listen to them. create a virtual env, pip install the version along with book. read the book and code along. once you complete the book, you will be feeling home with Django. Then move to another books or tutorials. Happy Learning!!!",1536181171.0
IReallySuckAtChess,"If you just want to document stuff why don't you just use mediawiki? It's the basis of Wikipedia, will be supported forever and a day and is the perfect way to document stuff. No need to reinvent the wheel...

Or am I misunderstanding you? ",1535961239.0
oliw,"I've almost certainly done what you're suggesting before... But I think we have better tooling for this these days.

If I were you, I'd look at how Django does it in the admin, via `ModelAdmin.autocomplete_fields` option.

 - It creates a [simple JSON API](https://github.com/django/django/blob/master/django/contrib/admin/views/autocomplete.py). DRF isn't required.
 - It uses the `ModelAdmin.search_fields` setting for that model to decide what you search on.
 - Select2 plugs into this API.

A lot of what Django does is more complicated than you need. You can fix which fields you search on, you can be a lot more fixed in the data you return. You need the pagination and search though.

Additionally *I* would probably look at [Postgres search optimisations (inc trigram)](https://docs.djangoproject.com/en/2.1/ref/contrib/postgres/search/) so you can also match typos, missing accents, etc. You can do that in a non-API approach too.",1535637092.0
spapas82,"I recommend using: https://github.com/yourlabs/django-autocomplete-light

It works great with both one to many and many to many relations.",1535650856.0
emilepetrone,I found this package which solved my problems https://django-select2.readthedocs.io/en/latest/get_started.html#module-django_select2,1535658975.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1535634942.0
shebazz42,"first() returns None if there are no results, so check your config, database, and ORM calls.",1535630376.0
pancakeses,"This is probably naive, but the first thing I'd look at is the float values. Number conversions always seem to be where my frustration lies.

If you remove the filters for depth_top and depth_base, do you get a valid Description object? If so, if you then adjust the filters to use a range for each depth value, something like the following, do you get a valid result?

    p = Description.objects.filter(hole__project__project_code=proj_id) \
            .filter(hole__hole_number=hole_id) \
            .filter(depth_top__gte=float(depth_top) - 1, depth_top__lte=float(depth_top) + 1) \
            .filter(depth_base__gte=float(depth_base) - 1, depth_base__lte=float(depth_base) + 1) \
            .first()  # working up from bottom to top

---

Also, you're filtering for first(), but not ordering within the query. Might be worthwhile to ass a "".order_by('field')"" just to be sure you're ending up with the expected object instance as your project grows more complex.",1535634426.0
daredevil82,"Nice little project, little thin on the docs and actual use cases.  Looking over the code, I have two questions:

* How do you handle fields that are not serializable by Django's JSON encoder?  IIRC that class enables serializing of datetime, timestamps and Decimals/UUIDs, but there are other fields such as PG's RangeField, HStoreField, etc.  Are these usable for caching by default?
* [django-cachealot](https://django-cachalot.readthedocs.io/en/latest/introduction.html#should-you-use-it) has this in their introduction: **... is unfortunately technically impossible to make a reliable per-object cache. Don’t be fooled by packages pretending having that per-object feature, they are unreliable and dangerous for your data.**  How would you answer that?

For a repo that's just six hours old (as of this writing), its about what you would expect: heavy on the code, light on the docs.  I would also add in some similarities and differences to your project vs other caching implementations.  For example, why cache on the object-level rather than table-level?",1535625879.0
mbrochh,how is it better than django-cachalot?,1535619799.0
kraymer,"Lack some documentation: why should I use this, what pb does it solve ?",1535615719.0
Ramast,"also another caching mechanism for django models

https://github.com/ramast/django_model_helpers

    class Team(models.Model):
        @cached_model_property(cache_timeout=10, readonly=False)
        def points(self):
            # Do complex DB queries
            return result

",1535625040.0
qwerty_danny,"Cool! One thing though,

> This code has been developed and used in a production environment for one year.

I'm a bit concerned with the advertising...
Some bootcamp kid is going to end up shooting themselves in the foot using this. There's a reason why [Memcached](https://docs.djangoproject.com/en/2.1/topics/cache/#memcached) exists.",1535638899.0
daredevil82,I found that out the hard way a little while ago.  Its something that's not super obvious and is easy to skip over that section.  Good job finding your own answer to the problem.,1535626111.0
synrb,"Invalidating a cache would simply result in the cache no longer storing that value. The next time a request for that value came in, the app would have to retrieve the value from database and then cache the value. 

Because of the frequency of this value changing so often, they are acting on both stores simultaneously. They store the vote in the db for persistence and simply +/- the value in cache for  performance. ",1535601367.0
msbrogli,"This lib can be useful. Take a look.

[https://github.com/patriciaborges/django-model-cache](https://github.com/patriciaborges/django-model-cache)",1535607350.0
,[deleted],1535609461.0
kenann7,Could you share that video link made you understand about cache on youtube?,1535887743.0
Ramast,"As soon as you vote, database is updated to reflect that vote.
Its done by adding row like this

    {user_id: 635, post_id: 765, vote: -1}

That would indicate user with that id has voted on post with that id and gave it down vote.

To calculate total votes on this post u search for all entries that match this post_id and accumulate the votes and ""cache"" the result so that u don't need to do this expensive calculation so often.

Hope that make sense ",1535595183.0
godhatesmetoo,Nice. Do you intend to open-source it?,1535634173.0
orangite1,This looks great! I do comparison shopping all the time and would definitely use this.,1535682440.0
AnderperCooson,It should go in the ModelAdmin class of your model: https://docs.djangoproject.com/en/2.1/ref/contrib/admin/#django.contrib.admin.ModelAdmin.save_model,1535541752.0
massover,"You have to figure out:

- where can I save information about a user that can tell me whether or not the user is premium?
- when do I make a call to update the information about whether or not the user is premium?


This can get you started:

You could add a column called ‘is_premium’ to the user model. You’ll have update your User model with a Boolean field, make a migration and migrate

When your strip payment succeeds, you set ‘is_premium’ to True

Inside your code, you’ll then be able to do:

    if request.user.is_premium:
        # do something",1535633796.0
i_like_trains_a_lot1,"That is awesome! I found myself implementing this kind of functionality quite often. But the I find two use cases that don't seem to be covered: 

- having multiple forms of the same type (eg. updating two unrelated records at the same)
- giving extra kwargs to the forms. (each form might get other kwargs).",1535525810.0
pred4tor07,Cool stuff! My approach to handling this problem in the past was using Ajax (or Intercooler.js) to submit the forms to separate endpoints for each. ,1535560981.0
Nick4753,"This is cool! I've used the same snippet of code I found on some forum years ago every time I need to do this but it isn't nearly as clean as this.

Support for multi-form class based views really should be in django core.",1535561240.0
Nimor111,The use case of User/Profile models is really well complimented in this library. It's kind of annoying to have to cut the data coming from a form in half in the service to write it separately in two different models. Great job! ,1535576501.0
zemmekkis,"There is a cost to having database indexes. The cost is that it takes CPU cycles to compute the index and a bit of I/O to update it when you do writes to the database.

It also takes up space. And this can be a big deal when you are trying to fit your entire table/database in memory. Also indexes can take up more space than just the column.

If you never search by age or height then there is no point in having an index on it. You just waste CPU when you insert a row.",1535512964.0
never_safe_for_life,"https://thedailywtf.com/articles/say-y-to-indexes

It’s rare that adding indexes will cause problems, but this story from our friends at The Daily WTF is classic",1535511171.0
EarFullOfWax,One reason against indexing everything is that it takes a toll when writing to the db. So if you have millions of rows and you are inserting data the indexes have to be recalculated (I believe) and this will slow down the process.,1535510465.0
IReallySuckAtChess,"There are often many fields that a person will never search on. Why index them? It's a waste of CPU, memory, and IO. If you intend to perform look ups on age or height with any real frequency it is totally worth it. If not. Don't. You'll be surprised how often the answer is don't. The vast majority of lookups are done only on a single field. 

Lastly, add a row to a table with 10k rows and three columns. After the insertion, three new indexes need to be built, one for each column containing 10 000 entries. Make it ten columns? Twenty? It quickly wrecks performance. 

I'd like to add that if you have a database that is read a lot but only infrequently written to then indexes rarely hurt all that much since the speed up of them existing far exceeds their cost in creating. Still, only create indexes where it makes sense to. 

I will say that in most cases a hash is more logical since search is O(n) thus scaling really well linearly for a long time. It's not perfect, and in many cases an index outperforms it, but a database'performance needs to be holistic. It doesn't help it reads at the speed of light when a single write brings everything to a crawl for five minutes. ",1535535091.0
bondoli,"It depends on the type of data, too.  If you have a table that contains, lets say cached data, then you're going to be deleting and adding every xx amount of minutes/hours/days.  At that time the index would grow out of control.  ",1535514987.0
blacwidonsfw,"Can a client have multiple services ?  If not, then a client model with a foreign key field that points to service model .  

If a client can have multiple services then you will prob want a many to many.

https://docs.djangoproject.com/en/2.1/topics/db/examples/many_to_many/",1535511141.0
,[deleted],1535481147.0
GitW_85,"""Your app is extremely huge, and you cannot keep everything in a single codebase."" Really? That's nonsense",1535497069.0
sstevko,"Why wouldn’t you use Django with microservices? Architecture like microservices runs over the top of framework, isnt it?",1535497850.0
george-silva,"Django is a monolith.

Almost all parts of Django are configurable. Middleware, template engines, authentication, authorization, ORM, email sending, caches, test runners....

Did i miss anything?",1535501167.0
pancakeses,[Model mommy](https://model-mommy.readthedocs.io/en/latest/) or [factory boy](https://factoryboy.readthedocs.io/en/latest/orms.html) are usually highly recommended for fixtures for testing in django.,1535488449.0
thehardsphere,"What do you mean ""mock the database""? What are you trying to achieve here?

Why don't you have an actual database on your machine and run your tests against that?",1535486235.0
docclox,"A Django model is a data model, which is pretty much the same thing as an SQL table except the underlying storage doesn't have to be SQL based and the model class has its own set of methods for manipulating the stored data.",1535471530.0
mhurron,https://stackoverflow.com/questions/1279613/what-is-an-orm-and-where-can-i-learn-more-about-it,1535471719.0
jonatron_,The Django Girls tutorial explains it for beginners: https://tutorial.djangogirls.org/en/django_models/,1535474409.0
booooomba,Do you know what a Python class is?,1535471495.0
iconfinder,You should spend more time reading the documentation or run through a bunch of tutorials.,1535471692.0
athermop,It sounds like you don't understand OOP which is not a Django-specific problem or question.,1535473133.0
Owanesh,"I use this structure and from `myproject/urls.py` i import every `app/api/urls.py`.
I use main urls.py to manage better what API i need.
Maybe isn't cleanest solution, but in my opinion, is more mantenible. Otherwise you can recreate every app-folders under `api/` to obtain `myproject/api/my_app/`.
In my way i can export an app to another project and i'll have API built-in. 
```
 myproject/  
    manage.py
    myproject/
        __init__.py
        urls.py
        wsgi.py
        settings.py
    my_app/
        __init__.py
        models.py
        forms.py
        urls.py
        api/
            __init__.py
            urls.py
            serializers.py
            views.py
        views/
            __init__.py
            views.py
````
Maybe there isn't a cleanest solution for all possible project. I use this for small and repetitive projects/apps. If i use in 4 projects the same app, and for all projects i need api of that app, i can copy/paste all folder or import it like a library to have `my_app.api`",1535473433.0
IReallySuckAtChess,Honestly I like to keep the api for the relevant app in said app. It just makes breaking apps up so much nicer and more convenient. It's probably breaking some convention but that's how I like it. In this way I can source control each app and have everything nicely together. ,1535616986.0
thehardsphere,"Disclaimer: I know nothing about this package at all other than what I've read in the five minutes I spent reading the links you provided.

Exist-db appears to be a document oriented NoSQL XML database system. Django out of the box is not configured to use anything like this. The Django ORM is made for SQL databases, and typically only supports the common ones. You will not be able to set Django up to use it in the same way that you would Postgres or MySQL. And I don't think you actually want to, either; there's a lot of stuff Django apps could possibly want to persist that you wouldn't want to store in existdb.

Step back for a minute and let's make sure you've got the big picture here right: What is your application actually supposed to do?",1535487070.0
AnderperCooson,"RE `cannot import name 'splittype' from urllib'`: are you using Python 3? Since 3.4, `splittype` has been in `urllib.parse`: https://github.com/python/cpython/blob/3.4/Lib/urllib/parse.py#L851 but in 2.7 it was still in `urllib`: https://github.com/python/cpython/blob/2.7/Lib/urllib.py#L1078 Do you know if eulexistdb is compatible with Python 3?",1535655216.0
TunaBoo,"From personal experience I would not use an exotic DB. Use postgres if possible, mysql if you must. So many problems if you skip.",1535457896.0
rackmountrambo,"https://eulexistdb.readthedocs.io/en/latest/changelog.html#id1

If you follow the current documentation, it doesn't work like a normal dB integration.",1535456624.0
Faiiya,"I looked into django alluth but it didng had what i needed so i made the oauth myself, why dont you make the oauth yourself if you have problems?",1535469831.0
elbiot,"Great article

http://www.evanmiller.org/how-not-to-sort-by-average-rating.html",1535415679.0
ShreddyJim,What part of implementing django-vote is giving you trouble? Have you added voteModel to the model you want users to vote on? ,1535410723.0
vrthoughts,Hey checkout an old project I did - https://github.com/ollysmall/wikitowns - give me a shout if ur struggling to find the parts of code that handle the voting. Also there is a link to the website so you can go take a look at what it looks like / how it works,1535437114.0
keubs,"If you want nesting it'll be tricky, but I somewhat easily implemented this functionality on my site [Respond React](http://respondreact.com). I used the [Updown](https://github.com/weluse/django-updown) module. It works well",1535434205.0
makavelixx,"if I recall right the sorting algorithm was

&#x200B;

x = # amount of votes # / # amount of passed time since creation #

&#x200B;

where x is the sorting criteria

&#x200B;

correct me if I'm wrong",1535718637.0
godhatesmetoo,"Have a look [here](https://djangopackages.org/grids/g/voting/).

Nevertheless I have to say the Reddit voting isn't a good one. Downvotes can ruin diversity of opinion.",1535442490.0
theWyzzerd,"Use a post_save receiver on client to set default values and create your client model, then present a view to the user to update the client model.  Something like 

    class Client(models.Model):
        ...
        objects = ClientManager()

	    @receiver(post_save, sender=User)
	    def create_client(sender, instance, **kwargs):
		
		 Client.objects.update_or_create(
	             client_name=instance,
	             defaults={ [dict of default fields/values goes here]
                }
				

The rest is left as an exercise to the reader.	
		    ",1535400053.0
zettabyte,"Sounds like you want to read this:

https://docs.djangoproject.com/en/2.1/topics/auth/customizing/#extending-the-existing-user-model

Your use case is the first example in that section.  You'll want to make use of the `post_save()` signal referenced in the documentation.  That will make sure you always have a `user.client` instance to work with.  With all that in place, your code could change to:

    user = form.save()
    client = user.client
    client_form = ClientCreateForm(request.POST, instance=client)
    client = client_form.save()

or something along those lines.  But rest assured, you're on well-trodden ground.


**HOWEVER**, per the docs, if this is a new project go ahead and create a custom User model, even if it's the same as `auth.User`.  It will afford you greater flexibility in the long run, with very little immediate overhead.

Good Luck!",1535402092.0
nannooo,"[https://www.reddit.com/r/django/comments/8tjq29/is\_django\_a\_safe\_future\_forward\_framework\_to\_learn/](https://www.reddit.com/r/django/comments/8tjq29/is_django_a_safe_future_forward_framework_to_learn/)

[https://www.reddit.com/r/django/comments/7s7509/future\_of\_django/](https://www.reddit.com/r/django/comments/7s7509/future_of_django/)

[https://www.reddit.com/r/django/comments/32x2i7/where\_do\_we\_talk\_about\_the\_future\_of\_django/](https://www.reddit.com/r/django/comments/32x2i7/where_do_we_talk_about_the_future_of_django/)

&#x200B;",1535393707.0
TehMoonRulz,"Learning Python and Django will NOT be a detriment to your learning. Once you work with a few server side frameworks you will understand how they accomplish similar tasks. Being able to google ""how to do X in Y"" is trivial once you understand what heavy lifting a framework does.",1535394087.0
snarkyturtle,"For one, its API is solid and hasn't changed in like 10 years, it's _stable_, has the backing of a great foundation, open-source and active despite its relatively stable API.

Also companies like Instagram uses Django.  I don't think a Top 10 site would let their framework die.",1535396161.0
DabsJeeves,"https://www.shuup.com/django/25-of-the-most-popular-python-and-django-websites/

Django is awesome. Leagues ahead of PHP. 
Pretty similar to Rails, yet it has the benefit of being built on Python.",1535393800.0
bulldog_in_the_dream,"Ruby on Rails' adoption seems to be slowing, but Django seem to be stable or growing. Node might be growing more, but there are no comparable framworks in the Node world when it comes to stability and maturity. Node tends to be much more focused on smaller libraries, rather than frameworks. PHP... I don't know, never used a PHP framework.

Personally I think RoR is slightly more convenient and faster to get started, but i prefer Django because it's Python, because of the design (modular apps), the ORM, the admin app and the built-in authentication.

Framwork SO trends: https://insights.stackoverflow.com/trends?tags=django%2Cruby-on-rails%2Cexpress%2Claravel

Language trends: https://insights.stackoverflow.com/trends?tags=python%2Cnode.js%2Cruby",1535396954.0
athermop,In addition to the other good answers...you shouldn't limit yourself to just one framework anyway.  Learn as many as you can.  Even better learn frameworks that do things as differently from each other as you can.  It will make you better.,1535396056.0
godhatesmetoo,"I think it is. GraphQL is probably what comes next after REST APIs. Django has an excellent implementation of GraphQL: [graphene-django](https://github.com/graphql-python/graphene-django)

",1535401603.0
thebatlab,"""one should follow what they love to do""

How do you know if you love to do it if you haven't done it yet?

I fell into Django after someone else's decision, and have loved it and used it for dozens of projects since. I'm now about to inherit a Flask project after someone else's decision, and we'll see if I love it or not.",1535408308.0
IReallySuckAtChess,Yeah. I rate its got a very solid future. I think it's future mostly lies in doing API stuff as people want just too much dynamism in the frontend for the template language alone. So much of the stuff I output is Django on the backend and Vue or React on the frontend. They're actually a match made in heaven. You can even go hybrid with Vue and Django's template language which works great too. ,1535462580.0
TheoR700,"Is your DEBUG variable in your project [settings.py](https://settings.py) set to true? Are you running the same command on your remote server to start everything? [manage.py](https://manage.py) runserver is not meant to be a production webserver for Django. On your remote server, do you have some webserver like nginx or apache serving your static files?",1535395678.0
theWyzzerd,"> http://127.0.0.1:8000/static/saferdb/aquamarine.css 

Is that where your static files are?  Does your include point to that?",1535392077.0
zookz42,Do you have a different settings.py loaded in the wsgi file? .. ,1535396940.0
pancakeses,"This sort of question should be posted at /r/djangolearning

Also, it sounds like you're struggling with very basic concepts/terminology. In it's current form your question is vague and can't be effectively answered. Have you worked through the [django tutorial](https://docs.djangoproject.com/en/2.1/intro/tutorial01/)? That's an important first step, and would probably answer your question.

Finally, in order to help you, its important that you post relevant portions of code. What does your model actually look like?",1535381991.0
theWyzzerd,"This question basically amounts to ""how do I program my application?""

Can you provide any more context on what you've tried or what your app is supposed to do?   What your actual problem is?",1535382890.0
i_like_trains_a_lot1,"A cronjob or show them in another page without saving them and computing the results you need on the fly (if it's not expensive to do so). Or use a post_save signal to recompute the results every time you make a change to the first model.

Edit: why did everyone reacted like that that scared off the OP so bad that he deleted his account? I thought this was a more friendly community.",1535380898.0
RealisticPurple,"You can use some Task Queue like [Celery](http://www.celeryproject.org/) to do it on a background or Django's [StreamingHttpResponse](https://docs.djangoproject.com/en/2.1/ref/request-response/#django.http.StreamingHttpResponse) to be sending progress info.

First option is preferred one.",1535529224.0
ramse,"Basic forms are meant for the creation/update of data. According to the logic you've posted here, your view will attempt to create a user.

As /u/TheoR700 said, I would highly recommend reading up on the built-in authentication forms/methods.",1535337379.0
TheoR700,"Why are you writing your own login form for the default Django User? There is a built-in AuthenticationForm that does this for you.

https://docs.djangoproject.com/en/2.1/topics/auth/default/#module-django.contrib.auth.forms

Also your Login form isn't ModelForm. You shouldn't have it inherit from ModelForm. If anything it should inherit from the AuthenticationForm.",1535336115.0
IReallySuckAtChess,Wagtail master on Github is assumed to be stable. Whilst not an official release it should be fine to use. It supports Django 2.1. ,1535444681.0
vith_23,"Did you check their github?

> Wagtail supports:
> Django 1.11.x, 2.0.x and 2.1.x

https://github.com/wagtail/wagtail

EDIT: Apparently version supporting 2.1.x wasn't released yet on PyPI. So for now, you need to use master branch.
```
pip install git+https://github.com/wagtail/wagtail.git@7938e81ab48327a084ac1dced9474c998fd44c2d
```",1535313392.0
oliw,"It doesn't work in Wagtail 2.2.1, which is the current release at the time of writing.

Their urls.py files point to the old fbv authentication views. These were removed in 2.1.

Super easy to fix (just point them at the CBVs), ~~and I'm sure there's a PR for it, if it isn't in dev, but I haven't dug too far into that. Look at their repo. If there isn't a logged ticket, make one.~~ and it looks like they've done this in the master version. It'll be in the next release.

Also, make a local test environment. If you have to resort to asking strangers in forums if an upgrade's going to work, you're doing it wrong.",1535313465.0
Nicksil,"This is core Django stuff.

Read the model documentation around `ordering` and/or the queryset documentation around `order_by`.",1535310165.0
igncampa,[Here's](https://docs.wagtail.io/en/v2.2.1/topics/pages.html#page-queryset-ordering) a little bit of documentation that's worth taking into consideration.,1535323110.0
IReallySuckAtChess,"    Page.objects.live().order_by('-date')[:5]

That's the just of it. Also, make sure you look at django.contrib.pagination as you'll surely need it if displaying any large number of entries. ",1535356053.0
unkz,Seems like a lot of work and over complication to avoid using a registry.,1535313629.0
timlwhite,"We use PEX on one of my projects, and it adds a LOT of complexity and incompatibilities with pathing. I would not use it again if I could avoid it. :)",1535332333.0
uniqueaccount,"I would go with the docker image (it's how I do it with a handful of django apps that I deploy into kubernetes environments).

However, it sounds like you don't want that solution.  I've heard that pyinstaller can package an entire django project into a single file, so maybe check that out?",1535315518.0
ipmb00,"Check out [shiv](https://github.com/linkedin/shiv). It's like pex, but without some of the shortcomings. You may also be interested in this talk from DjangoCon EU this year, [Can packaging improve Django deployments?](https://www.youtube.com/watch?v=Gt3Pkgsd0Tk).",1535342229.0
ccb621,"> Precisely my concern is I'm not using a Docker registry so building directly on target host a Docker image is a bit of a nonsense...

Why not use a Docker registry?

> Plus freezing anything with a Docker image while I'm already using pipenv which freezes everything (OK, almost everything) for me sounds redundant to me.

This is redundant, which is why you don't need pipenv/virtualenv in Docker images. Just run `pip install` on your production requirements. If you're referring to the pinning of individual requirements (e.g. Django), you should do that regardless of how you deploy as that is a just good practice.",1535334049.0
thehardsphere,"Knowing absolutely nothing other than what you wrote here, this sounds like a complex waste of time.

_Who_ are you deploying this for? That question should be the ones that determine how to deploy your application. If the intended back-end user of the application requires you to use these kinds of files, then you should use them. If the user doesn't know what to do or hasn't thought about this question yet, then you should pick something that you think will be easy for them if you have an idea of what their skill set is. If this is an application that is just administered by you, then you should do whatever you find easiest, since nobody else in the world should care how your application is deployed.

If this is merely a requirement of the service you are deploying to, and you have no other reason to ask this question, then you should look for a service that doesn't require you to do this extra work.",1535386400.0
DudaFromBrazil,"You should run Daphne, and it will bind to a port. And that's it. Unless you want to proxy it with nginx (let's say, /ws to internal ip 192.168.1.1, there is no nginx on it. I did this some time ago. Don't remember the specifics",1535334034.0
CKreuzberger,"Nginx will only be used as a proxy for your django application. your django application will be running with daphne.

Therefore, your config for nginx should look like this (please take a look at the proxy part at the bottom):


    server {
        listen 80;
        server_name localhost;
        access_log  /var/log/nginx/example.log;
        server_tokens off;
        
        location /static/ {
            autoindex off;
            alias /static_files/;
        }

       location / {
            try_files $uri $uri/ @python_django;
        }

        location @python_django {
            proxy_pass http://127.0.0.1:8001;
            proxy_pass_request_headers on;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
    }


And you should have daphne running on 127.0.0.1:8001 (or change the port to your likings).

Please take a look at the official documentation of django channels about this: https://channels.readthedocs.io/en/latest/deploying.html


Furthermore, your nginx will need HTTP/2 support and some more stuff for websockets to work. I'm sure you can find that out yourself by googling ;)",1535356064.0
IReallySuckAtChess,"Yeah. We don't have nearly enough of your various configurations to be able to help you.

You've also not shown us any of your error messages. Error messages often point at the problem. 

One of the biggest things is that you cannot proxy websockets without SSL. In fact, many browsers won't even allow websockets if they're not encrypted. So maybe that's your problem?

Honestly, you've given us so little to work with except a giant picture of some dude that there isn't much we can do to help. ",1535533457.0
brylie,"There are a few tutorials online that might help get you further along the path:

https://www.sourcelair.com/blog/articles/115/django-channels-chat",1535298370.0
jeffbaier,"You could use Tornado, it's a great framework. But since you're already using Django I highly suggest Channels. 

It will integrate much easier than tornado, giving you sessions, ORM, etc. Plus you don't have to run a separate server. Channels will serve your normal Django views and your websockets.",1535312042.0
daredevil82,"https://djangopackages.org/grids/g/seo/

I took a look at the django-seo project and it was last updated in 2013, which makes it very out of date

anytime you have a question ""is there an app in django that will to $THIS"", go to https://djangopackages.org/",1535300079.0
Comm4nd0,How come you're not using 2.1 out of interest?,1535293299.0
IReallySuckAtChess,"SEO isn't just a magic package anymore. Honestly just design your site well. Want a good ranking follow these principles:

1. Make your website mobile friendly
2. Make your website load fast
3. Ensure you have an h1 on each page
4. Prioritise content, Google loves content
5. Implement the Google structured data guidelines
6. Make use of alt text and meta tags but don't abuse them as that gets you punished
7. Link to other sites we're relevant and get linked to
8. Don't abuse affiliate schemes
9. Make your site mobile friendly
10. Make your site load fast

Note: 1, 2, 9 & 10 are really important. 

A lot of the tricks people used to use for easy SEO just don't work anymore. 

",1535463158.0
raouldukeisbatty,I havent looked at what it injects but that is a typical jQuery not found error. Make sure that your script above is defined below the froala JS script tag in your template.,1535288745.0
defmacro-jam,You just need to make sure jQuery is loaded first.,1535299190.0
doot,Workaround: pre-create the venv with the right version? Good question though,1535282552.0
pickausernamehesaid,"Creating a requirements.txt with django==1.11 in it and then having PyCharm create a new virtualenv should work. Never tried it but PyCharm does bug me when my dependencies aren't all installed yet on new projects when I copy and paste the requirements.

For security reasons though, I do recommend you upgrade Django when you have time. There are plenty of guides on what to change to get your code changed to match the new API.",1535300825.0
savuporo,"Recommendation, not a s solution: don't use django commandline or Pycharm to create a project. Use [cookiecutter-django](https://github.com/pydanny/cookiecutter-django) or customize a version that fits your needs. There's a [long list of ready-made ones](https://github.com/audreyr/cookiecutter#python-django)

Come to think of it, it would be really awesome if PyCharm offered support for [cookiecutters](https://github.com/audreyr/cookiecutter)

EDIT: I also took a look at how Pycharm generates the project. There's a class DjangoProjectGenerator which simply calls pip install `Django` without version parameter passed, so always the latest. Then it runs `django-admin startproject` after that, through _jb_django_project_creator.py. There doesn't appear a version customization option anywhere.",1535308721.0
marcusabu,Why not just change it after installtion? Source the venv and run ```pip install django=x.y.z```,1535307876.0
Reeveo,">Any suggestions on where start in terms of guides, books, or other resources?

There is a similar thread posted recently [here](https://www.reddit.com/r/django/comments/9abuds/give_me_recommendations_to_stand_out_as_the/) asking the same question so I would go there for a start on resources to help.

Here are some tutorials/channels/websites to help:

- [Coding for Entrepreneurs](https://www.youtube.com/user/CodingEntrepreneurs)
- [JustDjango](https://www.youtube.com/channel/UCRM1gWNTDx0SHIqUJygD-kQ)
- [Master Code Online](https://www.youtube.com/channel/UCbhm6TbMBTWn_GxrIbPFapA)
- [Django Turorial YouTube walkthrough](https://www.youtube.com/watch?v=cI3FOYIMSYE&t=1028s)
- [Django Tutorial on their website](https://www.djangoproject.com/start/)
- [Simple is Better than Complex](https://simpleisbetterthancomplex.com/) - Tips on Django but also has a tutorial
- [Mozilla Tutorial](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django) - I found this helpful

>which project would be better for a beginner?

Rather than picking a project from suggestions I have found the better approach to be a project which you are either actually interested in, or it will benefit you in some way. These ways are more likely to continue your interest when you come up against errors or problems as you will have the motivation to keep going.
There are lots of tutorials on youtube to follow or on other websites which you can go to but again I would come back to the above regarding what will motivate you...


There are lots more resources online which i haven't mentioned.",1535305445.0
IReallySuckAtChess,"Chess engines are awesome, but don't expect much if this is your first go. They're very complex and sophisticated and Python is really isn't the right language for it due to the performance needs. Then again, it's a great way to learn and a great way to demonstrate a strong understanding of algorithms, good coding practices and how to optimise under python.

Web stuff is always great if you want to get employed. Django isn't as popular as the Node, PhP or .Net stuff but it's used and there is good money in it. What's really great about Django is how well documented and easy to use it is in addition to scaling quite well. Great documentation and teaches you many best practices. Plus a lot of small and medium companies make use of it for their internal networks.

Honestly, think up a problem you have. Look for a solution. Find a solution? Think of another problem. Rinse and repeat till you find something with no solution or a poor one. Solve the problem and open source it with documentation and tests. It's great to have open source code to your name as it helps get you employed. 

If you want, find a non-profit with an absolute garbage website. Offer to work with them for free to make it more modern and functional. Setup a CMS with Wagtail and add some custom features. A newsletter, blog, nice home page gallery and some other cute stuff will be Greta for them and a great learning experience for you. I'm sure you could easily find a VPS provider that will provide a free small machine for you to host it on. Again, open source the code and demonstrate your ability. It would cost you time but help you learn and do something good. I try do one website for a non-profit every six months. Its helped me land clients (even though its not really what me or my company do) and is just great for society in general. ",1535444522.0
rednaletsaw,Just start coding.,1535272196.0
,[deleted],1535263434.0
yoongkang,"Can you post the bit of code where you create and save the Classroom instance?

It looks like the user field has a default value of 1, so without looking at the bit of code I asked for -- I suspect you're not setting the user field to `request.user` -- that means it will always be the user with id 1 (your admin)",1535263399.0
TomMacMaz,"Have a project in mind first and learn as you go. Anytime you have an idea of a detail within the project, figure out how to do it (whether it be from a book, stack overflow, or a video tutorial) . Rinse and repeat and you'll be surprised how well you will retain the information because you are actually doing rather than memorizing. ",1535259004.0
iKenshu,I think you missing [Two Scoops of Django](https://www.twoscoopspress.com/) ,1535248002.0
sammysounder,"1.  Unit tests.
2.  Unit tests.
3.  Unit tests.",1535263824.0
johannadipanda,"Come up with a project and try to execute it! Its way more fun that way 

&#x200B;",1535518942.0
DudaFromBrazil,"Play around with docker. It really helps on the dev process and to include other tools to integrate with. For example, I have a project where Django integrated with the Mautic Open. source Marketing tool. It can give you a great toolset to work with. Go for Django cookie cutter in order to start a great Django skeleton",1535334412.0
BuyHighExpire,"You may want to look at what you have for APPEND_SLASH in your settings. 

https://docs.djangoproject.com/en/dev/ref/settings/#append-slash

Which basically handles appending the slash for you if the request url doesnt match your urlconf or theres no ending slash. 

Edit. Ignore what i wrote above. Mobile made me misunderstand what you wrote. 

In your projects urls.py, you could add an entry for what you want for your homepage cant you? My suspicion being you have a urls.py that you direct /myapp to forward to/include the myapp.urls
",1535219947.0
ericls,"Django speaks WSGI, browser speaks HTTP, there needs to be a translator. Gunicorn is a better translator than Django’s built in server, it can even translate multiple at a time. Some content, for example, static files, can be served more efficiently by not going through the overhead of translation, and Nginx is very good at serving those files directly as HTTP. ",1535216267.0
goldnovamaster,"It's not about going through Django it's about accepting requests. Django's run server command is single threaded. Meaning one request comes in and it has to devote itself to that. 

With gunicorn it's sole purpose is accepting connections and running your Django code. Your code can be run in more than one thread don't forget!",1535214313.0
knivets,"Not sure if you're still confused about this, but I wrote an article about that a while back: [https://knivets.com/articles/what-is-the-point-of-using-nginx-in-front-of-a-django-application/](https://knivets.com/articles/what-is-the-point-of-using-nginx-in-front-of-a-django-application/)",1537220657.0
snarkhunter,"How to deploy applications in a production environment is a BIG huge complicated subject. In the Python world, we've generally settled on a set of patterns for deployments that includes a front-end server like Nginx or Apache that receives HTTP requests from clients, handles things like authenticating against an LDAP service, serves static content, and forwards dynamic API requests to a load-balanced swarm of Python applications via the Web Server Gateway Interface. Apache and Nginx can both do this themselves, Gunicorn and (my favorite because omguh the configurability) uWSGI are generally used only on the application side of things. The feeling I get is that it's normally OK to have a favorite that you just like extra for whatever reason, and then if and when you get to really needing to scale just do some science and see which setup works best for your application and your usage patterns and sho on and sho on.",1535217341.0
pydanny,"So... um... I cowrote a book on this very subject called [Two Scoops of Django](https://twoscoopspress.com/products/two-scoops-of-django-1-11). Even though we're at Django 2.1, the book still matches about 95% of the time.",1535198747.0
xBBTx,"Difficult question with a simple amswer: experience. So, a useless answer actually.

What works for me (9+ years experience, 5 professionally), is thinking about the (Python) interface I want to expose. If you can summarize the calls one app has to make to another in, say, < 10, those apps are probably loosely coupled (good thing). Example is an accounts app that manages everything account related, and an app just storing relationships to the account but handling its own data independently.

If you find you need more low-level access, probably it's better to keep those things in a single app. If you can group parts of that, it may make sense to split your models into a number of python modules, grouping things that logically belong together. One example is a budgetting app, split into a module related to spendings and a module related to budgets (budget, timeframes, budget-per-timeframe, so 3 models in one module). The budget app itseld exposes a number of functions to check the budget and enter spendings, through a 'service.py' module. That module is public API, the actual models are private API for the budget app.",1535216186.0
tagnydaggart,"Pydanny’s book covers separating concerns.

Dependency management is more than just writing a `requirements.txt` file. Sometimes packages share the same sub-dependencies but require different versions. This is a lot of work to work out manually.",1535204959.0
n1ncha,">I want to read up on design patterns and how to choose good models and data structures.

I recommend reading everything on [Martin Fowler's website](https://martinfowler.com/eaaCatalog/) and/or picking up his enterprise architecture book.

>I also know what the end goal is. I have a pretty good vision of what the application does and looks like. 

Write that down. Boil it down so each module's purpose can be summarized with one or two sentences. 

>Should I now write a list of functionalities? should I do a ULM map?

Yes. Doesn't have to follow any ""official"" format, but spending the time considering dependencies between you various modules will help you refine your modules or refactor them. 

",1535215400.0
athermop,"This might be a bit more ""nuts and bolts"" than you're looking for, but your question made me think about this [SO question/answer](https://stackoverflow.com/a/12857584/23972) I stumble across occasionally.

The gist of it is summed up in this quote from the linked answer:

​

>The first thing you need to recognize is that your domain model is not really about data; it is about *actions* and *questions* such as ""activate this user"", ""deactivate this user"", ""which users are currently activated?"", and ""what is this user's name?"". In classical terms: it's about *queries* and *commands*

​",1535227947.0
garion911,"1. Create unit tests from day 1.
2. Since you have unit tests, don't be afraid to rip your code up and start over when you get frustrated with it.
3. Don't optimize until you have something that works fully and passes all your tests.
4. Create unit tests from day 1",1535262452.0
IReallySuckAtChess,"So I'm not going to answer your question directly but I'll give you some advice. Write with api first in mind. The reality is that people like ripping up the frontend every year and applying the latest trends. Whilst Django does seperate frontend and backend, I do feel 100% clean seperation is rarely achieved. It also requires people to know the Django template language which although not hard is limited and not a standard skill like Javascript. 

Write an api and make sure it's excellent then make your frontend. Push as much client side as you can when it comes to actual rendering. It takes a huge load off your server, you can make prettier and more dynamic stuff and you can create a superior user experience plus developing a native app for whatever platform later is much easier. I highly recommend Vue.js if you're only going to do Web for now, and React if you plan on doing doing native any time soon. Vue will do native in the next year or so (it does now but its an absolutely massive disaster.)

When it comes to performance, use the ORM correctly and efficiently. Most Django apps can easily see performance improvements by an order or two of magnitude just by writing the right queries. Just make sure it works before you take the time to optimise. 

Also, write tests. Tests. And more tests. Also document everything as if you're going to die today and the dumbest person you know will be trying to figure the code out tomorrow. 

Lastly, if you're doing CMS based stuff, look at Wagtail. It integrates very well with the Django rest framework by default so yay....

As an aside, use postgresql, the full text search is often more than enough for even most large deployments. ",1535439212.0
tagnydaggart,"I strongly recommend devising a plan to separate concerns into separate packages and to devise a *strict* policy of managing the dependencies between them and any 3rd party packages.

Consider using a tool such as `pip-compile` as part of your deploy process to ensure your dependencies are consistent and compatible.",1535200150.0
liquidpele,Is this for a job or your own startup?,1535205744.0
godhatesmetoo,Make a design sketch but don't fear to change it when necessary.,1535207488.0
chris_conlan,"I have a good uncommon recommendation: [https://www.amazon.com/SQL-Antipatterns-Programming-Pragmatic-Programmers/dp/1934356557](https://www.amazon.com/SQL-Antipatterns-Programming-Pragmatic-Programmers/dp/1934356557)

It's called ""SQL Antipatterns"". Combine this knowledge with what you already know about Django models.Model class and the ORM, and your app will run great at scale.

For example, I once saw a developer set \`unique=True\` on a UUIDField in Django. He didn't realize that \`unique=True\` translates to a database directive that checks the value for uniqueness on every INSERT and UPDATE. Since UUID's are cryptographically unique by default, you can increase the performance of INSERTs and UPDATEs by not also setting the \`unique=True\` directive at the database level.",1535222061.0
Ebriggler,I would look at [12 Factor Applications](https://12factor.net),1535237525.0
tagnydaggart,Sorry if I’m too brief. I’m traveling and on mobile and my copy of 2 Scoops is at my desk.,1535218965.0
wizpig64,"you're calling the super().create correctly, but you're not returning the result. try `return super()....`",1535168272.0
_kunal,"Also check drf's permission layer

[http://www.django-rest-framework.org/api-guide/permissions/](http://www.django-rest-framework.org/api-guide/permissions/)",1535169561.0
ccb621,"Where are the metrics? How much faster are the tests?

I'm all for faster tests, but code readability is a higher priority for me. The named tuple interfaces seem like they potentially introduce more problems than they solve. One obvious issue is that the tuple and the model now have to be in sync. That's duplicative code.",1535168488.0
elbiot,"Wait, so they make their application extremely i/o inefficient so that their tests can be faster? This sounds like a terrible idea.",1535179133.0
a_simple_pie,I'm not sure about this idea that the DB makes django tests slow. Django uses an in-memory DB for tests by default and you can easily disable migrations to make it even faster. I work on a number of internal django libs that have 100s of tests each and every test suite runs in under 500ms. Almost all the tests we write are creating data with `factory_boy` and then hitting apis using `self.client` in `APITestClient` from `rest_framework`. Django's testing facilities and libs are fantastic tbh.,1535183784.0
oliw,"I am more willing to accept that *I'm* just reading this wrong than to think that somebody is suggesting doing all filtering in Python.

I'm clearly not the only one struggling with this. The problem that immediately comes to mind is your toy test harness might have hundreds of records. In production, we have millions. Your 2s saved in testing costs me 2 minutes *every request* in production. It's stupidity.

Use the ORM. It's a good tool. Find better ways to test asynchronously.",1535232025.0
dalore,"I like this. It teams up well with advice from uncle Bob about clean code.

Get the framework out of your business logic. Value objects are a nice way to represent business entities and it removes the need for django.

And another benefit is that for views that use them the interface is clearly defined. Template designers can't just start making queries on your models using properties (causing all sorts of performance issues like n+n queries).

For most Django people it's going to be a wtf (judging from the comments here already). But from a clean code point of view it's worth it.",1535190324.0
AlexKondrashev,I don't like what I've read.,1535180433.0
souldeux,"Set up a `proj/proj/celery.py` file to define your celery instance as described here: 

http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html

In this file, you can manually define your app's beat schedule. http://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html#entries


    from __future__ import absolute_import, unicode_literals
    import os
    from celery import Celery
    
    # set the default Django settings module for the 'celery' program.
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'proj.settings')
    
    app = Celery('proj')
    
    # Using a string here means the worker doesn't have to serialize
    # the configuration object to child processes.
    # - namespace='CELERY' means all celery-related configuration keys
    #   should have a `CELERY_` prefix.
    app.config_from_object('django.conf:settings', namespace='CELERY')
    
    # Load task modules from all registered Django app configs.
    app.autodiscover_tasks()
    
    #Schedule certain tasks manually
    app.conf.beat_schedule = {
    	'task-name-1': {
    		'task': '...',
    		#Production schedule: executes every hour
    		'schedule': 3600,
    		#Shorter schedule for testing
    		#'schedule': 30,
    	},
    	'task-name-2': {
    		'task': '...',
    		#Run once daily
    		'schedule': 3600 * 24
    	}
    }
    
    @app.task(bind=True)
    def debug_task(self):
        print('Request: {0!r}'.format(self.request))",1535144424.0
AlexKondrashev,Does not django-celery's admin integration solve your problem?,1535141924.0
LJenkins2000,"I'm new to Celery but was setting this up yesterday, using Celery Beat and Flower.  Tasks are defined in my settings.py like so:

    from datetime import timedelta
    from celery.schedules import crontab
    
    CELERY_BEAT_SCHEDULE = {
        'my_task_that_needs_to_run_more_than_once_per_minute': {
            'task': 'myproject.myapp.tasks.mytask',
            'kwargs': {'foo': 'bar'},
            'schedule': timedelta(seconds=1),
        },
        'another_task_that_uses_crontab': {
            'task': 'myproject.myapp.tasks.mytask',
            'kwargs': {'foo': 'bar'},
            'schedule': crontab(minute='*/15'),
        },
    }

That setting is used by Celery Beat after configuring it like in this [celery.py](https://github.com/pydanny/cookiecutter-django/blob/master/%7B%7Bcookiecutter.project_slug%7D%7D/%7B%7Bcookiecutter.project_slug%7D%7D/taskapp/celery.py)",1535142223.0
chris_conlan,"Maybe if you didn't declare the schedule dictionary and then reverse it, you could have multiple functions with the same periodicity...?",1535143677.0
japanfrog,"I feel like it needs to be said, but 10k users is no where near large. Unless you are caching things such as full files in memory, you are unlikely to hit even 100mb with 10k user objects. Serialized data is usually small enough. I was caching nearly a million records in memory and it took less than 4gb. This smells of premature optimizations and it stinks. You could just use the default django caching mechanism and forget about it until you actually reach scaling problems.

You start benefiting from cache when you start scaling horizontally and have one cache get hit often by many services. At which point you could even have a smaller cache local to your machine that is updated by something like elasticache. But really, don't spend time caching something until you start getting metrics on your web service.",1535147057.0
fdemmer,"premature optimization.

make it work without cache for a small number of users. observe behaviour, find bottlenecks, measure performance. then add caching of often, repeat requested data. measure again. make sure it actually improves anything.",1535146290.0
theWyzzerd,What data are you caching?  The answer to this question changes the approach dramatically.,1535139054.0
iconfinder,"We are using ElastiCache on AWS. It's not that expensive and fairly flexible. You can cache them all, but usually the oldest cached elements will get overwritten when you hit the limit. This is usually a fine enough solution in most scenarios.",1535140933.0
manfre,"When you use memcache, you can set how much memory it's allowed to use. Cache the list of quotes, once for use by all users. On a per user basis, cache their favorites and merge the information in your code (or template).",1535145370.0
brtt3000,"This is suboptimal because it reads, resizes and saves the image on every Profile instance save. At least check or remember if the image doesn't already have the expected size.

And to take it a step further, usually you keep the original image and create separate thumbnails from that (and in different sizes/croppings). Maybe using EasyThumbnail or VersatileImageField (I prefer this because the many options like cache and prewarmer etc). 

Additionally, for a big site I worked on I wish we removed the resizing and thumbnailing from the main app and used a dynamic image server like Thumbor where you create special URL aliases that specify the size (IIRC there is a django app that helps with this). There are also some serverless versions of this running on AWS or Azure etc.
",1535133347.0
__himself__,I’d suggest using a library like easy-thumbnails! Don’t have a link right now but it’s by SmileyChris,1535132114.0
godhatesmetoo,Try [django-imagekit](https://github.com/matthewwithanm/django-imagekit). I found it really useful. Just add some specs to your model and everything is done for you.,1535135215.0
IReallySuckAtChess,"Use easy-thumbnails.

I like to use the Wagtail images module. Doesn't need much finessing to work with your own models and is very powerful. It's especially great if you're already using Wagtail as ties in beautifully with the admin. Essentially you upload a full res version. Then on your page you use image tags to resize. It will resize/crop/cut/whatever the first time and cache the modified image. When you refer to the same image with the same parameters again it will serve the already altered image so no reprocessing. Its great because it even makes use of opencv to find the focus point of the image. I will say though that this is inferior to easy thumbnails for a generic module or for producing an api. It's just nice if you're planning on doing a CMS.",1535441258.0
pancakeses,I would recommend moving this to /r/djangolearning in order to get answers. ,1535133006.0
iconfinder,"Fixing a badly designed app is very difficult. And the alternative of rewriting from scratch can be equally bad for a business. There are no silver bullets in your situation. 

If possible an approach is to move features or part of the code out into separate services. That way you can rewrite the code in chucks making it more manageable. But it’s a difficult task with many architecture decisions along the way. 

I’ve tried rewriting from scratch twice with a fairy small code base (took 3 months in each case). That was good to do in hindsight because we knew a lot more about what we wanted to build plus we were better programmers.",1535133025.0
brtt3000,"If your pages are slow then take a good look at caching opportunities. Ideally the HTML is cacheable, and maybe people don't need to get all their notifications at once, or maybe only get a count and load the content on demand because only X% of people actually click the widget.

Best tip I can give is whatever you do be wary of making it worse by slapping on a kludge. 

For your framework consider how much stuff you want it to do and keep it simple. Just plain React or Vue.js are fine to add some template-ish widgets. Angular is cool but slightly bigger step to learn for just some widgets.",1535134097.0
oliw,"Forget about frontend frameworks and APIs. Seriously, people think they're *the* solution but in most cases they just multiply or defer the issue.

You need to query the right data, efficiently.  
Based on your description it sounds like your app isn't doing that.  
Fix it.

Install Django Debug Toolbar. Look at the number of queries your heavy pages are doing. Look at how many ""duplicate"" queries that page is doing. Use `.prefetch_related(..)` to hook in the things your app is otherwise pulling through on demand. Use annotations and aggregations to do things in-database rather than pulling all the data into Python and then calculating.

This isn't beginners stuff though. Hire someone with *real* Django experience (somebody who can tell you what an annotation, Subquery and an OuterRef are in Django) and give them a week. Within a couple of days it'll be faster, within the week it'll be lightning.

---

Important to state that I'm not saying frontend frameworks don't have a place. They're great for interactivity and complex UI... They're just not this ""faster just because"" BS that some people accredit them. Plane-Jane-Django is fast when done well.",1535218058.0
ceed0z4,"For implementing infinite scroll, (fetching resources on demand as the user scrolls)  Django's paginator is useful. If you are having a hard time identifying what's slowing things down, you can grab Django debug toolbar to look at your database queries, or print the queries in the server output. If it is clunky SQL causing problems looking into select_related and prefetch_related might be a good place to start, as well as values/defer/only (don't select columns you don't need). Take a look at your indexes as well. ",1535136781.0
theorganism,"I would honestly suggest Angular for this kind of functionality. However, you could try making that notification area smaller with a limited load, then create another dedicated notification view that uses pagination, balancing the load evenly.

P.S. - Bootstrap is a front-end framework.",1535133038.0
thehardsphere,"The correct answer to this in the interview is ""I do not work for free, my consulting rate is $###/hour.""

If you want to do it yourself for your own self satisfaction, that's okay but don't send it to the CTO. He's already taken a pass on you and the fact that he would ask you to do something this time consuming in the space of an interview makes me think he wasn't really hiring people in the first place.",1535124429.0
Thispicnic,Side Question: How much of this did they expect you to develop during this interview? High level overview / architecture or actually have a working demo?,1535124014.0
IReallySuckAtChess,"In 5 hours? You need at least that just to draw up your architecture, write out your essential tests, setup your environment and setup your production server. Let's not forget your design doc. Then you have to code, write more tests and document. If they expect you to do it right that's a weekend of work. I'm assuming they'd want authentication and per object permissions for this which naturally entails a ton more tests. 

If all they wanted was a very basic proof of concept then sure. I'd skip tests. Skip documentation. Write the models and make heavy use of the django admin. By the way, I wouldn't have only used two models like you did. I actually would have used many more. For example, for location I would have made a model with a region name, region centre and then region radius. A service expert could then have a one to many for the various areas he's available to serve so that customers will only be able to request service from people who would even bother thus ensuring that each service expert doesn't have an inbox full of clients that he'd never consider in the first place. You'd also want to let them override the regions and look at pure distance as well where that matters. Just know that people don't think in pure distances but rather in areas that are or aren't too far for them. I'd happily work 50km in one direction since there is no traffic, but 15km the other way is not negotiable since its at least three hours there and back thanks to road works. I'd also consider having the the services themselves as independent many to many models so that one service expert can provide multiple services and also so that that the services are more searchable. If you just allow arbitrary inputting of services then matching clients to service providers is difficult since a beautician often does makeup as well as nails and possibly even hair. A handyman might be able to do electrical work and plumbing work. If they can write their own services then you could end up with ""makeup artist"", ""make up artist"", ""wedding makeup artist"", ""mke up artist"" and so on which makes searching a mess. For rating I'd also have another model with a one to many and many to one relationship between service experts and customers etc. That way you can easily view the ratings applicable to a service expert, dispute poor ratings, leave comments and just have more usable information (use aggregate and such functions via the ORM and not in Python code.) Also you'd absolutely want object level permissions else you're going to end up with a disaster in no time. Object level permissions are not quick to implement if you're doing it right but the one's I'd focus on would be that only users who made a task can edit a task or delete a task. I'd also make sure that a rating must be tied to a completed task and that only the people associated with a task may edit or create the rating. Remember an api often means that if you have permission to do something then you can do it, whether you should be able to or not unless it's well locked down. Give a person a rating permission without object level permissions and they'll find a way to inflate their own ratings, tank a competitor or whatever. My big thing would be to get as much api as possible done and to leave the inbox feature mostly alone. You can do a bit with Django admin but you'll need to do a proper dashboard to get what they want and that's a whole lot more work.

This has barely scratched the surface of your brief and is still a lot of work before even making the dashboard, deploying, documenting or testing. Especially if they want it done right. I could make something rudimentary that could do most of what they say, except it doesn't really do what they say and definitely not what they want. Simple stuff is rarely simple to implement when done right. There is so much to consider and much depends on what features they want or will one day need. Building right from the start is better than tacking on poor implementations later that are hobbled and broken. 

Lastly Google Maps api is not paid. You can use it for free for 20 000 calls a month. You do need to provide a credit card, but you're not going to get charged for anything. You can also put in place a block so that when your free usage runs out then access to the api is blocked. Also when it comes to geographical stuff geodjango is great, but make sure you realise that when you start down that road things get difficult very quickly.

We've really scratched the surface of something so seemingly simple yet so complicated too. 5hrs was ridiculous. Instead they should have asked to see your Github/Gitlab portfolio. A portfolio of open source code well tested and documented is the best way to show you know what you're doing. ",1535443736.0
liquidpele,"> I don't know how to make an inbox for the service expert.

api for the Task model, filter to the current dude and filter out done stuff. 

> I want to make another model- WorkerTask which has task associated with the service expert. What relationship it should have with the consumertask model which I made for the tasks created by customer.

those sounds like the same thing... the task is created and assigned, no need to split it up for this unless they specified multiple workers per customer request or something. 

> After consumer added the task, it should be visible to service expert. If there are N tasks in his inbox, it should have option to filter the tasks according to distance from the service expert. i.e sort according to distance of customer to service expert.

This is a dumb exercise, just make distance a decimal field and plug in distance in miles.  Discuss other options you would do were this not a time crunched effort and why those would be superior...  e.g. do NOT make 100 api calls to google every time they make a GET request ;)

",1535127708.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1535116156.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1535112948.0
TheoR700,"The code for AuthenticationForm, which is the built in LoginForm.

[https://github.com/django/django/blob/master/django/contrib/auth/forms.py](https://github.com/django/django/blob/master/django/contrib/auth/forms.py)

Documentation for the built in Authentication Views.

[https://docs.djangoproject.com/en/2.1/topics/auth/default/#module-django.contrib.auth.views](https://docs.djangoproject.com/en/2.1/topics/auth/default/#module-django.contrib.auth.views)

Great article about using the built in Login and User system.

[https://simpleisbetterthancomplex.com/tutorial/2016/06/27/how-to-use-djangos-built-in-login-system.html](https://simpleisbetterthancomplex.com/tutorial/2016/06/27/how-to-use-djangos-built-in-login-system.html)

Django's documentation can be a bit dense, but if you take the time to read it and experiment with it, it has everything anyone could need. ",1535066861.0
sreyemnayr,Can someone program a 2 Scoops of Django bot ,1535064908.0
athermop,"You'll find things a easier to learn when you can dive into the source.  This is true for more than just Django.

&#x200B;

Even easier is if you use an IDE like PyCharm, you can Ctrl-Click (or press Ctrl-B when the cursor is where you want it) on LoginForm and it will jump you right into the source for the form.",1535067320.0
yoongkang,"Look at the source code on GitHub: https://github.com/django/django

If you use pipenv, you could open the source with `pipenv open django`.",1535073765.0
i_need_bourbon,"I recently went through the same struggle after being charged with using a SAML login for SSO (we use Google apps).

Follow the ""Authenticate"" and then ""Login"" functions in django.contrib.auth to get a feel for the way it works: instantiating a User and then Session.

You'll likely end up writing your own AuthBackend (register this in settings) and possibly a new user model, though this is a major DB shift and not easily accomplished unless you're willing to drop and recreate.

I ended up with a SAML authentication (LDAP HTTP Basic for API access) with LDAP authorization (including RBAC) in a surprisingly little (a few hundred) amount of code despite the huge chunk of settings.py, the login views, and the custom user model with a custom mixin. Because it hooks in to the built in auth system, it's completely transparent to the devs whether they're writing standard app views or DRF viewsets.",1535120781.0
thehardsphere,"The photologue documentation says: 

>Note that all Photologue templates inherit from photologue/root.html, which itself just inherits from a site-wide base.html - you can change this to use a different base template.

""From a site-wide base.html"" is very ambiguous wording to me, but I interpret that to mean that photologue _assumes_ that base.html already exists and that you already provide it.",1535046367.0
i_like_trains_a_lot1,"You need to have anywhere in your app a ""app_name/templates/base.html"" file with the base template. Although it is a weird structure to be honest, I haven't seen this approach anywhere else.",1535093592.0
throwbible,"Is the CSRF token missing or is it incorrect? If you haven't done anything actively to set it, then the token will be missing. 

It's been a while since I justed th DRF, but basically this:
https://docs.djangoproject.com/en/2.1/ref/csrf/#ajax",1535038670.0
RadioactiveCats_18,"Fixed it!
Y'all... just by reaching out I got enough of a push to find where the breakdown was... then somehow in a search I found that setting the Ajax setup in the template rather than in the JS and taking ALL of it out of my JS file except setting the cookie itself was the way to go.  It's mentioned deep in the docs, that if you're not posting a form (Datatables doesn't post as a form exactly) you put the tag directly into the template.

Three days and heartache later, it LIVES!  Thank you for the support!",1535042425.0
mbrochh,"Strange that this happens in your admin.

One reason in normal views can be when you have a view and you just return a template and forget to pass in the context (i.e by making sure in class based views that you call get_context_data)",1535041112.0
i_like_trains_a_lot1,Is this what you are looking for? https://docs.djangoproject.com/en/2.1/ref/contrib/sites/,1535029074.0
charettes,I'd have a look at [django-hosts](https://github.com/jazzband/django-hosts).,1535034553.0
iMichael_,"You don't need any third party package to accomplish this. You don't even need separate django apps. The entire thing can be done with a simple middleware class that implements the `process_request` method.


https://docs.djangoproject.com/en/2.1/topics/http/middleware/",1535149418.0
kala_,"Did you deploy your site using *manage.py runserver*? As far as I remember, it's single threaded, so it won't be able to start processing one request until it has finished processing another. 

If you use a more production-oriented WSGI server, like uwsgi, it can be set up serve more than one request at a time. Try this tutorial from the Django docs: [How to use Djanog with uwsgi](https://docs.djangoproject.com/en/2.1/howto/deployment/wsgi/uwsgi/)",1535021058.0
i_like_trains_a_lot1,"If you use gunicorn you can either increase the number of workers and threads or switch the worker class to a non-blocking one ``gevent`` or ``eventlet`` (http://docs.gunicorn.org/en/stable/settings.html#id75). 

For worker count and threads, I see that the defaults are 1 each, meaning that by default you get a concurrency of 1 request.

How are the static/media files served? If you serve them from the django app (eg. have a ``static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)`` root), this might be the issue as the serving of static files will overload the available threads. Make sure you put them in a directory from where nginx can serve them and configure it to do so.",1535094293.0
thehardsphere,What HTTP / WSGI server combination are you using to deploy the application?,1535021096.0
booooomba,You need to use a task queue for that. Most people use celery.,1535016616.0
BeesBlaas,"Thanks for being thorough and explaining as you go along. So many tutorials online assume pro knowledge and don't always take into account the necessary foundations needed.

​",1535024594.0
ncubez,"He's good. Been going through his ""Django Notes"" series and it teaches a lot. ",1534971190.0
YellowSharkMT,"Are you asking how to use the [`url` template tag](https://docs.djangoproject.com/en/2.1/ref/templates/builtins/#url), as part of a link? In your `urls.py` file, you should have the route for your home page defined, like this example:

    urlpatterns = [
        url(r'^$', views.homepage, name='homepage'),
        url(r'^another-cool-page$', views.another_cool_view, name='another_cool_view'),
    ]

Then in your html template, you would use some code like this:

    <a href=""{% url 'homepage' %}"">Home Page</a>
    - <a href=""{% url 'another_cool_view' %}"">Another Cool Page!</a>

You can see how the names ""homepage"" and ""another_cool_view"" are used as arguments in the `{% url 'xxxxxx' %}` tag.

Hope I understood your question correctly, let me know if any questions, glad to help out!",1534968587.0
theWyzzerd,"You can define a snippet with the button in its own html document within a `{% block content %}` tag then use includes ( `{% include 'path/to/snippet.html' %}` ) to extend your template.

​

For example, here is a template I created called \`base.html\`.  Every page in my app extends this template.  Note that I also have defined a head.html, header.html, and footer.html so that I can easily generate new pages and keep my head, headers, and footers uniform across every page and I only have to make a change to them in one place to change every page in my app.

    <!DOCTYPE html>
    <html lang=""en"">
    {% load  static %} {% include 'status/head.html' %}
    <body>
    {% include 'status/header.html' %} 
    
    {% block content %}
    
    {% endblock %}
    
    <script src=""https://code.jquery.com/jquery-3.3.1.slim.min.js"" integrity=""sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"" crossorigin=""anonymous""></script>
    
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"" integrity=""sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ"" crossorigin=""anonymous""></script>
    
    <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"" integrity=""sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm"" crossorigin=""anonymous""></script>
    
    {% include 'status/footer.html' %}
    </body>
    </html>

​EDIT:

​

I forgot to mention, in your case you would define the snippet with the button once, in snippet.html, then use includes on every template you want it to appear on, as I have done here with my header and footer snippets.",1534964611.0
kurashu89,"I'd strongly urge against using a UUID as a primary key because they're aren't ordered so they cause fragmentation. There are implementations of uuid that guarantee they're  monotonic and they would be an okay choice for an indexed, externally used identifier, but I'd still caution against it unless you know you need that.

Instead, use a regular seqint for your pk and come up with some better natural key for external resources to use. ",1534968378.0
theWyzzerd,Hard to tell without seeing how the models are defined or where you're getting the error.  Do you maybe have two fields both set with `primary_key = True`?,1534962397.0
RealisticPurple,"My advice is use classic integer id and just add new UUIDField.  
I have really bad experience using UUID as PK. It was a long time ago with MySQL, but scars remain :(  
",1535404377.0
shepherdjay,How are you extending the user model?,1534963379.0
Lord_Humongous,"What does your url definition look like? If it contains ""id"" try changing it to ""poke_id"".",1534961967.0
AlexKondrashev,Did you try calling the admin.site.register(...) method every time you change YourModelAdmin.list_display property? upd: you'll also need to call admin.site.unregister(...) before registering the admin again.,1534955546.0
zettabyte,"It might be easier to do something like that with CSS / JS in the HTML, rather than forcing a reload on the web server.

If you insisted on doing it in code, you wouldn't need a full restart, just a reload, which isn't too bad.

In fact, if you deploy with uwsgi, you can do something like `echo r > var/uwsgi.fifo` to get the app servers to reload.  I'm not sure gunicorn has something equivalent.",1534955747.0
massover,"You can add your request time logic in the [get_list_display](https://docs.djangoproject.com/en/2.1/ref/contrib/admin/#django.contrib.admin.ModelAdmin.get_list_display) method on your ModelAdmin.

Usually in Django’s declarative class based approach, you’ll have an option to add a constant class attribute and also a ‘get_attribute’ method to handle any dynamic request time logic.",1534979333.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1535361892.0
AlexKondrashev,"Try searching for 'can_subscription' through your source code. Maybe it's used in the template in `url` tag, or in `reverse` calls in the models or view. It should help you finding out the reason. Then check url patterns to have an url with such name if they should.",1534955090.0
bartergames,"Maybe the ""refresh"" is getting the cached version of the page from the browser itself, not rendering the page at all in the server.",1534969657.0
,[deleted],1534916765.0
booooomba,Why are you reading books about Flask if you want to learn about Django?,1534914719.0
japanfrog,"You are approaching this entirely wrong in my opinion. Sure you can probably follow tutorials and deploy a website, but if your goal is to actually understand python and become proficient with Django, you NEED to become familiar and confident with Python first. This also means having a solid grasp on software fundamentals so you understand how the dynamic types that are available work, and when you should use what, or to even understand a bit more on why Django exists and how it was designed. Once you get the hang of Python, you start doing some straight-to-wsgi projects, without a framework. (since you mentioned playing with Flask to learn basics). At that point you should jump into the Django docs and follow those tutorials. Try your best to ONLY use the official Django documentation for your most update information. If you truly must use other sources, I suggest you stop by the IRC channel and ask there first, chances are a contributor has some good information on what you seek.

If you truly want to stick to your current path, I suggest you instead play around with Laravel (PHP) or Ruby or Rails, else, I feel you wouldn't be taking true advantage of  what Python and Django provide.",1534916774.0
colly_wolly,"Have a reasonable understanding of Python (saying that I dind't but coming from Perl it was pretty easy.)

But please, please, please know SQL and understand how a relational database works.

Have an understanding of HTTP protocols. 

HTML and some Javascript as well. ",1534923270.0
godhatesmetoo,Maybe find a hobby project and try to build it using Django.,1534928129.0
haloweenek,Study python ,1534914957.0
snihal,"If you are aware of Python and have little bit understanding of web development, pick a dummy project on your own. Code it and you learn django the best way. For example- mock basic functionality of Twitter, project on photo sharing, mock an ECommerce website with few products and go with the whole cart and order flow. You can check about such dummy projects online. Pick one and start building. ",1534915410.0
ncubez,"Get a PDF copy of [this book](https://djangoforbeginners.com/). While I don't condone it, it's possible to download a copy for free, if you search hard enough. I'm poor, so I did what I had to do. Nevertheless, if you can afford to buy, then by all means. The book is quite helpful, actually, and it made me appreciate class-based views, for example, something that I had initially sworn off of. I'm in agreement with the author that the official Django docs are NOT beginner friendly. ",1534916715.0
SkawPV,"If you are going to use a framework of Python, you need to learn Python first (specially objects. Don't bother learning about how to connect to a Database, ORM will do that for you). But also, if you are going to use Django, a Framework to create websites, study HTML, CSS and Javascript.",1534921812.0
razor_XI,"I recently purchased two scoops of django,it is not a tutorial book but more of django best practices.",1534944831.0
shapoglyk,"Write some basic programs on Python that will solve some of your daily routine. Try to use requests library, because it's great and very useful. Ex: get todays weather from some public API or create a reminder. 
Then get Two Scoops of Django. Great book. Answers a lot of questions and clears up many things. Pay special attention to chapters that explains type of User models, Model organizing, CBV vs FBV and Forms. Don't forget about testing.",1534950208.0
thehardsphere,"You need to stop reading books and start doing work. Let the work decide for you what you should learn and focus on those topics when you actually need to know them.

You will never develop a practical understanding of any piece of software by reading books about it. Books are often incomplete, inaccurate, and obsolete. Even if that were not true, there is too much knowledge in the world to try to acquire it all before doing work. Even the people who know a piece of useful software very well likely do not know everything about that software, unless they wrote absolutely every single line of it themselves, or it's a toy program. It is a fools errand to try.

Go find work to do, and do it.",1534952012.0
dreamer_soul,I highly recommend 2 scoops of django,1534932153.0
pX0r,"Learn Java Servlets, EJB and JSP.
You will start believing once you take the Django Polls tutorial :D
",1534946107.0
_kunal,"If you are not looking for quick fix, custom user/auth backend should keep things sane later on.
Check if other modules/libraries like permissions will work after the quick fix. Do you need them to work ? Take a call.
Regarding time/effort in implementing custom user/auth- most of the time will be spent in reading. There is hardly any effort in implementing/typing.
You can also check other libraries who handle SSO without creating a django user. Might help you as a reference.",1534918332.0
i_like_trains_a_lot1,Is this what you are looking for? https://docs.djangoproject.com/en/2.1/howto/auth-remote-user/,1534922559.0
koperak,"https://python-social-auth.readthedocs.io/en/latest/backends/implementation.html has something similar. I have not experienced this framework but it seems like could help. 

I would check if your Ping SSO supports SAML and try to use SAML as IdP for Service Provider to python-social-Auth https://python-social-auth-docs.readthedocs.io/en/latest/backends/saml.html",1534969950.0
TheoR700,"I found this write up to be helpful when deciding how to implement multiple user types.

https://simpleisbetterthancomplex.com/tutorial/2018/01/18/how-to-implement-multiple-user-types-with-django.html",1534888932.0
dreamer_soul,"I would create a unified user object for authentication and two one to one relationships to both of the account types (type1, tyoe2) inside the model create a function to check if type1 return true and vise versa",1534888567.0
askvictor,"I had a similar thing implementing a school app - we had different user types for Staff and for Students. I have a class AuthUser (inherits AbstractBaseUser) for authentication. Then I have StaffMember and Student classes both of which inherit from an abstract SchoolPerson model I created (which defines the common details, e.g. name, DOB, address). The SchoolPerson model (and hence staff and students) has a one-to-one relationship with AuthUser.

Here's a bit of useful code from my AuthUser class:

    def get_profile(self):
        for field in self._meta.get_fields():
            if field.one_to_one and 'SchoolPerson' in [base.__name__ for base in field.related_model.__bases__]:
                try:
                    return getattr(self, field.get_accessor_name())
                except ObjectDoesNotExist:
                    pass
        raise ObjectDoesNotExist

    def user_type(self):
        return type(self.get_profile())

    def is_student(self):
        return self.user_type() == Student

    def is_staffmember(self):
        return self.user_type() == StaffMember",1534904551.0
_under_,"Use the Django User model for authentication, and have a one to one relationship to a UserProfile model which has a type field.

I can't say for sure what's best though without more context.",1534894273.0
RadioactiveCats_18,"From a data standpoint, what I'm seeing is that a Person is a class, and there are two different types of Person, so that should be a subclass of Person.  Look into subclasses for Django models.. this will allow you to add additional attributes to users depending on the type of user, while still retaining the core attributes.",1535057391.0
IonTichy,"Can you please elaborate more on how those issues look like exactly?  

Because chances are that you might have a problem in your VCS workflow and not with Django.",1534864503.0
Oriphiel1,What i do before push to master is delete all new migrations since the last in master and make only one. ,1534873564.0
athermop,"You've got some advice already, but I just want to point out that database schema changes just do not work well with feature branches without giving thought to what you're doing.  It's the nature of the beast.",1534875260.0
puzzledwithmyself,"Does database content matter to you? If not, you could just write a post-checkout git hook which would re-create db everytime you change branch, migrations and all. I can't get to specifics now, but I'll check on this thread later if you're interested, just give me a reply.



Edit: Also please specify if you mean development environment and merge issues while working, or do you mean production where data obviously shouldn't be wiped. ",1534865949.0
godhatesmetoo,"> Warning: You probably don't want to do this because it's unsupported and very hacky. Consider JSONField.

:-D",1534851369.0
ezaquarii_com,TL;DR Clickbait. At least inside they openly claim it's a scam.,1534853823.0
fvox13,"The [Django Debug Toolbar](https://github.com/jazzband/django-debug-toolbar) will show you which templates are used for rendering, among other useful things. Not displayed as a ""map"" but you'll get a list at least.",1534880164.0
Designer023,"Yeah debug toolbar is great. I’ve used this feature quite extensively with it as it’s great for figuring out the templates used in a view, just a shame it can’t map out all/most of my views for me with 1 command! Thanks for the suggestion. ",1534917567.0
spapas82,"I use normal windows command prompt (cmd.exe) as my (python+django) development environment. I usually use sqlite as the database or, if for some reason I need to use a postgres or redis I have both installed on my windows; they work fine. As an editor I use Vim with a bunch of plugins (https://github.com/spapas/vimfiles) ; everything works great with windows.

The only situation where I needed a Virtualbox was for a couple of projects that needed PostGIS. 

I really believe that you should be able to do everything you need on normal windows, almost all libraries can be installed with pip and for those that can't be installed through pip you can download the binary and install it with easy_install (as I said, the only thing that I've found problematic when working with my windows dev env is geodjango/PostGIS). 

I don't like WSL because it adds a level of indirection over normal windows making everything slower. Also most of my shortcuts, directories and installed programs/utils don't work there (so I'd need to recreate my dev env). I also don't like virtualbox for reasons that should be all too obvious. 

Concerning docker, I have tried it a bit as my dev env but I found it too much of a PITA to configure. Maybe I would use it instead of virtualbox so that it'd provide the PostGIS environment. However, one problem is that docker is not really compatible with virtualbox (docker needs Hyper-V enabled, virtualbox needs Hyper-V disabled) thus you can't have both running together. 

For debugging? This is too easy if you use the Werkzeug app server (see the trick here: https://spapas.github.io/2016/06/07/django-werkzeug-debugger/). 

Final words: Using a plain windows cmd.exe prompt should suffice for most cases. If something is not working properly feel free to ask me, I'll be happy to answer if I've experienced the poblem myself!",1534868097.0
eighthpence,"I use vagrant and virtualbox on Windows 7 (that is what work wants us to use). As you say, it is slow, but it works mostly.

At home using Windows 10, I did give WSL a go. It was alright, but there were issues with shutting down the bash window, and it killing the services I had running.

You might find this useful https://www.jetbrains.com/help/pycharm/using-wsl-as-a-remote-interpreter.html

Now I am trying to use Docker with pycharm on Windows 10. Though I haven't mastered it yet. You don't need a virtualenv. But it won't hurt either.

Here is an older guide. I think it is still relevant, though I cannot remember right now. https://blog.jetbrains.com/pycharm/2017/03/docker-compose-getting-flask-up-and-running/

As for debugging, I use pycharm and the debugger supplied with that.

Good luck!",1534842752.0
apreche,I used to use virtualbox. Now I use Windows subsystem for Linux. It's surprisingly terrific. ,1534850812.0
absthrow1,"Windows 10 for Django/Flask and Linux Subsystem for the database.

If something does not work on Windows 10, then I code on Windows and deploy on Linux Subsystem.",1534851252.0
mick88,"Python works on windows. I develop on windows and my django projects work as well as on Linux. I use virtualenv and bash shell that comes with git, and PyCharm as the IDE.",1534854431.0
0xRumple,"VSCode & Python

Make sure you have virtualenv package:

```
pip install virtualenv
```

Just create your virtual env in the terminal:

```
virtualenv venv
```

Activate it everytime you work on the project:

```
call venv/scripts/activate
```

Run your django project:

```
python manage.py runserver
```

* P.S: Docker sucks in Windows... super slow comparing to the steps above!",1534874089.0
athermop,"What is the problem you're having just developing on Windows?

I developed in an Ubuntu VM on my windows host for years.  A year or two ago, I just started developing right on Windows and haven't really had a problem since.",1534876531.0
JumpinJackHTML5,"I use WSL/Ubuntu and it works great. For the most part it works with existing tools just fine, and the debugger still works as expected.

I've done just about all the things people have talked about, VMs, Vagrant...so far WSL has been the easiest and fastest.",1534881664.0
Pr0ducer,"Ubuntu Virtual box + Docker. I just use an Ubuntu VM, GUI and all, install sublimeText, install Chromium, and then install Docker.  There should be a Django docker example out there, maybe this:

https://docs.docker.com/compose/django/#create-a-django-project",1534844896.0
i_like_trains_a_lot1,"I found http://flagzeta.org/blog/using-grpc-with-django/ but it only runs the grpc server from a django management command so that you can use the models inside the grpc implementation (and that is basically what you can do with this combination)

grpc is a procol for communication between remote processes (**G****R**emote**P**rocedure**C**all) while django is an abstraction layer on top of wsgi which implements the http standard. So we are talking about  two completely different transport layers that can't be combined.",1534839219.0
projektmayhem08,"When A is deleted, B is deleted, and when B is deleted, so is C. So yes, when A is deleted, C is deleted too.",1534833834.0
RealisticPurple,"I think it means that records in DB are deleted (using QuerySet.delete()), but if you have some special logic in Model.delete() method, it won't be executed.",1534839860.0
diek00,"Django - Learn
do not copy and paste, code out all examples 

1. Read the Mozilla guide to html forms, most newcomers fail to understand this, and the official Django tutorial does not give this important topic enough emphasis imho. 
https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms

2. Do the official Django tutorial, twice. Yes twice, the first time you will struggle, the second time the key concepts will become more clear
https://docs.djangoproject.com/en/2.1/intro/tutorial01/


3. Mozilla use Django in production Complete the Mozilla Django tutorial
https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django
This is doable in 2-3 days, faster if you really push it

4. Read about HTTP: https://developer.mozilla.org/en-US/docs/Web/HTTP

Mozilla is the best site for all things web

Some people love videos, the problem is with a video it is easy to miss something, and with Django a single mistake can be a showstopper and the cause may not be clear for a newcomer.
The video series Coding for Entrepreneurs, may be helpful too.
https://www.codingforentrepreneurs.com",1534806174.0
0xRumple,"Don't waste your time... go to treehouse, they have a dedicated path for django, their content is very neat and will save you tons of time (especially Keneth Love).",1534874243.0
ReactDOM,Some of the [best Django courses](https://reactdom.com/django),1540313946.0
nikoskatsos101,"Could you be more specific, or do you want a generic example?",1534804689.0
IReallySuckAtChess,"So if you're just throwing stuff in a table then datatables are an awesome option.

If not, then you need to learn about query strings and then learn to parse them in your views. Usually you override the get_context method. Also look into Django pagination if you'll have multiple pages and implement that too. ",1534832048.0
IReallySuckAtChess,"Yes. It will happen but don't expect it before 2020. I wish they'd gotten on it a lot earlier i.e. 2015 when async was released but back then there was still a lot to learn about async web servers and there was still some questions about how the future of async in Python would play out.

The thing about Django is that they are rarely a tech leader, but when they implement stuff, they implement it right. 

So yeah. It's going to happen. Just be patient whilst they scrape the money together and actually implement it. ",1534831838.0
daredevil82,You can read the conversation on the django dev mailing list about this very thing at https://groups.google.com/forum/#!topic/django-developers/Kw7-xV6TrSM,1534853837.0
oliw,"As somebody who maintains a couple of dozen Django sites, I'm a little worried about the long-term ramifications for people who want to stay up on supported versions of Django, even if they don't immediately use the new features.

Async programming has a tediously nuanced syntax in Python. It makes sense to me, but to convert Django's render stack would also mean upgrading every view, no? Even if it remains essentially synchronous, you'd still need to bolt onto an async toolchain. Generic CBVs would all change too. Add on to that every interaction with the ORM, every bit of middleware, every bloody third party Django library... Jesus Christ, 2to3 took us 10 years!

I'm still hopeful we might one day get a Python syntax where await is implied on every function call and it's the behaviour within that function that decides whether or not it's forks out into another context. But I'm trivialising *seriously complicated* language infrastructure. If it were that easy, they'd have done it.

One day somebody'll notice that's how Go works and copy it.",1534884719.0
brtt3000,I hope they can make this happen. ,1534846962.0
420Phase_It_Up,"Forgive my ignorance, but what stops someone from using Python threading functionality, which really behaves more like async code, or using Python's new asynio library along with Django if they want async? Is the plan to use those and bake it into the framework itself or is it to make Django compatible with these options so the they can added to a Django project if async is required?",1534910034.0
Talked10101,"I can't see this happening any time soon, and I think other async frameworks might be able to catch up by the time we get along the road to async Django. Though the django project is right to realise without async support its position in the world might be threatened. ",1534835519.0
thebatlab,"The article is overall fine, but that's a misleading title IMO.",1534798331.0
nickchuck,"Wow, the word ultimate really is appropriate here :)",1534787682.0
xBBTx,Good and complete article,1534788654.0
xyz123ff,Excellent reading!,1534793857.0
synw_,"Use a time based or event based worker to generate either your reporting data or its representations (things like Bokeh can produce html charts). Use pandas if you have heavy data transformations to make, stick to queries if it is sufficient",1534784481.0
IReallySuckAtChess,"Can you not offload some of the stuff to the client? Offloading to the client is especially great for scaling to lots of clients.... Gather the data on the server, then pass it to the client where they can do further processing and rendering. 

Are you using any specialised packages for processing the data itself? I highly recommend you do. 

Slow page loading times are more often than not as a result of database queries. Which database are you using? How are you using it? Have you spent times optimising your queries? Have you configured your database well? Databases sometimes have some special built-in stuff that are worth using for many use cases. Usually these special functions are available through the ORM but occasionally a SQL query will need to be written. Anyways, spent time making less queries and make those you do make more efficient ones...

Also, consider making use of asynchronous operations where you can. Nothing to be had with the ORM but some stuff can benefit from making things async.

Lastly, and most importantly, break your pages up. Make essentially a number of javascript+html+css widgets and let them query the server themselves using ajax. Add a little loading animation too. They'll load at different times but the overall page will load instantly. This is great for user experience and perception. People don't mind things taking kind to load, but they want instant feedback. If a user presses a button then display a loading animation, just never let it sit there still giving no feedback. Vue js integrates painlessly with Django templates and are great for making said widgets, populating them with data and making them reusable. Just make sure to change the delimiters for the various Vue apps (essentially your widgets) as they default to the same as the Django ones. ",1534834135.0
OMDB-PiLoT,"I hate the fact that using ""Ultimate"" before any tutorial title has become the latest trend. So annoying.",1534826196.0
shr1n1,why not [Matamo](https://matomo.org/). You can self host it and track user specifc data.,1534781018.0
i_like_trains_a_lot1,Why would you want to reinvent the wheel? It seems like an overkill if you really want to get into measuring user retention and other kind of user interaction. Why not use google analytics and then use their API to plot data in a different way to suite your needs?,1534767042.0
jonatron_,"By ""planned jobs"" do you mean periodic tasks / celery beat? Make sure you're only running one ""celery beat"" process ",1534757382.0
daredevil82,"https://github.com/cameronmaske/celery-once could be an option for consideration.


>Celery Once allows you to prevent multiple execution and queuing of celery tasks.",1534762900.0
snihal,Is the timeout set right? Do the jobs take long to run?,1534765063.0
thebatlab,"It seems like unneeded complexity and extra points of failure/holes of debugging hell :)

It sounds like you want a microservice architecture, but with less separation between services...possibly hampering the point?",1534721521.0
cubiclegnome,"Django is generally pretty lazy about loading things.  I wouldn't be concerned too much about performance with scaling an entire project horizontally.  If you're going the MS approach with django, use the orm and rest framework and keep the pages client side.",1534729576.0
athermop,What do you have to gain by doing this?  How are the other urls harming you?,1534729666.0
Panron,"If your main concern is the models, you can do this with flask/sqlalchemy.  Define your models in the ""main"" project, which can then be used for migrations, and then just reflect the schema in the other projects.

(And, if there are better ways to accomplish this, I'd be interested in hearing about it!)",1534722431.0
don_sno,"Personally, I don't think it is overkill, in fact I think it might be preferable to the django app approach. The reason I say this, is because when you share models between apps, it is a small step from 'separated and organized' to 'spaghetti chaos'. The way we implement this is that we have a backend of API MSs, then depending on the context, we make a GUI that implements these APIs accordingly. Then we orchestrate these containers with docker compose. So the stack might look something like this:
api_1
api_1_db
api_2
api_2_db
gui_1 (implements api_1/model_1 and api_2/model_1)
gui_2 (implements api_1/model_1)
Nginx

Our boilerplate django is fairly minimal, auth for instance is not included and managed by another service. ",1534784567.0
,[deleted],1534722380.0
daredevil82,"https://docs.djangoproject.com/en/1.11/ref/databases/#mysql-db-api-drivers

as you can see there, mysqlclient is the project-recommended method of integrating django with mysql.  why are you going with the Oracle product?

and this change suggests the issue lies with the connector library, not django.  Does it still occur with older versions of the library?",1534724534.0
dedsm_,does it also happen with default anything other than 0? my guilt pointing finger is directed toward mysql at the moment ,1534718402.0
GuyNamedEDd,"What is returned when you create new `Foo` objects?

```
new_foo = Foo.objects.create(bar=0)
print(new_foo.bar)
```",1534723758.0
GuyNamedEDd,"And then...
```
new_foo = Foo()
new_foo.save()
print(new_foo.bar)
```",1534723862.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1534715190.0
yccheok," There's one thing confusing me. 

Why in accounts/admin.py, we are using from accounts.models import MyUser. 

But in web/settings.py, we are using AUTH\_USER\_MODEL = 'accounts.MyUser'  (Instead of AUTH\_USER\_MODEL = 'accounts.models.MyUser')",1534715710.0
badpython,"This is a fantastic tutorial on extending and customizing the user model:
https://wsvincent.com/django-allauth-tutorial-custom-user-model/
",1534751407.0
jafrancov,"For Django you MUST register a username, email is optional, however, you could set the same username as the email.

In fact, a registration form for Django is pretty simple and straight forward, just consider the above.",1534741959.0
twigboy,"Start your own hobby project and experiment on that.

Each problem or task you need to do, take a look on google or forums to see if there's a better way that suits your needs.

For example I've recently started a new project so I could learn how to use web sockets and react 16, and that in turn led me to learn django channels. Last night I stumbled upon a problem where I had to implement a find-a-word solver algorithm.

Also, read the documentation to see what options are available. django has incredible documentation compared to many frameworks I've used.

It all comes down to how motivated you are to look foe things to learn.",1534710634.0
godhatesmetoo,"Have a look at Django REST Framework and Django GraphQL. I think those are probably the future providing an API for responsive single page and native apps. If you are into Frontend development too, have a look at React and React Native (others might prefer Angular or Vue). Also have a look at Zappa in combination with AWS Lambda and Docker with Fargate. I always start with reading the documentation. Then I research using a search engine to find blogs covering advanced topics. Books might provide interesting information too, if they are up-to-date. Maybe your company has access to O'Reilly Safari. You'll find a lot of books there. YouTube has interesting videos too. Have a look at the conference recordings like PyCon, DjangoCon and the AWS conference (I forgot its name).",1534706903.0
apreche,"CPython works just fine for every project I've ever worked on. I don't have any issues with it whatsoever. There's no reason to take risks by doing something non-standard if you don't have a particular problem you are trying to solve. People say it has better performance, well then I'll look into it if I ever have performance issues. 

When you stray from the defaults you just create more work and more problems for yourself. It should only be done if you can clearly identify a problem you have that is solved by doing so.",1534682559.0
IReallySuckAtChess,"I've run sites on PyPy. I've never actually run into a problem and the performance boost is quite nice. That said, most of the time you're IO bound so there isn't anything noticeable to gain. There could possible be gains to be made with template rendering but only after a good few rewuests whilst the JIT compiler figures stuff out. 

Just note that if your app uses something like Pandas or the occasional library that PyPy doesn't support you'll have a bad time.

So usually what stops me is that I never feel the need to. I rarely need the extra performance gains or are better served fixing my database queries. Another thing that stops me is that it is usually a few versions behind. At the moment it's at 3.5 compatability whilst I'm using 3.6 for everything thanks to f-strings in particular... Also I think there is still something to do with proper async support but can't remember what... ",1534687658.0
oliw,"They always seem to be a version of Python behind what I want to use. The recent release of Ubuntu 18.04 means I have LTS deployments with Python 3.6 and overnight everything became f-stringed. 

I guess that means I'll be on 3.6 for a couple of years bit I'm already itching for data classes and the new asyncio changes. Either way, I'll be waiting even longer for Pypy. And I'm not good at waiting.",1534701905.0
TunaBoo,Deploy many many times per day on k8s. Much of my code would not even jit. Can't use most recent vetsion of python. Some C libraries may not work.  Why? ,1534714069.0
haloweenek,"There is loads of stuff that can go wrong in template...

I/O is the most often issue. 

Profile the app first.",1534718129.0
willcodefortea,"Hmm they should be. So if I were to guess I'd say that the queryset you're using to do the final calculation is different from the one you're applying the 'won' annotation to.

Sure it's not being reassigned anywhere / is being assigned before this section correctly?",1534717662.0
pat_the_brat,"Learn some front-end libraries/frameworks. I am very much not artistic either, but things like [Bootstrap](https://getbootstrap.com/), [Foundation](https://foundation.zurb.com/), or [Vuetify.js](https://vuetifyjs.com/en/) for Vue.Js make it much simpler.

There seems to be a lot more front-end jobs than only Django back-end jobs, as a lot of back-end jobs require Ruby on Rails, Laravel (Ugh!, PHP), or Node.JS rather than Django.

Doing full-stack does make you more employable, as u/Jgrbot mentioned.

If you're working on your own projects, just find a passionate front-end dev / designer if you're not into it yourself.",1534670064.0
mikemaddem,"I do this literally all the time. Clients pay for a design from a real designer (not me), he deals with the client on looks then gets me a few html files, occasionally using php to include other files like header and footer. But all the raw html and css is there.

Once hes done he sends it to me so I can get to work on getting the django templates good. My backend is already down and good to go so it's just about the templates before getting the client site launched.

Django templates are super duper simple but yet intuitive, allow for a lot of stuff to be done. They say it's not a programmer language, but rather a tool that any designer can pick up and make work with no prior experience",1534687092.0
Jgrbot,"Bit of weird question - if web design isn't your thing, it's not your thing. However modern web design is pretty minimal, and you don't really need to be artistic, nor do you need to ever open Photoshop.

Some companies want full stack, some are happy having front end designers and programmers. I work in a small team and end up doing both, but I enjoy doing it.",1534667920.0
PyBet,"I feel the same way as OP. Sometimes I get on Behance to get some inspiration and I think that I am in a art gallery.

I know you don't have to be an artist to create a nice navigation bar, tables and such. But, there are some designs out there that I could neither imagine nor code at least at this point.",1534672157.0
Reeveo,I am learning Django and i can relate to this as i too am quite poor when it comes to designing. Part of it is learning how to make it but that is part of my journey at the mommentWhat i have found though is templates using bootstrap [https://startbootstrap.com/template-categories/all/](https://startbootstrap.com/template-categories/all/) which i am planning on using.,1534677000.0
Brachamul,"It is the norm to have designers hand designs to you so you can code them.

Web dev and web design are very different things, though both benefit from having good bases in the other.

Try a MOOC on web design to get the basics down. It's not rocket science.

To simplify : lots of space between elements, use black, white and no more than 2 other colors, but use shades of each, and finally be consistent.",1534699142.0
mbrochh,"I think turning a PSD file provided by a designer into HTML and CSS is a core skill for any web developer and doesn't require any actual design skills.

Coming up with those designs is another beast that you probably don't need to focus on. 

For quickly whipping up prototypes and side projects, just get to know Twitter Bootstrap inside out and you can create stuff that's usable and nice to look at all right.",1534670754.0
cortical_iv,"Watch out when you ask front end people these types of questions:
https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f

You should be able to get by with django + bootstrap, frankly. That's what I use.",1534686820.0
savuporo,"One option is to learn to use [DRF](http://www.django-rest-framework.org/) efficiently, and leave frontend thingamajigs to frontend people.

They'll want to have a different Java/Coffe/Typescript framework every week for it anyway",1534700200.0
AlexFromOmaha,">But do you need to be an artistic person to use it? 

No. In fact, it's set up so that you shouldn't have to put a lot of logic in the templates and whoever is working in the templates doesn't need to know much about programming.

> Is it possible that a designer could come up with a nice design and I can create it? 

Yes, but you're going to have to be comfortable enough with front-end technologies to do it. Django offers very little help in this regard. Personally, I think this is a perk. Because Django doesn't care much about what's in the templates, you're free to get a dedicated front-end library or framework to work in.

Alternatively, get a ""real"" front-end dev to do it. They're free to do typical front-end stuff in the templates.",1534705411.0
Helg1121,"I see, you gotta be the real designer for BitChute xD ",1534724679.0
toyg,"One of the things I’ve learnt over the years is, you don’t *have* to build everything from scratch, *including* designs. You can get a cheap theme or design from shops like ThemeForest and adapt it a bit. It will look good enough for most purposes, and will save you a lot of time when you’re just starting. If the project then progresses to a point where you’re making $$$$, *then* you can afford to hire a good designer or frontend guy who will come up with a unique look.",1534748049.0
pancakeses,"I would recommend you just use DateTime for your event, rather than Date and Time separately. I took your approach on my first project, and eventually rewrote everything to use DateTime because at the end of the day it's much more convenient. You can always access the date and time elements of a DateTime (either field.date & field.time in most places, or field__date in a query)

If you need to ensure that all returned events are on the same day, let me know and I'll modify this.

Anyway, line 2 here combines your separate components back to DateTime. If you decide to combine them in the model, omit line 2.

This will return all events within 1 hour of a DateTime variable called 'date_val':

    import datetime
    event_dt = datetime.datetime.combine(event_date, event_time)
    
    date_val = datetime_youre_interested_in_targeting
    date_plus = date_val + timedelta(hours=1)
    date_minus = date_val - timedelta(hours=1)
    
    # This will filter down to retrieve all events within an hour of the date you selected (date_val)
    order_list = Event.objects.filter(event_dt__gte=date_minus, event_dt__lte=date_plus)


Also, the reason you're getting downvoted is that posts like yours should be posted to /r/djangolearning - not /r/django

/r/django is for ""news and links about django"".",1534692993.0
unkz,"Docker, on an ECS cluster behind a load balancer.  It's easy and scaling is simple.",1534647425.0
fvox13,"A VPS with apache and mod_wsgi + postgres, followed by a `git clone` or similar is probably the easiest way to build something decently production-ready as a one-off.  You can even get away with using the system python, and the same apache for your media / static, depending on the number of users you're deploying for.  It's cheap and straightforward.

Beyond a scale of ""1 or 2 deployments"" or ""a few thousand hits a day"" you should probably look into a proper strategy involving automated deployment; something like Ansible, Chef, Puppet, or (if you like AWS) CloudFormation.  And maybe swap out nginx + uwsgi for the apache / mod_wsgi option and put your database on another server.",1534656608.0
about3fitty,I think this is a pretty good way to deploy Django: https://github.com/jcalazan/ansible-django-stack,1534645496.0
savuporo,"First ensure your django app is structured with [cookiecutter-django](https://github.com/pydanny/cookiecutter-django) so that you have env vars and settings and all that stuff right.

Then use whatever deployment you like, AWS Codestar is really nice and gives you a ton of control.",1534646451.0
VolkotLos,Dockerized Django containers managed by Kubernetes on a Google Cloud Platform,1534660960.0
AlexKondrashev,"I prefer using django + uwsgi + nginx on VPS for small and on dedicated servers for the apps with higher load. It's no problem at all to scale as nginx can act as load balancer.
Building Docker images takes much longer than deploy code without docker, and docker images are often too big. So my choise is to use virtualenv, not containerization.",1534667720.0
The_Writing_Writer,I know pretty much nothing about website deployment and used pythonanywhere for mine (pythonanywhere.com). Everything else listed here sounds way more complicated. Plus you get one free web app with pythonanywhere (hosted on their domain).,1534655575.0
_under_,"Heroku is probably the easiest choice. It gets expensive, but it'll be worth it just on the hours you save per month managing and maintaining anything else.

If you want a cheaper but less scalable option, try Dokku, which is a self-hosted, open-source, mini-Heroku.",1534660893.0
igncampa,"I just did it for the first time yesterday, though I deployed a Wagtail app, which is obviously also Django/Python but just clearing that up. In my opinion it was kind of a dreadful process at first, but once you manage to do your first setup then the picture gets a bit clearer.

I deployed to Linode on a $5 /m VPS as a test. I had to start from scratch a couple of times but it was really a good learning experience. In my opinion even if you settle for something like Heroku, it's worth going through setting up in your own VPS. You might want to make the switch at some point in the future for whatever reason and it's good having broken that barrier already.

I will probably deploy my site again tomorrow 'for serious' and compile notes about the process. Right now I have a folder of bookmarked websites with the solutions to the problems I encountered on my test deployment and two guides that were really helpful. I can share both my notes (once I make them) or the bookmarks if anybody is interested.",1534648022.0
idiomatik,"I've used Apache mod_wsgi, postgres database. I've also used Gunicorn, Nginx, postgres db and supervisor. 

In both cases deployment has been using Fabric. Also in both cases there is load balancer in front of the Django servers.  

This has been working great for me. 

I was thinking about trying out Docker just to see how dynamic scaling works. ",1534665607.0
andytwoods,I use python's zappa to host my apps on aws lambda. Short blog on it https://andytwoods.com/python-zappa-django-cookiecutter-via-pycharm.html,1534670646.0
k1nkerl,"Another solution is to go a more managed route with hosting from Divio([https://www.divio.com/](https://www.divio.com/). It also uses Docker in the background and is more opinionated. Due to these opinions, you can get nice fluff like separate test and live environments with backup / sync functions, deployment pipeline, solid monitoring and good defaults. You get a boilerplate to get a solid start but you have to learn the toolchain at least a little bit but tutorials and documentation exists ([http://docs.divio.com/en/latest/](http://docs.divio.com/en/latest/)). 

(Full disclosure: I was a user for several years and now work at Divio as an engineer)",1534776620.0
28f272fe556a1363cc31,"I have to ask...  

Why?",1534646631.0
haloweenek,"I only use jinja ...

But the stuff you want to do - it’s possible 

Templates should be differentiated by file extension. 

In case of following stupid questions - no you can’t mix them !",1534664462.0
AlexKondrashev,"I have one project built this way - part of templates are Django's and part are on Jinja2, everything works fine except incluiding templates of one kind to another. I set up jinja2 to use .jhtml file extension, and .html files are usual Django templates.",1534668394.0
haloweenek,Nope,1534663622.0
daredevil82,"has do do with the csrf middleware setting the vary header in the response.

https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Vary

>CsrfViewMiddleware will add a cookie and a Vary: Cookie header to the response. This means that the middleware will play well with the cache middleware if it is used as instructed (UpdateCacheMiddleware goes before all other middleware).",1534689714.0
furyfred,"Here's my advice:

1. Go buy and read Two Scoops of Django before you do anything else.
2. Choose Vuejs for your frontend. Same functionality as React, but so much easier to use
3. Deploy on AWS Zappa. Cheap, scales, and is recommended by 2scoops people.",1534648526.0
timlwhite,"Some things to think about, if you are doing 100% of the Tech work:

1) Will you always be doing it all? Or will you plan on hiring someone and/or outsourcing at some point? Frameworks do make it easier to outsource, but you may pay a bit of a premium on skills.

2) Do you like the way that templating works in React, either with all JS or with JSX? Are you willing to commit to webpack as part of your build? It might be worth doing some pilot projects in Vue and React Native to get a flavor for which you prefer to work in.

3) Have you looked at progressive web apps at all? You could likely use that tech to give a much more app-like experience on mobile.

4) The latest Ionic framework also lets you build a full app-store-app using angular and its own native device bindings. That can really give you an app, but built with web tech.

5) For hosting, have you looked at dockerizing your stack so you can more easily stand it up in various clouds? Also, if you aren’t getting massive traffic, vanilla WebFaction hosting can be very cost effective.

6) Not sure if you are doing real-time at all, but Django-channels enables push in an easy way.

You may have considered that all already, but I thought I’d offer some food for thought!",1534621669.0
ruraro,"Watching closely.

I have a much simpler app running on similar stack. I recently upgraded python to 3.x, django is at 1.11. and I'm running on heroku.",1534655358.0
kunalgrover05,"Honestly, do what's comfortable with you. In the long run it is going to make a very little difference in using Angular or React since both of them are excellent. I have good things to say about Ionic except the final app experience. Something a little more native would be better, but for something like charts, it might not matter.

Definitely get rid of jQuery since it doesn't allow you to write maintainable websites(*hides to avoid getting beaten*). 

Since you are already at the stage where you have time to think about the long term, dive deeper into server management as well and see how your costs add up when you scale. You might find out that running 2 micro instances suffices you completely at just 20$ monthly and you'll be able to scale pretty huge with those. ",1534656084.0
_under_,"My thoughts:

1. AWS _is_ more customizable and cost-effective, but this comes at the cost of management. You previously didn't have to do any sysadmin work, and you'll have to if you switch to AWS. For now, I would delay the switch to AWS until Heroku starts to become cost prohibitive.
1. Start by updating your runtime to Python 3.6. Django 1.9 works with Python 3.6 so the only code changes you'd need to make are on your side (you might need to update other dependencies if they didn't support Python 3.6). Then update Django. (This is where it really helps to have a comprehensive test-suite. You're sure everything works as long as your tests pass.)
1. It looks like you want to build your front-end with JavaScript. This is fine, but it's a lot more work than Django Templates if you're new to it. For Single Page Applications, I use React with Redux. This is just a personal preference though.
1. If you're building your front-end in JavaScript, then you'll need a REST API. Django REST Framework is the de-facto library for this.
1. This is fine.",1534663792.0
faultylee,"I'm currently working on an open-source django+vuejs web app running on AWS with end to end devops setup. It's still at its infancy, feel free to take a look and I don't mind any questions at all. Btw, I'm also currently learning while applying what I learnt. 

https://ngip.io

Some background:
https://www.reddit.com/r/devops/comments/8x742m/need_feedback_and_suggestion_on_an_interview/",1534691271.0
synw_,Do not hesitate to switch to Bulma: it is great. For Vue vs React try both and make your own opinion. I'm in the Vue camp like others here,1534784850.0
LJenkins2000,"I highly recommend when starting new Django projects, or overhauling old projects, start with [https://github.com/pydanny/cookiecutter-django](https://github.com/pydanny/cookiecutter-django).

I just started using the Docker support it provides and it has saved me months of work and head aches.",1535123646.0
don_sno,"Annotation really only works with model fields, so you would have to specify the types for cost/profit thereby solving type issues. You can't really specify 'infinite' on the database level, so that also becomes impossible. As for 0 (or null-values), Django evaluates the annotation to None I believe by default. Now if you wanted to 'annotate' a queryset with non-database values (eg a custom string) you would have to iterate over the results and handle exceptions the same way you would in a regular computation, but you would lose the 'power' of annotation.",1534621624.0
dirtybutter,"For starters, why don't you have this data in a database instead of a flat file? 

Otherwise this is more of a front-end issue. There's nothing really django-specific about the question

Personally using a basic html widget will be a mistake. Not because of performance, but usability. 

A combo box with autocomplete/filtering will be a good start. You might consider suggesting popular options.

Depending on how the data is structured or if it can be mapped to something, there might be a more elegant input mechanism",1534613241.0
godhatesmetoo,"Emacs and vim both support macros. You can also use jq to transform the json into a list of strings first. You might also want to think about having the values in a table instead of a file. Having them in a table gives you easy autocomplete, the ability to query them, you can sort and filter them alphanumerically in the admin and you can add or remove some of them without having to touch your code. But also think about translation if you have i18n enabled.",1534624578.0
SauronsUnderpants,"Pop ups have **never** been required for authentication cookies in the EU. Or for session cookies, setting cookies, shopping cart cookies or any other cookies needed to implement the core functions of a website. Only ad cookies, tracking cookies and other third party cookies require them.",1534598025.0
godhatesmetoo,"As far as I know cookie consent isn't part of the current EU privacy laws, but it might become next year. The most important part about the new EU privacy laws is that you don't transfer personal data to countries outside of the EU, or if you do, only in countries which have a safe harbour agreement with the EU. You also need to inform the users about what personal data you require them to provide, why you do it and inform them about their rights (deletion, etc.). They also should be allowed to delete their data themselves.",1534594909.0
ramse,"You should be using virtualenvs regardless. They completely separate everything between the 2 projects. To access the environments within ssh/shell you ""activate"" the environment you want to work with at that time and deactivate whenever done.

[DigitalOcean has a lot of guides online](https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-18-04), I personally would recommend using Nginx, Gunicorn instead of mod_wsgi and apache.",1534562285.0
SoullessDan,"To configure multiple django sites, especially two different versions of django or sets of dependencies you will definitely want to use virtual environments, that way you can keep all your dependencies separate. 

To run multiple sites you'll want to configure mod_wsgi in your virtualhosts in [daemon mode](https://docs.djangoproject.com/en/2.0/howto/deployment/wsgi/modwsgi/#using-mod-wsgi-daemon-mode) making sure to give each site a unique value for ""WSGIProcessGroup""

[This page] (https://docs.djangoproject.com/en/2.0/howto/deployment/wsgi/modwsgi/) has good information in general if apache is the way you want to go.",1534575867.0
AlexKondrashev,"Check DRF authentication settings, ( http://www.django-rest-framework.org/api-guide/authentication/ ) Postman supports different ways to authorize but you have to know what kind of auth is being used in your project.",1534538180.0
ramse,"You need to assign modelType to a variable in JS.

    <script type=""text/javascript"">
        var model_type = ""{{modelType}}"";
    </script>

You'll need to be aware of ordering but you be able to call upon model_type in your js files.",1534516845.0
Ake_Vader,Create the first group(s) in a custom data migration?,1534668005.0
booooomba,Just create the superuser before migrating for the first time.,1534500246.0
J_Clique,Could you add the category using the Djano Shell before creating the super user?,1534599312.0
kuemmi,"Okay, I'm gonna be that guy and ask: Why?

Maybe if you give some more details about your problem, people can suggest other ways to solve this. Please remember, Django's integrated development server is not meant to be used in production.",1534514127.0
TBNL,"Let go of the concept 'multiple Django servers'. There's no such thing. And as mentioned, runserver is not for production.

Look into uwsgi emperor mode. It can spawn vassals, using different UIDs from the ini configs it discovers.",1534529014.0
daredevil82,"couple things:  

runserver is meant for develop, not production.  its single-process, single-threaded and is highly insecure.

deploy your application with apache or nginx and use mod_wsgi, uwsgi or gunicorn to interface with your django app.

If its not your call, then someone's making technical decisions with highly incorrect understanding. So either find a way to educate them or accept that your problem is one of your own making with no solution.",1534600159.0
ohaddahan,"The system is used locally, not accessed via web.
We need each server that access the system (a few dozens) to have his own server, the reasons for it is that we need to send local processes with the same user.
So we ask the user to provide his credentials, launch a new server with his user and later we can send more processes from that server (without needing his credentials again).

I'm thinking of maybe adding a smaller dummy server/ process that checks on local files / etc.  that will launch Django servers to avoid these conflicts.",1534517066.0
Classic_Camel,"I'm not really sure what you are doing (it's not clear so far from what you said) but I don't think Django was ever meant to cope with running fork() from inside a django app. If you really need multi-processing you can use a queue and some workers or something instead. 

You really might want to revisit how you're building this thing. ",1534541932.0
IReallySuckAtChess,You're approaching this the wrong way. Look at the localisation stuff baked into django and make use of that. Super easy... ,1534505642.0
projektmayhem08,It doesn’t really work like that... the settings are checked when you start the app in most cases. And you’d never be able to change a python value from a HTML form. If you want to store user input and use it to change logic you’ll want to use Models. ,1534495192.0
pancakeses,"You can use something like [Constance](https://github.com/jazzband/django-constance) to provide editable settings (to an extent)

Other options:

https://djangopackages.org/grids/g/configuration/

https://djangopackages.org/grids/g/live-setting/",1534504207.0
haloweenek,Have a downvote ,1534491943.0
oliw,"> This repository has been archived by the owner. It is now read-only. 

Moved to https://github.com/IEEEKeralaSection/rescuekerala/",1534512041.0
pancakeses,"I dont use Heroku, but why not use the fixtures features built in to django, rather than using such low-level tools?

https://code.djangoproject.com/wiki/Fixtures",1534477556.0
yoongkang,"I'm not sure what format Heroku makes backups, but it's likely to be the default Postgres backup format, which you can restore using the same way you would restore any Postgres backup.

Here's the docs in Postgres: https://www.postgresql.org/docs/9.5/static/backup-dump.html

You might need to create the database locally first before you do that.",1534478162.0
fessacchiotto,"Very nice synthetic article on Django. A great learning tool for the newly arrived developer to the framework, as well as a nice refresher for the seasoned developer. ",1534492666.0
bmoe872,Congratulations! Thats very awesome. ,1534447127.0
PedroAM,"Stories like this are inspiring, thanks for sharing it and keep going!",1534451556.0
no_sle3p,Congratulations. AMA on the cards?,1534454063.0
dombrogia,"That is an awesome feeling, congrats! ",1534462780.0
placidified,"Congrats on shipping.

Did you write any unit tests ?",1534479049.0
nickchuck,Nice work! Was AWS hard to navigate?,1534455889.0
daxaxelrod,What a great day! Congrats!!,1534474344.0
anhsirkd3,Congratulations! What's your drink?,1534484044.0
yavanepl,Good for You. ,1534676506.0
Reeveo,"So noob here still learnin about django and will be close to deploying stage soon.I have been thinking about heroku just for ease really and a way of breaking in but it seems that using AWS may be the way to go.

My project is an animal shelter management app.

Can anyone explain why AWS may be better than heroku?

I know one is PaaS and another is IaaS",1534619755.0
NannysFav,"Congrats, glad things turned out how you wanted. How'd you learn Django? ",1534788595.0
mipadi,"It sounds like `Classroom` should have a foreign key to a teacher, and then use [`unique_together`](https://docs.djangoproject.com/en/2.1/ref/models/options/#unique-together) to enforce the rule that a teacher can only have up to one of each block.",1534442704.0
n1ncha,"You can add a `user = ForeignKey(User)` on your Classroom model and then add `unique_together = ('user', 'course_block')` to your Meta for Classroom. [Here is the relevant section of the documentation.](https://docs.djangoproject.com/en/2.1/ref/models/options/#unique-together)",1534442847.0
lordrashmi,"If you are ordering by punched_in_time descending (newest first), wouldn't you want the first item on the list? i.e. 
```
last_entry = ClockPunch.objects.filter(employee=self.request.user).order_by('-punch_in_time')[0]
```

?",1534441204.0
pancakeses,"Try

    last_entry = ClockPunch.objects.filter(employee=self.request.user).latest('punch_in_time')

Edit: reread the problem statement and modified my response. ",1534458503.0
IReallySuckAtChess,Lists are indexed from 0.,1534505308.0
i_like_trains_a_lot1,"So basically you have a m2m relationship with the same model and you want to walk through the chain? You can do that manually and build the list of instances  and pass it to the template through the context object, or use a 3rd party library such as https://github.com/django-mptt/django-mptt that might solve the problem you have.

Hope it helps!",1534444723.0
jafrancov,"if your model is something like:
```
class MyGroupModel(models.Model):
    name = ...
    father = models.ForeignKey('self')
    # ...
```
AND if everything starts with group named 'global, you could do something like:
```
def print_children_groups(group):
    children_groups = group.mygroupmodel_set.all()
    for g in children_groups:
        print(g.name)
        print_children_groups(g)
```
You could add some spaces or similar to know which is related to which group on the printing line, then just left to call the function:
```
# you already have to had the main group on a variable, here will be my_global_group 
# ...
print_children_groups(my_global_group)
```
As I said, just format the printed out results.",1534446346.0
,[deleted],1534436090.0
,Clearly you didn't read the logs.... it's literally laid out for you. If you're trying to set the secret key with environment variables then it should actually exist in the environment..... ,1534436336.0
cendant,So sorry this post made you uncomfortable. I'll look for help elsewhere. Thanks,1534454935.0
ItsRyguy,"Add a method `get_order_details` to your `Order` model and query `OrderDetails.objects.filter(order=self)`

You should probably also add similar methods for adding and deleting order details.",1534450791.0
i_like_trains_a_lot1,I am thinking about https://docs.djangoproject.com/en/dev/topics/forms/modelforms/#inline-formsets but I'm not really sure if that helps you as the problem you have to resolve is not that clear to me.,1534427851.0
badpython,I have no idea what the question is ,1534435373.0
TheoR700,"If you aren't a frontend developer who knows a lot about CSS and you don't really want to be then I would suggest using something like Bootstrap or Bulma. 

[https://getbootstrap.com/](https://getbootstrap.com/)

[https://bulma.io/](https://bulma.io/)

But like the other user has mentioned, this is not a Django question. I would suggest you find a HTML/CSS subreddit.",1534423786.0
TheDumbfounds,"Good question, I struggle with that, too.  I'm currently testing out  material design, which is a design system with specific guidelines! Check it out here: [http://material.io/](http://material.io/)",1534432513.0
IReallySuckAtChess,"Use bootstrap and naturally you can choose something built on it so you can use the bootstrap documentation and extend it with the specific stuff documentation.

I highly recommend the bootstrap stuff by CreativeTim. They make gorgeous stuff and the free stuff is more than enough for pretty much everybody whilst being incredibly comprehensive. ",1534505570.0
booooomba,Thats not a django question,1534419529.0
J_Clique,"One thing that helped me ensure my table was correct before importing was to add some data using Django Admin, then export it in the file type you want, then edit that file, rename and import. ",1534426788.0
booooomba,We need the full error message,1534408918.0
IReallySuckAtChess,"Do validation server side to guarantee what you want, and then use Javascript client side to ensure that they can only pick one from either... ",1534401602.0
haloweenek,Override clean method in form. That way you can validate multiple fields depending on each other.,1534410042.0
zettabyte,"Two choices, validate on the form field or on the form as a whole.  If *exactly one* choice is required, then your if statements will be a little different.

    # https://docs.djangoproject.com/en/2.1/ref/forms/validation/

    def clean_bar(self):
        # If foo is defined before bar in the class definition
        # then you can clean bar and put the error message
        # inline on the form.
        foo = self.cleaned_data.get('foo', '')
        bar = self.cleaned_data.get('bar', '')
        if foo and bar:
            raise ValidationError('Nope, there can be only one.')
        return bar

    def clean(self):
        # Or you can put the error message on the form.
        foo = self.cleaned_data.get('foo', None)
        bar = self.cleaned_data.get('bar', None)
        if foo and bar:
            raise ValidationError('Nope, there can be only one.')
        return self.cleaned_data
",1534435126.0
never_safe_for_life,"I recommend putting your virtualenv outside of your repo. For instance on Linux put them under \~/.virtualenvs

This works as well as .gitignore, it also has the benefit that you're explicitly calling out that ""environment"" resources are tied to the machine, not the code. ",1534377042.0
rincewind123,You need to create a .gitignore file! Check out here https://git-scm.com/docs/gitignore,1534370398.0
mattaw2001,"If you haven't already Google pip freeze and add the requirements.txt  file to your repo. Then everyone who wants the exact same virtual env can do pip install -r requirements.txt

Matthew",1534379208.0
IReallySuckAtChess,Just change to the app then run git init there? Or am I missing something? Use .gitignore to exclude files and directories you don't want to include,1534401713.0
AlexKondrashev,"My usual practice is:

* If your virtualenv is in e.g. folder named **.venv** then put this folder to **.gitignore** file.

* save your virtualenv state to file: **pip freeze > requirements.txt**

* **git add requirements.txt** to your repository 

Than you can easily initialize a virtualenv with the same libraries:
**virtualenv .venv && source .venv/bin/activate && pip install -r requirements.txt**",1534498512.0
azoughbi,You should consider using [.gitigonre ](https://help.github.com/articles/ignoring-files/)file ,1534370564.0
souldeux,"Read up on query strings. The first query string argument in your url is `make`, and has a value of `Peugeot`. The second one, is `model`, with a value of `5008-2017`. The first one will always be denoted by a question mark like `?foo=`, and subsequent ones are denoted with an ampersand like `&bar=`. 

https://en.wikipedia.org/wiki/Query_string",1534340586.0
AlexKondrashev,Ampersand is just a divider between GET parameters in URL.,1534345100.0
rackmountrambo,"POST A TRACEBACK.
",1534338821.0
jafrancov,"If you are familiar with python, Django would be easy somehow, the particular thing to learn (I guess) is how does Django process the request and response data through itself, mostly Ajax for your particular project.

You won't need to write plain SQL, Django has an ORM that makes life easier, although, knowing SQL will help you a lot!

For the frontend on showing all the data you require to render, you may want to take a look on datatables and django-datatables-view for an easy integration, this is for the part that you will give to the users the chance to modify/update some data, and refresh itself after the update, datatables will help you with that.

Just remember, is web, if you measure the performance when sending the data, and takes more than a few seconds, rethink the amount of data you want to show and try again until you reach how much is good enough for each page.",1534305737.0
Sonic_Pavilion,"This is ok. If you're comfortable with python you could spend an afternoon (4-5 hours) on Django tutorials and try to start solving your problem. I'd suggest doing the official Django tutorial available in the Django docs. You should also read a bit of html and CSS, because if you want to present a spreadsheet/data frame/DBtable or whatever it will be useful for formatting

Edit: [this image](https://goo.gl/images/2eytB3) may help",1534303428.0
CumberbunBundlebunch,"Depending on your specific use case, I'd argue that a web application could be overkill for this. You could achieve the same thing by creating DB users, assigning the correct permissions, then giving them a tool like Postico, Sequel Pro, or whatever your GUI of choice happens to be. ",1534307982.0
picasshole,"I'm not sure who your users would be but if it's internal then you can use the builtin Django admin to let users create / update / delete data. It even has various options for allowing you to specify filtering and sorting.

You're probably best just running through the 4 tutorials in the Django docs, it'll take an hour or so and you should give you an idea if you like it.",1534411123.0
,This is rudimentary,1534304947.0
personproxy,"I think, if your database already exists it might be really tricky to get it working with the Django ORM. It might be much easier to use SQLAlchemy with Flask and WTForms because it's a much more flexible stack.",1534331433.0
karacic,Have you `save()`-ed them?,1534319988.0
zettabyte,"So putting some code to it:

    # Django 1.11, fwiw.

    In [1]: from django.contrib.auth.models import *

    In [2]: u = User.objects.get(pk=1)

    In [3]: hex(id(u.groups.all()))
    Out[3]: '0x7f7b028969b0'

    In [4]: hex(id(u.groups.all()))  # Confirmed, no prefetch => new query set.
    Out[4]: '0x7f7b028a01d0'

    In [5]: u = User.objects.prefetch_related('groups').get(pk=1)

    In [6]: hex(id(u.groups.all()))
    Out[6]: '0x7f7b028bc9e8'

    In [7]: hex(id(u.groups.all()))  # Confirmed, prefecth => same query set.
    Out[7]: '0x7f7b028bc9e8'

    In [8]: u.groups.all()[0].foo = 'spam eggs'

    In [9]: hex(id(u.groups.all()))  # Still same query set...
    Out[9]: '0x7f7b028bc9e8'

    In [10]: u.groups.all()[0].foo  # Confirmed, prefetch => same model instances in the queryset.
    Out[10]: 'spam eggs'

If I'm understanding the issue you're describing, then I'm unable to replicate it locally.
",1534361106.0
athermop,"For something so ... the word I want is slipping my mind at the moment ... think ""temporary"" and ""not-super-mission-critical"" ... as queued messages I think you'd want to use something like Redis rather than an ORM on top of a real database.

Of course Django could make a fine framework for all the rest of your stuff.

It would work as your message queue as well, but it'll likely be very heavyweight and increase your scaling costs for no real gain.",1534283613.0
gilgamezh,Instagram does,1534304979.0
4022a,Use Firebase. It is much more suited for this type of application. It is also infinitely scalable right out of the box (as long as you can pay for it).,1534338715.0
mr_baboon,"We do this at work.

If you want to store messages for delivery to devices later in a sane way, the db makes it very easy.  You can also wire up channels for pushing the messages to clients as they are sent (read: created in db) if they are currently connected.",1534351210.0
hishnash,"Channels will handle this well for you, I would suggest not storing the messages in the same DB layer as you do the user auth etc.  

--
shameless plug: i have been working on a framework to sit on top of channels to provide a more DRF feel to your consumers. https://github.com/hishnash/djangochannelsrestframework",1534604618.0
roysta,DataTables!  :),1534276690.0
Niicodemus,`self.request`,1534272112.0
,[deleted],1534267500.0
ehsangd,"I don't know about the most popular, but I've used django-summernote for this purpose.",1534262017.0
banknugs,I use Django-ckeditor. Really easy to customize and use. ,1534275508.0
IReallySuckAtChess,Sounds like you should be looking at a CMS in addition to just a markdown editor. I highly recommend using Wagtail. It has a really awesome Richtext editor where you can strongly determine how things are displayed on your page. Highly recommend it. You can use a traditional markdown editor with it too. ,1534275725.0
godhatesmetoo,I use [django-trumbowyg](https://github.com/sandino/django-trumbowyg). It's decent.,1534271287.0
joewails,Recently I used [TinyMCE](https://www.tiny.cloud/) and I liked it. There is also a Django package for easier integration at [https://github.com/aljosa/django-tinymce](https://github.com/aljosa/django-tinymce).,1534393333.0
nim65s,"Just for info, [django-markdownx](https://github.com/neutronX/django-markdownx) has a drag & drop support for embedding stuff… And that's awesome !",1534454381.0
victoriabittahhhh,"I found django-rq to be extremely simple, with little configuration. The only qualifier being that it didn't work great locally on a windows machine.",1534221762.0
Panzelva,"I really like Huey, it is much simpler than Celery

https://huey.readthedocs.io/en/latest/",1534220189.0
spapas82,"I recommend using rq with redis and django-rq to integrate it with django. Celery is an overkill for most use cases.

I've also written a couple of comprehensive articles for django-rq if you are interested: https://spapas.github.io/tag/django-rq.html",1534247798.0
colly_wolly,"Celery is a pain in the arse to set up, but once it is working it generally stays up for a long time without problems.  ",1534243360.0
MDziwny,"Celery is still the standard task queue in the industry and is not that hard to configure, especially with Redis instead of RabbitMQ. And once configured, it's really straightforward to use it.

About message brokers, RabbitMQ is very good but the learning curve is quite steep. Once mastered, it's really a pleasure to use it in complex architectures. If you know a bit more than the basics, writing a custom distributed task queue is not very complicated.",1534247034.0
brtt3000,Django-RQ is easy mode if you have a redis server running. Celery is too much for most use-cases.,1534254717.0
yoongkang,"The industry standard is still Celery.

What trouble are you having? I find that the official docs are up-to-date and simple: http://docs.celeryproject.org/en/latest/django/index.html

I've heard python-rq was simpler and more lightweight.",1534221682.0
Tpm248167,We just started replacing celery with RQ in all of our services. It’s way simpler to set up and comes with some built in monitoring facilities.,1534249793.0
snihal,"We were using celery with RabbitMq on AWS. Since RabbitMq has to be self managed, we switched to Elastic Cache (Redis). Simple transition - just some config change. ",1534255186.0
tkc2016,"I'm using it for a project of mine with a lot of success.  It was a bit rough getting it off the ground, since the Django/Celery integration piece doesn't have great specific examples, but once you get it up and running, it's pretty smooth sailing.",1534219113.0
PhiThor,I have tested django-background-tasks and it seems very simple and easy to use. But I have never used celery and I am only a hobby developer. ,1534246668.0
Crazykiller789,"Celery is good. Takes a little bit to learn but build a small project just for celery and play around with it. The docs were good for me at least. 

For the message broker I used rabbitmq. For me it was easy to setup and worked well for what I used it for. ",1534263243.0
STANDARD__NERD,I recommend django-q over celery http://django-q.readthedocs.io/en/latest/.,1534264377.0
kmmbvnr,"BTW, there is very interesting fresh and simple python task queue implementation https://dramatiq.io/motivation.html",1534380578.0
krumg,"Celery is still #1 task management tool and it is  not very novice friendly indeed. You may want to start with ""custom management command"" instead. It is not as flexible as celery but is way more easier to work with for a beginner.",1534217323.0
philippeowagner,"We use [https://github.com/arteria/django-background-tasks](https://github.com/arteria/django-background-tasks). It's simple and comes with a small footprint. At the end, it depends on the project's needs.",1534260658.0
softnix,"I would suggest Django release notes to get you up to speed to latest release. That is what I used. If you are migrating an old project to a newer release you have to pay closer attention but otherwise you can skim for the highlights. 

https://docs.djangoproject.com/en/2.1/releases/
",1534211224.0
mbrochh,"From 1.8 to 2.0 I don't think much has changed. You have subqueries now in the ORM and you can use easier syntax for URLs and `user.is_authenticated` is finally a boolean. Those are probably the biggest changes.

You 1.8 Dango-fu still applies :)",1534213025.0
IReallySuckAtChess,"Just read the release notes since 1.8. Shouldn't take more than an hour for the five versions since. The things that stand out to me is the use of path, user.is_authenticated is now a boolean and 1.11 brought a ton of nice stuff to the ORM and some nice decorators if I remember correctly. Honestly you could probably just jump into it and you'll naturally discover the small differences as you consult the documentation but pretty much everything that worked then will probably work now. ",1534223944.0
Niicodemus,"Creating an actual Model dynamically is not built into Django at all. There might be some third-party solutions. However, you can probably get the functionality you with with JSONField or just a Model with two fields, Key and Value that can be set to whatever the user wants.",1534202425.0
ItsRyguy,"Hey OP, this is not a trivial thing to do but it happens to be something that’s a core component in my own app. It took me a couple iterations to get it right, and the only resource I found online is pretty outdated. I’ll update this comment with a link to a repo with a basic implementation in a few hours.",1534204527.0
harnomogram,"Sure thing, that's what [modelforms](https://docs.djangoproject.com/pl/2.1/topics/forms/modelforms/) are for. Consider going through documentation (and its [tutorial](https://www.djangoproject.com/start/)) to kickstart your Django adventure, it's really extensive and well-written.",1534196270.0
ehsangd,"I'm trying to do something like that right now. Some of my objects are going to have their especial fields and I don't know how many fields I'm gonna need. For now I'm trying to get the user input via a Reactjs frontend and send it to a DjangoRestF backend, then save it in a model with just one text field as a json text including everything. But at the same time I'm thinking about moving to flask!",1534242522.0
BrianBola90,You need to learn the concept of a MVC framework. Or MVT in django's case. ,1534196966.0
jafrancov,"If you have installed it with pip:

`pip freeze`

That will show you all packages installed through pip with their version.",1534213096.0
IReallySuckAtChess,"    try:
        import django
        # Let your code do what it should if django is installed
    except Exception as e:
         print(e) 
         # Do whatever you need if it's not found but typically that's just quit() ",1534275899.0
c17r,"Your `create-post-request-1.html` / `create-post-request-2.html` are calling `{% url 'initiate_project' %}` but the ""initiate_project"" url requires a PK, hence the error.

I would redo your urls to be:

* projects/
* projects/create
* projects/<int:pk>
* projects/<int:pk>/request-1
* projects/<int:pk>/request-2

So the current project PK is always available to you.",1534161439.0
vaibhavhrt,"you need to call your urls like this:  
`{% url 'initiate_project' pk %}`  
in your template where pk is a variable storing the integer pk. You can get the id of an object in views after creating it or use `create_new_project.objects.all()` to get a queryset of all projects thats there in your db",1534191944.0
emihir0,"Please reformat your code so it is readable.

What you probably want is a related model, either through one-to-one or through many-to-one key to the `Project` model. Then you use the forms to simply display the related models. You don't save forms, you save instances of a model.",1534158862.0
zed_zed_top,"I think the fastest to implement, that would be fine for most levels of volume, is a count query based on userID and message creation time. If that becomes unreasonable you could attach an incrementing number to the user and run a cron job to reset it every day. If that becomes unreasonable you could put a cache in front of it all. ",1534136528.0
dedsm_,"start simple, index creation time _and_ the foreign key to the user in the object, and do a simple count with the time constraints before inserting inside a transaction, it'll scale good for a while ",1534147289.0
tink3rio,"What type of form are you using? Look at the type of form and check the init method for what the expected parameters are.
",1534128239.0
thescottwaud,Can you post the error?,1534126488.0
lordrashmi,Can you post the code for LawyerForm?,1534127368.0
tink3rio,Looks like you’re passing two args but it only want 1. Python passes self as well as your arg. So check the form.,1534130128.0
tink3rio,Because self is passed automatically and if you add a param there will be two passed.  My guess is it’s something to do with the form init and you probably want to be using a model form. Just a quick guess though.,1534128415.0
black_loop,Check if you have a view with same name written above this view. ,1534136694.0
thepercept,"can you do this before the line which gives the error in your def weneedlawyers(...) views .py :-

print(request.POST)

so that it's clear whats been sent in the form ?",1534138580.0
DisagreeableMale,Are you verifying each chunk of code with unit tests as you go to ensure they all do what you want?,1534131785.0
kvdveer,"The error does not appear to be in this piece of code, although it is hard to say without a stack trace.

You are going to need to hone your debugging skills - this kind of problem is virtually impossible to solve by looking at a code dump on Reddit.",1534142966.0
superdee72,"Answer:

    Animal.objects.filter(animalsounds__isnull=False).distinct()",1534111772.0
japanfrog,"Out of curiosity, wouldn't it have been less work to just read that section in the Django documentation than to create a thread herre? I see that trend often here, yet a lot of the questions are very clearly exemplified in the docs.",1534118770.0
pancakeses,"These posts should really be posted to /r/djangolearning
",1534122363.0
Mekhami,"this is not a 'service' in any way shape or form, you're just giving a fancy name to 'move code into functions'.",1534115769.0
Cictani,"Why not just create a deduct method in the user model and put there the logic. Isn't django's phylosophy fat models?

Then your code would be:

    def preform_update(self, serializer):
        user = self.get_object()
        user.deduct()
        user.save()
        return Response(dict(), status=status.HTTP_200_OK)

I don't understand how an extra class with just a single method will be more maintainable than putting that method into the model. And if you really want to put the functionality into another module you can just do it with a function.  [https://www.youtube.com/watch?v=o9pEzgHorH0](https://www.youtube.com/watch?v=o9pEzgHorH0)",1534114700.0
xyz123ff,"Use the ORM's `filter` method to filter the data returned from the database. Presumably, if there is content specific to individual users, your models will often have foreign key references to the associated User model. You can filter in views and then add the data to the context, such as:

`Model.objects.filter(user=self.request.user)`

Where 'model' above is whatever Django model has that association to a particular user.",1534094740.0
xyz123ff,There should be no issue with adding multiple items to the context dictionary. Are you sure the items you're adding are valid items?,1534094304.0
bartergames,"I don't know what may be happening but, in the meantime, you could put all the data you need for the template in a dict inside the context dict, like: context = { 'data': { 'subjects': ..., 'temp: [...]}}, so you only have one key.",1534111465.0
ragnaror1,"https://docs.djangoproject.com/en/2.1/topics/email/

do this in form.save()",1534091595.0
chanamasala4life,"If you're somewhat experienced with other frameworks, /u/pydanny 's Cookiecutter-Django is for you: https://github.com/pydanny/cookiecutter-django",1534088314.0
i_like_trains_a_lot1,"I always start a new project from scratch using ``django-admin startproject`` because most of the times, projects have different requirements and you might spend more time learning about the skeleton project features than setting everything up yourself. ",1534102176.0
porksmash,If you're learning I'd start with what django gives you: https://docs.djangoproject.com/en/2.1/intro/tutorial01/#creating-a-project,1534087822.0
,"Depends how advanced.... Cookiecutter for something simple. 18F for more complex rest framework splits.

Care to explain your downvotes. I'd love to see you recommend better options.",1534090595.0
colly_wolly,"I have started a number of projects, and haven't seen the need for any skeleton project. Follow the tutorial and use what the gives you. 

Unless of course you have specific needs..... ",1534102562.0
Sonic_Pavilion,"I haven't tried many, but I liked one called ""Saleor"" which is a Django e-store ""skeleton"". You can find it on GitHub",1534134640.0
VROUMMMMMM,"Check out DjangoX, which is lightweight and uncomplicated contrary to Cookie cutter, and which includes Django Allauth.",1534665473.0
oliw,"> nothing beats writing the right queries

So do that too. This article seems to assume you can't do that from the start, or that it's not worth your time, but if you get into the habit of *thinking about how you use the ORM*, it's pretty simple to write efficient queries first time round.

The more you do this, the easier it becomes.

And cache too.",1534069425.0
SignificantTomato3,"There's good series of articles called ""Django, fast"" on this kind of optimizations.

https://blog.mirumee.com/django-fast-part-1-8d068a1b14bc
https://blog.mirumee.com/django-fast-part-2-d73a4ecd61f3
https://blog.mirumee.com/django-fast-part-3-a02da6f12418

You'd be most interested in the last part, however, all of them are worth reading ",1534098647.0
mattaw2001,"Django debug toolbar, so great at showing where the queries come from and how many.",1534077669.0
null_vector,Why don't you return the task Id and have an endpoint to check the status of the task?,1534059314.0
blbil,"Simplest solution I can think of is to make the same request after a delay. Potentially with a flag to make sure you're not spawning a whole bunch of new celery tasks.

On the frontend side... I'd try to wrap that whole retry logic in a promise. So that it just looks like a regular api  call to the rest of your frontend code. And you can bake the error case if too many retries happen into the promise by calling its reject function.",1534093956.0
yoongkang,Could you poll a Tasks object (that your celery periodically writes to depending on its status)?,1534225225.0
chiproller,You may have better luck asking in the reactjs sub.  More subscribers as well.  ,1534051014.0
dXIgbW9t,"The index will be built to include your existing data, you don't need to worry about that.",1534049428.0
nkuttler,"Could you CREATE INDEX CONCURRENTLY? Not supported by the ORM though, https://code.djangoproject.com/ticket/21039",1534040884.0
der_hump,You can create a manual migration and run the mysql to create rhe index.,1534047482.0
oliw,"`models.DateField` is different from `forms.DateField`. You need to use model fields here (as you are) and that doens't take an input formatting (it takes and provides a Python-native datetime.date).

When truncated (eg by year) a full date[time] remains, it's just one'd out for the units that have been truncated (so that same-year values equate). Eg 2018-03-04 and 2018-06-02 both become 2018-01-01.

If you want to output the formatting in a sensible way (so you're not showing truncated units), you'll need a mapping from your `group_by` variable that you're passing into Trunc. You resolve this in your view and pass it back out to the template for formatting.

I guess you could *probably* do this in-DB too but I can't think how of the top of my head and I don't think you'll see any benefit from it.",1534078307.0
cjf4,"I'm really interested in hearing any opinions on this as well, I've been considering doing something similar.",1534039667.0
Jgrbot,"Sounds like a ball ache. Depending on how complicated your data is I would just recommend using chart js - I'm pretty sure there's a few django-chartjs extensions out there, but having never used one I wouldn't know what to recommend.

If you are deadset on using a python visualisation library to create a dashboard I would recommend using Bokeh and Bokeh Server. ",1534053976.0
hpca,"Why not just make a flask app instead and have a route for the dash app built in?

Edit: Sorry, just re read your post. In order for you to create that dash app in your Django project, you have to create an interface from your front end to the back end via react. You would be reinventing the wheel, I'd take another look at the Django-dash plugin first and try to work with it in a test project.",1534041026.0
maventree,"If `name` is known ahead of time, just do `object.name = value`. Otherwise, do the first (`setattr(object, name, value)`).",1534003665.0
athermop,"You should almost never call dunder methods (those starting with a Double UNDERscore) yourself.

Knowing that rule lets you answer the question yourself.",1534005622.0
karacic,"Create a new custom method of your class and keep you common logic there, and just call that method in both get and post methods.

Tip: you can access the request throughout your class with `self.request`.",1533971799.0
projektmayhem08,"You'd do:

    if request.method == 'POST':
      # logic here
    elif request.method == 'GET':
      # logic here",1533967986.0
TBNL,"Familiar with the library and imo it's very well written. 

Some things worth considering:

* If edge caching is important, you might not want this amount of flexibility.
* If you *do* want this flexibility, it's worth considering GraphQl. More of a standard and because of that more client libraries and tooling.",1533989466.0
justanotherwebdev999,"I wish I had found this when I first started my project. The returned object seems to be a slightly different format, so it might be hard for us to change, but I wanted to share it for others that are starting a project just now. ",1533960918.0
Improvotter,"This is pretty impressive, I’ll definitely use this.",1533969481.0
ghostofgbt,"Hmmm, all that fanciness but it doesn't support Django 2.0? Looks awesome but isn't that kind of a disappointment?",1534011331.0
NotSelfAware,Nifty!,1533980450.0
Djwasserman,This is awesome. If they could just add this for testing...,1534035572.0
kennydude,"> DREST uses Django's Prefetch object to prevent N+1 query situations and guarantee that your API is performant. 

So all I have to do is ensure I write my Querysets properly and I don't need this to make fast APIs?",1534327794.0
karacic,"As far as I can see, you are already sending student objects, so you can already access all the student fields in your template.",1533972225.0
projektmayhem08,"Out of curiosity, why are you overriding the save method of Classroom? Also, why not just pass a queryset to the template using Student.objects.values('nickname', 'attend') ?",1533968775.0
charettes,"I think you forgot to wrap your `When` in a `Case` and didn't correctly refer to `Product.cost`.

    annotate(
        profit_margin=Sum(
            Case(
               When(
                   status__name__in=['In Stock', 'Not Sold']),
                   then=F('profit') / F('cost'),
               ),
               default=0.0,
               output_field=FloatField(),
            )
        )
    )

On Django 2.0 you can also use the `filter` argument of `Sum` to reduce the boiler plate.

    annotate(
        profit_margin=Coalesce(
            Sum(
                F('profit') / F('cost'),
                filter=Q(status__name__in=['In Stock', 'Not Sold']))
            ),
            0
        )
    )",1533953564.0
unkz,http://www.django-rest-framework.org/,1533931591.0
apreche,"Your code seems correct at first glance. try sticking a

    {{ request.user.userprofile.timezone }}

 in there to make sure the time zone is what you think it is.",1533915810.0
nkuttler,"One is a property of the view object, the other an argument to the view method. Yeah, they are probably identical.",1533897764.0
Vitrivius,"They point to the same object. `self.request` is assigned in the factory function that is returned from [`View.as_view()`](http://ccbv.co.uk/projects/Django/2.0/django.views.generic.base/View/#as_view). I would guess that the reason for passing the `request` argument explicitly is to make it easier to convert between class based views and function views. And it also makes it more clear that methods such as `get` uses the request object.

I recommend that you follow the convention from the django source code and examples in the docs, and use the `request` that is passed as an argument instead of `self.request`.",1533903395.0
buleria,"Definitely 2. If using DRF views is not conflicting with the rest of the app, ie. you don't need to do any routing magic, I see no reason not to use them.",1533893012.0
execrator,"If the current code is working and you can implement new features with it, there's no reason to replace it. If it's buggy or hard to extend, you've got a reason to consider a replacement.

If you decide for replacement, go all in or don't do it at all. ""I'll convert Xs as I work on them"" is something I've told myself, but the reality is you need a real plan to get it all replaced or it won't get done.

If you replace only _some_ of the existing views, then you have the worst of both worlds. You still have buggy or difficult-to-extend views, plus you now have two systems for handling views.

I know you're not talking about a rewrite, but the Spolsky point about accumulated bug-fixes and how they're _valuable_ rather than a problem probably stands here too. https://www.joelonsoftware.com/2000/04/06/things-you-should-never-do-part-i/.

> Back to that two page function [you're thinking of rewriting]. Yes, I know, it’s just a simple function to display a window, but it has grown little hairs and stuff on it and nobody knows why. Well, I’ll tell you why: those are bug fixes. One of them fixes that bug that Nancy had when she tried to install the thing on a computer that didn’t have Internet Explorer. Another one fixes that bug that occurs in low memory conditions. Another one fixes that bug that occurred when the file is on a floppy disk and the user yanks out the disk in the middle. That LoadLibrary call is ugly but it makes the code work on old versions of Windows 95.

> Each of these bugs took weeks of real-world usage before they were found. The programmer might have spent a couple of days reproducing the bug in the lab and fixing it. If it’s like a lot of bugs, the fix might be one line of code, or it might even be a couple of characters, but a lot of work and time went into those two characters.

> When you throw away code and start from scratch, you are throwing away all that knowledge. All those collected bug fixes. Years of programming work.",1533910419.0
mroximoron,"How good are the tests? How much time can you save by using default, and will that be enough to refactor the other code too?

I think that if you can arrange to change the old code first before starting with adding you should go for that. If it's not an option stay with the same style.",1533922756.0
andrewingram,"If you're going to use generic views, use the ones provided to you. If you need custom views, just write a function. Life is easier with functions. I used to be all about generic class-based views (I wrote a relatively popular library providing a bunch of them), but they're more trouble than they're worth.",1533899753.0
comiconomenclaturist,"Define a method in the user profile model that checks if the role is  CO, CA, or ST and if so, return true. Then call it in the template with request.user.userprofile.is_cocast",1533888982.0
haloweenek,"Override clean ?
And add required false + hidden widget on the JSON field in form.
In overridden clean rebuild object from cleaned_data",1533886768.0
faultylee,"Nice, thanks for sharing, exactly what I needed to integrate into my project.",1533908145.0
lamelos,Very interesting to see your approach. Thanks for your work :),1533910400.0
gtalarico,"got dammit who did this!?!    
That's why we can't have nice things.  
I don't know what I expected.

[http://prntscr.com/kh5zdl](http://prntscr.com/kh5zdl)",1533926728.0
mypirateapp,"Is this a single page app template or multipage app template? it looks SPA, any templates for an MPA",1537964141.0
TheoR700,">unfortunately I didnt find much resources from where I can learn how to use its functionalities.

You didn't find their long list of links to all of their documentation on their GitHub page?

[https://github.com/django-oscar/django-oscar](https://github.com/django-oscar/django-oscar)

I have never used Django-Oscar, but I am almost certain their documentation is useful based on simply glancing over their README. They even link a few videos on Django-Oscar.",1533844459.0
throwbible,"If you just want to run a webshop, building one with Django may not be the best way of going about it.

There's a lot of moving parts in a modern webshop, and comments and reviews aren't exactly the first things you need to worry about. Designing a proper order flow, search and, as you point out, product categories and by far the hardest problems.

If you just want to sell something, pick an of the shelf ecommerce solution, or build on Oscar.

One case where I would recommend building your own solution is if yo have a large number of very different product categories, or if you have an existing backend infrastructure (ERP, warehouse management, and so on). 

One observation regarding comments and reviews: You don't need them. Unless you're Amazon, don't expect any happy customers to review a product, most people won't bother. Comments will be misuse by angry customer to vent their frustration and you end up trying to do customer support via your commenting system. ",1533895045.0
chanamasala4life,"Don't roll your own system until you've extensively reviewed all actively developed options here: https://djangopackages.org/grids/g/ecommerce/

If you're looking to start small and customize from there, check out Cartridge: https://github.com/stephenmcd/cartridge It's relatively simple to grasp and has some good tools to extend the system if the built in customization doesn't cut it for you.",1534088733.0
haloweenek,Check Django lfs,1533849606.0
DullBlade0,Youd either have to call the view and pass an arg to change the order or render the table with JS and do the ordering and switching there. Maybe look into Datatables or a similar JS library?,1533844808.0
IReallySuckAtChess,You can do it client side or server side. In most cases client side with Javascript would be the way to do it. Datatables is what I'd recommend especially since you always want to reduce server load and number of queries. ,1534225749.0
porksmash,Your models need to have a standard type of relationship to each other - either a foreign key or many-to-many. What you're doing with the list is not supported by Django models. ,1533852294.0
karacic,Have you tried customizing your serializer? http://www.django-rest-framework.org/api-guide/serializers/#customizing-the-default-fields,1533881332.0
Freezy_1,"Thanks stranger, that looks very helpful!",1533839074.0
SkawPV,"Thanks a lot, just what I was looking for after reading Django for beginners from William S. Vincent.

Tip: You can download them if you click on ' v: latest  ' at the bottom left.",1533887084.0
SkawPV,"By the way, chapter 7 and 8 of  [ **Django Projects Cookbook**](https://books.agiliq.com/projects/djenofdjango/en/latest/index.html)  seems missing:

[https://books.agiliq.com/projects/djenofdjango/en/latest/chapter7.html](https://books.agiliq.com/projects/djenofdjango/en/latest/chapter7.html)

[https://books.agiliq.com/projects/djenofdjango/en/latest/chapter8.html](https://books.agiliq.com/projects/djenofdjango/en/latest/chapter8.html)",1534089023.0
netok,"[Located](https://github.com/wagtail/django-modelcluster/blob/master/modelcluster/contrib/taggit.py#L34) the problematic code:

	# FIXME: we ought to have some way of querying the tagged item manager about whether
	# it has uncommitted changes, and return a real queryset (using the original taggit logic)
	# if not
	return FakeQuerySet(
		self.through.tag_model(),
		[tagged_item.tag for tagged_item in self.get_tagged_item_manager().all()]
	)

It uses this FakeQuerySet that immediately evaluates each instance's tags one by one, thus causing huge number of queries.",1533838553.0
dershodan,"if you are importing models in your migrations e.g. 

    from myapp.models import User

replace this with 

    def my_migration_operation(apps, schema_editor):
        User = apps.get_model(""myapp"", ""User"")
        ...

See https://stackoverflow.com/questions/37765307/why-use-apps-get-model-when-creating-a-data-migration#37769213 for more information.",1533818000.0
andrewingram,"Does your app run normally? i.e. do all other management commands (runserver, shell, etc) work fine?",1533808112.0
GuyNamedEDd,This error has nothing to do with your database. If the webapp was able to be migrated before then something you've changed broke it. I'd suggest reverting your code back to a state that can be migrated and starting over. ,1533808889.0
daredevil82,"sounds like you might have done something that messed with the django bootstrap process.   without any details on your project configuration, change log, etc, I'm afraid you're going to get little help.

",1533812957.0
GuyNamedEDd,What version of Django are you using?,1533814787.0
tagnydaggart,"Autocomplete in the admin isn’t too hard and comes with Django 2.0. If that doesn’t suit your needs, check out https://github.com/applegrew/django-select2/ which is very flexible. This is my go-to for autocomplete widgets in Django.",1533781541.0
kennydude,Django Suit exists but it uses Bootstrap 2 and is barely maintained anymore (personally I find it breaks more things these days than it tries to improve),1534327882.0
marcosdumay,"You are in for a big and bad surprise.

Just to get what level you are, does that python script output HTML? If so, you might want to search about CGI.",1533776429.0
Niicodemus,"Fundamentally yes... your python file takes inputs and produces outputs. Django allows you to take inputs via HTTP and send outputs via HTTP. So you still need to write all the glue code in the middle. It only takes an hour or two to go through the django tutorial, and by the end you might have a better idea of how easy or difficult it will be depending on your current script. But it won't be just a drop-in thing.",1533777701.0
hikarinoyuki," Basically yes, just follow the django doc 'getting started' or sth, it's quick and easy, but I guess you should first learn some basic things about web dev",1533798956.0
ehsangd,"Personally, I find flask so much easier than django or cgi for turning python apps into web app.",1533844694.0
Sysmonster,"Yes Django will allow you to expose your logic via HTTP interface but theres gonna be the Django framework to learn, web servers (ie. Nginx+uwsgi), etc.  

If you are strictly looking to expose an easy interface to run scripts/processes for end users more on the functional/operations side, take a look at rundeck. It’s a runbook/automation engine that once installed gives you a UI and management interface to build jobs, chains, permissions, options/argument, schedules, etc. ",1533875074.0
Niicodemus,"The django admin just checks for the existence of fields and callables in the ModelAdmin or the Model that it's registered to. BTW, your `display_others` will generate another database hit for every item in the list (max 100 by default) so this will not scale well. I highly recommend not putting ManyToMany fields in the display at all, but if you must, look into caching or pre-computing them as another field that's updated in a save signal.",1533778202.0
doughishere,"Sorry for the poor choice of words. I can elaborate further. 

""display_others"" is a method in the class MyModel. Its being invoked(bad choice of word?) by the class MyModelAdmin.

Edit: Does this have to do with the registering of MyModel and MyModelAdmin by the admin.site.register?",1533769066.0
nkuttler,Put the entire list on a good pastebin? Why do you think the app is slow?,1533768421.0
daredevil82,"I assume you're running it in django runserver. If so, that's the worst way to compare performance. If you're having issues, optimize queries, add indexes to db fields and tune your db as well as optimizing the wsgi interface between apache/nginx and django",1533770030.0
GuiYaz,"JWT is just a type of token while oAuth describes how to use the token. I'm assuming you mean the underlying authentication logic. The standard setup where a token is returned after providing a username/password for most use cases. The only times where I specifically changed to using oAuth was when I needed to allow third party access to user protected data, or when I needed a user to have a concurrent authentication sessions. What I mean by that is that drf will only support 1 active token, since token creation assumes a one to one relation to token.

 `Token.objects.get_or_create(user=user)` 

Although there are snippets and a fork floating around that allows for many-to-one handling. (You would essentially always create a new token, and have a cron removing old tokens)

Your oAuth setup seems correct, but you would have to manage the oAuth negotiation on the webapp/desktop app instead using the built in authorization request. (Think about it as if you were accessing an external api within your code). You would manually negotiate the oAuth token or use a oAuth client library.",1533765551.0
jedi_stannis,"Django oidc provider implements openid connect, which Django oauth toolkit does not.  You can use the underlying oauth2 server and can configure the consent screen to not be shown.  https://github.com/juanifioren/django-oidc-provider",1533779649.0
shadfc,"Short answer, OAuth 2.0 can do what you want.

There are a number of different OAuth 2.0 flows, each intended for a different authentication situation. It sounds like you're saying you want the resource-owner password grant, which has no notion of granting access to 3rd party (you're the ""resource owner""). But this is only intended for use on secure, trusted systems, which generally means server-to-server direct communication.  If it is going to a web UI or a native app, then that flow should not be used. You'd want the implicit grant for a web UI and the authorization code grant flow with PKCE for the native apps. 

Note: I haven't found any python servers that support auth code + PKCE. Auth0 is pretty sweet though; maybe save your authN infra costs and spend them on a identity provider vendor.

I'm not certain why you'd be prompted to authorize every time you log in unless you're changing the scopes or client ID. If not, the authN server should remember the grant that the user made to that client and just continue whichever flow you initiated.",1533785910.0
Sysmonster,"It almost seems like the first error you are getting is the Response Django gives when it cant find a url route to match the incoming request. 

What do your URL listening routes look like in Django? 

I tried this once a long time ago before I switched to subdomain segregation instead of using the same domain and segregate using paths. Partly I didn’t like it because of the extra layer of specification you have to add to your URL routes. ",1533874783.0
gentfede,"Hello everyone,

it seems like there is a solution to my problem, if you can really call it that ...

Some context: in my initial setup, I had Django running on the root of the webserver (""/""), and it was displaying the Django standard welcome page. Then, I moved everything to a subfolder, as per my original post. That's when I got the aforementioned 404 page now instead of the Django welcome page, and uWSGI saying ""Not Found: /test/"".

Well, turns out, that Django was working after all: the only thing it didn't do, is displaying the welcome page! Why remains a mistery. But if I create apps in my project I can access them just fine, same for the admin interface.

So, in essence, by giving me the 404, Django was indeed saying that there is no app to be displayed at the subfolder root, whereas I expected to see the standard welcome page!

Part of me feels slightly stupid, on the other hand, I think it made sense to expect the welcome page for empty projects.

Anyhow, I hope this can help some of you guys facing the same issue.",1533900844.0
core_dumpd,Just out of curiosity - why do you need to ask for an email address/subscription before I have even had a chance to read the first sentence of the blog post? It's very off-putting.,1533778832.0
pydanny,"We've found that hosting Django projects on AWS Lambda via Zappa is a much better option than hosting on Elastic Beanstalk. Here's why:

* Much, much cheaper on the web hosting side.
* Zappa's easy-to-use task system is so much better than struggling through Elastic Beanstalk's worker system. Price is again an issue because you don't need another server sitting there costing money
* Configured right, for 99% of things done, Lambda is just as fast as Elastic Beanstalk
* Lambda effectively has infinite scaling. From painful experience, the same cannot be said for Elastic Beanstalk. :(
* Much better documented! There's so much about Elastic Beanstalk that is based on tribal knowledge
* Lambda is younger yet has a larger community of users, especially in the Zappa world.",1533789601.0
TehMadWolf,This is a referral/affiliate link to this course,1537044726.0
n1ncha,Yes. It cleans the data and places it into form.cleaned_data. [Here is the relevant section of the docs.](https://docs.djangoproject.com/en/2.1/ref/forms/api/#accessing-clean-data),1533692158.0
IonTichy,"Apart having a look at the docs, I'd recommend reading through the Django source code. Helps a lot to understand what goes on behind the scenes...",1533740599.0
IReallySuckAtChess,"Are you using Python 2 or something? Strings are unicode by default in Python 3. They're also unicode by default in Javascript. So you shouldn't be doing anything with the u' ' modifier.

If you're on 2, seriously consider moving to 3 since 2 should not be used for new projects and existing projects should be migrated to 3 anyways. If you absolutely must use 2 then look at using the unicode decorator and prepare for a lot of pain. ",1533710331.0
melevittfl,"Hi,

Might be helpful to see the template itself, but I suspect the problem is you need to turn the data object into json. 

Have a look here: https://stackoverflow.com/questions/4698220/django-template-convert-a-python-list-into-a-javascript-object

I suspect the reason it works in the original application and not in yours is you’re using a different version of python and/or Django that handles Unicode differently. 

The models.py isn’t really involved in how the template is rendered and it seems fairly straightforward. Is it the “class Meta” part that’s confusing you? Normally Django handles creating tables in the db for each model. However your model is overriding that and telling Django to just use the specific table in the db. You might do this if the table is populated by an application outside of Django. 

",1533703953.0
Cictani," u'OS/X' 

is not JavaScript, that is python.

Why don't you just use the working version with out the ""u'....""?  By default all strings in JavaScript are unicode",1533707631.0
IReallySuckAtChess,"Totally wrong approach. Go to the directory of the app you're wanting to do the translation for, namely:

    \site-packages\wagtail\users

Then run:

    django-admin makemessages -l <language code e.g. af or es or de>

Then go into the relevant folder in /locale/ and add your translations to the django.po file. Afterwards run:

    django-admin compilemessages

Change your site's i18n setting to match your language code and voila. (User by user is also possible). Remember to push your translations upstream.

By the way, this is very hacky. The correct way to translate wagtail is to translate via another website. It's listed on their wagtail internationalisation page and would help sharing your work with everybody. Transifex has a the wagtail project. http://docs.wagtail.io/en/v2.1.1/advanced_topics/i18n/#wagtail-admin-translations

Check the django translations page for help.",1533709778.0
Azd325,"I had this issue too with django-localflavor.

So I created for my case a new folder with an empty file under `locale_extra/de/LC_MESSAGES/django.po`. After it I put there the i18n strings inside. Also I edit this file with POEDIT what was adding some meta data to the top, I think this is not necessary but better have them then not. :)

Then I updated the `LOCALE_PATHS` in the settings.py afterwards I compiled the messages and was working for me",1533717927.0
TheoR700,"Have you looked into how to use Django Forms for creating Models? I would have a form for model 'Pic' and a form for model 'Car' and in my view, I would declare one of each and pass it to my template. Then when the forms are submitted by the user, the same view would process POST requests and get the forms and validate the data from the user input and create the models in the DB if valid or return the forms to the user if invalid.

[https://docs.djangoproject.com/en/2.1/topics/forms/modelforms/](https://docs.djangoproject.com/en/2.1/topics/forms/modelforms/)",1533673699.0
massover,"Have you correctly set your content type headers to multipart form data?

https://stackoverflow.com/questions/4526273/what-does-enctype-multipart-form-data-mean

Posting the relevant js code, the django view on the backend, and even an example request body will help figure out what’s wrong.",1533674584.0
IReallySuckAtChess,Route to a URL and capture the category and filter with that? Or you can groupby in the template itself. Or structure the data when you query it and then return it as some conjugate object? I'm not quite sure what exactly you want. ,1533672205.0
eljohnsmith,You can use queryset.annotate to add the count to the categories and then use queryset.filter to show only the items in the category. ,1533731818.0
IReallySuckAtChess,"So this is an app that I've always thought is fantastic and loved because it could be so useful at times, but I see it as a security mistake in general and very problematic if you keep audit logs of your table. Impersonation is never a good thing. Sometimes good security is inconvenient. ",1533710530.0
booooomba,Are you aware of the official Django tutorial? It should show you everything you need.,1533653068.0
SkawPV,"You're asking for exactly what the Django tutorial is about.

Check it: [https://docs.djangoproject.com/en/2.1/intro/tutorial01/](https://docs.djangoproject.com/en/2.1/intro/tutorial01/)",1533709292.0
kennydude,"Previously where i've worked we assumed the client has some driver on their machine which can print things out onto their thermal printer and just returned a very basic HTML document in a popup when hitting a button.

Otherwise you'll need some custom software (not Django) on the client to help with this.",1533729198.0
booooomba,Well you'd need to have your software running on your POS machine. Doesn't sound like that's what you currently have!?,1533653144.0
shadfc,Might be able to with something like Google Cloud Print,1533834108.0
The-PC-guy,"So there is a javascript package called qz which uses sockets to connect to the printer. 

[qz](https://qz.io) ",1533906353.0
NotSelfAware,"It's mentioned in the thread but it's worth explicitly pointing out because it *massively* improved my understanding of class based views, check out https://ccbv.co.uk/. It really breaks down the inheritance chain and allows you to clearly see how each view relates and depends on one another. ",1533674729.0
jordanreiter,"The real answer is that you start out by creating a minimal record with just the title or a UUID. Submitting the form doesn't create the record, it updates it. The parent record already exists when rendering the form so you can go ahead and create the child records.

You could even then use Ajax to update the record fields while they are filling it out, sort of like autosave.

The downside is if you were planning on enforcing non null fields on the database end (although you could always just have Django insert empty content). You can make the fields blank=True on the model but required=True on the form for validation purposes. 

If you feel uncomfortable creating an empty record like this then you definitely shouldn't be planning on creating parent-less child records! If you are comfortable creating child records then creating a placeholder parent record seems like an obvious choice. For robustness I'd go ahead and add a UUID field to the record and use that in the URL instead of the primary key. Then you can send the UUID along with the parent record and verify that they match before saving.",1533606485.0
occasionaljesus,"One approach would be to upload the pictures without any database models. Just upload and save the filename/URL/extra metadata in session/client side state.

Once the form is filled you create the parent object along with all the picture objects from the filenames.",1533648930.0
porksmash,"You could return the PK of the child object to the browser as a response to the early upload, then submit that along with the rest of the general form data, allowing you to make the association then. ",1533603262.0
booooomba,Speedup? Are you using AJAX? Otherwise how would there be a speedup?,1533600377.0
The_Amp_Walrus,"\> This means the pictures get uploaded with no form assigned  


Is this ""form"" a database model? I suggest you include a cleaned up code snippet of your models in your question. Why can't you create a form when the pictures are uploaded? What's the actual constraint? You need to improve the quality your question to get a proper answer.  


Using a UUID as the form primary key may allow you to create the pictures 1st with a reference to a form that doesn't exist yet, but there could be some potential integrity issues there.",1533604117.0
booooomba,"It says directly in the error message:

>ModuleNotFoundError: No module named 'djangoindex'

Is that what your app was called before you renamed it? Are you sure you renamed it everywhere? Did you delete the old pyc files? etc...?
",1533598908.0
IReallySuckAtChess,"You can't just rename an app by changing the folder name and the installed apps listing. It's better to create a new app, copy the relevant code making sure you don't carry across old references and then to do your migrations.

If you meant app as in your whole virtual env then you need to know you can't do that either. You can't even typically move a virtualenv without a lot of hassle. ",1533623020.0
eljohnsmith,In your first installed app in the config you have djangoindex.contrib.... I think you typed the word index in there by accident. ,1533643529.0
wizpig64,My project also broke until i recreated the virtualenv to point to 3.7 and installed my pip requirements. I don't know if that will work for you but good luck. ,1533600292.0
Cictani,"A function based view needs only one parameter: 'request'. I don't know why you have self as parameter since it isn't a class member. So change the function to something like:

def msg\_request(self):

Also json.loads is wrong since this decodes json, but you want to encode json. You also don't return a response object.  See the first answer here for an example: [https://stackoverflow.com/questions/2428092/creating-a-json-response-using-django-and-python](https://stackoverflow.com/questions/2428092/creating-a-json-response-using-django-and-python)

I also don't think that defining a global variable is good. You could use the internal cache if you don't need the data be persistent in a DB.  


EDIT:

You could also create a seperate view function in which you call your msg\_request function. You should really carefully do the Tutorial again.",1533590071.0
ysmoliakov,"Take a look at this article https://simpleisbetterthancomplex.com/tutorial/2016/08/29/how-to-work-with-ajax-request-with-django.html

In return you must provide a Response object from django.http. You can import its by the following:

```
from django.http import JsonResponse
```
",1533592805.0
eljohnsmith,If you are using mqtt perhaps you want to use a library that has capabilities to subscribe to a topic and react to messages immediately instead of every 10 seconds. ,1533643820.0
xBBTx,"both - project-wide scaffolding (base) templates go into the project templates folder, everything belonging to an app goes into the app folder. App templates use parts from the project-wide templates, like form widgets etc.",1533557082.0
pancakeses,"I stick with the way /u/pydanny has [cookiecutter django](https://github.com/pydanny/cookiecutter-django) set up. One main template folder with a folder inside for each app's templates. Keeps all the templates easily accessible on one location, but still easy to add / remove apps and associated templates as needed.",1533557670.0
mbrochh,"One per app, in case you ever want to carve out the app as a reusable app (which, granted, most people never do).

Everything else about apps is grouped in the app folders. I see no reason why to suddenly break that pattern for templates.",1533555825.0
unkz,"Saves typing to put them all in one main template directory.  I use templates/appname/viewname generally, and I try to match the actual web Uris to the same paths, to avoid having to remember too much.",1533586387.0
IReallySuckAtChess,One site wide with fundamental stuff appearing on all pages i.e. Menus and base and footer and style sheets and Javascript that is universal. Then easy app has its own. The site wide one is usually quite thin but I will add lots to it if I'm using third party packages and want to override their templates. ,1533672456.0
raiderrobert,"I create common base template, and I put it in the project folder along with wsgi and settings.",1533555756.0
richardsmith7021,where do i get best django courses,1533557584.0
souldeux,"Your form defines `ApplicationVersion` as its model and defines two fields, `appstatus` and `appoptions`. However, the `ApplicationVersion` has two non-nullable foreign keys called `application` and `developer`. 

The result is that your form validates just fine (`is_valid` works), but `form.save()` fails because those two fields that can't be null are, in fact, null.

The solution would be to either include those fields on your form, or set those relationships in your view before committing your save to the DB (read up on saving with `commit = False` if you're interested in this approach). ",1533568366.0
,[deleted],1533539421.0
synw_,"Is anyone aware of a feature like Rethinkdb's [changefeeds](https://rethinkdb.com/docs/changefeeds/python/) for Postgresql? Its a process that listens for changes in a database: the db automatically send changes with a diff for a table or a specific query. Afaik only Rethinkdb and Firebase have this (I loved this feature so much that I even made a [module](https://github.com/synw/django-changefeed) for Django a while ago...).
It may be doable in pg with triggers and pubsub but does not seem easy to achieve. I would love to have this for pg and Django models!",1533563335.0
IReallySuckAtChess,"We have an internal bit of code that does exactly this using a mixin and some decorators. Really great because it just makes things easy. It's not too fancy or complicated but it's good enough for our actual auditors so it's at least fit for the purpose. We've been wanting to opensource it for a while now but the lack of a complete test suite has stopped us so far. 

The code isn't my baby so I'm going to go chat to the guy in charge of it and see if he'll publish it with a big disclaimer for you. Probably by tomorrow otherwise Friday since Thursday is a public holiday for us. Just as a heads up, this will massively increase database size and tank performance if you do lots of writes. We actual log the changes to another database server that is secured and off site with a whole bunch of other restrictions. This mostly handles the performance issue and means our production database doesn't get too unwieldy. 

I'll try get our technical documents out to you as well since it'll give you everything you need to be at least ISA compliant. You'll have to get your own external auditors and internal auditors to go over the system to see if you're compliant for where you are and whether it's good enough for them. If it's just for your own purposes with no high standards compliance requirements then I'm sure it'll be more than sufficient for you. ",1533623803.0
badpython,How are changes to the database being made? Web forms? CLI?,1533541342.0
kennedy023,https://github.com/jjkester/django-auditlog/,1533543832.0
Mekhami,"this isn't a django question, it's an html/css question. try asking on #css on freenode IRC.",1533527120.0
kmmbvnr,"
You can follow django's login view approach. It uses `?next=` url parameter to determime redirect url after success

https://github.com/django/django/blob/master/django/contrib/auth/views.py",1533517460.0
haloweenek,"As for the 500 - add appenlight  to your app, since your mail is not working you can get some debug - it will log all the errors 

Or run the app in Debug mode",1533504408.0
will_r3ddit_4_food,Mailgun is free up to 2000 per month ,1533509785.0
IReallySuckAtChess,Check your settings.py and look at what you've got configured. Set it to dump to file or console just to see whether your install is possible broken. Then set up the smtp stuff. You really should check the django documentation. ,1533553877.0
athermop,"You'll have to do more troubleshooting before anyone can help you.

Can you use the send\_mail function at the django shell?

(FWIW, send\_mail + sendgrid is a fine, good, maybe even best way to send mail)",1533504245.0
diegobust4545,Sendgrid is pretty good but it costs $$,1533509273.0
lkpanganiban,"you can also checkout the ports that your machine allows. either 465, 587 etc. sometimes these ports are blocked by default.",1533510051.0
TheoR700,"If you are using the default Django user or extending it to your own, then you can use the class function email_user. I also couldn't get send_mail or send_mass_email to work and just used the User function.",1533510618.0
mattpii,Sparkpost gives 15k emails per month free. They also have a django app on pip. Its great,1533570967.0
haloweenek,Celery task,1533504273.0
qwerty_danny,I misunderstood what the 'inline editing' is. [This](https://books.agiliq.com/projects/django-admin-cookbook/en/latest/nested_inlines.html) is what I ended up using.,1533503956.0
IReallySuckAtChess,"Most words and phrases are used repeatedly. Makemessages pools duplicates so the translation file should still be reasonable to tackle. Plus if you make the effort of translating, translate everything and push it back upstream. Others might appreciate your effort and it's great for the project you're using to have a full translation to different languages. If you ever decide to use this either views then the translation work is already done. 

That said, the only way I can think of would be if you delete the views and templates you don't use. The program isn't made to specify specific files or parts of files. You could also just remove the translation stuff from the bits you aren't using but that's more effort than just deleting chunks of stuff you aren't using.

Just as an aside, if the views and templates are in your code, depending on how you're doing stuff, they're still probably accessible even if you don't have an explicit link on your site to it. So deleting is better than not translating.

Edit: To answer your question clearly: No. It's all or nothing essentially.",1533624260.0
kontekisuto,"I implement Ed subscriptions with Django channels and observables, pretty easy. Although it took me a while. in Apollo I just use a different link for subscriptions that uses the ws endpoint. 

",1533528434.0
SuperEli,"Try the following:

'pip install --upgrade pip'

'pip install psycopg2-binary'

I'm on mobile so not sure if I have everything the right order. Basically you'd update pip then download pscopg2-binary.

E: idk how to format on mobile",1533480296.0
angellus,"You do not have the libraries you need to compile it from source. As noted on the psycopg2 PyPi page:

> You can also obtain a stand-alone package, not requiring a compiler or external libraries, by installing the psycopg2-binary package from PyPI:

    $ pip install psycopg2-binary
>  The binary package is a practical choice for development and testing but in production it is advised to use the package built from sources.

If you are on Ubuntu, you would need to install `libpq-dev` and `python-dev` before you can compile it from source:

    sudo apt-get install libpq-dev python-dev

See the [psycopg2 docs for more details](http://initd.org/psycopg/docs/install.html#build-prerequisites)",1533487960.0
haloweenek,Good thinking,1533475199.0
andrewingram,I'm not sure I understand the question. Is there a reason you wouldn't have one view per URL pattern?,1533468742.0
booooomba,"One of the key skills you need as a programmer is to find information/documentation and using google.

So why don't you spend 15-20 minutes looking for some. Then post the best 3 tutorials you found here. If there are good ones missing, we'll add them to your list.

So....ready, set, GO! :-)",1533399338.0
callius,"Oh dang. I didn't realize that you could prefetch only the desired fields. That's gonna really speed things up, I think!!

Thanks so much for the post. Lots of good information in this article.",1533399441.0
sidsidroc,"I like your article man, I have some questions that maybe you or someone else can answer, I’m having an issue right now fetching data which contains many to many fields and most of those also contain many to many fields, for example: house coordinates with a polygon of the house plus street data and who built the house that contain several dynamic schedules from the current week and the next one which can change depending on the user and way more data, I’m thinking that I may just refactor the frontend logic to not require this much data to load my clients app but I’m pretty sure I can lower the response time using Prefetch and prefetch_related because I already did some massive improvements in some other parts of the code, still I realized that when running several fetch calls at the same time to my endpoints, the browser stalls the requests way longer than what my benchmarks and stress tests say, I’m starting to believe that it’s a frontend / fetch problem as when I call one of those endpoints alone they always respond fast, do you or any of you happen to have the same issue? Is it a problem with fetch? Or is it django related? Thanks for any help you could give ",1533443054.0
Fun2badult,"Really nice video. Haven’t learned permission stuff yet but this was a concise and to the point video with simple example. Now I understand how the permissions work and how Django 2.1 has updated it. Although I’m still not sure who gets to have admin access, etc but that’s a work in progress on my part. 

What’s your YouTube channel? I’d like to check out your other tutorials ",1533403169.0
fuckslavs,"Please everyone, form a queue.",1533344745.0
anyesh,i want to know more,1533344479.0
eljohnsmith,The pk would be stored in kwargs. Without seeing your urls file it’s impossible to know which name it would have. But you can get it with self.kwargs.get(var-name-from-urls),1533476055.0
fairytale81,Why are you using TemplateView? You need DetailView and then you can use related manager to list child items. ,1533501390.0
shobble,Where's the source?,1533374196.0
GreenNapster,Why is this in r/django? ,1533524178.0
k4ml,"If you want to make the chat app reusable, then take it out from your project completely and make it proper python packages with setup.py, installable via pip etc. That would make the separation much clearer and also force you to think of proper API on how to access the chat functions from other app.

If you're not, then don't bother [splitting](https://dev.to/k4ml/django-moving-away-from-project-vs-app-dichotomy-3e7).",1533604026.0
k4ml,"For ""have something in the middle ..."", you can refer to this old discussions https://disqus.com/home/discussion/redbeacon/fat_models_a_django_code_organization_strategy/#comment-1225135464.",1534036004.0
PotatoNetizen,"There was a project to handle hdf5 in django, but it was for storage and not for the ORM and it doesn't have any commits in the last 6 years https://github.com/fish2000/h5dj/ so it probably does not work anymore anyway.

About the slowness of sqlite, read [this post](https://blog.devart.com/increasing-sqlite-performance.html), it has some tips about how to improve performance in your migration to SQLite.

About the number of collumns, if you compile SQLite from source you can handle more than 30k columns, but this will have an impact on the performance, so maybe it is a deal-breaker for you.

Anyway, if you really want to use django I would say that you have two major ways to tackle this:

1. Try to migrate it to a more robust database like postgres and use django orm, you will need to normalize the data, 100 columns is good enough, but 10000 is way too much, may work, may not, but it is the easiest way.

2. Use [h5py](http://www.h5py.org/) and learn how to implement a custom ORM backend, the [sqlite](https://github.com/django/django/tree/master/django/db/backends/sqlite3) one is the simplest to base yourself on, unless you want to use this backend in a ton of different projects this is way too much overkill and I would stay as far away of this solution as possible.

Personally, unless option 1 is a viable one I would stay away from django, I love it but is way too much opinionated and usually scientific data have too much intricacies to handle, I would choose something minimal like flask and use [h5py](http://www.h5py.org/) to access the data, ignoring completely the ORM.",1533329792.0
bmoe872,Can pandas handle this kind of workload? Or could you read that data in with numpy sequentially somehow? This is an interesting problem. Sorry if you've already tried those two options. That's a really large dataset and I'm not sure how either of those scale with something that large.,1533329963.0
ademus4,"Perhaps something a little less traditional like MongoDB (can store arrays in documents and annotate with meta data), or maybe HDFS and use a simple map reduce algorithm (or even Apache Spark SQL) to grab data? I don't feel like this is a Django problem necessarily, but just make sure whatever you use is somehow compatible with Django if you're wanting to make a web app.",1533341940.0
MyDogNeedsDrugs,"If you use Postgresql you can leverage JSONB fields which are essentially key value stores of varying length you can keep in a column.  It's like having nosql in your SQL!  Also it's indexed so look ups are pretty quick.  

You would have to break up your data in a different way though.  Shoving all of that info into one field would be a nightmare.

https://docs.djangoproject.com/en/2.0/ref/contrib/postgres/fields/#jsonfield
",1533345970.0
BibendoInvenietis,"There are always bots scouring every machine they can find for vulnerabilities and entry points. As far as I understand it, this error represents a pretty lazy attempt in the grand scheme of things, so it isn't necessarily much to worry about, but it's a good reminder to make sure you have your basic security in order. That's a lot to go into but [here's one quick starting point](https://www.codelitt.com/blog/my-first-10-minutes-on-a-server-primer-for-securing-ubuntu/) (targeting ubuntu but many points apply to other distros as well). If you're using mysql you should also look up mysql\_secure\_installation - quick and easy, not a huge thing but still good to do.

Anyway the error messages. You can target them for custom logging or turn them off altogether. [Here's the relevant documentation](https://docs.djangoproject.com/en/2.0/topics/logging/#django-security).",1533315402.0
pancakeses,"Yep, I had the same shady hosts attempting to access my projects today. Just the standard bots trying to find low hanging fruit.",1533349225.0
yee_mon,"Like everybody else has already said, those errors are nothing to worry about.

But if you can you should configure your web server to only forward requests with your actual domain name to the application. That way, Django doesn't even have to worry about it. In the age of HTTPS it's not much use to have a bare IP exposed, anyway...

I'm using nginx and I've got this config, more or less:

    server {
        listen 80 default_server;
        return 301 https://mydomain/;
    }

    server {
        listen 80;
        listen 443 ssl;
        server_name mydomain;
        // application proxy config
    }",1533374439.0
rjschave,"I was looking into this very thing the other day.  

You can configure Django logging to NOT send an email for a disallowed host.  Here is an example - https://www.calazan.com/how-to-disable-the-invalid-http_host-header-emails-in-django/

You could also configure your web server to prevent these types of requests from even reaching the Django app.  Here is an example for  Nginx - http://blog.gabrielsaldana.org/avoid-djangos-invalid-http_host-error-message/",1533319227.0
willcodefortea,"The problem is the one to many relationship you're spanning. Let's say you have two models, User and Comments. The Comment has the fk to the user, so if you want to fetch everything efficiently you can do `User.objects.all().prefetch_related('comments')` and Django will do two queries, one for the users and one for all their comments.

Under the hood these queries are 

`SELECT ... FROM user`

and

`SELECT ... FROM comment WHERE user.id in (...)`

Now, if it did a join, you'd end up with duplicate user rows for every comment they've posted, as you'd be doing a query like this:

`SELET ... FROM user LEFT JOIN comment ON user.id = comment.user_id`

If however, you perform the query from the other direction, where you want comments and their associated users, you can use `select_related` as no duplication of comments can occur. Hope that makes sense!",1533310057.0
,[deleted],1533321786.0
lakerskill,Can you use the API in this article to pass to a frontend like React?,1533315020.0
willcodefortea,"The main problem here is that you may loose consistency as saves are not wrapped in a transaction, so you may end up with orphaned users with no profiles if an error occurs during the saving of a profile. (If you're not too worried about this then what you've done is the correct approach, the view probably shouldn't be aware of the model creation.)

I think the best approach is to override `save` on the user object and create the profile there if you're inserting, wrapping the user + profile insertion in a transaction.",1533308209.0
Niicodemus,"I think it's perfectly fine, but your code should still check for the existence of the profile and not assume it's there. My favorite method is `profile = getattr(user, 'userprofile', None)`.",1533333454.0
oliw,"I think it depends heavily on what you app does. If it's an all-in-one that suits a single SPA, sure. Vue that mother up.... But in my experience, most webapps are a set of interfaces to accomplish something and —despite the shininess of Vue—  not all of those benefit from the sort of things Vue provides.

We're playing it down the middle. Authentication (inc login) is handled by Django (and sessions, no JWT or other nonsense). Routing and page-level permissions is primarily handled by Django. Static pages are handled by Django. After that we have about a dozen big ""interfaces"" (screens that people log in to interact with, the raison d'etres) and we're sorting through those, focussing on the most interactive views and even page elements (eg we have a globally available modal that we ported to Vue) and porting the ones that make sense.

There's plenty of code-reuse with components but there are also certainly times when I'm wondering why I'm porting a perfectly working form with lovely validation and error handling to a cranky API that has to somehow accomplish the same thing. Anyway.

For most people, it makes absolutely zero sense to port the whole thing over. Look at the reason you're considering Vue in the first place and apply the same logic to how you deploy it.

Obviously, this suits *us*. It might not apply to the structure or planned structure of your app.",1533327041.0
nannooo,"Yup, have been doing this for a while. Is there anything you want to know specifically?

This is a great way to separate the front end from the back end. Though, I have to warn you: doing it like this will cost you more time in the short term. This means that you have to figure out how to connect them together, do both front end and back end input validation, doing (almost) twice as much tests, learning a ton of javascript stuff. Though, in the long run, you will be able to organize your code way better, since everything is separate and component based is just create to avoid long javascript files.  


If I were you, I would host the API on a different server then the front end. You can then host the entire front end on a CDN, which takes a huge load off of your server. 

I absolutely love this kind of setup. Also makes it way easier if you want to create a public API at some point.

Actually, not sure if you have seen it, but I am launching a course soon about splitting the two and building an application with them. You can check out the reddit post [here](https://www.reddit.com/r/django/comments/8su1p4/would_you_benefit_from_a_django_rest_framework/).",1533302531.0
rando2018,I've been playing around with Django+Nuxt - Nuxt gives you server-side rendering (good for fast load & SEO) and handles server -side cookies for authentication (more secure than locally stored tokens).  You just proxy the API calls to DRF. ,1533306385.0
nannooo,"Routing is meant for requests to the WS protocol. Urls is meant for normal requests and yes, you can do them both.",1533297974.0
semillastan,Yup! It will work just fine.,1533309108.0
Vitrivius,"`Model.objects.create()` creates a model instance and saves it. `Model()` only creates an in memory model instance. It's not saved to the database yet. You have to call the instance's `save()` method to save it. That's when validation happens also.  

If `Model.objects.create()` or `Model().save()` raises a ValidationError, nothing will be saved to the database.",1533287931.0
crunching_karma,"Initiating a class instance (`model_name()`) just creates it in memory and doesn't generate any queries to db. 

You must call `save` to save it to db.

You must call `full_clean`method for validation logic to fire up.",1533288015.0
xilitos,"If you dont call the create method you aren’t hitting the database, you are only creating a new object with those attributes, nothing else. 

You can then call .save() on the instance and you will get the same validation error.",1533305963.0
bykof,"We use [python-logstash-async](https://pypi.org/project/python-logstash-async/) for ELK.

You have to setup in your [celery.py](https://celery.py)

    def initialize_logstash(logger=None, loglevel=logging.DEBUG, **kwargs):
    
    handler = AsynchronousLogstashHandler(
        host=settings.LOGSTASH_HOST,
        port=settings.LOGSTASH_PORT,
        database_path={}/logstash.db'.format(settings.PROJECT_DIR)
    )
    handler.setLevel(loglevel)
    formatter = DjangoLogstashFormatter(
        message_type='python-logstash',
        extra={
            'application': 'YOUR_APPLICATION',
            'environment': environment
        }
    )
    handler.setFormatter(formatter)
    logger.addHandler(handler)
    return logger

After that you set this commands before you initialize the Celery App:

    from celery.signals import after_setup_task_logger, after_setup_logger
    
    after_setup_task_logger.connect(initialize_logstash)
    after_setup_logger.connect(initialize_logstash)
    
    app = Celery('YOUR_APPLICATION')
    app.config_from_object('django.conf:settings')
    app.autodiscover_tasks()",1533295058.0
TheoR700,"You should take a look at the Django Documentation for how to handle Static files.

[https://docs.djangoproject.com/en/2.0/howto/static-files/](https://docs.djangoproject.com/en/2.0/howto/static-files/)

The general idea is you can have a static directory in each of your app directories, but this only works with the Django Development server. It doesn't work in Production though. When you move to a production environment, you will need to collect all your static files into your static root directory and have a webserver like nginx, serve those static files. Django has some built in command to use with [manage.py](https://manage.py) to help with collecting your static files in all your apps and putting them into your static root directory.

[https://docs.djangoproject.com/en/2.0/ref/contrib/staticfiles/#django-admin-collectstatic](https://docs.djangoproject.com/en/2.0/ref/contrib/staticfiles/#django-admin-collectstatic)

Another good thing to read would be Django's Documentation for deploying your project. 

[https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/](https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/)",1533249383.0
wizpig64,">I am creating a different apps for login and register. Is this a good practice?

Personally I put those both in an app called accounts, but there's nothing wrong with having them separate. If you think it's ugly or difficult to understand, move it around until you like it. If it's more trouble to refactor it, leave it alone. It really depends on how much code you've written. If you're just hooking into contrib.auth views or some third party package without much customization, it makes sense to keep it compact. If you're writing a completely custom authentication stack, then maybe split it up a bit.

>Is there any way in which I can share that files in all the other apps from one path

You can have one or more static folders outside of your apps' static dirs if you'd like ([see STATICFILES\_FINDERS and STATICFILES\_DIRS in the docs](https://docs.djangoproject.com/en/dev/ref/settings/#static-files)).

In my opinion, having these rogue static (and template) source folders folders outside of my python code tree source tree is a bit messy. So I have a ""core"" (or ""common"", ""generic"", ""util"", ""utils"", ""base"") app in my django projects that stores all the generic, site-wide stuff I need, like base site templates, basic styles like my bootstrap build, python utilities, and django utilities like custom generic abstract models, all in one place. You could put your login and register views here too. I do this instead of utilizing STATICFILES\_DIRS.

When your static files are collected, they all get put in your STATIC\_ROOT folder, where they are available for all apps to use. And depending on the ordering of your static file loaders and installed apps, they have the ability to override each other. This is useful if you want to override some third party app that you didn't write, like the django admin. It's standard practice to nest your static in subfolders with the name of the respective app:

    django.contrib.admin
    └── static
        └── admin
            └── admin.css  # the admin style that comes with django, for example
    core
    └── static
        ├── admin
        │   └── admin.css  # my custom admin style for this site
        ├── style.css  # really just my custom build of bootstrap
        └── main.js
    foo
    └── static
        └── foo
            ├── some.css
            └── some.js
    bar
    └── static
        └── bar
            ├── some.css
            └── some.js

Collecting the above static folders would result in something like this after running collectstatic:

    static_root
    ├── admin
    │   └── admin.css  # the default one was overwritten by our custom one here
    ├── foo
    │   ├── some.css  # our apps did not overwrite each other despite similar file names:
    │   └── some.js
    └── bar
    │   ├── some.css
    │   └── some.js
    ├── style.css
    └── main.js

So you can maintain a kind of separation between your apps' static stuff using the app folder names like this, but there are no restrictions (i believe) on what apps can read from what folders within the final static tree.

EDIT: fleshed out answer 1 a bit",1533251139.0
booooomba,"They go into your static folder.
And no two apps for login and register is not a good idea. Just put everything into one  ""core"" app and you'll be fine.",1533248397.0
njancsar,New to Django? Check out the [/r/djangolearning](https://reddit.com/r/djangolearning) subreddit.,1533246851.0
D2theR,"I too work at a company where all of the data is held/""trapped"" in a Access (2010) database.

Here's a few tutorials that got me started in the right direction. These tutorials are extremely dependent on Linux(Ubuntu) and Python but I managed to figure most of it out myself and I don't have a CS degree. Good luck!

[https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04](https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04)

[https://docs.djangoproject.com/en/dev/ref/databases/](https://docs.djangoproject.com/en/dev/ref/databases/)

I recommend going through the Django docs tutorial for version 2.0 to get started.

If you're not currently using a MSSQL server or the like as the back-end for the Access database you're going to have a lot of  fun trying to port the data over if it's needed.",1533490228.0
zettabyte,"We use Celery+RabbitMQ to send out emails.

1.  We get a list of email data from an API.  
2.  We create a model instance to represent each email.  
3.  We call `task.send_email.delay(model.pk)` to send the email.  
4.  Within the task, if something fails, we update the status and we call `self.retry(countdown=backoff)`, using a sensible backoff to avoid the thundering herd.

When something fails more than the retry limit, we get an error log entry to Sentry.


Once the message arrives at the broker, you're in good shape to get it delivered successfully.  They'll stay in the queue until something acknowledges that it was successfully delievered.  And so long as you craft the task correctly you'll have a good reflection of what's in error, what failed, etc.
",1533244236.0
willcodefortea,"I think the best practice here is ack late + support retries. If the server dies the broker should reissue the task after the visibility timeout expires, while if the task itself errors during execution the retry behaviour will add the task back onto the queue.

If you _need_ to check it was completed then I guess you'll want to keep the result in a persistent store?",1533224948.0
Slippery_Panda,"Rabbitmq works great for us.  Checking for current tasks was slow for us (related to heroku).
If it's just emails.  I use Django-after-response, or possibly Django signals.  Django after response isn't active, but I suspect it would be easy to update when an issues shows up.  It works for Django 1.11.  Managing a task queue is allot of work.  I'd make sure it's needed.",1533229690.0
kakapari,"Using Celery with RMQ, it works like a charm. Never seen any missed triggers. Though it is still better to keep track of mail sent in a persistent storage. This way it will be easier for troubleshooting purpose.

Do try using task callbacks as well http://docs.celeryproject.org/en/2.2-archived/userguide/tasksets.html
",1533231938.0
Ibuildwebstuff,"> but that may introduce duplicates into the queue in some cases

https://bravenewgeek.com/you-cannot-have-exactly-once-delivery/",1533238021.0
dontworryimnotacop,"Dramatiq has some really nice consistency guarantees if that's what you're after, we switched over from Celery about a year ago and love it so far for its stability and simplicity: https://dramatiq.io/

It does auto-retrying automatically, and it's configurable (exponential backoff by default).  It can commit the task's success/fail status to db if you want, or just store it in RabbitMQ/Redis.",1533240631.0
projektmayhem08,"You should duplicate settings.py, not rename it. For example if you duplicate it and rename the copy to ""prod_settings.py"", then in your production environment you'll set an environment variable to DJANGO_SETTINGS_MODULE=yourprojectname.prod_settings",1533193725.0
meatypocket,"You could use https://github.com/jazzband/django-configurations
You use a single file with multiple classes.
You choose the settings class to use with an environment variable. So you set it to 'Dev' in your manage.py and 'Prod' in your wsgi.py.",1533218721.0
,"I'm using file named local.py put next to settings.py. At the end of settings.py file I have something like this

`try:`  
`from .local import *`  
`except ImportError:`  
`pass`

Last but not least local.py file is added to gitignore.

This way I don't have to play with env variables and I can have multiple configuration for different environments (servers).",1533204149.0
Gargan_Roo,Wagtail all the way,1533230691.0
eazy17,"Wagtail and mezzanine are pretty good CMS as far as django is concerned. Mezzanine's documentation though is a bit complex to grasp in the initial stages and also not ideal if you have the webapp already built with the CMS left to integrate. 

If you are someone who isn't familiar as much with django, then wagtail is the one I would suggest you to go for. It's pretty easy to follow and can very well blend in with an existing website. 

PS: You can accomplish whatever you mentioned with any Django CMS I think. It all boils down to what you are comfortable working with. ",1533229335.0
olifante,"wagtail is the more modern and sexy CMS, django-cms the the more mature and powerful (as well as complex). Skip Mezzanine, I didn’t like it.",1533215212.0
brylie,Describe the project a bit more. What is the intended purpose? How will people use the app?,1533185405.0
fairytale81,"Take a look at form widgets on docs, you are looking for TextInput with attrs={'size': 60}",1533186474.0
jhermann_,"Besides setting the field length, apply CSS.",1533231236.0
mode01,"I'm sure someone with more experience will chime in here, but I believe if you increase character max length for model field 'title' the input box will also increase in size.",1533174521.0
someoddperson,"You just make another field in model for department and save department alongside employee. You can also make it populate this field automatically, by adding signal after save or overriding model's save method. Inside signal handler or save method you can check if object is created (not updated) by checking if its pk is not None.

Something like that:

    class Entry(Model):
        job = ForeignKey(Job)
        employee = ForeignKey(Employee)
        department = ForeignKey(Department)
    
        # This is optional - you can make user fill that field explicitly
        def save(*args, **kwargs):
            if self.pk is None:
                self.department = self.employee.department
            super().save(*args, **kwargs)",1533157629.0
pancakeses,"Your associate already posted here. Please keep in mind that nobody likes seeing the same thing posted multiple times in one subreddit. This was my response in that post:

---

I can tell you've put some work into this, but there are a couple things that would improve this post:

- I'm not sure exactly what you're looking for help-wise. A bit more clarifying would make answers more likely.
- You should revise how you're naming fields. Unlike other languages, convention with Python is that they should be lowercase with underlines between words, and that you use descriptive naming. No need for abbreviations, the model name, etc in the field's name. IE ""PL_CODE"" would just be ""code"", ""PL_SHRBODY"" would be ""short_body"". All caps names are generally reserved for constants, so you'll confuse other people when they read your code. These changes will make it more readable for others (and for you when you're revising code later). Reference: [PEP 8](https://www.python.org/dev/peps/pep-0008/)",1533146672.0
pancakeses,"I can tell you've put some work into this, but there are a couple things that would improve this post:

- I'm not sure exactly what you're looking for help-wise. A bit more clarifying would make answers more likely.
- You should revise how you're naming fields. Unlike other languages, convention with Python is that they should be lowercase with underlines between words, and that you use descriptive naming. No need for abbreviations, the model name, etc in the field's name. IE ""PL_CODE"" would just be ""code"", ""PL_SHRBODY"" would be ""short_body"". All caps names are generally reserved for constants, so you'll confuse other people when they read your code. These changes will make it more readable for others (and for you when you're revising code later). Reference: [PEP 8](https://www.python.org/dev/peps/pep-0008/)",1533146460.0
wizpig64,"They're dropping NullBooleanField in favor of BooleanField(null=True), nice. It made no sense to have them be separate.",1533161146.0
genesem,"Yes guys, Django 2.1 is here.

install/download:
https://www.djangoproject.com/download/",1533134754.0
twigboy,"> Management commands no longer allow the abbreviated forms of the --settings and --pythonpath arguments.

Anyone have an example of ""abbreviated"" arg which was dropped? I'm not sure if I'm using the correct one

Edit: can no longer use --set, did not know it was a thing",1533161170.0
mbrochh,"Query expressions can be negated with a minus sign.

Ohhh this sounds cool!!!",1533166587.0
godhatesmetoo,I've skimmed through the changes and I think I like them all. Is there any change you don't like?,1533167010.0
lakerskill,View only?,1533147531.0
pydanny,"This ""tutorial"" (and I use that term loosely) wins the award for `most click-baity pages` in in Django history.",1533187764.0
SkawPV,"This is just what I need for my next project (well, this or Node/Express). Thanks for posting it, I'll try this tomorrow.",1533124420.0
godhatesmetoo,Thanks,1533130844.0
rocky-ji,"It's very useful, thank you.",1533138127.0
massover,"It’s a shot in the dark for us without actually looking at the code. One thing to explain is that even when testing without migrations, it still has to introspect the models and create the schema in your database. This is going to take some time. And this time can be ignored the second run time when using the [keepdb](https://docs.djangoproject.com/en/2.0/ref/django-admin/#cmdoption-test-keepdb) flag or pytest equivalent.

There’s also a chance you have some expensive code that’s in the global namespace. When django is set up, that global namespace code is executing causing a slow start up time. Moving it into functions, methods, or lazy accessors can help.

I’d also be interested in profiling a vanilla project and seeing the run time on a simple test. With and without pytest. ",1533125559.0
savuporo,"Setup time depends on a bunch of factors, i've run into various slow startup reasons
 
- First, what db ? If not sqlite, try switching to sqlite for tests. 
- Check the list of middlewares you are running ? 
- extensions ? I once had a permissions something extension that did a lot of auto-db setup every time on models load
- any other apps installed, like admin etc ? You might not need all of those while testing, so turn them off 
- Are you running on Windows perchance ? Because there are some default things that python libs load and initialize on Win that are super slow, because they scan through registry. Monkeypatching some libraries has helped in the past

There are tons more tricks, but the best way to work this out for your particular case is to run with cProfile, there's even a pytest-profiling plugin for that. Give it a go
",1533102645.0
closedlooplabs,"Could you post the setup code? It will be helpful to debug further. 
Are the models linked to any signals? That can often have a knock on effect.

One technique I like to use to profile slow test code is with [line_profiler](https://github.com/rkern/line_profiler).
Here is how:

* `pip install line_profiler`
* Add the `@profile` decorator on any suspected time-consuming functions (i.e. the fixture/setup code in this case)
* Run your tests wrapped with the profiler like so: `kernprof -o /tmp/tests.lprof -v -l pytest `

You should get an output similar to [this](https://imgur.com/a/fa3R7K6) which shows which lines are causing the hold up.",1533109540.0
unkz,"Where is your database, anyway?  If it's not local to the machine you might consider setting up a local test database.

You'd really have to post code to get much more insight here tho.",1533142369.0
execrator,"I find it weird when query params alter a resource representation significantly. Here it looks like you'd be going from ""products"" to ""statistics about products"" which is a big change. I would be asking myself why am I getting statistics when the path segment of the URL says I am asking for products?

Combining these two behaviours will give you all sorts of annoying cases you need to manually solve, e.g. when a client POSTs but asks for stats. You need to conditionally return a 405 Method Not Allowed in this case. That's not a good use of your time!

How about adding a new route `/api/products/stats/` with its own view class. Then you've got your product and your statistic resources separate which should make sense to your API clients, and should make sense for your codebase too.

Your statistics view can subclass RetrieveApiView (from memory) so it'll be read-only and all those edge cases go away. You can also use inheritance to share logic (e.g for filtering) between your two views.",1533097562.0
roysta,Try list\_route?  Not sure how it interacts with filters tho... ,1533086762.0
DudaFromBrazil,"Not sure if the best approach, and I am not a guru for DRF, but I believe you can implement a get_queryset on you class and play with it. Some code here: http://www.django-rest-framework.org/api-guide/filtering/#filtering-against-query-parameters",1533089023.0
fessebook,"Looks like you're just trying to alter what data gets returned.

Have you tried to override the method \`get\_queryset\`  and \`get\_serializer\` on ModelViewSet? ie: set filters in get\_queryset and then in your get\_serializer method, choose either the serializer for the statistics or the series of values.",1533089048.0
_drFaust,"Haven’t seen or used the action decorator in any production codebase so I can’t offer guidance there but it looks like it’s goal is to solve the case of having fat views that do a bunch of conditional logic against query params by just splitting them out into distinct methods. What I don’t like about it from a frontend perspective is how it begins to also fork your resource endpoint by each method you define.

But it seems like it could be useful for your situation, I’d give it a shot and report back but as a fallback there’s nothing wrong with handling it the standard way of validating params, passing params as args to a queryset and returning the queryset as a response.",1533095974.0
TheoR700,"This article does a really good job at explaining the multiple ways you can implement multiple types of users in Django.

https://simpleisbetterthancomplex.com/tutorial/2018/01/18/how-to-implement-multiple-user-types-with-django.html

https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html

The Django Documentation also has some good information and examples. 

https://docs.djangoproject.com/en/2.0/topics/auth/customizing/#extending-the-existing-user-model",1533060373.0
throwbible,"Any reason you can just use groups and permissions?

https://docs.djangoproject.com/en/2.0/topics/auth/default/#permissions-and-authorization",1533060986.0
anhelido,"[Use the index, Luke!](https://use-the-index-luke.com/) ",1533049286.0
never_safe_for_life,"Why has nobody mentioned Django Debug Toolbar yet?

[https://github.com/jazzband/django-debug-toolbar](https://github.com/jazzband/django-debug-toolbar)

It will show you exactly how much time was spent on each database query. This will give you the information you need to speed up your queries.

1.5 million rows is nothing for SQL. With proper indexing you should be able to run queries in 10-20 milliseconds against that no problem. ",1533072299.0
throwbible,"If you only have one gigabyte of data you could consider just dumping it into a SQLite database on a fast SSD or NVME disk, or load it into memory on either a desktop, or a Digital Ocean droplet with a few GB of memory.

That being said, 101 columns seems... wrong. 

Edit: if you're doing queries via the Django ORM, 101 columns will be a 101 attributes on each objects. So it one row is a total of say 10k, so if a search returns 500 results, then you're moving 5MB of from the database to the application and the user. Doing a bit of normalization on the data may help increasing speed. If there's some auxiliary data, that you never query, then you could move that to another model, and just lazy load it when the data is needed.  ",1533057300.0
anhelido,"My advice is this: If you want to do things properly, learn how a database works, learn how to get and debug a SQL query that Django formed, how to run a query in a database environment, and how to optimize it using EXPLAIN. It is not something about Django, it happens everywhere, with Rails, Hibernate, etc. Becoming a database expert will take you time and effort. Learning enough of joins and indexes to do a correct work will take you a few days and will save you a lot of time and headaches. There’s plenty of info available :)",1533063166.0
ge0n1,"This isn't really a django problem I think. This is much more a DBA, sql, devops problem.

What I would do is pay a consultant to help me sort it out. When I take on contracts I make sure to have other contractors that I can pull in to sort problems like this. Welcome to the real world.

Your first step is to find out where the bottleneck is. What happens when you run the queries raw against the database?",1533048659.0
geosoco,"Are all 101 columns in a single table? 

What sort of queries are you running? How many rows are you fetching at a time? Do you need all 101 columns all of the time? Any web framework is going to add overhead both in terms of speed and memory onto database queries, so there are a lot of opportunities for tuning in that area. 

There are definitely ways you can fetch only partial amounts of data. You can have the queries only return certain sets of columns. You can paginate the data. You can use indexes to get subsets/filter/search. ",1533057036.0
lykwydchykyn,"You can accomplish a lot with some indexes and query tweaks if you know how to interpret the output of EXPLAIN.  I'd recommend starting there instead of throwing more CPUs at it.

Here's a good place to start:

http://codingsight.com/query-optimization-in-postgresql-explain-basics-part-1/",1533054742.0
thinkingdots,"I second using Indices, and django debug toolbar.

I assume you are using a django ORM query to fetch the data for your page. If so, it would be helpful if you could post a snippet of the django/python code that you are using for the query since the ORM can sometimes produce inefficient results depending on how it is used.",1533079819.0
SupermanIsEnvious,"You should most definitely fragment your table into separate pieces with foreign key associations or lookup tables between them. 101 columns is far too many to work with in any scaleable way.

You can chunk it in to relatable objects... 
Business (id, full name, billing name, etc.)
Business Contact (id, business id, address, zip code, etc.)

And on and on. The idea is to only load the data when necessary rather than loading all of the data at once, which is what a 101 column table is trying to do.

You should not be worried about the number of calls you make to your internal database. Keeping column numbers minimal and querying on indexes or foreign keys is how you ensure that.

For indexes, generally, the more unique the value on that column, the better it performs on reads, but writes will necessarily be slower, since indexes mean the data gets written twice. You can also create an index which references multiple columns. Think about how you will be accessing the data — will you be querying a combination of business id and zip code? Create an index on that. If you can add a unique constraint on an index, all the better.

//EDIT:

Looking at another response, it seems you may be using this as a log of events (safety violations/records). This should be stored in its own table with a reference (id, for instance) of the business in question. 

It's best to differentiate your tables based upon use. Are you just looking up meta-data about a business? Are you logging events, such as violations? Data duplication is a real consideration and it is important to consider ways to reduce that. For instance, are you duplicating your business info (name, address, zip, type) every time you log a new safety record? This will absolutely destroy performance and indexes won't help much. 1.5M rows is manageable on any database that follows proper design paradigms.

I noticed that you're using Postgres (Great choice!). There are some lovely resources out there to help you get into the nitty gritty about that particular flavor of SQL. http://postgresguide.com/ is a great place to start.",1533088920.0
throwbible,"Your question is very confusing, and reads a little like homework, but it's interesting. 

Let me try to understand your problem: 

* You have a number of transaction, with a creation time stamp.
* Each transaction needs to be checked, by doing a http get request to some API
* For some reason you can only do the check at certain intervals.

Follow up questions:

* Where does you transactions live?
* Do you need to use Django?
* How precisely do you need to do the intervals?
* Do you have just one or multiple API endpoints?

If I understand you problem correctly, Celery won't help you. Assuming that your transactions live in a Django model I would just do a custom [django-admin command](https://docs.djangoproject.com/en/2.0/howto/custom-management-commands/) and then schedule the runs using cron, of cause that will prevent you from doing the 90 seconds interval. You could just have a admin command start up with a loop every 30 seconds and then do a little calculation to figure out if you're at 60 or 90 seconds. You can ignore all other intervals as they are contained in the 60 second interval.",1533056692.0
doot,Stores them in a database with a timestamp and result field? Run every minute and check if there work to do.,1533045715.0
rizogg,"IMO ""Two scoops of Django"" is very good",1533031915.0
karacic,"Django documentation - hands down the best resource you can find. I've learned a lot of new things there by just browsing random pages when I got bored, I can only imagine the amount of stuff you can learn by deliberate reading.",1533035819.0
,"Boot up a Django cookie-cutter and get it working, then build something cool. Nothing is as motivating as building something really awesome.",1533042457.0
h4ck3rm1k3,"here is an idea : Try reading source code of django itself, pick a module and try and read it by listing out the classes and functions, read the documentation of those and then try and figure out how they are implemented. Just do one big function to begin with and take notes etc, that will get you much much deeper into the system.",1533029879.0
athermop,At this point you'll probably be better served building things rather than reading yet another tutorial or book. ,1533045290.0
hip_modernism,"If you want to get into more advanced Django topics or just be exposed to things you wouldn't know to look for, I'd say actually watching DjangoCon talks are whatcha want.

[https://www.youtube.com/channel/UC0yY6a79pPY9J0ShIHRf6yw/videos](https://www.youtube.com/channel/UC0yY6a79pPY9J0ShIHRf6yw/videos)

They are a good way to start with a topic, and then you can dive deeper from there via the docs.",1533072555.0
karacic,"You could override the `__unicode__` (or `__str__` if you're on Pyhton3) method of the User model:

    def __unicode__(self):
        return self.full_name
    ",1533024431.0
Nicksil,"I ran a search using some words of your title and came across this: https://devcenter.heroku.com/articles/postgres-logs-errors#fatal-too-many-connections-for-role

That may help",1533014020.0
never_safe_for_life,"This is too many database connections. Basically every web request will open a connection to the database then drop it when done. Normally these are extremely fast, like thousandths of a second. However a few slow running queries can eat up your connection limit real fast. 

One of the ways heroku makes money is by limiting how many you can have and charging for more. So you can just pay them to make the problem go away. Alternately you can configure connection pooling; all requests first ask for a database connection from a pool and wait if one isn't available. You'd check what your max connections is and set your pool to that value.

Finally you can profile your web requests and look for any slow queries.",1533019263.0
njancsar,"I have experienced this in Django on Heroku too. Mine was caused by tasks on celery not releasing their DB connections. I had to forcible do something like 'connection.close()' in a few places.

Do you have any tasks running?",1533038995.0
karacic,"Add it to your model.
```
def mark_needs_redone(self):
    self.awsome = True
    self.save()

...
my_website = Website.objects.get(...)
my_website.mark_needs_redone()

```

",1533018800.0
chiproller,"The most commonly used with Django are virtualenv combined with pip for your dependencies, or possibly even better, pipenv to make your life easiest.  ",1533002513.0
SupermanIsEnvious,"If you can successfully “freeze” your app in a virtualenv, then it’s worth it. Makes it fairly easy and deploy code just about anywhere.

If your app has dependencies upon external C or OS libraries, you’ll need a more wholistic solution, such as Docker.",1533003124.0
apreche,"Locally you can use whatever you like best to make sure the different projects you are working on don't clobber each other. It's your dev environment, so whatever works for you is the right choice.

In production you shouldn't be using anything like this. Virtualenv and things like it are for when you've got multiple python projects running on the same machine. In production, ideally, you are running only one project per ""machine"". A machine may be a physically separate server, a virtual machine like an ec2 instance, a container like a docker container, etc. Whatever you use, the point is that in production you are isolating applications on a different layer of the stack and won't need a virtualenv-like tool.",1533004847.0
knightofni81,"I ve used both conda and virtual env - on different machines.

I wouldn’t recommend using conda envs for any production load. I ve encountered many weird bugs with conda envs over the years - the most egregious being envs suddenly refusing to activate, with fix being deletion and recreation of the environment.  It doesn’t happen very often, but it’s an unnecessary burden.

You really don’t want to have this sort of stress when you’re deploying. 

So use standard virtual environments for any project going to prod (I’d say any web project)",1533013633.0
dikamilo,docker + docker compose,1533050023.0
boxidea,"Looks okay to me.

That's how they tell you to do it in the tutorial as well:

https://docs.djangoproject.com/en/2.0/topics/forms/#the-view",1532979411.0
Mrpiggy97,"but what would happen if the form was not valid, form.is\_valid() would give you an error you need to handle that case.",1532986236.0
liquidpele,....   so you need it to be web scale?,1532995082.0
pydanny,"[Django doesn't work so well with MongoDB](https://www.pydanny.com/when-to-use-mongodb-with-django.html). Considering that, have you about instead of using MongoDB, relying instead on more proven technology for high scale applications? Things like MySQL or PostgreSQL?",1533014496.0
whatever_meh,Clarification needes: concurrent users?,1532997273.0
ccb621,"Why are those your only two options? If your organization is familiar with JavaScript, why not make an API using a JS framework? Regardless of which language/framework you use, you need to solve the following problems:

* Authentication and authorization
* Throttling/rate limiting
* Versioning

DRF makes this pretty simple; however, as another commenter mentioned, Django works best with an RDBMS—PostgreSQL or MySQL. Given this, if changing your database is not an option, I would look into JS frameworks that meet your needs.",1533095121.0
rocky-ji,"In this situation, I suggest you use JS to handle it.",1533139527.0
CraigTorso,"A lame function based view tutorial does not lead one to understand django in 30 minutes.  

How something so feeble has managed to get so many upvotes is bewildering.",1532962094.0
jedrekk,Misunderstanding Django in 30 minutes,1532963168.0
furyfred,"30 minutes to understand Django? What's up next, 30 minutes to understand machine learning?

This is idiotic. You can't learn these things that fast. The only thing this video has for it is a catchy, clickbaity title.",1532959398.0
puertonican,"I think as a high level overview of how the parts are connected this is a great start. Often times I struggle less with the code then the architecture, so this was a good one for me. Other people here are knocking on this video, but for 30mins worth of video I got what I wanted out of it. It's not like he's building a whole website, just giving pointers on how to get started. He even stresses the ""high level overview"" concept in the beginning. From here there could be months worth of learning, so it's just a start.",1532969221.0
diek00,"You should install the Django debug toolbar, this will give you an excellent overview of hits to the database , helping you see the problem spots ",1532907185.0
StrangeInitial,"Looking over it again, I realize some of the hits are from my inefficient way of creating a new post:

            for post in rss.entries:
                post_obj, created = self.post_set.update_or_create(
                    guid=post.guid,
                    defaults = {
                        'link': post.link,
                        'title': post.title,
                        'description': post.description,
                    },
                )
                if created:
                    post_obj.date = datetime(*getattr(post, 'published-parsed', localtime())[0:6])
                    post_obj.save()

I can't guarantee that post.published-parsed has a value - if it doesn't have a value I want to set the field to localtime.  Is there a better way I can update\_or\_create - where the date is updated only if post.published-parsed exists?  I don't want a later update to overwrite the first date entry in the database.

Ultimately though, I'd like to find a method using O(1) database hits to update all posts, rather than O(n).",1532906713.0
btbam06,Having trouble with this one. Anyone have an idea? Thanks!,1532885864.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1532885076.0
,[deleted],1532884373.0
DabsJeeves,"I might be off base here, but you could do something based on the auto-increment IDs. Like run it through some kind of hash so it's all randomized, but you can still figure it out if you need to.",1532880015.0
daredevil82,">I also do want uniqueness that comes with UUID, but Django also has trouble with UUID relations

care to expand on this?  if you have UUIDs but use auto-increment with the primary key,s you get the best of both worlds.",1532882456.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1532877959.0
ccb621,"Such a tutorial seems super-specific. What exactly are you trying to learn? Generally, if you are using Django to render templates, you output your data to a JS variable and use the JS library as normal. Alternatively, you could create an API endpoint and load the data via AJAX.",1533095587.0
wasabigeek,Have you looked at their [cookiecutter](https://github.com/pydanny/cookiecutter-django) ? It's more bleeding edge than the book but you should be able to sidestep most of this config.,1532844322.0
nkuttler,"If the settings are in a different package now, the import path for the urls module is not simply ""urls"" but something like yourproject.urls.",1532844379.0
bachkhois,Ok. So you made wrong config in Nginx. Just compare the path you configured in Nginx and the path you found with `find` command.,1532855376.0
HORACE-ENGDAHL,"Nginx is looking in the folder you configured it to look and isn't finding anything. Since you mentioned in another comment that your URL is: 

    http://localhost/media/files/2018-07-29/Filename.pdf

And your config says:

    location /media {
        alias /opt/services/webapp/media;
    }

Is this local path valid?

    /opt/services/webapp/media/files/2018-07-29/Filename.pdf

If not, there's your answer.

If the path is valid, it could be a permissions issue on the files/directories themselves.",1532857263.0
The_Amp_Walrus,What is your media config in settings.py? I will refer you to a working example [here](https://github.com/MattSegal/family-photos/blob/master/app/photos/settings/__init__.py).,1532840639.0
bachkhois,What is the URL you used for accessing the file and got 404?,1532842889.0
Poromenos,"You need to start it locally and then push it to the remote server. If you start on the server, you're going to have so much custom stuff there, you're never going to know how to push it afterwards.

These days, [I recommend Dokku](https://www.stavros.io/posts/deploy-django-dokku/).",1532816380.0
HORACE-ENGDAHL,"If you haven't written any code yet you might as well start developing locally (using python's local web server) and push code changes to something like Github until you have a working project. When you do, you can ""git clone"" your repo onto the DO droplet.",1532814556.0
Fun2badult,"I can make Django apps now but deploying them on either one? Can’t figure it out for some reason even when I follow the tutorial. Some steps don’t work for some reason when I do it and I spend hours trying to figure it out, still doesn’t work fml",1532815936.0
AbhiTan,Development should be done locally as the development process involves lots of iterations and it would be difficult to maintain the speed if you are doing it directly on the remote server.,1532854670.0
SnapDraco,Pythonanywhere,1532813742.0
The_Amp_Walrus,"If you're going to host your own site and manage the underlying Linux server then Digital Ocean has a pretty nice user experience for creating and managing a server. Configuring and deploying your Django app onto said server will kick your ass the first few times you do it, but everything you learn is super valuable.",1532832086.0
karakira,Heroku works well ,1532868627.0
Classic_Camel,"I'm currently just going with straight up linode + nginx and gunicorn. setting up a simple systemd service for gunicorn and nginx config (including ssl via certbot) isn't very hard at all. but I do admit to being from more of a sysadmin background. 

Locally on my Linux laptop I use Vagrant to spin up my dev environment using an ansible provisioner based off of https://github.com/wharton/python-vagrant-centos7 Except I use Ubuntu 16.04 LTS 

More recently I have just used runserver and a plain old virtualenv locally to play with changes to a wagtail based blog I'm using before pushing them up to the linode via git without the vagrant box approach and it was just fine. 

I don't think you can really avoid learning how to run Django on a real server. even if you use more fancy deployment methods you will want to understand how it ties into the web server since ./manage.py runserver does a lot for you that isn't done in real life like serve static and media files itself. 

You also really want to be using the same database in development that you are using in deployment because there's lots of differences between the behavior of SQLite vs PostgreSQL or MySQL.",1532880795.0
boatsnbros,"I would reccomend develop locally, set up a repository on github, then once you have the most basic form of the application - pull to a pythonanywhere server. They have good resources on getting set up. If you feel like you want to have more granular over the server you can get set up on digitalocean - they have a great tutorial on django/postgres/nginx. Plus you get a little more performance for the prices vs pythonanywhere. ",1535331475.0
diegobust4545,You should try to implement it using the Django RestAPI. That way it could be expanded on mobile applications as well,1532786386.0
SignificantTomato3,"To be honest it looks more like a high school homework project than something one will be willing to join.

You should really put some effort into the code quality and style guide all across the codebase.  ",1532789838.0
vedant_13,"Thanks for your view, will definitely consider it",1532786523.0
immohsin,"Cool.. Will contribute. Mention the python version and django version Required.
And other dependencies.",1532786900.0
bmoe872,Where are you hoping to host this? ,1532789523.0
PotatoNetizen, Can you try the solutions proposed here: https://devcenter.heroku.com/articles/django-assets ?,1532747792.0
,You either need white noise or them hosted externally. All of this is in the docs and any tutorial,1532748917.0
efgm1024,Try running collect static on Heroku instance. https://docs.djangoproject.com/en/2.0/howto/static-files/,1532811179.0
fotcorn,"I still think the database is the problem. Did you try to add select_related[1] and prefetch_related[2] to your queries? The timing results of the SQL queries are inaccurate and most of the time much higher than shown.
Also, did you check that you are running with DEBUG=False? And with deactivated debug_toolbar? Can you show us some of the code that is slow?

[1] https://docs.djangoproject.com/en/2.0/ref/models/querysets/#select-related

[2] https://docs.djangoproject.com/en/2.0/ref/models/querysets/#prefetch-related",1532731460.0
,[deleted],1532740915.0
joejaz,"Try having a look at pyflame.  You can attach to an already running process, profile it and graph the results.  ",1532730811.0
,[deleted],1532772001.0
ccb621,Have you tried using [Django Debug Toolbar](https://github.com/jazzband/django-debug-toolbar)?,1532735064.0
savuporo,"Run python with built-in cProfile support

https://docs.python.org/2/library/profile.html

Thats assuming that Python worker code is actually your problem. It sounds like you might be running database ( and perhaps other ? ) things on this server. If you do, and for some reason you can't separate it to another machine ( you should ) use a Linux `perf` to work out where time is spent.

EDIT: Also, if you can, use tools like NewRelic APM, Dynatrace etc to tell you pretty much automatically where your bottlenecks are.",1532758308.0
SupermanIsEnvious,"The first thing to remember with Python is that if you only have 1 CPU, only one thing can happen at a time. Threads and processes can flip during IO wait, but blocking actions such as while loops, etc, can result in 100% CPU time until the action is complete, regardless of how intensive the operation. 

Also, an ORM is not the choice for optimal performance. A lot of work can go into translation from raw data into your models, and this is the case for Django. My guess it this is where you’re getting stuck. If you’re performing any long looping actions which don’t just involve calling your database, I’d look at whether you can insert short sleep sessions to allow flipping between threads or processes.

As far as tools, Python has an extremely informative profiler [built-in](https://docs.python.org/3/library/profile.html).  

If you happen to have access to the professional version of Pycharm (it really is worth it), they provide [an excellent visualization tool](https://www.jetbrains.com/help/pycharm/profiler.html) for the cProfiler output.",1532746085.0
nkuttler,Try https://github.com/orf/django-debug-toolbar-template-timings,1532754779.0
japanfrog,"For what its worth I had the same issue with the exact same specs and it ended up being postgresql, so I just moved it to another server and everything is peachy.",1532773588.0
ciarancour,"Try the ELK stack APM client for django https://www.elastic.co/guide/en/apm/agent/python/current/django-support.html

I've only started deploying it in staging, much better than ah hoc profiling, very promising so far (and free)",1532796792.0
KILL-ME-IN-JERUSALEM,">During (1) request, the %CPU can sometimes shoot up to 100%. I don't know what to optimize other than renting a faster server.

Are you trying to solve a problem that isn't a problem? What *issue* are you having that makes you want to optimize CPU usage? Or, as another way of thinking about it: why **wouldn't** you want your CPU to be fully utilized by whatever is using it?

Stay focused on actual issues, i.e. your app running slowly, not random metrics that you think are bad (like 100% CPU, which is not in itself bad).",1532815521.0
djangoblaster2,"As I posted inside a thread: I solved a similar issue with new relic. I much prefer open source, but nothing gave me the clarity on django perf that I got with NR.",1533063102.0
TunaBoo,"You have your entire stack on a single CPU of a budget VPS. You are in no position to profile. This is like taking a car pulling a boat trailor to a drag stripe. You can get a 1/4 mile time... but what does that prove?

Make at least a web and a DB server. Get each 4 CPUs. Then it maybe makes sense to profile.  But this setup should handle a few hundred requests per second. Are you really to this phase of your project?",1532784653.0
pancakeses,"If they're static, you can add each file to the project's urls.py as [TemplateView](https://docs.djangoproject.com/en/2.0/ref/class-based-views/base/#templateview)

If you set up the urls to match the existing links, you should be good.

More info: https://www.agiliq.com/blog/2017/12/when-and-how-use-django-templateview/

It may take some fussing around getting your image source to match up with the ones coded into your html files, but if they're all under one folder (not the root of your site itself) you should be fine.

All in all, though, this is a lot of acrobatics for static html files :D",1532698434.0
dorsal_morsel,Is there some reason to not just serve the files? Why does Django need to be involved?,1532737777.0
Comm4nd0,"you can render the html using the render function.

return render(request, 'path/to/index.html')

Then in the href's within the index.html use the static global {% static 'path to img' %) after setting the global var in [settings.py](https://settings.py) of course. unless i'm missing something?",1532696104.0
rowdy_beaver,"Would the query filter '[distinct()](https://docs.djangoproject.com/en/dev/ref/models/querysets/#distinct)' work?  

You may also need to use a values() filter and ensure you order_by() the same field.",1532722515.0
surpriseskin,"Doesnt it make sense for the `Catergory` model to be a m2m field with `Item`? That way, when visiting `products/filter_options/` all you do it return `Category.objects.all()`. This also ensures your data is normalized.",1532738779.0
therealyakkob,"Two options come to mind:

1. Use a widget in your inline form to just output text instead of a select box.
2. In your template, refer to the model directly instead of the form to output text. However, this would mean manually looping over the relationship and rendering all the other fields individually.",1532703569.0
booooomba,"You should really complete the official tutorial. You clearly have not done that, have you?
It explains everything you need!!",1532684410.0
haloweenek,Sorry guys - op rtfm,1532729415.0
pencilvesterC137,"I find python easier and more fun to code most of the time. The code looks nicer, is easier to read, except for some cases. It obv depends on the author, I've seen wonderfully written JS code as well.

I actually do use both node js and django weekly, its how I put food on the table. Node can be leaner for sure but django brings alot of things I already need to the table. For a small, SPA with no logins or database at all, maybe some 3rd party API calls, I'd prefer node. Anything where I need users I end up wanting django again.",1532714437.0
mipadi,Exactly. They're not evaluated until you try to work with the results.,1532642765.0
defmacro-jam,Correct.,1532651149.0
KarlIvanov,"Hi!

is this the backend? where the source code is the mobile application ?

Thanks!",1532676413.0
Classic_Camel,"I think the internet in general has a huge signal to noise ratio problem.

 I'm about to build a project in Django for the first time (as in not a tutorial project but something real) and I've gone through several tutorials. some were much better than others but I mainly stuck to what was recommended by the Django community like the official django tutorials, the djangobook site and obeythetestinggoat, two scoops of django, etc. 

In my case django got on my radar because I wrote another project in Python back in 2013/2014 on google app engine and I wanted something similar that wasn't tied down to their platform as a service. and it turned out that Django (at least in my opinion) looked very close to what I was used to previously with GAE.  

I think poor information can be a turn off but with a quality framework like Django there is plenty of good official documentation available out there if you know how to search for it and you don't have to stray far from the official Django site to find it. (If you didn't drop by there first, then why not?) 

I also think it's worthwhile to actually pay money for some quality books if you want to really get serious about something vs just toy around. 

I think the biggest bit of friction for some people is that you can't just plunk django down on any random cheap webhost like you can a PHP site or find tons of dirt cheap developers to work on a django site like you can with PHP.  But I don't think that's django's target market anyway. ",1532625689.0
mutatedllama,I've not come across this. Django is so well-documented that it's hard to imagine. ,1532625078.0
mhurron,"No more than every other technology and framework. 

People have been convinced that the way to get 'known' is to write a blog of how to do things so you end up with people that really shouldn't be trying to teach others write poor tutorial after poor tutorial.

> Could we perhaps have a section within the Django docs where developers can submit guides that are versioned for relevancy and peer reviewed by the community before publishing?

You going to pay for their time? You also seem to be mistaking this subreddit for official Django Project communications.",1532625422.0
grantrules,"I feel like everything has this issue. YouTube is filled with reviews for products where people have no experience. ""This is the first one I've tried and it seems really really good and I highly recommend it"" meanwhile they have no idea what they're doing or talking about",1532631517.0
,">I’ve noticed this trend particularly in non English speaking countries that I am from, where it seems to be encouraged to create tutorials for web frameworks as a way to feign competency.

Yeah that'd be the problem. Well that and outsourcing and the general culture motivating both of these. Most foreign articles I see are along the lines of ""I'm an expert with 20 years experience in 10 different subjects blah blah blah"" -> tutorial -> complete mess of practices, hacks, and copy pasted code that's clear incompetence.",1532629730.0
wheezy360,"I don't think this is specific to Django. That said, Django doesn't seem to have it as bad -- I think it's more wide-spread in other frameworks. The number of ""Build a simple REST API with Node.js and MongoDB"" blog posts I see on a weekly basis is ridiculous. None of them offer anything of value that hasn't been already been done several times over. I feel like the problem stems from programmers (whether they're experienced or not) wanting to get into writing and not having anything original to write about.",1532706683.0
,"It'd be great for you to create an open-source app for organizing Django tutorials, written in Django.",1532629456.0
ge0n1,Between the Django source and docs... Maybe just some deployment guides is all you should have to read.,1532649420.0
overact1ve,It'd be great if there was something like laracasts.com for Django. For learning it's kinda slow compared to just RTFM but it's a nice way to get to know best practises as an experienced programmer is live-coding and explaining his thought process.,1532678816.0
HiroshiFS,Where are you from?,1532679091.0
karakira,"The first time around . I didn't know where to start with django which led me to learn flask & [web.py](https://web.py) first. Ultimately once I found a decent tutorial I was quickly able to learn it and now I find it easier to depend more on the documentation (assuming no 3rd party apps are being used). A lot of packages have poor documentation some might actually not provide setup information of any kind leaving you with 3 options , 1. read the code to see how it is used, look for an alternative, make your own.  
",1532696496.0
athermop,"Django is fine. So is Flask. So is pretty much any web framework.  Really, depending on your experience and knowledge, your use case is so simple you could do it in pure python. ",1532635299.0
alexshin83,Django isn’t a good solution for your case cause it’s a really difficult. I think that you should look at microframeworks such as Flask or even bottle.py,1532624173.0
Jgrbot,"What kind of site are you making? There aren't really that many different types of sites, majority of it revolves around storing, handling and presenting data. Like the other guy said, do tutorials to begin with. 

If you can't find an exact solution for a specific problem or feature you want to have, find something that is similar and then tailor it for your needs.

Also reading documentation is a skill which you will get used to, every dev from junior - senior needs to read the docs.

and while this is the Django subreddit, I would recommend looking at Flask as well, as it is a lot more lightweight that Django and less overwhelming in my opinion.",1532608482.0
japanfrog,My biggest recommendation is to stick with the official documentation and two scoops of Django. A lot of unofficial tutorials are plain wrong or outdated.,1532622767.0
CKreuzberger,"Step 1: Read Tutorials, not Documentation

Step 2: Create some example application and learn by doing

Step 3: If you require a specific feature, and you are unsure about it, use your favourite search engine like this: Django Framework + Upload Image

Step 4: If you figure something out that noone has written a good tutorial about, write a tutorial.
",1532603242.0
i_like_trains_a_lot1,"I'd say that must knows are 

- generic class views and how/when to use them
- middlewares
- authentication backends (eg. being able to create an auth backend that checks the password against a 3rd party service)
- social auth (it's not that complicated but pretty hard to master and get it right, especially at the data storage level)
- Advanced model creation (with abstract views, custom fields, custom managers and/or querysets).
- performance testing and troubleshooting (especially at the database level, you never know what unpleasant surprises the ORM will give you). This includes database indexing.
- I'd add Docker but it's not Django specific but surely workes. With the container orchestration space becoming more relevant, it surely helps to know how to deploy your app inside a container.
- permissions and roles - a lot of applications require very granular permissions control over certain actions and Django has some tools to aid that (eg. the built in permission system which is pretty limited or django-guardian)

I know it's a lot of items and a lot of people would debate whether some of them are required for a senior django develop to know, but I found myself helping me quite a lot.",1532601553.0
jobelenus,"I've been using Django for 10 years. A junior django dev should be able to pick up and learn the basics to mastery within a year or two. The basics now include using generic views.

An intermediate dev should master `annotate`,`values`,`F`, `Q`, `select/prefetch_related`, and be capable of understanding which middleware is important, and when to use some, and to be able (with frustration) implement custom auth/social auth.

A senior dev should be capable of doing much more. It's almost less about Django at this point. They should certainly be able to read the django source to figure out how or why something works (or doesnt work) the way it does. They should know when to adopt certain tactics. They should be absolutely comfortable extending models and fields to do *magic*. They should be comfortable reading and understanding how django uses meta programming to do some *magic*. And they should be learning how to use that meta programming to reduce code size and make it much more readable (e.g. DRF, and Django forms both use meta programming to keep the programmer from doing a lot of extra unnecessary work). A senior Django should understand how processes and threads in python work, and how their deployed environment uses them (because, depending on the complexity of the work -- you're going to run into problems you'll need this knowledge to figure out)",1532612079.0
Daishiman,"Been doing Django for a decade.

I'd say some of the big sticking points for less senior devs are:

* Model forms and customized forms (validation, widgets)
* Generic relationships, and avoiding them unless absolutely necessary (things that end up using generic relationships are generally overengineered hacks)
* Admin customization: some things in the admin are a kludge but they're 10 times easier than writing your own CRUD views.
* Using mixins in CBVs
* Advanced querying functionality
* A general understanding of tools for background processing: Celery, Redis and others
* Template caching and custom template tags and filters

Above all, the most important thing, by far, is knowing how to make a solution to a problem that is as absolutely simple as possibly but no simpler. In the past 5 years I've noticed that I spend proportionally way less time coding and much more doing upfront design work in order to understand the nature of a problem, researching to see whether someone has solved the problem already, and making sure that my solution is resilient to requirement changes.",1532630728.0
athermop,I might add knowing django rest framework inside and out to the level mentioned in i\_like\_trans\_a\_lot1's [comment](https://www.reddit.com/r/django/comments/920rvg/advanced_django/e327ykx) as DRF so widely used nowadays.,1532636518.0
ccb621,Post a complete stack trace along with the versions of Django and django-rest-auth you are using.,1532588024.0
VegasTamborini,"This is a Pillow problem, not a Django problem, but from the look of your code, this line:

`self.image= InMemoryUploadedFile(output,'ImageField', ""%s.jpg"" %self.image.name.split('.')[0], 'image/jpeg', output.len, None)`

needs to be changed to this:

`self.image= InMemoryUploadedFile(output,'ImageField', ""%s.jpg"" %self.image.name.split('.')[0], 'image/jpeg', len(output), None)`

Note that len() is a function, not an attribute of an object. I have not tested this, and can't guarantee it will work. It's just what stood out to me from looking at your code.",1532587591.0
kennydude,"If you're doing this quite often, https://github.com/matthewwithanm/django-imagekit is a lot eaiser in my experience",1532611655.0
dorsal_morsel,"If you're hosting on AWS, https://aws.amazon.com/ses/ is quite generous. 62K free emails/month, assuming no attachments.",1532573459.0
lyapustin,"Mandrill is a good one, but it's not free.",1532558260.0
thecrumbles,"You might also check out Mailgun, which, like the AWS options, has a great free tier.  And you get to throw out SMTP and use a http API to send your mail, which is nice. ",1532593087.0
RedSquirl,"Create a PTR record for your host. SPF, DKIM. There are plenty of ways to set yourself up as a legitimate mailserver.

You also might want to check if your domain or IP is on any RBLs or DNSBLs. Use MXToolbox for that.",1532558363.0
grantrules,"I run Postfix on my server with SASL, TLS, SPF, DKIM, and DMARC set up. It lets me deliver to Gmail but it is not the easiest thing to get running. But it is free.",1532566428.0
njancsar,I have used this before to do what you want: http://django-model-utils.readthedocs.io/en/latest/utilities.html#field-tracker,1532556130.0
callius,"Thanks to /u/njancsar, I was able to figure this one out using a tracker.

Here is the updated `post_save` view (it has additional stuff that I had truncated in my op). I'm sure it could probably be more efficient, but it works really well so far!

    @receiver(post_save, sender=models.Litigant)
    def update_litigant_dates_on_save(sender, instance, **kwargs):
    
        def update_old_litigant_case_dates(obj, instance):
            # check to see if the old litigant's earliest or latest case was this one. If so, check to see if they have
            # any other cases that are earlier or later. If they do, assign to appropriate field and save.
            if obj.earliest_case == instance.case or obj.latest_case == instance.case:
                if obj.earliest_case == instance.case:
                    try:
                        obj.earliest_case = models.Case.objects\
                            .select_related('session')\
                            .filter(litigants__person=obj)\
                            .earliest('session__date')
                    except models.Case.DoesNotExist:
                        obj.earliest_case = None
                if obj.latest_case == instance.case:
                    try:
                        obj.latest_case = models.Case.objects\
                            .select_related('session')\
                            .filter(litigants__person=obj)\
                            .latest('session__date')
                    except models.Case.DoesNotExist:
                        obj.latest_case = None
                obj.save(update_fields=['earliest_case', 'latest_case'])
    
        def update_new_litigant_case_dates(instance):
                # See if litigant has an earliest or latest case. If they don't assign this case.
                # If they do, compare dates and assign accordingly.
                if not instance.person.earliest_case:
                    instance.person.earliest_case = instance.case
                elif instance.person.earliest_case.session.date > instance.case.session.date:
                    instance.person.earliest_case = instance.case
                if not instance.person.latest_case:
                    instance.person.latest_case = instance.case
                elif instance.person.latest_case.session.date < instance.case.session.date:
                    instance.person.latest_case = instance.case
                instance.person.save(update_fields=['earliest_case', 'latest_case'])
    
        def update_land_dates(instance):
            # Check if there are lands associated with case. If so, iterate through them and adjust their dates accordingly.
            if instance.lands:
                for land in instance.lands.all():
                    if not land.land.earliest_case:
                        land.land.earliest_case = instance.case
                    elif land.land.earliest_case.session.date > instance.case.session.date:
                        land.land.earliest_case = instance.case
                    if not land.land.latest_case:
                        land.land.latest_case = instance.case
                    elif land.land.latest_case.session.date < instance.case.session.date:
                        land.land.latest_case = instance.case
                    land.land.save(update_fields=['earliest_case', 'latest_case'])
    
        # see if there was a previous Person (i.e. is this an update to the person field or a new entry).
        # Otherwise, only update the person saved in Litigant model.
        if instance.tracker.has_changed('person'):
            previous_litigant = models.Person.objects.get(id=instance.tracker.previous('person'))
            # need to send both the previous_litigant instance (a person model instance) and the instance variable, as the
            # instance refers to the litigant instance itself, which is where we get the current case information.
            update_old_litigant_case_dates(previous_litigant, instance)
            update_new_litigant_case_dates(instance)
            update_land_dates(instance)
        else:
            update_new_litigant_case_dates(instance)
            update_land_dates(instance)",1532561035.0
thereShouldBeaLogin,Try post_init with pre_ or post_ save. Or better don't use signals,1532591753.0
callius,"I would personally do this using two views and ajax.

You've got the right idea though. The form view adds search params to the ListView's url, which the ListView then uses for its filter (via `get_queryset` and `get_context_data`).

What I would do differently is add in a little jquery to have the ListView load in via ajax after the form view is submitted.

Does that make sense? That way you don't need to reload the entire page every time they do the search.",1532553333.0
fairytale81,Or you can just use Django-filter ,1532577173.0
The_Jukabo,Check out this guide on how to create an ajax filter with in django. [https://www.youtube.com/watch?v=jKSNciGr8kY](https://www.youtube.com/watch?v=jKSNciGr8kY),1532952826.0
callius,"[Could using the slice feature help here?](http://django-crispy-forms.readthedocs.io/en/d-0/dynamic_layouts.html)

You would need to use a len() to get the length of the field list, but then you could just wrap that section of the field list with the field information you want.

Edit: provided that the only feature of this form is the dynamically added fields, you wouldn't even need to fuck with `len()`, just use `form.helper.all().wrap()`. This will wrap each form field in the given wrapper. You could then pass that through `form.helper.wrap_together()' to add the `form-row`class.",1532549800.0
Ake_Vader,"Are you using virtualenv in WSL and pylint in vscode? If so, does it warn on all imports?

My only problem, otherwise it's great.",1532543763.0
Brandhor,"I don't really see the need to use wsl, you can develop django on windows natively

it could be useful if you want to test deployment but I don't see any point for development unless you are using some packages that only work on linux which I pretty much never encountered in more than 10 years",1532599216.0
booooomba,">Long time backend programmer

who doesn't know how to use google and hasn't even worked through the official tutorial. 

You absolutely do not just run the DEVELOPMENT server in production. This is stated multiple times in the Tutorial/docs.

Most people use nginx + gunicorn + Postgres. As do I.",1532532122.0
pencilvesterC137,"Can also use apache's mod_wsgi.

Where is most of your experience in backend, just curious?",1532532486.0
njancsar,I also like this library: https://github.com/anymail/django-anymail,1532536395.0
dalore,Use the Django one so sending mail is abstracted. For example on a staging environment you could configure a different Django mailer so test emails don't accidently go out to customers.,1532526775.0
mutatedllama,Could you show us the relevant parts of your `forms.py` and `models.py`?,1532530300.0
booooomba,If you need help I'd appreciate it if you at least wrote one or two sentences about your problem. What's the error message for example? ,1532516202.0
nelsonko,"> setting some flag as `True`

Dont use the flag use a timestamp. If user calls the API you set it to now(). If the flag is older than 3 hours you know it is false. ",1532528044.0
neoreeps,"You could do something like: write a management command to check for all objects with the flag set to True. For each flag found check the set_time which should be a timedate. If greater than 3 hours then say the flag to false and save the object. You can then call the management command at whatever interval make sense using whichever tool you want. With this simple setup I would just run it every 5 min via cron. 

You have to handle the case where the server may crash or get rebooted and this is the simplest method I could think of in just a couple min. ",1532495620.0
fdemmer,"nice overview, but the mentioned middlewares are confusing. are those wsgi middlewares?

if so the django middlewares are missing. also they should be mentioned as being passed through on the response aswell.

is uwsgi using some wsgi middlewares by default?",1532510372.0
Sonic_Pavilion,"As a beginner, it certainly did! Thank you",1532528428.0
darksied28,cool,1532510609.0
Zaboravljivi,But there is no fence between Models and Database.,1532524999.0
darty1713,"Great clip! A bit more detail on the middlewares would be nice
",1532545898.0
evensteven01,What about serializers?,1532570206.0
Fun2badult,Nice. I just spend couple of hours reading about this yesterday but awesome to see a clear and concise visual form. Good job. Make some more about Django if you can,1532496329.0
DmitriyJaved,What software did you use to create this video? ,1532520521.0
ThatOtherBatman,"Without having watched it yet, great idea.  
When I was first learning Django, wrapping my head around this was my biggest ""aha!"" moment.",1532543554.0
Ecocide113,"These was fantastic. Very helpful.

I know were in the django subreddit. But would u be able to do one for a mern stack? I would be eternally grateful..",1532549176.0
Hellochristmas,"A plain text link to youtube would be good. :)
",1532557178.0
petra_macht_keto,This was really helpful to simplify it mentally!  Thanks so much!,1532623266.0
parthkrishna1611,"Damn. This is so good. 
Post it on LinkedIn and what's your profile ",1532489198.0
Nicksil,"Is this for an interview or school project?

Also, show us what you've got so far and we'll go from there.",1532484398.0
Nicksil,You want to complete the official [Django tutorial](https://docs.djangoproject.com/en/2.0/intro/) and then go from there.,1532479497.0
IReallySuckAtChess,"From what I know, no. You need to write your own form validation. Personally I recommend carefully formatting it to a structured json or whatever client side, then validating according to a much simpler spec server side based on how you expect the json to look. There are still some prebuilt things available to say determine if a string is indeed an ip address for example though you you'll have to navigate the data structure yourself. ",1532473851.0
pancakeses,"Either is probably just fine.

Keep in mind, though, that when you say ""native to django"" you might be forgetting that you have access to the entire power of python in the backend. You dont have to use a django-specific app. If there's another python package you'd like to import in order to process the text, then feel free to do so.",1532480060.0
IReallySuckAtChess,You can pass it to a text field in and apply this logic: https://stackoverflow.com/questions/10872405/django-allow-user-to-submit-valid-html-in-form-field ,1532474020.0
booooomba,"Well that depends. Will it literally only be ONE single dataframe? Wouldn't it be enough to load it once and then just have a simple if-clause in the view?
Otherwise you could be looking at celery. That is pretty much the Python/Django standard for handling tasks.",1532444729.0
synw_,"Like others recommended use an async process like Celery to do the transformations on the dataframe if possible and store the results for distribution. If the transformations really must be made on the fly for each request maybe you can [store the df into Redis](https://stackoverflow.com/questions/37943778/how-to-set-get-pandas-dataframe-to-from-redis) for faster access. 
I recommend the preprocessing solution with a Celery (or other) worker on a time or event base, so that you can take advantage of the classic Django solutions for data distributions: db, cache. All depends on your use case, and more info would be needed for a better answer like the frequency of update and what triggers it, the level of persistence required, the volume to be distributed...",1532453083.0
Kkremitzki,"Part of the problem here is that when you're researching the Internet for answers, you're instead finding software marketing or people who have fallen for marketing, trying to sell people solutions for problems they don't have. You don't need Docker and you DEFINITELY don't need Kubernetes for this. You don't need to containerize your web server or database, either. All of this stuff is for people solving problems you don't need to worry about.

I don't know what OS you're on, but in general, what you want to set up is a development machine to work with. The easiest way to do this besides using an actual computer or laptop is to run it as a virtual machine. The simplest way to do this, assuming you're on Windows, is probably with VirtualBox. Set your virtual machine up to use Ubuntu 18.04, because you'll get a good trade-off of the newest software being available plus support community and questions you can easily Google.

Once your VM is set up, log in and install nginx, postgres, etc., with `apt`. Find your VM's IP address with `ip a`. On your host machine, visit http://<your.vm.address> and you should see a response from nginx.

Then, you will have a normal (virtual) machine you can interact with graphically, but it also can be used like a local server where you just SSH in and do whatever you need to do. ",1532482417.0
cherya,And of course I'm sorry for my English ノ( º \_ ºノ),1532437405.0
pancakeses,"Is this going to be split to multiple servers? If not, you're making this **far** more complicated than it needs to be. ",1532440707.0
ghostofgbt,"Nice tutorial! I don't get why people don't go through the entire DRF tutorial. It takes like 2 hours tops.

Btw, you can use `__all__` for your serializer fields since you're serializing all the fields. You know, since your tutorial is all about writing clean and elegant code and all that ;-)",1532433667.0
Ake_Vader,"Let's assume i'd like the user info to be nested in the BorrowedSerializer so one can get usernames included in the list over the borrowing going on. Would you then change the nested serializer to handle user objects on create/edit, or would you create another serializer containing the nested objects and keeping the flat one for create/edit actions and always work with ID's?",1532441940.0
barbuzare,"That's simple, clean and well explained. Waiting for the next :)",1532462857.0
shepherdjay,"This is great, building an API from ground up for the first time myself. The biggest thing I see is the /v1/ or something similar for apis. Seems like at the end of the day its a good idea. Is the best way to do this via separate apps or just like you did with an include? I can't really find a ground up explanation of how to properly build in versioning.",1533589486.0
scaphilo,"Unfortunately i have no example for you yet... i will need to build something similar the next days :-) 

I would work with functions that return you read only fields

[https://www.django-rest-framework.org/api-guide/fields/](https://www.django-rest-framework.org/api-guide/fields/) 

or maybe you can go with nested Serializes  
[https://www.django-rest-framework.org/api-guide/serializers/](https://www.django-rest-framework.org/api-guide/serializers/)",1532465600.0
Fabi0_Z,"you could use a JSONField and store only the data you need, but you will lose the auto generated form in Django admin

another solution could be using several models for every ""category"" of field, for example, make a model to store only the data about the sizes, a model for the data about the colors etc, and use a OneToOne field in the main model to connect them",1532420442.0
MDziwny,"70 fields is a lot but it's not too many.

If you think they really belongs to this model, you can try to organise your code with some mixins:

    class GroupOfStatsOneMixin:
        stats_1 = models.IntegerField(blank=True, default=0)
        ...
    
    class GroupOfStatsTwoMixin:
        stats_2 = models.IntegerField(blank=True, default=0)
        ...
    
    class Item(GroupOfStatsOneMixin, GroupOfStatsTwoMixin):
        ...

But maybe a relationship would be more appropriate :

    class Item(models.Model):
        ...
    
    class Stat(models.Model):
        name = models.CharField(max_length=100)
    
    class ItemStat(models.Model):
        value = models.IntegerField(default=0) 
        item = models.ForeignKey(Item, on_delete=models.CASCADE)
        stat = models.ForeignKey(Stat, on_delete=models.CASCADE)

As u/Fabio_Z said, a JSONField could also fit your needs.",1532423111.0
heppy,"From a database perspective, having 70 columns in a table is fine. Assuming your fields are IntegerFields, so they will take up 4 bytes in the database for a total of 280 bytes per row which is totally within limits.

I would not split up the model into multiple models with separate tables, as this will only lead to performance issues when you have to JOIN the database tables. Organizing the fields into various mixins might make sense.",1532438605.0
seddonym,"Good question! A large number of fields on a model corresponds to a large number of columns in a database table. The most obvious alternative would be to split the fields up across multiple tables. If you do this, you can use OneToOneFields and link to other models that contain some of the fields.

Whether or not this would perform better depends on how you use the data. If there are some fields you use more than others, your model might be a bit more performant if you split off the less common ones. On the other hand, if you're always using all the fields, the extra joins would have a performance hit.

Usually, though, code maintainability is much more important than performance. I would make the decision based on whether you think it's easier, as a programmer, to work with one big model or a selection of smaller ones. My personal preference is to split them up!",1532437456.0
andrewingram,"Using null won't break if you're filtering on an integer, so I wouldn't set a default value.",1532425968.0
yee_mon,"You have to store the user id with the session, otherwise how would you associate the session token with the user?

Just don't store it on the client side, e.g. don't put it in the cookie.",1532416291.0
ismailtaha,"You need to put your app specific static files underneath your app directory. Then when you run collectstatic your apps static files will be added to your STATIC_ROOT just like admin static files. 

Here is the trick, when you create an app named app1 create static directory like the following:

project/app1/static

After that create an additional directory inside to precent files to be overwritten by other apps:

  project/app1/static/app1

Then just run collectstatic to put them in STATIC_ROOT where nginx can serve them, without any settings changed. 
",1532415856.0
nerdwaller,"It sounds like you’re looking for a [ModelViewSet](http://www.django-rest-framework.org/api-guide/viewsets/#modelviewset) - presuming the route is resource based. Combine that with a serializer and you’re done,  nothing custom other than permission checks probably.",1532397627.0
ghostofgbt,This is basically a [viewset](http://www.django-rest-framework.org/api-guide/viewsets/). All you need to do to create your own class with custom capabilities though is inherit the GenericAPIView and include whatever mixins you want. ,1532397625.0
jobelenus,"There is pretty much zero purpose to making one class that does everything. The only thing one class gets you is one URL. But that just makes disambiguation (what did you actually intend) impossible to figure out. Its just simpler to make different URLs, and thus different classes.",1532397331.0
SenorDosEquis,[Here's a tutorial on PythonAnywhere itself](https://help.pythonanywhere.com/pages/LetsEncrypt) for how to set up a Let's Encrypt certificate.,1532385773.0
grantrules,"You probably need to do manual DNS challenge. You'll run the tool with a manual dns challenge, it'll give you a TXT record you need to add to GoDaddy's DNS for your domain and then continue the tool.. it'll confirm your site, and then generate the certs. You'd just move those to your site and you'll have to manually renew them. There's also an http challenge where you place a file in the root of your web server.",1532379792.0
seddonym,"I'm not aware of anything out of the box, but it shouldn't be too challenging to roll your own. You can assemble any data structure and then pass it to the template context for your template to iterate over. If you're using a class based view (probably a ListView), typically you'd override the get\_context\_data method (see [https://docs.djangoproject.com/en/2.0/ref/class-based-views/mixins-simple/#django.views.generic.base.ContextMixin.get\_context\_data](https://docs.djangoproject.com/en/2.0/ref/class-based-views/mixins-simple/#django.views.generic.base.ContextMixin.get_context_data)).

To get it into the right shape for your template, you could take the queryset of objects already being passed to the context and assemble them as a nested list of model instances, in the following shape:

    [
        [
            [<Event: 1 Aug 2017>, <Event: 3 Aug 2017>],
            [<Event: 10 Sep 2017>, <Event: 13 Sep 2017>, <Event: 20 Sep 2017>],
            [],
            [],
            [<Event: 3 Dec 2017>],  
        ],
        [
            [<Event: 17 Jan 2018>, <Event: 18 Jan 2018>],
        ],
    ]

If you pass that to the context template as 'years', you'd be able to render it as you describe in your template.",1532374459.0
notafuckingcakewalk,"You can deploy directly to AWS using Elastic Beanstalk. You don't need to have a remote git repo, it can do it directly from your local repo.

Use django-environ to set up configuration. Move everything including database settings to environment variables.

Write everything and test it on your local server then deploy. Initially you may run into configuration problems but as you adjust to them you should be able to make all modifications locally then deploy to AWS and have it work correctly right away. 

Definitely make use of a virtual environment and freeze the requirements to a requirements.txt which AWS will automatically read for you.",1532353888.0
booooomba,Private git repo. Thats the most common way of doing it.,1532346750.0
rocky-ji,"You can use Gitlab for your repo, and then push your codes to the repo,  Make a script down the codes when you git push some new codes.",1532349248.0
ByronEster,"PyCharm has remote deployment configuration options.
You could potentially setup a deployment configuration to deploy to your AWS host.",1532353679.0
pythonpete7,"Have you looked into [c9.io](https://c9.io)? Amazon bought it awhile ago now, should work really well with AWS",1532396068.0
throwbible,"EDIT: You did, the question is just formatted a little unreadable.

Did you remember to configure the authentication backend?

https://django-auth-ldap.readthedocs.io/en/latest/install.html

    AUTHENTICATION_BACKENDS = [
        'django_auth_ldap.backend.LDAPBackend',
        'django.contrib.auth.backends.ModelBackend',
    ]

Maybe a weird question, but you did install the django-auth-ldap package?",1532353007.0
daredevil82,"well, `GroupFilter` doesn't specify ordering, does it?",1532342057.0
Ake_Vader,Noone else has any input on this? I'd assume people using modelviewsets must be doing something similar to this? Or is it a too badly worded question? :S,1532411422.0
Fun2badult,Why not add the capability to add straight from the page instead of having to go through admin to post?,1532325404.0
maks25,Why don't you use a ModelSerializer? Or am I missing something.,1532311717.0
george-silva,"1. ModelSerializer for user
2. Add the profile fields in that. Specify source for each field. Like profile_field = serializers.CharField (source='profile.field')
3. Override create/update.

In my opinion, that is cleaner and easier to work with.

You'll probably need to add a property to fetch user profile. That is because the serializer call to the source object will fail if there is no profile.

",1532316269.0
iconfinder,"One thing you can try is to copy the SQL that this produces and run ANALYZE on it: [https://www.postgresql.org/docs/9.1/static/sql-analyze.html](https://www.postgresql.org/docs/9.1/static/sql-analyze.html)

That way you can see if there are missing indexes.",1532292490.0
Whoopska,"It's hard to tell exactly what the query you want is. I'm not sure what an attribute with `name=""date""` refers to or how it's different from `value_date`, but you can use the filter within a Prefetch. Something like

    dates = Prefetch(""attribute\_values"", ProductAttribute.objects.filter(name=""date""), ""dates"") 
    for product in Product.objects.prefetch\_related(dates): 
         for date in product.dates: 
             print(date)",1532293854.0
xBBTx,"you'd benefit from using a [models.Prefetch](https://docs.djangoproject.com/en/2.0/ref/models/querysets/#django.db.models.Prefetch) object to incorporate the `.filter(...)`. The `.values('value_date')` is something you'll have to do in Python then.

If you're sure that you only have one matching record for each product, then you might leverage [SubQuery](https://docs.djangoproject.com/en/2.0/ref/models/expressions/#subquery-expressions) to compare if it's more efficient or not.",1532295390.0
ccb621,"Your `for` loop is iterating over all the `Product` instances. I assume the question your query is trying to answer is, ""what are all the date attributes associated with all the products?""

    # Use select_related to follow your foreign key. If you need to access the attribute, add 'attribute' to the list in select_related().
    attribute_values = ProductAttributeValue.objects.filter(attribute__name=""date"").select_related('product')
    
    for av in attribute_values:
      print(av.product, av.value_date)
    ",1532303602.0
MDziwny,"What you want to achieve is not really clear, but your request could be rewritten as follows:

    products = Product.objects.filter(
        attribute_values__attribute__name='date',
    ).values_list(
        'attribute_values__value_date',
    )
    
    for p in products:
        print(p['attribute_values__value_date'])",1532342338.0
McDivvy,"Permanent 301 redirects in .htaccess.

You'll need to do this for the old .net site so that crawlers and bots see the redirects and visit the new .com site instead.",1532291051.0
angellus,"* Do not use MySQL, stick to SQLite. Are you planning on having more then 1 or 2 people to use the app? You do not always need a full blown RDMS if you do not need the concurrency they provide. 

* [Learn and use uWSGI](https://uwsgi-docs.readthedocs.io/en/latest/). Gunicorn is certainly easier to use and ""good enough"" in more cases, but uWSGI is more configurable and you can squeeze more performance out of uWSGI (or in this case, less performance impact). 

Also, if we are going the route of personal, internal use only apps (will this even be exposed to the Internet?), you can gut a lot of the ""batteries included"" features and security features from Django. Go through your `INSTALLED_APPS` and `MIDDLEWARE` one by one and look them up in and figure out if you need them for your use case. Again, removing any of the security features, **assumes it is only running on your home network and your home network is ""secure""**. ",1532261579.0
booooomba,What performance problems exactly are you experiencing?,1532261529.0
,[deleted],1532269685.0
elnikej,"Django 1.11 with gunicorn, nginx, PostgreSQL works fine on my Raspberry Pi 3B+ and Pi 2 also. I am surprised by the performance also.
(python 3.5)",1532269907.0
28f272fe556a1363cc31,I'm really curious how MySQL or Postgres will perform on a pi. I assume they'd murder a SD card? ,1532276766.0
spapas82,"This could be implemented for example by overriding the dispatch method (http://www.cdrf.co/3.1/rest_framework.generics/ListAPIView.html#dispatch) similar to how you could done it in a normal CBV.

However, I think that the DRF-idiomatic way to do it is by implementing a new (CSV) Renderer. Take a look at the rendereres chapter of the docs: http://www.django-rest-framework.org/api-guide/renderers/ and on content negotiation on how to select your render: http://www.django-rest-framework.org/api-guide/content-negotiation/.

Also, notice that there's a CSV renderer in github already: https://github.com/mjumbewu/django-rest-framework-csv",1532339807.0
IReallySuckAtChess,Javascript and a little HTML plus the hooks are all you need. You should look at how the embed video is implemented and base your work off that. ,1532477065.0
seddonym,"If `enctype=""multipart/form-data""` isn't an attribute of your html `<form>`, the files won't be uploaded. Try adding that to your template. For more info see [https://docs.djangoproject.com/en/2.0/topics/http/file-uploads/#basic-file-uploads](https://docs.djangoproject.com/en/2.0/topics/http/file-uploads/#basic-file-uploads)",1532374703.0
TheoR700,"The Admin Panel uses Django Forms which does a lot of the work for you. You should add a class in your forms.py and define a Django form for your model. It will make your life a lot easier.

https://docs.djangoproject.com/en/2.0/topics/forms/modelforms/",1532228603.0
igncampa,"I can't recommend Wagtail enough. Wagtail is to Django what Django is to Python (if that makes any sense in anybody else's head but mine, and I'm a bit drunk right now...)

You can always join their Slack if you need help https://wagtail.io/slack",1532237505.0
gratteux68,"Wagtail is great. It comes with nice built-in features, its documentation is good, the team behind it does a great job and tries to keep the codebase clean. I definitely love working with it. The Python/Django ecosystem is one of the most important reasons why I like it so much. There aren't as many packages as in PHP/Wordpress but Django and Wagtail have been built with extendability in mind. I would say that it takes a bit more time to get things done but in the end you got exactly what you wanted and you can be confident that it won't break with every update (unit testing philosophy, few stale issues on Github etc.).",1532234712.0
Brandhor,I would go with django/wagtail if I have to build some custom functionality otherwise wordpress is usually good enough and there are a lot of themes and plugins already available,1532289464.0
,"Yeah. I do. What about it. It's one of if not the most robust CMS' in Django. Beats mezzanine in my opinion as well.

It's highly extensible. It's just python at the end of the day. If something isn't built in you can easily make it yourself. There's plenty of hooks and add on packages for it that do everything from SEO to AB testing.",1532225542.0
IReallySuckAtChess,"Yes. Wagtail is the best CMS I've dealt with full stop. I cannot recommend it enough. Bit of a dearth of plugins, but the most important parts are covered, and that which isn't, is easily made. There admin interface is also superior to the stock django one in most regards whilst still allowing you to use the stock one. My favourite bit is that the admin is mobile friendly so moderating pages can be done on the go.

If you must though, django-cms also exists but that is overkill. I do respect it though. ",1532476573.0
The_Amp_Walrus,"Question: do you really need CMS functionality? Static sites are typically cheaper and simpler to deploy and maintain. For some of your examples (product showcase) you might be able to get away with a static site. My team uses Wagtail for our publishing system (our bread and butter), but we have started using Gatsby, a React JS static site generator, for client websites.

I haven't looked into this a bunch but there are some interesting possibilities in using *Wagtail* to generate static sites [see here](https://github.com/tomdyson/wagtail-netlify). If you're going to be doing a lot of simple client sites then it may be right for you. 

If you do need a client-facing CMS with a database, dynamic server side rendering etc. then I recommend Wagtail wholeheartedly.",1532253422.0
pancakeses,"If you do /api/movies you can also add filters to your end point in the GET request. The end point url itself doesn't need to define all the info.

For example, I might request:

    /api/movies?user=pancakeses&genre=spooky

Or based on your example above, something like

    /api/movies?user=pancakeses&type=seen
    /api/movies?user=pancakeses&type=unseen

Also, if you expect this to be a long-term production, its often recommended to use versioning for your api, because you'll probably be making changes in the future, and it's sometimes easier if you leave v1 in place while you perfect v2. For instance:

    /api/v1/movies",1532224947.0
daredevil82,"https://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api  is a good resource for learning best practices for API design.  Its framework agnostic, so there's nothing django/DRF specific",1532263298.0
Ake_Vader,"I've recently started working on a new project from scratch and have made sure to integrate django-filters from start this time so i can get both filtering and pagination enabled without too much hassle when i need it down the line.

However, so far i've stuck to a convention where you can filter on applicable value fields, but foreign key fields generally have to be defined in the url.

This would work:

    GET /users/<id>/movies/
    GET /users/<id>/movies?genre=thrillers

But not this:

    GET /movies?user=someuser

You'll probably find yourself wanting to POST a movie to a specific user and then it may be intuitive to keep the same /users/<id>/movies/ url for both POST and GET while still sprinkling a bit of filtering possibilities on top when fetching stuff.

edit: should've read the comments first, it's basically what others have said i guess. :|",1532336014.0
aphoenix,"If you're building an API, those are good questions, but I would start by looking at Django Rest Framework - http://www.django-rest-framework.org/

DRF makes it easy to serialize your models so that you can interact with them as JSON (or another serializable format). This feels really natural if you've been doing Django for a while, and it takes care of a lot of API issues you may run into.",1532222579.0
aphoenix,"As /u/pancakeses said, you can add parameters if that's what you like. I'll just provide an alternate: you can make explicit routes like so:

`/api/users/<userid>/movies/`

And you can define the opposite as well if it is useful:

`/api/movies/<movieid>/users/`

If you do this, it kind of gives you a nice recipe for adding, updating, deleting the relationship based on how you interact with it.

If you go this route, then drf nested routers (https://github.com/alanjds/drf-nested-routers) is probably of interest.

(honestly, I'd consider pancakeses methodology first though)",1532226243.0
jeffsays,Probably because you're not rendering anything in your view,1532219283.0
fuckslavs,"Do you have any FrontPageNews objects?

    python manage.py shell
    from yourApp.models import FrontPageNews
    FrontPageNews.objects.all()

",1532219380.0
Comm4nd0,"You're asking a lot there! But the view page could scrapemthe data and display it passing info into the html. It might take longer to load though.

What do you want to scrape?",1532211680.0
,"Trying adding some details or better yet googling.... there's only 2738484884 ways you can do this.

Periodic scraping? Celery etc. Do you want to store it or not? Why? What's the purpose? What kind of data? What's he intent? What do you want to happen when the user loads the page? So on and so forth.",1532220053.0
thereissoupinmyfly,This would be a great post for r/djangolearning,1532296813.0
unkz,"It's ""scraping"" not ""scrapping"".  Just a pet peeve.",1532222085.0
daredevil82,what exactly is an `Event`?,1532205521.0
garfonzo,"Good questions, and I've built a few ""real world"" applications that are currently in use by a company. Here's my take on the questions:

1. Always exclude the password field from the serializer. That should never be included for security reasons -- even if it's just the hash. Yes, serializing the user object is common. Perhaps you want to show the user the `first_name` and `last_name` fields that are on the database, and perhaps they should have the ability to update those data fields.
2. No difference, nope. An object is an object. As for the password, again, exclude it from serializing. If you are going to provide a method for changing or resetting their passwords, you'll want to handle it a bit differently -- specifically what I do is drop back to regular Django functions with passed in `POST` data and handle the two `password1` and `password2` fields, to update the user's password. There are some built in Django functions to handle updating the user's password
3. You're right, I don't create users with the API -- I drop back into standard Django functions. This way I can use built in functions/features to create a user safely. As to why you'd want to serialize a user, see answer 1

Hope that helps.",1532187531.0
unkz,"> Could someone give me a real world example of why you'd want to have a user serializer at all? 

If you've got a JS framework front end, you'll likely need to serialize most of your models.  For example, we have functionality to send messages between users -- can't very well look up the users to send messages to without serializing them.  

> Why would you want to create users with an API at all?

Often we need to make users on other systems as part of user creation on another system.  For example, you might have a chat system like RocketChat or Slack, and you need to automatically create a user for your staff when you create their backoffice account.  Same with perhaps a Gitlab or Github account.  Perhaps you need to automatically configure a user on your sandbox environment when a customer fills out a contact form requesting information.  We use API user creation in probably a dozen different scenarios.

> One of the things I noticed is that if I create a simple user serializer and try to update user in the browsable API, it only renders the password field once since there's only one model field for password. That means there's no opportunity for a user to confirm their password which is weird to me so it makes me feel like there's a better practice out there. 

This is an utterly bizarro use of the browsable API.  I hope you would never have a non-developer interacting with the browsable API.

If instead you are wondering about double checking the password is entered correctly when used by some other process (an HTML form perhaps), it is that process's responsibility to do that confirmation.",1532201327.0
Brandhor,"with drf you can create a rest api for whatever you want so if you can't think of any reason why you would need to serialize the user model you might not need it

you only see one plain text field for password because the password is hashed, you are not supposed to modify that field directly, take a look at the [django admin user creation form](https://github.com/django/django/blob/master/django/contrib/auth/forms.py#L64) for how to do it, with drf is different but the concept is the same",1532187474.0
rando2018,"Broadly speaking I've seen 2 kinds of apps using DRF:

- an SPA wrapped in a standard Django site. So you have a landing page, login/registration etc using standard Django views and templates, but maybe there's some dynamic parts like an admin dashboard that are better handled by an SPA (or multiple SPAs).

-  a pure API with a completely separated frontend. The frontend could be a React/Vue app or an IOS or Android app - or all of these. 

In the first case it might make sense to use Django's standard contrib.auth views for all the authentication pieces (or something built on top of it, like allauth). You can use DRF SessionAuthentication. The SPA can be launched inside a Django template, so additional things like user info can be passed into the SPA via the template (maybe serialized into JSON format).

In the second case you can't do that because you can't render Django auth views in your frontend client.  You need to use some form of token authentication (which has its own gotchas in terms of security) and a serializer for your user data. As others have pointed out in this thread, be careful  what you serialize - you don't want to include for example passwords. I typically  use two user serializers - a private one for the authenticated user and a public one for everyone else. For example you don't want to expose an email address to everyone, but users need to view & update their own email.",1532251777.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1532173194.0
intrepidev,"The server you are scraping will see your servers ip. If you do it entirely client side in javascript, the server will see your clients ip address.

I would not suggest trying to get around the ban - it's unethical and probably illegal. I'm sure the ban exists for a good reason.

Depending on what you're scraping, can you do it periodically (e.g. once per hour) and cache/db the results on your server? Does the service have an api?",1532167372.0
bigsummerblowout,"You might be able to get away with it if you disguise it as a proxied request. 

That said, it’s not a Django question.",1532168579.0
Classic_Camel,"The two scooops books are mainly about best practices as far as I can tell and more like a reference.  I have nothing but praise for obey the testing goat. I'm almost finished with the book and I've been through several and I really wish I had picked up obeythetestinggoat first. I just finished setting up a Jenkins server (Chapter 24) and I've overall been blown away at how useful this book is for not only TDD, but a fantastic Django tutorial (it covers things a lot of others seemed to gloss over) but has lots of useful advice for devops and deployment topics.  

Two scoops is still useful to have around so I would buy it but I would go through obeythetestinggoat first IMO.",1532122916.0
Pr0ducer,"Testing Goat.  I f-ing love the goat.  Baaaahhhhh!
",1532126176.0
calabresi,"Start with the goat, then have some ice cream. ",1532133251.0
shinigamiyuk,Tango with Django and then testing goat.,1532135457.0
lambert16,"I feel tang with django is more beginner friendly than test goat. It also touches some things not be covered in test goat, like custom tag, media files etc.",1532162940.0
vaibhavhrt,I #obeythetestinggoat,1532164931.0
cortical_iv,Tutoriak at Simple is better than complex. Dont waste a beginner's time with a bunch of testing overhead if they are just trying to learn django.,1532133553.0
lakerskill,"[settings.py](https://settings.py/)

    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) 
    TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates') 
    STATIC_DIR = os.path.join(BASE_DIR,'static') 
    MEDIA_DIR = os.path.join(BASE_DIR,'media')  
    STATIC_URL = '/static/' 
    
    TATICFILES_DIRS = [STATIC_DIR,]  # MEDIA INFORMATION: 
    MEDIA_ROOT = MEDIA_DIR 
    MEDIA_URL = '/media/'  

[urls.py](https://urls.py/)

    from django.conf.urls.static import static  
    app_name = 'errorcodes'  
    urlpatterns = [     
    path(r'error_codes/',views.ErrorCodeList.as_view(), name='errorcodelist'),     path(r'error_codes/<pk>',views.ErrorCodeView.as_view(), name='errorcodeview') 
    ] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) 

[models.py](https://models.py/)

    relpic = models.ImageField(upload_to='media',blank=True) 

html

    {% load static %} <p><img src=""{{ error_code_details.relpic }}""></p>",1532063946.0
booooomba,Whats the final html output like? ,1532076334.0
IReallySuckAtChess,"Have you tried using object.file.url for the image src in your templates? By the way, explore your model using the shell a bit. Sometimes you're just accessing the attribute incorrectly. 

Are the images you upload being stored on the server? ",1532079328.0
ismailtaha,"is DEBUG=True ??  


if DEBUG is set to be False than django will not serve static files.",1532108210.0
mglsofa,"You define a form class in the FormView. What the form should do after its submitted could be defined in the form_valid() / form_invalid() methods of the FormView. 

To create a new object just create an instance of the object and save it without a PK. 

Hope this helps!",1532082296.0
spapas82,"To create update or remove new objects you should better use the proper CBVs: CreateView, UpdateView and DeleteView. The FormView is used when you don't want to create/update or delete an object but you want to do a more abstract action. For example you may have a FormView that displayes a Form which, when submitted will create (or update) two objects. 

To properly configure the FormView you need to set its form_class attribute (or override its get_form_class() method) and override its form_valid() methed in order to tell it *what it should do when a valid form has been submitted* (this is how django knows what do do).

For more information about the FormView and the other CBVs I mention I recommend taking a look at my CBV guide: https://spapas.github.io/2018/03/19/comprehensive-django-cbv-guide/",1532108345.0
ericls,set is unordered ,1532060107.0
iconfinder,That's a handy tip. Thanks.,1532115281.0
,[deleted],1532119878.0
,[deleted],1532120583.0
booooomba,"1. You mixed up url and path. Chose either or. [https://docs.djangoproject.com/en/2.0/ref/urls/](https://docs.djangoproject.com/en/2.0/ref/urls/)
2. You obviously need to specify DIFFERENT urls. What you did in your example is point both to the same URL.

Looks like you haven't worked through the official Tutorial. It is very good and doesn't take long. You'll learn everything you need. Specifically: [https://docs.djangoproject.com/en/2.0/intro/tutorial03/#writing-more-views](https://docs.djangoproject.com/en/2.0/intro/tutorial03/#writing-more-views)",1532035860.0
kurashu89,"> In your web service, add redis to the depends_on section. This ensures that your web service won’t start until both the db and redis services are ready.

Nope. depends_on only ensures start order, it does nothing to wait until services are ready, that's in your hands. 

You can also use links for this but that's deprecated as docker-compose automatically creates a network for the containers so they can communicate though links does allow you to define aliases for other containers in the compose file. ",1532059897.0
neurotoxiq,"YESSS thank you!

Will test over the weekend. Been having trouble with celery and docker setup.",1532059000.0
brtt3000,You can override the `save()` method of the product model and calculate/set the fields if not already set (so it only happens once) and then call `super().save()`.,1532029504.0
theWyzzerd,"You can make whatever content appear on the page that you choose; you aren't forced to use the Django templating system or Django forms. 

From the django docs:
>Django’s form functionality can simplify and automate vast portions of this work, and can also do it more securely than most programmers would be able to do in code they wrote themselves.
>
> Django handles three distinct parts of the work involved in forms:
 >  - preparing and restructuring data to make it ready for rendering
 >  - creating HTML forms for the data
 >  - receiving and processing submitted forms and data from the client
>
> **It is possible to write code that does all of this manually, but Django can take care of it all for you.**",1532014587.0
njancsar,You should probably take this to [/r/djangolearning](http://www.reddit.com/r/djangolearning) ,1532025433.0
Grelek,"Well if you need some fancy form controls, there's nothing easier than writing your own reusable form widget.",1532018553.0
,[deleted],1532025971.0
n1ncha,"Take a look at [Django Rest Framework](http://www.django-rest-framework.org/). You sound like me from a couple years ago. I had basically built my own crappy version of DRF. It’s a great framework that replaces the functionality of Django forms with serializers. Before switching to DRF my apps usually topped out with 10-20 main endpoints or pages before I couldn’t really support anything more without running out of brain space. With DRF I can maintain hundreds of endpoints, test them accurately, and extend them easily. ",1532123613.0
IonTichy,You can use the built-in Validators separately from the forms if you don't want to adapt a custom forms widget.,1532384386.0
daredevil82,"that won't work.

why not set your username and passwords as env vars for your system and read them in?  https://github.com/joke2k/django-environ",1532001800.0
allidoisace,"What you really want here is a .env file in your project which will set local variables. I will post code later when I get the chance, but a .env file is really nice. You can google search it for django/python, but i dont remember which one I use.

Edit: [Here is the link to the package.](https://github.com/henriquebastos/python-decouple)

It becomes as simple as setting some value in your `.env` like so `DEBUG=True`. Then in your settings all you do is call `DEBUG = config('DEBUG', default=False, cast=bool)` where it tries to get the `.env` variable of `DEBUG`, otherwise defaults to `False` if it doesn't exist. When you push your application to let's say Heroku, you will be able to set environment variables on there as well, so it will read those correctly, hence you don't have to make code changes to the environment when pushing.",1532009675.0
timur_btb,"I followed the instructions. Until the last  instruction, everything  went well. But when I entered

sudo supervisorctl status myproject

into the command line. I got the following error:

myproject FATAL Exited too quickly (process log may have details)

I checked supervisord.log and the last error says:

myproject entered FATAL state, too many start retries too quickly

&#x200B;

I am not sure what that means.

&#x200B;

&#x200B;",1541261212.0
fdemmer,"1. latest stable (2.0)
2. official docs/tutorial and two scoops of django

https://www.twoscoopspress.com/pages/two-scoops-of-django-1-11-faq#what-about-django-1-9-2-0-etc",1531948184.0
tagnydaggart,"I think at this point, I would start a new project with 2.0 and just make plans to upgrade to next LTR  version 2.2 once it is released.

If you think you’ll have a lengthy development time, you might consider just starting it with 2.1 pre-release now, and keep upgrading it through to at least 2.1.1 before you get into production, then, as above, upgrade to the LTR release when it comes.",1531951375.0
purealgo,"I strongly recommend this this book, Django for Beginners: [https://amzn.to/2zTWu5y](https://amzn.to/2zTWu5y)

It walks you through step by step through 5 different web apps. Easiest Django book to follow for complete beginners hands down.",1531971401.0
IReallySuckAtChess,"Depends. 1.11 is still the current LTS so it's probably the correct choice for something serious, although I personally always use latest release. Lots of stuff still hasn't been made 2.0 compatabile so that's a very serious consideration if you'll be relying on lots of third party stuff. Porting is usually very easy though, but you'll have to maintain your port till upstream picks it up.

Personally, for a business I'd do 1.11, for anything else 2.0.",1531990725.0
Classic_Camel,"I've chosen 1.11 because it's not a moving target and I can just focus on learning django and getting my app working eventually. I'm running python3.6 and I plan on using TDD so I'm not too worried about any major pains upgrading in the future to a 2.x LTS release.

As far as books I would recommend highly there are two of them. first for focusing on just django for beginners is https://djangobook.com/build-first-website-python-django/

The second book that I would recommend and wish I had gone through before trying other tutorials is http://www.obeythetestinggoat.com/ 
Not only does it cover topics that other tutorials really gloss over but it also does a great job of introducing test driven development in a fun and engaging way. You also learn a lot about deployment, setting up your own integrated testing/build server with Jenkins and the author has an active community in the comments on his online book and is usually quick to respond.  If there's one book you read about Django it should be this one.

Finally two scoops of django is also worth the price.",1532107388.0
never_safe_for_life,"[https://stackoverflow.com/questions/18414427/how-can-i-do-an-ajax-request-with-an-authenticated-user-in-django](https://stackoverflow.com/questions/18414427/how-can-i-do-an-ajax-request-with-an-authenticated-user-in-django)

Auth is all in the cookies, which AJAX requests pass on just like a regular request.

Form submissions are slightly different because of the CSRF token, you have to set a header yourself, X-CSRFToken",1531945686.0
ezaquarii_com,"You can use systemd script or supervisord to keep the task up and running.

I personally prefer to have systemd scripts for this.",1531988657.0
IReallySuckAtChess,Look at how to set something up as a daemon. Systemd has amazing documention. ,1531991118.0
hip_modernism,"Maybe I’m not understanding you right but, you should absolutely not need screen in production.

You need to daemonize uWSGI if you are not doing that. uWSGI will run in the background without the need for a logged in session, can restart itself on crash, and can (should) be setup to run in multiple proccesses to balance load.

Google for daemonize uWSGI Django and you should find what you need.

Proxying uWSGI begins Nginx is the right approach though. Nginx for static assets, everything else uWSGI.",1531950518.0
godhatesmetoo,"Great job! Is there anything awesome we should be looking forward to? :-)

EDIT: [List of new features](https://docs.djangoproject.com/en/dev/releases/2.1/)",1531956485.0
amizya,Tim Graham is doing a great job developing Django. Kudos to that man !,1531966068.0
engineervix,Big ups to one of the most **actively developed** python projects in the world!!,1532010432.0
lietotajvards,"    UserCreationForm and UserChangeForm no longer need to be rewritten for a custom user model.

This change was active in 2.1b1, but got reverted for some reason in 2.1rc1 and the patchnotes don't reflect that. Was just developing an app and after upgrading Django registration broke.

Would love to know why it got reverted and whether it will be back for the final release.",1532375157.0
rocky-ji,"I solved it, I need to migrate, It nice app.",1532052885.0
rocky-ji,"I implement this app, but it not work, This is the error in the yellow page:
django.db.utils.OperationalError: no such table: django_classified_section
Can you tell me do I do something wrong?",1532052644.0
mutatedllama,Check out [ReportLab](https://www.reportlab.com/),1532018016.0
IReallySuckAtChess,"You can render HTML and then convert it to pdf (quite a common approach) or you can actually use a library to directly fill a pdf template you setup. Plenty of approaches, and paying isn't really necessary. ",1532092608.0
fps6,You can use a HTML template - you fill it the usual way and the export it as pdf using wkhtmltopdf.,1531939536.0
pydanny,"Careful with using the open source argument against .NET. These days, [.NET is an open source project](https://github.com/Microsoft/dotnet).",1531947406.0
_my_name_is_earl_,"Take notes on the djangoproject.com site and how they sell the idea of using Django to **you**.

""Django makes it easier to build better Web apps more quickly and with less code.""

""Django was designed to help developers take applications from concept to completion as quickly as possible."" That line alone 

""Reassuringly secure: Django takes security seriously and helps developers avoid many common security mistakes.""

""Exceedingly scalable: Some of the busiest sites on the Web leverage Django’s ability to quickly and flexibly scale.

Also, their overview page has good info: https://www.djangoproject.com/start/overview/

And when you're selling the idea of Django, you're also selling the idea of Python. Keep that in mind. ",1531925523.0
,[deleted],1531974355.0
IReallySuckAtChess,"Cost is the big thing. A django app is significantly cheaper if they're starting from scratch. Cheaper in time and money. Cheaper in maintenance too in my limited experience. The more they currently have in the Microsoft ecosystem the less compelling django becomes. All those licenses if you're not already paying for them amount to a lot very quickly. 

I've never done a hard analysis of it, but I find django to be much cheaper to deploy in general because of the variety of ways one can and that being able to run it on a Linux server in the cloud is just a much better experience than Windows in the cloud. 

If you need to do CMS then show them wagtail and the conversation will be over. Wagtail is *the* django app. Its a framework everybody trying to sell django should have in their toolbox.

Another way to sell django is to show what kind of sites and especially who use it. It's loved by NASA, Mozilla and a ton of other big names. 

Lastly, when in doubt, tell them that Instagram is django based. How much so now is probably a bit of a mystery, but for a long time it was all django and Python. By now they definitely have lots written in c/c++/cython and have written plenty of custom components but they still like to boast about being django at heart. ",1531991712.0
Pr0ducer,"Know your audience. What's important to them? If they don't care about technical stuff, than maybe they care about cost. You might then say, ""Open Source solutions are free, robust solutions, with solid dev communities that can help troubleshoot issues along the way, and this will ultimately lower your costs.""  Just figure out what your audience cares about, and frame the issue as a win for them using their goals as the metric.",1531925141.0
spinNothing,"I haven't experienced it sorry. I would contact them via email, usually quick to respond and super helpful",1531914366.0
vaibhavhrt,"bro, format your code or post it somewhere like [repl.it](https://repl.it), its hurting my eyes",1531915180.0
vaibhavhrt,"OK, after scratching my head for like an hour I think I found whats wrong (can't run the code on my pc to be sure).

You never defined the url you are returning in the function in your [models.py](https://models.py) line 73. `return ""/archive/view/%s"" % self.slug` in you urlpatterns.

In your urlpatterns you have `url(r'^view/(?P<slug>[-\w]+)$', views.books_post, name='books-post'),`I think what you meant to write was `url(r'^archive/view/(?P<slug>[-\w]+)$', views.books_post, name='books-post'),`

OR

Your in your [models.py](https://models.py) you should have this:

    def get_absolute_url(self):
        return ""/view/%s"" % self.slug

Tip: Sometimes its easier to `runserver` and view the detailed debug screen instead of relying on just the traceback of tests. But in this case traceback was enough, I am a noob so it took me so long xD.",1531921561.0
vaibhavhrt,"I have answered it, since it was accidentally a reply to my own comment I guess you didn't got notified. Sorry about that.",1532064732.0
Signal_Beam,"You should [implement https](https://letsencrypt.org/). Currently when I want to create a password, it's getting sent to your web site through my ISP in plaintext that my ISP can just look at if they want to, because your site doesn't support https yet - so not much point having a password if other people can see it.",1531881739.0
furyfred,"You made a site to make getting books illegally easier off illegal download sites. So the authors don't get paid for their hard work.

Isn't this kind of of a jerk project?",1531894037.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1531875370.0
sultan33g,Might wanna proof read your stuff ;),1531888019.0
ChickenF622,inb4 the site gets taken down by Facebook,1531887208.0
lyapustin,/r/funny,1531928312.0
furyfred,"Showed this to our CTO and unlike previous 2 years she gave me approval! I'm going!!!

She evwen looking at sponsorship packages right now!!!

For two years 2016 and 2017 she said there wasn't enough technical talks, but not this time. She counted and out of 40 talks only 3 are non-technical. Thank you djangocon for finally making this con something I can go. 😀😀😀😀😀",1531873683.0
purplediane,Everybody come to DjangoCon in lovely San Diego!,1531874083.0
siupermann,"Just curious, would the content of the talks be available online after the conference? Unfortunately I won’t be able to attend but it would be amazing to perhaps watch the talks somewhere. 

Edit: Just read the FAQ, the talks will be posted online! Hopefully they will publish the links sometime soon.",1531889001.0
pydanny,"Oops - I didn't pluralize ""talk"" and ""tutorial"".",1531873807.0
neurotoxiq,"Anyone have experience at previous DjangoCons?  The tutorials seems great, but I'm worried about being able to fully learn in 3 hours.",1531889506.0
django_throwaway_1,"""A Bossy Sort of Voice: Uncovering gender bias in Harry Potter with Python""

How is this Django specific? How is this even relevant? Some of the later talks look pretty great, but if my boss saw this as the first in the list of talks they'd stop here.

They want me to go see technical talks, not whatever this is.",1532060789.0
,[deleted],1531872786.0
IReallySuckAtChess,"I don't think that is quite right. I've never hosted on Azure because I hate Microsoft, but I've hosted on AWS (and plenty of other services) and used the Distance Matrix API just fine. You do need to have billing set up and to be configured as pay as you go, but I've never gone over my free usage so I've never been billed. ",1531908835.0
pydanny,"At a glance:

* Add tests
* Update to Django 1.11 or 2.0
* Use **black** to format your code",1531861267.0
theWyzzerd,"It's more of a preference thing but in python3.x you don't need to subclass `object`, as class declarations always inherit from `object`:

`class EmailAuthBackend(object):   # python2 style`

is the same as

`class EmailAuthBackend:  #python3 style`",1531864642.0
bmoe872,"Also quickly at a glance:

* You'll want to get a virtualenv setup (just better for keeping things contained, so you don't go messing up dependencies for other projects) and then add that to the README on how to get that goin.

* Tests (I know another guy said it, but its really important)

* This may be personal preference, but typically I'd have a .env file on production, and one specifically used for development, that way you don't have to have the two settings files. Having two settings files can become cumbersome to maintain (Likely personal preference)

",1531865705.0
nerdwaller,"Unless you’re using the session authentication, which it sounds like you’re not, you’d probably have to create a custom endpoint that validates a token, logs them in manually, and redirects to the admin - but I’m sure that’s full of security holes.",1531853850.0
null_vector,I don't entirely understand your problem but it sounds like you just need to use a different authentication backend in Django.  There's several auth0 ones out there (we use a custom one).,1531861990.0
reedjones_prague,"It looks like you're printing this data into a javascript object no? 

Why no just send json from the server?  

in your view: json.dumps(data)

and in your template data = {{ data}} ; ",1531862664.0
daredevil82,"what does this have to do with an api?  a privacy policy should be on your client, via a static page or view.  If you need the entire document available, store it on disk or in S3/cloud storage and provide a download link",1531850936.0
Ake_Vader,Why can't you store it in a model?,1531943717.0
wheezy360,"IMO, environment variables are fine when your deployment is simple (e.g. running a single Django process on Heroku or something). When you start getting into more complex deployments you can consider something like [AWS Key Management Service KMS](https://aws.amazon.com/kms/) or [HashiCorp Vault](https://www.vaultproject.io/).",1531849743.0
i_amwithnail,"We use Mozilla sops, and encrypt the whole .env file. Docker reads it in at container run time, and decrypts using the Amazon Key Management Service, which allows us to limit access to deployer users, and to machine boxes. 

It was a fairly large time investment to set up, but is pretty slick now. 

Edit: we're a big, PCI compliant company so have higher requirements than most. YMMV. ",1531854062.0
IReallySuckAtChess,"Environment variable is just fine. Even the settings.py is okay, although a bit inferior. If you need to really up the security level then there are other options, but I honestly think that 90% of users don't need to worry about going that far. ",1531909642.0
ninjaRakun,"The lack of real, direct answers in that SO question and elsewhere (as opposed to reasons why every option is wrong) is quite frustrating, so I'll throw my hat in the ring.

**Disclaimer: This is how** ***I*** **address the issue. I do not claim that it is The Right Way.** Please feel free to comment on my solution, though.

Short answer: Put server specific configuration in a *separate config file*, *outside of the source code directory*, that is *only readable by an application user*, and *point* [`DJANGO\_SETTINGS\_MODULE`](https://docs.djangoproject.com/en/2.0/topics/settings/#envvar-DJANGO_SETTINGS_MODULE) *at it*.

For example, a project `foobar` will have `/srv/foobar/prod_settings.py` that look like this:

    from foobar.settings import *  # Start with the default config as a base
    
    # ... and then override the bits that are specific to this server
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite',
        'NAME': ':memory:',
    }
    SECRET_KEY = 'mysupersecretdjangokeythatyoumaynotknow'

The WSGI server config can then refer to that file:

    $ grep ^env /srv/foobar/uwsgi.ini
    env = DJANGO_SETTINGS_MODULE=prod_settings

*""How is this safer?""* Keeping that config separate from your source code mitigates the *""oops I accidentally pushed my production database password to GitHub""* scenario. It also avoids clobbering the config when changing/updating other parts of the deployment.

That config file is owned and **only readable by** a separate, dedicated application user. The WSGI process also runs as that user, and is not the same as the web server user (`www-data` for nginx on Ubuntu). That way, even if your web server gets compromised, your application and its super sensitive configuration is not *necessarily* compromised too.

This is how we apply the [principle of least privilege](https://en.wikipedia.org/wiki/Principle_of_least_privilege) on the system (user) level. The web server user only needs read access to your application's static files, and write access to the WSGI server socket and HTTP log files. Your application user also needs write access to the WSGI server socket and log files, and read access to the application code. Maybe also write access to your `MEDIA_ROOT`.

At the end of the day it has to be in a file somewhere if you don't want to type it in on each startup.",1531850971.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1531841829.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1531841037.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1531840837.0
colly_wolly,"Has anyone got any experience using Saleor?

How is it. I had a look at a few Django based shop options a while ago, and this definitely looked the nicest. ",1531839847.0
IReallySuckAtChess,Have you tried Ctrl+D? Maybe you're spawning a shell or something? ,1531909760.0
Whytem,You can find many Reddit posts which already answered your question. One of the books highly recommended is Two Scoops of Django. ,1533529180.0
izzyinjurious,"I’ve had luck and it took me for-fucking-ever. I have Django 2.0, Ubuntu 18.04, PostgreSQL, Nginx, Gunicorn, Supervisord and Let's Encrypt All On a DigitalOcean Droplet With Python3.6. But tbh it was my first site that I put up. I’m till learning, but hey it’s up! So, no idk how to update unfortunately ",1531803310.0
krumg,There's no difference between 1.x and 2.x in terms of deployment process,1531806936.0
Panzelva,"Yes, but you have to do it manually. I actually wrote a blog post about it: https://medium.com/@panzelva/deploying-django-website-to-vps-with-uwsgi-and-nginx-on-ubuntu-18-04-db9b387ad19d",1531815510.0
djc0de,running django2 on a digital ocean droplet is not that complicated and the upgrade from 1.8 to 2 for one-click install projects is not any different then a regular django upgrade. What issues are you running into? ,1531811781.0
ruler01,"tbh if you have problems with deployment on VPS, the best thing you could do is to deploy at pythonanywhere. ",1531809378.0
Zunin,"Your milage may vary but upgrading from python 2 to 3 takes a while and automation can only get you so far.

As for upgrading Django you should be able to upgrade though pip I think. I don't know if there's any breaking changes but it's likely. ",1531808572.0
mhurron,"> Is this something I could do in Django?

Yes, it's brain dead simple.

> What resources should I look at to figure out how to do this?

The getting started tutorial.",1531787628.0
uberfade,Django can absolutely do this though it may be overkill.  Check out the [official Django tutorial](https://docs.djangoproject.com/en/2.0/intro/tutorial01/) or maybe even [Flask](http://flask.pocoo.org/docs/1.0/tutorial/).,1531782669.0
igncampa,"You may find [this](https://github.com/BotoX/xiaomi-m365-firmware-patcher/tree/master/web) project helpful to get you started. It's basically the same you're looking to do; the user provides inputs and then python takes over, does some logic, and returns something to the user. This project is using Flask instead of Django and is live [here](https://m365.botox.bz/)

* templates/home.html - is the html with form inputs
* app.py - is the python logic running in the background

",1531802945.0
IReallySuckAtChess,Sure. I'd probably use flask though if I were you. Much faster to learn especially for such a basic little thing. ,1531909857.0
django_noob,You don't need python or Django for this. Use javascript,1531784390.0
jordotech,"Here is my Django management command for this if it helps anyone.  Tested in 1.9

[https://gist.github.com/jordotech/d512ebc47563c9b46d4a2cdbfc964496](https://gist.github.com/jordotech/d512ebc47563c9b46d4a2cdbfc964496)",1531782948.0
kwikade,"Ran into this a few weeks ago at work, it was a fun 5 hour investigation only to discover that we didn't have any perms on the proxy classes haha",1531785266.0
TheoR700,"In the last directory Django looked for the template, the path says 'livescore/ref'. What is livescore?",1531759152.0
Signal_Beam,"So wait, where is the template you actually want it to read from?",1531760131.0
TheoR700,You have both ref/templates/live/index.html and live/templates/live/index.html. The first one should be ref/templates/ref/index.html. The convention is <app\_name>/templates/<app\_name>/<file\_name>,1531762553.0
angellus,"`birth_year`, `birth_month`, `birth_day` should be a single field `birth_date` that is a [DateField](https://docs.djangoproject.com/en/2.0/ref/models/fields/#datefield), not three separate `IntegerFields`.  You can still [filter on year/month/day](https://docs.djangoproject.com/en/2.0/ref/models/querysets/#date).

As for postal code, you can either make a [new model field](https://docs.djangoproject.com/en/2.0/howto/custom-model-fields/) that has the logic you want to be able to give a separate split of the first part and second part of the postal code or you can continue to store them separate and then use a ""calculated field"" in the form of a property to display the full postal code.

    class PersonDetails(models.Model):
        ...
        postcode_1 = models.CharField(max_length=4) 
        postcode_2 = models.CharField(max_length=3)

        @property
        def postcode(self):
             return '{0} {1}'.format(self.postcode_1, self.postcode_2)",1531747249.0
uwwasteman,"You can try overriding the \`save()\` method, try doing something like this. [https://stackoverflow.com/questions/22157437/model-field-based-on-other-fields](https://stackoverflow.com/questions/22157437/model-field-based-on-other-fields)",1531746780.0
souldeux,"Since you're defining a custom `get_queryset` method, you're overwriting the spot where django-filter would normally be inserting its logic. I think that's how it works anyway. Try changing this:

    def get_queryset(self):
        return Product.objects.filter(user=self.request.user)

To this:

    def get_queryset(self):
        qs = Product.objects.filter(user=self.request.user)
        return self.filter_queryset(qs)

http://www.django-rest-framework.org/api-guide/generic-views/#filter_querysetself-queryset",1531703215.0
spitfiremk1a,"I would suggest you first go through Django tutorial, as it's an amazing starting point. It can be completed quickly and it made me understand a lot of it quickly",1531656676.0
pydanny,"* Python has a style guide called [pep-8](https://www.python.org/dev/peps/pep-0008/?) and tools like [Black](https://github.com/ambv/black) will autoclean your code for you.. 
* Django itself has a [style guide](https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/coding-style/).
* An ex-NASA guy coauthored with a MIT alum a book about Django best practices called [Two Scoops of Django](https://twoscoopspress.com/products/two-scoops-of-django-1-11) you may find useful.

Confession: I'm one of the authors of Two Scoops of Django, so I'm a bit biased about the quality of the book.",1531677776.0
BithTree,"Pep8 is the style guide for python. Also, don't deviate from their imposed structure because it breaks things. One big recommendation is to extend Django's BaseUser into your own User instead of using Django's built-in. The reason for this is to be able to make changes to the User model without screwing up the database.",1531677479.0
cendant,This book was recommended to me many times,1531678081.0
iconfinder,Get the latest version of the book Two Scoops of Django. There are some great best-practices in there.,1531686830.0
,I would recommend trying out https://github.com/pydanny/cookiecutter-django,1531657914.0
ehsangd,I'd suggest checking out Django-REST-Framework. I think It's so much better than django's templating system; especially when you don't want to worry about front-end.,1531666446.0
lucaoflaif,"Read the whole documentation and develop your project in the django way, it'll help you to keep your code clean and organized. Almost every feature you want to implement has a 'pre-packed' solution developed by the django team so always search a solution through the docs. You should find a great support in stackoverflow too.

Edit. It should be better if you develop your db's project in an external service such as AWS or Google Cloud Services: they're scalable and easy to mantain.

Good work.",1531681011.0
cendant,"I've gone through it already, I'm starting a new project (scalable) ",1531658455.0
lanemik,"As for structure, read [this](http://docs.python-guide.org/en/latest/writing/structure/) 

Django settings are a pain. Consider using [Django-split-settings](https://github.com/sobolevn/django-split-settings) 

",1531686509.0
IReallySuckAtChess,"Hey, I'm going to recommend something and give a few reasons why you should strongly consider it, but bear in mind you're going to be doing some extension of the default modules.

Django + wagtail + puput (wagtail app). This gives you probably the best CMS I've ever used and a fantastic blog via puput. Redoing the puput frontend is a little painful but you can do it. I just ripped it apart and replaced it with only bootstrap components in about a day and I suck at frontend stuff. The best part of this is that you get a free rest api included with this because wagtail uses drf so you can always easily migrate your frontend later.

Also it has easy hooks for dealing with and interacting with Varnish/Squid and a lot of other useful tools. 

It has a great publish/moderate/review/history system so content is easy to manage. There are granular permissions that are really pleasurable to use and very easy to extend.

It's just a fantastic combo for 99% of people and I highly recommend investing in it. A bit of learning to be done, but if you can do the django into tutorial then this should be manageable.

Just remember, you're going to need a CMS with all sorts of permissions etc. That isn't easy to setup, control and manage. Start with a CMS solution from the get go. Django-CMS, Wagtail and Mezzanine are the best out there, and Wagtail is in my opinion the best full stop. Django-CMS is incredible but way unnecessary for you. ",1531727490.0
xBBTx,Start with standard `django-admin startproject`? Nothing prohibits you from making your own project template.,1531670219.0
,Cookie-cutter is for advanced users. Do not use it until you're ready. It will be more work than it's worth. ,1531676507.0
andytwoods,Check out the other django cookiecutter packages people have made :) https://djangopackages.org/grids/g/cookiecutters/,1531664905.0
TyRD4,"You may not want to use Django. If you want to start from bare bones and build up, check out something like flask instead. ",1531662154.0
ezaquarii_com,"Hm... Not very constructive, but why are you jumping into an obsolete technology? Django 1.8 is EOL for quite some time now.",1531651318.0
,"I'm not really sure about DRF but you could take a look at Two Scoops of Django, there is an old version of that book for Django 1.8.x and python 2.7.x",1531636523.0
athermop,"To be honest, I'd just use whatever the latest tutorials are. The changes from the versions you list to the latest are mostly not world changing when it comes to web dev.

When you run into a problem you can just Google around to see what changes you need to make to match your versions. ",1531687202.0
tomfa,"That's a very specific stack! I used Django 1.5-1.7 with Python 2.7 a few years back. Using Django 2.0 with Python 3.6 now. Both with DRF of some version. I don't think the basics has changed much, and if you do any getting started tutorial of any version, you'd be able to copy-paste most of your code between versions.

Anyway, the Django docs are great(!), and you can even find an official getting started guide for any version you choose at e.g. https://docs.djangoproject.com/en/1.7/intro/",1531678335.0
spookylukey,"If you haven't tracked down your problem, how do you know it is a version incompatibility? Maybe it is just a typo somewhere?",1531671925.0
idiomatik,"Great that you are getting your handso on Django 😀

Do you get any errors or something?

What happens when you run `python manage.py check`?

And finally, have you tried asking on stack overflow?",1531686582.0
,[deleted],1531691328.0
GoochRash,"I don't know what database you are using but is the ""+00:00"" a timezone offset?",1531624807.0
shabda,What is the link to buy the cheat sheet?,1531630007.0
chrisrazor,The very first tip is incorrect: you don't need to pass the number base to parseInt - it defaults to 10.,1531659350.0
IonTichy,"me: ""pfft...another one of these 'tricks' blogposts, what could it possibly teach me new..""  
\* reads part about string formatting in js \*

""well, I'll be damned!""

great post, saved for future usage!",1531789919.0
reversiblehash,"This is more or less a working example. I stripped it from an existing project of mine and made it generic, so hopefully i didn't bungle it too bad when taking out app specific code. most of this is almost verbatim whats here: https://docs.djangoproject.com/en/2.0/topics/forms/modelforms/#model-formsets but mine is v1.11 not v2 so depending on what you're working in adapt it.

forms.py

    from django.forms import inlineformset_factory

    ChildItemInlineFormset = inlineformset_factory(ParentClass, ChildClass, fields=('name', 'description', 'resident'), extra=0)

    class ParentEntityForm(ModelForm):
        class Meta:
            model = ParentClass
            fields = '__all__'

 views.py

    class FormView(View):
        form_class = ParentEntityForm
        inline_formset = ChildItemInlineFormset
        template_name = 'form-template.html'

        def get(self, request, *args, **kwargs):
            """"""handle form display""""""
            form = self.form_class()
            formset = self.inline_formset(instance=ParentClass())
            return render(request,\
                self.template_name,\
                {'form': form, 'formset': formset})


        def post(self, request, *args, **kwargs):
            """"""handle form submission""""""
            form = self.form_class(request.POST)
            formset = self.inline_formset(request.POST, instance=ParentClass())
            if form.is_valid() and formset.is_valid():
                # Save the parent
                entity = form.save(commit=True)
                # Save the formset
                formset.instance = entity
                formset.save()

            return render(request,\
                self.template_name,\
                {'form': form, 'formset': formset})


template

    <form method=""POST"">
    {% csrf_token %}
    {{ form }}
    {{ formset.management_form }}
    <div id=""formset-container"">
    {% for item_form in formset %}
        <div id=""formset-{{ forloop.counter0 }}"">
            {{ item_form.id }}
            {{ item_form }}
        </div>
    {% endfor %}
    </div>

    <script type=""text/html"" id=""formset-template"">
        <div id=""formset-__prefix__"">
            {{ formset.empty_form }}
        </div>
    </script>

    <a href=""#"" id=""add-item-button"" class=""btn btn-info add-item"">Add formset</a>

    <input type=""submit"" value=""Submit"" />
    </form>

    <script>
    $(function() {
        $('.add-item').on('click', function(ev) {
            ev.preventDefault();
            var count = $('#formset-form-container').children().length;
            console.log(count);
            var tmplMarkup = $('#formset-template').html();
            var compiledTmpl = tmplMarkup.replace(/__prefix__/g, count);
            $('div#formset-form-container').append(compiledTmpl);

            // update form count
            $('#id_formset_set-TOTAL_FORMS').attr('value', count+1);

            // some animate to scroll to view our new form
            $('html, body').animate({
                scrollTop: $(""#add-item-button"").position().top-200
            }, 800);
        });
    });
    </script>
",1531628383.0
booooomba,Just use virtualenv + wrapper. That should work on windows as well. ,1531599702.0
moeris,"I dunno, I like pipenv.  The only real downside I've heard being brought up is that it's slower.  But for that you get a lockfile, an automatic way of handling dev and production requirements, and an automated way of handling virtual environments.  I feel like it's easier for those getting started.  And I've been bit enough times by non-deterministic builds that I feel the slight difference in speed is worth it.",1531652015.0
SomeShittyDeveloper,"I switched from using straight venv to pipenv. I was tired of having to remember to add the packages to my requirements.txt file, and didn’t like how bloated the file was if I just did:

    pip freeze > requirements.txt

I also like how it handles dev dependencies for you, and keeps the venv folder out of your project root so editors like PyCharm can detect the venv but keep it out of your project folder.

It might be slower, but it definitely saved time and headache when my local would work but Docker image would fail because I forgot to add a package to the requirements.txt.",1531671200.0
IReallySuckAtChess,"Seriously consider using a Linux dev environment. You'll deploy to a Linux server and you'll have a far superior experience in general. Get a modern distro and you should have 3.6 from the get go. Setup a virtualenv and activate it. If not then pyvenv has great documentation and is my recommendation if your distro doesn't have 3.6. It's always best to dev in an environment as similar to production as possible. 

This will also allow you to explore some tools you'll end up using in production like nginx or Varnish/Squid etc. You're also a lot less likely to run into problems with library compatability like with PIL/Pillow, OpenCV etc. 

By the way, have you heard of Pycharm? Get Pycharm... If your doing django development its literally *the* IDE to use. You will not regret it. It does so many things automatically and magically you'll never regret using it. It's django integration is better than waffles. I drank the cool aid last week and I'm a convert... Just have lots of ram and give it time to build the initial database. Learn to setup up django integration and point it to the right venv. ",1531728808.0
Nicksil,"You don't have to use Django at all. Just pipe the data straight into the database. Do a quick search for the database you're using and copying data into it.

For instance, with PostgreSQL, look into COPY, CSV, etc.

It's all there; already created for this sort of operation.",1531604962.0
thinkingdots,"Is your application scenario:

* **A)** Messages can be posted to multiple Channels simultaneously.
* **B)**  Each Message can only be posted to a single Channel, and any users subscribed to that Channel would see the message.

I suspect you want B. If that is the case you should add a Foreign Key to Channel in your Message Object, and remove the Message FK from Bridges.

So Bridging is just User|Channel.

Then you wouldn't really need a signal to populate Bridging. To access the messages for the channels a user is subscribed to, you would just filter Messages by that particular user's Channels.",1531604330.0
hugo2kmx,Let clients side to save messages...,1531659480.0
reedjones_prague,"Well you'll probably just want to send the data to the template as JSON and then use a front end library for the visualization 

something like [http://fperucic.github.io/treant-js/](http://fperucic.github.io/treant-js/)  or [http://visjs.org/](http://visjs.org/)  or D3js 

Um, by the way, is there a reason why you are using the  ""\\\_"" in your names? like in: *created\\\_date*

it should be *created\_date* 

see: [https://www.python.org/dev/peps/pep-0008/?#naming-conventions](https://www.python.org/dev/peps/pep-0008/?#naming-conventions)",1531844304.0
reversiblehash,"you are going about this a bit wrong

    class OrderHistoryView(ListView):
        """"""show a list of orders""""""
        context_object_name = 'orders'
        template_name = 'orders.html'
        paginate_by = 20
     
        def get_queryset(self):
            """"""Returns Contacts""""""
            return Order.objects\
                .filter(\
                    emailAddress=self.request.user.email)
    
    
    
    class OrderDetailView(DetailView):
        """"""show a list of orders""""""
        context_object_name = 'order'
        model = Order
        template_name = 'order-detail.html'
    
        def get_context_data(self, **kwargs):
            context = super(OrderDetailView, self).get_context_data(**kwargs)
            context[""order_items""] = context['order'].orderitem_set.all()

Edit
you don't actually need the `context[""order_items""] = context['order'].orderitem_set.all()` line you can make that call in your template like so:

    {% with order_items=order.orderitem_set.all %}
        {% foreach item in order_items %}
            {{ item }}
        {% endforeach %}
    {% endwith %}",1531602573.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1531586205.0
timlwhite,"Basically; clean methods are invoked for each field on the form, and can be used to sanitize or validate the contents of that particular field by itself. The form level clean method let’s you do validations that require multiple fields in concert - ones that depend on each other, for example.  For if you have a ModelForm, then the Form will take on the fields of your Model. Otherwise, the fields are those defined on the Form class. HTH!",1531585807.0
bedubs147,"I didn't see any of the Python ""pros and cons"" as something specific to Django. If the references to Django were removed, it would be a fairer analysis of the languages. Then, as a side note or a follow-up, comparisons could be made between popular web frameworks of both languages.

Comparisons between a language vs a framework will never be fair. I used to constantly hear how .Net was so much better than Python because it could do so much more. This from people who are still using Python 2.3 and running Python as CGI scripts for services.",1531580189.0
TheoR700,"I bet you could change this email verification for registration to work the way you want it.

https://simpleisbetterthancomplex.com/tutorial/2017/02/18/how-to-create-user-sign-up-view.html#sign-up-with-confirmation-mail",1531602552.0
SuddenWeatherReport,"Actually helpful, thanks",1531573846.0
TheoR700,"A Custom User Model is when the developer extends the base Django User and tells the authentication back end to use that User instead. There are anumber of different ways to do this. This write up does a pretty good job explaining the different ways.

https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html

This guy also has a ton of Django articles that I have found very helpful recently in a Django project I am doing.

If you aren't one for articles like this, Django has an ok documentation on extending the Django User.

https://docs.djangoproject.com/en/2.0/topics/auth/customizing/#substituting-a-custom-user-model

",1531537787.0
liquidpele,"As you probably know, the user object is put in a lot of places (e.g. request.user) and is used by a lot (e.g. django sessions).  But what if you need to have ""company"" as part of your user?   Before custom user models, you had to make a whole other Company model with a link to the user, which was annoying.  Now, you can invent your own model (e.g. MySuperUserLoginThing) that has a ""company"" field and that you tell the system to use instead of the default User model.  Then, request.user will always be an instance of your custom object for you.  ",1531573322.0
ulmas,"If you are struggling with authentication, before jumping into custom user models have you tried practicing authentication?

There's the excellent Mozilla Django tutorial, with a section on authentication. If you haven't checked it, I highly recommend.

Authentication and custom user models, even though related, are two separate topics.",1531592761.0
unklphil,"    Category.objects.filter(
        id__in=Post.objects.annotate(
            approved_comments=Count(Case(
                When(comment__approved=True, then=1),
                output_field=IntegerField(),
            ))
        ).filter(
            approved_comments__gt=0
        ).values('category_id')
    )

Not pretty, but it should work, and unless you have a serious amount of posts, there shouldn't be any slow queries.

What _might_ be a bit faster is:

    Category.objects.filter(
        id__in=Post.objects.annotate(
            has_approved_comments=Exists(
                Comment.objects.filter(
                    approved=True, 
                    post_id=OuterRef('id'),
                )
            )
        ).filter(
            has_approved_comments=True
        ).values('category_id')
    )",1531519857.0
fdemmer,"dont serve files with django.

https://stackoverflow.com/questions/1156246/having-django-serve-downloadable-files",1531514250.0
daredevil82,"I don't think `read` is necessary

    with open(file_full_path, 'rb') as f:
        response = HttpResponse(f, content_type=""application/xls"")
        response['Content-Disposition'] = ""attachment; filename={0}"".format(filename)
        response['Content-Length'] = os.path.getsize(file_full_path)
        return response

Also, your file content type is invalid for an excel spreadsheet.  If you're doing that, you need to specify `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet`

",1531510278.0
skalawag,You might look at this: https://github.com/davesque/django-rest-framework-simplejwt,1531507678.0
MetonymyQT,I've used Blimp for my personal project. I guess if there won't be any security flaws there is no reason to change,1531506091.0
garfonzo,Is there a reason to not use the built in [DRF tokens](http://www.django-rest-framework.org/api-guide/authentication/#tokenauthentication)? ,1531517578.0
dirtybutter,"regarding your second question, write your own template tag with the desired parameters that delegates to the other tags

regarding your first, the template language isn't turing complete. it's a domain-specific language. it's not intended for complex logic.  the `{%` means ""STOP PARSING HTML!!!!!"". semantically having nested `{%` doesn't make sense. sure, they could have done it, but by not implementing it, they force separation of concerns 

",1531498900.0
boxidea,"    {% static 'img/logo.png' as imagepath %}
    
    {% thumbnail imagepath ""x100"" as thumb %}

Although I'd probably do it like this:

    {% thumbnail ""img/logo.png"" ""x100"" as thumb %}

And have the thumbnail tag call the static function behind the scenes.",1531501964.0
haloweenek,Jinja2,1531502805.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1531495729.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1531495663.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1531500170.0
iconfinder,It's two different things. One is the model itself. The autofocus attribute is added when you create a form.,1531472665.0
iconfinder,"It's two different things. The code you pasted describes the model. The Autofocus is added when you create a form. The form will of course be hooked up to your models attributes, but you will do the form specific parts when creating the form.",1531472742.0
banjochicken,"Personally I always end up using it.

There is always a point where you need to serialize and deserialize JSON and I’ve installed in the past just for the serializers. The standard lib `json` package doesn’t handle as many different types as DRF does, which has caught me out a few times. Once you start deserializing with Primary keys etc, it is just so much better.",1531466006.0
yoongkang,"You normally use a full-blown API (using something like DRF) when you have a client, like a React application or a mobile application. 

If you're only using a Django with server rendered templates, don't worry about an API. If you only have an endpoint or two return JSON, don't worry about DRF either. Just write views that return JSON.",1531459004.0
Bealz,"If you want dynamic, rest framework is a good way to go update charts or whatever without having to do a full page refresh. 

Another way to do it would be to load all the data it could possibly need ahead of time, only displaying portions of it in the chart. This would be possible with smallish amounts of data.

Or, just refresh the whole page with the chart in it whenever parameters are updated. 

To sum up,
1. Yes it could service some purpose.
2. Yes it is a good tool to help make your site more dynamic and app-like.
3. You might be able to but it depends on your requirements.

Invest some time going through the DRF tutorial and then decide if you think its worth it.",1531459075.0
roysta,"I almost always implement it.  It's really simple, and provides a ton of flexibility.  I don't have a ""client"", but I use things like DataTables or charts which need a queryable API, and DRF has been great.  Also, I can point anyone to a a DRF endpoint for them to get a read-only view of the data quickly downloaded (such as using it as a DataSource in Excel).",1531483476.0
daredevil82,"Tom Christie (creator of DRF) wrote about this

https://www.reddit.com/r/django/comments/3h9oj8/what_really_are_the_differences_between_django/cu5pzu9/

If any of the points he listed apply to you, then you're probably better off with DRF.  ",1531495860.0
ic_97,What do you mean by you don't want to expose data to outside sources? Does it mean that you don't want anyone else other than the user to have access to the info? If yes you can easily achieve this by using DRF with the appropriate Authentication class.,1531458824.0
hi-i-like-coding,When it would solve a problem that you actually have.,1531475205.0
intrepidev,I too would like to see an answer to this,1531461074.0
thepercept,"OP, any answers ?",1544124969.0
fahdinho,"The Heroku documentation is pretty good and explains how to deploy a Django project with a PostgreSQL database. Have you tried that?

https://devcenter.heroku.com/articles/getting-started-with-python",1531445161.0
apreche,"raw\_id\_fields is what you are looking for. The magnifying glass will open the pop-up. Just try it, you'll see.

[https://docs.djangoproject.com/en/2.0/ref/contrib/admin/#django.contrib.admin.ModelAdmin.raw\_id\_fields](https://docs.djangoproject.com/en/2.0/ref/contrib/admin/#django.contrib.admin.ModelAdmin.raw_id_fields)",1531434048.0
billcrystals,"Ok not looking good for a native solution to this issue, so time to get creative.

What I'm currently doing is piggybacking off the InlineModelAdmin, but I'm hiding all the fields and only showing the **change\_link**.  This gives me a nice clean list of all the child objects and a link to their full change form.

Next I'm customizing the parent model's change form to include some JS which simply alters the InlineModelAdmin change\_links to use the Django Admin Popup method instead of a simple page jump.

Next step is to add my own ""Add Another"" button, which is simply going to open up the child model's add form (in a popup) but with the additional step of pre-populating the ForeignKey field, probably via URL parameters.",1531509584.0
MagicWishMonkey,Cache the result and put it in your session (or a global cache if you only want it executing once throughout the app lifetime) and return the value in the context processor. ,1531422111.0
Airith,"`modelform_factory` returns a class, so it should be `UserFormSet`. I assume there's a way to get PyCharm to recognize what this function does but I'm not familiar with it.",1531419992.0
jobelenus,"I've written an e-commerce system from scratch in django (and supported it for 8 years). I would recommend doing it that way. Because everyone does something different. And no sense in fighting over a giant framework that has made a decision you need to fight against. And most of what you're getting ""for free"" by using that framework is the easy stuff to do.",1531415539.0
poleethman,Mezzanine with Cartridge lets you create different variations of the same product.,1531424394.0
banjochicken,"I’ve worked on a couple of projects where we used Saleor. Its not a framework but rather a project you fork them build on top of.

Overall it’s been a pleasant experience and is a good starting point. Even if you do go your own way, it’s a good reference for ecommerce.",1531426848.0
ccb621,"If you plan to expand, I recommend Oscar. We used it at edX, and I still use it for a consulting product (although, only for catalog management).

If you want to stick with a single product with multiple variants, I agree with rolling your own. I also second the use of Stripe for payments, because it's a simple integration (and I work there).",1531448347.0
patrys,I'm one of the authors of Saleor. It's a forkable project template so you could take the parts your want and drop the rest. Feel free to join our Gitter chat and ask questions.,1531460998.0
ezaquarii_com,"Stay away from Oscar, as you'll be maintaining your own DB migrations. That's because of their app fork approach.",1531491386.0
booooomba,"I’d say no. Much quicker, better, easier to just do it from scratch yourself.",1531414476.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1531413114.0
booooomba,"I don’t quite understand what you’re trying to do, but are signals not better suited for this task?",1531414388.0
jillesme,http://djangoweekly.com/newsletter/,1531400739.0
kvan15,I would be interested in this as well! ,1531400109.0
chiproller,"You might want to subscribe to the Pycoders weekly email newsletter.  While not strictly Django information, there is some coverage.",1531400753.0
2fplus1,"More monthly than weekly, but there's [http://www.djangodigest.com/](http://www.djangodigest.com/)",1531404192.0
shabda,"Django and Python

- http://djangoweekly.com/newsletter/
- http://pythonweekly.com/
- http://pythonweekly.com/
- http://importpython.com/newsletter/
",1531408415.0
kolloid,I've successfully used [django-tables2](https://github.com/jieter/django-tables2) package in 3 or 4 django projects and it's the best thing for tables that exists for Django.,1531388131.0
oOUOo,"Hey,

How about this in your template:

<a class=""btn-link"" href={% url 'renderPage' description=line.description %}>{{ line.description }} </a>

This sets the href to direct to your renderPage view, while passing the description parameter into the view (i.e., 'File12345').

Hope this is what you are looking for. You can also check out the official docs 
https://docs.djangoproject.com/en/2.0/ref/templates/builtins/#url 
",1531359756.0
iBlag,"What if two different users upload a file with the same name? Do you allow users to overwrite other users files, or is the URL to the file effectively “owned” by the user who uploaded it first?

What if a malicious user uploads a malicious file to your site and uses your site to infect other people (meaning they use your server as a C&C server)? Your domain could get commandeered by ICE or DHS or blacklisted by your host in that case.

Not trying to call you out on your idea, just trying to make sure you have all of your bases covered before you put something into production that’s extremely difficult to change later.",1531380507.0
ubernostrum,"While it's great that you're learning, your behavior is verging on spammy. Please consider reading some tutorials/documentation for the software you use, and formulating more detailed questions, including what you've tried already and any error messages you encountered, rather than just making a huge number of reddit posts.

Please also consider /r/djangolearning and the #django IRC channel as ways to get help more quickly (and interactively in the case of IRC).",1531451280.0
kvan15,"Not a UI/UX person, but my suggestion would be to remove the informational text that appears when you click on the cell to input a value. 

Another suggestion would be to add formatting to the table that appears at the bottom of the page. ",1531343725.0
SmithPeder,"It really depends on your business I suppose, but Django/React is a popular choice for many reasons. In my experience they play very nice together. You can create a standard RESTApi with Django-Rest-Framework http://www.django-rest-framework.org . That way you can easily expose the data you want using different endpoints, and use standard HTTP calls from your React front-end to display and alter the data.",1531322902.0
pydanny,"My preferences are:

* Django
* DRf or Graphene
* VueJS for the frontend
* Deployed via Zappa/Lambda

Fast, easy to deploy, scales to effectively infinity!",1531328249.0
keepdigging,"Django REST framework and Postgres for the DB

Linux, probably Ubuntu or ‘serverless’",1531377402.0
kunalgrover05,Built an  addition to Django multiselectfield(which stores data as comma separated) to allow sorting of selected choices in the DB.,1531305512.0
ic_97,I don't know if this will work for you but i used Chart.js for my website and it worked like a charm. ,1531287529.0
Jgrbot,"If you need SAML or logins other than basic login don't use Dash, there's a paywall.

I'm using Bokeh + Flask but you can use Bokeh and Django. I like Bokeh because it works really well with pandas and you can control absolutely everything about the plotting and graphing, but there's a steeper learning curve when compared to ploy.ly/Dash.

Don't know much about Chart.js but you'll need to know JavaScript.

Edit

Forgot to add dash doesn't use HTML, it's a really ugly markup which translate to HTML,  Bokeh let's you embed graphs using Jinja2",1531300495.0
zeppelin528,"I've used plotly to create the chart with the python API. Once you create the chart you can output a string which contains a div with the JavaScript for the chart. Then you just pass that into the render function as a parameter which templates it into your HTML template.

No JavaScript required.",1531342653.0
pancakeses,"Be sure to check out the [django packages grid on charts](https://djangopackages.org/grids/g/charts/).

Also, there are some great tutorials out there, like [this one](https://simpleisbetterthancomplex.com/tutorial/2018/04/03/how-to-integrate-highcharts-js-with-django.html) for using HighCharts with django.",1531317864.0
Yaser-Amiri,"Hi, I wrote [this](https://github.com/Yaser-Amiri/Django-C3) to generate charts for my  MVPs, maybe it help you.",1531328087.0
athermop,If you're going to edit your manage.py why don't you instead create an activate script for your virtualenv that sets your env vars for you?,1531262531.0
fahdinho,Try drf-yasg https://drf-yasg.readthedocs.io/en/stable/readme.html. ,1531278743.0
fdemmer,https://django-registration.readthedocs.io/en/2.4.1/,1531258815.0
booooomba,There are loads of them on Youtube.,1531259523.0
pancakeses,Here's a stack overflow answer on this topic: https://stackoverflow.com/questions/47182012/remove-old-permissions-in-django,1531247771.0
jobelenus,You really should store it as the chats come in.,1531245095.0
GuiYaz,"You would want to create some sort of message model where you store the messages.

A simple model would look something like:

ChatMessage

* `user`
* `channel`
* `message`
* `datesent`

You then would query against that table whenever the user joins the channel, and populate the messages on the template, so something akin to:

chat\_history = ChatMessage.objects.filter(channel=channel\_user\_is\_in).order\_by('-`datesent`')\[:10\]

Very basic stuff. If any of it is foreign to you, follow the Django tutorial first as it covers everything you need.",1531251468.0
Nicksil,"You haven't provided any information about the system, so difficulty will range between not difficult and very difficult.",1531244119.0
nutsforsluts,Password=Passw0rd,1531243367.0
ezaquarii_com,Same hard as being raped - it depends.,1531404166.0
njancsar,"For media files use something like [django-storages ](https://github.com/jschneier/django-storages)

This will let you use whatever storage backend you want. You probably have your storage backend misconfigured so when a client sends a media file it is being saved to your local dev machine.",1531222331.0
Investisseur,"What drove you to Heroku over using EC2, or Lambda?",1531235048.0
PM_ME_UR_CC_DETAILS,You can cross verify your implementation with this [blog](https://simpleisbetterthancomplex.com/tutorial/2017/08/01/how-to-setup-amazon-s3-in-a-django-project.html),1531240239.0
Fun2badult, Can I ask if you know of any resources to learn how to set it up like this? I’m a beginning Django dev and would like to know how they work together like this ,1531245773.0
ezaquarii_com,"React native alone is used in sub-2% of apps, so any extra constraint on your stack will make it only smaller.",1531404051.0
corkmask,"I have used [onesignal](https://onesignal.com/) in the past. what you do is:

1. On the mobile app you register the user with the service (they provide an sdk) and get an id
2. Store that id on your end 
3. Use their rest api with the id of the user to send notification
4. ?????
5. Profit",1531216767.0
asplodey,"I use FCM. Not sure about how you can roll your own.

In regards to handling devices, you get a token from Firebase on the device which you can then send up to your server with other details and associate it to the user (or don't if they don't need to log in and you just want to send blind messages).

You then use the firebase admin python package on the server to send notifications to the devices based on the IDs.",1531214629.0
antwan_fr,"Use django push notifications, it's awesome, supports iOS and Android devices (and web push as well) and you don't have to rely on 3rd party that can be changed or removed without notice (remember parse). It manages for you token management, device registration, statuses, etc.",1531219131.0
pancakeses,"Are you talking real-time tracking of the game? If so, you keep in mind that it may take a moment to update the entry in the database, so it might be best to record the start and stop time in javascript (client-side), and upon stopping the timer, push both pieces of data (perhaps via ajax) to the server to be recorded at once.

You could have two models, Game and TimePeriod, for instance, with TimePeriod having a foreign key to Game.


    import datetime

    class Game(models.Model)
        name = CharField(_('Name of the Game'),)
    
    class TimePeriod(models.Model)
        game =  models.ForeignKey(Game,
            on_delete=models.CASCADE,
            related_name='time_periods')
        start_dt = models.DateTimeField(_('Start'),)
        end_dt = models.DateTimeField(_('End'),)
    
        @property
        def duration(self):
            return (end_dt - start_dt)

Then you can use query aggregates for overall game time.",1531192559.0
mhurron,"ls is not a Windows command. If you're using cmd.exe, you want `dir`",1531183252.0
pancakeses,"Why not approach this with ManyToMany, rather than two Foreign Keys? You can do something like this:

---

**models.py**

    class Relationship(models.Model):
        
        CONFIDENCE_LEVEL = [
            (1, '1 - Low'),
            (2, '2'),
            (3, '3 - Medium'),
            (4, '4'),
            (5, '5 - High')
        ]
        
        persons = models.ManyToManyField(Person)
        # need to rework so relationships are more descriptive, including when (which case) it was revealed..
        relationship_type = models.ForeignKey(Relation)
        definitive = models.BooleanField(default=False)
        confidence = models.IntegerField(null=True, choices=CONFIDENCE_LEVEL)


**forms.py** (just the relevant bits)

    class RelationshipForm(forms.Form):
        
        persons = ModelMultipleChoiceField(
            queryset=Person.objects.all().order_by('name', ),
            required=True,
            help_text='Select two people',)


**views.py** (just the relevant bits)

    class NewRelationshipView(LoginRequiredMixin, FormView):
        
        def form_valid(self, form):
            
            persons = form.cleaned_data['persons']
            if len(persons) != 2:
                messages.info(self.request, 'Select exactly 2 persons')
                return redirect('relationship:create')
",1531191339.0
athermop,"When you say you want to add or remove a field, do you mean you want to add or remove a field from the _model_ (as well as the form for modifying that model of course)?

If that's the case, you probably want to rethink your data model.  You'll have to give more info about what your models are to get help with that.

It's possible (though, much less likely) that this is one of the times when you will benefit from a JSONField on your model and then store whatever you want in there.",1531174940.0
antwan_fr,"Probably due to a very large number of fields, or default values which are insanely long (or using a generator somehow).
Try to dichotomyze your model.py in chunks and run makemigrations on each one of them to see which class is failing.",1531221456.0
TheoR700,"I don't have an answer for your error, but it seems wrong to have 100+ classes defined in a single models.py. I'm willing to bet you could do a better job of refactoring your app into multiple apps. This may fix your error as well.",1531202075.0
pancakeses,"I disagree with /u/duppyconqueror81 on this one

If you expect any serious complexity in your project (which it sounds like you do), then taking the time to plan a solid foundation and at least build an initial version of your models is a great way to begin. If you can't state what critical fields you'll need and how the various models will interact at a high level, you're really going to struggle once things get more complex. You'll end up with a spaghetti bowl of confusing mixed-up code. (I tend to over-analyze things, so on my current big project I graphed the entire planned model structure before I started anything. That might be overboard for most projects, but it served to help me keep in mind what was important at the beginning, and how everything would need to work together.)

That being said, one the initial models are created, I tend to start incrementally. Assuming you're going to have any sort of registered user system, getting authorization working properly is probably a good starting point. In my experience, most of my projects' interactions rely primarily on User and any associated models. Once you can register users, you can start building other pieces of your project. I found it helpful to use generic class-based views to build out very basic CRUD for my various apps with few bells and whistles, and once I had the basics working I refactored things to make them look good, add additional functionality, and put in permissions and other restrictions.

Have you worked through the django tutorial and/or any of the other project tutorials out there? It's a bit awkward when just getting started that you sort of have to work on the view / urls / templates / forms (if needed) all at the same time. But after awhile you'll get used to the workflow.",1531158896.0
buleria,"Draw all your inter-app dependecies on paper. If you get circular dependecies - remodel. If' a piece has too much responsibility - rethink.

An interesting thing to do is have a top-level app that implements your business logic and binds together all your apps that (hopefully) do one single thing.

Designing a Django app is no different than any other software project. Keep your responsibilities in check, and you're golden.",1531170059.0
duppyconqueror81,"I say, just get something to show on the page, then build it a button at a time.

I personally don’t write my models first. I write them once I need them to do something, which is usually just before writing the forms and the views.  That way, I dont have code laying around « that I’ll use in 2 weeks and not remember what I had in mind » :)",1531154078.0
shabda,"Building Multi Tenant Applications with Django is our new book about the various architectures to build multi tenant apps in Django.

In this this book, we take a Single tenant app and convert them to multi tenant application using the 4 common multi tenant architectures. We end the book with a discussion of the third party libraries which add multi-tenancy capabilities.

The book is open sourced and available at [github](https://github.com/agiliq/building-multi-tenant-applications-with-django) and available to read for free at https://books.agiliq.com/projects/django-multi-tenant/en/latest/. PRs welcome.

Its our fourth free Django books released in 2018. You can read all of them at

- [Django ORM Cookbook](https://books.agiliq.com/projects/django-orm-cookbook/latest/)
- [Django Admin Cookbook](https://books.agiliq.com/projects/django-orm-cookbook/latest/)
- [Building APIs with Django and Django Rest Framework](https://books.agiliq.com/projects/django-multi-tenant/en/latest/)
- [And the current book ;)](https://books.agiliq.com/projects/django-multi-tenant/en/latest/)

I am also writing some more books, which are in progress

- [Visual Arts with Python](https://books.agiliq.com/projects/Visual-Arts-with-Python/en/latest/)
- [Jounrneyman Python](https://books.agiliq.com/projects/Journeyman-Python/en/latest/)
- [Django projects cookbook](https://books.agiliq.com/projects/djenofdjango/en/latest/)

Which are at various stages of completion. PRs and feedback are gratefully accepted.  (Each book will have its github links).
",1531148275.0
maks25,"Really enjoyed the concise straight to the point read, also learned something new. Thanks!",1531202643.0
gmdm1234,"Isn't this a rather verbose way to say, just use django-tenant-schemas?",1531160211.0
nelsonko,"> Shared database with isolated schema

Must be really painful to run a the migrations on many schemas. If migration for the Nth schema fails it will result into inconsistent state. I would be careful with this. ",1531235425.0
wpg4665,"You're probably looking for the term ""multi-tenancy"". Basically, you have multiple tenants who are all using and sharing the system, with their own, independent settings. I don't have much guidance outside of that, but I'm sure some decent google searching should be able to help out.",1531149532.0
OMDB-PiLoT,"Same here. Been PHP dev for a looooong time. Moved to Python, picked up Django, never looking back.",1531155321.0
TunaBoo,"Ditto, I am very happy with my switch. Used about every web framework out there.",1531144496.0
hedronist,"I made the switch from PHP to Django in the Summer of 2007. I think we were on version 0.97pre. I was first blown away by the insanely good docs and tutorial. Then I was blown away by the admin app. Etc. etc.

The only thing I *didn't* like was how the templating engine was missing features (deliberately, but for the wrong reasons), and how there was a variable evaluation bug that took them like 3 years to fix.

OTOH, I fixed both of those in under an hour using MonkeyPatches. (I love me a good MonkeyPatch!)

11 years later Django/Python/Postgres is still my hands-down favorite dev environment.

Source: Certified Old Guy^&reg; who started at the keyboard of an [IBM 029 keypunch](https://en.wikipedia.org/wiki/Keypunch#IBM_029_Card_Punch) in 1973.",1531181000.0
laith43d,"I’ve been Python developer for a while now, coming from Flask background I was amazed how beautiful and powerful Django is! I am developing my next project with Django.",1531151384.0
zettabyte,"It's been over a decade since I was a part of the Java web-dev contingent.  Struts was on it's way out, Spring was the new hotness, and Hibernate was the ORM.

How does it look nowadays?  Is there anything in the Java space similar to a Django, Rails, or Laravel?",1531155329.0
pr-81,"I just started getting into Django, and like what I see so far. I'm coming from PHP and frameworks like Symfony, so I'm still learning.",1531149214.0
randomNext,"I started as a .Net backender 11 yrs ago. In 2013 i started fulltime frontend and later moved to fullstack with nodejs backends and i’m telling you the JS world is just such a clusterfuck.

I started learning Python/Django a couple of months ago and it’s like i fell in love with programming again.",1531183605.0
rllavona,"it is, Python is powerful i want to learn more in deep about Django, i have some really good ideas for networking tools that will be awesome to be done in Django",1531183320.0
mikemaddem,"*high five*
I did php before this and I was beyond reluctant to switch. But I have clearly been proven wrong considering it's been 1+ year for me in django ",1531191760.0
Cictani,"Yes Django is great but sometimes you'll miss the static typing, if you get strange error messages with no real hint what went wrong. You have to write a lot more tests because there is no compiler which detects type errors.",1531166313.0
dikamilo,"If you going to do REST API, remember that there is Django rest framework as well.",1531209315.0
antwan_fr,"Django Doc is definitely its key asset. It's a subtle mix of function references, tutorials, source code, examples, explanations. Very very well organised, readable, and easy to delve in.
You look for something and you learns tons every time. That's what make its strength IMO.",1531220408.0
,[deleted],1531239291.0
CoffeeTableEspresso,"Same here.  I personally have a lot of experience with Python, but not so much with web-dev. The only web-dev experience I have is a little bit of PHP.  Very glad to be using Django now, tho.  I'll definitely use either Django as much as I can going forward.",1531256574.0
_Sir_Acha_,"Foreal! I went from knowing nothing about web development to deploying a Django site on AWS within a few weeks.

The official Django Docs & Tutorials are the golden standard for what documentation should be. No stone was left unturned there.",1531301573.0
netok,"Curiously, no one in this thread has used nodejs/express before. Hmm",1531157263.0
jordanreiter,"Popping in for a TLDR in case you want to know more before checking out the repo:

 - basically it really is just a drop-in authentication backend; you'd just add it to your `AUTHENTICATION_BACKENDS` setting for instant impersonation functionality
 - unlike other impersonation frameworks which makes use of models or middleware, this just allows you to log into another user's account directly
 - the advantage is once you are logged in, your experience is identical to that user's experience, because you are logged in as that user with no extra information stored in your session
 - the *disadvantage* is unlike other frameworks where you can stop impersonating and go back to your original superuser session, you'll have to log out and then log back in again as the superuser. I generally sign in using Private/Incognito mode on my browser for this reason; I just open a new window and then close it when done
 - it does have a Mixin as well, so you can add it to any existing backend you might be using so long as that backend makes use of a username/password combination
 - your custom backend doesn't have to use the username field -- the mixin will make use of whatever you've specified as `USERNAME_FIELD` in your custom user model.
 - supports custom user models

Feedback welcome! Please let me know what you think.",1531083140.0
ramse,"Have you seen or used django-hijack at all? If so, any reason to go for this over that?",1531086326.0
fdemmer,you should [split](https://docs.python.org/3/library/stdtypes.html#str.split) at most once at [line 28](https://github.com/JordanReiter/django-impersonate-auth/blob/master/impersonate_auth/backends.py#L28) in case the separator character is used in the password.,1531127063.0
wpg4665,How would this handle 2FA auth backends? Does it support `username:password:2fa-token`?,1531143565.0
,How is this any different than django-hijack. Hijack is also much simpler.,1531086655.0
winniepQQp,I ❤️ [django-hijack](https://github.com/arteria/django-hijack) ,1531135701.0
morinonaka,"There is django channels that support websockets, and that's built in. ",1531075606.0
pancakeses,"As /u/morinonaka noted, use channels. There are several tutorials are available for building chat with channels.

http://channels.readthedocs.io/en/latest/tutorial/part_2.html

https://gearheart.io/blog/creating-a-chat-with-django-channels/

https://www.sourcelair.com/blog/articles/115/django-channels-chat

https://www.ploggingdev.com/2017/11/building-a-chat-room-using-django-channels/

https://danidee10.github.io/2018/01/13/realtime-django-5.html
",1531078549.0
abrazilianinreddit,"I've had this problem, and couldn't find a way to integrate both. My solution was to create a Firebase user when creating a django user using the same username and email and generating a random password.",1531077520.0
jskalc,Use 'mock' library instead of creating own mocked classes,1531060821.0
ahackersday,Got any other good sugestions when it comes to designing the models?,1531048692.0
wkoorts,"Good job, it's a nice start.  The biggest thing that jumped out at me is missing out a lot of feedback for the user.  You've already identified not listing proper validation errors like when the user doesn't meet the password requirements.  The other thing is when doing actions like adding or removing ToDos I expected to see some feedback like ""ToDo added"" or something.  You should look into the [messages framework](https://docs.djangoproject.com/en/2.0/ref/contrib/messages/) for this.

Ultimately using the messages framework for an app like this won't feel very slick because the actions are all ""small"", so reloading the page is a bit much.  It lends itself to doing more of a Single Page Application, then you can do nice little JavaScript-based feedback, like loading spinners and whatnot.",1531028431.0
Rodr1c,I didn't see any form errors displayed at all when typing random characters for username and password login. ,1531026051.0
,I can't sign up.,1531036755.0
djob9601,will check this out - been meaning to learn websockets for a while,1531034640.0
cakeandale,"You'll want to [define a through table](https://docs.djangoproject.com/en/2.0/topics/db/models/#intermediary-manytomany) that has an extra integer property like `priority_order`, probably will want to make it unique with course to avoid having an ambiguous order.

You can't have more than one auto-increment field so you will need to write some logic to the save method to manage ordering and making sure new teachers get a higher number.",1530983107.0
SlumdogSkillionaire,https://docs.djangoproject.com/en/2.1/topics/db/models/#extra-fields-on-many-to-many-relationships,1530982984.0
uberfade,"Generically you will want to get a queryset of all the teachers available for that class and order them by whatever value determines who should go first.  

    teachers = Teacher.objects.filter(avail=x).order_by(pk).first()

I am not sure what fields you want to check for availability or order but in my example it was the `avail` and `pk` fields with first so it gives the first teacher avail.",1530983114.0
duppyconqueror81,"As said above, a Through table would work. Many times though I personally use another model like « TeacherInCourse » that I manage manually",1530985738.0
HeathenForAllSeasons,"[This seems to be what you're looking for.](https://pypi.org/project/djangosaml2idp/)

Also, it's not Django, but [this](https://github.com/IdentityPython/pysaml2) may be better maintained.",1530907195.0
Nicksil,"The auto-generated PK field is an autoincrement.

This should be a non-issue, so figure out *why* you want new records to reuse IDs and build out a specific solution from there. Best to leave the PK plumbing alone unless you know what you're doing and have a very specific use case for doing so.",1530894269.0
athermop,"This is a function of your database, not Django.

You should not be building your application in a manner that depends on the method the ids are incremented.",1530903180.0
ccb621,See http://www.django-rest-framework.org/tutorial/4-authentication-and-permissions/.,1530895534.0
,[deleted],1530911777.0
dirtybutter,"Do you mean you don't want to present an html version of the api or do you really want to block json from being shown in the browser?

If it is the former look into setting the `formats` property

If it is the latter, you might consider writing some middleware that leverages `is_ajax` https://docs.djangoproject.com/en/2.0/ref/request-response/#django.http.HttpRequest.is_ajax

But the `is_ajax` isn't really going to stop anyone sufficiently motivated",1530937181.0
never_safe_for_life,"In addition to the excellent answers already present, you want to return 404 when an unauthorized client tries to access a protected endpoint, not 403. A 403 tells the attacker they've found a valid endpoint and to keep trying. ",1530955256.0
introspectr,See CORS @ http://www.django-rest-framework.org/topics/ajax-csrf-cors/,1530920972.0
abrazilianinreddit,"I'm designing an API-powered project right now, and my conclusion that trying to ""protect"" your API is futile. There's no way to keep people out. I mean, the whole point of an API is giving access to your application, so protecting the API is almost an oxymoron.

What you should do is making sure that the API permissions are properly set and that the authentication works.

Read endpoints should only returns safe information (for example, your API probably shouldn't return private information of users such as email, SSN, date of birth)

Write endpoints should always check if the actually user has permission to write that data. 

Essentially, make sure that your API can't be used against you or your users. That's much more productive than trying to prevent people from accessing it.",1530893677.0
Nicksil,Besides Django's builtin auth?,1530890181.0
njancsar,Read through the django tutorial and learn how to django.,1530884346.0
squire_louseII,"One helpful piece of info would be the directory tree of the project.  Without that the tips I and others might give 

will be too general, because you will need to be told where to look to find x,y, and z file.  Django project directory 

structure can vary from project to project, so it would be helpful to specifically know about yours.",1530884708.0
Pr0ducer,"URLs.py will be first place to look. This is all the end points, and is the map to most of the project. 

Views, which can be functions or Classes, are what each url points to, so /foo url calls foo_bar view, find the file where that's defined to see what the expected request and response will be.

Models are your data. 

There is a settings.py file, that's full of configuration definitions.

Beyond this, it depends on how the project is structured.  

Good Luck.

",1530885331.0
rockingthecasbah,"Django is pretty easy. You’ll pick it up in no time with the right mindset.

As with any code, it’s easier to complain about code/the previous developer than it is to sit down, focus, and just work your way through it. 

A good start might be the database structure (models) if it is a database heavy application. Otherwise I would start with the urls.py files and work my way back through the views reading what seems important.",1530922037.0
pydanny,What you are looking for is [django-channels](https://github.com/django/channels),1530942155.0
jarshwah,"Here’s one I prepared earlier: https://devblog.kogan.com/blog/kogame-django-channels

I don’t think I mention it in the post, but using TCP for a client-server game is not ideal. Retransmissions can introduce a lot of delayed frames. UDP is better in these situations because missed frames don’t delay future frames. 

Websockets only support TCP, which is the major protocol that Django supports. WebRTC does support UDP though, do it might be worth investing in adding WebRTC support to Channels if you are interested in a real game engine in Django. ",1530963247.0
ankle_flasher,"Not about game development, but an excellent resource for Django - [obeythetestinggoat.com](https://obeythetestinggoat.com)",1530931641.0
frankwiles,"If you use a CDN, you’re fine. I’ve even used it in prod without a CDN for internal/staff tools without issue. ",1530872583.0
tomdyson,"We use Whitenoise in production on large-ish sites (~10 million requests to /static/* per month). Our standard stack is Wagtail on Heroku with Cloudflare or Cloudfront. If your CDN is configured correctly you could manage this traffic on a $7 Dyno. 

FWIW I prefer Cloudflare over Cloudfront because cache purging is instant and it's basically free unless you need more than three page rules. But some clients - understandably - are reluctant to hand over DNS management to Cloudflare. ",1530890837.0
flipperdeflip,"> Shouldn’t I be pushing my static files to S3 using something like Django-Storages?

It is true that S3 doesn't do compression but you would put a CloudFront distribution in front of it and those can transparently compress.

S3 + CloudFront also works well with serverless hosting where you don't want your static files bloating the distributed zip.",1530873377.0
Niicodemus,"My only suggest is to still call `super()` in your `get_queryset()` so that if you use any mixins or change the inheritance chain at all, this `get_queryset()` will work with the other classes. So it would instead be (assuming Python3 syntax):

    def get_queryset(self):
        return super().get_queryset().filter(Q(...) | Q(...)).order_by(...)",1530900919.0
fizzy_tom,"Unfortunately, that is spot on. I say unfortunately because this `Q` syntax is so bad and really out of keeping with the rest of Django.

If you define the `get_queryset` method, then you don't need to define the `queryset` class property.",1530866177.0
antwan_fr,"See also [search vectors](https://docs.djangoproject.com/en/2.1/ref/contrib/postgres/search/#searchvector).

    queryset.annotate(
        clubs_search=SearchVector('home_club', 'away_club')
    ).filter(clubs_search=self.kwargs['pk'])",1531219762.0
reallydarkcloud,"Yeah, you've hit the nail on the head.

Each part of the logger (`django` or `request`) is another level of logging, just like it would be another folder in a python module.

Each level can either be specifically targeted by a given log configuration, or it will take on the configuration of first level that is configured.


Additionally, all this is just syntactic sugar for configuring parts of the `logging` module from the python standard library, so you can add logging to your own django apps, and pop them in the config too!",1530870154.0
xBBTx,"what amount of users are you talking about? give a ballpark figure

I think you're having a misconception somewhere, but I don't want to assume anything yet.",1530828938.0
pancakeses,"I don't think you're understanding how models relate to database tables, and how apps work within a django project. A properly normalized user model should suffice even in the largest django project.

But we need more details to be sure and to be able to assist you.",1530837496.0
Mekhami,"Django operates on the request-response cycle. If you want fresh data, you have to get it from the server, by issuing another request. If that's not refreshing the page, it has to be done with javascript.

There is no way to do this without javascript. If you don't inherently know why this is, you need to understand how web servers work before going further.",1530822306.0
googhalava,The best way would be JS and getting table data from Django API.,1530820981.0
Niicodemus,"You need Javascript in some capacity to modify the page, but take a look at [Intercooler.js](http://intercoolerjs.org/) for a quick-and-easy way to do exactly what you're talking about, specifically the [ic-poll](http://intercoolerjs.org/docs.html#polling) attribute.",1530829794.0
,"I'd be down for a recurring post in this thread where they're linked for anyone to tackle.

Might make this sub somewhat useful....",1530856372.0
chris_conlan,Mods... are you there?,1531246565.0
shabda,This is a great idea. ,1531208329.0
bingimar,check out flatpages -> https://docs.djangoproject.com/en/2.0/ref/contrib/flatpages/,1530809611.0
chris_conlan,"If the pages truly are static, and the traffic won't be astronomical, Django's built-in cache should optimize for static-ness in its default configuration.",1530818601.0
never_safe_for_life,"There's nothing wrong with making views that just load a static template. In fact, there's even TemplateView: [https://stackoverflow.com/questions/5201346/how-do-i-go-straight-to-template-in-djangos-urls-py](https://stackoverflow.com/questions/5201346/how-do-i-go-straight-to-template-in-djangos-urls-py)

    from django.views.generic import TemplateView  
    urlpatterns = patterns('', 
        (r'^foo/$', TemplateView.as_view(template_name='foo.html')), 
    )",1530855425.0
fdemmer,http://django-bleach.readthedocs.io/en/latest/index.html,1530797905.0
CaptainDudeMax,"Not sure exactly what you're talking about. They do have a striptags template tag: 

{{ value|striptags }}",1530801159.0
fdemmer,"doesn't matter.

do what's more readable, more explicit.

don't hide simple attribute access in a filter.

use a filter to process/transform data.",1530797990.0
docclox,"So either W3 Schools was moved to a .in domain and changed it's name to W3School singular, or else that's a different site from the web tutorial site most people think of when they hear that name.

The ""tutorial"" seems to be a single page of introduction as well, although this could just be my javascript restrictions stopping it rendering correctly.",1530797541.0
moeris,Have you ever used yeoman?  That's generally what I use to make these sort of setup scripts.,1530784213.0
CKreuzberger,"Take a look at [cookiecutter-django of pydanny](https://github.com/pydanny/cookiecutter-django), it does what you are trying to do and much more ;)",1530784805.0
Brandhor,you have to [cache part of the template](https://docs.djangoproject.com/en/2.0/topics/cache/#template-fragment-caching) instead of the whole view,1530780142.0
megamark16,You could stick the username in a cookie or local storage on login and then just populate that area with the username in page load using JavaScript in each page.,1530791960.0
Ahmed7fathi,"Hi i ran to this issue today its like 4 month since you opened this thread but i found a different solution than yours

actually this link didn't help so i was calling my custom ""`User`"" model i override it with `AbstractUser` the problem was in my `views.py`

    from .models import User
    class Profile(DetailView):
        model = User
        template_name = 'accounts/profile.html'

&#x200B;

this was wrong the model should selected by  `""get_user_mode ""`  so this is the right settings :

    from django.contrib.auth import get_user_model
    class Profile(DetailView):
        model = get_user_model()
        template_name = 'accounts/profile.html'

&#x200B;",1543448561.0
TheChance,Whitespace.,1530777611.0
NotSelfAware,"Out of curiosity, is there are a reason you aren't doing these checks before the model is actually created? ",1530750071.0
intrepidev,"Could you raise a validation error if the body is null on either create or update? That way the user knows and it's not silent ly deleted. Either way, to me this is a form validation problem.",1530752400.0
souldeux,"Since `body` is a TextField, an ""blank"" value will be stored as an empty string by default. Setting `null = True` on these fields isn't really useful; `blank = True` and `default = ''` will get you the behavior I think you're going for here.

In a model's save method, you can determine whether or not the save is trying to create a new instance or update an existing one by checking whether or not the instance's primary key has been set. Then you can determine what to do in response:

    def save(self, *args, **kwargs):
        if self.body.strip() == '':
            if self.pk is None: 
                #creating a new instance - just don't save anything
                return
            else:
                #updating an existing instance - delete self
                self.delete()
        else:
            super().save(*args, **kwargs)

Note that the `super` call doesn't happen until we're sure we have something we want to save. Also note that we check if `self.body.strip()` is an empty string, meaning both `''` and `'    '` will be treated as blank.

While this will work fine, I would personally be tempted to throw this logic into a pre-save handler: https://stackoverflow.com/questions/23949709/cancel-saving-model-when-using-pre-save-in-django",1530759270.0
IntermittentSteam,"Testing for null values, you should use `is None`. Won't fix your problem, but it's the best way to check for nulls:

    if self.body is None:
        ...

Do you know where your code is failing? My first thought would be to put something instead of `self.delete()` to test whether the conditional is evaluating when you want it to. 

Maybe:

    def save(self, *args, **kwargs):
        log.write(""model.save()"")
        super(....
        log.write(""test for missing body"")
        if self.body is None:
            log.write(""body is None"")
        else:
            log.write(""body has content"")

Of course, it seems really weird to have an object delete itself upon calling `.save()`",1530756942.0
django_noob,"I've also tried the following to no avail:

@receiver(models.signals.post\_save, sender=Services)

def delete\_services(sender, instance, \*\*kwargs):

if bool(instance.body) == False:

instance.delete()  ",1530749166.0
tagnydaggart,I’d probably use a model manager method for this.,1530750151.0
japanfrog,"What do you mean? Post a link to the example you are following, as we have no way of knowing exactly what your setup is. There are many questions.

Are you using a Django plugin? What are you using Node for, and what are you using Django for? Are you using any frameworks in Node such as express? If so why not just use Node for everything or Django. Is there any ASYNC feature you are specifically targeting with Node. You mention template, are you trying to use plain html+javascript or something else (back to the plugin question). Crystal ball not included =)",1530742092.0
fab13n,"I've written several applications using Django and OpenLayers, I've eventually stopped using Django templates: Django serves JSON data which is handled by a frontend in ES6. Once you have to do a lot of things in JavaScript in the browser anyway, it's better to have JavaScript code taking full ownership and responsibility for the UI; mixes of generated HTML + generated JavaScript snippets + JavaScript rendering are an awful mess.",1530801252.0
,[removed],1530757712.0
TunaBoo,"Not about ingress rules. About allowed hosts in settings.py. does that match your domain?

Or is this like someone with another domain pointed at your IP?",1530743230.0
SamwelOpiyo,"Adding the following handler and logger to logging configurations seems to work.

**Handlers Section**

`...`

`'spoof_logfile': {`

  `'level': 'ERROR',`

  `'class': 'logging.FileHandler',`

  `'filename': '/path/to/spoofed_requests.log',`

`},`

`...`

**Loggers Section**

`...`

`'django.security.DisallowedHost': {`

  `'handlers': ['spoof_logfile'],`

  `'level': 'ERROR',`

  `'propagate': False,`

`},`

`...`",1533075315.0
ramse,"The issue there would be that you're modifying code that someone else would rely on to runserver on their computer and not using your addr:port combo.

You could create a bash alias that runs it in console for you or modify the if statement to detect your own command that runs, using a word that isn't known/used.

    if sys.argv[-1] == 'rs':
        execute_from_command_line(sys.argv + ['my.preferred.addr:port'])

However i don't know off hand what sys.argv contains but you would have to replace rs with runserver.",1530734693.0
mukwastaken,"This seems like a solution best solved by a terminal alias http://tldp.org/LDP/abs/html/aliases.html

You could create an alias that's basically `alias runserver = ./manage.py runserver my.preferred.addr:port` so you can just type `runserver` in your shell instead of having to type `./manage.py runserver ...`

Alternatively, if you really want to put it in code, I'd suggest making a custom management command https://docs.djangoproject.com/en/2.0/howto/custom-management-commands/
Then you can, say, create a command called `devserver` and you can run it by typing `./manage.py devserver`. The devserver command would basically just be a thin wrapper around runserver `call_command('runserver', ...)` (I forget the syntax of call_command off the top of my head)",1530738491.0
fdemmer,"write a custom command: https://docs.djangoproject.com/en/2.0/howto/custom-management-commands/

and use r/djangolearning for questions/help",1530719982.0
Niicodemus,"To expand on what fdemmer said, there are also some docs on [testing management commands](https://docs.djangoproject.com/en/2.0/topics/testing/tools/#topics-testing-management-commands)",1530720305.0
iconfinder,"1. Most of those attributes are long lists of lists
   1. Here you should consider creating an object for what you want to link. And then have a foreign key back to the abc class.
2. Do you need a list of objects, strings, numbers? You would choose different solutions in each case.
3. You should look at Django's form module.",1530706839.0
dershodan,"After re-reading your code I think I understand what you're trying to do here...

You are not asking about ""how to make this a django app"" but rather ""how to turn this data into a django model"" - right?

Anyways if you have arbitrary data structures with nested lists etc, just use a TextField and store the data json-encoded. (or yaml if you prefer that)

Both those formats work naturally very well with python's lists and dictionaries.

About making forms that support your data structures - that might be a wee bit harder. You explanation is just not sufficient to give you helpful tips other than ""figure out how to ask the right questions"", sorry.",1530718473.0
dershodan,"`Class`, `Def` that's bad even for pseudo-code ...
",1530718227.0
calabresi,Back up the schema just in case. Disk space is cheap. ,1530710235.0
MagicWishMonkey,"You really should back everything up as often as possible, and it sounds like you might be doing local dev against a production database? Don't do that. 

You should replicate the prod db to your local environment (and also a testing/staging environment, if possible), make your changes and confirm that everything looks peachy before pulling the trigger against the production database. ",1530736501.0
vcamargo,"I think you'd be good to go with plain JS, just toggle a CSS class. No need to bring a full lib for this use case. ",1530690832.0
Cictani,"if that is the only things which have to happen, you could do that with plain javascript. If things get a little bit more complex vue.js is nice, it is easy to learn and you can integrate it easily in existing pages.

Of course you can also use jquery especially if you already have that as a dependency (for example if using bootstrap). jQuery reduces the amount of javascript code you have to write.",1530694875.0
Brandhor,"yeah js is the correct way, jquery is also the easiest way in this case

vue is also another good option but I think it's too much for just a single checkbox since it adds complexity in the template especially if you are rendering the form automatically with django or something like crispy forms",1530696783.0
mattaw2001,Just use bootstrap and the collapse Js depending on the status of your project. Bootstrap does quickly solve most problems.,1530713264.0
StewPoll,Lol into Vue or react,1530695318.0
Soupinmyfly,"
I know this is pedantic.
That is the arabic letter ""ta"" not a smiley face. ",1530704325.0
daredevil82,"Hmm


https://stackoverflow.com/questions/50321644/django-not-matching-unicode-in-url

That said, with unicode, don't confuse what's output in the logs vs what's actually happening.  Apparently getting utf-8 format in the logs takes some extra doing:

http://stoken-tips-and-tricks.blogspot.com/2015/02/howto-python-setup-unicode-logging.html",1530702938.0
waistlinepants,"Can't you just do an exclusionary match on /?

    [^/]+",1530709194.0
Niicodemus,"It's by-far the easiest if you define `choices` on your model's timefield, as then a ModelForm will generate the expected Field and use the Select widget. But if you need to define the choices on the form, then you need a `forms.ChoiceField(choices=[...])`.",1530664801.0
pancakeses,"As /u/Niicodemus notes, create your selectable time values:

        TIME_CHOICES = (('00:00:00', 'Midnight'),
                        ('01:00:00', '01 AM'),
                        ('02:00:00', '02 AM'),
                        ('03:00:00', '03 AM'),
                        ('04:00:00', '04 AM'),
                        ('05:00:00', '05 AM'),
                        ('06:00:00', '06 AM'),
                        ('07:00:00', '07 AM'),
                        ('08:00:00', '08 AM'),
                        ('09:00:00', '09 AM'),
                        ('10:00:00', '10 AM'),
                        ('11:00:00', '11 AM'),
                        ('12:00:00', 'Noon'),
                        ('13:00:00', '01 PM'),
                        ('14:00:00', '02 PM'),
                        ('15:00:00', '03 PM'),
                        ('16:00:00', '04 PM'),
                        ('17:00:00', '05 PM'),
                        ('18:00:00', '06 PM'),
                        ('19:00:00', '07 PM'),
                        ('20:00:00', '08 PM'),
                        ('21:00:00', '09 PM'),
                        ('22:00:00', '10 PM'),
                        ('23:00:00', '11 PM'), )

Another example:

        TIME_CHOICES = (('06:00:00', '6 am'),
                        ('07:00:00', '7 am'),
                        ('00:00:00', '8 am'), )

Then use it as a ChoiceField in your form and treat the result as you would a TimeField:

        class MyForm(forms.Form):
            start_time = forms.ChoiceField(choices=TIME_CHOICES)",1530672188.0
fuckslavs,"    class MyForm(forms.ModelForm):
        def __init__(self, *args, **kwargs):
            super(MyForm, self).__init__(*args, **kwargs)
            self.fields['time'].choices = [(i, dt.time(i).strftime('%I %p')) for i in range(24)]
    
        class Meta:
            model = MyModel
            fields = [time]",1530700875.0
calabresi,"Don't reinvent the wheel here - this can be solved with something like Django Rest Framework, I believe. If they're just doing read-only operations, then an API is definitely the way to go, and DRF is super-secure and comes with a lot of stuff baked in.",1530633160.0
cheryl369,"Honestly, it looks like Django is not a good tool here. Maybe you are better served with sqlalchemy?",1530726267.0
Cyrlop,"The whole point of the question is to be able to use the Django structure to query the database (querysets, managers, ...). So an API or different MySQL users doesn't solve the problem. Or I'm missing something.",1530690349.0
booooomba,A comprehensive tutorial on Social Login with python-social-auth/social-app-django. (Not django-allauth),1530625831.0
Zoro-Zen,Permissions for multi type of users. I'm having this problem right now XD.,1530628105.0
dangjoeltang,React/vue page as a component with django,1530627252.0
elingeniero,Integrating cloud storage providers for user uploads. ,1530629469.0
notsuppostocomnt,Vps deployment Ubuntu+nginx+miltipleDjangosites please,1530630881.0
MrKBoss,Using JavaScript frameworks such as Angular or React with Django,1530639504.0
,[deleted],1530643857.0
japanfrog,"Make a tutorial on something you are really knowledgeable about. We already have a lot of copy cat tutorials in that always have some piece of misinformation floating around, or just some variation of the official tutorial. I don't mean to be brash, I looked into your projects and you seem to have nothing on Django and barely anything on Python. Please please please don't put a tutorial to boost your resume. ",1530667019.0
carlosjs23,graphql api in Django,1530635701.0
andrey_shipilov,"Using Django with Hadoop storage, redis, celery and rabbitmq. ",1530643400.0
numice,I am interested in multi-user calendar and to-do app. I'm learning to write a forum and will finish soon. Looking forward for something with interaction between users,1530635550.0
ux-guy,"1. How to make a django app and migrate it to Google appengine. 
2. Now take that and convert it to use django rest framework (still on appengine)

Thanks!",1530649908.0
Crazykiller789,Custom authentication?,1530654868.0
SkawPV,"DRF, Channels or(and? :) ) Celery",1530685153.0
siliousmaximus,Clustering and seperating celery workers from django,1530639098.0
pterencephalon,"E really wish there were more tutorials on how to put things together - using Django with other technologies/frameworks/etc. There are a million combinations and some can be rather niche, so it's understandable why they're less common. In general, it's the ""Using Django with _____"" stuff. The right way use Django with sass/less, Vue, S3, hosting on different services, sending email, etc.",1530641573.0
Fun2badult,Mixins ,1530643366.0
ncrmro,"Made a boilerplate a have a talk on it at Pycon India

Could also use feedback

Uses Django graphql react webpack relay etc


[Reango](https://ncrmro.com/portfolio/reango/) ",1530658398.0
tomtheaint,Asynchronous drag and drop,1530671076.0
nickchuck,I make Django tutorials and I hope you don't mind if I steal a few of these /u/tech-learner-maker :),1530673381.0
RegularHatt,A tutorial on extending/customizing the user model with some practical implementation examples would be fantastic. ,1530741582.0
_Sir_Acha_,"A basic guide on best practices for securing a Django site. 

There is a wealth of tutorials on functionality & getting Django to do what you want it to do, but I've reached a point now where my site is functional but I'm not sure it's fully secure. 

In full disclosure I haven't searched too hard for tutorials on this topic yet, if anyone has a good one to recommend I'm all ears!",1530866650.0
avinasht1997,Simplified django channels tutorial please.,1531443860.0
vasim07,"Being a starter, what all things / languages should one be aware of?

",1530633704.0
oliw,"The question itself seems to have holes in it so I'll just lay out how things fit together.

`render` is a shortcut to generate a HttpResponse with a template and context. In short it generates what somebody sees in a browser. If you were to build one manually, it would look similar (though even more wordy) to building a HttpResponseRedirect manually.

HttpResponseRedirect doesn't care about ""views"", it only cares about the location you're sending the user to. It does send out a type of HttpResponse that contains a `location` header and a 301/302 status code. That's all. You need to give it a valid URL or some sort (`https://example.com/target` or `/target`). That's where `reverse` comes in. It translates the name of your view into a URL.

[Based on your other comments] WTF do you expect HttpResponseRedirect to do with a rendered web page? It needs the URL, not the content. It gets the URL from `reverse`.

**But there is a [`reverse` shortcut](https://docs.djangoproject.com/en/2.0/topics/http/shortcuts/)** that you can pass a URL *or* view name with arguments and it'll throw you back a HttpResponseRedirect. The following are equivalent:

    return redirect('login', next='/abc/')
    return HttpResponseRedirect(reverse('login', kwargs={'next': '/abc/'}))",1530625001.0
PawelDecowski,`HttpResponseRedirect` and `render` do completely different things so the question doesn’t make much sense. Can you elaborate on what you mean?,1530623030.0
aprx0,"Well, what is wrong to provide the URL you want to redirect to, when you want to redirect and render the content when you want to, well render a content ?",1530622981.0
flipperdeflip,"You just chain the lookups and django will figure it out: https://docs.djangoproject.com/en/2.0/ref/contrib/postgres/fields/#querying-jsonfield

    MyModel.objects.filter(fkrelation__jsonfield__property)

",1530602836.0
This--Ali2,This guys is how I learned Django! Would recommend 💯 %,1530598652.0
Grelek,"Is the official Django docs so unfriendly for beginners? I see a lot of people looking elsewhere than Django docs for getting started.

Need to say I started with Django while having a few years of experience so it clearly wasn't that hard for me.",1530614891.0
Niicodemus,"Yup, for anyone else, [docs](https://docs.djangoproject.com/en/2.0/ref/forms/api/#notes-on-field-ordering).",1530571324.0
Sergikoff,"First of all you should try to optimize your queryset, e. g. `queryset = Book.objects.all().select_related(""author"")`",1530567963.0
Niicodemus,The way I do it is to define my own FilterSet and specifically define the field with a NumberFilter instead of using the auto-generated ModelChoiceFilter.,1530571848.0
TiredMike,"DRF is very important in the Django world as it makes it very easy to build APIs that are either tied to models or are custom, using views and serializers. The main reason people use APIs is either to provide a way to interact with the application for other teams or third parties, or to allow your frontend app to be decoupled from your backend. So you could have a react frontend app contacting your backend API via Ajax requests. Look at viewsets in DRF for a nice abstraction on top of the API views. Also, DRF bundles a lot of useful functionality like handling permissions, throttling etc. ",1530562887.0
pydanny,Authentication - that's a soft spot for most people with DRF. ,1530616622.0
tagnydaggart,"Use the PK or slug of the FK object as a url segment, point this into a ListView where `model` is set to the parent model class. Override `get_queryset()` method to utilize the pk/slug that is now in your `kwargs` to filter your queryset. Done.",1530560889.0
Jhooma,"May be you should start building something using what you have  learned. If you don't have anything in mind may be try to make a clone of some sites. Reddit, imgur anything you like. Or contribute to some projects, I realized recently how important it is to be able to understand someone's code.",1530551341.0
django_noob,You should be building a project as you learn. YOu'll run into things that you don't know how to do. Seeking out the answers to these questions will allow you to progress.,1530557564.0
django_noob,"Seems very, very short for a Stripe implementation.",1530557649.0
pancakeses,You can do both of these with javascript on the front end. ,1530537259.0
mbi0,"I was hoping for Python 3.7 support in Django 1.11.x with this release, but it's not going to happen, is it?",1530547563.0
Pr0ducer,"5 years ago it sucked then too. Heroku was my solution at the time, and 2 apps deployed back then are still running with almost zero effort on my part.",1530543625.0
django_noob,Yes. I'm on webfaction now. They are fucking great.,1530557685.0
Mikky26,any luck with that ?I  have been days to deploy my mezzanine project ,1538232571.0
pydanny,"I have serious issues problems with this tutorial:

* No authentication for actions changing the database
* Using GET to change data 

These should be fixed ASAP.
",1530546439.0
chanamasala4life,"Even though I only skimmed it this time, I found it to be very readable. I'll take a more thorough look at it later at home.

One thing though: You're creating new tasks through GET requests, which I have learned is bad practice. GET should never create a resource. Not one that is visible to the user. It's a read-only operation. You should rather POST new tasks.",1530541621.0
ahackersday,"Would love some feedback about the tutorial and how I write. I'm not english native as most of you can see, so if I write some weird things, please have me excused.",1530531988.0
crackered,"Looks good overall. The non-native English did not bother me. 
 What did was the missing syntax highlighting. 
 I think something like https://highlightjs.org/ could help you add syntax highlighting to your code blocks.",1530533503.0
evenisto,The world desperately needs another idea for a first project app.,1530549757.0
puketron,"AFAIK, vue-cli and its `vue init` command are being deprecated and replaced with the npm @vue/cli package and `vue create`",1530571779.0
ahackersday,"I have added DRF's basic authentication now (username/pass is hardcoded in the JS code though, will be adding another part to the tutorial where the user can sign in). Implemented better requests by using GET, POST and PUT. I hope you like it better now. Do you got any other tips for improvements?",1530695728.0
pagechristopherlee,This is awesome!!! I’m going to have to jump on it when I get back home tomorrow or the next day,1530533334.0
AllanOcelot,"Great, now a node backend is needed :P ",1530546622.0
pupupeepee,"You'll want to access the same cache that's used by your login view's throttle class, in order to clear the rate counter post-login:

https://github.com/encode/django-rest-framework/blob/master/rest_framework/throttling.py

RTFM bruv!",1530507815.0
Niicodemus,I include [reusable form templates](https://docs.djangoproject.com/en/2.0/topics/forms/#reusable-form-templates) along with widget_tweaks in most of my projects as it gets me 99% of the way there generally without having to use crispy forms or other modules that are specific to the CSS.,1530490709.0
Lord_Humongous,"It looks like you are using bootstrap. 

You might like these: 

* [bootstrap 3](https://django-bootstrap3.readthedocs.io/en/latest/)
* [bootstrap 4](https://django-bootstrap4.readthedocs.io/en/latest/)",1530487058.0
pancakeses,"Templates go in each project/templates/app_name but media files and static files are defined per project, not per app.

https://docs.djangoproject.com/en/2.0/howto/static-files/",1530463769.0
joejaz,"I personally like to keep templates related to each Django module in the template folder of said module.   Same goes for static files related to a module. I feel that this keeps the related code, templates, and static files all bundled together in one place, which makes them easier to see what belongs with what.  It also follows good Django module design practice.

\- mymodule/  
\--- static/  
\----- mymodule/  
\------- myfiles.css  
\------- myfiles.whatever.js  
\--- templates/  
\----- mymodule/  
\------- some\_list\_view.html

Templates and static files that are related to the entire project would go in the project-level templates or static folder, as defined by TEMPLATE settings variable or STATICFILES\_DIRS.

That being said, I've seen people put all of their templates in one global template location. Not my preference, but not incorrect.",1530468776.0
flipperdeflip,"It all depends. Ideally you split per app like the other commenters note, but are not required. 

For example at my job we have some projects with a lot of smal apps that don't always have templates or static files so it can be a hassle to find a specific template sometimes. So we put them in a centralize template folder (but still with app prefix folder) so the HTML people don't have to trawl the code for their stuff. 

Same with management commands: ideally you put them with their app, but you can make the decision not to if it works better for your situation. The big projects now have a management app that has all the commands and not much else.",1530622930.0
cakeandale,"It's hard to tell from indentation, is `save_new_survey()` being called within the class definition or outside it? Calling a method inside a class definition means it'd be run before the class has finished being defined, which would explain the error you're getting.",1530455162.0
andytwoods,Django cookiecutter does a lot of this for you. And it could be a plan to check out some of the customizations people have made on top of this https://djangopackages.org/grids/g/cookiecutters/,1530444280.0
ralfp,The requirements you are listing seem very domain specific IMHO. Are you writing social site or identity controller by chance?,1530460844.0
Investisseur,"Isn’t all of this built into the django.contrib.auth app? They have a bunch of model forms for this, no?",1530462928.0
nosepickingexpert,I've been using [Django-Edge](https://django-edge.readthedocs.io/en/latest/). It's pretty neat and it already covers the whole user management into accounts and profile. It's now my go-to framework for hackathons and stuff.,1530498631.0
cugs,"Sounds like you should try: http://pinaxproject.com/

Has everything you listed.",1530492847.0
DustPuppySnr,"Put it in your static folder and add an alias in your webserver to its location.

There is no need for Django to serv it.
",1530428240.0
reduxionist,"[simplest automatic scrolling/pagination library](https://github.com/iogf/django-autoscroll)

Could not even select the title text to manually paste my way to a link; Reddit, your Alexa rank is far too high for your mobile app to be this shitty, you should be ashamed!",1530418134.0
pancakeses,"The fact that the first thing a prospective user sees is the app's name misspelled as ""django-autocroll"" is worrisome. 

",1530419455.0
atomicspace,">	Lawhorn said the new site also has a more flexible design, which will allow for new ways to present articles, photos, videos and more.


Lawhorn went on to say the $120k/year python developer was no longer needed when his teenage grandson told him a $12 “plug-in” could “totally” secure the multi-million dollar company’s application stack.  ",1530347661.0
toyg,"Educate speculation / guess at reasons:

1. Php / WP devs are so much cheaper.

2. At one point the paper was lucky / rich enough to hire a bunch of great devs, who championed python. They have since gone on to greater things and the paper doesn’t have the budget to hire competent replacements.

3. Their systems were built with early django, there was probably a lot of legacy code which would have been hard to upgrade to modern releases.",1530354495.0
chris_conlan,"No one likes to admit it, but working in /wp-admin/ is a soft skill that most journalists already have.",1530368350.0
batisteo,"Original tweet by jacobian with reactions:
 https://twitter.com/jacobian/status/1012781017940316161",1530346070.0
ubernostrum,"Worth noting the original team who created Django are, of course, all long gone, and the division which developed the Django-based news CMS (which still exists as a product) was sold off years ago as well.",1530377195.0
moderately-extremist,Django was created in Kansas?!  TIL.,1530379787.0
torimus,"Similar fate met former company I've worked for, pursuing sale of complex customization of ecommerce solutions and lts. Besides matured ecosystem and cheaper/more available programmers, significantly better rps throughput and scaling. Sometimes pragmatism wins over idealism.

They may also have seen dollars everywhere across PHP sources ;-)

",1530734895.0
lykwydchykyn,"Django, I've a feeling we're not in Kansas anymore...",1530395714.0
Lanfranc_di_Cambria,"Django was created for quickly changing web apps, not a generic CMS. In fact, Django doesn't have any really good CMSs.

Don't say ""Mezzanine."" Mezzanine sucks.

",1530394972.0
brejoc,"Celery or task queues in general are the way to go here. Once the button was clicked, write an entry to the database, fire of a task and update the database from the task once it's done.",1530338393.0
Whoopska,"SQL injection protection happens when it is inserted into the database. Xss protection happens when you render the value and happens via autoescape or manually calling escape. If you render the user data in a script block, you'll want something slightly different probably.

Even with custom field cleaning you should be safe. If you start mucking around with mark_safe or |safe though, no guarantees.",1530317199.0
Niicodemus,"The ORM escapes all parameters you give it to protect against SQL Injection, and the template system escapes all variables default, which mostly protects against XSS. More info is available [in the docs](https://docs.djangoproject.com/en/2.0/topics/security/).",1530317862.0
blacwidonsfw,Shopify is the best,1530673034.0
SqueakyCheeseCurds,"Have you looked into Square? It's not django related, but might solve your problem.",1530313150.0
localsystem,Thanks for sharing. I have been following his Django For Beginners; so far so good.,1530327437.0
callius,"This is really awesome! I've been wanting to learn this for a while. Your tutorial is really easy to follow and explains everything in detail. Thanks!

Do you happen to have any advice on how to use virtualenv instead of pipenv (or rather, what would be the benefits of the latter and how to switch a project from one to the other given a requirements.txt)?

Also, another question I have is whether the environment variables need to be in the Docker yaml file, or if I could just continue using my regular settings.ini configuration.

Thanks again!",1530341216.0
pydanny,Great stuff!,1530425269.0
reedjones_prague,"Well how can you create a user without a password? 

But if you don't need it, just don't include it on your form.

But can't really answer this question without seeing the models/forms in question...",1531844671.0
,[deleted],1530287122.0
tomdyson,"Hopefully you saw [my reply on StackOverflow](https://stackoverflow.com/posts/51101332), but in case not:

Wagtail as a headless CMS with an SPA frontend is an increasingly popular combination. 

 - https://www.twilio.com/blog/2017/11/building-twilioquest-with-twilio-sync-django-and-vue-js.html
 - https://wagtail.io/blog/getting-started-with-wagtail-and-graphql/
 - https://wagtail.io/blog/graphql-with-streamfield/ (continues the previous post)
 - https://www.youtube.com/watch?v=HZT14u6WwdY (a talk from two weeks ago)
 - https://docs.google.com/presentation/d/1ZYMogOeXKCCmr7hDZnzx0euw2pD5VCwtv3a7zHB4FW0/ (slides for the above talk)

I recommend searching Github for projects which include Wagtail and your preferred front-end stack. Here are some examples:

 - https://github.com/raq929/wagtail-project-template
 - https://github.com/datalets/blemmy
 - https://github.com/strausd/boilerplate_django
 - https://github.com/mostlyserious/wagtail-vue-boilerplate
 - https://github.com/openstax/openstax-cms (the project discussed in the video above)

Good luck!",1530283625.0
blurrah,It's actually really easy with the new API. We have used it in combination with React and rendered components based on the blocks that Wagtail returns with Proptypes based on the blocks. You can also use `get_api_representation` on blocks like image blocks to always return certain size image urls and stuff like that. I totally recommend it.,1530274862.0
NewDimension,I'm familiar with Django but not Wagtail. What added benefit does using wagtail as a backend provide opposed to vanilla Django?,1530296468.0
Designer023,"Wagtail uses DRF for its own API so you should be fine. I’m pretty certain you can mix and match as required between wagtails api and the DRF plain implementation. On mobile but will add links shortly!

edit no longer on mobile:

[official wagtail docs](http://docs.wagtail.io/en/v2.0/advanced_topics/api/v2/configuration.html)

[NHS content store](https://github.com/nhsuk/nhsuk-content-store) use the API and have customised it somewhat",1530274939.0
cleancole,"Streamfields using the new wagtail worked well enough. Didn't take long to test it out, give it a shot",1530280545.0
snuggl,Its excellent! we're using it with react and have 100% of the layout of our pages through wagtail even when blocks doesn't have any data so we can use cms-admin to rearrange the component placement.,1530283688.0
__init__world,"We just built a medium sized app with it. I was pretty happy with Wagtail's headless mode serving a React frontend. Our clients seemed very happy with it, took to the interface right away and have had no issues updating content.",1530308747.0
mbrochh,"Chiming in with the rest, it works pretty well!

We don't even use DRF, we wrote resolvers for our GraphQL API that return all the posts with all their blocks and the React frontend then renders whatever component is necessary for each block. Works very well.",1530335414.0
DeusImpervius,"Below are my concerns when using old version of Wagtail and its API.

The version of Wagtail I have developed on does not support Image URL in the API so I have to hack in the source code to support it. I don't know how things today, and as far as I know, they planned to migrate the API to use DRF (which I hope to make the API more customizeable).

There is no filter-free widget for HTML input in the Wagtail admin. There's some hardcoded filtering done on the HTML widget e.g. can't put attributes, some tags will be cleaned/filtered out (yes there is an API to remove HTML filter/cleaning, but it didn't work and we end up use WYSIWYG editor in DJango admin).

I've built my [blog ](https://www.abiraf.com/blog) with this combo.

As far about mixing Wagtail and DRF, I have no clue. In the older docs, Wagtail has it owns Web API modules. Mixing it with DRF might be doable, but the best route is to use what described in Wagtail's docs on how to implement Web API.  
",1530272603.0
Rorixrebel,Interesting question. Commenting to track,1530271892.0
chjacobsen,"My initial thought was to keep it simple and just use Django straight up, however, i actually think this is one case where the page refreshes would break the immersion. I'd go for a super simple JS frontend (keep it simple, Angular might be overkill) along with DRF.",1530260161.0
nosepickingexpert,Use renpy,1530258460.0
lc_fd,"I always prefer have two different stack for backend and frontend, because it's more flexible.  
So +1 for DRF API :)",1530259013.0
old_faraon,"If You want more reactivity then just a simple tree of choice offers then You will need to have some scripting inside the Scene and a way to parse. Most of the content of the adventure will be text and scripting neither of these is really well suited to keep in a Entity-Relation database. 

Try Twine, it's the go to for HTML and JS based CYOA. You can write the hosting app in Django (and DRF + Angular for the front end). Also if You wan't reactivity between adventures You could probably write a save function that saves the world state at the end of the adventure on the server and then load it in another. ",1530263641.0
kennydude,"If this is about a Postgres view, typically you'll want to mark all of the ForeignKeys like so:

    user = models.ForeignKey('core.User', on_delete=models.DO_NOTHING)

The views will be correct as the database will handle it then. Django likes to ensure deletions work properly.    ",1530267397.0
prithvi45,"if you are comfortable with CDN or AWS S3 bucket, better serve images from there. Else add your all images, svgs , icons etc into static folder and serve directly with nginx ",1530457111.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1530212726.0
Niicodemus,"My first step would be to throw out all assumptions, starting with the fact that the view you posted is the one being run. Check your logs to see exactly what URL is being hit by Stripe, then double check your URL config to make sure that that view is the one actually being hit. Install [django-extensions](https://github.com/django-extensions/django-extensions) and then run `./manage.py show_urls` to also double-check.",1530212441.0
pancakeses,"/[u/Tennysonn](https://www.reddit.com/user/Tennysonn), please edit this and format your code using 4 spaces at the beginning of every line, with an additional 4 spaces added as needed for further indenting.

It's very challenging to read and understand your code as currently presented.",1530211029.0
Tennysonn,"For the record I tried this and many other variations from SO: https://stackoverflow.com/questions/30871033/django-rest-framework-remove-csrf

Just want everyone to know what Ive been trying but automod wouldnt let me post the link in OP",1530211642.0
defmacro-jam,"Try putting this in your settings:
 
    CORS_ORIGIN_ALLOW_ALL = True

That's not what you want for production, but it might get you past this error in dev.",1530212467.0
ghostofgbt,"So, stupid question...is it possible you were using a CSRF token for a different view in the same tab and have been refreshing and sending the token from cache? Difficult to tell what the real problem is here with just this little bit of code, but I've definitely bashed my head against the walls for hours when ultimately a shift+F5 fixed it, lol",1530213143.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1530209358.0
juliob,Fucking spam. The actual link for the content is here: https://www.jamesbeith.co.uk/blog/how-to-structure-django-projects/ .,1530191027.0
pancakeses,"As I said when this was posted on /r/djangolearning:

This structure looks like an incredible pain if you wanted to actually reuse apps, as is the promise of django's traditionally modular structure. 

Maybe ""How we structure our projects"" would be a better way to prevent beginners from thinking this is a best practice. 

---

 Really, it's just disingenuous to present this as the ""proper"" way to structure a project, when it's not the official way or the way recommended by most other django developers.  It's not a best practice, it's just the way that this particular developer structions a project.",1530194345.0
booooomba,Yes of course you can use D3 server-side. But it'd be node based and not Django based of course since  D3 is a JS library.,1530185279.0
ericls,"If you have too many data points, then it might not make sense to show them all at once. Maybe make the chart interactive and ask for data from Django only when needed? ",1530239193.0
Aviris,"you're actually right in my case: for django specific questions there's tons of tutorials, redditposts and other ways of finding an answer for.

What I am now stuck on is the whole deployment, server setup with the stack I want to use and what I have to change in the django project itself.

While there are also tutorials like digitalocean I feel like I still don't ""get it"" and don't really understand how a linux server with nginx or whatever is being set up correctly. Of course I can just follow a tutorial, but what if for my project this setup isn't the best etc.

Also what exactly do I have to hide, change, remove and add in a django project for it to run as good as possible. There are some deployment options where you have to change the settings.py-file to accomplish what this tutorial exactly wants, but what are all the options for deployment?  


I guess there's a reason why I haven't found a ""guide"" that explains everything in that department to my likings, either I just searched in the wrong places, or it is to complex and to big to put into one guide, but this part is very much the one where I feel the most unsure about what I'm doing and if it is correct.",1530178532.0
Brachamul,"Testing. There are quite a few articles on testing, but I haven't found one that's a little authoritative on what you should test and how you should test it, how you should approach the whole idea for good coding practices, as a solo dev or as a team.

Actually while I'm at it, good practices for logging would make sense as well. I always end up  copy-pasting logging configs because I don't understand them. Testing and logging for proper quality assurance and monitoring would be an interesting topic.",1530183482.0
jinchuika,"Using formsets combined with javascript. For my company, we ended up almost completely ditching out django forms in favor of a full javascript app for frontend. I always thought we could have used forms and formsets instead of having to learn javascript",1530193157.0
SkawPV,"I started to use Django 4 months ago so the pain of learning it is still fresh :) Things that would benefit people starting in Django:

\-Formsets: How to save a Parent form with 'n' Child forms (when I started I didn't knew formsets/factories and took me days to discover them after trying everything) creating Child forms dynamically with JS

\-Testing

\-A small website with DRF integrated

\-Interesting libraries without/few (bad ones)  tutorials (like Django Channels, for example)

\-How to use Django with Angular (or Vue/React/etc)",1530254135.0
coderanger,Can you be more specific about what part isn't working and what error message you get?,1530170295.0
njancsar,"Did you figure it out?
When I first started with Heroku I had trouble pushing to it to.
Like coderanger suggested, you can connect Heroku directly to your GitHub repo to deploy.

1. In Heroku, go to the 'Deploy' tab at the top. 
2. Choose the 'Github' method and then connect it to your repo
3. You can the setup auto deployment, or manually choose the branch you want to deploy from.

When you deploy, monitor the build log, are any errors or warnings coming up?
If there are no errors or warnings, then there may be something wrong with your project setup.

The ""Hello! Hello!"" isn't a standard template, so you must have done that somewhere along the way.",1530187643.0
maventree,I recommend looking at `https://dashboard.heroku.com/apps/<app_name>/logs` - there may be some useful information there about what's going wrong.,1530188248.0
duppyconqueror81,"Hang in there, don’t give up. It’s worth it. When I started with Django 3 years ago I sweared so much about how it sucked and was too hard to deploy.  Now I’m so grateful for having stuck with it.

That said, deployment is still always a hassle when I can’t choose how to do it (say if a client wants to run it on a specific setup).",1530244405.0
Fun2badult,I hate trying to deploy Django. Just tried it on Pythonanywhere and that’s not working either ,1530178339.0
ge0n1,"I'm just going to go ahead and suggest that you don't take shortcuts and actually just go and make a real deployment instead of spinning your wheels against heroku.  
 Its the same crap with  google app engine. Constraints, limitations, all in exchange for being locked in and not learning.

[https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-apache-and-mod\_wsgi-on-ubuntu-14-04](https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-apache-and-mod_wsgi-on-ubuntu-14-04)  


If you aren't going to take the time to learn some basic linux deployment skills you are never going to enjoy django or python. If you need some quick thing with minimal deployment headaches use flask.",1530218981.0
rocky-ji,It’s really easy to learn ,1530162808.0
kontekisuto,"There is no easy way, the only way is too do it. ",1530168896.0
neurotoxiq,Mozilla has a great tutorial for beginners,1530164227.0
pterencephalon,I started with the tutorial on the Django website. I knew basic python when I started and it was pretty straightforward and useful.,1530167455.0
ghostport,"I would highly recommend this tutorial series and website for Django beginners. https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/
",1530170056.0
Theprogrammingshow,Learn while you are doing it<- the best way:),1530216214.0
actionscripted,"Django is a web framework written in Python. I’m not sure where you heard/saw Django.js but JavaScript and Django are not directly related.

You might write something in JS that talks to Django using something like Django REST Framework.

To put a really fine point on it: you can build an entire Django web app without any JavaScript.",1530162014.0
iconfinder,Wat,1530163955.0
blacwidonsfw,No,1530167280.0
njancsar,"Might want to check out: [r/djangolearning](https://reddit.com/r/djangolearning)

1. Django is used as your MVC framework and as an ORM to connect to a database. Yes you need the Django framework to use Django because that is what it is. Your django application needs to be hosted/live somewhere, this would be on a VPS on Amazon or Google or somewhere like Heroku
2. If you go the Heroku route (or a managed solution like Google App Engine) you don't need to worry too much at this stage about the web server configuration. On Heroku for instance you would use gunicorn, and you can use something like whitenoise to serve static files from Django.
3. Django is best suited for PostgreSQL and would integrate nicely.

Your cloud host (where the app lives) and the database (where your data is persisted) are the main things to worry about in a simple deployment on a managed solution (which sounds like your experience would make this project out to be). You could also add a front-end css style framework like Bootstrap for easy styling of your templates.

You might want to try running through this:
(Deploying Python applications on Heroku)[https://devcenter.heroku.com/articles/getting-started-with-python#introduction]",1530130929.0
never_safe_for_life,"You're mostly right on the Nginx/Gunicorn bit, but you would never run Nginx and Apache. They serve the same purpose.

Nginx is the reverse proxy. It handles all incoming HTTP requests. It routes some to your wsgi process (Django), but for static assets serves them itself. This is because Django is horribly slow at that and nginx is blazing fast.

For django, nginx routes the request to Gunicorn, which is the tool that start Django running as a WSGI process.

A few other tools off the top of my head:

1. supervisord - a linux tool that will start your Django process automatically, restart if it ever crashes, and give you handy commands to control it. You need something to start the Django wsgi process, this is standard
2. Logging - pipe your logs somewhere, like Loggly, Papertrail, etc.
3. Offline tasks -- at some point you might want to run celery/rabbitmq or celery/Amazon SQS for handling long running, offline tasks
4. Memcache/Redis -- at some point you might want to start caching things, having one of these services running will help
5. ",1530137763.0
tibb,"I highly, highly recommend you use Heroku, and everything they recommend: https://devcenter.heroku.com/articles/getting-started-with-python#introduction

Heroku (with postgres on heroku for your db) will probably be totally fine to host your django apps forever, and if at some point in the future you need to move somewhere where you have more control, you'll know a lot more then.  There's really no reason to spend much time learning about things like gunicorn and managing databases when you're just starting with django.",1530150632.0
elarroba,"If you are looking to have an SSL Certificate you might want to consider using something like Let’s Encrypt.

The SSL certificate must be configured on the Nginx layer.

",1530134198.0
Fun2badult,Right now I’m stuck trying to get the secret key removed from the settings.py. I’ve been at this the whole day and can’t figure out how to even move forward by taking out the secret key and turn off debug 😭,1530153576.0
pydanny,"Don't use MongoDB with Django. This isn't me slamming MongoDB, it's the fact that Django is designed from the ground up to work with relational databases.

I wrote an [article that goes into greater detail](https://www.pydanny.com/when-to-use-mongodb-with-django.html).",1530299268.0
pancakeses,"I would recommend working through the [official django tutorial](https://docs.djangoproject.com/en/2.0/intro/tutorial01/) first and foremost. It is designed to answer a lot of these questions as you work through a very basic example of django's fundamental capabilities. Django can provide a template approach to the front end **or** you can use django just for its ORM and API and build the front end on js. If you're unfamiliar with html/css/js, I would start with the former, an approach which is pretty well explained in the official tutorial. ",1530113023.0
memeingfull,"1. Yes if you want to create a front-end with specific features. You could also use a template (bootstrap or whatever) to minimize the efforts. It depends what you want to build.... 
2. yes python is all you need. Please consider that django is a layer on top of the Python language, if you want a more ""core"" python experience check out flask. 
3. Google login is partly HTML/JS and partly Django. [https://simpleisbetterthancomplex.com/tutorial/2016/10/24/how-to-add-social-login-to-django.html](https://simpleisbetterthancomplex.com/tutorial/2016/10/24/how-to-add-social-login-to-django.html) check this tutorial. ",1530176536.0
TheDumbfounds,"I recommend getting a decent grasp of how web development fits together, mainly what the client-side and the server-side are. HTML, CSS and JS live on the client-side (frontend) while python with django live on the backend. At that point, your questions should be mostly answered.",1530116483.0
Maltmax,"Okay thank you for your answers. It seems I must research some more, but you got to start somewhere! ",1530126886.0
flipperdeflip,"There is an app for that! https://github.com/hzdg/django-enumfields

Anyway, enums are cool.",1530178794.0
searchingfortao,"Neat, but the example given doesn't look like it should work:


```
>>> [(tag, tag.value) for tag in LanguageChoice]
[(<LanguageChoice.DE: 'German'>, 'German'),
 (<LanguageChoice.EN: 'English'>, 'English'),
 (<LanguageChoice.CN: 'Chinese'>, 'Chinese'),
 (<LanguageChoice.ES: 'Spanish'>, 'Spanish')]
```

I'm not sure how `<LanguageChoice.DE>` is supposed to be stored in the database, or if it somehow magically gets translated before it's stored.  Regardless, it might make more sense to use `.name`:

```
>>> [(tag.name, tag.value) for tag in LanguageChoice]
[('DE', 'German'), ('EN', 'English'), ('CN', 'Chinese'), ('ES', 'Spanish')]
```",1530180564.0
themammuth,"Interesting. 

However some things are more complicated this way, like comparing the enum value in templates:

`{% if student.type == student.FRESHMAN %}'

Although, we can find easy workarounds for that by introducing properties like student.is_freshman if we need such a functionality often. ",1530257452.0
twigboy,"Don't think it's mentioned in the article but lowercase all the emails. It'll save you so much pain.

I know it goes against email spec but nobody gives a shit about case sensitive email addresses",1530136923.0
jobelenus,"Yep, this is good. I'm doing more-or-less this approach these days. Though I don't assign `username = None`, so I may have a column in the DB I'm not using. But its not doing any harm.",1530130317.0
CraigTorso,"Personally I use django-user-accounts

It has support for email only auth

http://django-user-accounts.readthedocs.io/en/latest/usage.html#using-email-address-for-authentication",1530124388.0
cmothebean,Can do this in django-allauth too I believe.,1530273111.0
jobelenus,Django-channels for websockets.,1530106019.0
TheAutomater,Maybe try looking into Flask-SocketIO. ,1530121849.0
ahulak,"I think there's probably a few ways you could go about doing this, depending on the exact functionality you're trying to implement. Most of the plaid API calls will require more time than you want to hold a web request for. I think you'd probably want to create a view that kicks off an asynchronous task that handles the actual plaid requests. You'll probably need to use celery and/or some other task queue [(more reading here)](https://www.fullstackpython.com/task-queues.html)",1530135098.0
njancsar,https://github.com/plaid/plaid-python,1530108486.0
jedi_stannis,I would recommend looking into stripe. It's easier to integrate than PayPal.,1530124705.0
rocky-ji,Thanks ,1530141205.0
pancakeses,"This structure looks like an incredible pain if you wanted to actually reuse apps, as is the promise of django's traditionally modular structure. 

Maybe ""How we structure our projects"" would be a better way to prevent beginners from thinking this is a best practice. ",1530107070.0
jamesbeith,This is the project structure used at [Octopus Energy](https://octopus.energy/) and [Glued to Music](https://www.gluedtomusic.com/). It's still evolving but I wrote up some notes on how we're structuring things thus far.,1530102769.0
pancakeses,"I think you're misunderstanding some things about django and drf here.

You can build a front end with django's templating and build an api all in the same app. In fact, many projects add the api after they've built out all the apps and a fully functioning project. The api is added to each app, often in a separate 'api' folder within the app.

Additionally, you can use django to just build out an api, and then use react, vue, etc to build the front end. In any of these cases, you'll be importing models and utilizing django's ORM.

I would encourage you to keep reading a bit more about how django, drf, and front vs back ends work (unless I'm entirely misunderstanding your post)",1530106931.0
TheDumbfounds,"I like creating an api/ folder in every app directory and put in the REST API files for the specific app in there, such as a viewsets.py file for the viewsets and serializers.py for the serializers. If you want to have your api under a 'parent' url that has paths to your viewsets/views from all applications, you can import the appropriate viewsets from the apps from your main urls.py or maybe even create an api_urls.py file and import that from the main urls.py. But preferences in regards to the structure are different. This approach is documented more in-depth in Two Scoops Of Django (recommended read).",1530183035.0
spookylukey,"This isn't a Django error, it's a Python error. If you pass the wrong number of arguments to a function/method, that's what you get.

Whether Django could improve on this is another matter. The problem is, there are a million different ways in which you can type the wrong thing, and adding specific handling for each one would take forever, and might have performance implications too. Sometimes it even makes things worse, because the original exception gets masked.

There isn't a static check that you can do for this. In theory there is nothing wrong with your urls.py, because any callable can be used as a view, and you provided a callable (a class is a callable). It's only when you actually try to call it that you find out it has the wrong number of arguments, and probably isn't what you intended at all.

So ultimately, yes, this is one of the issues with a dynamically typed language like Python :-(
",1530102449.0
coleifer,"This is so silly, uninspired and lacking any insight. Bleh",1530132241.0
Helg1121,"Someone should make, 230+ advantages of python development without JS ;)",1530117289.0
Fun2badult,"Average salary @ $100,000 per year. 

Yet I'm struggling to even get a entry python position",1530122389.0
ulmas,I like how point #7 (Python + Django = FinTech) has not even a single word about Django in the text,1530143216.0
thatbigfatdonut69,Just curious. I'm a python beginner and have limited knowledge on Flask. Does Django use anything related to Flask? ,1530098402.0
pagechristopherlee,I love this,1530110873.0
St_Meow,"With a back end framework like django, you can't change anything once it's returned to the client. They have to request it again. What you can do is use Javascript and maybe even a framework like React or Angular to modify that data upfront without sending another HTTP request, and just updating your info on the backend via an API. ",1530074436.0
memeingfull,"Check out XHR/AJAX call, you can update the values without reloading the page. Write a function in [views.py](https://views.py) that returns the required data (best option is to use JSON formatted data)  and append it with JS to your HTML. No need for React or Angular just native JS. 

Just to make it clear: A XHR/AJAX call is also a HTTP call no matter if it happens via React or whatever, I think what the other commentor meant is that you wont have to reload the page. 

Option B would be to use a Socket, so you can change everything and the user won't have to request it (I would not recommend this option this is mostly used for Chats etc)",1530193578.0
ic_97,If the form is invalid you need to return the form with errors and fields filled with previous data which django does automatically.,1530081688.0
J_K_O,"Look up django sessions.

In short however, each request object shares a request.sessions attribute. This acts like a normal python dictionary. 

Check if key is present: if key in request.session

Set key: request.session\[key\] = foo

Get key: request.session\[key\]

I've just learnt about them myself and these are the only three functionality I use so far.",1530067243.0
nerdwaller,"This looks great, and I plan to join when I am back home. Another great source for Django help/expertise is on Slack - pyslackers.com. We have a pretty active group over there too, though focused more on code questions that entrepreneurship.

(I’m not trying to derail this new and growing group, just adding another good source for anyone looking).",1530059587.0
abrazilianinreddit,"This was really well-timed. I'm just finishing up my django-powered project and I'm hoping to be able to leverage a startup on top of it. I'd love to get some feedback and tips, specially concerning marketing.",1530066236.0
random9878,Why not just #django on freenode?,1530126639.0
glitchgamerX,"I was thinking of finding a discord group for troubleshooting just a few days ago! Glad I found this post, I immediately clicked the invite link!",1530205733.0
pancakeses,"Use the latest. Django 2

Unless you're working on a legacy project (which you don't seem to be), there's no reason to use an old version.",1530044678.0
thebatlab,"My general rule at work is to use the latest LTS release, which would be 1.11. If it was a personal project, I'd certainly be using 2.0. 

LTS provides better stability, in terms of maintenance windows needed. Generally going from LTS to the next LTS in one swoop will be more cost-effective, and easier to explain to clients as a reason they need to give you some money.",1530051868.0
FunInTheCIty,Why would you make them separate models at all? So my comment is make everything included in the Page object -  well inherit Course from Page.,1530040580.0
BertrandBordage,"The usual practice with Wagtail is to stick to making page models as long as it makes sense. For other cases use wagtail.contrib.modeladmin, very close to Django ModelAdmin. But most of the time, like 80% of the time, pages are the best way in Wagtail.

I don’t know exactly what your courses look like, so here’s another example: a database of books. In that example, you would create BookPage and AuthorPage with a ForeignKey or ManyToManyField between both models. A BookIndex would regroup all books, and an AuthorIndex would regroup all authors. If you need to add some filtering & pagination, you implement it in BookIndex & AuthorIndex.

This is a rather clean and efficient way of building a site. Don’t worry about its performance, sites with more than 200,000 pages are currently running using that kind of structure :)",1530049882.0
dirtybutter,"a course is not a page. a page has a course. so it makes more sense that it has its own table. you will have more flexibility and unless you plan on never changing anything, it will probably be easier to maintain by doing so. 

denormalizing databases is usually only done for performance gains in the most extreme cases. you shouldn't structure your data based on how you want it to be presented (and vice versa, you probably don't want to just present your data like it is structured). the admin site is just another piece of the presentation layer, so you should treat it as such. Take the pieces of data you need and nothing more

https://en.wikipedia.org/wiki/Database_normalization

https://en.wikipedia.org/wiki/SOLID

https://en.wikipedia.org/wiki/Separation_of_concerns",1530068706.0
igncampa,"It might be helpful for you to understand the [Model-View-Controller Design Pattern](https://djangobook.com/model-view-controller-design-pattern/)

Print statements seem like a bad way of trying to understand how Django works. The [Django Girls](https://tutorial.djangogirls.org/en/django_start_project/) tutorial is short and comprehensive. I'd advice you to follow it.",1530030654.0
notafuckingcakewalk,"There really isn't a shortcut around going through [Django's tutorial](https://docs.djangoproject.com/en/2.0/intro/tutorial01/) if you're not sure how it all works.

The good news is that the tutorial is fast and well-written.

But to answer your basic question: the entire point of Django is that it is a framework. You follow the rules of that framework, and Python makes everything easy for you. For example, you create a models file to describe the data you store, then you create a views file to manipulate that data, an urls file to map paths to views, and template files to create output.

There are other files you can use -- test files obviously, and many people package extra functionality in a utils.py file -- but other than that for beginning projects you really shouldn't be creating files other than models.py, views.py, urls.py, and .html files in a templates directory.",1530036164.0
booooomba,Well of course not. You have to import the file and function first in order to use it. This would't work in standalone Python either.,1530024664.0
AnderperCooson,"A Django app doesn't really ""run"" anything. A request is made to a web server, which hands it off to your Django app for you to process, your code does whatever processing it's supposed to do, and your app returns a response to the thing that made the request (once again, through the web server). Unless you schedule tasks to run automatically e.g. at a specific interval using something like cron, it's going to do nothing and patiently wait for a request to come in.",1530054219.0
andytwoods,"There's this Facebook group https://www.facebook.com/groups/python.django/. There are a lot of posts from people who don't bother googling their issues though, making the atmosphere there a little unpleasant :(",1530033873.0
jamesf510,I just completed a web app for my job that replaces the current static site for an online monthly newsletter. It has the functionality to send Salesforce Marketing Cloud email templates straight to Marketing Cloud. Future builds will include more Marketing Cloud functionality to edit and delete assets in Marketing Cloud from the app. It reduces the workload from 2 people to 1 person and takes less than half the time it took before the app. It’s using strictly Python/Django ,1530023740.0
mattblack85,"Personally I use it for building REST APIs, I find it so easy and quick to build them using Django and at the same time powerful.",1530081917.0
scaphilo,"You can check out the this page: [https://djangopackages.org](https://djangopackages.org) it lists many open source django projects.  
I am also using it for my projects. Because compared to development approaches you describe your models within the python code. I rarely use SQL commands. 

All models can easily be equipped with an admin interface and REST interface.   
Also an important feature: Database migrations are supported   
",1530099070.0
cmothebean,"Look at saleor, they do product variants.",1530273883.0
pydanny,"I' a big fan of the [Django Admin Cookbook](https://books.agiliq.com/projects/django-admin-cookbook/en/latest/) by one of my mentors and 10+ year Django veteran, Shaabda Raj.",1530032113.0
phonkee,"in get_urls, you probably want to do this:

    path('custom-button/', self.admin_site.admin_view(self.custom_button_view))

So admin can check permissions for given view.",1530023020.0
,[deleted],1530020589.0
Mayor18,you can try to use the \`@property\` decorator and do there the needed calculations.,1530008249.0
Ramast,"using `property` is correct, I'll just post a sample code here.

    class Employee(models.Model):
       gross_salary = models.IntegerField()
       
       @property
       def tax(self):
          # 10% taxes
          return self.gross_salary * 0.1

       @property
       def net_salary(self):
          return self.gross_salary - self.tax

     >>> e = Employee.objects.first()
     >>> e.gross_salary
     3000
     >>> e.tax
     300
     >>> e.net_salary
     2700

Edit:

You can use `django.utils.functional.cached_property` as /u/DustPuppySnr suggested if calculations are time consuming.

In the example above you simply replace `@property` with `@cached_property`.
`cached_property` does the calculation first time and store the value inside the instance

In the example above if we changed tax function to use cached_property 

       @cached_property
       def tax(self):
          # 10% taxes
          return self.gross_salary * 0.1

Then the code `self.gross_salary * 0.1` will only be executed once the first time the tax function is called and cached, all subsequent calls will return the cached value.

However since `cached_property` only cache the value inside the instance, it won't work when getting new instance.
For example:

    >>> e = Employee.objects.first()
    >>> e.tax
    300 # tax function will be executed and number will be cached
    >>> e.tax # tax function will NOT be executed, the output would come from the cached value
    300
    >>> e = Employee.objects.first()
    # You created new instance of Employee so cached value is lost, 
    300 # tax function will be executed again

If your calculation is very expensive and you want the cache be maintained across instances for a period of time (say 1 minute).
You should use `cached_model_property` instead from [django_model_helpers](https://github.com/rewardz/django_model_helpers)


",1530020937.0
roysta,"Use the @property decorator on any function in the model class.  For example, write a function called @get\_operating\_income() that does the math for you.  Then, you can use this ""function"" as if it were a field, be that in the console, in a view, etc.  Just be careful, if the function relies on other models or expensive queries and you are running this on a large volume such as an exposed API, you'll want to make sure things are foreign keys and learn about select\_related or prefetch\_related.",1530013035.0
flipperdeflip,"@property is cool for incidental calculations on individual models. 

If you need the calculated field often you can annotate through the queryset. Just make sure the annotation stuff actually happens, by calling it explicitly, or by overriding some default querysets (like in the admin or manager).",1530017953.0
nannooo,"Generally, you don't put any fields in your database that can be calculated (there are exceptions though). The best way to make calculations is by creating a model function. In that you can do anything you want.",1530008393.0
j03,Can you show the line in your settings file where you are enabling toe password similarity validator?,1530003954.0
i_like_trains_a_lot1,"I played a little with the code of the `UserAttributeSimilarityValidator` and indeed, in the case when the two parts are very similar in length, the validator fails. Under the hood, it uses https://docs.python.org/3/library/difflib.html#sequencematcher-objects . Here is a quick example to illustrate how it works. We instantiate the `SequenceMatcher` object and we determine if the two words are similar based on the quick_ratio score, which must be higher that 0.7

    >>> import difflib
    >>> m = difflib.SequenceMatcher(a=""nameusername"", b=""name"")
    >>> m.quick_ratio()
    0.5
    >>> m = difflib.SequenceMatcher(a=""nameusername"", b=""username"")
    >>> m.quick_ratio()
    0.8
 
In this first example, the validator would trigger the error for username.

In this second, example, we take words that have almost the same size

    >>> m = difflib.SequenceMatcher(a=""firstnamelastname"", b=""firstname"")
    >>> m.quick_ratio()
    0.6923076923076923
    >>> m = difflib.SequenceMatcher(a=""firstnamelastname"", b=""lastname"")
    >>> m.quick_ratio()
    0.64

We see that the error almost triggers for `firstname`.

In this third example, we just compose the password with the same word, repeated

    >>> m = difflib.SequenceMatcher(a=""testtest"", b=""test"")
    >>> m.quick_ratio()
    0.6666666666666666

We see that even in this case, we can't seem to trigger an error.

The issue here is that this validator only checks for similarity between the password and a single attribute. Now it is up to you how flexible you want this validation to be.

Now, in order to tweak the parameters, you can play with the `'OPTIONS'` for that validator, in `settings.py`, something like this

    AUTH_PASSWORD_VALIDATORS = [
                {
                    'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
                    'OPTIONS': {'max_similarity': 0.5, 'user_attributes': ('first_name', 'last_name', 'username', 'email', 'password_validator_target')}
                }

Now you have to add a property in your user model that would generate a list of strings to validate the password against (for example, if you want to validate against first_name and last_name combinations, you could add a property on the user model, something like this

    @property
    def password_validator_target(self):
        return ' '.join([self.first_name + self.last_name, self.last_name + self.first_name])

We join them by a whitespace because in the https://docs.djangoproject.com/en/2.0/_modules/django/contrib/auth/password_validation/#UserAttributeSimilarityValidator , we see that the password is checked agains each word from the field ( `value_parts = re.split(r'\W+', value) + [value]` )

Hope it helps. It was a fun exercise.
    
 
",1530005820.0
5awaja,"I can't answer from experience but there is an article I've had bookmarked for a long time that no longer exists. I referenced it often, every time I didn't know what to learn next. I can't find the article anymore but I'll give you its main points.

There's 5 components to full stack development: Presentation, Backend, Database, Servers, and Operating Systems.

The author lays out the steps as this:

Learn the absolute hell out of HTML/CSS and JavaScript for presentation. You should be able to take an idea or drawing and make it into a page.

Focus on one, maybe 2 programming languages (for web, he says Python, PHP, Ruby, etc) and the most lightweight framework you can handle (think Flask over Django). 

Learn an RDBMS. Obvious choices are MySQL and Postgres, mainly because they're free, but SQL Server and Oracle are viable options too (though idk why anyone would willingly use Oracle). The goal here is to not only understand the different ways to get and post data, but to model data appropriately for its specific intended use cases.

Get proficient at administering a web server. The only 3 that come to mind personally are Apache, IIS, and nginx. 

Learn one operating system very intimately. I think the obvious choice in web dev is Linux, but Windows has its place too. The goal here is to understand what happens at the OS layer that impacts the web application it's hosting.

Again, these aren't my ideas, but those of an author whose article I can't find anymore. I do remember one quote almost verbatim though:

""if you know a programming language, you can be a programmer. if you know a RDBMS, you can be a DBA. if you know an operating system, you can be a sysadmin. when you know the whole stack, you get stuff done.""

or something like that.

I hope this helps and I'm really bummed I can't find the article anymore (the website was rubysteps if anyone has an updated link), but it helped guide me a lot throughout my personal learning path.

EDIT: I found the link, it was updated for this year (2018) https://www.rubysteps.com/blog/so-you-want-to-become-a-full-stack-developer",1529971682.0
pydanny,"Django has been pretty good to me these past 9-ish years. Things I recommend learning today (this might change tomorrow):

* Good python skills
* Good relational database skills
* Django REST Framework or GraphQL, either works for landing work.
* VueJS for the front end. It's as popular as ReactJS but not so 
'enterprisy'
* Zappa for deployment on AWS Lambda. Because you want to deploy easily, cheaply, and in a way that scales to infinity
* [Best practices for Django so you don't make often repeated mistakes](https://twoscoopspress.com/products/two-scoops-of-django-1-11)",1530032311.0
pagechristopherlee,"Thank you kindly, that information was pushing right in the direction of where I’d like to go journey wise. I hoping this becomes a popular reddit post and we get quite a bit of feedback on here. ",1529973417.0
mbrochh,Learn Graphql for Django and ReactJS for web frontend and React Native for mobile and server provisioning on AWS and you are good to go. ,1530012754.0
pagechristopherlee,If I could give you more upvotes I would thank you kindly!!,1530037777.0
Niicodemus,"No, you shouldn't proxy to the dev server. Just run Django under gunicorn and proxy to it.",1529966774.0
RelevantToMyInterest,"Don't run the development server for production. That's why it's just a development server. It isn't designed to handle incoming connections as well as a web server would. Besides, once you turn debugging off, django wouldn't let you run it anyway(run it well, at least; you'll need a proper static path for your static files served by the web server). ",1529970363.0
MouliTadinada,"If i have any doubts, can i drop them here?",1529988488.0
DudaFromBrazil,"You can use celery to run the task on background and update the status of the file generation (a model to handle that) when finished. On the frontend you will do a longpool or something that will watch the status and allow the download when ready.

Or... You can generate the file and send it to emails, if possible.",1529958572.0
Vitrivius,"You can write a django ajax view that generates the pdf file, saves it and returns the download url. On the client you only need a few lines of javascript. First show a ""generate report"" button. When that button is clicked, show a spinner and post the form to your ajax view. When you receive the response, replace the spinner with a ""download report"" button. ",1529997684.0
spapas82,"This is a common problem. The solution is to use asynchronous tasks; actually you should use asynchronous tasks even for actions/views that don't timeout but take more than 1-2 seconds to complete. Also, I recommend using asynchronous tasks for actions that you don't fully control, for example when you call an external API - this may take a long time if it's not working so it's better to do it through an asynchronous task.

In any case, beyond celery, there are two other *simpler* solutions for implementing asynchronous tasks in your project:

- django-rq (https://github.com/rq/django-rq) which uses rq (which in turn uses redis) to keep your tasks (does not need an extra message queue) and I recommend and have used extensively; I've also written two articles about it if you want to familiarize yourself a little https://spapas.github.io/tag/django-rq.html

- django-q (https://github.com/Koed00/django-q) which can use redis or a number of other message queues. It is simpler to configure than celery. I haven't use this but seems like a solid project.",1530011570.0
neurotoxiq,"Is there a reason you decided to use ListView instead of FilterView?  Seems more or less the same to me except the get_context_data doesn't need to be overridden.  The template is given the variable object_list which is the filtered queryset.

Wish I waited a day to learn django-filters, it was a pita and your explanation is so simple!",1529982171.0
mattmls00,"I was able to solve my issue so hopefully this can help someone. 

The underlying issue was that PeeWee is not always closing connections correctly. db.connect() will throw an exception if you try to open a connection when there is already one open. I was able to solve this issue by adding the reuse_if_open = True flag to the db.connect() call. ",1529943720.0
ramse,Just curious why peewee at all when djangos built in orm works?,1529937354.0
tutuca_,Great to see so much community building up around wagtail. It's a great CMS!,1529936491.0
FlipperPA,"Thanks for posting these, there was such a good energy around the conference.",1529959756.0
uroybd,"Me and my current workplace are using docker (with docker-compose) for all of our projects (including Django) extensively. We use it from the very beginning of a project's development process.

One reason is we believe in personal preferences in workplace. You can use any OS: Mac, Linux & Windows, any Editor... The choice is yours! But all of us use docker. Pull the repository, run a `docker-compose up`, you're ready to develop, you'll always get the expected behavior. This is particularly helpful for newbies who are just learning from the industry.

Besides, docker-compose creates a internal network for each project. Database is accessed through it by it's internal network, therefore I don't have to manually enforce database security here. It is also easy to scale server.

We don't use Kubernates. But with docker and Gitlab CI we've implemented CI/CD. In every push, our build server build relevant docker images, runs tests on it, push it to gitlab private registry which is available to (1) devs, so they don't have to build image in there system always and (2) production, to auto deploy.

Not only for Django, it is a very helpful tool for almost all stacks. But, if your project is small, well you can skip it.

Edit: typing error.",1529894424.0
ccb621,"The ""best practice"" depends on your needs and available resources. Containers (e.g. Docker and Kubernetes) are quite popular and offer the benefit of being able to run the same image in multiple environments. That said, some folks still find it easier to run on ""bare metal"".

If you have the time and desire, try going the container route. If you just need to get a site up, go with what you know.",1529892399.0
ezaquarii_com,"Docker is quite popular, but I personally opt for system packages. Whole site is packaged including virtualenv.

While not as flexible as Docker, I find upgrade and pre-upgrade testing being very easy to automate.

You can check out how it's done in OpenVPN@Home:
https://github.com/ezaquarii/openvpn-at-home/
",1529902056.0
rocky-ji,"I really recommend docker for production ,it’s convenient and flexible, it’s will save your many time ",1529896885.0
Hovercross,"There are two kinds of indices: unique and non-unique. db_index=True will create the later, while unique=True will create the former.

For example, if you have a model that has people's first and last names on it, you might put a db_index on one or both of those fields, or a single index on both fields depending on what you expect to look up by. It doesn't mean that there can only be one person with the last name ""Smith"", but you can find all those people much faster than if you didn't have an index.

TLDR:

* db_index=True: Create a non-unique index for faster lookups
* unique=True: Create a unique index for faster lookups and guarantee uniqueness",1529882942.0
TunaBoo,"db_index means build an index

unique means build an index AND enforce unique constraint.


Storing a Person object by SSN (ignore laws on this). You likely want it unique, as only one person can have a SSN.


Have a field called status on a Person object that you want to query? (say alive, dead, unknown)?  You would add a db_index.",1529882956.0
hhh333,"It's probably the most future-forward framework you could pick.

However, hosting a Django site is not exactly like hosting a PHP site and a lot of hosting companies will support only PHP site because they represent the biggest chunk of the market.

Your best option to host Django are:

* look for a hosting company that supports Django
* use a Paas like Heroku
* use a VPS or dedicated server

I did successfully run Django site on CPanel and Plesk, however, I had to deal getting restricted root access to the servers and I had a lot of problems. Don't do it.",1529866535.0
porksmash,Obviously yes... But you need to do your research on hosting because most shit tier hosting services only support PHP. Hosting a python application is a bit more involved. HostGator has VPS hosting which is probably what you need to get this hosted with them. But if you're going the VPS route there are a lot of other better companies for that like DigitalOcean and AWS.,1529864760.0
academicbadger,Pythonanywhere.com is another good platform as a service. ,1529868444.0
Dan_Quixote,"Django is an excellent modern framework - I think the overall benefits far outweigh its extra complications in deployment. Namely, proper webservers and reverse proxies don’t ‘speak’ python and require an intermediary process called WSGI to manage communication between the two. Look up tutorials for Django, NGINX and uWSGI (or Gunicorn) - it will take an hour or two to deploy to a VPS like DigitalOcean, but totally worth learning if you have the one. If you’re just trying to get something out the door today, look at a platform that handles this complication for you like Heroku or Pythonanywhere.  They cost more and have more vendor lock-in of course. ",1529872248.0
chris_conlan,"I recommend running on a VPS provider like AWS or DigitialOcean instead of a PAAS like Heroku or PythonAnywhere. VPS hosting teaches Linux and webserver administration, which are useful and transferable skills. The problems you'll encounter with PAAS providers are pretty annoying and vendor-specific.",1529869459.0
StewPoll,"Don't use host gator, that's you're problem.

Personally I use AWS Lightsail, but digital ocean is great too!",1529893186.0
supra621,"We use a lot of Django applications at work, and it’s still very actively developed. Ruby on Rails is probably the other popular one there, depending on who you ask and their personal preference.",1529866436.0
FlipperPA,"If you really want to be bleeding edge, there's also AWS Lambda hosting with Zappa. But it is a fair amount to learn. I've found the $5 digital ocean Droplet works fine.",1529959915.0
btbam06,"I suggest looking into PAAS solutions. Check out Heroku and Pivotal Web Services. 

This is what I do and honestly it’s great. The infrastructure of hosting an application is abstracted our for me and I spend the vast majority of my time implementing features. ",1529865669.0
St_Meow,"Just parse it so that when someone routes to Uncle+Sam, you look at the route and replace '+'  with a space",1529857177.0
ckinsey,"You can use the vue-cli webpack build, and I recommend [django-webpack-loader](https://github.com/owais/django-webpack-loader)

You'll run a second server, but only to watch your vue source and rebuild when files change.",1529846390.0
idoin38,"no one uses tastypie anymore, use Dango REST Framwork",1529830464.0
pbgc,Use Django Rest Framework or Restless (http://restless.readthedocs.io/en/latest/) by the same author than tastypie,1529832645.0
daredevil82,"For me, the difference in going to DRF vs Tastypie can be enumerated through the github project stats

[django-tastypie commits](https://github.com/django-tastypie/django-tastypie/graphs/commit-activity)

[django-tastypie pulse](https://github.com/django-tastypie/django-tastypie/pulse/monthly)

compare those to DRF

[drf commits](https://github.com/encode/django-rest-framework/graphs/commit-activity)

[drf pulse](https://github.com/encode/django-rest-framework/pulse/monthly)

Contribution activity since Dec 14, 2017

[DRF](https://github.com/encode/django-rest-framework/graphs/contributors?from=2017-12-14&to=2018-06-24&type=c)

[django-tastypie](https://github.com/django-tastypie/django-tastypie/graphs/contributors?from=2017-12-14&to=2018-06-24&type=c)

Not to mention the disparity between open issues and PRs between the two projects.  A lot of them are on tastypie old, and may no longer be valid, so they should either be closed or merged, rather than just sitting there.
",1529844823.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1529827637.0
iconfinder,It’s probably not easy if you want to keep using the ORM. One thing you could try would be to customize one or more object managers. I would suggest you keep a central database with as much data as possible and then run separate databases per region. There are some tools that can quickly give a database an API. ,1529820418.0
haloweenek,"Well I thought about it for a bit and it can be manageable using dB routing...

Though dB integrity checks must be off.

You will need to switch regular integer based primary keys for string based pk’s.  

Now the pk’s format must be something like: REGION-PK

The router must query proper dB based on the key. 

The performance of that will be totally snaily but might work ...",1529824321.0
haloweenek,"You can use dB routing - to some extent at least ..

https://docs.djangoproject.com/en/2.0/topics/db/multi-db/#using-routers

But management on that will be total pain ...",1529823551.0
whatever_meh,"Using a uuid for the pk on your national user tables would be enough to ensure uniqueness. 

Sounds like it might make a good 3rd party app, if the problem is common enough. ",1529824509.0
daredevil82,"Off the top of my head, you're going to have to override or rewrite the base manager to handle the routing for you behind the scenes.

Have a base model class that binds that new manager via `objects = SomeManager()`, and then all implementing classes have that manager available by default.

Routing.. would be tricky.  You'd have to have explicit listings of your databases, and execute X queries for each object call.  Not to mention having creates and updates directed to the appropriate db while maintaining references...

Sounds like an interesting challenge.",1529849078.0
daredevil82,"You might be interested in this video from one of the original core developers of django at last year's djangocon 
https://youtube.com/watch?v=NzcvewgqYog
",1529803367.0
prithvi45,"Elasticsearch will be an great option, else you can go with Haystack (Modular search for django) for rapid development where you will find many options for search indexing, like  Elasticsearch, Whoosh or Xapain",1529854243.0
rando2018,"If I'm using PostgreSQL and the search requirements aren't too onerous I go with PostgreSQL full text search, as it's very easy to integrate into Django[ out of the box](https://docs.djangoproject.com/en/2.0/ref/contrib/postgres/search/). You can just set it up with SQL triggers so no need for an additional server/process for a search engine e.g. Solr, signals, celery etc to handle updates and so on. This actually works quite well especially in the early stages of a site when you want to keep things simple.  Later on I'd maybe go with Elasticsearch, but as with most things do the easiest thing that works and reach for another tool only when you know you need it.",1529953270.0
iconfinder,I’m a big fan of Elastic Search but i guess it’s not what you are looking for.,1529783996.0
daredevil82,"You can set models to be unmanaged, so the table won't be affected during migrations 

https://dev.to/patrnk/testing-against-unmanaged-models-in-django",1529775440.0
athermop,"Depending on what you actually need to do with the data, the simplest way _may_ be to just access it like you would from any python program accessing a database.

Import psycopg2, set up your connection, and execute some SQL statements.",1529786337.0
threeminutemonta,"It might be work considering still using a seperate db for the Django and create a second db  connection using an additional [settings](https://docs.djangoproject.com/en/2.0/topics/db/multi-db/)

It’s also worth noting Postgres allows multiple schema in one database. The default schema is called public. You still might have to use the config above to talk to the same database with different schema’s. ",1529790652.0
flipperdeflip,Do they really need to mess with each others database? Wouldn't it be more sound to use some sort of API to write from one program to the other?,1530017649.0
haloweenek,Official celery documentation does the job.,1529772026.0
daredevil82,"For this, you're probably going to have to dig into the code of the app itself and update/override as neccessary.  Since this is a niche project, you'll probably have better luck asking those who work on the project by opening up an issue at https://github.com/applegrew/django-select2/issues",1529927999.0
cuber_dude,You can't access using the user interface. You should you postman and get a access token and use that token in the header or  each call (check the doc of django oauth) or if you want to just debug you can remove permissions for the debugging phase.,1529723130.0
wynar,"Have you looked into [django-guardian](http://django-guardian.readthedocs.io/en/stable/)? 

I believe that might cover what you're asking ",1529703497.0
jedi_stannis,Take a look at https://github.com/dfunckt/django-rules,1529719065.0
vitogeek,Why not just create custom forms and views and display those to whoever you want? You control who sees/updates what easily without using a plugin. I do that all the time.,1529727743.0
ubernostrum,"What's available in a template:

1. Any variables explicitly set by the view (consult the documentation for the view you're using)
2. Any variables set by [context processors](https://docs.djangoproject.com/en/2.0/ref/templates/api/#using-requestcontext), if the view uses a `RequestContext`.",1529692070.0
GHDpro,Django Debug Toolbar's Template tab can show you what context is available to each template.,1529704625.0
sanchitrk,"1. The request object is available in template by default (at least in django 1.11). 
2. You can use the request object to query User model -- user needs to be logged in user Otherwise it ll show as Anonymous user
3. If you want to print all the variables passed in the template context, you can print the context dict object in views.py
4. If its class based you can check method get_context_data()
5. If its func based view you can print the context before pass it to ur render method

6. documentation is your friend- django's docs are awesome ",1529723346.0
teewuane,Switching today.,1529694032.0
wynar,"Been looking for something like this in Sublime 3. Thanks for putting it together, going to install tonight. ",1529703031.0
neurotoxiq,Thank you! The stupid {# #} comment for html templates is the dumbest thing ever,1529713193.0
callius,"Hey, so I've got some similar, though quite distinct, issues as well and would love to see how you end up solving this.

My initial thoughts would be that you don't need to choose an either or here. You should be able to do Ajax to pull a form into a div instead of a modal. Though, the how of that is more jquery than django, and beyond my ability probably.",1529688323.0
allidoisace,"You can definitely auto generate forms using formset which will uniquely identify multiple forms based on a counter. There will be an empty hidden form which holds the base work of each form. When you click some button for example, it will add the next form to that formset. Then you can do an ajax call to submit and handle every single form in the views. ",1529688513.0
Cictani,If you only use Django for API why not make a seperate project for frontend. You should check out [https://nextjs.org](https://nextjs.org),1529664775.0
prithvi45,"why are you redirecting in second function ,  **return redirect(request, 'feed.html', {'posts': posts, 'form': form}, args)** 

Render feed.html page.

 **return render(request, 'feed.html', {'posts': posts, 'form': form}, args)**  ",1529854685.0
Nicksil,"They would just have a SECRET_KEY environment variable available in their own environment. It doesn't have to be the same value.

However, if you're talking about credentials for third party services, that's different, but it doesn't *sound* like that's what you're getting at. Speak up if otherwise.",1529628144.0
davidkwast,"https://github.com/henriquebastos/python-decouple/

Decouple helps you to organize your settings so that you can change parameters without having to redeploy your app.

It also makes it easy for you to:

    store parameters in ini or .env files;
    define comprehensive default values;
    properly convert values to the correct data type;
    have only one configuration module to rule all your instances.
",1529628435.0
btbam06,"You can host a configuration externally and have your app load it at run time. 

See this pattern. 

https://docs.microsoft.com/en-us/azure/architecture/patterns/external-configuration-store

",1529643859.0
ubernostrum,"It looks like you're banned from Reddit. This means all of your posts are hidden until explicitly approved. Subreddit moderators can't do anything about this, except approve your posts in the subreddit one by one.

You may want to [contact the Reddit admins](http://www.reddit.com/message/compose?to=/r/reddit.com) about this.

###_
^Remember ^that ^reddit ^uses ^""shadowbans"", ^in ^which ^you ^can ^still ^see ^your ^posts ^and ^profile, ^but ^other ^users ^can't ^unless ^a ^moderator ^manually ^approves ^them. ^For ^more ^information, ^check ^out ^/r/shadowban.",1529633204.0
delibaltas,I would pay to read. I wouldn't pay to watch.,1529625908.0
Aviris,"I would probably watch/read it if it was free, and then give you a couple bucks in the end when it was good, but i probably wouldn't buy it, just because i had a little too many cases where the writer had no idea how to make a good tutorial and while getting a step by step tutorial helps you get off the ground faster, in the end i only learn stuff for real while hitting one problem after the other and googling my way through it with my own projects. And just to maybe shorten that learning curve a little bit is not that big a positive vs getting angry at bad tutorials i paid for.

Not saying your tutorial will suck, just that i would probably not give it a chance when it costs something.

(Also what i'm willing to pay after finishing a good tutorial outweighs the price i'd be willing to even think about paying in before by a lot)",1529615769.0
manufactured-code,"I'm interested in the topic, and appreciate your offer.  I have found this [brief overview](https://youtu.be/C7oiYr4_NdU) of using Vue.js with Django useful. I probably wouldn't pay right now, but I support you getting paid.  I might pay in the future, however - so I'll keep my eye on this.",1529610550.0
rando2018,Would appreciate something on secure authentication - this is a major stumbling block and many tutorials have plain bad/harmful advice such as storing tokens in localStorage. ,1529622380.0
petedee,"Yes! Definitely!

I have a couple of years of django experience under my belt now so I don't know how much use a full ""here's how to install django"" tutorial would be but knowing how to tie it together with Vue would certainly be helpful.

There was a reasonable coding for entrepreneurs video on YouTube that is for Django and React but he kinda skims through some stuff there that I didn't understand, maybe that is more due to a lack of exposure to react and js in general though :/",1529618626.0
japanfrog,"Yes. The only request I have would be for you to be very mindful of beginners, and as such, provide as little bias as possible, and point towards the official documentation for VueJS and Django. Too often Django tutorials get beginners to memorize how to do something instead of teaching them how and why things work.",1529627844.0
eskemojoe007,It would have to include some basic deployment. I am learning and I build following tutorials then struggle to deploy with the proper securty. ,1529677710.0
28f272fe556a1363cc31,"I really want to learn a django and vue combination. I'm pretty new to django, and have no Vue or REST experience. 

My problem is that I would be learning it as a hobby, my full-time job is not web related. In other words I don't know how much time or money I am ready to commit to learning.

Personally when I'm learning something new I like to start out with video series. But I also like having complete code examples in case things I get confused while following along with the video.",1529621500.0
dangjoeltang,"I would be willing to pay. I would also really appreciate if you included some background knowledge about where/when SPA with django would be practical and not, and maybe a few different methods of deployment based on scale of project. I dont know how much i would be willing to pay, but i think anything $30 or under would be no questions asked. Over that i would prefer to wait on what others say about your course.",1529621906.0
ic_97,"Yeah i would really appreciate it plus i would like if you told me about some resources that helped you in the process.
I would appreciate it more if it were free though.",1529622531.0
man_i_love_toast,I would! I use Vue and Django daily for work and have for the last few months. I don't think I've found a tutorial that explores how they work best together. ,1529623656.0
unkz,I'd be pretty interested in this.  I would pay some amount for it.,1529624925.0
galactusBY,"I absolutely would, went to coding fair recently and ran into a friend who was interested in this.",1529634188.0
rocky-ji,"I definitely can pay it,but it’s will be worth it. You know.some class too simple and boring.",1529643304.0
rocky-ji,When you will finish it? I can’t help to study.,1529651246.0
ezaquarii_com,"I'd pay for established best practices of solving most common but messy technical issues - authentication, mixing Vue with classic MPA templates, etc. Internet is full of basic tutorials.",1529654046.0
pat_the_brat,"I probably wouldn't pay, as there are many good free resources for all of that, even if it takes some work to piece them all together. I've also been chronically underemployed, and live in Eastern Europe, where 80$ is a lot of money. (I *could* afford it, but other priorities, I guess).

I would probably benefit from one single resource that covers DRF and VueJS in a logical manner, however.

I prefer reading to video, but both would certainly not be a bad thing.",1529668788.0
lzantal,"If you leave out Django rest framework than yes I would read or watch it. I avoid anything that uses drf as it has been nothing but a major bottleneck and unmaintainable mess for any project I have come across. 
Also as long as you keep your front end nicely separated from Django templates. I have seen way too many howtos that reminds me of the good olde php days lol",1529686254.0
vinyasmusic,"VERY VERY INTERESTED !!   
Might not be able to pay more than $10-15  \*third world country problems\*",1529816493.0
knobby1420,I would pay for this in a heartbeat.,1529618187.0
pancakeses,Seems like a content-type issue. Your browser doesn't know what type of file you're trying to return. Each of those numbers are the decimal values (ascii) of each character of of text in your file. Take the entire string of numbers and paste them in to this ascii converter: https://www.browserling.com/tools/ascii-to-text,1529606516.0
callius,"You can have a list of dictionaries as a context object.

In your template, just iterate through the context object using {% for x in context_variable %}.

Edit: you say these are objects. So, you'll probably just need to do some processing to format them into a dictionary server side, is all.",1529600989.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1529598346.0
callius,[The tutorial on Simple is Better than Complex may be helpful.](https://simpleisbetterthancomplex.com/series/2017/10/09/a-complete-beginners-guide-to-django-part-6.html),1529601241.0
memeingfull,"how about ""python [manage.py](https://manage.py) runserver"" ?",1529584627.0
vaibhavhrt,Can you provide your manage.py,1529589630.0
torimus,"> All except multilingual contents (like items descriptions etc.).

I'm afraid you are on your own there. Need customize templates and use straight Django localization infrastructure.

> and found out Saleor, which seems to fit all my needs

Hope you are aware about all main pitfalls, noted by some unbiased sources. Esp. future maintenance burdens caused by Saleor's design decision.
",1529677185.0
SignificantTomato3,"There were two attemps to translate Saleor's content (basically that's what's missing to make Saleor 100&#37; i18n compatible)   
First attempt was using django-modeltranslation, but as we would rather avoid meta classes magic it's not going to be merged at this moment  
[https://github.com/mirumee/saleor/pull/2307/files](https://github.com/mirumee/saleor/pull/2307/files)  
(According to the author it should work out of the box, this PR is relatively new)  


Another one was involving our custom translation interface (will be finished at some point in the future, at this moment there's an outdated PR)  
[https://github.com/mirumee/saleor/pull/819](https://github.com/mirumee/saleor/pull/819)",1531137665.0
die2code,Will try. Thanks for your efforts ,1529583253.0
monolow,Thanks for this. What I use the most in full-fledged IDEs (eg. PyCharm) is the CMD+click (Go To Definition) on functions and classes that works even if it's not a local definition (ie. part of virtualenv). Do these power text editors have the ability to do that with or without indexing the whole env ? Is there any plugin that does this for python?,1529600809.0
CKreuzberger,Very cool!,1529580716.0
duskhorizon,"Heya,

Thanks mate I just have one question i wanted to edit my settings, as you suggested and if i understand correctly it should look something like that :

https://puu.sh/AJke3/a27135b5fa.png

But when i try to save it i get error :

    {
    	""resource"": ""/c:/Users/Asiapacia/AppData/Roaming/Code/User/settings.json"",
    	""owner"": ""_generated_diagnostic_collection_name_#2"",
    	""code"": ""514"",
    	""severity"": 8,
    	""message"": ""Expected comma"",
    	""source"": ""jsonc"",
    	""startLineNumber"": 4,
    	""startColumn"": 5,
    	""endLineNumber"": 4,
    	""endColumn"": 25
    }

Any idea what I'm doing wrong?",1529587639.0
daredevil82,"Sounds like you haven't run migrations to set up all the django db tables via `manage.py.py makemigrations  && manage.py migrate`.  As a result, by doing this for individual apps, you're running into dependency and relation issues because of improper setup ",1529581407.0
IIIlIIlIll,Hello there!,1529570263.0
memeingfull,"Is there a specific reason you use POST? when searching a simple GET will do the job since you don't ""Post"" anything... When working with the POST method I like to add 'if request.method == ""POST""'  as a little security check. 

You should not use words like ""Stuff"" in the code since that is bad naming. Your code looks ok in general but it does not make a lot of sense at the moment, but you mentioned that yourself. 

To answer your first question: 

It depends on how you want to structure your project. Having a functions with 500 lines in generally a bad thing so calling some extra functions which you defined somewhere else is a cleaner way but to start out and find your way you can also to everything in a single function. To get a better understanding of code structure look into the SOLID Design Pattern written by Uncle Bob ;) 

Answer to the second question: 

Yes redirecting is a common practice, maybe this SO answer helps you a little [https://stackoverflow.com/questions/5823464/django-httpresponseredirect](https://stackoverflow.com/questions/5823464/django-httpresponseredirect) to understand the concept. But as mentioned before I don't think you need a Post in the first place so you might wont need it. Can you tell me which tutorial you are follwing? ",1529582834.0
Cictani,You should try django forms and django generic views for example FormView. I don't know what your ultimate goal is by doing the form. If it is just search than you don't need POST if it will manipulate models by data submitted by the form user then you should think about django forms to automate a lot of stuff like validation etc.,1529665386.0
cruyff8,"You can execute your SQL statement [using Django's raw()](https://docs.djangoproject.com/en/2.0/topics/db/sql/) function:

>accounts.objects.raw('''SELECT domain FROM accounts INNER JOIN  ( VALUES  %s) VALS(v) ON accounts.domain=v''', (*your_values_list_goes_here*))

Hope that helps. Feel free to leave an additional comment should you need further assistance.",1529557297.0
flipperdeflip,"This smells of an unsuitable data model. Where do those 10K items come from? Is this an app with much traffic? Do you really want/need to send 10K terms to the database every time this query comes up?

I think you should see if instead of building up an `__in` filter with literal values you could use subqueries and expression to select your filter data on the database.",1529571547.0
rvistro,Have you figured out a solution for this? I'm facing the exactly same problem...,1537281700.0
rahul-kumi,"Tbf, although the official documentations seem complicated....in the long run they tend to be exhaustive resources and one place stops for all Technical needs.
I suggest you not to avoid the official documentations, rather embrace it along with other tutorials.",1529548699.0
wkoorts,"Think of a simple project and build it with Django.  A simple twitter clone.  A blog.  A URL shortener.  Once you've done the basic tutorials on the Django site then you can use the documentation to figure out the rest (their docs are superb).  It doesn't have to be great, it just has to work.",1529549326.0
naught-me,"I'd recommend the book Effective Python to bootstrap your Python skills.  It's made of short, easily digestible chapters that can sort of stand alone, and when I was first coming to Python, it helped me quit writing PHP-style code in the Python language, and to write code that's a lot more Pythonic.  This ends up being a big deal, as it makes it a lot easier to read other people's code (including examples for your trouble-shooting-search-results, or the Django docs), and it's even a lot easier to read my old Python code than it ever was to read my old PHP code.

Aside from that, I'd just recommend the Django docs and building stuff.  There aren't really any better shortcuts, as far as I know.",1529548206.0
spapas82,"Here's what I did before ~ 7 years; I consider myself a django expert (take a look at my blog for various django-related articles https://spapas.github.io/category/django.html ): 

1. Make sure you understand HTML and HTTP. You must know how to write a simple html page, what's the difference between a GET and a POST request, what's the meaning of foo and bar in www.example.com/index/?foo=3&bar=4 etc

2. Become comfortable with python. Django uses various advanced python concepts and you need to properly understand everything. I recommend a couple of months of heavy python usage before starting learning Django; don't learn both Python and Django

3. Start with the official Django tutorial (https://docs.djangoproject.com/en/2.0/intro/tutorial01/). Do it slowly; work on every topic mentioned there. Make sure you understand everything before continuing to the next part. If you don't understand something refer to the documentation; the tutorial has helpful links on all topics covered.

4. When you've finished the tutorial you should be ready to try your hands on a real application. You can't learn if you don't do; you need to start implementing a project. It may be a toy one or a real one, not something difficult. One example would be to make a blog engine with posts and comments on each post (make sure you add proper authentication for editing).

5. While implementing 3, read the official Django docs. As others have mentioned, you need to read the docs. The Django docs are really excellent, probably the best documentation effort I've ever experienced in my 15+ years career. When you need to do something for you application, try reading as much as possible from the documentation (i.e models, views, forms), here are the contents: https://docs.djangoproject.com/en/2.0/contents/, I know this may seem tedious but it is really important. When I had started learning Django, while writing my first projects I read the documentation (for Django 1.4) from start to finish; it took me a couple of days but most of my questions were resolved.

6. Write more applications. Expertise comes with experience. Don't rush and everything will come to you. Django is really predictable, there are no suprices and majic. When something is not working take a look at the documentation, at the exception (if there's one) and your source code; most of the time you'll find the solution there. If not don't be afraid to peek into Django (or extra packages) source code.

7. Don't forget that Django has a huge ecosystem of helpful packages (https://djangopackages.org/). Don't reinvent the wheel, use these packages when you need them. If you want some help starting, here's my list of essential django packages: https://spapas.github.io/2017/10/11/essential-django-packages/.",1529592657.0
Batting1k,www.djangoforbeginners.com might be a good spot for you. I believe he has a more advanced book too.,1529547931.0
mistaekNot,I’d recommend skimming through the official docs. That way you know what’s possible with Django and have an idea of where to find the details. ,1529562453.0
flipperdeflip,"Do small and real world projects and slog your way through the problems. It is hard to preload everything in your mind from docs. Instead skim the docs to get idea of what is in there on features, then start doing stuff on refer back when you need something. Slowly you'll explore everything and build up the whole picture with a natural prioritization of things with how they come.",1529566820.0
oliw,"From what I've seen, almost every Django tutorial assumes you're building a website, and every DRF tutorial assumes you know about Django (at least models, validation, etc).

I'm not saying Django+DRF isn't a good way to handle this, but you'll probably need to learn a lot more than you were originally planning (like some HTML, form handling, etc).",1529570852.0
thebatlab,"It's fairly small, now, though I have found it a bit of a pain once you want to re-organize into separate apps after your initial ""main"" app grows.

I could see 3 potentially separate apps here:

- accounts (users and user profiles)
- messaging (inboxes, messages, likes)
- ranking (may have no models but has the API calls to send back ranking lists)

You'll likely end up with more models than you think if you're truly building something like an email system. Even just the ability for users to like a post may entail its own model to store metadata such as when the post was liked. But you also don't have to split apps just based on models. I have a reports app on one project that runs reports that aggregate data from multiple other apps, but has no models on its own. The rankings app in your case may be similar.

Some of this could be cart before the horse, but it does show how those elements could eventually grow into their own apps, so I don't see much harm in splitting them as they feel logically disconnected from each other.",1529533899.0
ezaquarii_com,For such a small project 1 app should be more than enough.,1529530138.0
emihir0,"More or less, especially for a basic project, both MySQL and sqlite will be able to achieve everything you need. The problem is that sqlite is not good at multiple connections and so it will bottleneck your production server.

The general practice is to use sqlite only for quick local development, but not in production environment.

Edit: Django is a layer above database. It's ORM wasade so you don't have to write raw queries. For example instead of writing `SELECT * FROM User` you write in Python `User.objects.all()`.",1529530503.0
ezaquarii_com,"SQLite3 is generally not suitable for production applications, but for small scale deployments and local development it's surprisingly convenient.

There are some low level issues too. If you try to apply certain type of migrations under transaction, SQLite DB will be damaged. Certain SQL features must be emulated, etc.

If it works for you - use it. Otherwise use Postgres. There is little sense to use MySQL these days.",1529577169.0
sdermoumi,"While you can, I'd really advise against it as you'll miss out on most of what makes Django Django.

If you're going to use MongoDB you might as well use Flask rather than Django.",1529524611.0
GoodOldBoys,"The real question is why do you want to?

Are you using Mongo because it's web scale?

https://www.youtube.com/watch?v=b2F-DItXtZs",1529533574.0
pugRescuer,Why do you want to use Mongo? Picking a backend and framework are done for different reasons. ,1529528697.0
hylje,"You can, but you won't get to use models. While models are not all that Django has to offer, they're quite big part of it. Consider using PostgreSQL as your database backend, getting both json fields and integrity guarantees as well as great support by Django.",1529528003.0
pydanny,"[Don't use MongoDB with Django](https://www.pydanny.com/when-to-use-mongodb-with-django.html)

Also, no particular database is a requirement enterprise applications. ",1529531240.0
Daishiman,Don't. Use. Mongo.,1529533867.0
daredevil82,"if your data is structured and related, why would you want to use a non-relational db?",1529533584.0
,[deleted],1529561533.0
flipperdeflip,"Depends on what you are looking for. Sentry is a big, feature rich and most of all real world product. So if you want to browse something with a ton of code and features and connected things then sure. 

But if you want to find out about ideomatic django then maybe it is not ideal because it has so much code and folders that make it is hard to see the Django patterns between all the business code. Quite a lot of what I see in there is the error logging and reporting stuff Sentry does, a lot of which is not specific Django stuff but generic python code. The repo organization is not a common Django pattern I recognize from other projects.

Maybe see if you find some smaller and maybe more CRUD like Django apps and compare with what you see in Sentry.

Even so it is definitely worthwhile to explore Sentry, even if just to look at lots of real world Python code and getting to grips with that (it is different from PHP in many ways).",1529581991.0
Rorixrebel,"Started learning wagtail couple weeks ago. Appreciate the tutorial, will read it at lunch.

Edit: realized ive read your stuff before. Quality posts. Thanks again!!",1529506898.0
,Isn't this just a reiteration of what's in the documentation already almost verbatim....,1529507919.0
daredevil82,"check out https://github.com/encode/django-rest-framework/issues/3538

>it'd make sense for the view to explicitly have authentication_classes = () set, so that it doesn't fall back to the global defaults. (SessionAuth doesn't make sense to apply to a 'give me the token view', and as you've seen will result in a CSRF failure)",1529498284.0
colly_wolly,"It will give you more user interactivity at the cost of a lot more code (a lot of it being in JavaScript). 

You can get fairly far using Django plus a bit of JQuery. Here is a site I built using those and no Framework (there is a lot more interactivity if you log in but its an exclusive site for students of the barschool, so you won't see everything).  

http://www.ebsmatchstaff.com/bartending-jobs/",1529501074.0
apreche,"If you're making something that is like an app. Like Slack or Facebook or gmail, you want to use the js library. If you are making a web site, with pages, just use templates. If the web site with pages becomes super fancy over time, and templates can't cut it anymore, you can switch to a js library easily. ",1529494555.0
issue9mm,"When you know that you're going to have more clients for your backend than just the web, it makes sense to 'eat your own dogfood' by starting your Django backend as *just* a RESTful API.  When you consume that API with Javascript, you're proving out the fact that it's capable of handling authentication and everything if you were to use that same backend for a mobile app. 

> Why not just use old school JS & Jquery

I mean, you can, but it sucks for big projects.  React works well because it fits the paradigm of modern web applications.  When you write static HTML (or Django templates) with jQuery, you have a page, and some dynamic components bolted on to it.  Then you have another page, and some other dynamic components.  Then another page.  Etc.  Most of those pages contain the same elements over and over again, so what you really want is to just have a concept of a page, and on that page, put the components.  If you're building something cool, you're going to put more care into the workings of each component, so it makes sense to make the component a first class citizen. 

Look at Facebook, or Twitter.  They're both shockingly complicated if you go with a progressive enhancement paradigm, because there are a lot of pages that need treatment, but most of those pages have the same types of content (statuses, replies, etc.) that are reused in a lot of different ways. 

Past that, modern frameworks have things like Redux / ngrx, that allow you to persist state where it belongs -- on the client side.  Can you imagine how much facebook would suck if it had to requery the API every time you clicked on something?  A lot.  But redux allows them to query API content, store it on the client, steadily feed it with websocket pushes.  They only requery everything when you do a page refresh, and those refreshes take a LOT longer than going to a new page. ",1529494726.0
daredevil82,"Others have answered the why to use react/vue/angular, and I'd like to add one more:  effectively, you're making an application that swaps URL loading by having view transistions handled in the code.  So rather than loading a new template for each URL, the DOM is updated and repainted for the new view, while the URL can stay unchanged.  This gives the impression of a smoother user experience, because the data is _already_ there or is on the way and you can display placeholders till the API request comes in.

Regarding your last point, this all _can_ be donewith jquery, certainly.  But, it has some downsides:

* You're going to have to write handlers for _every_ event you want on every dom element required.  This is something abstracted away in react/vue/angular, so you just define the handler and let the component handle the binding.
* jQuery is _extremely_ easy to spaghettify code when you get to a certain size.  Managing the code size by splitting into different files takes practice and discipline, and compared to using react/vue/angular with webpack bundling, it is a major pain in the ass.

jQuery is good when you have a limited set of dom elements you want to manipulate.  Its easy to structure the HTML and add ids and classes to bind to your jquery, but it really doesn't scale at all, and there will be a time you'll be fighting your own code more than anything else while trying implement a new addition to the project.",1529497151.0
vellonce,">Do I just copy ""fernetBrowser.js"" to my static folder and load it in my template?

Well basically, yes. But as the Readme.md states, it is only recommended to use it on the front end for decryption. You could use it in the backend if you were using nodejs, but as you are using python I think you need to search for a compatible library.
Maybe if you can tell us what do you want to do with the library we could help you better

Check the file `test.html` to see how it works on the client side

Edit: formatting ",1529495148.0
jonknee,"Make sure you down the risks of client side browser encryption first, but yes just make sure it's in your static folder and then load it like you would any other static file:

    <script type=""text/javascript"" src=""{% static ""js/fernetBrowser.js"" %}""></script>
    ",1529506055.0
anyesh,"Please look at the official documentation of django
https://docs.djangoproject.com/en/2.0/topics/http/urls/",1529490029.0
pancakeses,"Take a look at my reply to this similar question:

https://www.reddit.com/r/django/comments/8qnoy1/somebody_please_help_me_convert_some_url_patterns/e0kpabx/",1529500959.0
GHDpro,"When learning Django, there is no good reason not to use the latest version: 2.0

I'm not sure why anyone would start a *new* project with 1.11 unless for business reasons they don't expect to have too much time to keep it up-to-date all the time (and stick with the latest LTS version), or some dependency issue.

As for a tutorial... the Django documentation is pretty good I think. The book ""Two Scoops of Django"" is good too, and while it is only for Django 1.11, don't be discouraged by that: most of it is still relevant. In fact that goes for most tutorials. Just check the release notes for 2.0 to see what is different.",1529486674.0
SkawPV,"1)

Go for Django 2.0. If you have a good tutorial on 1.11 and that's why you're asking, do it as 99&#37; of the syntax it is the same.

2) 

You can create the back-end with Django and use JS for the API data fetching with Ajax on the front-end",1529488573.0
cascott77,[django-widget-tweaks](https://github.com/jazzband/django-widget-tweaks),1529469064.0
memeingfull,"you can use widget-tweaks but you can also add classes to your forms via [forms.py](https://forms.py) . check this SO answer:

[https://stackoverflow.com/questions/401025/define-css-class-in-django-forms#answer-45656531](https://stackoverflow.com/questions/401025/define-css-class-in-django-forms#answer-45656531)

It keeps the project cleaner and less dependencies is always a good thing although crispy and widget-tweaks are ok.",1529492334.0
badlyDrawnToy,"Django crispy forms has a template pack for Bootstrap

http://django-crispy-forms.readthedocs.io/en/latest/",1529517229.0
Dravvael_,"take a look at the front end for this project, it may help you [Cardinals](https://github.com/fga-gpp-mds/2018.1-Cardinals)",1529468615.0
Whoopska,"The debug toolbar image is the same as the comment model image. Is `post.objects.prefetch_related(""comments"")` not doing it?

    for p in post.objects.prefetch_related(""comments""):
        for comment in p.comments.all():
            print(comment)

should have two queries. If necessary, you can do

    for p in post.objects.select_related(""user"")\
            .prefetch_related(Prefetch(""comments"", Comment.objects.select_related(""user"")):
        for comment in p.comments.all():
            print(p.user)
            print(comment.user)
            print(comment)

which will grab the authors for the post and comments if you're displaying those.",1529453432.0
booooomba,Just put everything into one app. That's what I do. But none of my projects are massive. ,1529478945.0
prithvi45,"You can do in same main project or as a different app for user, just take care of  circular dependency will not happen ",1530457600.0
Nicksil,Look at your [`REQUIRED_FIELDS`](https://docs.djangoproject.com/en/stable/topics/auth/customizing/#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS) declaration.,1529430450.0
its_joao,"Try hasattr(your_Obj,str(your_variable))",1529427898.0
comiconomenclaturist,"Is the User class definitely the same one in console and debugger? Do you perhaps have a separate model with the same name? Can you `assert False, people_ids` in your view to check the values?",1529530030.0
booooomba,"It is pretty straight forward. Put the JS for displaying graphs in your Django template and pass the variables you need to the templates as well. Then just ""print"" it into the JS code and you're done.

Also please be more direct in your questions. I'm not sure what the actual problem really is. Makes helping you much harder for us.",1529410857.0
SkawPV,"Create an endpoint that gets the desired data, return a JsonResponse with the data and in the template, fetch the data with Ajax.

Also, check this: [Django + Chart.js // Learn to integrate Chart.js with Django](https://www.youtube.com/watch?v=B4Vmm3yZPgc)",1529475462.0
thulasi_ram,"I think it should be easier with customizing Django admin. I've advised many people off and against this path. Generally the thumb rule is that if the things that you want to accomplish in the next 6 months ties tightly to the database structure you should be good with django admin. But if you need efficiency, slick operations and many adhoc asks go with a Frontend dashboard solution. If you need something for the business but keep the development time low go with 3r party dashboard solutions like metabase. ",1529395213.0
duppyconqueror81,"I guaranty you that if you use the django admin now, they’ll give you a call in 6 months with requests that are hard to do in the admin, and you’ll pull your hair out.",1529411640.0
,[deleted],1529421242.0
flipperdeflip,"Probably want to do a bit more research and use existing standards instead of rolling your own authentication scheme like this. Look into JSON web tokens, OpenID connect, Oauth and such.",1529391917.0
Acquiesce67,Running django only for authentication feels like using a sledgehammer to crack a nut. There's got to be something much more lightweight for your needs.,1529388927.0
cuank,you shouldn't do any processing client side. only send what it's needed,1529389261.0
jessy_fox,"Model ""View"" permission. Is all that I need. I wanted this feature since at least 1.6",1529373248.0
Whoopska,"    {{ value|json_script:""hello-data"" }}

produces

    <script id=""hello-data"" type=""application/json"">{""hello"": ""world""}</script>

to be used via

    var el = document.getElementById('hello-data');
    var value = JSON.parse(el.textContent || el.innerText);

seems very strange, but may be the best interface",1529379860.0
CaptainMelon,"Lot of really good stuff but something caught my eyes: 

 > HTML rendered by form widgets no longer includes a closing slash on void elements, e.g. <br>. This is incompatible within XHTML, although some widgets already used aspects of HTML5 such as boolean attributes.

Do people agree here that it's a good idea ?

The PR is here: https://github.com/django/django/pull/9602",1529489199.0
,[removed],1529394919.0
Mekhami,you need to show the output of the tests.,1529357787.0
moeris,"Personally, I've found developing with selenium to be a little fragile.  I may have been doing it wrong, or introduced it to early.

You've made sure you gave a good set of unit tests first, right?  Integration testing with selenium is fine, but you should have mostly unit tests.

If I were you I would try some different drivers.  Try Chrome headless and PhantomJS.  It sounds like your test may be hanging or quitting early.  You want to narrow down if it's a browser issue or a Selenium issue.  Try a failing assert at the head of your test, before setting up Firefox as well.  That will tell you if it's something silly (like, if your test name doesn't start with ""test_"" so it's not being run by the test runner.)",1529403697.0
booooomba,"You always need at least one app. I always just call mine ""core"" and put everything in it I need.",1529346984.0
ramfanprogrammer,"I typically always create an app. Even if it is a static website, I will create a ""static_pages"" app to hold all of that information in it.",1529446654.0
twigboy,[Don't](https://www.reddit.com/r/programming/comments/8rq2a4),1529353768.0
nannooo,Have you installed [https://github.com/django-nonrel/mongodb-engine](https://github.com/django-nonrel/mongodb-engine)?,1529343168.0
dirn,"Django only provides backends for relational databases (there is also one for Oracle, but Heroku may not support that). There may be third party libraries that provide one for MongoDB, though.",1529347455.0
mhurron,"Tutorials do not get you to advanced knowledge. You get there by learning details and solving hard or interesting problems.

Pick a feature you want and build it. Don't use tutorials, used documentation, and reason your way through issues.",1529338693.0
theWyzzerd,"One thing you should do is acquire an SSL certificate and install it on your web server (or where ever you're hosted).  Not necessarily django related but you probably don't want to be serving up HTTPS without one.  That, or switch your web server to use HTTP since you don't appear to be transmitting any sensitive data between your site and browser clients. 

Also, looking through your HTML source it looks like you might have copied from somewhere.  There is nothing inherently wrong with copy and paste, but for example, that SEO block isn't doing anything for you right now.  ",1529347099.0
pragmaticchuck,"I have also just recently made a personal website with django and had the ssl certificate issue, it's an easy fix.",1529351294.0
pydanny,I co-wrote a book called [Two Scoops of Django](https://twoscoopspress.com/products/two-scoops-of-django-1-11) designed to help you get past the Django basics.,1529363241.0
oliw,"Getting a blog up is most people's Hello World for a webdev framework but it's —frankly— a really crappy way to dig in. Blogs are simple. Even with nested comments and tags and you're only at three models. Super-simple caching. A tiny smidge of view logic. It's an introduction, a Hello World, nothing more.

Looking at yours, you could afford to spend a little time on the HTML side of things. Your implementation of that template is spotty in places. Between the inconsistent margins and mystery comment tag in the footer, it shows little attention to detail.

You could strain yourself to create something else in the context of a blog but there's little scope for incremental improvement. It's like trying to learn any language by expanding the Hello World example.

So I'd look for something completely different but much more complex. Something you're interested in. A news aggregator. A sports result site. A [fake] online casino with server side events happening asynchronously to emulate (eg) slot machines. It doesn't have to be unique, it just has to be something a room full of monkeys couldn't bang out on typewriters in an afternoon.

Also take some time to learn HTML and CSS. It's useful to know.",1529357272.0
thefifthpostulate,Commenting so I can follow-up on this later. This is something about which I’ve been curious too.,1529441973.0
Dr_Ironbeard,"I'm looking into this at the moment, but haven't actually implemented anything with plotly dash yet.

https://django-plotly-dash.readthedocs.io/en/latest/",1529452945.0
panchicore,"3. Bigger model files, smaller view files. 
3.1 Business model in managers. Better business logic design.
3.2 First python (ipython) console, second browser. Save time.
3.3 Don't abuse manytomany rels. Optimize later but better learn from other devs errors when choosing m2m.
3.4 Django command extensions makes your life easier.
3.5 Donate to the project if you earn money thanks to it.",1529342082.0
nannooo,"1. Yes, unless I have multi-tenancy set up.
2. I always use the standard Django version. I don't like relying on boilerplates.
3. Definitely make sure you consider replacing the standard User model if you want to change fields now or later. Replacing it later on can give you some serious headaches. If you do need to modify it, make sure you replace the User table with your own before you make any migrations. You could always extend it with another table, but replacing it is much better and cleaner.",1529334387.0
pancakeses,"On mobile, so this will be short for now.

1. Admin is for administrators, and should be only for site administrator, IMO. I build my own views for CRUD use by everyone else. 

2. https://github.com/pydanny/cookiecutter-django",1529334044.0
CraigTorso,"1. Admin is for site administrators, not end users.

2. I don't use boilerplates. 

3. Know enough SQL and how SQL maps on to the django ORM so you don't write horrible queries.",1529348104.0
kolloid,"Why write the tutorial if you're not an expert? You give bad example for novice programmers that will come and repeat your mistakes.

For example,

    snippet.hits += 1
    snippet.save()


has a race condition - this will never work properly in multi-user environment. There're more issues with your code. Starting with the very layout of the project (why use names like `django_project`? why use default clumsy Django project layout?).",1529335776.0
japanfrog,"While older, this project [https://github.com/bartTC/dpaste](https://github.com/bartTC/dpaste) is a much better example of a pastebin clone.",1529349535.0
kolloid,"There're so many problems with your code that it's not even worth going through it. Starting from using Django 1.11 and functional views. And even your functional views are written in a suboptimal manner.

Problem is, some people just type something like: ""Django tutorial"" in Google and end up on sites like yours instead of the default Django tutorial (which is very good and which you apparently didn't read yourself).

Then they start repeating your mistakes in their projects. I've seen that so many times. I've asked developers: ""Why have you chosen this suboptimal and error-prone way?"" and the answer is: ""I've seen it in a tutorial here"". I open a link and see a code that makes my hair move.

If you want to teach others how to program, you should:
1) be an expert yourself (and you didn't even read the django tutorial because it explains how to fix the race condition that I immediately noticed in your code)
2) write an impeccably good code, so that novices learning from you are learning the best practices, not the worst.

Bad tutorials and bad examples of code do more harm than good. There's already perfectly good Django tutorial.",1529379311.0
i_like_trains_a_lot1,"Keep the connection in a separate module's global namespace which you load in the `AppConfig.ready()` (https://docs.djangoproject.com/en/2.0/ref/applications/#django.apps.AppConfig.ready). Or you can create the connection first time it is needed with a `get_rabbitmq_connection()` function that will cache it after it is initially created.

You only need to worry about the connection, the message handlers will be executed in separate threads anyway (if you directly use `pika`).

That would be my 2 cents.",1529318906.0
SupermanIsEnvious,You could make your RabbitMQ handler a [Singleton ](http://blog.thedigitalcatonline.com/blog/2014/09/01/python-3-oop-part-5-metaclasses/). ,1529319992.0
MrK_HS,Why not use Celery? It's a nice framework for interfacing Django with MQ workers.,1529321160.0
krolm1,use [https://github.com/deschler/django-modeltranslation](https://github.com/deschler/django-modeltranslation) or similar . It will create translated fields for each corresponding language in settings,1529315478.0
SignificantTomato3,"You might need a translation interface  


There was an attempt to implement such in Saleor (on hold at this moment), but you might take some inspiration from it  
[https://github.com/mirumee/saleor/pull/819/files](https://github.com/mirumee/saleor/pull/819/files)",1529313585.0
fdemmer,https://djangopackages.org/grids/g/model-translation/,1529317778.0
IAmACentipedeAMA,"reddit manages this by putting everything on ram, the whole (current) website is on Redis or similar tool in memory and old data is stored in the database when its old enough and not likely to change, that why you cant upvote really old posts, also the user-post upvote relation can be implemented different ways, check [this post explains alot of this stuff](https://www.reddit.com/r/django/comments/7czebj/how_does_reddit_implement_its_upvotedownvote/dpum26s/)",1529314616.0
MDziwny,"You could denormalize the votes count in each post

    class Post(models.Model):
        ...
        upvotes_count = models.IntegerField()
        downvotes_count = models.IntegerField()
    
    class Vote(models.Model):
        ...
        post = modes.ForeignKey(Post, on_delete=models.CASCADE)
        user = modes.ForeignKey(User, on_delete=models.CASCADE)
        type = models.ChoiceField(choices=('upvote', downvote')
    
        def save(self, *args, **kwargs):
            super().save(*args, **kwargs)
            self.post.upvotes_count() = Vote.objects.filter(post=self.post, type='upvote').count()
            self.post.downvotes_count() = Vote.objects.filter(post=self.post, type='downvote').count()
            self.post.save()

Performances can be improved by using an aggregation instead of two separate count.",1529321957.0
fullstack_dev,"

>How best to model and write views for scalability?

Make columns that rank and classify posts/comments.  Write code for ranking/classifying decoupled from the view but initially triggered by view when first starting out.  Move ranking/classifying code from view to Celery task queue when you think it's ready.  Put upvotes/downvote submissions behind celery task queue as well when ready.  Not saying this is the best path forward.  But it's a path forward where you won't be spending too much time on premature optimization.


>Do sites ever cache pages for several minutes to help mitigate load? 

In the past Reddit didn't provide real-time view of posts/comments.  I think that's still the case.",1529322467.0
dashdanw,"I think the smallest way to represent the votes would be to define two many-to-many relationships from User to Post, something like 

    
    class User(models.Model):
        upvotes = models.ManyToMany(Post, related_name='upvoters')
        downvotes = models.ManyToMany(Post, related_name='downvoters')

    class Post(models.Model):
        link = models.URLField()
        title = models.CharField(max_length=256)
        text= models.TextField()
        
        @property
        def upvotes(self):
           return self.upvoters.count()
        @property
        def downvotes(self):
           return self.downvoters.count()",1529305990.0
madscientistisme,"Add widgets along similar lines in the form `widgets = {'date': forms.DateInput(attrs={'type': 'text', 'class': 'datepicker'}),

     'time': forms.TimeInput(attrs={'type': 'text', 'class': 'timepicker'})}` in the class Meta:  

",1529261093.0
CraigTorso,"Something like this will use the browser default date time control.

    class LessonsForm(forms.ModelForm):
      time_from = forms.DateTimeField(
            label=""DONT DO ME USING SUPER IN THE __INIT__"",
            input_formats=settings.DATE_INPUT_FORMATS, 
            widget=forms.DateTimeInput(attrs={'type': 'datetime'})
            )

      time_to = forms.DateTimeField(
            label=""DONT DO ME USING SUPER IN THE __INIT__"", 
            input_formats=settings.DATE_INPUT_FORMATS, 
            widget=forms.DateTimeInput(attrs={'type': 'datetime'})
            )


I've not tested it as it's Sunday night, the World Cup's on, and I've had a beer or two but it's roughly right.
",1529261166.0
SenorDosEquis,"I’ve never built a Django project where data wasn’t used and analyzed across apps. E.g. I have an accounts app, a tasks app and a payments app. Well, I need to calculate payments owed to users based on the tasks they’ve completed. That logic ends up in the payments app in a view or a utils.py file in the payments app, but of course it’s querying the db for account and task information.

It’s a judgement call though. If you’re not planning to create apps that can be 100% ported to another project, you don’t have to worry too much about this.

That said, models.py files *should* be separate. This in no way prevents you from querying the db for those models elsewhere. You’ll just write `from accounts.models import User`.",1529249388.0
Daishiman,"A pattern I have used is to set up Django projects as ""Data Access Layers"" that have different apps which just define model logic and anything necessary to maintain object invariants.

Then for any app-specific functionality, your project just includes the app and creates proxy models with the stuff it needs.

The only issue with using proxy models for that (you could probably use mixins too), is that objects returned from foreign keys are going to be of the base class instance, but I believe `django-polymorphic` allows dealing with that.",1529286089.0
fuckslavs,"3 models: Marketplace, Product, and a many to many through model. Then you would use an inline formset",1529233345.0
efgm1024,"Here's an example of what you describe above. I made it for you.
https://gist.github.com/efgm1024/6c45a95ffd25c4fd19ff25b54cdda3c1
Also a short video of what it looks like in Django Admin.
https://vimeo.com/275515441

I hope it helps you.",1529262823.0
DmitriyJaved,"Just use regular data tables? Do you really need an module to make it works, last time I used Django drf + DataTables everything went just fine.",1529225331.0
Whoopska,"Is all you need something like

    var mytable = $(""#mytable"").DataTable();
    setInterval(().  => mytable.draw(), 2000);",1529239125.0
marqpdx,I've just (earlier today) been reading about Django plus React using REST. Could work very well for this. ,1529222850.0
bamdastard,can you use jabbascript?,1529199572.0
,[deleted],1529203312.0
Nicksil,"I always try and remove as much logic from templates as possible.

In this particular case, you can process this logic in your class/function procedure and include a variable within the template context with a value of the class name(s) you wish to use for the given outcome.",1529188827.0
PyBet,"Another way to do this, would be to use ```bet.status__name``` as a css class and add the rules of lets say ```bg-success``` to it. Although, having spaces in ```bet.status__name``` would break this.",1529192703.0
rednaletsaw,You should go through the Django tutorial and become confident with the framework before making anything like this.,1529186245.0
everhideme,You can use django rest framework for this. It is very simple and solve your problems :),1529164842.0
pointyball,The worst part is I can't find the tutorial. Just an intro to installing Django and the promise of one,1529175363.0
ahackersday,"All parts of this tutorial is now published. The series index with links to all parts can be found here:

[https://ahackersday.com/blog/djitter-how-to-build-a-twitter-clone-using-django-2-0/](https://ahackersday.com/blog/djitter-how-to-build-a-twitter-clone-using-django-2-0/)",1529310879.0
Zoro-Zen,"Awesome!!

My class in finishing in the next week. After that I will read and follow this whole tutorial.

Thanks haha!! It will help me a lot to understand somethings with Django.",1529321456.0
blureglades,Thank you very much for posting this! I'm currently learning Django and this is very helpful :),1531531071.0
nkuttler,The challenge in creating a twitter clone is the scale. Twitter itself is a trivial app...,1529140366.0
chaseroyaleee,"For me, I like the way Django handles it's models and migrations more than rails. I also like the mixins that come with Django Rest Framework. I also prefer Django's ORM but this might  just be because I'm  more used to it. Finally, I like  writing in python more than Ruby. 

Ruby on the other hand, as opposed to you, felt way more magical than Django. Some of the things I like that rails does better than Django is automatically separating test, dev, and prod environments, the way they handle their nested routes and urls more (though Django has improved their side of this with path in 2.0). I  don't like is Ruby's atomics or whatever they're called, the variables like :variable. 

In the end I was more comfortable with python and Django. Felt way more productive, faster, and easier. This is a preferential choice though. The two are both used for making applications fast, the performance difference is pretty minimal. So I suggest you try both out, see which one you like more and then just keep using it. 

Last points, more jobs in rails than Django but I strongly believe python won the language war. ",1529135920.0
virtyx,"Django is not better than Rails, and Rails is not better than Django.

People use Django for exactly the same types of projects they might use Rails for.

It's mostly up to personal preference.  One of the benefits to Django is you get access to the Python ecosystem.  I believe the Python standard library is much better than Ruby's.  Ruby has a nice ecosystem for Rails gems but beyond that it's a bit iffy... Python's third party ecosystem is fairly large with lots of other tools you can easily work into your project, like Pandas or numpy, if needed.

At the end of the day if you're a competent Rails developer, there's no hard reason for you to learn Django.  If you're curious about Python and Django, maybe just try building a few Django toy projects like a blog and a todo list, and see if you like the way Django code is organized and written.

And of course, while in Ruby, Rails is the framework king, Django doesn't have the same heft in Python.  There are many popular competing web frameworks, including Flask and Pyramid.",1529149497.0
jessy_fox,I used RoR many years ago. Has many features equivalents with Django. Is a good framework. I thoght I choosed Django because I felt more confortable with Python than Ruby. And I really like Django admin feature.,1529152450.0
Eurynom0s,"Neither is really better...10 years ago Rails had a serious hype factor to it. I don't think that hype factor has survived, though. I guess it's possible that you'll still run across legit Ruby/Rails shops but I don't think anyone is on ""Rails! just because!"" any more.",1529151510.0
CaptainHondo,"I prefer Ruby and Ruby on Rails, but as other commenters have said they both have much of a muchness (i.e there isn't much difference.)",1529208671.0
rednaletsaw,"It is entirely based on personal preference, as well as context. If you like the Ruby package ecosystem and language and whatnot and you think it works well for your current project, then stick to Rails. Or you could just give Django a try and see if you like it and Python.",1529186467.0
WHuangz,"but if we compare the market usage
it’s very sure that RoR hold the usage right?",1529136174.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1529093658.0
,[deleted],1529094422.0
lzantal,Store modified datetime and blog id in a JS variable. Then use jquery ajax function to call a custom Django view with blog id that should return the modified datetime. Compare the two datetimes and if it’s diff then reload the page.,1529124452.0
waynebruce1,are you trying to achieve this [how-to-auto-refresh-redirect-a-view-in-django](https://stackoverflow.com/questions/35975511/how-to-auto-refresh-redirect-a-view-in-django) ?,1529096952.0
hedronist,"Speaking as a Certified Old Guy^&reg; (I'm 68.9, have been doing web-related sites since 1993, first Django site in 2007) I'd just like to say that 85%+ of the SPAs I see are ... crap. They do it because they are ""cool"". Uh, not so much.

Rather than go cool, go Old School. Starting with [User Stories](https://en.wikipedia.org/wiki/User_story). You know, those things where you sit down and actually think through the workflow for each particular portion of the app, code that appropriately, and then weave it into something comprehensible. My rule nowadays is that if the user *has* to RTFM to use your app, You're Doing It Wrong.

Picking a front-end technology first, and then trying to shoehorn your app into that technology is just plain wrong.

One last thing: SPAs break the contract. The [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) contract that the web was built on. If I can't capture my *exact* state and email the URL to someone else and have *them* get exactly the same view ... I blew it. REST is not just some random thing, it is a *deeply* important way of letting your users bookmark and share their experience with others.",1529107556.0
,[deleted],1529099063.0
kylemh,"1. Will be a tough sell to product, but we should evaluate that a bit more before giving up at ""there's no API in place"". How would you rate your models and controllers (views since Django is MTV). The controllers burdened by obfuscated class/module system or is mostly a series of functions? If it's a bit functional with some utilities, you may be in a good position to quickly scaffold out an API. If there's dependency injection across modules between your controllers - you're gonna have a bad time, mkay? If you can get to an API quickly, I think this could be a great route - you said it best: let everybody do what they do best. Also be sure to generate the API responses with only what the front-end asks for, even consider generating a GraphQL layer so that you don't need to implement a query system for any REST endpoint.  

2. You can still use something like React or Vue here and just have server-side rendered code. On a dashboard-like application this is especially doable as there aren't many dynamic routes and many interactions can be handled via modals that still allow the modern front-end frameworks to flex their way through the client-side.  

3. I actually went this route for a contract gig. In the end, as the guy that did most of the front-end work, I felt like crying in the end... This methodology has such an immense lack of resources and community that you'll run into absurd hiccups like - how do I keep clean code in my controllers when I have to maintain and API and templating utilities in the same module? Also, the build process and CI build process is absurdly heinous... I needed to deploy the whole thing when I made changes. Separately each would take such a much smaller amount of time. Integration + E2E testing was a chore here as well. I was using Selenium at the time so the problem was needing to use shit-loads of waits() on routes where a component came into play. Using something like Cypress today would've alleviated a lot of that client-side pain, but then I'm increasing my CI build-time even more by bundling an electron browser to run tests, instead of activating a script in vm or offloading the browser work.

4. Why not both? You mentioned you're a small team, but is it possible to get some redesign aspects done with your current templating system while your new front-end dev + a senior dev with experience writing APIs get to work extracting/modularizing logic? A migration path can be planned to the point that as the API moves to completion the whole team could work to finish it out while also delivering new experiences on your production, MVC application. It's at a slower pace, but hopefully it satisfies product enough while you improve the dev experience on the side. Just a thought. 

I see a lot more pros in methods 1 and 4 as you're going to seem like a better candidate for many people in the job market today. Companies that are stuck in MVC applications with templating languages make me shiver. If you have intense UIs coming into play with a deficient way of implementing them, you're all gonna get sick of your jobs - especially since it sounds like you don't really wanna be bothered with the UI.",1529112782.0
FountainRescue,"Option 1 sounds like a terrible choice for your team, since it will require the most rework. 

Your cons in option 2 aren't cons for your company, and if you're managing the project, business value should be your primary concern.

Option 3 is the sensible option (but page as a component is only one of several ways to approach it). 

I worry that you're asking Reddit about this - this is bread and butter decision making for any competent tech lead. 

Personally I'd pick option 4 - hire an experienced tech lead and get them to manage this software project.",1529097668.0
hip_modernism,"I am using something like option 3 for my site, though with Django + Vue (not React). One thing I liked about this approach is it made refactoring my old jquery code piecemeal doable rather than doing ""the big front-end re-write"" at all at once.

Also if I can just throw out a wacky idea that I have not implemented in prod yet, but I have tested in a feature branch and was pretty blown away by...try out either pjax or turbolinks.

Turbolinks is originally a rails thing and seems like it's gone out of vogue for some reason, but now it is framework agnostic. For the important on-page interactions I wrote proper Vue components, but for the stuff I ""just want fast but is not critical if there is a new page load"" it seems like Turbolinks is sort of magic. It sped up ""infrequently accessed but nice if it's fast pages"" like my user profile/settings page way way up.

This approach does not win any tech purity contests, but it is very practical to my eyes and more efficient of developer time.

",1529099497.0
philgyford,"Given time and resources are limited I'd go for 2. Upgrading to the latest bootstrap isn't a massive issue (not that I've seen your templates/design!) and if the resulting dashboard will serve your needs, then I don't see a big downside.

One day when the new dashboard isn't meeting your needs, or the mythical day when you have more time and resources, look at re-implementing it in a newer, shinier way. But for now it sounds like a distraction, and re-doing too much of it could be a project that will take longer than you expect.

Do the simple thing.",1529316615.0
fuckslavs,Delete this waste of space post,1529085814.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1529052585.0
CraigTorso,"You need to grab the file path before the instance is deleted so you could use a pre-delete [signal](https://docs.djangoproject.com/en/2.0/ref/signals/#pre-delete)

",1529048909.0
JaredOzzy,"I actually had to implement this a few days ago! I went and used a lovely little package called django-cleanup that does all that for you! 

https://github.com/un1t/django-cleanup

All you do is add it to your requirements, then add it to installed apps.

in your requirements

    django-cleanup==2.1.0

in your settings.py

    INSTALLED_APPS = (
        ...
        'django_cleanup',
    )
",1529054043.0
pX0r,"PyCharm Pro - while the support for Django itself is a bit lack-lustre  its not terrible. I depend on it for these two reasons:  

- Integrated database and SQL support . 

- Javascript support . 

I am using Fabric more and more for deployment related tasks - so I have built a small kitty of run configurations for these tasks and thats very handy.  

I have a bunch of run configurations for starting the local server, DB migrations, spawning Celery workers, other manage.py commands ,etc

It takes about a week for my collection of run configurations to stabilise and mature. Post that development and deployments run smoothly and I hardly miss the whole AWS cli sugar and can make do with cheaper cloud services out there (like [WebFaction!](https://www.webfaction.com/?aid=103610))...

Integrated git version control looks decent but I don't use it often.

Managing virtual environments is helpful.

There is rudimentary support for Jupyter notebooks too but I am yet to be impressed by its current state of implementation inside PyCharm.",1529034345.0
Investisseur,I’m uncertain of why you would want an IED meant for writing code to also handle your deployments.  ,1529064502.0
toyg,"I've used it a bit, but only to deploy to a development server. It's just too easy to have auto-saving and auto-uploading enabled when you don't mean to, and that's a big no-no for production. I deploy to Prod in other ways, usually with an explicit git pull.",1529098360.0
Mephoros,"Hey, I think what you may want to leverage is `get_form_kwargs(form_index)` on a custom implementation that inherits from `BaseFormSet`.

Seen here: https://docs.djangoproject.com/en/2.0/topics/forms/formsets/#passing-custom-parameters-to-formset-forms

>The form_kwargs may also depend on the specific form instance. The formset base class provides a get_form_kwargs method. The method takes a single argument - the index of the form in the formset. The index is None for the empty form

As an example, you could pass in the kwargs `question_id` and `question_description` and make use of this information in your form's `__init__`

Edit: I just noticed the OP says you were unsure how to make use of form kwargs. Below is an example

    class MyFormSet(BaseFormSet):
        def __init__(self, questions, *args, **kwargs):
            super(MyFormSet, self).__init__(*args, **kwargs)
            self.questions = questions
    
        def get_form_kwargs(self, form_index):
            form_kwargs = super(MyFormSet, self).get_form_kwargs(form_index)
            if form_index < len(self.questions):
                form_kwargs['q_id'] = self.questions[form_index]['id']
                form_kwargs['q_desc'] = self.questions[form_index]['desc']
            return form_kwargs

    class MyForm(forms.Form):
        def __init__(self, q_id=None, q_desc=None, *args, **kwargs):
            super(MyForm, self).__init__(*args, **kwargs)
            if q_id and q_desc:
                # I'm not sure if these calls are exactly correct but you should get the idea of it from this
                q_field = self._meta.fields.get('question')
                q_field = q_id
                q_field.help_text = q_desc

    # Set up like normal
    MyFormSetFactory = formset_factory(form=MyForm, formset=MyFormSet, extra=...)
    
    # Questions passed in on creation
    fs = MyFormSetFactory(questions=[...], ...)

This should accomplish what you want, I think. If there is a better way (or simply, flaws in the method I've described above) please don't hesitate pointing things out! I'm learning as I go, for sure.",1529047817.0
seanucd2000,"You almost had it.  Try:

choices = \[(1, 'very poor'), (2, 'poor'), (3, 'fair'), (4, 'good'), (5, 'very good')\]  
score = forms.ChoiceField(widget=forms.RadioSelect, required=True, choices = choices)",1529031542.0
pydanny,"In our use case, we don't do anything fancy with django-webpack-loader. Instead, we start a new GitHub repo and the Vue CLI tool to create a stand alone VueJS project. Then we connect with DRF (and soon GraphQL).

Simple and easy, and follows the Python mantra of ""Simplicity over Complexity"". Webpack is complex, so the more we can avoid it, the better.

Of course, if you like noodling around with webpack, then by all means use django-webpack-loader. Me, I would rather get tasks done.",1529037654.0
fubarx,"I'm building pretty much this stack. A few suggestions:

-	There are a bunch of tutorials out there. Just make sure they're for Vue.js 2. A lot of changes from version 1.
-	django rest framework is your friend.
-	If building a single-page-app then forget about Django server-side templates. You won't be using them at all.
-	Pycharm is really your friend. You can run two project instances, one for django back end and another for vuejs front end and the two can run simultaneously on the same machine.
-	Test in Chrome. There's even a vuejs plugin that comes really handy. Pycharm also integrates well with it.
-	Look into 'silk.' It's a django addon that helps with debugging REST requests and responses. Really handy.
-	Figure out what kind of authentication you need up front. JWT is pretty decent but take some time and really understand how client-side authentication works. It's a different model than server-side. Any amount of time working through simple examples and getting solid on the concepts is time well spent.
-	Every once in a while do a production build and test it to make sure all the dependencies are there. Then deploy the whole thing to a clean test machine. If there are problems with deployment,  best to catch them early.
-	Consider using docker. Might seem like overkill but handy for making sure deployments don't break.
-	Don't skimp on unit tests for both front and back-ends. This is one can you don't want to kick down the road.
-	Snapshot both front and back end projects often. There are lots of blind alleys and it's nice to be able to go back when an experiment doesn't work.
-	Biggest advice: go pick up a commercial vue.js 2 template with Backbone support from one of those places like themeforest (google for wordpress themes or dashboard and vuejs). They usually run < $50 and are well worth the jumpstart. Eventually you'll want to toss most of it out since they don't actually integrate with a back-end but in the early stages it's great having those examples.

Those are the highlights. All in all it's worth the effort. Best of luck.
",1529040843.0
xtranophilist,"We also use the same stack. Here's my preferences after trying different things.  

1. We loosely couple the backend and the frontend. We even have two different repos for backend and frontend. Backend is a Django project with Django Admin and DRF providing API. Frontend is a Vue.js project initialized with vue-cli. This keeps project maintainable, also helps in stack transition. Each repo can be assigned to different team or developers.

2. For websites where you need SEO and performance, we use Nuxt.js for SSR.

3. Bulma is our preferred CSS framework.

4. For dashboard/backoffice kind applications, use something like https://github.com/creativetimofficial/vue-paper-dashboard . These are cheap and save a lot of time. 

5. We use Vuetify for MIS kind applications.

6. We use Pycharm for backend and VS Code for frontend development. Vetur plugin for VS Code is must for Vue.js development. 'IntelliJ IDEA Keybndings' plugin for VS Code is recommended (for full-stack developer) if single person has to do both frontend and backend development so that key bindings and shortcuts are same across both IDE.

7. Use vue-test-utils with jest for frontend testing. Cypress for e2e testing.

8. Use Vue.js Dev Tools for Chrome.",1529047199.0
pingutuxy,"On our use case, we still use django templates together with VueJs. We use https://github.com/owais/django-webpack-loader
to ease our work.

Basically we use the VueJS boilerplate with webpack already configured. Then we use that library to place the bundles on the django templates. Hope that makes sense.",1529030640.0
abrazilianinreddit,"The [vuejs docs](https://vuejs.org/v2/guide/) are pretty comprehensive and easy to understand, it's a good place to start.

For the back-end, you'll probably want to look at [Django Rest Framework](http://www.django-rest-framework.org/#quickstart). The docs can be a little confusing sometimes, but they are pretty ok. The framework itself is pretty well made and easy to use.",1529026824.0
rizogg,I think as long as Django is providing Json data that has business logic it's up to vuejs or other spa frameworks method of handling data.,1529027551.0
pterencephalon,Sounds like what I'm doing for a side project. Because Django is the only web framework I know and Vue seemed like one of easier newer frameworks if I'm starting from scratch. Too bad none of this has *any* application to my real job...,1529031553.0
kontekisuto,"Vuejs is just a frontend, you will mostly be writing apis for it .. uhm I recommend graphene and graphql",1529025514.0
vcamargo,"I've recently started to take a look in the official docs, they're awesome!",1529055129.0
blacwidonsfw,"The way I would do this.

Field A (unselected )
Field b (unselectable until A is selected)

Put an on change ajax listener on field A. Everytime it changes, load the appropriate values into the select options in field B.   Hopefully the model for field B is stored in a table with a foreign key on Field A then it is a simple query filter to get the values to populate based on the listener ",1529007367.0
yerfatma,Are you using traditional views & POST or a Rest API? You'll want to look at the `bulk_` stuff in the [docs](https://docs.djangoproject.com/en/dev/ref/models/querysets/) as well to avoid firing a save for every row.,1529008833.0
daredevil82,"I'd be interested in reading this case study, thanks!

Specific areas of my interest:

* Why GraphQL over DRF/Tastypie?  How do you expect to benefit?
* How was the library support to integrate GraphQL with views?  
* What were the pain points or rough spots encountered?  Splitting that up between Django and React would be helpful.
* Are you leveraging caching in the browser with localstorage to cut down unnecessary data requests?

I've not used GraphQL at all, but have done a similar project by converting template rendering views to DRF to be consumed by a React app.  It would be interesting to see the similarities and differences in our experiences.",1529065565.0
vangale,Here's a good start: https://github.com/mozilla/django-csp,1529294950.0
pat_the_brat,"> What is the best way to have the DataFrame kept in the backend without saving into database?

I am not sure what exactly you are trying to do, it sounds like [Redis](https://redis.io) might be what you are looking for.",1529010066.0
hhh333,Never heard of such thing.,1528990266.0
fdemmer,fyi: https://edx.readthedocs.io/projects/edx-developer-guide/en/latest/architecture.html,1529011805.0
ThatOtherBatman,The what?,1528998048.0
booooomba,Never heard of it,1528995168.0
mp2146,You should just have tests for payment success and payment fail. This is exactly what tests are for. ,1528980120.0
SenorDosEquis,I actually like the idea of `# HACK`. I have a git hook that looks for `pdb.set_trace()` and prevents commits. I may add  this to it.,1528982465.0
wheezy360,"Anything that needs to be toggled on/off based on your environment should be a setting. Furthermore, I think those settings should come from environment variables. So you're not even doing code changes when you need to toggle those things on or off, you're just changing environment variables on your dev machine (e.g. in a `.env` file).

Example development `.env` file:

    DEBUG=True
    DATABASE_URL=postgres://localhost
    CACHE_EXPIRY_MINUTES=0
    PAYMENTS_NEVER_FAIL=True  # or whatever

Edit: Then in your settings.py file, pull in the values from the env:

    import os
    
    DATABASES = {
        'default': {
            # etc...
            'url': os.getenv('DATABASE_URL'),
        },
    }

    DEBUG = os.getenv('DEBUG', False)

",1528991498.0
flipperdeflip,"If you have different settings file for development and production you can add a setting and if/else on that, or re-use settings.DEBUG.

There is also the checks framework where you can add a custom check but that would run too late, when the process starts but then you already have the bad code deployed and have to roll back really quick.",1528979910.0
arctic_feather,"Writing unit test for functionality is never overkill.

Are you using git? Make your changes on a new branch but deploy from your master branch.",1528980151.0
BrightCandle,"The way I do this is a combination of having a user test that drives the functionality and a unit test that confirms the negative behaviour. I don't purposefully write code that is ""wrong"", but if I did then the functional test would show that something wasn't working and it would fail the build if I had checked it in. BDD is how you avoid these sorts of problems.

It should also be noted that there should be a code review process equivalent in there somewhere as well. Doesn't sound like you are doing agile (that depends on BDD/TDD) so you ought to be doing code reviews and they will catch these sorts of errors. In agile processes we achieve the same thing with pair programming, the second person can keep note of the things you broke and must be changed before commit and ensures all the code ends up production ready.",1528981745.0
notafuckingcakewalk,"# Don't use labeling. Use code logic.

The easiest, simplest way is just to check for settings.DEBUG, which should always be false in production:

    if settings.DEBUG:
        payment_was_successful = False

You can also make it more granular by putting setting up more specific flags in the settings file.

    # settings.py
    # normally the line below is commented out. Uncomment it for testing
    # PAYMENT_SUCCESS_OVERRIDE = False
    # PAYMENT_SUCCESS_OVERRIDE = True

Then, in the code:

    payment_was_successful = getattr(settings, 'PAYMENT_SUCCESS_OVERRIDE', None) or payment_was_successful

Make sure to write unittests for that function with PAYMENT_SUCCESS_OVERRIDE set to True, False, and None and make sure it responds accordingly. You can use the [mock library](https://docs.python.org/3/library/unittest.mock.html) to replace the functionality of the payment gateway itself.",1529000645.0
il_doc,i think you should handle it from nginx (or what you're using),1528973889.0
CKreuzberger,"You ""can"" use the HttpResponseRedirect: https://docs.djangoproject.com/en/2.0/ref/request-response/#django.http.HttpResponseRedirect

",1528977980.0
spapas82,"My recommendation is to create a ``Profile`` model with an one-to-one relation with the ``django.auth.User`` model where you'll store any user-profile related information. Something like this: 
    
    from django.conf import settings
    from django.db import models
    
    class Profile(models.Model):
        user = models.OneToOneField(settings.AUTH_USER_MODEL)
        api_key = models.CharField(max_length=128, )
        # other user-related info

I don't recommend overriding the default User field. Although this is actually supported by Django, it has bitten me too many times in the past to actually implement it anymore. The reason is that some third party apps rely on using the default User model; also, I've experienced very serious problems with migrations of third party apps when using a custom User field. 

Plese keep in mind that you'll need to create that profile yourself after a user has logged in for the first time. There are various ways this could be implemented depending on how you are doing the actual login workflow (if you are using django-allauth for example). One simple way that doesn't need many changes to your existing login flow is to use the ``user_logged_in`` signal, something like this:

    from django.dispatch import receiver
    from django.contrib.auth.signals import user_logged_in
    from profiles.models import Profile

     @receiver(user_logged_in, )
     def handle_user_logged_in(request, user , *args, **kwargs):
          profile, created = Profile.objects.get_or_create(user=user)
          if created:
              pass
              # here you can do any other initializations you want with the profile",1528967222.0
fdemmer,"I never had problems with overloading the user model, but I'd make a separate model for api credentials. you might end up with users having multiple keys or want to keep them a while with explicit expiration date field.

maybe use an encrypted field for the actual secrets. if your sever is compromised that does not help, but stolen backups should be safe.",1528973022.0
nerdwaller,"Others have covered the main pieces, but be sure to encrypt their keys, especially if the keys provide anything beyond read-only.",1528985573.0
supra621,"Take a break and learn databases, I’d say. I’d learned databases before I attempted Django, and that made models really easy.

JavaScript would be good to learn as well, in my opinion. I use a lot of JS in Django templates, so if you were to come back to it at some point, it’s still a useful language to know. With JS being as ubiquitous as it is, it wouldn’t hurt to know for any web-based projects in general.

I can relate to the content seeming foreign. I don’t have a programming background so the docs presented a very steep learning curve to me. My biggest complaint is the lack of practical examples. I wasn’t making a blog, and I wasn’t running a restaurant business, yet those two subjects seem heavily favored in the docs as examples. Hard for me to conceptualize in a lot of cases, but once I was able to apply it to what I wanted to use it for, it got way easier.",1528938743.0
igncampa,"Break down your problems into smaller ones instead of giving it all up.  What about databases are you not understanding? You don't need to go read the Postgres source code, you just need to know how to set it up to work with Django. That's a problem easily solved by googling a birt. From then on understand how to use Django to save and retrieve data from your DB, etc, etc. 

Use Postgres, btw",1528942003.0
Pr0ducer,"Build a thing. Make something for you.

https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04

And definitely break down the work into small chunks. Like, real small. 

www.obeythetestinggoat.com/book/part1.harry.html

This guy, and the Testing Goat, I enjoyed this. 

Have fun.",1528975488.0
,"Start with a very high level book on JavaScript then go through the you don't know js series and pick through a comprehensive tome for any esoteric topics

Get an understanding of REST Ajax etc

Databases. Essential. This will make models easy. You're biggest hurdle here will be learning relationships. You should also learn the language it's entirely possible to have a vague understanding let the orm do all the hard work and get by. This will hurt you in the long run. Some set theory won't hurt either.... Will help you understand joins unions etcetera as well as a deeper understanding of the python set operations.

It might help you to look at Jinja this is technically djangos template for language successor but it's useful for condense info and an understanding that it's really just python. There are syntactic differences but very minimal

I'll link some stuff in a bit for you",1528947018.0
petedee,What do you know already?  What are you looking to do? What are you confused by?,1528946755.0
clamytoe,Try and replicate what you’ve done with Django in Flask?,1528947071.0
wasabigeek,"What worked for me was an end to end tutorial. I used http://www.tangowithdjango.com/ (back then it was free, but I'd recommend buying it) but have also tried https://tutorial.djangogirls.org/en/ and thought it was a good and free (if less comprehensive) alternative.

But yes. Take a break if needed, sometimes the brain needs a break to consolidate info.",1528949215.0
memeingfull,You could start to learn flask. Its more minimalistic and you need to configure more on your own. It also makes you understand the processes behind it which django takes care for you. ,1528983526.0
philgyford,"No one else has suggested just learning more python (you don't say whether you've got lots of python experience, so I'm just assuming not).

Learning more python in a structured way will help you learn lots of basic things (such as how to work with databases) without having to also learn how Django is structured and how to make it do what you want. Plus, of course, when you come back to Django your python skills will be much better so you can just concentrate on the Django bit of learning, and less of the python bit.",1529316166.0
djangoblaster2,"I suggest start with an admin-only app.  Just one model and corresponding admin.

Then look at what is happening in the database.",1529353679.0
jobelenus,Why are you using channels if you're still using wsgi http? Why would anyone use this if they had channels and not just use asgi websockets?,1528975462.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1528935323.0
tagnydaggart,"Did you have a question?

Also, I’m curious why you didn’t move the user_products query into your mixin since clearly both of your views are doing that too.",1528933354.0
Whoopska,"If you rewrote these as list views, you'd end up with get_queryset, which could return the equivalent of user_products and then you could call get_queryset from within the context data for the statistics.

Otherwise, don't worry too much about it and do something like

    class StatisticMixin:
        def stats_context(products):
            ....

    class AnalyticsView:
        def get_context_data:
           ...
           context.update(self.stats_context(user_products))
        ....",1528935781.0
LesterHoltsRigidCock,"Lately I've been keen on placing reusable, common queries in their own module as functions. ",1528940466.0
gratteux68,"As said by others you basically need to choose between 1- DRF API + Vue.js frontend and 2- Django templates integrating Vue.js.

1- DRF API + Vue.js frontend

Backend and frontend are 2 separate parts. 
You need to build an API, it's an additional layer between the client and the data. 
The Vue.js part can be made using vue-cli or Nuxt.js so you get a powerful dev tool without much hassle. 

2- Django templates integrating Vue.js

You can just include the Vue.js lib inside your HTML, thus benefitting the simplicity of Django templates. Your views pass variables to your templates through context, it's easy. But then your app starts to grow and you get this feeling that it's harder than it should be.

For some reason I couldn't make it work with axios because of CSRF (axios should work well with CSRF, don't know what went wrong). I was also using jQuery so using that I could finally make it work.

Then after reading more articles on this subject and realized it's arguably not a good idea to make users potentially download a couple of CSS/JS files per library which is used on the site (using HTTP 1). So I went the webpack route. I had to rethink asset bundling and fiddle with webpack config (by far the hardest part of all this) in order to expose jQuery so that my own old js files could still work, fight dependency hell while trying to just add Less transpiling etc. In the end the journey was rather exciting but I lost much more time trying to build things nearly from scratch.",1528955618.0
isityoupaul,Check out this article: [https://medium.com/quick\-code/crud\-app\-using\-vue\-js\-and\-django\-516edf4e4217](https://medium.com/quick-code/crud-app-using-vue-js-and-django-516edf4e4217),1528930276.0
K1NNY,"Oh boy, do I have some home cooking for you. This is a shameless plug. However, it’s so relevant I can’t pass it up.

I created a lesson, for free, that walks you through this exact scenario step by step. The entire lesson is about creating a single page application using Django and Vue. I [streamed myself going through the lesson](https://youtu.be/0FTaWat_VsM)  and also published the lesson in [HTML](https://blog.bastions.co/lessons/lets-make-an-rss-reader.html) and [Word Document](https://blog.bastions.co/lessons/docs/lets-make-an-rss-reader.docx) formats.

The YouTube video is timestamped using the section names from the lesson as markers. Feel free to work your way through the whole thing, but the most relevant parts to you will be the **Building a single page application** section.

Let me know what you think! I plan on doing more lessons in the future. I had a blast coming up with it!",1528936302.0
nannooo,"There are a few ways you can do this. One way would be to Just include the script in the template and use it. Another wat would be to split the frontend from the backend. With that last option you will basically use Django as an API. Both work, though the second one is easier to handle when it gets more complex.",1528925881.0
ArdentFlogger,"I implemented a third party django app with a vuetifyjs front end: https://github.com/chris104957/django-carrot. Django serves the html, and all the vuetifyjs stuff happens client side ",1528990787.0
forest_250,I join the question. At the moment I'm developing an application on Vue and I want to use Django as a backend.,1528926198.0
ic_97,I have been thinking about this too and what i figured so far is that you have a REST api made with DRF and you consume that api with help of Vue in the frontend.,1528945746.0
rookie101ke,You can set up django with django-rest-framework to have a rest api. Then create a different project with vuejs and axios to consume the api. That's how I use django and vuejs.,1528950416.0
sdiown,I have same system as Laravel has. It is much easier. Registering all component in one Js file and each page has its own but component. ,1528963744.0
elarroba,"Thank you all for your comments.

So based on your feedback what I’m hearing is that for simple, not too complex apps, method 2 in more convenient and faster. It has the draw back of dealing with dependencies and bloated code as your application grows.

Method 1 would be more maintainable in the long run while taking advantage of everything Vue.js has to offer. The draw back is creating an additional API layer for handling http requests between the front end and back end.

One concern that I have with method 1 is SEO optimization. This seems to be a limitation of front end JS frameworks.",1528983477.0
synw_,I have a [django-vitevue](https://github.com/synw/django-vitevue) module that looks close to what you want. It is designed to assemble a Vuejs frontend from different Django modules. The modules embed the frontend parts in templates. You also get a Vuejs mixin with methods to fetch content and post forms (using csrf),1528995250.0
aprx0,"Hey, I don't know much about bokeh dashboards, but AFAIK, bokeh interactive apps have to be executed in a bokeh server. 

Edit: What I mean is that your Django will handle the http request, then you will have to redirect the client to the bokeh server port. You can see examples of how it's made with a flask server in the bokeh source tree.",1528924119.0
Vitrivius,There's nothing here that should cause this to take 500 ms. Are you sure you there's not a cache miss? ,1528921567.0
Watte625,Maybe any middleware that affects only your API views? ,1528929864.0
confused_banda,"If you have logging setup, try setting the logging level for the default handler “django” to Debug level. That should print out the DB queries in the console. Maybe the API view is hitting the DB somewhere?",1528935013.0
PyBet,Is the id field unique ?,1528921268.0
SenorDosEquis,[Read the docs.](https://docs.djangoproject.com/en/2.0/ref/urls/),1528922051.0
andytwoods,Perhaps Detail View isn't best to use here. Formsets seem good. I'd personally custom roll something (pehraps using tables2 and several of them in the same page). https://docs.djangoproject.com/en/2.0/topics/forms/formsets/,1528895265.0
tingshuo,I am. Django is my jam. I Understand the conflict there. I work for a very small company with a lot of autonomy. In the end i wouldn't put salary over happiness.,1528861106.0
,"Me. I tango with Django daily.

Out of curiosity what'd you do. I have tons of Django experience and have bootstrapped so many things for other people but never seem to get around to launch my own startup or products :(

I'm also doing contract work but the company i'm at is full remote so it's not bad.",1528876575.0
codydodd,"Thanks for the inspiring story! I am a co-founder at an an AI company for enterprises and governments. It started as a django project to see if we could automate basic data science analyses on a webpage. A year and a half later, several contracts secured, and momentum building, we now know we're in this for the long-haul :) 

Django is still at the heart of our backend. Although, our front end was slowly detached from it and now we use vuejs. 

I agree with you, this community has been instrumental. I would have never gotten here if it wasn't for some early troubleshooting answers here that even stackoverflow didn't have, for instance. ",1528910071.0
qwer7y,Super inspiring man. More power to you!,1528881689.0
LightOfTheSeven_,"If you don't mind my asking, for 500k, what is the term commitment? Is that 500k per year, or will the gig last like 2 years and that is a lump sum? ",1528893341.0
mbrochh,Aye. Full time serial Django entrepreneur since eight years and no end in sight. Have rejected repeated job offers from Google and Facebook.,1528882927.0
KarlSayle,Me too!,1528870550.0
bwapeup12345,"Should we take this discussion forward in some way? If so, any ideas? Subreddit? Fakebook? I think a place for people who satisfy the following criteria to come together, support one another, and share useful info and advice could be valuable:

1. Hate traditional forms of employment
2. See technology as a means to personal freedom (from various forms of soul\-destroying nonsense that comes with lack of options in life)
3. Engaging in various forms of entrepreneurship and risk\-taking
4. Like to use Django

Ideas?",1528900347.0
TunaBoo,Ditto. Running my SaaS business on Django.  After 10+ years as a developer working for the man.,1528900961.0
PM_ME_TOPOFHEADPICS,Would love to join this club. Back to ffing polls tutorial,1528908425.0
iKoni,"I love this idea.

To get the ball rolling, I made a Discord server called Djangonauts. Join link: [https://discord.gg/2y7ufuy](https://discord.gg/2y7ufuy) . Feel free to join!

I have limited experience and time to moderate the server so a few budding, active Django enthusiasts are needed to moderate it with me.",1528953129.0
bwapeup12345,"Sent the ""Thanks but no thanks"" email today. It feels like having a huge boulder lifted off my chest. Now I can focus my mind on what I really want to be doing.",1529050174.0
vcamargo,"Even though I'm not a full\-time entrepreneur I just wanted to chime in to say that it's actually a great idea and if you feel so, you can PM so we can chat. That being said, I wonder if your current startup idea is already providing for you and your family, if it does, I wouldn't see a reason to return to a 9\-5. Maybe you could find something that is only part\-time.",1528863731.0
iconfinder,Me,1528867797.0
andrey_shipilov,Here.,1528880113.0
proxwell,"Yes, that's my situation exactly.  I've been a python dev for almost 15 years.  Working with Django since about 2010.  I'm mostly retired from the consulting model and running a few different businesses which I've started over the years.  Most of them involve software in some way and Django is my go-to.  I still keep a few consulting clients, but they are selected by being people I like to work with, with good understanding of process, mutual respect, etc.",1528887654.0
lsla24,Checking in - have worked at various startups and have struck out on my own with a Django-based product. Wouldn't trade it for a large company.,1528891084.0
hum3,"Me too
",1528891490.0
njancsar,I am too. I was doing mostly solo-development but as more and more contracts came in (and I realized I couldn't do them all myself) I have migrated to more of a project management role and started hiring developers to do the work for me. I still develop on a daily basis myself though for integrating code and ensuring quality is high.,1528895443.0
andytwoods,Me too. Perhaps we need a Facebook group? Let us know if you create one. I'll be the first to join!,1528895658.0
dhbradshaw,"I am a part timer.  I contract part time, which leaves some freedom to build with the rest of the time.  It's nice to keep the runway growing rather than shrinking.",1528897032.0
thepercept,"I am working on my app idea , self taught . Here's the product in development taskchamp.co",1528897556.0
lost_bodhi,I am a startup founder too. Product made in django . What do you think about django that makes it so entrepreneur friendly?,1528906207.0
ruraro,"I got over my fuckarounditis and made the leap. Out went React/React Native and GraphQL and fancy schmancy SVG animations and in was Django and productivity and actually shipping because that's how I make shit happen and get to pay myself a salary at some point.

8 weeks later I signed my first customers for my unreleased product. 10 weeks later I'm post-revenue, bootstrapping away. On very shaky ground still, but glad I'm standing on my own.

Edit: Slack or Discord, no facebook pls",1528908240.0
darkgrey,"Has anyone started a discord for us? I would like to keep this group, tbh",1528937593.0
thepercept,"How many are self taught here ? I don't have a CS degree, I am a Ux Designer with a Bachelors in Design degree. From the last 2 yrs its always like I have to work more and more in Dango and related tech to get better and I am getting better. Can't go for a graduation again . So not  having a cs degree kind of makes me remind myself daily to work harder ",1528942821.0
Helmite,"Still a bit new to using Django, but it has been a good experience so far and I definitely agree - the community here has been invaluable. 

The entrepreneur angle is definitely appealing though also a bit terrifying. I do wonder if I'd end up in a bad position of not being able to ""step away"" from work in the day. I feel like just being able to do remote would be of a big mental benefit. ",1528944751.0
legendsofevil,"My situation is a little bit different because I recently graduated last month with a CS degree. With that said, right now I am currently learning Django to make a personal website for myself. I am looking for a job, but right now I plan to develop a few projects and post it on my personal website to showcase my portfolio. 

I would love to connect with you if that is possible. Like other redditors here have said, making a Discord group would be a good idea to keep this small group together. I personally have tried using other chat groups from Discord, Slack, and Gitter. I am mostly not very active in each of those groups, but I still want to engage in interesting conversations about Django.",1528949908.0
Nicksil,You should do the [tutorial](https://docs.djangoproject.com/en/stable/intro/) in the Django docs; it covers very near what you're currently working on.,1528857712.0
andytwoods,"Have you checked out https://djangopackages.org/grids/g/forms/.

This in particular looks good https://github.com/barseghyanartur/django-fobi",1528895940.0
pancakeses,"    urlpatterns = [
        url(r'^$', views.product_list, name='product_list'),
        url(r'^(?P<category_slug>[-\w]+)/$', views.product_list, name='product_list_by_category'),
        url(r'^(?P<id>\d+)/(?P<slug>[-\w]+)/$', views.product_detail, name='product_detail'),
    ]

Translates to:

    urlpatterns = [
        path('', views.product_list, name='product_list'),
        path('<slug:category_slug>/', views.product_list, name='product_list_by_category'),
        path('<int:id>/<slug:slug>/', views.product_detail, name='product_detail'),
    ]

Be sure to check out the documentation for path (and re_path):
https://docs.djangoproject.com/en/2.0/ref/urls/

And also documentation about Path Converters (the int: and slug: part of the above examples):
https://docs.djangoproject.com/en/2.0/topics/http/urls/#path-converters
",1528849845.0
oliw,"Both syntaxes are still perfectly valid. Django 2's `path()` has  complications that are quite simple in `re_path()` (aka `url()`). The second urls.py example does use path, so this *is* a Django 2 tutorial.

All that said, you shouldn't shy away from learning about regular expressions. They're bloody useful things.",1528884812.0
hielkew,"No, it is a web framework for Python (programming language).

The inspiration for the name is also unrelated. 

Great movie btw.  ",1528844345.0
coderanger,https://en.wikipedia.org/wiki/Django_(web_framework),1528844536.0
classical_hero,"> The first is booking state change.

POST /v1/booking creates a new booking that starts in editing mode
PUT /v1/booking/<id> changes the mode from editing to whatever. 

Don't include the states in the URL, include them as a variable in the body. The ID can also be included in the body instead of in the URL, I personally prefer the latter because it reduces the amount of knowledge needed to write URLs, views, and tests and reduces the amount of errors since everything is always done in the same way.

> Do I just hack in a ?booking_data=1

Shouldn't this be determined by the API rather than by the frontend? Regardless it's probably better to do extra data as a separate endpoint just to make it easier to write integration tests, and then have the option to re-use the same service method to append that data on the original API endpoint if that is needed.",1528828281.0
dalore,"If using HATEOAS then the correct way is the model provides endpoints to what states it can change it next.

You query the model and like getting a list of properties some of those are actions which is a URL to change state.

That way the model says what can be done on it. That's the concept of HATEOAS in DRF.",1528853952.0
massover,"`Do I just assume somebody is going to partial_update or 'update' the state and I have to validate this? Or should I be abstracting state change to '/bookings/<id>/{cancel,edit,reject,arrived,left}` `etc?` 

if the logic is not a simple update operation you can use [extra actions](http://www.django-rest-framework.org/api-guide/viewsets/#marking-extra-actions-for-routing). sometimes it makes sense/you have to put the logic into the backend/database and it can't be handled with a simple put/patch.

`Do I just hack in a ?booking_data=1, or should I add a separate API view for Users with booking data?`

You can look at [dynamic serializer fields](http://www.django-rest-framework.org/api-guide/serializers/#dynamically-modifying-fields). You can also check out some 3rd party apps that might be worth adding depending on your use case like [drf\-dynamic\-fields](http://www.django-rest-framework.org/api-guide/serializers/#dynamic-fields-mixin)",1528908103.0
dqharris,"Update:

Turn out the other API has the option to pass the username/password in a POST request to generate a header, that returns a login token with some proprietary encryption. So, once a user logs in to my application, they can navigate to another ""login"" form, where they drop in their API credentials. This sends the POST and saves the returned token to the user's profile, without saving anything that was entered in this form. If they don't have this token, they'll get redirected to the generation page on login.

Not quite how I was hoping to solve, but seems to be the a simple and secure option that I'm comfortable with.

Thanks for the help!",1528907876.0
shit_pooster,"I'm extremely new to Django and programking in general so go easy on me!

Can you not hash the password and then the API un-hashes it to check If it's correct?",1528831486.0
,[deleted],1528849998.0
CaptainMelon,"Just a guess: You can also use another debugger, like PuDB, to avoid the SQL generated by pycharm.",1528795950.0
fdemmer,this maybe? https://github.com/dobarkod/django-queryinspect,1529017778.0
UloPe,Wait until PyCharm 2018.2 is realeased (or use the EAP). That allows to turn off (or switch to 'on demand') automatic variable evaluation.,1528846607.0
,[deleted],1528789928.0
booooomba,"Hmmm I'm not sure I understand what the problem is. Generate a UUID, then generate a Barcode from that and display it.

What exactly are you having problems with?",1528788271.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1528774688.0
emilepetrone,HTTPS :) ,1528768092.0
hcxhcx,"Never do scroll hijacking, it's bad UX, and it's really annoying. You don't need smoothScroll.js",1528822848.0
SenorDosEquis,"Nice!

1.	Gotta get that ssl certificate sorted
2.	In your contact form, are all three fields `CharField`s? Email should be an `EmailField` and the message should be a `TextField`. Then they’ll render as `type=“email”` and a `textarea`, respectively, in html.",1528771077.0
r-three,go for django REST now,1528776637.0
wassimseifeddine,"kudos on your progress so far.

feedback :

1. SSL, I guess it's the intermediate certificate you're missing. ( check with provider)
2. Loading speed is bad. Maybe just the provider you're hosting the website on or you're loading a lot of data 
2. The ""READ FULL POST"", does it intentionally flip on hover ( if yes, we need to talk...) or is it just a bug

Keep up the great work!",1528781098.0
academicbadger,Good job on getting to deployment with your blog. Do you have the source hosted anyway if you want some code review as well helpful to show there? Github or similar is popular and definitely worth learning (also very easy to use with python anywhere). ,1528784458.0
nortonbw,"Site looks great! I'm learning Django also. Consider using the newest tool, pipenv, for installing packages and managing your virtual enviornments. ",1528785716.0
SkawPV,"Good job!

Check your Contact page; under 'Address' you have an empty line with one space then Philadelphia in the next one.

P.S: What resources did you used to learn Django?",1528787167.0
academicbadger,!remindme 1 week,1528814879.0
memeingfull,"Really like the design. How about implementing a comment section and a possibility to like/save posts?
",1528984477.0
doughishere,"Hey what did you use to learn the Django? I kinda want to set up something similar but for another purpose. 

Edit: i picked up tango with django.",1531101587.0
Fun2badult,Did you have any programming experience prior to learning python or Django? And are you sure about putting your home address on the site?,1528768609.0
andytwoods,What about caching for x minutes a given view  https://docs.djangoproject.com/en/2.0/topics/cache/#the-per-view-cache,1528782228.0
booooomba,https://docs.djangoproject.com/en/2.0/howto/custom-management-commands/#accepting-optional-arguments,1528726435.0
chris_conlan,"Looks cool, but please fix the indentation on your code samples and add Python highlighting.",1528728332.0
Rorixrebel,"it seems you are trying to also upload your virtualenv to your repo.
you shouldnt.

create a .gitignore file with the contents of -https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore

gitignore basically tells git what files it needs to be ignored, hence the name.
that way you dont push crap to the repo.",1528689387.0
SlumdogSkillionaire,"Not directly related to your issue, but I'm pretty sure GitHub Pages only works with static files or JavaScript SPAs, not Django.",1528689311.0
Nicksil,"If you're authorizing against a third-party OAuth2 host, you don't take the user's credentials. You will redirect the user to authenticate with the service. The service will then redirect back to your endpoint with parameters you'll have to extract w/in the URL to complete the handshake.",1528684115.0
cleancole,Take a look at Django oAuth Toolkit if you haven't already.,1528889098.0
old_faraon,"I just have a property that checks and does a get or create. 


    def set_profile(u, p):
        p.user = u
        p.save()    
    
    User.profile = property(lambda u: UserProfile.objects.get_or_create(user=u)[0], set_profile)",1528685103.0
nannooo,"This isn't a direct answer to your question, but please use AbstractUser and create your own user class. This is best practice and will avoid issues like yours.",1528673259.0
vtbassmatt,"On mobile so not a ton of help. But %5e decodes to ""\^"" (caret) which is a little suspicious given that we typically start URL patterns with a caret. Any chance you've doubled a caret someplace in a urls.py, or accidentally escaped one?",1528663336.0
,"which version of Django you're using if 2.x please change url(... to path(...
https://docs.djangoproject.com/en/2.0/topics/http/urls/#example",1528663191.0
subpleiades,In which browser(s) does this occur? Can you reproduce it in any browser? ,1528666596.0
,"the documentation was pretty simple and understandable
https://docs.djangoproject.com/en/2.0/ref/contrib/postgres/fields/",1528663882.0
emilepetrone,"`ArrayField(ArrayField(models.CharField(max_length = 5000)))`

should be

`ArrayField(models.CharField(max_length=5000))`",1528657857.0
emilepetrone,"Check out Django-cookiecutter Heroku implementation. The Procfile should just be “Procfile”

https://github.com/pydanny/cookiecutter-django

The documentation explains it pretty well",1528644099.0
never_safe_for_life,"I think they're most likely talking about a web connection, so this has to do with nginx/gunicorn. 

20 connections is actually a lot. When a browser requests a webpage from your site it only holds on to a connection for a fraction of a second. Even with a maximum of 5 connections you could probably handle hundreds of users per second without anybody dropping connections. Notice that I'm saying ""per second"" opposed to ""concurrent"". You can only have 20 concurrent connections, but over one second there's actually a lot of space.

You could, theoretically, create a web endpoint that lets you hit this limit easily. If you had one page that was 10MB, thus each user stayed connected for ~3 minutes you would run out as soon as the 20th user starts downloading. But you have to go out of your way to make that happen.",1528666411.0
snuggl,"any interaction with the server is a connection, a connection is active in some milliseconds to seconds depending on the backend code and then its terminated, so think of it more as twenty concurrent users that interacts with the site at the same time.",1528641086.0
rubeon,"In practical terms, it probably doesn’t matter. The creation of objects is covered in Django’s own Test Suite; otoh it wouldn’t take long to write your own test. 

In philosophical terms, I definitely think it would be the wrong approach. To really cover everything with your own testing, you’d need to write tests for every possible ORM operation, not just creating and saving. 

",1528638527.0
nkuttler,"> If the code in question is built into Django, don't test it.

This is correct, but it means not to write tests to test Django itself. Your own tests will almost always use the ORM anyway. So, no, do not write a test that just saves an object. Write a test for its form though, or for custom behaviour it has. That will involve saving one.",1528624195.0
colly_wolly,"""Creating an instance of a model"" and ""checking if the count increased by one""  will be tested by Django itself, so I see these as ""testing for the sake of testing"". Its not going to provide you with anything useful over Django's own test suite. Unless you are doing something unusual like adding a custom model manager. 

What do you expect to gain by writing these tests? Do you really think it is going to make your code better?

If you have custom model methods then those would be worth testing.",1528644496.0
Etlam,"I have a rest API, and i have tests that verify api endpoints, those tests will catch if it is unable to create objects. Any test you write you will have to maintain.",1528639348.0
issue9mm,"The answers here are right, but I feel like some examples might be helpful. 

A typical use case is an app that has users, and the users can submit things. Users can edit their things, but not other people's things, but maybe an admin user can edit everybody's things.  So, some good tests for your applications might be: 

* Create some different users
* Each user creates some things
* Create an admin user
* Ensure that users can see all the the things created for viewing
* Ensure that if a user tries to edit somebody else's thing that he receives an authorization error
* Ensure that if a user tries to edit his own thing, that edits successfully
* Ensure that an admin user can edit his own things
* Ensure that an admin user can edit other people's things without receiving an authorization error
* Test that a user who could not edit somebody else's thing earlier can edit that thing if he is promoted to admin
* Test that the newly promoted admin cannot edit someone else's thing after his admin privilege is removed

Etc., etc. 

You're not testing just inserts and updates, but you're making sure that the logic you wrote gets tested, which probably requires some inserts and updates and whatnot.  If users have things they can create that are private, you'd want a test that makes sure other users can't see it.  If users can create things with limited visibility to a group, make sure that you create some groups and verify that other users can't see it, and that only members in the correct group can.  That sort of thing. 

The short answer is that you want to make sure that your tests prevent against embarrassing failures, like all private data being visible, or everybody being able to edit things, but you also want to make sure that ""thing a"" still works even when you're changing unrelated code, which is the number 1 thing people screw up. ",1528643349.0
sur0k,I usually cover my code on the view level. In that case you're forced to create all the model objects to test view logic. I think that testing models is a waste of time,1528648626.0
athermop,"We use lots of mixins or abstract models.  The mixins have thorough unit tests.

On each of our models, we use tests that use isinstance to make sure we're implementing the correct mixins.

Same goes for validators.  using `Model._meta.get_field('whatever')`, we check to make sure the correct validators are configured.",1528657881.0
Cictani,"if you have Validators on your fields it is good to test if they work with several test cases.

In one of my model I have some properties which output a string. For example I have min and max temperature \+ unit in my model if I call the temperature\_str property it should output for example:

""30 °C"" (if only min temperature was set)

""30 °C \- 35 °C"" (if both min and max temperature) was set

""No information."" (if both are None)

So you can write a testcase in which you fill the model with different combination of temperature values and units and check if the output is as expected.

Also min temperature may not be larger than max temperature so you could test if the models throws a ValidationError when this rule is violated.

I also have a property which outputs a a list as a comma separated string, so you could also test if that works correctly etc.

Basically every time you added some logic to your model you should test it.

if your model only consists of some fields, with no Validators and no other custom logic I don't see any point in writing a extra testcase for that...",1528718564.0
BuyHighExpire,What errors are you getting? ,1528601309.0
piotrulu,"Check out tutorial from Django girls. I believe it's called ""your first Django app"" it also has extension so check it out too. Show us your site when you finish :-)",1528612384.0
Ginko87,"There is an excellent set of tutorials here: [Django for Beginners](https://djangoforbeginners.com/) which is partially free, the free modules show you how to do exactly what you are asking.",1528626456.0
ruler01,"just an advice, to ask for help, please provide as much information as possible. at least the error that it gives when you execute the command",1528673598.0
JimH10,The [Mozilla pages](https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web) are a good place to start with web stuff.  Enjoy yourself.,1528587795.0
njancsar,"You should probably do more research. With Django you still use html in the templates. This is how websites work.

Just... What?",1528587515.0
This--Ali2,"Django is a framework which does heavy lifting stuff of *website building process* for you.


Every website needs frontend and backend.


## This is how it works in Django

**Frontend — Templates:**

Uses HTML. 

You write simple HTML code to design *how the website looks*.

**Backend — views.py:**

Uses python.

You write simple/complex python code to design *what the website does*.


——————

This was a really basic rundown of Django.

You will find much better and clear tutorial on YouTube which teaches you from the ground up!


How are you going to learn Django? I mean the source, I am interested in learning that!",1528588244.0
legendsofevil,"Read this.

https://djangobook.com/tutorials/django-overview/",1528599729.0
btbam06,I suggest learning the fundamentals of how websites work instead of jumping into a framework. This question reminds me of an outsourced India developer that I worked with. Lacked any fundamental understanding of anything and was trying to dive into a modern framework. ,1528614384.0
m1kolka,"Make sure that you understand how alias works and that the final path has been built properly. Logs can help you with it. Also I recommend to read about difference between `alias` and `root` directives. In short:

* One of them removes the part you specify in location. So [`http://example.com/media/foo.jpg`](http://example.com/media/foo.jpg) becomes `/home/UserImgs/foo.jpg`
* Another concatenates location and your path: [`http://example.com/media/foo.jpg`](http://example.com/media/foo.jpg) becomes `/home/UserImgs/media/foo.jpg`

You might also want to have a look at `try_files`, if you want to handle 404s nicely (pass requests to the app or serve a default file from nginx, for example).

Hope I pointed you into the right direction.",1528575662.0
wassimseifeddine,I would check permission issues in your case,1528585548.0
sdiown,"RemindMe! 10 hours ""burayada bak la""",1528585687.0
imsearchbot,Try reading https://overiq.com/django/1.11/django-form-basics/. ,1528573741.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/djangolearning] [Help with ModelForm and accessing related objects](https://www.reddit.com/r/djangolearning/comments/8q2evd/help_with_modelform_and_accessing_related_objects/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1528652603.0
jefwillems,"For the permissions, i would check the official documentation. There are plenty code examples.
Angular 5 services work just the same as with any other rest api, so that's probably an easy find as well",1528592629.0
btbam06,"I actually am in the middle of building an app with the same stack.

I am certain there is a way for the Django app to serve the Angular assets, but my preferred approach is deploy the Django app 100% independent of the Angular front  end. Then I i build and deploy the Angular front end and hit the restful APIs of the Django app. This allows me to build clients in any technology (Angular, iOS, Android, etc) and hit the Django app. ",1528614592.0
lzantal,Without seeing your code especially the Form there isn’t much anyone can help you with. ,1528561459.0
simonagamero,Did you run makemirgrations and migrate? ,1528563706.0
academicbadger,"Have you checked if it’s marking user as active in your create_user helper method? 

I’ve got some basic tests for an authentication model to check for this. Can see how I’ve done them here:-
https://github.com/shiftypanda/course-booker/tree/master/authentication/authentication_tests

Well worth making a unit test for creating user and then functional test to check it worked with selenium. If you’ve not looked before https://www.obeythetestinggoat.com is fantastic for how to write and make testing in python. ",1528561375.0
booooomba,"There are loooooooooads of step-by-step video tutorials on Youtube about this. Just follow them.

Here is just one out of many examples: https://www.youtube.com/watch?v=609pxEMfung",1528544191.0
oBegas,"On the foreign key definition you need to add another parameter

    requester = ForeignKey(User, related_name='requests', on_delete=models.CASCADE)
[
from the documentation](https://docs.djangoproject.com/en/2.0/ref/models/fields/#django.db.models.ForeignKey.on_delete)",1528545743.0
PawelDecowski,"Bear in mind that adding `on_delete` to a `ForeignKey` field doesn’t add the constraint on the database level. Rather, it emulates the behaviour in code so that it’s available in database systems that don’t support it.",1528562239.0
,[deleted],1528529037.0
genmud,"This is fairly well documented in their release notes. I have found most upgrades aren't too bad, the only issue you might have is with plugins or third party apps.

Most changes don't break things and you will get a deprecationwarning if they are scheduled for removal. The only way to really verify that your app is upgradable is to test it.

Why are you using 1.11 for a new app?

[Django 2.0 Incompatible Changes](https://docs.djangoproject.com/en/2.0/releases/2.0/#backwards-incompatible-2-0)",1528514976.0
Lt_Sherpa,This document describes the upgrade process: https://docs.djangoproject.com/en/dev/howto/upgrade-version/,1528515606.0
Investisseur,Honestly it’s pretty painless. All your code will work out of the box by upgrading. It will also warn you with depreciation warnings if any big problems. Migrating to the new path schemes should take like 20 minutes if find and replace all ,1528514386.0
craa,"It looks like you have the urls defined in the wrong order. Django will hit them in order and use the first that matches. 

In your case your new comment url matches the article detail url. Make sure the longer, more detailed urls occur first if they have similar starts. 

Edit: if you add a trailing $ to the detail view it would also work. The issue is your regex is only matching at the start. ",1528505431.0
,"I think you made your URLs messy, please follow the documentation 
https://docs.djangoproject.com/en/2.0/topics/http/urls/#including-other-urlconfs

    urlpatterns = [
        path('<int:pk>', include([
            path('newComment',views.ArticleDetailsView.as_view(),name='articledetails'),
            path('',views.ArticleDetailsView.as_view(),name='articledetails'),
        ]),
        path('new', views.new_article, name='new_article'),
        path('', views.IndexView.as_view(), name='index')
       )
    ]
",1528664816.0
igncampa,is there any reason you are using Django < 2.0? 2.x makes it easier to handle urls without the need for regex,1528504435.0
amizya,Maybe the uppercase in newComment ?,1528505722.0
Unchart3disOP,"I have solved it but now I am having an integrity error, how could I set a foreign key when enter a form, I want it to be set to the <pk> in the url",1528506124.0
EpokeWeb,"Django-allauth do exactly what you want. It's easy to add and it deals with everything (password reset, templating, validation, social logins, email validation)

I use it in all my projects and it's really good!",1528501153.0
TheFilipLav,"It's quite easy once you get a hang of what you're supposed to do, checkout my [lightweight authentication app](https://github.com/Bayoslav/Django-Authify) 
I think it'll help you.",1528501098.0
xBBTx,"I've rolled my own, based on what Django already gives me. For all projects since then, I've used django-allauth and it's an absolute killer app, so much that I plan to replace my own solution with django-allauth.",1528555837.0
warrior242,I was wondering what the benefits to writing the registration yourself vs using a package,1528502395.0
marmaladeontoast,"It's definitely not a trivial task, especially if you want to customise anything. Definitely look at allauth though, and use the #django channel on irc, you'll get better help than on reddit",1528524356.0
bukens,"Unlike others ill say that registration is very easy task and a great first\-time project. The first thing i did myself was creating custom user model, with email as username and registration that requires email confirmation link. It took me some time but it was so worth and in the end, very easy task... the rest things i do now in Django is really easy.",1528530230.0
jonknee,"Fixtures could work, but for your initial data you probably want a [data migration](https://docs.djangoproject.com/en/2.0/topics/migrations/#data-migrations). 

Using the example there you would end up with a function something like this:

    def populate_users(apps, schema_editor):
        User = apps.get_model('auth', 'User')
        Test = apps.get_model('yourappname', 'Test')
    
        for user in User.objects.all():
            test_obj, created = Test.objects.get_or_create(
                user=User
            )

That would create a new Test object for each user. Obviously you could choose to populate more data at this time, but that's the general idea.",1528500432.0
Groady,Google 'django fixtures' ,1528500089.0
jonknee,"For starters you could simplify things in the template by using something like data attributes instead of different click handlers. Something like this:

    <ul id=""myList"">
    {% for item in items %}
        <li data-type=""{{ item.type }}"">{{ item.content }}</li>
    {% endfor %}
    </ul>

In the click handler check for the data attribute and do something depending on what it is. In your stylesheet change the color based on the attribute. It looks like you're using jQuery, so you can easily forget the onclick attribute and just bind to the list. 

[Here's a demo](https://jsfiddle.net/aozgLfr2/), sans the Django portion but it should be easy to follow. If the templating for the items is different it might make sense to just create the whole thing in JS instead of templating the initial list.",1528496786.0
porksmash,Dumb question - have the sessions actually expired? It will only clear expired sessions. ,1528482887.0
askox,"There is no functionality in django for this that I know of. You could use [lxml etree](http://lxml.de/tutorial.html) to parse the fields and edit the xml files.
Would not recommend using xml files for this purpose though. Using a sql or nosql database would be much easier. So do your self a favor and use a DB if you can. Django has a really good ORM system.",1528470940.0
opa_,"The documentation is in the Django repository under ""docs"" directory. You have to fix it yourself and make a pull request on GitHub (see https://docs.djangoproject.com/en/dev/intro/contributing/ for more information on the whole process)",1528453438.0
defmacro-jam,Fix it yourself and submit a pull request.,1528452295.0
Bealz,"Use the official bug tracker to submit a documentation error, mark it as being about the docs and then propose your fix

https://code.djangoproject.com/newticket

type: bug, component: documentation.",1528473068.0
brylie,"PR opened:

https://github.com/django/django/pull/10036",1528473548.0
flipperdeflip,Here https://github.com/django/django/pulls via https://github.com/django/django/blob/master/CONTRIBUTING.rst,1528453510.0
qwer7y,"Hey guys. Was unwell this past week. Only seeing your comments now. Thank you so much for your time! Will get cracking on this as soon as I'm back working. Thanks u/opa_, u/defmacro-jam, u/Bealz, u/brylie, u/flipperdeflip",1528870640.0
cakeandale,"It's a shot in the dark, but I ran into a problem before where password reset only sends emails to [active accounts with a usable password](https://github.com/django/django/blob/e0d0fc0b14ccade00b30a7fbdb1c720ddd83bb71/django/contrib/auth/forms.py#L257-L261):

        active_users = UserModel._default_manager.filter(**{
            '%s__iexact' % UserModel.get_email_field_name(): email,
            'is_active': True,
        })
        return (u for u in active_users if u.has_usable_password())

If the account you're testing with hasn't been activated or set up with a valid password, that could explain why you're getting normal emails but not password reset emails.
",1528459173.0
mroximoron,"Nothing comes to mind.

But install the ipdb package and use it to debug the problem step by step, no other way than to find the point in your code where it fails (silently)",1528458108.0
PetterOfCats,send_email has a keyword argument fail_silently. By default this is set to True. Try setting it to False and follow the stacktrace. ,1528474927.0
i_jbo,"\_str\_\_() which tells the python interpreter how to represent your object as a string. Whenever we try to convert the object into a string or when we want to print out that object, we can use \_\_str\_\_()

we can use \_\_str\_\_()method to customize the way it looks when we display the object using the print() function.

`class Dataset:`

`def __init__(self, data):`

`self.header = data[0]`

`self.data = data[1:]`

`def __str__(self):`

`return str(self.data[:10])`

`nfl_dataset = Dataset(nfl_data)`

`print (nfl_dataset)`

in this case : It will print the object data as a string so that you can look inside the object.",1528455079.0
Olick,"The str function is for django admin. In your django admin you will see ""Choice object (1)"" or something like that per default.

In your case you will see the choices text.",1528447209.0
daredevil82,"use a many to many relationship, no need for a genericforeignkey

https://docs.djangoproject.com/en/2.0/topics/db/examples/many_to_many/",1528454570.0
cakeandale,"If each remote model has only one address, you can [use related_name='+'](https://docs.djangoproject.com/en/2.0/ref/models/fields/#django.db.models.ForeignKey.related_name) turn off reverse look-up, so the three models can each point to address but not vise-versa. If you want to support them having multiple addresses, though, you may want to go the route of a many-to-many table using a generic foreign key.",1528493975.0
i_like_squirrelz,"What part is the one to many? One to many means ForeignKey field. Each address is connected to EITHER a customer, employee or vendor?  If that’s the case, a content_type would work. 
That said generic relations are a huge pain, and I only use them when there are really no other options. In this case, I would use M2M as others suggested on the Customer, Vendor, Employee models.  This won’t enforce that each address has one and only one of these connected models. You’ll also have different related objects on Address for each connected models.

I don’t know your use case, but it’s conceivably likely that some vendor, customer, employee might have the same address (perhaps a husband and wife customer or employee), which makes your choice easy, use m2m. ",1528567082.0
Nicksil,"That's how you do it.

So, something else must be amiss. Post the execution code.",1528434699.0
tanboon,"If I have understood you right, I'm not sure that's possible. I think the best way to do what you want is make the product details link on the product page point straight to the product details url with those parameters. You'd do this when you first render the product page",1528446419.0
Rorixrebel,Nice tutorial. Better explained than the original docs.,1528433660.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1528401649.0
ThatOtherBatman,I've never understood the train of thought that makes anyone think that the best way do deliver a bunch of content like this is a four hour video. ,1528399048.0
japanfrog,"None of that is specific to Django. That tutorial is a generic react consuming a rest api. The title made me think it was some server side rendering using Django templating or jira.

Edit: This is a Django subreddit, if you disagree with an opinion, voice yours. Downvoting because you don't understand or misinterpreted what someone says doesn't contribute to the conversation at all, and doesn't help someone in the future who comes here looking for references to learn django.",1528395936.0
will_r3ddit_4_food,I will get downvoted.... I don't get the hype for react. I use it at work and in my opinion it adds complexity with no benefit. It's easier to just render the pages through django templates and avoid react altogether. SPA sites also have the problem of easily saving bookmarks or sharing URLs./rant,1528412841.0
Cictani,"I haven't watched all just part of it of course, but so far this video looks very good, thank you for sharing.  


I was thinking about changing my fronted from Django based templates to react but I looked at nextjs. Reactify is just client side, isn't it?",1528399257.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1528378211.0
masahazen,Seems very good. I will wait for the others parts! Keep the Tutorial!,1528378907.0
,[deleted],1528373112.0
daredevil82,"assuming this is coming from a URL like `someapp.com/api/v1/user`, why would you want to have it nested like that?  what sort of usability increase do you expect to get?

And you can use a map function with the array with the response.    So one part of what you expect to get from this is invalid.

Regardless, you'll have to make your own implementation of `list` in your view.  The default implementation is at https://github.com/encode/django-rest-framework/blob/master/rest_framework/mixins.py#L35, and you'll have to do something like 

    serializer = self.get_serializer(queryset, many=True)
    data = {users: serializer.data}
    return Response(data)",1528370807.0
GHDpro,"PyCharm.

I'm using it with Vagrant (automatic integration of a VirtualBox instance on which the Django app is run). But using Docker is also possible. This makes it possible to easily build and test for my target platform (Ubuntu) on Windows.",1528342200.0
tibb,"I think less important than the editor you choose here, is to develop locally instead of live on webfaction.

You can run your app locally, and see the error log in your terminal, or in your browser (or via curl or a unittest if it's only an api), instead of looking at the live server logs.  

I'd recommend using Github to push your code to, then to deploy live you can ssh into webfaction and git pull your updates.",1528344457.0
28f272fe556a1363cc31,"I use Pycharm pro. I have it set up to use an interpreter on a remote machine, and have it auto ssh code changes to the remote machine. 

In Pycharm I start the Django project running on the remote machine. It detects code changes and restarts the server. I can set break points anywhere in the code. Errors show up in the Pycharm console. ",1528342453.0
srwalladge,"Vim.

Btw an IDE or new editor isn't going to solve your current problem of copying back and forth over ssh... You need to rethink your workflow.",1528354841.0
SomeShittyDeveloper,"If you get the PyCharm Professional Edition, it has Django and deployment support. It can automatically upload files after you save too, if you want.",1528342257.0
supermario182,"i always end up using eclipse and their python django add ons whenever i end up working on this kind of project. but its always a huge pain in the ass to setup. first it cant find pythong, so you fuck around with it, then it cant find django so you have to fuck around some more. then you have to deal with some other eclipse bullshit and you get to fuck around with it even more. ",1528350384.0
synw_,"PyDev (an Eclipse plugin) does the job. Jupyter notebooks with django-extensions are great for prototyping: the notebooks run in the Django context

Like others said it is much better to develop locally and use a version control system rather than working directly on the server",1528351034.0
IAmACentipedeAMA,"i use atom, i havent though about using an ide honestly... dont know if its better or not...",1528351249.0
shacker23,"After using Atom for a couple of years, I dabbled with PyCharm but found it clunky and inelegant. Had been hearing great things about VSCode and switched two months ago. So slick, elegant, and fast. No complaints. As much or as little IDE as you want. Can't believe I'm raving about a Microsoft product, but  it is open source, and it has all the Python and Django extensions you could want. Loving it.",1528354514.0
iconfinder,Pycharm ,1528355192.0
ytklx,It's handsdown PyCharm. Django support requires the Pro version though. The only thing I dislike about PyCharm is its markdown support. I use VSCode for that.,1528358012.0
speedahs,"Spacemacs  

You could use tramp for remote coding but try to rethink your deployment model and be able to run everything locally.
Look into docker-compose.",1528381434.0
ryangallen,"Emacs!

jk. I just use Atom for a code editor. Vagrant is great for a ""server like"" dev environment. 

You should definitely learn to use (Circle|Travis|GitLab)-CI to automate deployments to Webfaction/AWS/Heroku/etc.",1528345674.0
btbam06,Pycharm FTW,1528345256.0
lzantal,I used pycharm for python but once I started using VSCode for JS instead of sublime I switched over to it and never looked back.  One I have one editor for anything other than iOS and Android. ,1528350038.0
tquinn35,"VS Code

I have been using VS code for a while now for my almost all my projects and it handles Django fantastically. I know most people here are all for pycharm but let me play devils advocate a point out a couple things I see as disadvantages.  I used pycharm before VS code and it is a great IDE with a lot of cool features but to me it does not make sense to use such a single focus IDE. This means you need pycharm for your backend and webstorm for you front end if your using a js client for the front end. This seems kind of redundant why not just use one  editor for both, you can set it up just how you like it and that way all your environments have the same feel. VS Code gives you a workspaces option that allows you to only enable plugins that you need for your current environment which keeps things light weight. The second is plugins, while pycharm is full featured and well maintained, I still think plugins are the way to go. There are tons of them and they give you the flexibility to choose only what you want/need, keeping everything light weight. Imo plugins .bring better features than pycharm. Also its free and open source which is great.",1528354435.0
bdreadz,+1 PyCharm.  The debugger is amazing.,1528352228.0
daeatenone,"Used to use eclipse, moved to atom, now using sublime 3, personal preference. Don’t mind pycharm, but sublime has grown on me. ",1528352441.0
manowar689,"You should write a script to copy Dev contents over via scp then run a startup command locally, or run a docker container for Dev, then submit in stages",1528357726.0
l0ngd43n,https://ideaserver.pro/,1528359829.0
thebooo,I really like liclipse. Not fond of pycharm..only the pro version really has the goodies for django. Im a cheapskate and doesnt make sense to me whne liclipse/pydev has all the features pycharm has anyway.,1528368724.0
shabda,"YOu should look at this:
https://realpython.com/python-ides-code-editors-guide/",1528392236.0
shit_pooster,PyCharm all the way. It's fantastic.,1528400589.0
aphisosys,"VisualStudio hands down.

After that, either PyCharm, Atom, or Brackets.",1528446714.0
jward,The best answer I can give you which would fit into your existing workflow is to use an scp client that allows live editing.  Something like Transmit or WinSCP.  It uses an ssh connection to let you edit remote files locally.,1528500495.0
memeingfull,"If you have 8gb+ free RAM  and 2GHZ+ go with PyCharm otherwise use Sublime or Atom etc.   
The problem with those big IDE is that they block your workflow if you dont have enough power on your computer. Everything gets slow and buggy. In this case use a light editor. If you know vim and its awesome keybindings, definitely go with vim! You can also customize vim with code highlighting and so on.   


If you know what you are doing take a look at EMACS, you can implement everything into it and build your own IDE. Its Richard Stallman approved ;)",1529589205.0
mozumder,"I use Xcode. Don't have to pay for PyCharm and it has perfectly fine Python & Git support.  I publish from Xcode to my local Git host, and for my deployment server, i git pull whenever I need to deply.",1528350699.0
netok,"Any good Pycharm tutorial? I have been using Pycharm pro for sometime but I still feel like I am just scratching the surface, not getting the most out of it(or IDE in general). The only 2 functions I understand and use is auto-indent and debugging with breakpoint.

Or put it in another way: What functions do you use on Pycharm that are not found in a vanilla text editor?",1528354249.0
wasabigeek,Perhaps you could use [SerializerMethodField](http://www.django-rest-framework.org/api-guide/fields/#serializermethodfield) to generate the required attributes? ,1528336549.0
TheWheez,"http://www.django-rest-framework.org/api-guide/serializers/#validation

Also perhaps field level validation",1528347138.0
elarroba,"You could use the **get\_serializer\_class()** function available on the **GenericAPIView** class of the REST Framework to dynamically choose the serializer class to use.

Make sure to pass in any relevant kwargs neccesary to return the right Serializer class.

[http://www.django\-rest\-framework.org/api\-guide/generic\-views/#get\_serializer\_classself](http://www.django-rest-framework.org/api-guide/generic-views/#get_serializer_classself)",1528386833.0
flipperdeflip,"django-countries has most data hardcoded in python, because countries don't change that often. basketball would probably be more dynamic.

anyway, information database apps are as difficult as the complexity of the datamodel and required user interface and api interaction. 

so a simple read-only basketball team information api that pulls from some public data source is not difficult or time consuming, especially with rest framework. 

but if you want cool widgets and lazy loading selectors and statistics and everything it is a lot more work. you see in django-countries that a lot of the code is infrastructure for the widgets.

so how experienced are you and how much time you got?",1528358538.0
daredevil82,"before you do something like this, consider _where_ the data is going to come from.  as /u/flipperdeflip stated, country data can be hardcoded because its static.  For sports data, you'll have to get your data from a service.  Which service, do they have a free tier, how much does the plan cost, and what do the TOS let you do with the data are all things you will have to evaluate.

",1528370962.0
unklphil,"You could try using [django-debug-toolbar](https://github.com/jazzband/django-debug-toolbar) which can show you which queries take the longest, and which queries are called multiple times.",1528313324.0
keturn,"You could grab the [Early Access Preview of PyCharm 2018.2](https://www.jetbrains.com/pycharm/nextversion/), which [makes the debugger less eager to evaluate variables](https://www.jetbrains.com/help/pycharm/2018.2/variables-loading-policy.html).",1528333978.0
SignificantTomato3,"Let's explain the core differences between Saleor and Oscar in the first place.

Saleor, as a forkable storefront, was built with fully customizable experience in mind. Our goal was to get rid of overriding and encourage people to edit the code directly. Logic is chunked up into the separate libraries (prices handling, taxes, addresses internationalization & validation..), this way you can tailor it up to your needs, your code stays clear, and you're still able to upgrade the external dependencies seamlessly. 

Oscar, on the other hand, was made to be used as a framework, customizations are made by overriding its parts with your own code.  As the project grows, you will customize more and more,  at some point you'll realize that most of the underlying framework is already replaced with your custom solution,  it takes an effort to upgrade such a codebase. The fact that it's built on top of the Django complicates things up sometimes.

If you want a tailor-made e-commerce site, a framework might not be a right starting point. Instead, pick a solution that doesn’t aim to solve all the problems, but a decent skeleton providing the core functionalities, no need to reinvent the wheel. 

If I were you, I'd pick the closest one to what you want for a start, then fork it and modify to your heart's content. Such approach guarantees that the codebase stays clear and understandable to anyone already familiar with the underlying web framework.

However, if you don't have much in the way of expectations(unusual business-related logic etc.), it might be easier to plug Oscar in, due to its framework nature. 

You should also consider the potential gains that each solution brings you.
I'm not following Oscar's features, but there are several things that Saleor can do for you, eg. geolocalization, multilingualism, taxes, multiple currencies, discounts, order fulfillment, SEO Tools, user-friendly dashboard (we don't use Django admin), ...

Might happen that reimplementing sales funnels will take less effort than adding few other features that you'd gain by switching. Depends on what are your needs.

I'm part of the Saleor team, happy to answer any questions you might have.",1528319626.0
accraze,"I was in a similar position a few years back and eventually went with Oscar. It can be a great framework once you understand how it (and Django) works, however, there was a fairly steep learning curve to get everything working. There are a ton of built-in features which can be helpful, but just be willing to spend ~6 months before getting totally comfortable with Oscar.",1528307868.0
fdemmer,that would be a cool feature for www.djangopackages.org,1528285234.0
spapas82,I've also added a better UX for the compatibility matrix @ https://django-package-compatibility-matrix.glitch.me/ ; it should be immediately be updated with any changes to the original github repo.,1528294578.0
charettes,"Isn't it something you could semi-automate by using pypi's releases API based on packages classifiers?

For example look at the *Framework* classifiers for `django-sundial`

https://pypi.org/project/django-sundial/

https://github.com/charettes/django-sundial/blob/ee9dd68c209732ba70affe42056add8446bcb667/setup.py#L24-L27",1528338106.0
i_like_trains_a_lot1,"My personal rule of thumb is that template tags should never touch the database and they should only handle rendering things that are already prefetched.

The view is responsible to gather all the required data for the view and template tags are responsible to render that data in the desired manner.

It keeps my code and logic more readable and easier to understand.",1528271530.0
PyBet,"The main motivation for looking at custom template tags is that I have a HTML snippet that I use a few times in different pages and views.

The only thing that changes in that HTML snippet is the data that are calculated by the view.

It gets really messy trying to change something.",1528274311.0
SenorDosEquis,"The only place I like to use tags like this is in base templates. If I have a notification count badge that should show up in the header, I don’t want to calculate that in every view that has that header. It’s too tightly coupled to do it that way. A template tag is perfect for that scenario.",1528259090.0
elarroba,"Technically you can go either way but these are some things I would consider between view and template tag:

- Database Impact (i.e prefetch data)
- DRY code
- Logic visibility. (i.e views are more explicit about your intent)
- One-off vs repetitive action.

",1528333105.0
dalore,"Having them as tags/filters makes them easy to use in other views. They also don't make a call unless used (downside is if used multiple times it will make multiple calls but can work around that). 

Means you can keep your views generic and basic without loading up on custom context vars.",1528246179.0
tagnydaggart,"I'm not 100&#37; following your code (I suspect you're not showing all of your View code here), but I wonder if your problem is that you're not calling save\_m2m() but need to. Have a read here: [https://docs.djangoproject.com/en/2.0/topics/forms/modelforms/#the\-save\-method](https://docs.djangoproject.com/en/2.0/topics/forms/modelforms/#the-save-method).",1528247830.0
5awaja,"I know this doesn't answer your question, but do you absolutely HAVE to use a m2m relationship. maybe I don't know enough about databases but I can't think of any use case a many-to-many relationship is better than an associative table between the 2 main tables. I would think whatever problems you have would be easier to diagnose and work through with a better schema.",1528238070.0
coderanger,"Short answer: no.

Long answer: nooooooooooo.",1528234738.0
ckinsey,"`git rm --cached db.sqlite3` and then rebase or merge with your other feature branches.  Keep the database on disk but not in version control.   Your database is being wiped because the other branches are removing the file on checkout.
",1528236934.0
hilmar8,"Personally, I would suggest using fixtures when possible. I usually the same ones that my tests use. https://docs.djangoproject.com/en/2.0/howto/initial-data/. You can even use 

    python manage.py dumpdata --exclude contenttypes > initial_data.json

 If you want to load your current database into fixtures.",1528230612.0
genmud,"Like other folks said, never version control your sqlite DB. If your looking for creating initial data in your data, you will want to look at fixtures/loaddata or manually add to a migration.

I use fixtures when I have something in an app that needs to be loaded, lets say categories or an initial data load... or if you want to dump data from your production app and you might be using a different storage engine on your dev stack.

https://docs.djangoproject.com/en/2.0/howto/initial-data/
",1528513029.0
dalore,Conflicting thoughts? It's a pretty unanimous no from everyone.,1528246494.0
globalnamespace,"Really looking to call to shell instead of using hashlib?

    import hashlib
    hashlib.sha256(password).hexdigest()",1528225947.0
28f272fe556a1363cc31,"sed and the bash command line are awesome tools. I say that so you don't think I'm just blowing off your questions. 

IMHO Trying to run a bash command inside a Python script is one of those ""working harder to avoid work"" situations. One of your commands is probably returning an error, but because you've wrapped it in python you're not getting all the information back.  

tl;dr: Rewrite the command in python. ",1528221629.0
calabresi,"I think /u/SymbioticBadgering hit the nail on the head, but I also wanted to add that the shell called by python's interpreter might be different from bash, unless you specify the shell explicitly using `shell=True`.

Here's a code example that I wrote last week for this problem:

```
call([""sed -i '1d' {0}*.js"".format(tweet_path)], shell=True)
```

My call didn't work until I added `shell=True`
",1528231561.0
new_learn,"Thanks all for the responses, i get it working through this command

hashlib.sha256(password.encode('utf-8')).hexdigest())
",1528264206.0
SymbioticBadgering,"Pass shell=True to check_output
From the docs:
If shell is True, the specified command will be executed through the shell. This can be useful if you are using Python primarily for the enhanced control flow it offers over most system shells and still want convenient access to other shell features such as shell pipes, filename wildcards, environment variable expansion, and expansion of ~ to a user’s home directory. ",1528220703.0
TheLastDev89,"I am not a pro with Heroku and PaaS but I will try to give some input from my experience with Heroku.

>Heroku required a modified DATABASES list in settings.py, but to make any changes locally this configuration doesn't work. I'm pretty sure this means I need to make a prod branch to keep separate, but how do I do this with an existing codebase?

You can set an environment variable to Heroku that defines the production, create a settings file that inherits your base settings and redefines the appropriate settings for Heroku. When this environment variable is in place you can enable the settings for production.

>How do I keep a testing database and production database separate?

When you run unittests it automatically creates its own test database. Besides that, you can select a separate database with the trick mentioned above.

Take into consideration that Heroku gives you the credentials of the database in environment variables. You do not expose any credentials.

>Right now, my migrations and db.sqlite3 are kept under git. Should this be the case? If not, how do I remove them so I don't mess anything up in production when pushing an update?  
>  
>Speaking of pushing updates, should doing so modify or clear the production database in any way? My reasoning says no, but I already have changes I'd like to make and it already has data I'd like not to lose.

It is preferred to start at a clean production database but there is an option to restore your database (although that depends on the database you use in Heroku) Also it is not good to have your database under git. Separate database for development and for production.

>Before deployment, I ran collectstatic just in case, but was running this necessary for Heroku?

If you do not have the statics you can run

\`heroku run python manage.py collectstatic \-\-dry\-run \-\-noinput\`

>What's the convention on keeping settings.py secret keys and API credentials under git for dev and prod?

Environment variables",1528302361.0
neoreeps,We deploy using Apache in docker with a separate postgres server. I'm old school and like to use what I know works. The current popular method is to use nginx and gunicorn or similar. ,1528209997.0
issue9mm,"Docker.  I've got a basic NGINX container, a basic MYSQL container, and a basic REDIS container.  Depending on the deployment, static files are either just lumped onto the NGINX container, or they're deployed to an s3 -> Cloudfront pipeline.  

In some cases, I just use RDS for DB instead of shipping a MYSQL container, but it's almost always MYSQL on docker for development.",1528217518.0
nannooo,"For small, low scale projects, you can use dokku. For blogger projects, you can use aws codestar",1528236976.0
Lakehaus,"Have you tried Heroku? You need to create a simple config file (their Procfile) and then you can hook it up to github so that pushes to master branch redeploy the app automatically (or skip all that and use their CLI tool). If I recall, up to 10k rows in your database are free, and so is the web “dyno” (worker) below certain usage limits. ",1528255988.0
2fplus1,"A little outdated, but I'm still mostly doing this: [https://thraxil.org/users/anders/posts/2015/12/06/Continuously\-Deploying\-Django\-with\-Docker/](https://thraxil.org/users/anders/posts/2015/12/06/Continuously-Deploying-Django-with-Docker/)

\(have since switched shell scripts to Jenkinsfiles, systemd instead of upstart, simpler Dockerfiles, updated to Python 3 and Django 2, etc. I'm due for an update to that blog post\).",1528219028.0
daeatenone,"when we were small and only had a couple hand-rolled servers we would just use a simple fab script to deploy. We now have Ansible playbooks to handle both provisioning and deploying. Our stack is pretty standard: MySQL, Django, Gunicorn, Nginx as reverse proxy deployed on AWS EC2",1528237370.0
eazy17,"Another path that you can consider is going serverless with AWS. There is a framework called zappa(https://github.com/Miserlou/Zappa) that makes the deployment a breeze. In addition to this it's cost effective too. 

PS: This definitely isn't the industry standard way of deployment but you get to learn something new. 
",1528463105.0
puffinworks,"The stack I have used for the last few projects is a multi-server setup.

I usually have an nginx server acting as a load balancer on one server, another server acting running the database, and one or more ""application servers"" actually running django code.

On each of the app servers, I usually have nginx running and proxying requests to gunicorn, which in turn is actually running the django code. Gunicorn is managed by supervisor.

Most projects also require some sort of task handling, so that usually introduces additional worker servers running celery.

It's kind of a complicated stack, so I have a whole collection of ansible scripts that can handle setting up and redeploying code changes to the whole setup whenever I need. This lets me add new application servers if I need to handle more traffic, and kill them when I don't.",1528495899.0
nicolas_karolak,You should take a look at [poetry](https://poetry.eustace.io). I prefer it over pipenv.,1528221385.0
yonsy_s_p,"I am using [pyenv](https://github.com/pyenv/pyenv) with [pip-tools](https://github.com/jazzband/pip-tools) and [pyenv-virtualenv](https://github.com/pyenv/pyenv-virtualenv) plugin for solve any dependencies and cleanup, for at least 2 years ago ... for Python 2.7, 3.6 and Pypy projects too",1528256255.0
flipperdeflip,"Django has strong conventions about structure, so maybe? 

But you can make an unmaintainable mess in any framework. ",1528208691.0
xinaked,yes. python in general is more maintainable and has more engineers available to pull from ,1528221690.0
issue9mm,"I've worked with both Django and Rails, but because I prefer Python to Ruby, I much prefer Django to Rails.  That said, project layouts tend to be similar enough that I honestly don't think that maintainability is compromised with either. 

In simpler terms, I think they're both just about the same as the other on maintainability. ",1528222813.0
flipperdeflip,This is pretty cool idea. Kinda reminds me of `django-lint` that does similar but built as a pylint wrapper instead of checks framework.,1528186005.0
ramse,"The `+` in your url regex means at least 1 or more characters. * means any number 0 or more.

Somewhere you are building the url (perhaps in a template file) and passing an empty value.

I'll also note:

    for i in Tablet.objects.values_list('brand', flat=True):
        tablet_brand_list.append(i)

can simply be

    tablet_brand_list = Tablet.objects.values_list('brand', flat=True)",1528313068.0
dchess,Congrats! See you again when the inevitable in production bug hits. ;),1528170659.0
hoijean,Can you show us what’ve built?,1528194770.0
numice,Is your full-time job related to web dev? I'm learning Django too but the progress has been pretty slow and following tutorials doesn't really tell me what's actually being done,1528186732.0
nickchuck,You make me wanna do more. Keep rocking!,1528209054.0
SkawPV,"Congratulations! Not a small deed if you're also working full time.

Don't forget to link us to your site when it's live.

P.S: What was the hardest thing to do you've found in Django",1528199917.0
japanfrog,"Congrats! The best thing about Django is how opinionated but flexible it is. What this means is that for the majority of the issues you will face, there will be an easy solution, or at the very least an easy way to customize it. Best part of it all is that it isn't 'Magic' like you would find with Rails, so it's very easy to see how things work by browsing the excellent documentation. If you are ever curious to see a 'Turbo included' approach, check out [this cookiecutter](https://github.com/pydanny/cookiecutter-django).",1528244160.0
george-silva,"Remember: there are no stupid questions. Congratulations from Brazil.

I hope you find what you're looking for!",1528260561.0
2fplus1,Highly recommend setting up an account at [Sentry.io](https://Sentry.io) and  sending your exceptions there.,1528181570.0
Nicksil,[Logging](https://docs.djangoproject.com/en/stable/topics/logging/),1528176447.0
volksman,"Celery is the go to for most people and it’s great but I’ve just created something that has longer running processes and celery hasn’t been fantastic for that. I’ve split up queues so that my long runners don’t interfere with the shorter ones but I haven’t had great success in stability. Various reasons and most possibly my own fault so ymmv.

Tl;dr Celery and some form of broker. ",1528159554.0
umbrae,"Common approach for something like this is to kick off the process via an api request, have an api endpoint that you poll every few seconds to check for report status, then when it reaches the completed state you can trigger a download or redirect.

You could also use websockets if you wanted to get fancy, but it doesn’t sound like that’d be useful for you in this case.",1528159402.0
waistlinepants,Use django-rq,1528193759.0
i9srpeg,"If you're using the standard environment, you have to use task queues.",1528136547.0
njancsar,"You could just use django-anymail with any email backend like Send Grid, Mailjet, Maindrill, etc. Or SES in another region.",1528120579.0
PM-ME-Your-Passwords,"I highly recommend mailgun. Rather than messing with an smtp server, mailgun provides a simple api for sending your emails. And with your low usage, it's liable to be free.",1528124800.0
booooomba,I don’t think I understand the problem. All you need is an smtp server. Just get some cheap email hosting. That’s how I do it. Managing mail stuff on a VPS is waaaaay to tedious.,1528120751.0
shabda,"Thank you for writing this. I was thinking about literally the same problem yesterday.

https://www.reddit.com/r/docker/comments/8o7bzw/how_do_i_use_docker_in_development/",1528125090.0
pointyball,"huh.
looks like a great one, thanks!",1528099555.0
genesem,great job.,1528116276.0
SkawPV,"Even a chapter on how to use Celery. Nice! 

I'm gonna do this tutorial this afternoon.",1528181084.0
Fun2badult,Why? Who wants to learn yesterday’s stuff and not today’s? Isn’t Django at 2.0? Why waste time learning 1.11?,1528100678.0
Whoopska,"I think this is the result of everything in a django template getting automatically escaped unless marked otherwise. You could do something like

    var x{{ data.id }} = {{ data.data|safe }};

which would avoid the escaping, but you'd then be at risk of some nasty behavior. Is it possible for a user to inject something containing `</script>` into your data? If so, that'll close the `script` html tag and then let them insert whatever elements they want.

Another option would be extracting the internal values in the loop, so something like

    var x{{ data.id }} = {{ data.datetime }}, {{ data.value }};",1528086724.0
c17r,"`JSONField` is meant for postgresql which has both `json` and `jsonb` as column datatypes.

If SQLite is a requirement, you be to use `TextField` and `json.dump` going in and `json.load` on the way out.",1528086621.0
cakeandale,"> As the client will then be querying the DB through DRF as the API.

DRF just adds a layer that helps make REST endpoints in Django, outside the viewsets/serializers and some other niceties a DRF app is still 90% Django.",1528058665.0
pat_the_brat,"Check out this book, maybe it'll help: https://books.agiliq.com/projects/django-api-polls-tutorial/en/latest/",1528105242.0
puffinworks,"DRF provides a framework to let you write special django views called resources, that are purpose built to provide a lot of helpful patterns for designing API endpoints. It abstracts away a lot of the details around extracting data from requests, and formatting data in replies. It also provides hooks to let you write permissions checks, custom serializers for your data, etc.

Basically, what DRF allows you to do is to quickly write APIs that tie into your django models, while providing you enough flexibility to implement custom business logic around the creation, access, editing, and deletion of those models via the API",1528496737.0
booooomba,Just connect the user to a group. Then put a simple if-statement in your view and that's it.,1528049441.0
shabda,"Building Multi Tenant Applications with Django is the fourth book I am working on this year. It is very much a work in progress, but I would love to get some feedback.

The books is available at https://books.agiliq.com/projects/django-multi-tenant/en/latest/ . The repo is https://github.com/agiliq/building-multi-tenant-applications-with-django/. PRs welcome.

I would love getting feedback on
- Is this a good topic to write a book on. Would you be interested in reading this?
- Am I missing some important topics on the subject?
- What is the appropriate level to target for a book like this?

I am also interested in interviewing people who have built multi tenant apps with Django. If you would be interested, please email me at shabda@agiliq.com.

The first three books are
- Django Admin Cookbook: https://books.agiliq.com/projects/django-admin-cookbook/en/latest/
- Django ORM Cookbook: https://books.agiliq.com/projects/django-orm-cookbook/en/latest/
- Building APIs with Django and Django Rest Framework: https://books.agiliq.com/projects/django-api-polls-tutorial/en/latest/

",1528042906.0
pancakeses,"Great timing. About to start on a project using tenants, and wasn't really sure where to start.

<3",1528049208.0
tkovalsky,"This looks promising. 

What is the estimate time to get through the series?

",1528082176.0
openpy,Now another awesome gift for Django developers.,1528162856.0
cmothebean,"Great stuff, I'll have a read as I'm presently writing a multi-tenant site. Did you look at django-tenants in your tour of third party apps?",1528327576.0
Ob08,Check out the read commited transaction isolation level in the mysql server settings,1528052726.0
shobble,"maybe something to do with  db connection / session level transactions? I've never used mysql as a django backend, but maybe it's not committing/finalising creations until the session is closed, and previously you were getting lucky with workers or connection-pooling sharing the same session? ",1528042673.0
genmud,"Not sure what your asking, but I would recommend checking out the [py-trello package](https://github.com/sarumont/py-trello), which I have had fairly good luck with.

Also, you probably don't want to store your API keys for trello in a public repo.",1528514153.0
pramodliv1,"You don't have to link your projects if they're not related. Maintain them in separate repositories.
 
You can use Nginx to serve [multiple projects from a single server](https://stackoverflow.com/questions/11773544/nginx-different-domains-on-same-ip).

",1528030582.0
pancakeses,"You can host multiple django projects on a single vps. 

Then, perhaps pointing the small portfolio pieces to subdomains of whatever domain you're serving your main site from would be a good approach. ",1528037797.0
xander450,"As others have said, you can host multiple projects on a single VPS instance, and you can also easily separate those projects out by subdomain under a single domain. Neither of those should compel you to merge your projects into a single application.

If you're inclined to do it anyway, you could treat each project as a module under a master project, and prefix each with a url slug - i.e. somedomain.com/project1/...

You might also consider Zappa: https://github.com/Miserlou/Zappa. At the load you're likely to see, I very much doubt you'll pay anything to use it.

",1528088247.0
usedprestige,this helped me out a lot https://www.youtube.com/playlist?list=PLw02n0FEB3E3VSHjyYMcFadtQORvl1Ssj,1528019616.0
betazoid_one,YouTube “Coding for Entrepreneurs”. The best Django vids on the internet IMO.,1528018651.0
pramodliv1,"Once you've learned the basics, watch all the [Pycon](https://www.youtube.com/results?search_query=pycon+django&page=&utm_source=opensearch) and  [DjangoCon](https://www.youtube.com/results?search_query=djangocon&page=&utm_source=opensearch) videos.",1528030248.0
ReactDOM,Some of the [best Django courses](https://reactdom.com/django),1540349758.0
,[deleted],1528044608.0
,"Migrations 

And try to make your posts legible.",1527979555.0
galqbar,"Looks like some kind of database issue, I go with the other poster that it’s probably migration related. 

Has it worked before?
If so what changed?

Need more information, and formatted. Use hastebin or something like that please. ",1528049773.0
maventree,"The biggest change was the [simplified URL routing syntax](https://docs.djangoproject.com/en/2.0/releases/2.0/#simplified-url-routing-syntax). All of the other changes are also listed on that page - other than those, any Django 1.11 tutorial should be pretty much good.",1527977509.0
shabda,"We have written [a few books](https://books.agiliq.com/en/latest/) which are updated for Django 2.0.

- https://books.agiliq.com/projects/django-admin-cookbook/en/latest/
- https://books.agiliq.com/projects/django-orm-cookbook/en/latest/
- https://books.agiliq.com/projects/django-api-polls-tutorial/en/latest/

",1528007422.0
olster,I've been going through [the MDN tutorial](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django) which is very good and updated for 2.0,1528012671.0
Batting1k,[https://djangoforbeginners.com](https://djangoforbeginners.com),1527984636.0
pterencephalon,"I did a quick read-through of the release notes, then just saw what broke when I tried to run it. I think it worked?",1528007703.0
SingleNewspapering,"Not 2.0, but still one of the best tutorials out there in my opinion:

https://tutorial.djangogirls.org/en/

Also read the django docs and do their tutorial. ",1528033779.0
Fazel94,You can use topic modeling and use too words in each topic as your tags.,1527966526.0
nerdwaller,"It seems like you have a pretty well defined schema, why try to force it into a JSONField? There’s even a [DateTimeRangeField](https://docs.djangoproject.com/en/2.0/ref/contrib/postgres/fields/#daterangefield) that handles the duration.

But to answer your question if you want to stick with JSONField you should be able to do the same validators as any other field: https://docs.djangoproject.com/en/2.0/ref/validators/. Here’s some good examples on StackOverflow https://stackoverflow.com/questions/37642742/django-postgresql-json-field-schema-validation",1527959466.0
porksmash,"I agree with nerdwalker if your schema is fixed, make them fields. Otherwise implement your own validator: https://docs.djangoproject.com/en/2.0/ref/validators/#writing-validators",1527967531.0
unklphil,"You could use a DRF serializer to validate the objects, but if you don't already use DRF in you project, it's probably overkill.

    class DateRangeSerializer(serializers.Serializer):
        from_ = serializers.DateField(source='from')
        to = serializers.DateField()
    
        def validate(self, data):
            if data['from'] > data['to']:
                raise serializers.ValidationError('from cannot be after to')
            return data
    
    
    class ExperienceSerializer(serlizers.Serializer):
        title = serializers.Charfield()
        employer = serializers.Charfield()
        location = serializers.Charfield()
        duration = DateRangeSerializer()
    
    
    # field validation:
    serializer = ExperienceSerializer(data=list_of_experiences, many=True)
    serializer.is_valid(raise_exception=True)

I haven't tested any of this, so I'm not sure if it will work.",1528020958.0
Alex3917,"There are a bunch of Python libraries for JSON schema validation, e.g. Cerberus. The documentation is seems confusing if you're trying to understand it all in the abstract, but if you actually sit down and just try to build the schema validator it's very quick.",1528048532.0
flipperdeflip,"I use it with Marshmallow serializer library (and marshmallow-json-schema). 

The (de)serializer is also a safe and easy approach to store Python class instances in a database field without using pickle.",1528115051.0
Destos,Django-mptt is also a good option.,1527953544.0
AlexFromOmaha,"Just because a really important and really simple question went unanswered:

> Does django allow me to use more than one argument to apply the filter method? If so, what would be the syntax for that? 

They're keyword arguments, so just throw them in there, comma\-separated.

    Post.objects.filter(title__startswith=""X"", tag__category_tag=""test"")",1527971748.0
pancakeses,"As, /u/ysajid mentioned, use a recursive relationship.

In my example below, I used ManyToManyField, because I'm assuming that a subcategory may fall into multiple parent categories (IE: subcategory ""love"" might fall under categories of ""family"", ""pets"", and ""religion"" in your blog), but it that's not the case, and each category has unique non-shared subcategories, use a ForeignKey instead.

    class Category(models.Model):

        category_tag = models.CharField(max_length=50)
        parent = models.ManyToManyField('self', symmetrical=False, blank=True, related_name='categories')

        def __str__(self):
            return(""%s"" %(self.category_tag))


    class Posts(models.Model):
        title = models.CharField(max_length=50)
        tag = models.ForeignKey(Category, default=0, on_delete=models.CASCADE,)
        body = RichTextField()

        def __str__(self):
            return('%s %s' %(self.title, self.tag))

The docs for Model Relationships do talk a bit about recursion:
https://docs.djangoproject.com/en/2.0/ref/models/fields/#module-django.db.models.fields.related

Here are a few other resources that talk about recursive relationships:

* https://www.webforefront.com/django/setuprelationshipsdjangomodels.html
* https://books.agiliq.com/projects/django-orm-cookbook/en/latest/self_fk.html
* http://stackabuse.com/recursive-model-relationships-in-django/
",1527959212.0
ysajid,"You can use chaining filters or Q objects to make queries.
https://docs.djangoproject.com/en/2.0/topics/db/queries/

For subcategories, you can have a ""parent"" attribute in Category class that points to itself.",1527953368.0
sweaty_doughnut,"Hey, GAE has its own task queues.  https://cloud.google.com/appengine/docs/standard/python/taskqueue/
You'll use those instead.",1527923263.0
mpetyx,"I am not exactly sure where your problem is, so please elaborate more.  
In my understanding, a celery can just be a worker that always run. So you don't need anything celery specific. It is just a python script running and you just need to point to it your message back end (redis, rabbitMQ etc). ",1527925511.0
iconfinder,"Rebuilding a beast is almost never a good idea. You will most likely underestimate how long it will take to rebuild including fix all the new bugs you will be introducing. Instead try to spin out parts of the existing system into new services and just access it though APIs. A service can be fraud detection, sending emails, search functionality, etc. these services needs to live on its own with own data and hosting. Check out the concepts like AWS Lambda.

Done right you main code base will now gradually shrink and you are forced to create nicely defined and manageable services that can be reused. Overall your system will be more complex but you will avoid monolith issues. 

I the end it all comes down to the company’s resources and strategy. There is no point in doing all this if you don’t get any business value from it. ",1527892418.0
geosoco,"The only time I've ever seen where it's good to completely rewrite is when there's so many years of technical debt that tracking down the simplest of bugs takes a very long time experienced coders. However, with most modern languages and toolsets this seems very unlikely. ",1527918722.0
giltho,"I encourage you to read the following paper : [http://www.laputan.org/mud/](http://www.laputan.org/mud/). I know it looks a bit old, but it's an actual scientific paper which is still completely up to date.  
What you are talking about is the ""reconstruction"" scheme :\)",1527939121.0
shanmukhateja94,"This may not be the right answer but have you considered upgrading your project to the ""minimum version"" which supports DRF?

It sure wouldn't be pretty but it should account for something. Also, like the others suggested, make test cases for 90% of the code and go ahead with it.

Also, I understand you know the in and out of the project so why not make it a side project and start working on ""from scratch"" idea?

It sure isn't productive for YOUR free time if you have any but it would save you from lot of stress in long run while working.",1527915201.0
pancakeses,"If you don't mind installing another app, django-simple-history is the way to go here. Keeps archived info for models in a separate table and you can view and roll back any changes through the admin. I have found it far easier than rolling my own system.",1527892395.0
Lord_Humongous,"Update the form to take your material list as a kwarg. Have all of the fields in the form that use material use your kwarg parameter. 

[Then pass the kwarg to your formset.](https://docs.djangoproject.com/en/2.0/topics/forms/formsets/#passing-custom-parameters-to-formset-forms) ",1527849705.0
charettes,You might be hitting [#18597](https://code.djangoproject.com/ticket/18597).,1527867889.0
kurashu89,"> My question is, would it be better to go for an approach where an end user logs in, and receives all the listings and all the leads at the start of the session and holds them in memory then posts to the API with single entries, or is it better to make lots of individual requests to the backend based on user interaction (I'd imagine i'd implement some sort of drop down menu in react) which saves on a 5-10 second load time (just on my local machine, for someone in mexico requesting a server in europe load times would be longer) . And if we are to hold this stuff in memory for an end user, what would be the normal approach for this?

As with everything involving caches, the answer is: it depends.

Can you deal with stale data? Or rather, if your user gets data and holds onto it for an hour, meanwhile someone else makes a change, how soon do you need to know about that? That's still a trick question, because different kinds of data have different lifetimes.

Also ""local"" cache is ambiguous. Do you mean caching in the user's browser - what happens when I open a new tab then. Do you mean in the process running on the server - what happens when that process is reaped and a new one takes its place? Do you mean on the machine - what happens at deploy? Do you mean in the region - what happens when someone in Asia makes a change, do your other regions need to know?

These aren't always easy questions to answer and their non exclusive, you can cache at all layers and you should probably at least cache at the region layer if only for latency reasons. ",1527809363.0
chris_conlan,"You can mess with this if you need to: [https://docs.djangoproject.com/en/2.0/topics/cache/#the\-low\-level\-cache\-api](https://docs.djangoproject.com/en/2.0/topics/cache/#the-low-level-cache-api)

Otherwise, my general advice is to not underestimate the power of Django's default in\-memory cache.  Django's default setting for this is:

    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        }
    }

It is potentially sufficient for your application if you can easily horizontally scale.",1527804480.0
thebru,"Definitely load data on demand, rather than 'downloading' it all and hoping nothing changes in the interim.

That's what your server is for, storing and sharing the data.   Your browser should just be a window into that.",1527816163.0
zettabyte,"> completely useless to try and refactor

Developers are prone to throw away working code because it's too hard to read and understand.  Now, it may very well be a mess and worthy of the trash bin, but we, collectively, tend to do this way too early and too often.

Now, to the architecture:

> receives all the listings and all the leads at the start of the session and holds them in memory

You mean the client browser gets a copy of all the data related to a particular user and caches it, never to retrieve it again during a ""session"" (however that is defined)?  To me that's asking for lots of stale writes, and way outside the norm.

> if we are to hold this stuff in memory for an end user, what would be the normal approach for this

There are a handful of ways to store data client side.  https://www.html5rocks.com/en/tutorials/offline/storage/ should get you started.  If you have some control of the browser platform, you may have more proprietary options.

> make lots of individual requests to the backend based on user interaction

Meaning have your client browser front end interact with an API?  That's the way I'd do it.  I would _not_ want copies of my data floating around on clients, getting stale.",1527799691.0
teewuane,"Let your rest server return what is requested on demand. When you start to see real performance issues, start to use caching as a way to help out. I’d suggest looking into using redis as you cache backend because it writes to a file everyone in a while and if you reset your server you don’t lose your primed cache. Also, it’s very fast! Django in memory caching works great too though.

I suggest refactoring and fixing the existing code base over rewriting from scratch if it is at all possible. It seems like it’d be more wise to get the codebase to work with Django 1.11 or 2.0, then add Django rest or tasty pie to the existing project and start making resources and slowly killing off templates and old views when they are no longer in use. Reuse existing models and make migrations as necessary.

I have a feeling you’re going to need to become pretty intimate with this legacy code base and that caching will likely be the least of your problems.

Good luck!",1527827058.0
flipperdeflip,How do you cache the queryset? Just stuff it in cache framework?,1527840508.0
igncampa,Django will default to an SQLite database. If you go check your settings.py in Project2 you'll see 'databases' is set to an SQLite instance,1527788144.0
Con_Mustapha_Mond,"The question is largely how do you think the app will evolve? Will the `backend_util` eventually need to live on its own (in it's own process, on its own server, potentially with it's own database) or do you think its development will be interrelated with the Django project?

It's true that decoupling services can make each piece simpler and easier to reason about. Additionally the cross system complexity is lower because communication will only happen at fixed interaction points.

However, there's a huge cost to decoupling these pieces. Interaction and data fetching from the Django DB that would have been trivial if the systems were connected will now require serialization, message passing, and possibly even HTTP requests. Distributed systems have far more failure states than monoliths.

So unless you have a good reason to, or you think they're going to grow apart, sure. Leave the util in the Django project. It will definitely be easier.",1527804624.0
dynaken,"Do you have to use Django and DRF for this project? If all you need is a REST endpoint I suggest you use connexion, link below. Connexion do all the serialization for you compared to DRF. I used to use DRF but switched to connexion because it's a lot more lightweight and documentation is automatic. 

https://github.com/zalando/connexion
",1527789084.0
jobelenus,Post your code,1527784462.0
flipperdeflip,"/r/djangolearning

The constraint comes from the OneToOneField, and the error is because your post_save handler tries to create a new Employee every time you save a Person instance, but there can be only one Employee per Person (because OneToOne).

So in the post_save handler check if the Person already has an employee (give the OneToOne field a related name), and/or put a try/except around the Employee.objects.create() to catch the IntegrityError. 

If you catch the error you also need a transaction.atomic()  between the try and the .create or otherwise the database will complain about a broken transaction if you do another query after the error (this might be only on postgres).",1527775702.0
asplodey,My first thought is to make a separate Category model with a ForeignKey to the Gallery model.,1527763436.0
NoMoreAsbestos,Is there no option to just prepoilate the choice field with db values?,1527767089.0
NomNomDePlume,"Use the os package to get environment variables and heroku config to set them. No need to have a vcs solution

https://devcenter.heroku.com/articles/config-vars#managing-config-vars",1527741355.0
cdman,"One solution which I found googling around is the following:

- commit your `settings.py`
- however, make sure to write somethine like the following:

```
DATABASES = {
    'default': {
        ...
        'PASSWORD': os.environ.get('DATABASE_PASSWOR') or 'local_password',
    }
}
```

Then, set up the DATABASE_PASSWORD environment variable in your Heroku dashboard (https://dashboard.heroku.com/apps/your appname here/settings)",1527741464.0
andebauchery,"https://devcenter.heroku.com/articles/deploying-python#heroku-constraints

https://stackoverflow.com/questions/34990128/how-to-set-environment-variables-in-heroku-django-project",1527741590.0
Niicodemus,"Proper tests are what you want, but `shell_plus` from django-extensions is part of my toolbox. It imports models automatically and has other nice features like printing SQL queries. Jupyter notebooks are also nice for repeated stuff.",1527700116.0
HolgerD77,"You might want to have a look/experiment with iPython profiles: [https://blog.michaelyin.info/2015/04/05/using\-profiles\-in\-ipython\-and\-django/](https://blog.michaelyin.info/2015/04/05/using-profiles-in-ipython-and-django/)

Haven't done this myself in this combination, only use an iPython profile for one specific Django\-free use case, but I think this might be a way to go.",1527691465.0
vaibhavhrt,"define all tests in tests.py and then run `py manage.py test`, simple enough.",1527691755.0
mick88,"First of all

    pip install ipython

Second, why would you use shell for testing?",1527704059.0
ccb621,"Don’t. If you find yourself regularly using Django Shell, you need to look at management commands. I’ve only ever used Django Shell for one-off scripts and debugging. It’s never been part of my standard toolkit in development or production. ",1527696397.0
HolgerD77,"I'm using a pattern setting the password as an environment variable in the shell and then reading that in the settings.py file, see e.g. https://github.com/openfarmsubsidies/scraper/blob/master/openfarmsubsidies/settings.py",1527688766.0
apreche,"Don't commit the password. All the secret info should be stored somewhere else and then loaded into the settings at runtime. The simplest is to use environment variables, though there are many other options.",1527689082.0
wasabigeek,"Here's one possible way: http://www.obeythetestinggoat.com/book/chapter_making_deployment_production_ready.html#_using_environment_variables_to_adjust_settings_for_production

Personally I've only used Heroku (set environment variables via the CLI) and Pythonanywhere (set in the WSGI file via web interface) in production. 

Would love to hear how others implement on AWS, DO, etc.",1527728602.0
BPAnimal,"There was a great talk at pycon 2018 regarding this very question. 

https://youtu.be/2uaTPmNvH0I",1527752008.0
jamesf510,"I create a secrets.py file and don’t commit it to the repo

In that secrets file I have passwords for the database, any API secret keys and configurations that I don’t want in settings.py

You can have a secrets.py on the server side

You can import the variables stored in the secrets file just like you would any other in a django project. 

",1527691026.0
lzantal,"Simplest solution and the one I use is create a local_settings module on the server and add it to gitignore. Import it in the bottom of your settings.py and define all sensitive info in there. 
Use a try exception block to ignore import errors. That way your settings.py can have that code without erroring out in dev mode. No need to complicate things with env vars when you can do it in plain python modules.",1527693121.0
,[deleted],1527690248.0
mentix02,"check out [python-decouple](https://djangopackages.org/packages/p/python-decouple/). it's pretty cool
found [this](https://simpleisbetterthancomplex.com/2015/11/26/package-of-the-week-python-decouple.html) when i was looking for solutions to this problem
quite a nice guide / manual",1527878910.0
booooomba,"Why would you upload it to a public github?
Is this for a private project or an open source project?

If it is private you need a private repo.",1527688414.0
EpokeWeb,"I think applying for a contrat without having all the knowledge is not unprofessionnal, as long as you don't make them pay your ignorance.

By that, I mean that I started accepting Django contracts after 6 months of training online (on different web elearning platforms). Mostly, 100% of the projects I accepted the first year had a lot of stuff I did not knew how to do before accepting the contract. With that in mind, my client knew I was not the best, the hourly rate I charged them was really clear about that (I charged 35$/hour and in my town, web agency ask around 95$/hour).

And on top of that, I charged only the time I worked on the project and knew what I was doing, so my clients were not paying me for my 'learning time'.

That year, I have made so little money, but the your after that my hourly rate was 55 and this year (thrid one) is at 75. Still learning a lot all the time. 40% of my projects are so specific with django / python and other tools that I am constantly learning.

So you can do it, but do it the right way and assume your ignorance; never make your clients pay for it.

Voilà :) ",1527683009.0
Dranoi,"Hiho, yesterday I just heard a podcastepisode from codenewbie about that kind of topic. It`s https://www.codenewbie.org/podcast/from-glass-blower-to-developer . Some stuff they were talking about was really helpfull, so maybe thats something for you too. ;) ",1527696689.0
Fun2badult,Any thoughts on Django with React front end if anyone has experience?,1527707486.0
rizogg,Modern web development consists of backend (restAPI or graphql) + frontend(usually SPA(single page application)) if you know about these there should be job offer or you can apply. Because most of the jobs are demanding this knowledge experience. Upwork(formerly odesk) has plenty of python job. You just need to apply correct one. But be aware that upwork will suspend your account permanently if you apply many job at once or you haven't got any interview. ,1527683357.0
philippeowagner,"looking for a job?  DM me. 
https://www.arteria.ch
let's get it from there :-)",1527707430.0
rizogg,I think there is no need to create token when user signup. Instead create token when user send post request with username and password. That way your endpoint send jwt as response. So you have to append jwt in your request header. It's a basic restAPI authentication flow.,1527682911.0
pat_the_brat,"http://getblimp.github.io/django-rest-framework-jwt/#usage

You should just have to POST username and password to /api-token-auth/ (or wherever your endpoint is), and it should be creating it for you.",1527681018.0
jef79m,"{% include ‘foo/bar.html’ }

https://docs.djangoproject.com/en/2.0/ref/templates/builtins/#include",1527666793.0
rizogg,Be aware that Include is bit slower comparing block usage.,1527683542.0
PedroAM,"Why , exactly, is not the same?",1527666187.0
,[removed],1527686738.0
ccb621,File a ticket including code to reproduce the error. Posting to reddit won't necessarily get the attention of the people who can fix the issue if there is one.,1527660950.0
porksmash,"That's basically how I use them - for a filtered subset of objects I want to access often. For example, removing 'deleted' objects which are not actually deleted, but have a flag set instead.",1527646837.0
frankwiles,"We often use them for things like Whatever.objects.create_whatever() that checks arguments and is a single place to take additional actions such as metrics, sending emails to certain users on creation, create related objects, etc. ",1527647574.0
ramse,"Depends what the manager is doing. I have a manager that ensures only `deleted__isnull=True` rows are ever access via `.objects.`. It saves me from having to include `deleted__isnull=True` on every queryset for that particular model. It also allows me to still `.delete()` and not actually delete the object, it just sets the flag accordingly.",1527647588.0
trybik,"One common scenario, already mentioned here: convenient way to define common filters (beware: only to be used directly on the manager/`MyModel.objects`, not to chain with `QuerySet` objects).

Other common scenario: define `get_by_natural_key`, i.e. how to fetch data using natural keys. Natural keys are recommended to use in serialized data over auto-gen IDs: see https://docs.djangoproject.com/en/2.0/topics/serialization/. ",1527671715.0
MassiveFajiit,Jaime is spelt Jaime btw,1527634829.0
omab,"It seems there are a few solutions around, for instance:

* https://github.com/st4lk/django-rest-social-auth
* https://github.com/RealmTeam/django-rest-framework-social-oauth2

I haven't tried them tho.",1527605054.0
ccb621,"What do you mean by “login through API”?

Typically social auth is only used to allow a physical user to login. Once that happens API access is controlled via your own mechanism (e.g. OAuth 2.0). ",1527605872.0
kennydude,"Python Social Auth is componentised which means you can easily implement it for an API based auth. [The docs even include an example](https://python-social-auth.readthedocs.io/en/latest/use_cases.html#signup-by-oauth-access-token)

From that example, instead of `login` you would return whatever login token you are using for your API (maybe django rest framework `authtoken`?)",1527698781.0
flipperdeflip,Check the HTTP header's and see if it has `Vary: Cookie` in there. IIRC Django adds it automatically when you access the user or session.,1527595782.0
daredevil82,"are these urls authenticated, as in requiring a token for access?  if the token is on the URL, then that will make any caching on that URL user-specific",1527594922.0
rizogg,"After you change initial location of `settings.py` you need to update manage.py right?, because `manage.py` calls initial(settings.py) file. So on development you should change it to `    os.environ.setdefault(""DJANGO_SETTINGS_MODULE"", ""demo_project.settings.local"")` or something like this in `manage.py` in that way django knows where to call my settings when using manage.py. Also consider this when on production heroku using `wsgi.py` if i recall correctly, so you need to change that either.",1527580284.0
AbhiTan,"In order to deploy your project to heroku, you will have to include yaml file as described in heroku example django project. It works as a container which installs all the required dependencies itself when given in a specified format.",1527583353.0
SomeShittyDeveloper,Have you tried making those toggleable settings environment variables? Then pulling them with os.environment? Might be easier and cleaner than switching files.,1527593757.0
bellamira,"[Have you seen this?](https://devcenter.heroku.com/articles/django-app-configuration) I haven't used it - seems fairly new. Perhaps it will help.

&nbsp;

The way I got started was to start a fresh application using this starter template: ```$ django-admin startproject --template=https://github.com/heroku/heroku-django-template/archive/master.zip --name=Procfile myproject```

&nbsp;

then separating out my settings as descriped by CFE. So your base ```myproject\myproject``` folder will look [something like this](https://imgur.com/a/TFh6KdN) and the settings folder will look [something like this](https://imgur.com/a/NntNOsd).

&nbsp;

After that (don't forget to update .gitignore), you should be all set to deploy ",1527627366.0
SlumdogSkillionaire,It's Python. Go with the cleaner code until you're absolutely sure you care about any performance differences. The odds are that you probably don't. What you will care about is having to maintain the code when you haven't looked at it in six months.,1527567478.0
frankwiles,"Short answer is they are the same. Long answer is one is ever so slightly faster (number of method calls involved) but it will literally never matter to you. I have never ever seen or heard of it being an impact for anyone. 

Things like SQL performance, caching, bad scheme/model design, front end performance, and inadequate amount of hardware are far far more likely to be performance issues for you. ",1527568237.0
flipperdeflip,If the speed difference of basic language features like calling methods through a class hierarchy vs bare functions is noticeable in your app you are so high end wouldn't ask on reddit and probably shouldn't use django.,1527595349.0
xinaked,"in my experience, no difference ",1527565560.0
kkert,"Yes there is, but depending on your setup it's minuscule. Until you have removed most of the middleware, optimized away **all database hits** and cached the hell out of everything, moved to Python 3, switched to PyPy3 and Meinheld etc, the difference is not measurable.

In short, unless you have already spent a couple weeks optimizing a site that goes tens of thousands of requests per second, the difference is not important",1527603589.0
rascaldev,"For something like views you really shouldn't care. Kind of repeating /u/SlumdogSkillionaire  's point but in general, you should just write an app that does what it should do without undue complication. Obviously don't write an app with _horrible_ performance but ""high performance"" should be considered the job of another part of your stack.

If you're worried about the performance problems becoming a real issue under high load then the usual answer is to do things like:

* Write your application such that accelerators (such as Varnish) can be safely used. For example do full page caching with long TTL's and have your app send out a `PURGE` request to force varnish to re-fetch a particular page.

* Use things like redis or memcached to save on long process invocations by caching results in memory and only going to the persistent database when you absolutely have to.

* Architect things such that you can load balance between multiple instances of you application.

etc, etc.

What I _wouldn't_ do is start doing a bunch of fancy stuff trying to squeeze every last bit of performance out of your app. You'll generally end up with a much too complicated app in the long run. Concentrate on making your app awesome first and foremost.",1527604616.0
Neorlin,Didn't notice any performance difference. But class based views are a lot cleaner and readable,1527567197.0
pbacterio,Test it!,1527577842.0
AbhiTan,"Class based views provide more modularity to the code. 

For example : You can handle different request method types more easily whereas in method based view you will have to use if\-else cases.",1527572883.0
django_noob,"Personal opinion, but I hate the structure of class based views. Method based views ftw.",1527722503.0
MistaMin3r,"There is a performance difference, but if you care about that go program in assembly. In python we build stuff that works.",1527572749.0
HandyCoder,"There are a handful of standards based around code generation from an authoritative contract.

If you're using Django REST Framework, take a look at its swagger implementation -- https://github.com/marcgibbons/django-rest-swagger

Other structured standards which may include code generation include: JSON API Spec, GRPC, Graphql, etc.",1527538375.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1527535487.0
rjhelms,"As a rule, you're right.

The mantra I've heard is ""fat models, skinny views"" - though, like anything, there's situations where rigidly adhering to that might be more trouble than its worth.",1527536762.0
CaffeinatedT,I maintain a django project with a massive views file at my work. It was written by someone for whom it was their first big programming project and it shows. I'd definitely do something with external classes imported to the view if i was to write the same thing again. ,1527533906.0
iMichael_,"You're trying to replace thinking with dogma and heuristics.  

There is nothing ""wrong"" with fat view functions if it solves the problem at hand and the code is testable and readable.




",1527574183.0
colly_wolly,"Its probably better off in the models than in the view, but like everything ""it depends"". 

Remember, you can call model based methods from templates and also from the Django admin, so it makes things more reusable than having functionality in a separate class as many are suggesting. That can lead to a lot cleaner solutions in some cases. It also makes it easier it take advantage of Djangos lazy loading of querysets. I have played with both ways of doing it and in the end Django works well with fat models. 

This article explains the reasoning of keeping data and functionality together. 
https://www.martinfowler.com/bliki/AnemicDomainModel.html
",1527602409.0
googhalava,Some say if your views.py is under 1000 lines it's OK to keep it as one file. If it gets bigger you need to consider functions and classes in a separate file. In the end it's mostly the matter of readability.,1527533587.0
daredevil82,I usually put business logic in a `helpers.py` or `utils.py` file with classes/functions that act as flyweights: you pass in the data and they return the results.,1527547297.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1527519330.0
rowdy_beaver,"Thanks for writing this up.  I need to spend more time with this, but a great use-case as there is data that is changing frequently.
",1527556931.0
askox,"You could just create your own decorator like this:

    def require_permission(func):
        def _dec(request, *args, **kwargs):
            if not request.user.is_authenticated:
                return self.handle_no_permission()
            if not self.request.user.groups.filter(name__in=[""group_1"", ""group_2"", ""group_2""]).exists():
                return redirect('denied_access')
        return _dec",1527507192.0
trescoops,"Can you write a custom mixin based off of that code?  So:

    class MyPermissionMixin(AccessMixin):
        def dispatch(self, request, *args, **kwargs):
            if not request.user.is_authenticated:
                return self.handle_no_permission()
            if not self.request.user.groups.filter(name__in=[""group_1"", ""group_2"",""group_2""]).exists():
                return redirect('denied_access')

        return super().dispatch(request, *args, **kwargs)

Then your view class becomes:

    class GenericClassCreateView(MyPermissionMixin, Createview):
        ...

",1527629815.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1527495272.0
Nicksil,"Django is trying to pass in the request object, but you've written the function to take no arguments.",1527494420.0
xinaked,"    @csrf_exempt
    def gen_label_result(request):

        if request.method == 'POST' and request.is_ajax():
            
            res = AsyncResult(request.session['genlb_id'])
    ​            
            return JsonResponse({
                'status': res.ready(),
            })",1527495745.0
28f272fe556a1363cc31,How are you tracking usage? Are they unique IPs?,1527472828.0
baldnbad,"Bots?
",1527484922.0
njancsar,Use something like twilio and integrate it with your project. Or some Cisco service ,1527471991.0
daredevil82,"One of the most frequent uses of django is to make a rest api that can be consumed by web applications and mobile devices.  That exposes your views and URLs, where all data in and out is via requests and JSON and is used by angular, vue and react to display and render the application.

You don't need to combine them, you can get along fine with regular django templates and bootstrap/jquery.  However, from a hiring perspective, if you want a Django job, having expertise in making REST APIs with django and using angular, vue or react are highly sought after.  If you don't have that experience, you might be passed over for otherwise seemingly well-fitted jobs.",1527463193.0
Elsimir,Nope. You can definitely just use bootstrap. In fact I would guess that that is the most common method of using django. ,1527462379.0
SignificantTomato3,"That's really necessary if you want to increase the user experience, having a page that changes, without refreshing, makes a big change to the user.

In such way, you keep Django only for the Backend part, models and API, the rest should be handled via Frontend. 

The latest trend is to use GraphQL (which is awesome) I definitely recommend taking a look at it.

 ",1527491870.0
iKenshu,"You don't need it, but I think is really necessary to learn how to combine Django with one of those frontend frameworks/library. 

I really want to learn how to do it, find the best practices, because I see so many tutorials about this, but I still don't understand much.",1527471789.0
Fun2badult,"If one were to go with one of those, which one is the best? Up and coming versus something that’s being used less and soon to be deprecated? I would like to learn one of those for front end but I’m seeing that React is the newest and best for now? Any Django devs can give us some insight?",1527469235.0
dbughe2,"**You definitely don't 'need' any of these especially if you're not really doing much of front\-end development, you're fine with your plain JavaScript with bootstrap, but if you ask me vuejs2 is a good front\-end framework to start with it;s much simpler to use, but it's still very powerful, especially if you're just learning about JavaScript front end frameworks**",1527544707.0
Investisseur,deleted,1527458706.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1527371051.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1527369928.0
iam-tony,"Check this out: https://docs.djangoproject.com/en/2.0/topics/forms/formsets/ 
Good Luck!",1527406076.0
Niicodemus,"Look at the django-extra-views package, specifically CreateWithInlinesView",1527355372.0
lzantal,I never used crispy forms. But in my apps I add a hidden field called type and set its value to the type of form. Then in the view function I check to see what’s the value of that field and use the appropriate form class. If you render multiple django forms use one actual <form> tag if they have different field names. Form class will only use the post values that corresponds to its class properties. ,1527369775.0
cerealcable,"It's been some time since I'm probably a little foggy, however I remember solving this by passing a prefix to the forms. This sets the names to be ""{prefix}_field_name"" or something like that which then makes it possible to handle multiple forms. This somewhat similar to how FormSets work, they also include some hidden fields to determine how many instances and so forth.

Hopefully that gives you somewhere to start. Also, they'd have to be rendered in the same form tag for this method to work or you'd have to handle that on your client some other way.

I forgot if I ever did this with crispy forms or not but I see no reason this would not work with crispy.",1527401351.0
SkawPV,Create a Formset at the [models.py](https://models.py) with an  inlineformset\_factory ,1527426346.0
SlashThree,"I was able to fix this and saw that I have a very strange behaviour in my HTML. My Submit Button is actually inside my form-tags, but when rendered it's suddenly outside and I don't really know why. But I fixed that by giving the form an ID and just call the form with the Button. 

This fixed my bug only a bit, but sadly my item wasn't shown inside my object, as the item was never connected to the Offer. So I had to say my Post: don't save the Item Form on commit, first add it to Offer AND then save the whole thing and et voila: it works! :D

class OfferCreateView(CreateView):
    model = Offer
    template_name = 'offers/offer_create.html'
    form_class = OfferCreateForm

    def get(self, request, *args, **kwargs):
        form = OfferCreateForm(request=request)
        itemformset = formset_factory(ItemCreateForm, extra=3, can_delete=True)
        item_form = itemformset()
        return self.render_to_response({
            ""form"": form,
            ""item_form"": item_form
        })

    def post(self, request, *args, **kwargs):
        form = OfferCreateForm(request.POST, request.FILES)
        itemformset = ItemCreateForm(request.POST, request.FILES, prefix='form-0')
        if form.is_valid() and itemformset.is_valid():
            offer = form.save()
            item = itemformset.save(commit=False)
            item.offer = offer
            item.save()
            return redirect('offers:offer_details', offer.pk)
        else:
            return self.render_to_response({
                ""form"": form,
                ""item_form"": itemformset
            })",1527428264.0
whatever_meh,"Use logging instead of print statements. Always always. Locally, debug logs will output to the console. 

For local debugging, you can call your task with task.run() instead of task.delay() to avoid the asynchronous bits and watch the logging output in console real-time, and also use pdb.set_trace() for stepping through the code. ",1527355535.0
unkz,"How are you running it?  In a docker, directly on the command line, in a screen, what?  Do you see any output at all?  Have you set PYTHONUNBUFFERED?",1527356261.0
Whoopska,"Are you testing something about celery or testing something about the task in particular? If just about the task, you can use [CELERY_ALWAYS_EAGER](http://docs.celeryproject.org/en/3.1/configuration.html#celery-always-eager) or call the task code directly via `mytask.run()` instead of either `mytask()`, `mytask.apply()`, `mytask.delay()`, ...",1527348827.0
Whoopska,"So you want something kind of like `required=True` on the field, but not the html5 validation? The validator is skipped because it is an ""empty value"" https://github.com/django/django/blob/master/django/forms/fields.py#L128

I'd recommend handling this in you `clean_quality` or overwriting the attribute for required on your widget. Something like

    class MyForm:
        class Meta:
            widgets = {
                quality: TextInput(attrs={""required"": false})
            }

if you're ok with removing the required attribute from all fields, you can instantiate the form with `use_required_attribute=False` (via `get_form_kwargs` if you're in a CBV).
",1527299127.0
TheLastDev89,Really helpful with a lot of details! Thanks!,1527282186.0
athermop,"Thanks for writing this...as soon as I get done writing this comment I'm going to subscribe to your RSS feed \(assuming you have one\).

I just wanted to say that the code boxes on your site are really hard to read.  Dark gray background with slightly lighter gray text!",1527347864.0
ramse,"Reading the [docs on RemoteUserBackend](https://docs.djangoproject.com/en/2.0/ref/contrib/auth/#django.contrib.auth.backends.RemoteUserBackend.authenticate), seem like you'll have to override it perhaps as its looking to match on the username field and not email.",1527289403.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1527277263.0
ccb621,"Where are you passing the CSRF token? I see you setting a string constant, not a value from the server. ",1527295375.0
trancen,"Have you tried posting the  {% csrf_token %} just under the ""<form method=""post""....."" ",1527300062.0
threeminutemonta,When you post the completed form data you should include the csrf.,1527278339.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1527272535.0
masklinn,"Window functions are part of the SQL:2003 standard (extended in SQL:2008). Assuming Django supports it in the standard manner it is not database-specific, however it requires that the underlying DB engine does support window functions, which I believe sqlite does not.

AFAIK window functions are implemented by Postgres, Oracle, SQL Server, DB2 and MySQL 8 / MariaDB 10.2 (and possibly others) although I do not know if all of them implement the windowing syntax and all window functions in full.

Note as well that implementations can have widely divergent performance characteristics, cue Markus Winand:

> only SQL Server and the Oracle database can use them for a pipelined top-N query. MySQL, DB2 and PostgreSQL do not abort the index scan after fetching enough rows and therefore execute these queries very inefficiently.

(this is in the context of topn/pagination)

Regardless, **you may want to open an issue on the Django tracker** so they add documentations/warnings and maybe document drivers-specific issues [on the relevant page](https://docs.djangoproject.com/en/2.0/ref/databases/): looking over [the PR](https://code.djangoproject.com/ticket/26608), the only documented limitation seems to be that [postgres does not support select_for_update in window contexts](https://docs.djangoproject.com/en/2.0/ref/models/querysets/#select-for-update) (scroll down a bit).

The changelog also indicates that database backends should set (or not) the `supports_over_clause` attribute, it's False by default and set for the Oracle, Postgres and MySQL (> 8.0.2) backends, however it is only checked in `window_frame_rows_start_end`. So maybe open a second issue to provide a better check/error somehow (with a simple example which blows up under sqlite).",1527245072.0
shabda,"AFAIK, Sqlite doesn't have window/analytical functions, so the Django window functions won't work on them.",1527244973.0
flipperdeflip,"As these are listed in the main documentation (and don't have a note [here](https://docs.djangoproject.com/en/2.0/ref/databases/)) they should work with all supported backends (eg: SQLite, Postgres, mysql and Oracle). Each backend will then ensure the correct SQL dialect is generated.

I'm not 100% sure about Window functions in SQLite, maybe check your versions?

Also the postgres specific stuff is in https://docs.djangoproject.com/en/2.0/ref/contrib/postgres/",1527245232.0
,[deleted],1527244034.0
Whoopska,"Here's the config for a project I have working on heroku

    # myproject/Procfile
    web: gunicorn myproject.wsgi --log-file -

    # myproject/.env
    DJANGO_SETTINGS_MODULE=myproject.settings

    # myproject/myproject/settings.py
    ... [ main settings file ] ...

Do  you have something like

    myproject/
      Procfile
      myproject/
        manage.py
        myproject/settings.py

instead?",1527209416.0
opinicus,"The entity-attribute-value pattern is the traditional way to do this and works fine for a lot of circumstances.  However, if you have the opportunity to work with Postgres, the Django Postgres contrib package provides [JSONField](https://docs.djangoproject.com/en/2.0/ref/contrib/postgres/fields/#jsonfield) which will let you do similar things with a lot less overhead in terms of simpler code and more efficient querying.  One big downside of EAV is that it requires a lot of joins, so it can be expensive if you have a lot of data in the model.",1527195544.0
Nicksil,"You could perhaps create a model which represents an attribute and another model representing the attributes value, then create a relationship between this attribute model and your post.

Something like this:

    class Post(models.Model):
        attributes = models.ManyToManyField(
            'PostAttribute',
            through='PostAttributeValue',
        )

        body = models.TextField()
        title = models.CharField(max_length=254)


    class PostAttribute(models.Model):
        BOOLEAN = 'boolean'
        DATETIME = 'datetime'
        FLOAT = 'float'
        INTEGER = 'integer'
        TEXT = 'text'
        TYPE_CHOICES = (
            (BOOLEAN, 'True / False'),
            (DATETIME, 'Datetime'),
            (FLOAT, 'Float'),
            (INTEGER, 'Integer'),
            (TEXT, 'Text'),
        )

        name = models.CharField(max_length=128)
        type = models.CharField(choices=TYPE_CHOICES, max_length=20)


    class PostAttributeValue(models.Model):
        attribute = models.ForeignKey(
            'PostAttribute',
            on_delete=models.CASCADE,
            related_name='values',
        )
        post = models.ForeignKey(
            'Post',
            on_delete=models.CASCADE,
            related_name='attribute_values',
        )

        value_boolean = models.NullBooleanField(blank=True, null=True)
        value_datetime = models.DateTimeField(blank=True, null=True)
        value_float = models.FloatField(blank=True, null=True)
        value_integer = models.IntegerField(blank=True, null=True)
        value_text = models.TextField(blank=True)

        class Meta:
            unique_together = ('attribute', 'post')

Obviously you'll want to add type-checking/validation and likely a handful of helper methods, but this outlines the gist. Also, add as many 'type' choices as your company plans to support.",1527193951.0
PawelDecowski,"It looks like you’re looking for [Entity-attribute-value data model](https://en.wikipedia.org/wiki/Entity–attribute–value_model).

There are a few Django apps that support it. You can just google _django eav_.",1527193701.0
spookylukey,"The cache framework mentioned by others is usually the right way to go.

Another option is just to store data as module level constants. Once this data is initialised it will be available to all requests. You should write a function that wraps access to this data and creates it as needed:

    _MATCHERS = None

    def get_matchers():
        global _MATCHERS
        if _MATCHERS is not None:
            return _MATCHERS
        matchers =[PatternMatcher(pattern_json=unit.pattern_json) for unit in Unit.objects.all()]
        _MATCHERS = matchers
        return matchers

See also [functool.lru_cache](https://docs.python.org/3/library/functools.html#functools.lru_cache) (which is also available as a backport in django.utils if you are on Python 2).

The issue with this, as with any caching, is cache invalidation.

Also, each Django process will be storing a copy of the data - a proper cache backend allows the data to be stored just once.

One disadvantage of using a separate cache process is that it has to use pickling to store values. If your code changes, the unpickled object might not match what your new code has - as mentioned here - https://docs.djangoproject.com/en/2.0/howto/upgrade-version/#deployment - but it in theory applies to every time you change your code relating to pickled objects.",1527307142.0
flipperdeflip,"Have a look at [Django’s cache framework](https://docs.djangoproject.com/en/2.0/topics/cache/)

Choose a cache backend that works for your situation, maybe there is only one active django worker thread and LocalMemory is good enough, or more likely you want to share between all worker processes on a single machine and use a local memcached, or if you have multiple machines/instances look at a networked/dockerized memcached. There are also alternate backends on pypi (using redis or mongo or whatever).

If you think about caching also think about invalidation!

There are also apps to specifically cache querysets, like django-cachalot or django-cacheops, those generally cover invalidation for you.",1527171516.0
snuggl,"Also you can do

python [manage.py](https://manage.py) test \-\-keepdb

So you can skip the whole database building and migration steps if its not needed",1527173141.0
asdfwaevc,"Something not mentioned here but is the biggest mistake you can make IMO: **MAKE SURE** your tests don't hit external services. Mocking APIs is a pain, but it's very worth it. A way to test this: disconnect from internet and run your tests, if they fail then you're hitting an external service.

It's easy to think you're doing this right, but then realize that you're using BOTO3 storage or something. I haven't used it yet, but I'm going to try [Django In-memory File Storage](https://github.com/waveaccounting/dj-inmemorystorage) to get around this.",1527170332.0
nelsonko,"> Slow tests not only waste developers time on waiting but also make it difficult to follow TDD best practices (such as red-green testing)

You should tag your tests for development. Tag slow tests and tag failing test for reported bugs. And use --tag and --exclude
",1527157170.0
abrazilianinreddit,"Using the --parallel option actually increased my test time (by a very small margin, around 1.5%), but that's probably because I have relatively few tests (140). 

The password hashing tip was pretty good, though. It improved my tests time by almost 50%.",1527156461.0
davidkwast,"Depending on your project use, you can disable migrations for testing.

But I think it is olny with pytest and pytest-django

https://pytest-django.readthedocs.io/en/latest/database.html#nomigrations-disable-django-1-7-migrations",1527168622.0
asdfwaevc,"Does anyone know of an existing password ""hasher"" that just saves passwords as strings, and compares them? Just for testing of course. That seems like it'd be by far the fastest option.

If not I may write one, it seems easy enough.",1527173716.0
TheLastDev89,Thank you. That was really helpful!,1527249895.0
flipperdeflip,"The usability convention of radio buttons is that only one can be selected at a time. If you want multiple selections use checkboxes, like CheckboxSelectMultiple .",1527149444.0
bpsagar,I didn't completely understand your problem but I think CheckboxSelectMultiple might be helpful.,1527147698.0
haloweenek,"I'd start with the basics. Radio can have only one value, learn to walk before you learn to fly.",1527151954.0
asombrosomike,You can try Heroku. You don’t have to configure a server. It just runs your app. ,1527138468.0
rizogg,"Unlikely django often doesnt work on most shared hosts it's because they dont give you access of using python. It's\(django\) use case demands at least VPS. So there is not much of a cheap choices left. But answering this:

\`1. You can try [namecheap.com](https://namecheap.com) , also godaddy is pretty cheap. In my experience it's just a domain so the expensive such as google is not necessary i think.

2. Cheap VPSs are good choice\(Linode, DigitalOcean etc,..\), VPS will teach you some lesson like WebServer\(Apache, Nginx\), Database, WSGI configuration. Thing is you got the power of choosing what database, webserver, wsgi use. On the other hand there is shared hosts that dedicated for Django \- [webhostpython.com](https://webhostpython.com) i tried their shared host \(30$/year\) and it goes well, since django app was just a few static page. 

More alternatives are:

* [pythonanywhere.com](https://pythonanywhere.com) \- free, paid
* [bluehost.com](https://bluehost.com) yearly paid, fastcgi configuration required. ",1527140130.0
furyfred,Didn't you post this last week?,1527133598.0
Fun2badult,"Have you tested your own site? There's lot of errors for you to say you created a website that can do all the research.

1\) There doesn't seem to be a clear logic in regards to the list. For example, I put in 'battery'. #1 has Rating of 4.4 with count 975 and customer satisfaction of 88&#37;. #2 has Rating of 3.7 with count 847 and customer satisfaction of 74&#37;.  #3 has Rating of 4.5 with count 823 and customer satisfaction of 90&#37;. 

It just seems you're ordering them by the count number \(number of total reviews\), which doesn't tell you anything about how good the item is. Which means, an item with lot of reviews will automatically be rated higher. The customer satisfaction rate goes from 88&#37;\(#1\), 74&#37;\(#2\), then 90&#37;\(#3\). Shouldn't 90&#37; customer satisfaction be rated higher? Also Rating system goes from 4.4\(#1\), 3.7\(#2\), and 4.5\(#3\), which means higher rating item is lower on the ranking which doesn't make sense. 

2\) This happens for any item I put into search. Which means you need to adjust the ordering. 

3\) Also, some items are very limited. I put in 'shoes' and there's only 5 items returned. I'm sure there should be more than 5 results for something like 'shoes'. 

4\) Sometimes when you type in an item after having searched an item, it just goes straight to home page. 

Personally I feel like you're not even testing this thing and just posting it up here. I've seen your post and gave you a review last time, and it doesn't seem like you made any changes. It seems like you're just reposting the same thing and expecting people to give you a good review. I left the same review last time saying that the ordering doesn't make sense and it's still the same, yet I see you posting the same post with the same title.

You should really test it on your own, make sure there aren't blatant errors that can be easily caught, and then post it up for review. ",1527134387.0
thescottwaud,pretty cool. how are you performing the searches? ,1527132239.0
ramse,"https://docs.djangoproject.com/en/dev/topics/auth/customizing/#writing-an-authentication-backend

That'll allow you to do whatever you want during authentication, check whatever you want and return as necessary.",1527119726.0
neurotoxiq,Good luck.  I'm having trouble integrating django with ldap too.  Are you using any 3rd party libraries? Django-auth-ldap? django-python3-ldap?,1527132697.0
xBBTx,"Yes. But...

You should only be sending auth credentials over encrypted connections (https). That goes for default token auth, but also for cookies with session IDs, JWT, OAUTH tokens...

And depending on how you store the token (`localStorage` for example) it may be a bit more vulnerable to XSS attacks, while a session cookie that's HTTPOnly is protected against that sort of attacks.",1527111331.0
nerdwaller,"I don't think the static token approach a great option for things like an SPA/PWA - but it does work fairly well for remote applications/clis/etc - if you allow the user to rotate it. For the SPA/PWA/Mobile App side I would lean toward a rotating token (e.g. django-oauth-toolkit, among others) to limit any ""damage"" a leaked access token could do (as u/xBBTx mentioned - careful where you store any tokens on a client application).",1527127827.0
berkerpeksag,Did you try filling the [`TEST`](https://docs.djangoproject.com/en/2.0/ref/settings/#std:setting-DATABASE-TEST) setting with the credentials of your duplicated database and passing the [`--keepdb`](https://docs.djangoproject.com/en/2.0/ref/django-admin/#cmdoption-test-keepdb) option when running the test suite?,1527120139.0
TBNL,"Do you use actual mssql features?

Consider treating the mssql-based test as integration tests. 

If possible then start creating unit tests based on in memory sqlite or docker based MySQL/postgres, having the advantages:

* fast
* portable
* short feedback loop so actually aiding development",1527155432.0
bradshjg,"Instead of hacking at  Django's test runner, I'd use `pytest-django`

You'll need to set up a little bit of special-ness, but it's [well documented](https://pytest-django.readthedocs.io/en/latest/database.html#django-db-setup).
As it mentions in the docs you'll need to override [`django_db_setup`](https://github.com/pytest-dev/pytest-django/blob/8bd3d3ea058fbe337db69d8c0256b995351b4161/pytest_django/fixtures.py#L73) but the good news is that you should only need to make it a no-op :-)

One other nice thing is that all tests will be run in transactions, so DB state will be maintained across test runs without having to do any bookkeeping.",1527118061.0
dirtybutter,you can just create a test settings file that overwrites the database setting to use your duplicate database,1527107944.0
UloPe,"Easy, run a local database for testing ",1527108649.0
cmd_cmd,I'd suggest figuring this out with DB permissions rather than attempting something exotic. My concern for you is that this is the first step down a path to local weirdness that you'll later regret. 2-cents.  Good luck with it!,1527111883.0
mbrochh,"Do any of your tests actually need a huge DB? The correct way of unittesting is to use an in-memory sqlite DB (if you can, if you don't use advanced DB features) and something like mixer (search it on github) to create just the fixtures you need, right there in each test.

If you have tests that measure performance, maybe you should install something like silk and simply get notifications on slack when a slow SQL query has occurred.",1527120946.0
athermop,"Probably.

I mean, you're not going to find much about it because its a simple use case.

Also, if you want to you could use python\-rq which is like Celery but very lightweight and simple.",1527110614.0
kamante,Check out https://github.com/coleifer/huey as well,1527143921.0
yesvee,https://dramatiq.io/,1527153538.0
FountainRescue,"The process is exactly the same as to deploy Django on any normal server.

Get yourself an Ubuntu EC2 instance that qualifies for the free tier, and hit up Google \- there are hundreds of tutorials on the web, just search with your DJango version, your preferred web server and your Ubuntu version and take the top result.",1527096021.0
dronecub,Check CodingForEntreprenuers YouTube channel :),1527129780.0
eazy17,"If in case you wish to deploy your project on Lambda there is a framework called zappa that seamlessly allows to push the site onto Lambda. Since its serveless you end up saving a lot of money as well when compared to EC2.

Read up zappa's github. They have everything you need to get going. ",1527690366.0
captaintoe88,I would suggest you to look into Django Rest Framework and Django Simple JWT. You can build backend API which gives users tokens after sign up. Your frontend must handle registration and token refresh logic.,1527107177.0
asdfwaevc,"I'm not familiar with hypothesis \(I'd like to be though\), but if the use\-case is limited to just making random email addresses, FactoryBoy has the ""faker"" library built in, that does that.",1527170499.0
synw_,"The simplest way is to use the [ADMINS setting](https://docs.djangoproject.com/en/2.0/ref/settings/#admins): this will mail the stack traces to the admins for the 500 errors when debug is false 

> it only reports the stack trace when settings.DEBUG is False

Check the [require_debug_false](https://docs.djangoproject.com/en/2.0/topics/logging/#django.utils.log.RequireDebugFalse) filter",1527086194.0
lovestruckluna,"If you are still looking, look into Sentry. Very nice web interface, free, and doesn't spam you with a bajillion emails for duplicates.  I had native email alerts set up for a while, but when the site went down I got dozens or hundreds of emails. Never again. ",1527104369.0
mpetyx,"Actually this is the best option available at the moment. I have been using it in production for several years in many different web platforms. 
Are you planning exposing an API to it?",1527088384.0
andrey_shipilov,So basically didn’t read the docs. Right. ,1527063289.0
TunaBoo,Same trap w default method args,1527063212.0
cramur,"Not really Django, just tourist understanding of python :shrug:
",1527436626.0
iKenshu,They dont put the videos on youtube?    ,1527069699.0
allan_w,That website design leaves a lot to be desired!,1527079170.0
cmothebean,"Postgres has range fields.

https://docs.djangoproject.com/en/2.0/ref/contrib/postgres/fields/#datetimerangefield",1527067831.0
i_like_trains_a_lot1,"I am thinking about having a related model UserUnavailability that has a start datetime and end datetime and also a foreign key to the user so that each user can define multiple periods of unavailability.

And on the querying side, it would boil down to checking if there is any such instance with the desired user instance and the current time between the start and end datetime.",1527055722.0
kennydude,"Decide if you want to go for ""available first"" or ""unavailable first"". 

Available first is where you would check if there's anything in an ""unavailable slots"" model against a user. If there's nothing, assume they are available.

The opposite is to filter against an ""available slot"" model, if not assume they are unavailable.

Think of it like a calendar where you would mark when you are available, or when you are not available.",1527080243.0
Felekis,"Very informative, thank you",1527169523.0
goovyn,"This is both simple and informative, thank you!",1527344886.0
HolgerD77,"Oh, that's definitely an interesting combination, will keep this on the list, thanks!",1527686525.0
sultan33g,"I really enjoyed hooking up Django Rest-Knox to my project. I looked at this to help me: http://v1k45.com/blog/modern-django-part-4-adding-authentication-to-react-spa-using-drf/

Here is Django Rest-Knox: https://github.com/James1345/django-rest-knox",1527121242.0
trescoops,"I am by no means an expert, but it strikes me that your first two bullet points can be handled by contrib.auth, with one exception.  So unless social media logins or REST support are required, this would be my default choice. 

[* on rereading your question, I can see that you were asking explicitly about auth for an api, so my comment is of no use to you.  I will leave it here as evidence of my lack of reading comprehension]

The one exception is that contrib.auth doesn't directly support a workflow where users input their email and get a sign-up link to set their password.  However, I know that some users work around this by creating the account with a random password, and then triggering the password reset process (which sends a one-time url) with a custom email template.  This strikes me as a reasonable alternative to using a third party package simply to provide this workflow.",1527157778.0
cugs,"Would be interested to hear others' answers here...

Can't answer most of your questions, but I've been using pinax-accounts for a couple of my projects, and it works great for me.",1527033812.0
braveNewWorldView,"I am so glad to see this and know I'm not alone. Auth with DRF is surprisingly more challenging than I expected. 

Best I can do to help is offer the following tutorial. Worked well for me until I tried to customize. Hope you have better luck: https://medium.com/netscape/full-stack-django-quick-start-with-jwt-auth-and-react-redux-part-i-37853685ab57",1527052586.0
Zoro-Zen,"I was reading this one today.
https://medium.com/@atulmishra_69567/tracking-user-login-activity-in-django-rest-framework-jwt-authentication-32e0194e77d0",1527084415.0
sjor_jack,Looking the same think for last 2 days. I couldn't find proficient and newer tutorials on either of them,1527235306.0
booooomba,"boolean -> is_approved

and then just filter for it",1527010869.0
GHDpro,"I am not sure if a Django package with that functionality exists.

I am building something similar, but it isn’t finished yet nor will it be reusable at first when it is. It works by creating an abstract base class (HistoryModel) that when the conditions for immediate saving are not met will save a “change request” instead of the model itself. That change request can then be applied to the model again.

If you want to have a look, here is the code I wrote so far bu important parts are still missing (like the ability to actually approve and apply the change request back to the model), but it might give you some inspiration for your own system:

https://github.com/ghdpro/animesuki/blob/master/animesuki/history/models.py

Edit, here are some other options (most don’t do quite what you seek): https://djangopackages.org/grids/g/versioning/",1527021235.0
rowdy_beaver,"A second model for incoming changes is probably the way I would implement this.  Then it can store a complete history of activity and you can add other workflow data to it (change_timestamp, change_reason, decline_reason, approved_timestamp, approver).

When approved, the view could pull up the main (live) record and apply the updates.

You might even use this history table when a new record is added, just to record the original state of the data.

",1527025161.0
bukens,"I am looking for it myself, i found [https://github.com/dominno/django\-moderation](https://github.com/dominno/django-moderation) but i think it doesnt work on 2.0",1527070589.0
haloweenek,Sqlite or postgres / built in webserver ,1527000052.0
MustafaTaleb,"I am using a docker-compose file with my db (postgres), a db browser, the django instance, an angular frontend, and traefik as the reverse proxy to connect the two. ",1526997364.0
McDivvy,"VirtualBox VM with an as-close-as-possible copy of the Live Ubuntu Server.

It's the only way to be sure!",1527000309.0
yerfatma,"I use Windows and Mac, typically just using the Django dev server directly and Postgres.",1527000022.0
booooomba,"development: Linux, runserver, postgres and sqlite

deployed: Linux, nginx, gunicorn, postgres",1527000796.0
i_amwithnail,"Ubuntu / Nginx & Gunicorn / Postgres.  Wrapped up in docker, unless it's an incredibly trivial example. 
",1526998994.0
apreche,"I used to use VirtualBox and inside of that I ran the same Ubuntu version that I ran on the server.

Now I use the same thing, only I use the Windows subsystem for Linux instead of VirtualBox. It works so well it may as well be a VirtualBox. ",1527002623.0
SignificantTomato3,"I like to keep it simple on my local instance, usually PostgreSQL + Redis + built-in web server, wrapped in docker.

For production, uwsgi is my choice. ",1527004713.0
will_r3ddit_4_food,Pythonanywhere,1527008430.0
NomNomDePlume,"Locally I use kubuntu, django's runserver, and sqlite. In production it's usually ubuntu / nginx+gunicorn(or daphne) / postgres.",1527010852.0
fjortisar,"macOS \+ django built in server \+  sqlite. If I want something more than that, or i need other components \(like a message broker\) then i use docker or vagrant to run those \(though could always do this in macos, prefer to not leave the cruft around\)",1527019871.0
mata-mata_kemkominfo,"OS: CentOS 7 server in VMware Workstation on a Windows 10 machine with 512 MB RAM

Web server: nginx stable + uWSGI with auto-reload

Database: Postgres 10

Files are stored in the host. The VM gets access to the files using VMware shared folder.",1527050485.0
selahattinunlu,"I'm new in Django. I'm using built in web server and mysql for now.
I guess I will use docker on localhost in the future.
",1527080724.0
yesvee,python manage.py runserver and sqlite,1527004430.0
asplodey,"https://docs.djangoproject.com/en/2.0/topics/i18n/timezones/

Converting to UTC for storage in the database is the right thing.

Is there a specific area that you're having trouble with? What are you trying to achieve? I know timezones can be a headache.",1526995881.0
booooomba,Storing times/dates in UTC in the database is the correct way to do it. Django should automatically convert that time to your selected timezone. Is it not doing that?,1527001517.0
fdemmer,"in the upcoming django 2.1 this template tag is useful for that: https://docs.djangoproject.com/en/dev/ref/templates/builtins/#std:templatefilter-json_script

meanwhile as u/lzantal points out, you are not passing a ""data"" variable to the template context; see https://docs.djangoproject.com/en/2.0/topics/http/shortcuts/#render

the keyword argument of render() that you want is ""context"" not ""data"" and the key used in the context dictionary is the variable name used in the template context when rendering.

    render(request, 'foo.html', context={'data': data})",1526967622.0
Investisseur,Take this over to /r/djangolearning,1526956615.0
lzantal,"Sorry but your code does not make much sense. You ref data in your template but in your view you use testdata. Also you are not passing info to JS from django, you are rendering it. 
To pass data you need to make an ajax request from JS and return json from your django view. Then use the returned value to render it in JS. ",1526953130.0
Android_XIII,You'd start off with a container then make a div with row class then within that put col-4 col-8. Now you have a column for the title on the left and one for table on the right (col-8). You can put a red border to visualize this when building. This might help you understand how the grid system works. Should always wrap columns within rows so they stay responsive as well. Im sure you can figure out how to make the table on the right so I'm going to leave that part out. You can also use spacing classes provided by bootstrap (https://getbootstrap.com/docs/4.1/layout/grid/#alignment) to align items within columns. Hope this helps!,1526945617.0
pydanny,"* namesilo for domain names
* AWS Lambda + Zappa for deployment and handling of async
* Cloudflare for performance, reliability, security, and insights
* Sentry for debugging (I use the commercial service, even though it's open source because I want to finance open source efforts by Armin Ronacher)",1526940782.0
hum3,"I have used fabric for very simple uploads to Heroku (or rather fabric3) .  I mostly want to do very simple things like
Deploy this to heroku or switch to a different version and try that.  Then to upgrade production ones.  I abstracted the steps in https://github.com/drummonds/fab_support.  I did try ansible but I preferred having something very simple..",1526942542.0
mbrochh,"Ansible to provision the servers. Fabric to deploy new versions.

This has worked for 8 years and I don't think I'll change that anytime soon.

EDIT: Fixed typo",1526946953.0
genesem,"* name.com for domains 
* cloudflare for cdn, https, firewall etc.
* vultr and linode for bare vps hosting.
* shell scripts to automate server side things.
* server side is powered with nginx/mariadb(aka mysql) and uwsgi / emperor mode (lots of sites handled with ease). 
p.s. deployment time is around 15 mins for almost any django project.
",1526978920.0
Olick,I have a plesk server on google compute engine and I use passenger wgsi.,1526999045.0
i_like_trains_a_lot1,For my projects I use docker with docker-compose for local development and when deploying I build a docker image with gunicorn in it. On the deployment server I usually spin the service with docker and the updating is just a matter of two docker commands.,1527013397.0
2malH,!RemindMe 5 days,1526939458.0
porksmash,"In this situation it's Django's responsibility to decide whether or not a request has permission to view or modify an API endpoint. It's the frontend's responsibility to handle this correctly, including not showing UI elements or requesting endpoints. When I authenticate my users in a React app I also pass what permissions they have to the frontend code, so it can decide what to display. This by itself isn't secure, obviously, so Django REST Framework still needs to enforce these permissions as far as access to API endpoints goes.

I find myself creating custom permission classes in DRF often and you shouldn't shy away from it. ",1526933800.0
yerfatma,We use [`DRYPermissions`](https://github.com/dbkaplan/dry-rest-permissions) for this and it's pretty good.,1526937961.0
tquinn35,In case anyone is wondering what I decided to do. I have decided to use a mix of two of the ideas mentioned above. I am going to have to vue clients one for the client and other roles based off it and one for the admin role and other roles based of that. I will redirect to the appropriate client after login based on what role the user has stored. I decided to split it up since those two groups of roles will not share too much UI and having it split should make it easier to work with and maintain instead of one giant front end client. Ill probably use with dry permissions or django\-guardian plus vue router route guards to enforce roles with the clients themselves. ,1527181114.0
youlleatitandlikeit,"I thought Django debug toolbar did this. When I've used it, it showed the line of code where the query gets evaluated. That line generally includes the name for the query variable. Then you can search for that variable in the code.

Oh wait... The issue is that the queries are in a log somewhere and you want to track their origin in the code? 

I think this will be pretty difficult actually based on the fact that queries are evaluated in a lazy fashion. So the stack trace could end up being far removed from where the initial query was formed. 

I'd be interested in seeing the solution you come up with. ",1526912631.0
cdman,"PS2: if somebody wants some internet points, they can also answer this on Stack Overflow :) - https://stackoverflow.com/questions/50422261/recommended-way-to-find-the-source-of-a-query-when-using-django",1526908501.0
genesem,"I'm using this to this task:

    # Debug:
    # from django.db import connection as conn
    #  data = Obj.objects.filter(... ) <-- your orm query.
    # print('SQL:', conn.queries)  # debug SQL  <- result raw SQL 
",1526915763.0
liquidpele,"Your idea of appending the stacktrace into the query itself is clever.  Just make sure you have a toggle in settings so you can turn it off when not needed.  We did something similar but with http headers, where when in debug we return all queries run for a particular web request in the return http headers.  Really helped to streamline rest requests.  ",1526926175.0
PMMeUrHopesNDreams,"The logging system can write all sql queries to a log.

https://docs.djangoproject.com/en/2.0/topics/logging/

(only in DEBUG mode)",1526951127.0
cdman,"FYI: a stackoverflow user pointed me to this project: https://pypi.org/project/django-sql-stacktrace/

Unfortunately it's not maintained, but implements the basic idea (by patching `BaseDatabaseWrapper.cursor`).",1527343839.0
jameswyse,I’ve been using this: https://github.com/dobarkod/django-queryinspect/  to log duplicate/slow queries along with tracebacks. It’s not quite what you’re looking for but I find it very useful for optimising API requests so worth a mention.,1527493471.0
JeremyTiki,You probably just need to change your $PYTHONPATH so that the directory libxml2 2.9 is in is **before** the directory libxml 2.7 is installed in.,1526906805.0
dynaken,In Django wsgi.py you should be able to import sys and add the path into it. ,1526920070.0
rizogg,You should check your error log for both Apache and WSGI config. Are you using UWSGI or mod\_wsgi? ,1526905659.0
yesvee,Use gunicorn instead.,1527005689.0
NotSelfAware,"You shouldn't be including the ID in `form.fields`. Django will create an ID for the model automatically, so it doesn't need to be included in the form.",1526902501.0
fdemmer,"i assume you have read the documentation about [rendering form errors](https://docs.djangoproject.com/en/2.0/topics/forms/#rendering-fields-manually)?

remove any try/except you added and let the form field do it's validation, that generates form errors (also assuming it is a [ModelForm with auto-generated field](https://docs.djangoproject.com/en/2.0/topics/forms/modelforms/) for a Model, that has a field which is actually marked as [`unique=True`](https://docs.djangoproject.com/en/2.0/ref/models/fields/#unique)).",1526910894.0
SkawPV,"I solved it by just moving the code inside except IntegrityError... to *def form\_invalid\(self, form\):*",1527059127.0
Ap0110nian,"I've not encountered such a problem, I recommend posting your question on Stackoverflow with django restframework tag, guys from restframework community will answer :)",1526888170.0
thewombat42,Same thing happens to me. ,1526890458.0
daredevil82,"try it again with the web dev console open, anything in the output?",1526901160.0
ccb621,"How many items are in the filter list?

Have you checked the open issues on Github?",1526920314.0
andrey_shipilov,Nope never had that. Also don’t know many people who use safari. ,1526884069.0
epwnym,https://docs.djangoproject.com/en/dev/ref/templates/builtins/#linebreaks,1526883269.0
masklinn,"> What am i doing wrong?

Misunderstanding what happens? When you render your text in your template, it gets treated as HTML text. HTML doesn't really care about whitespace (at least in its default style), especially not newlines, so all your newlines get disappeared (collapsed to a single space really) as part of the HTML rendering process.

To fix this, you need to convert your ""text"" formatting into ""HTML"" formatting somehow, there are multiple ways to do so:

* you can play with the `white-space` CSS property to make the HTML renderer care about your newlines (and possibly entire spacing)
* you can use the `linebreaks` filter which /u/epwnym linked, converting your textual linebreaks into HTML ones (and even proper paragraphs)
* you can do as Reddit or StackOverflow do and treat your text as *lightweight markup* content (usually Markdown) and convert that to HTML while rendering it, there are probably Django extensions with markdown filters or widgets, this would not only convert newlines but also convert textual bullets to actual HTML lists",1526891017.0
jefwillems,"I use MarkdownX, you can write markdown in tue textarea's  with previews, and render the text as html on your page!",1526893802.0
booooomba,https://docs.djangoproject.com/en/2.0/ref/templates/builtins/#autoescape,1526869231.0
athermop,"Make something with it.

That's the best way to learn any framework or programming language or whatever.

Also, you won't learn that stuff in a week.  ",1526856761.0
SomeShittyDeveloper,"It boils down to ""best tool for the job"". If you have a group of people who know Python \(or are willing to learn Python\), Django is a great tool. It has a lot built into it, and additional functionality is just a `pip install` away.",1526849576.0
athermop,"It is likely safer security\-wise than PHP if only because it's easier to write safe code.

But, really, there's no magical reason.  It just boils down to the fact that Python is a nice language to write in and, generally speaking, Django has a nice API to work with.",1526851551.0
ramse,"Django is a piece of software written in Python. Python being the language.

You need to be comparing python, php, java as those are languages.

PHP's version of django would be something along the lines of Laravel, CodeIgniter, Symfony...etc.",1526852901.0
SkawPV,"Django Admin, baby",1526894494.0
bykof,Django is the best approach you can ever use for a web application.,1526849196.0
fdemmer,"no complete comparison here, but using factory-boy over mommy because of faker integration.",1526896280.0
TheOtherDanielFromSL,"I recently started with Mixer.

If you want something dead simple to setup? Mixer worked *really* well for me - although I didn't need it for a lot.

For more advanced functionality - factory-boy seems to be the defacto standard.",1527107009.0
lifenautjoe,Using mixer and loving its simplicity and zero setup cost.,1540572557.0
genesem,"Wow sweet guys... It's competelly downvoted to zero.
So `community` of this reddid thinks that this app is not viable?

quite sad to see that toxit behaviour. 

p.s. I'm an author if it does matter.

",1526839522.0
SignificantTomato3,"You might try writing custom template tag for rendering forms(fields), then just style it with CSS according to your needs.

Take a look at materializecss for Django for inspiration (this repo is not maintained anymore, but might give you some inspiration)
https://github.com/florent1933/django-materializecss-form",1526981472.0
Poromenos,"It's not clear that user data must be deleted from backups, but let's assume it must. I would be more in favor of encrypting data while backing up, purely because it's fewer moving parts to break in production.

The main problem is where you'd store the keys, because if you back the keys up, you can restore historical users, and if you don't... well, you have no backups for the keys. I don't really have any ideas on how to handle that currently, I'm afraid.

As for specifying the encrypted fields, I would use an EncryptedWhateverField in Django that set some particular bit in the database (or otherwise signified to the backup process that the data needs to be encrypted). This is so you can avoid the encryption falling out of sync with the schema, and making mistakes like ""this field was supposed to be encrypted but we forgot to specify it in the backup script after the migration, and now we're getting sued for lots of money"".",1526817007.0
idiomatik,"We had same cocerns with a client I am working with. 

What we decided to do is not to alter data that i backed up, but to keep ids of the deleted users (these IDs shouldn't contain any sensitive data) an when restoring the data from backups remove users. 

As for the backups, we have a limit of how old they are, so at the moment oldest backup is 12 months old. 
In the future we might shorten this and have backups that are only few months ols",1526825032.0
rascaldev,"> While scrubbing user data from a DB is easy enough, it's somewhat harder from backups, so the generally approach I've read so far is that such data should be encrypted prior to backup with a user-unique key, then if a user requests deletion, the key is deleted rather than having to alter your backups (I'm not sure what the disaster recovery mechanism is for those user encryption keys; maybe just not to store weeklies, monthlies etc)

I'm not well versed on GDPR and American to boot so take what I say with a grain of salt. I'm also assuming [this](https://gdpr-info.eu/art-17-gdpr/) is what you're talking about.

Seems like you'd run into the same problem there as well. Since the encryption key will need to be backed up just in the case of bit rot or accidental deletion. you're effectively in the same boat the actual user data was in (having backups of the ""user data""). That's even assuming that the EU will consider obfuscation of the data through encryption sufficient. It's possible they won't consider erasure of an encryption key to be sufficient since he actual cipher text containing the user data (given enough time and compute) can be broken.

The only way I can see working around this problem would be breaking out your backups based on which databases have user data in them and which do not. The user data would then be set to be backed up with less of a retention period to allow for them to just age out naturally while non-user data could be kept for normal time periods. Basically keying off the ""undue delay"" exemption. If someone tries to complain then tell them that you've removed the data from the active database that waiting for backups to age out is a reasonable delay.

Only other way I can think of would be to break the backups out user-by-user (either the main data or the encryption key) and then delete them manually. ",1526860123.0
Rohaq,"There are reasonable allowances when it comes to backups - not everybody has easily scrubbable backup systems; offsite serial tape backups for example are not accessible from any of your systems until they're either overwritten or restored.

First off, you can of course retain backups for a sensible period, but you need an equally sensible retention policy in place leading to their eventual destruction. For example, maybe daily backups with a 7 day retention policy, with one each week kept as a weekly snapshot with a retention policy of 4 weeks, and the fourth kept as a monthly snapshot with a 6 month retention policy. This isn't unusual, but keep it to a minimum dependent on your needs.

Second: Keep track of any deletion requests for your maximum retention period. Nothing that includes the data, just identifiers: Their tables and primary keys, for example. Should you need to restore your backup, you can replay your deletions from the backup period - or better still, exclude them during your restore process - to make sure that you don't end up restoring something you shouldn't.

EDIT: Your idea for using user-unique encryption keys is an interesting one, but it begs the question: How do you back those up without having the same issue? You can't just not back them up, since you're essentially making your encrypted backups potentially useless, or even you are backing them up, you still need to follow the same retention policies as the backups they're associated with to make them useful.",1526850898.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1526800951.0
belak51,"I would try specifying `--bind 0.0.0.0:8000` in the gunicorn args. My guess is that it's binding to localhost rather than all available addresses so when nginx tries to connect, it can't.",1526799576.0
sultan33g,Have you checked the docker-compose logs?,1527121412.0
jaszhix,Is debug mode enabled in settings.py?,1526782678.0
,[deleted],1526801687.0
superchink,"GitHub is an open source code repository hosting service, and is not affiliated with allauth, at all. Please don’t consider this post any reason to panic. ",1526767367.0
JayTurnr,I don't get how the WHOIS for Github has anything to do with it?,1526765716.0
wldcordeiro,Of all things to have a problem with that package with I think this thread makes the least sense. ,1526770821.0
DabsJeeves,What does this mean for regular Django users and how can we stay protected.,1526764394.0
SenorDosEquis,It is very unclear what you’re asking.,1526753680.0
Whoopska,"does adding an `ordering` to your Meta class fix it?

    class Profile(models.Model):
        class Meta:
           ordering = (""-id"", )",1526748071.0
lovamova,Use .order\(\) before .first\(\) or .last\(\) calls.,1526748622.0
souldeux,"The Django templating engine can be used for more than just rendering webpages! For example, I use it to generate dynamic HTML emails and PDFs.",1526742566.0
andrey_shipilov,What? Of course. You can use Jinja but that's an overkill.,1526739196.0
marcosdumay,Not everything needs to be a frontend application.,1526743005.0
jonykalavera,"It's like saying: I always use screwdrivers, are hammers still relevant?",1526740920.0
lzantal,Of course they are. Even if you use a JS front end UI framework. I have many diff templates where I need fine grained control on who can access it and load specific templates that kicks off the front end. Also all my pdf is generated from django templates that renders the data etc...,1526739270.0
,[deleted],1526743178.0
jlugao,"I believe that the bottom line of this discussion is it depends on the application and personal preferences.
If you are doing a small project where adding an spa won't add much to the user experience, using django templates reduce complexity of the project significantly.
Also, big projects that are more website-like (big portal using wagtail p.e.)  benefit from being rendered server-side without all the hassle of doing ssr on javascript.
However, things that are more app-like benefit from the interactivity (and reactivity and other itys) modern js stack have to offer. It doesn't matter if you are using vue, react or angular (or something else)
What is important here is that there isn't a right way of doing things. Nor a 2018 way of doing things, yes spa is here but it is not to be used everywhere and even when you can make an spa and it will make the project better you have to weight in the time and cost of adding this feature, not to mention maintainability.
I believe a more useful discussion would be how can we make django easier to use with spas(no matter what js framework you are using)?",1526758007.0
bwapeup12345,"Django is used in a lot of projects that are not directly public consumer\-facing. Previously I worked at a place where we had an internal web application that was at the heart of what my organization did. It had a total user base of about 30 people. Was it a big project? Not by the number of users, all of whom were internal. But it was the nexus of a multi\-billion dollar trading operation. So by that measure you bet it was a big and mission critical project. For a project like that it would've been downright stupid to build an SPA. The application was not built on Django \(not becuase we chose not to but more because nobody was familiar with it at the time, so we chose an inferior technology in hindsight\). But I know for sure if Django did not have easy templating and forced us to do JS SPA, it definitely would not have been chosen for the project. So yes, for many ""big"" projects the templating component is critical.",1526778411.0
Ap0110nian,"depends on project, but for a big project I prefer to separate client-side concerns from server-side.",1526738908.0
mbrochh,"People here keep saying ""of course they"" are. Well, I'm not using them any more, except maybe for email templates.

My Django projects only use graphene to serve an API, and the frontend is done via ReactJS. No more Django templates involved.

EDIT: To clarify: In existing projects, they are as great as always, I'd see no reason to replace them. Always thought that the restrictions they enforce on you are good - by writing more template tags, you end up with more code that is easily testable via unittests.",1526748342.0
Investisseur,"I'm just gonna post this to all the naysayers:

\- The question got posted, this must mean this topic isn't settled. It might be important to open your view if you immediately said no.

\- Django came out in 2005. It might be time to revisit WHY we are doing some things as a community.

\- Unfortunately my thoughts on this could not resist the r/django hive mind and got downvoted pretty heavy for simply providing my opinion and then an explanation of that opinion.

\- I still believe a separation of concerns should be used. I still appreciate what template rendering can do \(PDFs, Ansible Scripts, hell to extend this is what Next.js is\). HOWEVER, I no longer believe that Django should handle template rendering anymore. Because we have to deal with: the template loader, managing a new set of static files, another language \(yep the templating language is a language\), separate CSS & JS, costs associated with storing and processing those files. These all are disadvantages as we move to server\-less architecture \(and seriously if you haven't tried Zappa with Django you are missing out, I was a non believer until recently BUT WE CAN CHANGE OUR OPINIONS\).

So yes Admin pages would be rendered useless currently. I believe the real solution would be to rewrite the Admin templates to be a SPA. But here we are on a THREAD TO DISCUSS IF THEY ARE RELEVANT, not about YOUR current legacy infrastructure.   ",1526750022.0
Investisseur,I’m under the impression that Django should only be used for an API. However handling sending emails is the thing stopping me from removing the template renders altogether. If anyone has solutions for sending registration / password reset emails without the template render that would be great! ,1526740563.0
frankwiles,"q2 and q3 aren’t empty, they are QuerySet objects. Your ifs should be {% if fiche.q2.all %}",1526734692.0
booooomba,Please format your code better. It is easier to help you this way.,1526734303.0
zettabyte,"‘fiche.q3 is not None` isn't correct, most likely.  Unless the q3 variable is actually None.

`fiche.q2` tested as a Boolean looks correct, though.  Check your view code to make sure the data is making it into the context correctly.  Do some `print()`s and check the runserver output.  Usually that kind of error is because the data isn't what you think.

Or your browser is returning a cached page.  Again, runserver output should indicate that.",1526735394.0
kaddourkardio,"Finally @frankwiles pointed me to the right direction, the object here was `fiche.q2.all` instead of simply `fiche.q2`.
Thank you for your help this ""bug"" made me sick .",1526768119.0
fdemmer,use django rest framework.,1526736354.0
Investisseur,"DRF actually has its own doc built in using coreapi
http://www.django-rest-framework.org/topics/documenting-your-api/",1526737524.0
SignificantTomato3,"Depends on your audience. For admin panel, I'd store the file on the server, then tried uploading it via a worker in the background, so the user could go back to what he was doing, checking on his file status from time to time (in dedicated panel)

For more community-oriented applications, I'd handle it on the client side. ",1526733171.0
booooomba,"Haha what? Actually it is quite the opposite, I find the Django docs to be quite good.

What exactly do you need pictures/visuals of??",1526694274.0
Jaboof,"I've worked with a plethora of web frameworks, and tbh I regularly come back to django because I find the documentation so extensive",1526694940.0
ccb621,"I find the documentation to be quite useful.

> ...has no pictures/visuals...

Exactly what do you need visualized? Can you point to other frameworks' documentation that makes good use of visualizations?

> ...and does a very poor job giving us a high level overview of the framework, motivation for its development, and its philosophies

It's a web framework started 12 years ago. If you want the history, read the Wikipedia page. How will knowing the motivation help you either decide to adopt the framework, or learn how to use it? Same question for the philosophies. ",1526696352.0
dirtybutter,"Django has probably the best documentation of any software project i've ever used. in fact, the documentation was one of the primary factors in deciding to pick up django in the first place.

i guess you're right in that there are few graphics or visualizations. the only one i can remember seeing is the end-to-end diagram of the request/response cycle. but the concepts in django aren't unique, so deferring to external resources makes sense to me  ",1526718087.0
bwapeup12345,"I've been learning Django for about 8 months now. I started from scratch, learning HTML, then CSS, then Javascript. At that juncture, I struggled a lot with the choice of going with Django, which required me to learn another language \(Python\) vs continuing with Node and one of the JS backend frameworks, further building on my Javascript skills. The most natural choice was JS. I chose to go with Django based on a gut feel that the extra cost of learning another language would be more than offset by the the benefits of working with Python and Django. But it wasn't an easy choice. For the first 2 months or so, I was repeatedly tempted to abandon Django and go with JS. EVERY SINGLE TIME, it was the Django docs, availability of resources online, and the community that kept pulling me back, after dabbling with some JS framework with minimal docs. Node frameworks seemed deceptively simple for trivial applications but once you start building something real, you realize you have to be an experienced web developer already because there are just so many gaps. That is my newbie experience. ",1526707833.0
fuckslavs,The documentation is incredibly useful but when I started I really felt like visuals would be helpful. Writing this post though I'm struggling to think of an example where they would be useful other than widgets.,1526731195.0
SignificantTomato3,"What are you missing in Django's docs, apart from visuals(of what? Admin panel?) and history (which I think shouldn't be placed directly in the docs?)

I'm really satisfied with the docs, having experience with other frameworks, it's been a pleasure to work with Django's.

",1526734138.0
justinba1010,"Pretty good man! Hey seriously consider getting a degree in Computer Science. I'm about the same age as you, and let me tell you this, your creativeness is going to do you solid if you're dedicated and can get the math side of CS down. There are two things I've learned most CS students lack, mathematical knowledge and/or creativeness. Keep it up, and if you want some great resources I can send you some textbooks in pm and stuff.  

By the way awesome site, I like the clean design even though I cannot read much of it.  

And good luck man, by the way not to be insulting but your English is fantastic. Keep it up and just stay dedicated and there are some awesome opportunities for someone self started like you!",1526684316.0
SignificantTomato3,"Basically, when I was your age (which didn't happen quite a long ago) I decided to go on the internship, instead of a college. 
Not sure what are the education standard in your country, but here, in Europe, apart from top universities, all IT-related bachelor studies are years behind the market. They will teach you how to think like a programmer, with a good understanding of what's going on underneath, but you won't get any better at programming itself.

Have you considered one of the top companies, like Google, Booking, Microsoft etc? They're always looking for talented and motivated ones, programming skills are not so important for the entry-level jobs, most of them focus on algorithmics skills instead.

Have you considered some type of an internship? Summer is coming, usually, big companies have some positions open, drop them a mail.

Looking at my career path, I regret nothing about my decision, computer science is mostly about self-improvement and self-learning.  You can do it without college. But college itself is a great experience.",1526730568.0
ccb621,I made over $120K in my role at edX. I make more at my current position. I occasionally freelance at $70-100 per hour. Django has little to do with my pay. It’s the experience and expertise that gets the money. ,1526671641.0
apreche,"Full time Python/Django developer. The 100K\+ salaries are real, at least if you work in New York City and have many years of experience.",1526676285.0
prophile,Beware of how biased a sample the comments here might be.,1526682616.0
batisteo,€32k in western Europe at intermediate level. ,1526672419.0
unkz,We pay $100k+ for Django devs.,1526683902.0
yapel,"$20 U$S/hour, part time, can barely live, south american country (think you should ask from where the people answering are from)",1526675474.0
jaymac1937,"In Houston, TX competent Django/Python devs \(3\-5yr XP\) are making $130\-$150/hr freelance, or $160k\-$180/yr FTE",1526678311.0
delibaltas,"$60/h remotely. I have approval for 40h/w, but I usually work 20-30. Besides that, I agree that is not the tool but the experience.",1526674718.0
pancakeses,"I'm really curious to see the results of this post.

I'm developing a set of apps for management of a particular type of Utility district. My primary competitor sells a comparable product for about $32,000 + $900 /month, and I think I can beat them on overall quality and user experience.

I already have one customer (who I'm working with to develop the initial set of apps). I'm giving them a discounted rate, since I was unfamiliar with how these particular utility districts work when I started out, and they're very helpful to work with. I'm making my apps generic enough that they can be used to serve similar utility districts throughout the continental US, and I'm making them modular enough that I can offer a small variety of different feature sets at different pricing tiers.

I have a core of apps (User accounts, core district property information, admin, basic reporting, and basic utility order management), and will also offer optional features such as billing/invoicing, detailed reporting with GIS, document management, etc.

Hopefully I'll be making a decent amount on this project soon if I can market effectively to districts that aren't currently using technology effectively, but want to.

So, to answer your question, I'm not making much from Django right now, but I hope to be making some serious cash soon!",1526673645.0
cosileone,I’m 3 years out of school and making 90k + equity at a startup in NYC. ,1526684037.0
iconfinder,About $130k per year. But my job is not full time Django development.,1526674642.0
cringe_master_5000,I'll charge your $100/hr. PM?,1526675704.0
pewpewpewmoon,"Man, I thought I was doing good with 80k for 3\-5 years python \(django, flask, pandas, pytorch as main tools\) \+ aws dev assc cert, and lpic\-1\(its a joke, get the red hat one\).

I should write a new resume",1526713426.0
Investisseur,"$120k currently, and going up every year so ya know. Been doing Django for 4 years. My wheelhouse also includes React \(\+ Redux\), Linux Admin, AWS Deployments, etc.

Edit: A comment and please quote me on this ""If Django is good enough for Instagram, it's good enough for the rest of us.""",1526677245.0
A3gis,"For an internship I got $21/hr with low/medium cost of living. The starting salary would have been around $55k according to Glassdoor.

I don't think knowing Django specifically gives you a boost. This is just a normal entry-level software engineering salary in my area.",1526688077.0
jinchuika,"Watching these comment makes me feel really sad about our reality in developing countries. I make about $19k a year and have about three years of experience, this isn't a bad salary by the way, I can live _well_ with it, but anyway...",1526693122.0
krnr,"3 years exp, 20k per year and this is TOP salary. the majority gets 8-12k. russia",1526727471.0
brejoc,"This alone won't tell you much, because you have to consider the expenses people have. This might vary greatly even in the same state. ",1526675499.0
dpineo,"It seems to me that Glassdoor etc. generally lowballs salaries.  It makes sense when you consider that their customers are the hiring companies, and they want to make those customers happy by funneling to them potential employees that undervalue themselves.",1526696060.0
beholdsa,"As others have said, this is going to vary a ton work location and experience. Also the work the industry you work in.",1526695617.0
MagicWishMonkey,"100k is on the low end, the market has been crazy for years and it keeps getting crazier.",1526700102.0
DeletedLastAccount,"Living in the Midwest, about 77,000 a year. And that is with 12 years of experience as a developer.

Ugh.",1526722569.0
grantathon,I get paid $75 per hour freelancing on the side. ,1526727305.0
Ap0110nian,"For full time it's about $9k per year in Iran
I'm senior software engineer with 4+ years background in python/django and many other things",1526738742.0
proxwell,"I do mostly consulting with new projects at $150/hr.  I have a few clients that I've worked with for years at $125/hr.  When looking at FT remote gigs, I generally won't look at anything below $175k base, and usually include equity, RSUs and some form of bonus.",1526741495.0
,Over 9000,1526729399.0
Oriphiel1,"I'm depressed lol, nearly 14K with 2 years of experience in South America country.",1527011557.0
CaffeinatedT,I don't think anyone who 'just knows django' is going to be making 100k on their own. Django is part of a whole ecosystem of web and backend dev. E.g someone might know django and be a full stack engineer for a global website integrating other web technologies and caches and they'll likely be earning a lot more than someone who just knows enough to set up a basic app. Django is a tool not a career path. ,1527545602.0
teewuane,"Nice try, co-worker ;)",1526693145.0
space_sounds,"Thats odd imports should work, are you migrating in the right order?
https://docs.djangoproject.com/en/2.0/topics/db/models/#models-across-files",1526657343.0
Vinhii,It says 94% off ($11.99). ,1526656447.0
Laundr,"Ooh, I like the [json\-script template tag](https://docs.djangoproject.com/en/dev/ref/templates/builtins/#json-script)!",1526657769.0
CKreuzberger,"Dear reddit, TIL that smorgasbord is a real word (I'm not a native speaker).

PS: In german this translates to ""Sammelsurium"", which must sound equally weird to non native german speakers :)",1526627396.0
winner_godson,Just read through the release note. Though I am new to Django and I don't understand much of the note. I just want to appreciate everyone contributing to Django.,1526660220.0
ccb621,"Read the DRF docs.

As for server-side vs. client-side rendering, the choice depends on your use case. Is your content actually dynamic and changing based on user interaction? Client-side may be the way to go. Are you simply exposing relatively static data? Server-side plus caching is a better option.",1526599763.0
shabda,"Django ORM Cookbook is a book about doing things with Django ORM and Django models. Django is a “MTV” (Model-Template-View) framework – This book provides a deep dive into the M part.

They take the form of about 50 questions of the form ""How to do X with Django ORM/Queryset/Models"" and is targetted towards journeyman Django developers.

The book is [open sourced and available at github](https://github.com/agiliq/django-orm-cookbook) and available to read for free at [https://books.agiliq.com/projects/django-orm-cookbook/en/latest/](https://books.agiliq.com/projects/django-orm-cookbook/en/latest/)

Its our third recently released free Django books. You can read all of them at

- [Django ORM cookbook](https://books.agiliq.com/projects/django-orm-cookbook/en/latest/)
- [Django admin cookbook](https://books.agiliq.com/projects/django-admin-cookbook/en/latest/)
- [Building APIs with Django and Django Rest Framework](https://books.agiliq.com/projects/django-api-polls-tutorial/en/latest/)

You can read the feedback from when I first posted about this book idea here: https://www.reddit.com/r/django/comments/82p8hb/book_announcement_django_orm_cookbook_how_to_do/

We are working on a few more (short) books. I am looking for feedback on them as well- would they be useful? Some of these are partially done, and some are just ideas

- [Django projects cookbook](https://books.agiliq.com/projects/djenofdjango/en/latest/) (Learn Django by building real projects)
- Advanced Python by Reading Successful Python Projects. (Learn advanced Python concepts by seeings how Django, flask and Pandas.)
- Building Multi tenant Django apps (Learns the various approaches to build Django apps - Shared DB vs Isolated Schema vs Isolated Database vs Docker) 

",1526580632.0
pydanny,Well done as always.,1526596886.0
yee_mon,That is quite amazing. I shall be spreading this link to my coleagues.,1526585655.0
colly_wolly,"One thing that needs added is a section on using prefetch_related() and select_related(). Judging by the applications that o have worked on written by others, not many people know how to use them. ",1526634655.0
radwon,"https://www.heroku.com

https://www.pythonanywhere.com
",1526578622.0
SkawPV,"I'm using [https://www.webfaction.com/](https://www.webfaction.com/)

The deploy phase was a bit...tricky, to say the least.",1526642102.0
SignificantTomato3,"Depends on the size, I really like the Heroku for a simplified configuration (not into devops), have some good experience with hosting e-commerce application, with ~6000 views per month, for only 9$ monthly.

You could look after VPS that guarantees you resources, with an ability to set up your own WSGI stack (NGINX + UWSGI) or Apache with mod_wsgi.

Just don't fell for hostings running FastCGI, hosting Django apps in there is a terrible experience. ",1526732498.0
genesem,Linode and Vultr (despite of its name) are best for bare vps (cheap and fast).,1526915371.0
Investisseur,AWS Lambda ,1526582106.0
eattherichnow,"Keep it to one service per container - just let Nginx talk to Django over tcp. You can ensure you have dns-resolvable endpoints using compose (likely best in dev), Swarm (probably easiest in production) or Kubernetes (likely to completely overshadow Swarm, IMO unfortunately).

Keeping multiple services per container moves you away from “containers” towards old-school jails/chroots. Nothing wrong in that, but imo those require more legwork to both set them up and maintain. 
",1526573634.0
lvarin,I run Django in docker. It is just httpd with mod_wsgi. Easy to configure  and no systemd.,1526581219.0
meshcookie,"I would suggest using AWS Elastic beanstalk (https://aws.amazon.com/elasticbeanstalk/) for deployment, you will get following benefits:
- No need to worry about uWSGI, nginx or systemd, AWS guys will take care of it.
- You can autoscale it based on traffic
- Deployments are as easy as typing eb deploy.
- Deployment is round-robin, so you will never go down
- You can focus on development rather than server maintenance.

",1526655696.0
genesem,"Using docker is overengeneering and takes a lot of memory and time to support. 

If there is only one website you can simplifiy install using wsgiserver.py instead of uwsgi. It is fast enought.

And I would suggest to use systemd (built in in modern ubuntu),
uwsgi /emperor mode (if theres a lot of sites) + nginx as a reverse proxy ofc.

Im running such kind of setup on the bare vps with 1G memory.



",1526915087.0
BuyHighExpire,"Curious, other than to learn it, what advantages would deploying in docker have over a more 'traditional' automated deployment using ansible or chef? 
  
I understand its portable and easy to do in place upgrades of the containers, but for a simple website/webapp that isnt really shipped to customers, why would you use docker at all? ""Same"" environment in production and dev? (Getting rid of the 'it works locally' issue?)",1526579037.0
haloweenek,Don’t do it,1526576005.0
porksmash,https://docs.djangoproject.com/en/2.0/topics/migrations/,1526565126.0
cuu508,"Just to understand your question better: do you want `academic_year` to be populated automatically by Django based on `start_date`, whenever you save a model instance?",1526674054.0
fdemmer,https://docs.djangoproject.com/en/2.0/topics/auth/default/#the-permissionrequiredmixin-mixin,1526558002.0
amit2rockon,Guys upvote n downvote both are welcomed but please give feedback what to be corrected .,1526569583.0
Nicksil,"What is the end goal here? As in, why are you trying to import a form based upon its name as a string as opposed to importing the object via Python's import statement?

In general, Python has the [`importlib`](https://docs.python.org/3/library/importlib.html) module which may help you achieve what you're after.",1526535605.0
idiomatik,"You could use Django `import_string`

[https://docs.djangoproject.com/en/dev/ref/utils/#module\-django.utils.module\_loading](https://docs.djangoproject.com/en/dev/ref/utils/#module-django.utils.module_loading)

But as Nicksil points out, why?

Only thing that comes to mind is that you want to re\-use the view with different forms.",1526539545.0
ccb621,"First hit on Google when searching for ""django password reset email domain"": https://stackoverflow.com/questions/5812985/django-password-reset-email-subject-line-contains-example-com",1526535694.0
genesem,"in the 'settings.py' ofc:

EMAIL_SUBJECT_PREFIX = '[your prefix] '
DEFAULT_FROM_EMAIL = 'desiredname <user@domain.tld>'

email body template (pw_reset_email.html):

    Someone asked for password reset for email {{ email }}.
    Please follow the link below:
    {{ protocol }}://{{ domain }}{% url ""password_reset_confirm"" uidb64=uid token=token %}
    Your username, in case you've forgotten: {{ user.get_username }}


how to use email template in 'urls.py':

    path('reset/', auth_views.password_reset, {'template_name': 'en/pw_reset.html', 'email_template_name': 'en/pw_reset_email.html'}, name='password_reset'),

happy coding.

",1526551661.0
DoomxPatrol,"Are you using the sites framework? If so, a lot of times you have to set the email by going to the admin panel , clicking sites, then editing the existing site that is in there.

I know when I use Django Cookiecutter this has to get edited for it to work correctly.",1526672056.0
pancakeses,"You would be much better served by making an Author model with a ManyToMany relationship to Book. Then you won't have to do backflips in determining whether a particular author is in author_1 or author_2, and you'll avoid data corruption (somehow ""Jane Smith"" ended up as author_1 and author_2) or a situation where there are 3 authors and you now have to ass author_3 and apply migrations to your model.

Splitting Authors to its own model allows any number of authors for a book.

Here's an (untested) example

    class Book(models.Model):
        title = models.CharField(max_length=264)
        description = models.CharField(max_length=264)
        plot = models.CharField(max_length=264)
        date_released = models.DateField()
        price = models.DecimalField()

    class Author(models.Model):
        name = models.CharField(max_length=264)
        book = ManyToManyField('Book', related_name='authors')

Then you can do something like the following (in this example, retrieving a queryset of books by Jane Austen):

    book.authors.filter(name__icontains=""Jane Austen"")


",1526519865.0
fdemmer,more history on the issue: https://code.djangoproject.com/ticket/8936,1526543994.0
misingnoglic,God bless - view only admin has been on my wish list for years. Now all I need is advanced search for admin.,1526514177.0
cediddi,"Oh boy, I can't wait for 2.2LTS",1526551774.0
lzantal,You could already do a read only admin with a custom template and use on a per group.  I still use 1.11 I wish I could ditch it and upgrade. I want to use the new url routing with path ,1526524525.0
booooomba,I don’t get it. What’s the benefit of having a read only admin?,1526514381.0
Poromenos,"Here's a four-line middleware that'll give you a read-only admin:

https://www.pastery.net/qteqeq/",1526558990.0
pancakeses,"2.0, but feel free to use tutorials based on 1.11. The differences aren't very tough to get around.",1526505100.0
rocky-ji,"According to your experience, recommend you learn 2.0",1526608058.0
Grimoire,"https://docs.djangoproject.com/en/2.0/ref/settings/#debug

> Never deploy a site into production with DEBUG turned on.
>
Did you catch that? NEVER deploy a site into production with DEBUG turned on.

You've deployed with DEBUG turned on.  :)",1526508047.0
Penki-,"Sorry but I have to joke about this: 

> We do the research for you

Who is we? :D 


Also tried imputing random phrase ""d35"" got timed out. Error time 20:09:20 +0000. You might want to look into that. ",1526501622.0
Fun2badult,"I’m on my phone and the search isn’t returning. I did have to put in the search multiple times for the items to show up.

Once items showed up, the star ranking wasn’t clear. You listed them as descending from the total review number so it’s a bit weird to see a 4.1 listed and then 4.4 after. The ratings have no order so I’m not sure if it’s accurate in giving me the top 10 best item since the items are listed by total number of reviews. You might want to modify how the ranking is done since most amount of reviews doesn’t equal best item and highest number of stars doesn’t equal best item since amount of reviews is small so it doesn’t show enough sample size ",1526502764.0
Rorixrebel,"Wrote ""dildo"" and got a lot of results. Seems to work fine. Design wise it could a better mobile layout.",1526504374.0
django_noob,You're going to have to explain how this is better than just running a search on amazon. I don't understand the point of the site,1526604835.0
placeholder-place,Would be quite nice if there was price info as well. Great job!,1526501758.0
dalore,Perhaps update the url so you can share the link.,1526503015.0
krumg,"I don't really get how it could give any relevant information: for instance when I searched for ""laptop"" it gave me an old HP as #1 and a Chromebook as #2. Then I tried ""laptop for development"" and the best choice for me became some toy \([VTech Light\-Up Baby Touch Tablet, Pink](https://www.amazon.com/VTech-Light-Up-Baby-Touch-Tablet/dp/B00K89K67A/ref=sr_1_29/147-5099086-8239259?ie=UTF8&qid=1526505462&sr=8-29&keywords=laptop+for+development)\). What's the point?",1526505532.0
alkelaun1,"Only negative comment is that the title is ""Hello, world!"" so the Tab name is that.

Cool site.",1526505668.0
TopSheff,Might want to disable debugging!,1526506714.0
mothzilla,"In the results I wouldn't say ""Top x"" because it's confusing. ""Top x"" implies a grouping, eg the top ten charts has ten items, all of which are in the top ten.

Instead just say #1, #2 or something like that.",1526508660.0
synw_,"Getting a `CSRF verification failed. Request aborted.` 403 error on Firefox - with NoScript blocking just your Hotjar tracker and uBlockOrigin ( `Reason given for failure:Referer checking failed - no Referer.`) while this works in Chromium

And yes, when in production turn debug off and do not use the dev server ...",1526568692.0
rocky-ji,I think you need someone who is good at this aspect to test your website.,1526608626.0
SkawPV,"What I would improve:

\- At the top\-left  it shows the message ' Best10 '. Delete it or create a cool banner/navbar/whatever. A simple a \> span makes no sense to me

\- Landing page seems a bit simple. I would add 1\-2 rows with photo \+ paragraph. And maybe a footer at the bottom. At the very least, add a margin bottom.

\-If this finds the best 10 items of whatever I want to find, why not showing it? Order the products by customer satisfaction or rating. This way I will believe i'm finding the best 10 items, not just 10 random items.

Anything else it's cool. Good work!",1526643075.0
SquanchIt,Looked up office chair and got results I would expect to get so seems good to me.,1526674358.0
networkdevgirl,In my experience this isn't do-able and the way that you protect your intellectual property is via legal agreements with the customer.,1526494992.0
jeffbaier,Use licenses and lawyers.,1526496616.0
lherr,pip install lawyer,1526505684.0
Daishiman,"Big clients don't fuck around with licenses. 

Also, you overestimate the usefulness of your project to anyone else who is not that client, or the willingness of your client to potentially maintain a pirated app.",1526495638.0
gck1,"The only feasible solution would be to cut out some parts of your project into a separate service that you host (perhaps another django project) and make it required in the Django project that you share with them. 

This way they can't have a fully working solution without you. They'd have to do the engineering work themselves for the parts that are missing",1526496091.0
Chiron1991,"
First of all: *Everything* is reverse-engineerable if you put enough effort into it. If you really care about your code the only option to keep it safe is to not ship it.

The best you can do without putting at least some additional work into the project is obfuscation. The tools you mentioned provide a very basic level of obfuscation which should be good enough for code that doesn't contain critical business secrets.

The most advanced level of obfuscating Python code known to me is using Cython. Simply put, it translates your Python code into actual C code which you then can compile and ship as a binary. It will most likely require some adaptions to your code. [Here](https://medium.com/@xpl/protecting-python-sources-using-cython-dcd940bb188e) is an article about this topic.",1526558636.0
CKreuzberger,"You can for sure obfuscate most of the HTML, JavaScript and probably most of the context variables, strip all the comments (except for some copyright notices), etc...

This will most likely make your project unmaintainable without having the original source.",1526502183.0
,"Would not recommend you do this. You're far better off creating a rest api and letting them access your service by making requests to it. 

Or give them the code and do the legal thing. 

Pyinstaller will not work on a django project lol. And if your client is willing to run random binaries on their server they're probably not all too smart.",1526506112.0
Brandhor,even with py2exe you can easily decompile the .pyc files,1526548446.0
ItsAPuppeh,"At a previous job, we did this by writing a script to compile all .py to .pyc files, and then deleting the .py files. This was using Python 2. No idea if this still works w/ Python 3.

We then build and ship the .pyc files along with Apache + mod_wsgi, Postgres, config files, and start/stop scripts appropriate to the OS. This was done for OS X and Windows. Windows was 10x the pain that OS X was, so I would keep it on Linux if you have the choice.

Finally, everything was packaged using an install builder specific to the OS. Specifically EMCO MSI Package Builder for Windows, and whatever is used to build PKGs on OS X. You could probably skip this and just send a tarball though.

All in all, it was a giant pain the arse, and one of my least favorite things to work on.",1526496400.0
addy_paddy,"Does it have to be their infrastructure? Am thinking you could use Google Asylo (https://cloudplatform.googleblog.com/2018/05/Introducing-Asylo-an-open-source-framework-for-confidential-computing.html?m=1) as a possible solution.

Full disclosure - I skimmed the document last week and haven’t played with it (as I can’t get a GCP account). I understand that you could encrypt the package to only be decrypted within the cloud server’s TEE.

I could be waaaaay wrong though.",1526498840.0
PetterOfCats,"Possible the normal email ports are blocked by your cloud hosting provider. I know this to be the case with GCE applications. They recommend funneling SMTP calls through a custom backend. If this is the case, I may be able to help.  

To test, you can set the fail_silently kwarg to True. Then check your error logs.

https://docs.djangoproject.com/en/2.0/topics/email/#obtaining-an-instance-of-an-email-backend",1526492573.0
cocochito,"I'm using EMAIL_PORT = 587 without troubles, can you try to change it? Also, try using EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' just to see if it's not a code issue? And one more thing, are I noticed you are using Python2.7, is that right? Or in your local server are you using Python3?",1526493857.0
oliw,The email in your logs suggests that it's in debug mode. That's what happens in development here.,1526556904.0
idiomatik,Can you acces your email host on given port?,1526491624.0
yerfatma,is it possible the `local_settings.py` on the linode machine has the console email backend instead?,1526491856.0
Whoopska,"Definitely possible. Can you post a little more of the surrounding code and error?

    {% for detail in details %}
        <a href=""{% url ... %}""...
    {% endfor %}

",1526490106.0
booooomba,"A snake game?

Are you aware that this is a JS problem and not at all a Django problem?",1526486265.0
McDivvy,Django is not the right tool for this job.,1526487996.0
IonTichy,"Your $5 offer is ridiculous and a bit insulting, don't do this in the future.  
In the meantime, have a look at this: https://www.google.com/search?q=js+snake+game+github",1526488179.0
Investisseur,"*cracks knuckles* alright so PyPi updated their SSL and is not longer accepting TLS 1.1, but only 1.2!
So you need to update your SSL software AND update pip and pip3 to 10.0.1

If you’re on a Mac update your system software all the way up should do the trick. If not brew install OpenSSL. For anything else I’ve given you some info so I hope you can figure it out  ",1526471038.0
melankolic,"If you connect to the internet via a corporate firewall it's likely that you are going through a man-in-the-middle proxy which inspects your traffic and is re-encrypting traffic with it's own certificate. Your pip install (assuming this is happening through pip) is going through openssl libraries on your machine, and openssl does not trust the MITM cert that the proxy is using.

If you know how to you can try specifying a local copy of the corporate certificate as being trusted, or it may be easier to forego SSL checks when using pip. Both of these solutions are present in this SO answer [https://stackoverflow.com/q/25981703](https://stackoverflow.com/q/25981703).

I'm not familiar with Anaconda, so I don't know if you are using some kind of gui or tool to install Django, or if you are just running ""pip install django"". You may have to search for anaconda specific help for ignoring/working around SSL errors on package installs.",1526468245.0
Chiron1991,"Reasons for your error can be manifold, hard to tell without the exact trace. Could be an incompatible version of your ssl lib or indeed a messed-up network configuration.

There's a workaround by doing an offline installation by installing a manually downloaded archive of Django. See [this answer](https://stackoverflow.com/a/34316952) for guidance (this guy installs pymc, replace it with Django, obviously).",1526465150.0
pbacterio,"Strange. Anaconda has Django on it's own repositories.

Are you using pip or conda command to install it?",1526470991.0
moeris,"Maybe check if the version of Python was compiled with SSL?  If you can curl the url, I wouldn't think it's a problem with the firewall, so maybe try that.",1526466192.0
Niicodemus,"Most likely out of date pip as already mentioned, but also check that the date set on on the machine isn't a few years off.",1526481354.0
amangarg078,"You can use JS to render questions.

If questions are fixed, send all the questions in the context, render a form using JS, map the answer selected and at the end, send this mapping to backend for processing.

If your questions are rendered based on previous answer or something like that, use ajax to render the next question.",1526462715.0
Niicodemus,Perhaps look into [django-formtools](https://django-formtools.readthedocs.io/en/latest/wizard.html).,1526481609.0
Investisseur,"You need to use a base settings and import into local and prod and then overwrite those you need changed

Using environment variables also helps!

Please check out github.com/modernproject/backend for an example! ",1526442345.0
daredevil82,twelve factor app has some good guidelines.  Their config section is relevant here https://12factor.net/config,1526468946.0
hedronist,"The solution I use, and have used for many years, is to have the `settings.py` file *always* be defined for production. Inside `settings.py`, after most of the default
site definition stuff is done, I have a check to see if there is a file called `local/settings_early.py`, and if so I `exec()` it. Using the exec makes the resulting variable definitions effectively *part of the `settings.py` file*, thereby eliminating scoping / namespace problems. This also allows for arbitrarily complex code on dev machines, if necessary.

We use `rsync` and `mercurial` to manage files *except* we never transfer a dev machine's `local/` dir to any place. This means that the production environment is always fully defined by `settings.py` and nothing else.

e.g.

    CHECK_LOCAL = False # Set to True for local overrides

    if CHECK_LOCAL:
        # ####################################
        # WARNING:  A local/settings_early.py file can override everything above here
        # ####################################
        path = os.path.join(DIR_LOCAL, 'settings_early.py')
        if os.path.exists(path):
            exec(compile(open(path).read(), path, 'exec'))
    
I have a similar check for `local/settings_late.py` at the very end of the file.

",1526675008.0
jward,"I have a secrets.py file that I pull into settings.py near the bottom so it can overwrite defaults as needed.  This lets me keep production database info, api keys, single sign on end points, static/media paths, and other bits and bobs out of source control.",1526684059.0
itmightbedave,"Any kind of hosting will be overkill for this. Docker could work. VPS could work. All have a good amount of setup overhead.

Are you sure you need django for this? From the sounds of it, you're just using django to produce a web page to trigger the script. You could probably just make a django-less python script to offer to users to run locally with a few command line arguments. You could put some energy into writing some install scripts to make sure the local machine has all the necessary dependencies.",1526432904.0
booooomba,"1. Celery
2. Just use a VPS",1526431219.0
Chiron1991,"> Docker container [...] However the vast majority of users will be Windows-based and I've heard that may be an issue.

Technically, there is [Docker for Windows](https://www.docker.com/docker-windows), but it relies on Hyper-V which I doubt is guaranteed to be available to your users' computers.

I guess the most painless approach would be a Droplet at Digital Ocean.",1526469034.0
DudaFromBrazil,"I think you missed the keyrequest on you context. Sorry, on mobile, the code is kind of messed up from here.

*keyrequest
",1526428196.0
booooomba,"Ubuntu is based on Debian. Debian is a bit more conservative. But both are fine. It really doesn't matter what you choose as they are very very similar.

The worlds largest companies/websites use both, so I'm sure you'll be happy with both of them also. :-)",1526415688.0
aphisosys,I prefer Debian 9. They're essentially the same though. Debian I would say is slightly more stable and conservative than ubuntu is though.,1526421911.0
srg666,If this is your first time just stick to Ubuntu. ,1526418957.0
yolabingo,"Probably the biggest differences are the release timelines. Once you get it up and running, you definitely won't care.
The first 3 paragraphs here describe the Ubuntu/Debian relationship pretty well 
https://en.wikipedia.org/wiki/Ubuntu_(operating_system)#History_and_development_process

I recommend you use Ubuntu Server 18.04 LTS because LTS is good. 

Arguably, the most significant feature of a Linux distro is its package manager (though some contrarians may argue it is the init system) https://en.wikipedia.org/wiki/Package_manager
In any case, you will spend a bit of time dealing with both of these when setting up your system.

As Ubuntu derives from Debian, they both use apt and friends for package management. Therefore, the administration of these distros is very similar. They have quite different histories though.
 
Debian has been around for 25 years. For most of that time, Debian (and Linux in general) was primarily used in work environments, academia, and by hobbyists geeks. The Debian community has always been strict about only including software that adheres to the DFSG  https://www.debian.org/social_contract#guidelines hence things like Ice Weasel instead of Firefox https://lwn.net/Articles/676799/

The Ubuntu project, on the other hand, strove (among other things) provide a free, easy to use, open-source PC OS to the world. They simplified the install process and fleshed out all sorts of GUI for installation and system management. They improved Gnome and tried something new with Unity. They improved driver support for consumer hardware so getting wifi working on your laptop didn't involve tracking down and compiling your own drivers. They came up with things like ""UncomplicatedFirewall"" to attempt to simplify the management of iptables. https://wiki.ubuntu.com/UncomplicatedFirewall

They are obviously both very popular, well-maintained, and stable.",1526430922.0
Vitrivius,"Distros have a server version and a desktop version. The desktop version includes various gui programs and a desktop environment, and is where you'll find the difference. The server versions of debian and ubuntu are almost identical. 

Ubuntu is more popular, but Docker images are typically either based on Debian or a very barebones linux distro called Alpine. I believe that's because Ubuntu includes some extra programs by default, which requires more disk space compared to Debian.",1526424623.0
ijustwannacode,"You will have a very similar experience in the server using either.

Ubuntu is based on Debian. From my understanding, the biggest differences in Ubuntu are on the desktop, and it is these that led to it's popularity as a user-friendly distro.

Think things like installers, drivers, software release schedules.

I personally see no benefit to any of this on the server side, so I run all my projects on Debian on Digital Ocean droplets.

TL;DR: It doesn't matter at all. Flip a coin and get developing :)",1526431697.0
locusofself,Debian master race,1526458202.0
,[deleted],1526478437.0
iBlag,"It's kind of impossible to answer this question without more information.

Are you thinking of developing your web app on Linux? In which case, either one will be fine (although Ubuntu will probably be more user friendly). However, you can develop on any OS - Mac, Linux, Windows since Python is so portable.

Are you looking into deploying a web app on Linux? In that case I would recommend Docker, and use images based on Alpine Linux.",1526416004.0
iBlag,Are you ready to deploy or are you still developing version 1.0?,1526419259.0
i_dont_want_karma,In any case don't use the packaged version. Use pip to install your version of Django.,1526446070.0
mattwritescode,"Either will work fine, at the end of the day you are going to be comparing apples to apples.

The good news is Ubuntu or debian will not give you a real world performance boost over the other. You django app will always be the bottle neck. Spend time worrying about your app not the OS.

If you are still looking for an answer use heroku it will take the OS question away from yourself. ",1526454471.0
jollybobbyroger,"I always want Python 3.6 and often a later version of Docker, which Debian users tell me is creating a [Franken-Debian](https://wiki.debian.org/DontBreakDebian#Don.27t_make_a_FrankenDebian) .. I'm probably not grokking 100%, so for those reasons ... I choose Ubuntu, which I really like for general purpose servers I must add.",1526478731.0
CKreuzberger,"For servers, always Debian > Ubuntu. You don't need the latest and greatest, but what you want is stability.

The only real difference that will matter for your choice is going to be the python version provided. If you want Python 3.6, I believe you will have to stick to Ubuntu. If Python 3.5 is fine, you can stick with debian 9.

As someone already mentioned: Make sure to install Django via pip (preferably using virtualenv, pipenv ,etc...)",1526446674.0
pointyball,"Are you really asking in the Django subreddit if you should use Django?


Did you think we would reply with ""PHP is better, I don't even know why I'm on this sub?""


Of course we prefer Django.",1526414712.0
booooomba,"Yes

If you already know Python, why on earth would you want to use PHP? You'd just be using a framework anyway. So might as well just use Django.",1526414378.0
GuiYaz,"It depends on what your goals are.

Django is a web framework, so for proper comparison you would need to chose a php framework such as Laravel.

This also depends on your overall experience level. I'm assuming by the scope of your question that you are introducing yourself to web development. With that in mind, I would say stick with your favorite language, python. Python is a more than capable language for web development.

As far as framework Django is a fully featured very opinionated framework, so I would say you should start with a micro framework such as Flask so that you can wrap your head around web development fundamentals so that you aren't stuck in a singular mindset when you use Django.

Flask will allow you to get your feet wet, make mistakes, and learn from them. One of the best parts about transitioning to Django for a beginner will be the admin interface, which for me alone is a strong deciding factor when doing small personal projects.",1526494198.0
Nicksil,Sure,1526414665.0
pontificator2347,"if your website is super simple, I suggest flask instead.
but if it has login, admin, etc. I suggest django over everything else (if you know python).",1526420502.0
Sehrishnaz47,Don['](http://learnopenerp.blogspot.com/2018/03/how-to-create-django-project.html)t think just start django from today.,1526446478.0
trancen,"Agree with what others have said . I started off with Flask and for something simple. Flask all the way. I have moved to doing my new Dev to Django because the website that was originally done in PHP but it's just a pain in the butt to deal with anymore so I'm moving to Django with that application. I thought at first to do it in Flask, but to have security and login/admin. Django is much easier.. 

You didn't say what type of project/how big that you are planning on working on. ",1526478779.0
,"Digital ocean have a really good deal going on right now. You get a large credit to cover I think up to 3 months usage. 

Personally I use linode but if I was setting up a project right now i'd probably take advantage of this deal.",1526415702.0
booooomba,"Depending on how good your Linux knowledge is, I'd use a VPS. 

What are your top3 requirements ranked by importance?",1526400412.0
rocky-ji,"You can't do that in your home, you can buy aws services to run it.",1526608323.0
nannooo,"I would not recommend using your own pc for this. Just use a vps for all of that. It's much safer.

Set up a vps with dokku. It's easy to deploy Django with that. I wouldn't wordt about bandwidth yet. Just try it and if you indeed get traction, then you can worry about that later.",1526402443.0
ccb621,"The DRF docs have about 90% of the patterns I’ve used. If you think something’s is missing, consider adding it to the docs so the entire community benefits. ",1526408665.0
tagnydaggart,Have a look at django-crispy-forms (https://github.com/django-crispy-forms/django-crispy-forms).,1526390276.0
,"Regular form:

    class form(forms.Form):
	name = forms.CharField(widget = forms.TextInput(attrs={'class' : 'form-control'}))

Model Form:

    class ModifyParentJobTemplateFields(forms.ModelForm):
	
	class Meta:
		model = ModelName
		fields = ['field']
		widgets = {
			'field' : forms.TextInput(attrs={'class' : 'form-control'}),
		}",1526431951.0
volksman,Take a peek at the django-bootstrap packages as well.  There is one for 3 and one for 4 so depending on your BS version grab the right one. ,1526391424.0
aphisosys,Use Foundation instead of Bootstrap. ;\) Plus UIKit if you really want to get fancy.,1526423088.0
Space_Jellyfish,"To add classes onto form fields, consider django-widget-tweaks (https://github.com/jazzband/django-widget-tweaks)

The css is added in template files instead of in forms.py.",1526391346.0
bulletproofvest,For small projects I just subclass ModelForm like this https://github.com/tom-henderson/django-common/blob/master/django_common/forms.py,1526416258.0
,[deleted],1526392269.0
BLUXIV,"You can use :
obj= MyModel.objects.filter(type=1).order_by('-datetime')[0]
And change name and type number for each one.
",1526385407.0
imsearchbot,"The trick is to override the modelform's `__init__()` method: For example:


    class MyModelForm(forms.ModelForm):
        ##  regular stuff
        def __init__(*args, **kwargs):
            super(MyModelForm, self).__init__(*args, **kwargs)
            self.fields['type'].choices = fetch_recent_items
",1526385665.0
daredevil82,"do your create and update views share the same url?

alternatively, you can re-implement `get_object` to use `get_or_create` as described at https://chriskief.com/2015/01/19/create-or-update-with-a-django-modelform/",1526383114.0
boxidea,"    data['bala_form'] = BalaMateriesPrimeresFormSet(self.request.POST)

I think that line is your problem. You need to pass the Entrada instance that is being updated.

Just like a regular form, if you don't pass an instance, it's going to assume you're creating new objects.",1526396432.0
SkawPV,"Found the problem. This is my fix in case someone stumbles upon this thread looking for the same as I was:

    class ParentUpdateView(LoginRequiredMixin, UpdateView):
        model = Parent
        form_class = ParentForm
        template_name_suffix = '_update'
    
        def get(self, request, *args, **kwargs):
            self.object = self.get_object()
            form_class = self.get_form_class()
            form = self.get_form(form_class)
            child_form = ChildFormSet(instance = self.object)
            return self.render_to_response(self.get_context_data(form = form, child_form = child_form ))
    
        def post(self, request, *args, **kwargs):
            self.object = self.get_object()
            form_class = self.get_form_class()
            form = self.get_form(form_class)
            child_form = ChildFormSet(self.request.POST, instance=self.object)
    
            if (form.is_valid() and child_form .is_valid()):
                return self.form_valid(form, child_form)
            return self.form_invalid(form, child_form)
    
        def form_valid(self, form, bala_form):
            self.object = form.save()
            child_form .instance = self.object
            child_form .save()
    
            return HttpResponseRedirect(self.get_success_url())",1526544478.0
supra621,"It sounds like they use the same data source, so I would say “no” to splitting those into separate apps.",1526324074.0
booooomba,"So what exactly are you having problems with? What isn't working?

Also please share some code so we can actually help.",1526319535.0
hedronist,"Phil Karlton said (a long time ago): ""There are only two hard things in Computer Science: cache invalidation and naming things.""

Complicated cache invalidation schemes mostly are a subset of [*premature optimization*](http://wiki.c2.com/?PrematureOptimization), meaning you probably spent more time thinking about / coding it than you will *ever* save by having done that work.

Unless you have a *very* large site that is continuously undergoing changes, the safe way to invalidate a cache is to blow everything away on *any* update and rebuild on an as-needed basis. It may sound like overkill, but this completely eliminates problems caused by incorrect fine-grained caching. It is possible to tweak this a bit by doing partial-page caching. I.e. you keep the ads, or the TOC, or whatever, and build the page from the pieces. But that rarely is worth the hassle.

",1526676082.0
nannooo,"I am not sure if this fixes it, but add a DEFAULT\_FROM\_EMAIL in your settings.py. Currently you have `From: webmaster@localhost` 

Other then that, it looks fine to me.",1526325731.0
Whoopska,"I don't know what's going wrong, but my debugging steps would be:

1. fire up `python manage.py shell`
2. `import ipdb`
2. `ipdb.runcall(user.email_user, 'subject', 'body')`

and step through that until something hopefully pops out.",1526339859.0
,[deleted],1526341450.0
booooomba,"Can you give more details?

1. Why is it not FIPS compliant?
2. What would need to be different for it to be FIPS compliant?",1526313184.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1526315618.0
lordrashmi,Woah this is pretty cool. Thanks!,1526310233.0
ublike,"So I was messing around with these a bit and one thing that I’d like to be able to do is get the param name after the converter passed as well to the converter. E.g. “param_name” in <converter:param_name> passed to the converter which currently isn’t possible, only the value is passed at the moment. If the param name is passed then we could inspect that in the converter and do something like <model:blogpost> and  <model:user> which would be one converter that then looks up a model by its name and tries to load that via it’s pk. Am I missing something/is this a bad idea??",1526354119.0
LewisJin,pyfcm can send the database change notification to android apps ?,1526294023.0
boxidea,"You should definitely exclude `__pycache__` directories from your repo.

If you're creating a project for public consumption, you should make it pip\-installable.",1526296503.0
pydanny,"`DEBUG = True`

* https://themeethub.herokuapp.com/asdasdasd
* https://github.com/iyanuashiri/meethub/issues/7",1526323294.0
KronktheKronk,"> todo: Write tests


bruh...",1526310898.0
space_sounds,What did you use to create the text editor on the events/new page?,1526297322.0
CraigTorso,"Without wishing to sound like a bellend, if you don't include a thorough test suite your open source project is not yet ready for public consumption.
",1526294682.0
,[deleted],1526363644.0
pat_the_brat,"~~That is not open-source, as far as I can tell. It doesn't have a license. It's just source-available.~~ Thanks OP :) ... Now we can feel safer using it.

But it looks really good, judging by the screenshots.",1526299341.0
appinv,whoa just some css touch needed !,1526316629.0
Rollen,Hey OP your hamburger menu doesn’t work in mobile safari browser didn’t test on others though. Also the username is case sensitive and would not allow me to login unless I got the casing correct.,1526323388.0
mhall119,"Hey, I'm developing https://gettogether.community another meetup alternative, also written in Python/Django. Maybe we can collaborate on some things",1526362910.0
ashiri12,Hmm... Thanks ,1526295162.0
booooomba,"/r/djangolearning is the right place for such questions.

Option b is correct. Manytomany doesnt make any sense logically.",1526290597.0
melarorah,I don't think that this is a best practice question. It depends on what you want. On the first option you can have a page that belongs to multiple books but that is not the case on option b. So it is up you to decide on your logic Personally I think option b would be better as it seems silly for two books to have the same page.,1526290828.0
PawelDecowski,"This isn’t a question of preference or best practice because your examples aren’t equivalent. As such, it’s a matter of requirements.

In option **a**, a `Book` can have many `Page`s, and a `Page` can belong to many `Book`s.

In option **b**, a `Book` can have many `Page`s, but a `Page` can only belong to one `Book`.

As u/melarorah has suggested, it doesn’t sound logical to have a `Page` belong to many `Book`s but I assume this is just an example so you have to think about your actual requirements.",1526291069.0
bykof,"Try Celery [http://www.celeryproject.org/]. 
It's used by a lot of companies and been proven for production use. 
I use it too and the learning curve is a little bit hard at the beginning.",1526288509.0
,Django management command + Unix Cron,1526267279.0
apreche,"Everyone says Cron, but I disagree. When you use celery, the code goes along with the application. If the code is application specific, I like to use celery because it removes the step of remembering to install the crontab. The task will automatically be delivered as part of the app. 

I use Cron for things that are bundled to the system and not the app. For example, system wide log rotation goes in a Cron. Even though your app might be making lots that get rotated, the rotation itself isn't a property of the app. ",1526274280.0
CKreuzberger,"I can not believe how many people here point to [Celery](http://www.celeryproject.org/), a task queue management system (!= cron job). 
If you are implementing tasks that are triggered by certain actions (e.g., the user clicks on a button in your web app and this causes a long running task to run), then Celery is the way to go.

Yes, you can abuse celery to also process cron jobs. But realisitcally, for a (simple) task that is executed twice a month, the overhead of setting up celery + broker + getting to know what celery does and how it works + maintenance work + updates + ... is way too high.

For comparison:

You wouldn't setup a Django App (and handle all the dependencies, software updates, etc...) for serving a single static HTML page, when you could have just uploaded an HTML file to your webserver.",1526296136.0
LightOfTheSeven_,This sounds exactly what Cron is meant for. I use Cron to automate a task exactly at 10pm every day. A quick Google search for the Cron usage is all I needed to get started. Good luck!,1526266193.0
simonw,Cron is perfect for this.,1526267577.0
mypirateapp,"1\) Is the task heavy, does it involve lots of computation has subtasks etc etc ? if the answer is yes, celery is a better option else cron, from your description, cron seems good",1526271418.0
telmomartinho,"My opinion is: No brainer, no fuss ---> Crontab || Best, top, thinking on future tasks etc ---> Celery",1526308499.0
lzantal,Cron for sure. I tried celery and all the other ones I even wrote my own. Then switched to just use the Linux default cron and never looked back. There is a very good page in the docs what you have to add to your file when it gets executed with it. On my phone I don’t have the link atm,1526311708.0
m1ss1ontomars2k4,"Why does it need to be ""exact""? How exact should it be?",1526266869.0
snuggl,"cron.

I use it with django-chroniker so you set timers and see run status and logs in django admin instead of in crontab.",1526893770.0
chris_conlan,"You should use celery hands down.

Cron is for things you are comfortable calling from the terminal that have a minuscule change of failing.

If you are manipulating Django models, you should use celery. It will safely bootup/execute the Django environment asynchronously, and will force you to commensurate with a stable message passer.
",1526271869.0
fuckslavs,"Are you just trying to set the initial value of the extra field?

    class MyChildForm(forms.ModelForm):
        my_extra = forms.CharField(label='Extra', max_length=20)   

        def __init__(self, *args, **kwargs): 
            super(MyChildForm, self).__init__(*args, **kwargs)
            if self.instance:
                extra_value = MyExtraModel.objects.get(child=self.instance)
                self.fields['my_extra'].initial = extra_value.favorite_toy",1526250203.0
supra621,"Not sure if this is going to answer your question, but one-to-one’s are funny when it comes to forms.

I experienced this with trying to override an admin model so that I could associate an existing record with a child one-to-one. Basically what I ended up doing was adding extra fields so that I could at least identify what I was doing, but then the instance that needs to be saved is really the parent instance.

Saving a child instance of the one-to-one, and then trying to copy that to the parent results in blanked-out data. You have to act on the parent instance, and then save that data to the child instance. I had a bear of a time getting it working because of which model instance I was in.

I might still have the admin code from when I was messing with it, but I’d have to dig for it if you’d like to see it. Once again, not sure if it’s helpful at all. One of my projects has to use a lot of concrete inheritance with one-to-ones, so I’ll be curious to see what your solution ends up being.",1526249101.0
thehavs,"I had a similar situation - Django-extra-views (https://github.com/AndrewIngram/django-extra-views) ""UpdateWithInlinesView"" did most of the heavy lifting using get_formset_kwargs.",1526269170.0
tagnydaggart,Django is a web framework. It’s awesome for both these things and more.,1526231682.0
Whoopska,"What alternatives are you considering?

If you don't need any dynamic content, I'd consider building a static site or using a static site generator like Jekyll if you have a lot of similar pages (e.g. blogs). The hosting is quite different and there are basically no moving parts so less to worry about.

If you need even something like a login, Django's a great option.",1526234899.0
supra621,"The whole “app” term confused the crap out of me for the longest time. In Django, “app” is just a potentially-reusable collection (perhaps an example could be a “blog” app and a “storefront” app - functionally independent, but one might want to reuse the apps in other projects, or together in the same project).

I couldn’t imagine *not* using Django for a website after getting used to it. Templates and the built-in ORM are just so easy to work with. Templates in particular make building a site with consistent formatting and navigation a breeze.",1526249913.0
ash4fr,Django seems overkill for basic website development. Too much time is spent on setting up everything. Flask would be a better alternative for basic website development. ,1526232591.0
fdemmer,"why not map your objects to the database with the django orm?

i am confused by your requirements.",1526238058.0
daredevil82,"Sounds like you really should offload this as a stored procedure or user defined function for your database, rather than having django do it.  That way, you can work with the actual sql and databases, without having to deal with the overhead of object serialization into querysets and transport formats.",1526260447.0
xinaked,define a function as_dict on each model where you return a dict representation of that model. then just serialize your list of dicts as json or msgpack,1526232412.0
vtbassmatt,SqlAlchemy is likely your best bet.,1526230541.0
ccb621,That's one way to do it. One alternative is to use an API endpoint. Most Django folks I know use [Django REST Framework](http://www.django-rest-framework.org/) to build APIs.,1526230381.0
nannooo,"So, you can create an `settings` model. Add a foreign key to it pointing to the user. Add any other fields you want in the model. Then create a form that allows you users to add/modify it (you can prefill forms).

You can then load all of this info on the page using {{settings.title}} for example. You will to get the correct record in your views.py before you send it to the template.

Does that make sense? (I am on phone now, otherwise I would have written some code)",1526231267.0
booooomba,Format your code. Easier for the people helping!,1526206524.0
pancakeses,That last line tells you there is something wrong on line 18 of urls.py. Post the code from that file here please.,1526182806.0
cybertether,Could it be a problem with my path?,1526226116.0
cybertether,"Currently, when I runserver:

`File ""/home/cybertether/Projects/mysite/mysite/urls.py"", line 18, in <module>`

`from django.urls import path` 

`ImportError: cannot import name 'path'`",1526226404.0
Whoopska,"You probably don't need the auto_id.

If you're going to be doing most of your inventory management through the django admin, the fields with blank=False will require a value in order to save. Can you imagine a situation where you'll want to enter something but you don't know one of those values? On the other hand, when would you have an image without an image file (null / blank = True on that field)?

I might add something like a boolean field to decide whether something should be visible or not so you can start adding an item without having to have it be for sale immediately.

There's nothing wrong with the inherited models. Sometimes they're a little weird and you'll end up having to dig into the `item_ptr_id`.

You'll generally have to be cautious about how you get any attributes from the subclasses. I think this is an accurate example of how you'll have to extract subclass properties, but I don't have ton of experience with the inherited models:

    order = Order.objects.get(pk=5)
    # can select related to make fewer queries, but pretty insane
    for i in order.item_set():
        for klass in Part, Amp, Pedal, ...
            try:
                kind = getattr(i, klass._meta.model_name).get_kind_display()
                break
            except klass.DoesNotExist:
                continue
         else:
             raise Item.DoesNotExist() 

    # more queries, more sanity
    for klass in Part, Amp, Pedal, ...
        for i in klass.objects.filter(order=order):
            kind = i.get_kind_display()

on the other hand, if you just validate the `kind` in the form when you create the model, you'll be able to grab those more directly. 

    # admin.py inside admin form where you're creating Items
        def clean(self):
            kind = self.cleaned_data['kind']
            instrument = self.cleaned_data['instrument']

            if instrument = Item.INSTRUMENTS.accoustic_guitar and kind not in Item.ACCOUSTIC_GUITAR_TYPES:
                self.add_error(""kind"", ""Must be a valid guitar type"")
        ....",1526180344.0
i_like_squirrelz,I’d consider using Django-polymorphic for this. That what it’ll be a little easier to find all the instruments and if you have related fields you’ll have one related queryset on those objects instead of many. ,1526228100.0
1dragossh,Save the command as a bash script and add it to start-up items.,1526167767.0
Soupinmyfly,"It is possible but the process will depend on the OS that you are running.

Why don't you ask over at r/djangolearning ",1526172447.0
shanmukhateja94,"Absolutely I don't see why not. You can get started with this on your server (hopefully) to host the django app.

And, I hope you meant ""offline"" meant to serve django app only to your local network and restricting access to Internet.

All you need to do is install nginx and gunicorn, set them both and start working.

Ofcourse this is, assuming you're using a Linux environment on your server machine.

I'm sure nginz is available for Windows as well however I'll not be speculating about gunicorn because I've never seen gunicorn for Windows though.

Hope this helps.",1526182300.0
i_like_trains_a_lot1,"> python manage.py runserver --settings=production_setttings

That's not a good way to run in production. You should always use a WSGI server to serve the requests instead of the built in django development server.

Also, for frontend, ``yarn build`` it's not going to run anything in production. You still have to serve the static files to the public.",1526215608.0
vienna_k,How does this compare to cookiecutter?,1526223060.0
spitfiredd,"Might want to add *.db and *.sqlite3 to your gitignore, github has a python gitignore that covers a lot.

[gitignore](https://github.com/github/gitignore/blob/master/Python.gitignore)",1526209945.0
lamelos,Looks very well organized! Going to use this as a reference for future projects. Thanks :),1526199720.0
nerdwaller,"I believe this kind of issue would be caught in a proper CI system, since Django runs the migrations prior to a test. Along with that move, I’d recommend having CI also do your deploys (if you don’t want full CD you could configure it to only deploy on tags, for example).",1526165156.0
moeris,You could also use a git commit hook.,1526162166.0
DustPuppySnr,"This is not enough info with code to get an idea of what you are doing, but this is what a submit button is for.

Just create a form without any other fields and add a submit button. Something like this?

    <button type=""submit"" name=""contact"" value=""{{ contact_id}}"">Update contact</button>",1526144125.0
django_noob,"I could be wrong, but I think that you need to create a special view just for this functionality. When the button is clicked, it will execute the code in the view and then reload the current page.",1526147328.0
Whoopska,"Here's a really simple version of what you might write:

    # contact_list.html
    {% for contact in contact_list %}
           ...
           <a href=""{% url ""bump_contact"" pk=contact.pk %}"">Bump</a>
    {% endfor %}

    # views.py
    def bump(request, pk):
        contact = Contact.objects.get(pk=pk)
        contact.last_contacted = timezone.now()
        contact.save()
        return reverse(""contact_list"")

     # urls.py
     ...

now whenever you click the link, it'll update the `last_contacted` field. Some issues to look out for with this is that there is no handling for missing contacts (expect a crash) and that the request is a GET instead of a POST. If it's publicly facing, a scraper could bump all of them. If it's privately facing, a link previewer could end up pre-clicking them helpfully for your users, but I haven't run into that in practice.",1526235360.0
academicbadger,Thank you for sharing just started to watch. ,1526144017.0
mangoQuesadilla,I'm almost done with the video. Is there an advantage to using Vue?,1526154472.0
booooomba,"You want to google ""Django Zappa"". That is exactly what you need!",1526120418.0
tomdyson,"Wagtail runs surprisingly well on Lambda. I know /u/FlipperPA runs it in production at https://pyphilly.org/, but I hadn't tried it before. I managed it in about 30 minutes, and wrote it up as I went:

https://gist.github.com/tomdyson/16b96cbe597c3974a4c309b0b91d8847

The result is at https://hu7r15ybc8.execute-api.eu-west-1.amazonaws.com/dev/admin/ - try logging in with admin / changeme. It's surprisingly quick, given that it starts the whole app on each request, and loads the SQLite DB from S3! Obviously you'd need RDS for anything serious.",1526134084.0
epwnym,"Lambda? I’m struggling to understand how Lambda is relevant to a CMS-based site. 

Are you sure you don’t mean EC2 or EB?",1526125198.0
Investisseur,"Sigh. Lambda runs functions. So while yes Lambda could “run” Django functions you’re going to need Zappa. It may be difficult to get Lambda to run Gunicorn correctly with SSL and load balancing correctly but one can give it a shot

I do not recommend doing this. Just spin up an EC2 instance (or a Fargate instance if you wanna be cool)

Edit: if you’re not using Zappa for Django deployments you’re far behind. Tried it out today and had it working with static files in under an hour with an pre-existing extremely complex project 

Edit2: all of my reservations still exist for this without Zappa. Hand rolling this would be hard as fuck",1526131107.0
kiwiheretic,I think any JavaScript upload bar you choose will need Ajax back end support,1526864172.0
absthrow1,"We need more information on which host you are using and which plan you have subscribed to tell you more. 

Do you use VPS? If yes, then you can definitely install and serve Django alongside WordPress (assuming you have enough RAM).

If you are using PAAS like Heroku, then also you can deploy Django app.

If you are using specific hosting services like that of wordpress.com, then you can't. We can tell you more if you provide more details on your host and plans.",1526100447.0
furyfred,This looks interesting. That it's all technical means my boss says she prefers to send us there rather than Djangocon.,1526207558.0
FlipperPA,Looking forward to it! It'll be good to see the Django crew again.,1526127666.0
Nicksil,"The Django docs explain this.

You can start at [Spanning multi-valued relationships](https://docs.djangoproject.com/en/stable/topics/db/queries/#spanning-multi-valued-relationships).

Also will likely want to read about: [`QuerySet.values(*fields, **expressions)`](https://docs.djangoproject.com/en/stable/ref/models/querysets/#django.db.models.query.QuerySet.values)",1526071441.0
daredevil82,"Why are there no fks?

You'll have to query the model directly because django relies on keys to construct the sql it uses. Without foreign keys, it has no way of traversing the relationships ",1526073113.0
pynberfyg,"> Dynamically add columns to any and all given database tables through a web-based user interface.

NoSQL databases seem like a better fit for your use case here IMHO-- which isn't something Django directly supports.",1526064546.0
booooomba,What wsgi server are you using?,1526056017.0
NewbieRPiGuy,I ran `sudo reboot` and `sudo service nginx configtest && sudo service nginx restart`. Now the site loads just fine. I don't know which of those two commands did it.,1526057327.0
ccb621,"Assuming you have a dict mapping users to scores, how would you do this on Python/Django? Take off your SQL hat for a moment. ",1526052789.0
oliw,"Sounds like you don't even know what you don't know at this point.

You can use Django to interface with a database, and use it to design that database, and access it, even use its admin (or something you write yourself) to populate it. We're really describing the bare minimum for a viable modern web framework. Django is much more. You just need to tell it what to do.

But Django it not itself a database. It is not a graphical tool like Access. You have to learn some stuff about database design to use it effectively.",1526045934.0
dorsal_morsel,"Django is a web framework, but it includes an ORM that you can use to model and interact with a database.",1526045627.0
RadioactiveCats_18,"Here's a question... have you ever built databases?  Because you might need to brush up on database architecture if that's not your thing.  Well-planned fields and queries are integral to your success.

That said, if you have a good understanding of databases, then yes Django can do what you're asking if you install the right packages.",1526070746.0
duppyconqueror81,"I think what you mean is that you want to build some some kind of intranet?

If so, it’s absolutely possible. 

You can probably have an empty site with only the django-admin and it would work fine if you don’t have time.

But if you have time and want to learn by doing a project, I’d recommenf getting some admin skin like AdminLTE and coding away.

It’ll make you build a user login page and all your crud operations. Fun project.
",1526049232.0
theslay,Good tutorials but please make sure you use a bigger font size in the editor next time. Cheers!,1526236523.0
flipperdeflip,"IMHO I don't think that is a crazy high worker memory use. Keep in mind each worker has a Python interpreter, libraries and your project in there.

Note these numbers are probably at rest and not the peak use (when handling requests and doing actual queries and other work).

How do you know it runs out of memory? What are you doing at that point? 

Check if you don't run in debug mode because it tracks a lot of data for debugging. And see what else is on that box, with 1 GB it doesn't look that powerful.

If you have a mysterious slow leak add max_requests/max_requests_jitter to gunicorn as quick fix.",1526044897.0
ramse,"It's sounding like something is corrupting the installation. Are you doing anything to the venv folder?

If you use a requirements.txt file, pycharm will pickup what needs to be installed so re-creating a venv takes seconds and it'll handle all the installs for you.",1526152177.0
DisagreeableMale,Thank Christ. So tired of using 2.7 to use fabric.,1526011849.0
pancakeses,"What do you all use Fabric for? I've never used it, and not sure what the use cases would be.",1526015740.0
george-silva,Great news!,1526009829.0
knyghty,"I stopped using fabric years ago because of the lack of py3 support, it's a bit late.",1526074233.0
334578theo,"The 1.x to 2.x upgrade path is awful. Completely rewriting the API just isn't developer friendly.

Have had to rewrite every single fabfile and the documentation isn't great with poor choice of code samples \(not a single mention of how to run local commands?\)",1527513513.0
,[deleted],1526013805.0
nannooo,"A quick solution would be to simply 'reserve' the account for let's say 1 hour. If it has not been verified within one hour, then you allow anyone to register the account again. In the backend, you just remove the account and then add a new one with the new form data.

Edit: perhaps even cleaner: run a scheduled celery task and remove the accounts that have not been verifieed in x hours/days/weeks whatever...

Also.. use Cloudflare. They can block quite a few bots.

Then track ip addresses of people that register with Django and set a limit on the registration. You can then show a proper error message to the user when they go over it.",1526002495.0
quackmeister,"Use Authy, mate. Save yourself the headache of reinventing the wheel!",1526002889.0
mssnlayam,"I have found the Django documentation, [http://ccbv.co.uk/](http://ccbv.co.uk), and the following three points to be sufficient.

1. It's helpful to know that the entry point of the view is the `dispatch()` method. For example, here it is for the [DetailView](http://ccbv.co.uk/projects/Django/2.0/django.views.generic.detail/DetailView/#dispatch). Starting from here, you can trace all calls that the view makes, all methods and fields that you can override/customize.
2. The [ContextMixin](http://ccbv.co.uk/projects/Django/2.0/django.views.generic.base/ContextMixin/#get_context_data) which almost all CBVs inherit from, provides a variable named `view` in the template. This is the actual instance of the view class. This provides access to any methods or fields of the view class. Anywhere you write `self.some_field` in your code, you can write `{{ view.some_field }}` in the template.
3. [LoginRequiredMixin](https://docs.djangoproject.com/en/2.0/topics/auth/default/#django.contrib.auth.mixins.LoginRequiredMixin) provides an example of who you can use mixins in your class based views.",1526003893.0
bwapeup12345,"There is a long blog post here that talks about CBVs:

[https://spapas.github.io/2018/03/19/comprehensive\-django\-cbv\-guide/](https://spapas.github.io/2018/03/19/comprehensive-django-cbv-guide/)",1526005698.0
Xephyrous,"I'd make sure you're comfortable with the official tutorials to understand how the CBVs are used.  Then to really understand them, there's no substitute for reading the source.  For that I'm a big fan of http://ccbv.co.uk, which compresses the inheritance hierarchy into a single view.

That said, CBVs make it easy for your code to become a huge mess.  Views are for interpreting requests and rendering responses.  Everything in-between should be kept elsewhere (forms, models, utilities, and application-specific structures), and passing the request object around is cheating.

Generally your view should be responsible for extracting params from the request, passing those to other code, then figuring out how to show the result to the user.",1526004302.0
TheDumbfounds,"If you're interested, on my youtube channel I'll shortly create a series on the django fundamentals, which will go into more detail on CBVs than other video tutorials: https://www.youtube.com/channel/UC33uwXXDrI5TxG4IXnjS28g",1526039143.0
ccb621,Have you tried looking at the source code? I am unaware of any tutorials that go into detail on CBV. ,1526003777.0
pancakeses,"I would recommend you go through the entire django tutorial, where this is covered: https://docs.djangoproject.com/en/2.0/intro/tutorial01/

Specifically what you seem to be looking for is the various tools available in manage.py: https://docs.djangoproject.com/en/2.0/ref/django-admin/

Check you project (and models) for syntax errors:

    python manage.py check

Use the ORM to create statements that will generate the equivalent tables:

    python manage.py makemigrations

Apply migrations to actually create or update tables in your database:

    python manage.py migrate

If you're actually asking for something else, please add more detail to your question. Again, I highly recommend going through the entire tutorial.

Edit: Also, consider posting questions about learning django to /r/djangolearning rather than /r/django

BTW, check won't check for business logic errors, since django has no idea what you intend. But basic logic errors like *1 == 2* will be flagged.",1526001004.0
booooomba,"Yes there is. :-)

Work through the official Django tutorial. Shows you everything you need!",1525995096.0
TheDumbfounds,"the django documentation is a great resource.

Also, I'll be creating a beginner series about the django fundamentals on my youtube channel very soon, which you can find here: https://www.youtube.com/channel/UC33uwXXDrI5TxG4IXnjS28g

After that, you should be able to add any feature to your applications with a bit of research :)",1526032905.0
brtt3000,"If you followed the linked instructions you've installed the `bcrypt` package from pypi. So import stuff from it where you need it and do your thing.

I'd start with the package info: https://pypi.org/project/bcrypt/ for some examples. Maybe see any linked page or the tests and whatever for more examples etc.",1525976666.0
dynaken,"Django allows you to create command line apps that taps into your project's models too. Look into that and run it with cron or something django scheduler. I know they exists. Check link below as an example. 

https://docs.djangoproject.com/en/2.0/howto/custom-management-commands/
",1525969881.0
zettabyte,"For something this simple, Cron will work just fine.  Setting up workers and a message broker wouldn't make a lot of sense, unless you have a whole bunch of [interdependent] asynchronous tasks you'll be running.

E.g.,

`./app/management/commands/get_tweets.py`:

    from django.core.management.base import BaseCommand
    from project.app.utils import ingest_tweets

    class Command(BaseCommand):
        """"""Go get them tweets.
        """"""
        help = (
            ""Call to retrieve tweets from the twattosphere.""
        )

        def handle(self, *args, **options):
            ingest_tweets()



`$ crontab -e`:

    DJANGO_SETTINGS_MODULE=""project.settings.prod""
    MANAGE_PY=""/path/to/ve/bin/python /home/user/project/manage.py""

    # m h dom mon dow  command
    # Run the tweet job every 5 minutes.
    */5 * * * *   $MANAGE_PY get_tweets > /dev/null 2>&1


That setup will execute your ingest function every 5 minutes using the Linux cron utility.",1525975552.0
gifgifgifgifgif,"Bite the bullet, learn celery. 

If you *really* don't want to, write a [management command](https://docs.djangoproject.com/en/2.0/howto/custom-management-commands/), and set it to run with [cron](http://www.unixgeeks.org/security/newbie/unix/cron-1.html).",1525968911.0
colexyz,In Europe probably,1525965604.0
fdemmer,Who downvotes this and why? is djangocon not relevant for django?,1525981317.0
booooomba,Are you having any problems with it? Anything you want to do but cannot be done in Django?,1525961963.0
,[deleted],1525963845.0
nannooo,"Some really big corps are running on Django. I think you should be more worried about you architecting/designing (not UI/UX, but the tech side) instead of Django itself.

Also see this; https://www.bedjango.com/blog/top-5-sites-built-django-framework/",1525967133.0
electric_creamsicle,"""Is it the best option?"" isn't really a great question when you don't give any info about your experience and the expectations for your project.  It seems like you already have the work done in Django/Celery and it works so I would say it's the best option.  Depending on the scale you need to achieve, it might become exorbitantly expensive to continue running this stack, but that's hard to make guesses at because we don't know what scale you're dealing with now and the other boundary conditions (do you plan to keep using Heroku? how much runway do you have? is the service you're providing monetized in anyway or is it just a proof of concept at the moment?)

There's really no point in switching away from Django and Celery if it's working at the moment.  Both of those can scale horizontally as long as you used them properly.

Edit: Just to give you an example of another option you could use, my company uses Scala for all of our backend services and we tend to just write kafka producers/consumers when handling async tasks.",1525969911.0
zettabyte,"My two cents:

* Think in terms of concurrent requests, not user count.

* A typical architecture is to have a Load Balancer delivering traffic in some fashion (e.g., round robin) to your application servers.

* An application server is a repeatably deployed VM that might include nginx or Apache receiving and forwarding to a pool of uwsgi / gunicorn workers.  You might not need nginx or Apache, depending on your Load Balancer capabilities.

* You build your application pool to auto-scale as load increases to some threshold across all instances.  E.g., if my application servers are running at 70% load, spin up 25% new instances.  If the servers are running at 30% load, turn off 25% instances.

* The number of concurrent requests your application can handle is largely dependent on what it's doing and what hardware it's running on.  Those metrics will come from load testing and real world data.  If you're able to auto scale (as described above), this becomes less of a worry.


AWS has several products that can help with the above.",1525969516.0
space_sounds,"I think learning and creating at the same time tends to get a bit messy when doing projects, so I understand how easy it is to get lost, I'm also interested in what kind of replies you will get about using different software for organising. 
Not an expert but perhaps simplify it a bit by grouping your tasks together under goals, and doing one goal at a time.
For planning models I would create an Entity relationship diagram, I personally use Visual Paradigm.",1525952164.0
TheDumbfounds,"I'd say to simply figure out what the most important parts of your application are and add those features (MVP). What makes your application useful? Why do people want it? Those are the first features you should add. After that, you can start adding the ""vitamin"" features that make it even more useful.",1526031811.0
ccb621,"I try to put all user-facing features into the form of a user story: https://en.m.wikipedia.org/wiki/User_story . Other tasks (e.g. library upgrade) are written with a clear reason for the task and expected outcome. These could also be written as user stories, but it’s not worth the hassle. ",1525968814.0
,Continue using Trello to organize your project but stick with one goal until it is tweaked to perfection.,1525969694.0
IChoseBaySorryChloe,"Don't get me wrong, I love Life is Strange (see username). But why is this posted here on /r/django ?",1525982532.0
marblepebble,"Did you specify an ordering? (eg. Foo.objects.order_by('date'))
If not, the db can give you objects in whichever order it feels like. Perhaps you are using sqlite locally and postgres on your server, or something?

If order is important to you, you should specify it.",1525943724.0
xBBTx,"You literally re-invented [inline formsets](https://docs.djangoproject.com/en/2.0/topics/forms/modelforms/#inline-formsets)...

django-extra-views for example has built in views to work with inlines, e.g. `CreateWithInlines` and `UpdateWithInlines`.",1525960323.0
Mephoros,"Thanks for the post. I have a question though: How would you handle dynamic forms with a more complex model than just a single text input?

As an example: a Location(address) having many Events(date, name, description, performer) where Performer(name) is a model with a OneToOne relationship pointing to a particular Event.

Would you just alter the logic to accommodate the additional fields?

    def __init__(self, *args, **kwargs):
        super(LocationForm, self).__init__(*args, **kwargs)
        events = Events.objects.filter(location=self.instance)
        
        for i in range(len(events) + 1):
            self.fields[""event_date""] = ...
            self.fields[""event_name""] = ...
            self.fields[""event_desc""] = ...
            self.fields[""event_performer""] = ...

        # etc...

Is there a more elegant solution?

I guess what I'm asking about is a lot like how to recreate admin section functionality with complex relationships.",1525941778.0
fessacchiotto,"Dear all. 

I just thought to share a great article with this community. 

I’m not the article writer, and I’ve asked him to respond to your great feedback. 

Thanks to all. 

All the best. 

",1525972330.0
Boofern,Sorry if this is a silly question. But would rewriting the save() or clean() methods without a call to Super() result in nothing happening? There's no instance to save to if in profile = self.instance object is never saved?,1525955173.0
mochamocha666,Thanks will try this out as I can see dynamic forms fields essential for my current project,1525956511.0
landcross,Nice. I made a similar kind of form myself for  [here](https://motherboarddb.com/advanced-search/) (the IO part). Took me a bit of googling around as I'm not very used to JavaScript. A tutorial like yours could be helpful to others :),1525985806.0
Dom4n,I would suggest local storage for temporary things. ,1525924540.0
defmacro-jam,Store preferences in a model with a one-to-one relationship with your custom User model.,1525924139.0
hamstap85,"If you want transient anonymous preference support, I don't have that much experience with cookies or `request.session` but I'd imagine they're your best bet. I'd you also want saved user preferences then definitely 1to1 on whatever Auth user model you have. My work has a `UserProfile` model and it's awesome ",1525929166.0
Investisseur,"Yes this would be extremely simple to do with the video being on S3, managing the videos permissions either on S3 or programmatically with boto3. The permission you can set on S3 allow the link to only be available on specific domains or urls. Using stripe, a customer user model, and a payments table without implanting an bullet proof payment system you could define the permissions to who had access to the page that the contains the video",1525913048.0
coocha,"You might be confusing HTTP with RTMP....  HTTP pseudostreaming only works with some file formats, and for others it has to download the entire payload before it will let you fast-forward to a particular point in the video.

RTMP is a true streaming protocol, and communicates your requests for certain portions of a video back to the server, and the RTMP server starts sending packets related to the part of the video you want.

EDIT:  I got curious because streaming video is part of my dayjob.  To do what you want, you probably need to host your Django app using Apache, so you can use mod_h264 to achieve HTTP pseudostreaming.  Right now, your webserver just thinks it's providing a file to a connected user, it doesn't know to try to pseudostream the video.  [This page might help](https://labs.wearede.com/how-to-setup-video-on-demand-pseudo-streaming-server-with-apache-and-mod_h264/).  Turns out nginx also has a module called ngx_http_mp4_module that may do the trick.  mod_h264 may be better documented though.",1525915379.0
gosh_djang_it,"Did you seriously just post an image of your code instead of posting the code directly? Please...never do that again....

And good luck with your project.",1525924967.0
Investisseur,Get them files on S3 bruh,1525913296.0
daredevil82,"If you're using the django dev server via the runserver management command, IIRC this is an issue with serving video static content",1525911245.0
Niicodemus,You need to enable fast/web start when outputting the file so that it puts certain headers at the beginning of the file and the browser can start playing it right away. [see this answer on SO for tips](https://stackoverflow.com/a/25937104/3638808).,1525919705.0
PlasticoX,There is no need to write custom authentication model,1525999627.0
out_of_all_loops,"Sqlite has big problems with unicode. ""icontains"" and just alphabetical sorting doesn't work properly for languages with non-ascii characters (at least mine). That is a deal breaker for me. I will just use a mysql docker container on my next project.",1525876557.0
ccb621,"Kudos for doing the tests, but what exactly do you expect folks to do with this information? Many know that SQLite is fast. We also know that it has numerous faults and potential scalability issues. ",1525877328.0
masklinn,"> My personal conclusion is that Sqlite with Django is good enough if you don't have concurrent writes

That's as old news as can be. It's literally one of the use cases noted on the sqlite website.

> being able to handle ~ 1000 inserts per second is more than enough for me now.

You'll want to be careful with that, because as of 3.23.1 the default operating mode of sqlite remains the rollback journal, meaning exclusive-locking for writes.

> It could be interesting to test concurrent reads speed and compare to Postgresql.

Not really.",1525874786.0
mrmeeseeks2014,Would the stream get recorded? I would like to watch but would not be available at that time.,1525874259.0
timee_bot,"View in your timezone:  
[Friday, May 11th at 8 PM CDT][0]  
[0]: https://timee.io/20180512T0100?tl=I'll%20be%20hosting%20an%20educational%20stream%20where%20we%20build%20an%20RSS%20reader%20with%20Django%2FVue%20this%20Friday%2C%20May%2011th%20%40%208%20PM%20CST.


*****

^^Assumed ^^CDT ^^instead ^^of ^^CST. [^^undo*](/message/compose?to=timee_bot&subject=reprocess_ntz+request&message=%21reprocess_ntz+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkeXA0ODZhIiwiYWN0IjoicmVwcm9jZXNzIiwib3AiOiJLMU5OWSIsInBubSI6InQzXzhpNjF4cyIsImlhdCI6MTUyNTg3MzI1Mn0.7upDLMTs9g3-qsWRJB5-eWZiBcfCfZn0S0xIEcO2Kl8)

[^^delete*](/message/compose?to=timee_bot&subject=delete+request&message=%21delete+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkeXA0ODZhIiwiYWN0IjoiZGVsZXRlIiwib3AiOiJLMU5OWSIsImlhdCI6MTUyNTg3MzI1Mn0.F9O52Axfr7wZZxvoyqHnikoqYd-UKDxRvxLvWRPSbl0)
^^|
[^^reprocess*](/message/compose?to=timee_bot&subject=reprocess+request&message=%21reprocess+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkeXA0ODZhIiwiYWN0IjoicmVwcm9jZXNzIiwib3AiOiJLMU5OWSIsInBubSI6InQzXzhpNjF4cyIsImlhdCI6MTUyNTg3MzI1Mn0.7upDLMTs9g3-qsWRJB5-eWZiBcfCfZn0S0xIEcO2Kl8)
^^|
[^^ignore ^^me](/message/compose?to=timee_bot&subject=ignore+request&message=%21ignore+me)
^^|
[^^help](https://www.reddit.com/r/timee_bot/wiki/index)

^^*OP ^^only",1525873252.0
mangoQuesadilla,Do you have anything on YouTube right now?,1525902525.0
JSutie,!remindme one day ,1525923582.0
eskemojoe007,"Won't be able to join live, but I will definitely watch any recording, so make sure to share that please!",1526004194.0
,[deleted],1525889269.0
i_dont_want_karma,Mainly limited-time subscriptions. No thanks.,1525883453.0
fergal-dude,"Thanks for the heads up, there was a course and a book in there that I had considered. Picked them up for less that the retail for either and a bunch more stuff to boot!",1525875312.0
Wirebraid,So I can use pycharm only for the specified time?,1525886161.0
pydanny,This is an awesome bundle. ,1525987873.0
grouchoboy,"If you want to learn a web framework ant you know some Python pick Django, if you know Ruby pick Rails. 

If you don't know Python or Ruby. Play with both of them and then choose the framework based on your taste of language. Of course would be good if you do the basic tutorials of the frameworks.

Django and Rails are modern frameworks. Both can be really fast or really slow, it's depends of many factors. Neither are dying.",1525867434.0
daredevil82,"Rails is still active, and so is the language behind it, Ruby.  But consider your end goals for this.  What are you looking to do with your skills?  Do you have any existing dev skills or are you starting from scratch?

Rails has been used by bootcamps, which have 12 or so week programs to get you the skillset of a very basic developer, and promise that you'll get a decent job after.  Problem is, many cities, such as Boston, NYC and others where there are a large number of bootcamps, many places are actually moving off Rails to Python or other languages because the quality of Rails devs in the hiring pool is so low.  So if you're looking to get in Rails, you're running the risk of being lumped into thisp pool.

There are a number of things about ruby and rails I don't like.  Syntax, the way it hides so much from you, and other things.  Python and its frameworks are much more explicit, which lowers the pain points when working in teams and learning the language/framework.

Finally, I'd like to make one last point: don't put stock in 'fast', 'speed' and other descriptors when evaluating a language.  Unless you're working on some very big projects, developer time is much more valuable than framework benchmarks, so pick the one that has a great community and is easy to work with and expand.",1525867813.0
super_cool_kid,"Do you want to learn Ruby or Python? 

Do you want a more comprehensive framework (Django) or lighter and quicker to implement one (Ruby on Rails)?

I think Django is nice (my opinion better), but Rails follows the ""traditional"" Model View Controller (MVC) framework  more closely making it easier to switch to other MVC frameworks with less difficulty.",1525867661.0
FeatheryAsshole,"django and rails are the same amount of modern and fast; django should have the edge in speed because python is faster than ruby, but for web applications the difference doesn't matter - either both are fast enough, or you should use a lower level language like java.",1525867873.0
shacker23,"Many answers here say something like ""Pick the one that corresponds to the language you want to learn \(Ruby or Python\) as if the language is the most important thing and the frameworks are otherwise equal. I disagree with this. The frameworks are not equal \- their philosophies and methodologies are quite different. For example, in Django you define your models as code, and the database is built from the code. In Rails, it's the opposite \(you create a database, then introspect it with code\). This is a fundamental difference. Rails likes magic; Python eschews magic. This is a fundamental difference. Python/Django are all about being explicit; Ruby/Rails favor implicit \(convention over code\). This is a fundamental difference. 

Short version: Pick the framework that will make you the most productive because of what the framework provides; the language is less important than the framework. 

Subjective: I spent 18 months on a Rails project and couldn't *wait* to get back to the clarity of Django. ",1525936536.0
caseym,"Like others said this is more about what programming language you like to use. I started with ruby and Ruby on Rails. But I find the ruby community emphasizes clever coding practices, and what many would describe as 'code golf' where you can use obscure one liners to provide a big chunk of functionality. 

Python is all about simplicity, which suits my style. I can write my code in a plain, concise way and know I'm doing it the right way. That thinking drove me to python, and eventually to Flask and Django.",1525870541.0
delibaltas,Go with Django,1525872843.0
backprop88,Rails allows you to build prototypes faster. ,1525875703.0
ItsAPuppeh,"If you decide to also get into data science/machine learning/deep learning, which are all the rage right now, you will be super glad you picked Python.",1525908338.0
captain_arroganto,"Django is better in my opinion. Rails has too much magic built-in. Django is bit more explicit, and thus, a bit more clear. You will struggle  a bit with django, but it will teach you how web apps work. Then frameworks like rails, asp.net mvc, etc will be more easy to learn.

For small to medium, data driven sites, django is an awesome choice.",1525875559.0
genesem,"Learn python, then use django.
Ruby and rails is not as  good as this one. For example ruby dev on windows is a pain to setup ;)",1525875995.0
django_noob,"Found what looks to be a decent writeup

https://www.laurivan.com/decent-image-loader-widget-in-django/",1525854006.0
akoumjian,"You can't compare multiple values like that. What's happening is first it is comparing equality with the first string, which fails. Then the OR statement returns true since the other side of the OR statement is a nonempty string which is truthy.

Instead what you want is 'if my_value in ['AG', 'PE', ...]:' where you out the list of strings in am array.

Sorry for the formatting I am on mobile.",1525833700.0
wasabigeek,"I'll try to bracket each comparison to make it clearer:
`if (order.billing_address.state == 'PE') or ('NB') or ('NL') or ('NS'):
`
So the 2nd - 4th comparisons are as good as writing `true` since it's a non-empty string, which resolves to `true`.

You will either need to repeat `order.billing_address.state == ` for each comparison, or do something like `order.billing_address.state in ['PE', 'NB', ...]`. Hope that helps!
",1525833974.0
booooomba,Django 2.0,1525829165.0
Gnlfbz,Since you are just learning I would 100% say learn 2.0. If you ever have the task of upgrading a site then you can go back and learn the little bits that are different but for now focus on what is the most up to date.,1525829394.0
athermop,"> Thinking version 1.11 was newer then 1.8..I'm tired please forgive me lol

1.11 *is* newer than 1.8...by 2 years",1525830341.0
naught-me,"Stripe?  Their API is excellent - just the Requests library and do it yourself.  In my experience, it's pretty rare that an SDK beats this approach for any given API.",1525808672.0
Starcast,"Have you tried using the search feature?

I'm not looking to do this by hand for you.  If I wanted to that I would type some words and copy and paste a link; I don't have the energy or desire to do that.  This little question isn't worth that amount of investment.

I'm looking for you to do your own research to find answers so I don't have to have a discussion that I KNOW has already been done by others on this site.  I'm willing to point you in the right direction for free if you put in a little effort yourself but if I have to do it manually, I'm not spending the time or energy on it as thats what I get paid to do, and you are not paying me.",1525812307.0
,[deleted],1525811500.0
jobelenus,This doesn't really have much to do in the way of django -- if you're looking to try and make selenium faster.,1525807128.0
bjorn6,Working on something similar but without images. Why use selenium and not requests?,1525807751.0
an_actual_human,"Are you launching a browser instance for every request? If you do, don't.",1525817121.0
beholdsa,"Personally, I would use Beautiful Soup for this.

https://www.crummy.com/software/BeautifulSoup/bs4/doc/",1525812868.0
synw_,You may try [Scrappy](https://github.com/scrapy/scrapy): it is full python and does the job pretty well,1525808927.0
zettabyte,"I used Puppeteer for some scraping about a year ago.  Mileage may vary, but I preferred it's setup and use to Selenium.  But I was a very casual user.

I don't think BeautifulSoup or Scrappy will work for you since you're looking for the post JS rendered HTML.

And I think jobelenus is right, this is really a Django question.
",1525815967.0
Talked10101,"Take a look into Splash. It's a JavaScript rendering engine from scrapinghub. Basically, a server you make requests too and returns you a HAR, rendered HTML or image depending on what you want to do.",1525851346.0
daredevil82,"why not use celery, since you can set time limits for the tasks.",1525817891.0
synw_,Is it a hierarchical tree like [this](https://github.com/synw/django-mptt-graph#screenshot) that you want? It works with django-mptt but you can adapt the [template](https://github.com/synw/django-mptt-graph/blob/master/mptt_graph/templates/mptt_graph/tree.html),1525794102.0
pancakeses,"/u/EliteDice : You are unlikely to get any useful responses to your post, because:

- Questions like this are more appropriate for /r/djangolearning - /r/django is for ""News and links for Django developers.""
- It is not clear what you are trying to accomplish. I read your post several times and looked at the photo, and still have no idea what your goal is.
- Your post is incredibly difficult to read. Please format the code using Reddit's formatting guidelines (specifically, preformatted text, where you add spaces to the front of each line to tell reddit that it's code or other preformatted text) https://www.reddit.com/r/HFY/wiki/ref/faq/formatting_guide#wiki_preformatted_text

---

This will take your code from:

%(models.py) class Attri(models.Model): name=models.CharField(max_length=100)

**type=models.CharField(max_length=20)**

%(views.py) def showform(request): form=AttriForm(request.POST.getlist('name') or None) if form.is_valid(): form.save()

---

To:

    (models.py)
        class Attri(models.Model):
            name=models.CharField(max_length=100)
            type=models.CharField(max_length=20)

	(views.py)
		def showform(request):
			form=AttriForm(request.POST.getlist('name') or None)
			if form.is_valid():
				form.save()
",1525789877.0
EliteDice,"%(models.py)
class   Attri(models.Model):
    name=models.CharField(max_length=100)
    type=models.CharField(max_length=20)
---------------------------------------------------
%(views.py)
def showform(request):
    form=AttriForm(request.POST.getlist('name') or None)
    if form.is_valid():
        form.save()",1525781625.0
trybik,"Django JSON API (views e.g. w/ DRF) + separate React frontend seems to be the recommended (cleanest) way to do it. There are some caveats like passing URLs or model form choices to the React components to avoid hard-coding them in the frontend. Some info I found useful:

* https://stackoverflow.com/questions/39972933/reactjs-django-forms/39974483#39974483
* https://www.valentinog.com/blog/tutorial-api-django-rest-react/",1525777070.0
Investisseur,"If you decide to use DRF or not, you will be making views. The views simply take or return data. If you use DRF a lot of the boilerplate will be written for you. Using DRF also allows you to use Serializers which are very similar to forms to validate data. You can still use Forms to validate data with DRF or with simple endpoints, you will just not render them in templates. Most people do not use forms when using serializers however.

You will then need to decide if you want to use token auth or serve your JS bundle from a Django template page. One has to be done to add CSRF protection. Using tokens allows you to also use the library in any client (ie terminal, browser, iOS app, etc).

The next thing to consider is using Redux and creating an actions middleware. When using DRF with HyperLinkedModelSeraliziers and storing/fetching/deleting/etc by using the middleware API you can significantly reduce your code base.",1525779862.0
dikamilo,"You will use views in REST API.

You will not use forms in REST API, you will use serializes instead.

[http://www.django\-rest\-framework.org/](http://www.django-rest-framework.org/)",1525779566.0
vitogeek,"If you are planning on creating a front end driven app, checkout Dynamic DRF or GraphQL. It'll save you from the pain of creating a bunch of ViewSets and Serializers.",1525790895.0
mejicat,"Yeah, you got it right. Keep in mind that there *some* logic that you still need in the backend - for example, input validation has to be present on the backend too (with DRF you generally can use `ModelSerializer`s or such). ",1525774107.0
Gustash,"You don't need any views no. You just create endpoints that deal with data, and then you return some meaningful data back as JSON. You then display that data however you want in React",1525770353.0
pancakeses,"Add a quick glance it looks like a lot of work has gone into this, but there is no content on the readme. I have no idea what this even does",1525788995.0
trancen,Having Screen shots would be notice for those who don't want to download and install it or have a instance running on https://www.heroku.com/,1525881521.0
boatzart,"Any idea what happened to the project?  I just googled ""django apache superset"" and landed here, but it looks like the project has been taken down already.",1527645580.0
booooomba,"Why does it constantly have to be re-checked? Instead of just with every request. 

In your case you'd need something like celery.",1525728462.0
tomdyson,"Your Pipfile doesn't include Django. Your requirements.txt might include Django but you don't need a requirements.txt and a Pipfile. 

The simple option is just use pip:

`RUN pip install -r requirements.txt`

Once you've got this working you can try to fix your Pipenv setup and swap this line to

`RUN pipenv install --system`",1525726549.0
elingeniero,"* `pipenv` doesn't use `requirements.txt`. Either stick with `pip` or use the `Pipfile` instead.
* If you are using `pipenv` then you need to run your commands prepended by `pipenv run ...` otherwise the virtualenv won't be activated. Recommend you do this by adding `ENTRYPOINT [""pipenv"", ""run""]` to your Dockerfile.
* Because you are copying your code into the container before you run `pip install`, it will install the requirements on every rebuild - it won't be able to cache the container image with the installed packages because you are breaking the cache by moving all the code in first. You should copy only the `requirements.txt` or the `Pipfile`, then install requirements, then copy the code in.
* You can't have 2 commands for one container. You can run the same container twice with different commands. However, I don't like automatically migrating on startup.",1525761281.0
ccb621,You cannot have two `command` directives for a single service. I'm also not a fan of automatically running migrations when the service starts.,1525728608.0
dedsm_,"nice but very basic, many concurrency issues could happen there and there's no mention on that issue in the post ",1525734370.0
rev91,"https://stackoverflow.com/a/25690469/4190500
Look at this. It is a simple solution that should work",1525711867.0
Fun2badult,"I’ve done #3 and currently taking #5. 

For 3, tutorial is simple and I like Nick’s style of making it easy to digest. He doesn’t really go into detailed and complicated coding but his easy going style and procession of material covering lot of diff parts makes it worth spending that $10. 

For 5, the tutorial seems to be packed with stuff but this course is pretty hard. It just went over my head especially when he introduces and uses syntax without explaining much about it. I found myself constantly having to stop the video and google for hours trying to figure out what the hell he was doing. Although lot of good stuff, the fact that he goes so fast is counter Intuitive at some point because then you’re losing the students. I’m planning on going back to this one later once I get better with Django. This course for sure isn’t for beginner and if you are, you will be left stumped. 

",1525718358.0
rdom22,"Another great article.
Thanks Michael!",1525695292.0
brylie,"The PostGIS [ST_MinimumBoundingCircle](https://postgis.net/docs/manual-2.0/ST_MinimumBoundingCircle.html) will return a WKT polygon. You can then use [Shapely](http://toblerity.org/shapely/index.html) to [get the centroid of the polygon](https://stackoverflow.com/a/46397658). For the radius, you might consider using [Geopy](https://geopy.readthedocs.io/) to [calculate the distance](https://geopy.readthedocs.io/en/stable/#module-geopy.distance) between the center point and all other points, and then taking the max value.

Edit: for radius, you might alternatively find the distance between the center point and any of the (default 48) points in the WKT geometry returned by ST_MinimumBoundingCircle.",1525683409.0
DeusImpervius,"Your questions are vague.
You have a table with ""a"" point field.
If one record is only have one point, how do you create circle with ""given points"" if you only have one point?
Do you want to combine multiple points from each records?
How do you know those points will create a perfect circle?

Pretty sure creating a bound from points is covered in GeoDjango docs. You will also get the answer from the first result in Google. What research have you done exactly?",1525682861.0
pat_the_brat,https://postgis.net/docs/manual-2.0/ST_MinimumBoundingCircle.html,1525682793.0
ccb621,We can’t offer much assistance without specific error messages. ,1525673419.0
flipperdeflip,Yes.,1525692546.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1525658510.0
Alex3917,"- Django-Silk
- NewRelic
- DataDog",1525630547.0
kwikade,django-debug-toolbar?,1525630679.0
roddds,"People might be asking complex questions due to already having experience programming or using other web frameworks.

Don't be discouraged by other people's progress.",1525625758.0
boxidea,"Don’t get discouraged. Never feel ashamed of asking questions or searching for help. 

Relevant tweet from one of the creators of Django:

https://twitter.com/jacobian/status/988515858887491584",1525626146.0
JayTurnr,"/u/Fun2badult - I started Django from fresh after only a few weeks of basic programming. Yes, I made mistakes at first but just keep reading. Read the docs, read the source, just try to understand what's happening within it. You'll get there. I've been at it for six months now.

Oh boy, if you hate time commitment, my comment won't help at all.",1525627891.0
academicbadger,"One that helped me initially for very basic deploy was he Django girls tutorial. 

https://tutorial.djangogirls.org/en/deploy/

Used that and lots of searching later to help. ",1525635951.0
academicbadger,"Make sure to add a test that can work on dev and production to check for static files working. E.g. on tutorial app this file below tests for styling so can checj for static file errors. 

https://github.com/shiftypanda/python-tdd-book/blob/master/functional_tests/test_layout_and_styling.py",1525637862.0
bobbybumfights,\+,1525680114.0
flipperdeflip,"Often beginners ask for stuff that is way above their level. 

> ""Hey I'm new yo django how do I make soundcloud?""

> ""I want to make a youtube clone, is django a good framework for this?""


",1525686289.0
,"I’m 2 months into Django+Python learning.  I follow tutorials and then hack around and use virtual machines with various Linuces installed.

My focus lately has been learning Mezzanine, a Django-based CMS.

Given all that, must note that I’m an experienced dev with deep sysadmin, C, Perl and Java background.  I think most junior devs struggle with unix/Linux CLI more than Django or Python.  Get good at your CLI-fu.  It will help.

Read Stack Overflow.  Search the hell out of Google.",1525695920.0
cybertether,"Just my $0.02:
I started learning Python after I completed my A+ cert because I was bored with previous html/css stuff and wanted to actually script/program.  
I enjoy Python, but I'm learning Django (and how to use Bootstrap with Django) because being able to deploy an app/website relatively quickly and easily is just something very marketable and useful.  
However, it's not easy.  It's slow and frustrating, because it's learning.  I don't expect it to be quick, and I'm dubious of anyone who says programming is easy or that they learned it in 'just' X days.",1525789617.0
wynar,"~~Can you provide your Products model? I think a simple [filter](https://docs.djangoproject.com/en/2.0/topics/db/queries/#retrieving-specific-objects-with-filters) with len will work to get the count, just need to understand how products fits into the categories.~~

Ah I see the Bet model = Products.

[Filters ](https://docs.djangoproject.com/en/2.0/topics/db/queries/#retrieving-specific-objects-with-filters)would work fine for this while using the len function. The queryset thats returned is a list so len will work to get the count. You will have to break it out by category as far as I'm aware.

    cat1All = Bet.objects.all().filter(category=""cat1 id"")
    cat1SoldRes = len(cat1All.filter(status=""Sold id"")) + len(cat1All.filter(status=""Reserved id"")) 
    cat1TotCount = len(cat1All)

That's how I would do it, there might be a better option though.",1525592739.0
bmartsberger,"This may be a simple mis-understanding of how `Count` works in SQL. `Count` gives you the total number of all records that are not NULL. So, instead of 

    Count(Case(When(status__name__in=[""Sold"", ""Reserved""], then=True), default=False, output_field=BooleanField()))

Maybe you want

    Count(Case(When(status__name__in=[""Sold"", ""Reserved""], then=True), default=None))",1525620513.0
PyBet,"Replacing then=True with then=1.0, adding default=0.0 and changing output_field=BooleanField() to output_field=FloatField(), seems  to work.

I have updated my post with the solution.",1525647850.0
pat_the_brat,https://www.obeythetestinggoat.com might be up your alley.,1525561050.0
athermop,"django-debug-toolbar is a good package to use in development.

Read Two Scoops of Django.  It's a great reference on Django best practices.",1525567348.0
pynberfyg,Django rest framework if your app is going to have an api,1525570841.0
i_amwithnail,"We use Pytest for our setup, which I'm a bit of a convert to after coming from regular unittesting.  Runs locally and in travis before building the docker container and pushing it to dockerhub for deployment. ",1525562844.0
i_like_trains_a_lot1,"- I personally use ``django-environ`` instead of ``dj-database-url``. It extends its functionality and handles all the configuration pretty easily.
- For development environment I use docker to keep everything neat (and also use postgresql-only features without installing it on my host). 
- ``pytest-django`` for testing 
- Django rest framework for APIs.
- Django Guardian for instance permission management.",1525592478.0
spookylukey,"I always use:

* django-debug-toolbar
* [django-functest](https://github.com/django-functest/django-functest) for testing.

Plus some general Python tools:

* flake8
* isort
* [attrs](https://github.com/python-attrs/attrs)
 ",1525697596.0
koobawuah,"Great idea! I’d really like some hands on projects to learn from. Would help many newbies like myself, Good initiative!",1525534932.0
torvaldl,I would definitively watch. A fully start to end screen recording with commentary is often worth more then a tutorial blog post as it exposes many of the small technical justifications that otherwise would disappear in traditional guides. ,1525540745.0
martyin3d,I for one would be very grateful for this series!,1525536460.0
Fun2badult,I would be interested in seeing it as I’m learning Django right now ,1525536803.0
chanamasala4life,"Count me in too. If you ever want to delve into a Django Rest Framework + React adventure, I'd love that even more!",1525561727.0
booooomba,I approve!,1525534763.0
iKenshu,Yes please! With some exercise we can implement for practice,1525538980.0
kontekisuto,yes but skip the basics and go fast.,1525571110.0
IamATechieNerd,Link me up,1525540337.0
mandarin80,Sounds great!!! Subscribe for it!,1525540492.0
the-average-user,"this is awesome!! do it! just do it! Also if you need a helping hand, count me in.",1525543124.0
wharfedalepulz,"Yes!! Please.
",1525548447.0
ko_andersson,Yes please!,1525553011.0
bre_e,Totally yes,1525558510.0
rocky-ji,Where is the github address!,1525575667.0
Dangle76,100% yes,1525618027.0
berdore,Yes please!,1525627280.0
rocky-ji,"I hope it sooner,thanks ",1525657163.0
grandemaitre,Brilliant idea!,1525813201.0
FountainRescue,This would be interesting if the projects were non\-trivial and focussed on intermediate/advanced techniques.,1525607377.0
deepkothari777,Is this completed? Can we have the link? u/K1NNY,1536223040.0
shbooms,https://media.giphy.com/media/S3Ot3hZ5bcy8o/giphy.gif,1525572747.0
boxidea,"This should also include a mention of functools.wraps

https://docs.python.org/3.6/library/functools.html#functools.wraps

Keeping the docstring and name can be important, especially if you are using tools that automatically generate documentation. ",1525534614.0
ClickableLinkBot,"##r/python
---------------------------------------------
^(For mobile and non-RES users) ^| 
[^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| 
^(-1 to Remove) ^| 
[^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/853qg2/ignore_list/)",1525528149.0
Soupinmyfly,"Change validatedimages =none to 
Validatedimages =[]

It isnt a list the way you have constructed a it. Thais means that it doesnt have the append function.",1525498270.0
tkovalsky,"Taiga.io is what you’re looking for. 

Built on Django ",1525488118.0
rohitgehe05,"Not sure if built on Django and more of a SaaS, but I think this will suit your needs.

https://rikko.io/",1525501278.0
vangale,"This is a super old project and had problems even when it was new, but maybe you can get it working :)

https://github.com/gkmngrgn/django-voice
",1525494945.0
patasucia,"maybe something like [this](https://github.com/django-helpdesk/django-helpdesk)?

[Demo here](http://django-helpdesk-demo.herokuapp.com)",1525476688.0
defmacro-jam,"You won't be able to use your initial migration for sql server, on a postgres backend.  Postgres uses sequences and integer fields instead of BigAutoField.  

You may be able to edit your migrations but that seems like a lot of extra work to me.",1525490594.0
flipperdeflip,"If you going to start with a new database anyway it might be safest to remove your existing migrations, update the model to use a field postgres understands (one of the regular fields or from django.contrib.postgres) and recreate the migrations and apply to a new database.",1525692812.0
rflott,"I reluctantly hand edited my initial migration from sqlserver_ado.fields.BigAutoField to BigIntegerField. It was the only way I found to make this work properly. For now I need to be compatible with M/S SQL server, MySQL and Postgres. Thanks for the help guys!",1525876763.0
andytwoods,"Sorry for being thick, but what's the benefit here? Spam bots are bots so not overly bothered by video / won't watch it anyway. Keen on learning why I'm wrong :) ",1525538395.0
pancakeses,You have a checkbox in the Django 2.0/Python 2.7 grid box. Aren't those two things exclusive?,1525622813.0
spookylukey,"You are looking for 'context processors' - see

* https://docs.djangoproject.com/en/2.0/topics/templates/#module-django.template.backends.django 
* https://docs.djangoproject.com/en/2.0/ref/templates/api/#django.template.RequestContext
* https://docs.djangoproject.com/en/2.0/ref/templates/api/#writing-your-own-context-processors
",1525456101.0
KruizerChick,"Perhaps I am not understanding what you are asking, but I usually do this by using the `{% include %}`  builtin Django template tag. \(See [here](https://docs.djangoproject.com/en/dev/ref/templates/builtins/#include).\)

Typically, I put the navigation menu in a separate file and call it in my base template like this:

`<body>
  <!-- Menu Bar -->
  {% include '_nav_menu.html' %}
...`

`</body>`


\(But just an FYI... the code you have above is a loop that is pointing to the 'item' object in the 'navigation' set of objects. When calling those objects \(defining your links\), you should be looking at each object in the set.  Your calls should be like this:  `{{` [`item.name`](https://item.name) `}}` and `{{ item.url }}` \)",1525456808.0
PlasticoX,Context processors is your way,1525458110.0
SubZeb,I have been looking for something like this! This is awesome!  I will look at it and see if there are any suggestions I'd have!,1525443439.0
zachtib,will this work with bootstrap4?,1525446810.0
batisteo,Too bad I'm on 2.0.5,1525456360.0
patasucia,looks good!,1525445367.0
spapas82,"Great stuff! However, what I really miss is a datetime picker. Any plans on adding a datetime widget on this project?

BR, Serafeim",1525510912.0
asplodey,Link pls?,1525441068.0
akoumjian,Your most likely culprit is a stray gunicorn process that won't die. Did you `ps aux | grep gunicorn` after you killed the process? Make sure they are all gone and that your file has actually saved. ,1525393966.0
wyldphyre,"cached `.pyc` files is probably not your issue unless your filesystem's timestamps or your system's clock aren't stable.

Can you try enabling [`PYTHONDONTWRITEBYTECODE`](https://docs.python.org/2/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE) ?",1525393416.0
meatb0dy,"are you using any caching? you might just be getting the cached version of the page. try appending a nonsense querystring to the url to bust the cache; e.g. if the page in question is at `/something`, try `/something?cache=busted` and see if you get the expected (new) result.

if so, the remedy will depend on where the caching is taking place. it could be at the CDN level (if you're using one), in nginx, in django, or in the browser.",1525418550.0
-NewGuy,Get your app into a docker container so you can encapsulate your environment and make it easier to change things next time around,1525439304.0
pancakeses,"Although /u/ShortOpposite provides some helpful reference material, I'm not sure I agree with the proposed solution since it duplicates work - having a ForeignKey to parent *and* OneToMany to children_folders is redundant. The child relationship can be found easily through the ORM. Using the method below, files related to a particular folder can easily be identified using their reverse relationships (IE: folder.folderfiles), and child folders similarly (IE: folder.folders).

Here's some (untested) code, adapted from one of my projects. It uses a recursive Folder model, a File model with a relationship to a folder, and also some details regarding the actual location of the uploaded file. Hopefully it will get you off to a good start.

	from django.db import models
	from django.urls import reverse
	from django.utils.translation import ugettext_lazy as _
	import datetime


	def file_location_path(instance, filename):
		# file will be uploaded to ""client_files/<id>/Y/m/d/<filename>""
		return 'client_files/{0}/{1}/{2}'.format(instance.user.id, datetime.datetime.now(datetime.timezone.utc).date().strftime(""%Y/%m/%d""), filename)


	class Folder(models.Model):
		user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='userfolders')
		folder = models.ForeignKey(Folder, on_delete=models.CASCADE,related_name='folders')
		name = models.CharField(_('Folder Name'), max_length=70)

		def __str__(self):
			return self.name


	class File(models.Model):
		user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='userfiles')
		folder = models.ForeignKey(Folder, on_delete=models.CASCADE, related_name='folderfiles')
		description = models.CharField(_('File Description'), max_length=70)
		location = models.FileField(_('Location of the File'), upload_to=file_location_path, null=True, blank=True)
		
		def __str__(self):
			return self.description


Hope that helps get you on the way. If you have any questions, please ask.

Also, I would recommend /r/djangolearning for future questions about starting out with Django. /r/django is really intended more for news and articles about the framework.",1525402187.0
ShortOpposite,"URL on   */<parent_folder_ID>/<current_folder_ID>/*

Display only the files linked to current folder. 

No folder should have more than one parent. No file should exist in two folders. No folder should be able to be both the descendant and parent of a folder. 

It's a [tree diagram](https://people.eecs.berkeley.edu/~bh/ssch18/trees.html). 

Model something like

    Folder(models.Model):
        #pk = id
        parent_folder = ForeignKey(Folder)
        children_folders = OneToMany(Folders)
        files = OneToMany(Files)

This would simplify the problem for you. ",1525399984.0
ge0n1,"https://stackoverflow.com/questions/36446755/how-to-convert-file-path-to-url-in-django




",1525382926.0
bartergames,"Imho, you should drop out the idea of using ""/folder/folder/.../files"" url pattern. Maybe you should use something like ""/<uuid>/files"", with uuid an unique identifier for each object.

Another idea could be using a rest framework that can parse the ""/folder/folder.../"" path dinamically.",1525382120.0
mkingsbu,"You probably are looking for some kind of unary relationship. Basically you have your folder table, and then you have a table that is folder\_folder. So if folder is 

`folder_id int PRIMARY KEY, folder_name text`

Then your folder\_folder table would be

`folder_id_parent INT, folder_id_child, INT, PRIMARY KEY (folder_id_parent, folder_id_child), FOREIGN KEY(folder_id_parent) REFERENCES folder(folder_id), FOREIGN KEY(folder_id_child) REFERENCES folder(folder_id)`

I don't do web development so I can't speak to the URL though; I don't think I would handle it that way beyond displaying the structure in text somehow.",1525382083.0
zettabyte,"Given your template containing:

    <a href=""{% url 'roomkey-request' roomkey.pk %}"">Request</a>

You would render that template with a context that contained a `roomkey` value.

Presuming `roomkey` is a model instance, you can play around with this in the shell:

    from django import template
    roomkey = Roomkey.objects.get(pk=pk)
    tmpl = template.Template('{{ request.key }} - {% url 'roomkey-request' roomkey.pk %}')
    ctx = template.Context({'roomkey': roomkey})
    print(tmpl.render(ctx))

The `roomkey.pk` value comes from the context the template is rendered with.  If your context doesn't contain a `roomkey` object, then there's nothing to render.",1525365173.0
aaron__ireland,"> what is the roomkey referring to?

It's a context attribute, (presumably) provided to your template by a view (or a custom template tag), but probably in your case, the view. For more information, see [Django docs on the render function](https://docs.djangoproject.com/en/1.11/topics/http/shortcuts/#render)

> where does the roomkey.pk come from?

Do you mean specifically the attribute, **pk**? That corresponds to the primary key of the model instance, usually - by default - an auto-incrementing integer. 

It seems like you might be a bit confused about MVC/MTV frameworks in general and how they work. But the user/browser makes a request to the server for a URL, that gets routed to your Django app which matches the pattern to a resource, like a view, the job of the view is to process the request and render some kind of response to send back to the client-side/browser. If you have a url pattern like the following: 
    
    url(r'^my_url/(?P<foo>[0-9]+)/?$, my_view),

and that maps to a view *my_view*, That view might look something like:

    def my_view(request, foo):
        roomkey = RoomKey.objects.get(pk=foo)
        context = {'roomkey': roomkey}
        return render(request, 'your_template.html', context)

then in your template, **{{ roomkey }}** will be the model instance from your view.",1525367909.0
,[deleted],1525364087.0
TunaBoo,"How about this in your serializer validate method?


    def validate(self, data):
        parsed_keys = set(i[0] for i in data.items())
        given_keys = set(i[0] for i in self.initial_data.items())
        extra_keys = given_keys - parsed_keys
        if len(extra_keys) > 0:
            raise serializers.ValidationError(f'Unknown keys {extra_keys} provided')

        return data",1525360632.0
ramse,I'm kinda of curious as to why it would matter if v and w were also passed? Whats the issue if you don't even use either to begin with?,1525364955.0
wasabigeek,"Perhaps the easiest way would be to try it 😀 I'm tempted to say the signals should be enough and you don't need to nest, but best to check, as DRF chooses to ignore some of Django's methods (e.g. ModelSerializers doesn't use the model's `clean()` method).",1525804391.0
Zoro-Zen,Have you got a solution for this? I'm having a problem almost like this.,1530878992.0
apreche,"This is almost trivial to make with Django. You won't need much extra stuff on the backend. The front end user interface of HTML, CSS, and JS will be most of the work. ",1525284115.0
mildata,"Hey,

Awesome that you want to try out Django. I started not too long ago and I am already making most of what I want to make. Same background as you python knowledge and some DB knowledge.

I recommend going for the free trail at plurasight and watch the codeschool videos about Django. There are two courses from codeschool and you can finishes them within a day but it helped me a lot.

I think in these courses you learn most of what you need for the project and you will have your project in no time!

Good luck and most importantly have fun!",1525335413.0
ysmoliakov,I have posted this project to the /r/django four months ago. I have added some updates and improvements in a new release. Check it out.,1525258547.0
samir_tendulkar,A very difficult code mode super easy. This code will help you add multiple images to a post and also let you update and delete that post  ,1525256291.0
fdemmer,"official docs: https://docs.djangoproject.com/en/2.0/ref/urls/#path

nice: the route argument of path() can also be gettext_lazy()",1525262869.0
broadsheetvstabloid,"Yay, no more regex!",1525295107.0
daxaxelrod,"Great post, thanks! I still have urls.py files that are a mix of old url() and path() but I'll take some time over the weekend to update them thanks to this!",1525278077.0
,"I didn't see anything wrong with url(), what is the benefit of the change?",1525310811.0
Brandhor,"you have to understand how the http protocol works, when you make  a request the server responds with some headers and then the payload which is the one you pass to HttpResponse, if you open the developers tools in your browser and go to the network tab and select the request you can see the response headers and also the response payload

the payload which is usually html is interpreted by the browser and displayed",1525249157.0
tsqd,"Can you provide the model definitions and the code causing the exception? Also, what version of Django are you using?",1525222475.0
fyeah,"Need more info.

How are you connecting to it? What are you trying to do with your connection?",1525211846.0
TunaBoo,Celery is not supported on windows. You should upgrade your OS.,1525218290.0
jaushman,Your \`\`\`\`QuestionListView is based on django.view.generic.ListView which doesn't allow a POST method...only GET. Take a look at django.views.generic.edit.FormView for handling the form submit.,1525198558.0
tagnydaggart,"Typically, you'll want to use a form to POST data to Django, although, you could also do this with AJAX. I don't know much about your project, but I'm going to assume you have a number of users and you'd like to get a vote from each \(otherwise, you'll end up with vote\-abuse\). So, here's something \(untested!\) that may get you jump\-started.

Essentially, you'll want to represent your QuestionVote with a ModelForm. Also, notice here that I'm assuming that you have `question_id` as part of your url pattern's kwargs. \(This assumption may also be wrong.\) I am also assuming you want to redirect users who successfully vote over to a ""Thank you"" page, with a URL pattern name of 'thank\_you'.

I hope this gets you on your way!

    # models.py
    
    from django.db import models
    from django.contrib.auth import get_user_model
    
    USERACCOUNT = get_user_model()
    
    class Question(models.Model):
        # ...
        pass
    
    
    class QuestionVote(models.Model):
        question = models.ForeignKey('my_module.Question')
        user = models.ForeignKey(USERACCOUNT)
        vote = models.BooleanField(blank=True, default=False)
        # ...
    
    
    # forms.py
    
    from django import forms
    from .models import QuestionVote
    
    
    class QuestionVoteForm(forms.ModelForm):
        question = forms.ModelChoiceField(widget=forms.HiddenInput)
        user = forms.ModelChoiceField(widget=forms.HiddenInput)
    
        class Meta:
            model = QuestionVote
            fields = '__all__'  # note, this is an anti-pattern
    
    
    
    # views.py
    
    from django.contrib.auth.decorators import login_required
    from django.urls import reverse_lazy
    from django.utils.decorators import method_decorator
    from django.views.generic.edit import FormView
    
    from .forms import QuestionVoteForm
    from .models import Question
    
    
    @method_decorator(login_required, name=""dispatch"")
    class QuestionVoteView(FormView):
        form_class = QuestionVoteForm
        template_name = 'my_module/question_vote.html'
        success_url = reverse_lazy('thank_you')  # your ""thank you"" page's url name
    
        def dispatch(self, request, *args, **kwargs):
            """"""
            Grab the Question from the request. 404 if not present or if
            the question doesn't exist.
            """"""
            try:
                question_id = kwargs['question_id']
                self.question = Question.objects.get(pk=question_id)
            except (AttributeError, Question.DoesNotExist,
                    Question.MultipleObjectsReturned):
                # redirect or 404 here
                pass
            return super(QuestionVoteView, self).dispatch(request, *args, **kwargs)
    
        def get_initial(self):
            """"""Override to supply Question and current User.""""""
            return {
                'question': self.question,
                'user': self.request.user,
            }",1525199796.0
pbaehr,"If a Book could only belong to a single Bookstore you would create a foreign key from Book -> Bookstore.

Then, if you need to know which Books are in a Bookstore you could refer to Bookstore.book_set.all().",1525192288.0
NotSelfAware,"You would just redirect to the same URL after successful submission of the form, which would be handled in the view rather than the form. 

If you mean you want to perform an operation on a number of objects created in the form in sequence, you'd need to look into Django Formsets.",1525174885.0
yoongkang,"> However, what I am confused about is when/where to call the full_clean method. The obvious way is to override save() and call it there. However, ModelForm automatically does the same validations when it calls is_valid() for all fields that are included in the form.

That's right, usually something other than the model calls  `full_clean()`. 

> But if I don't override save() or set up a signal on pre_save and I create the objects programmatically via an API, then the validations are not performed.

Could you override the API? Your API could call `full_clean()`, or you could add a method to your model called `validate_and_save()` and have your API call that instead.
",1525150953.0
yen223,"If you're using PostgresQL, you might want to consider using partial unique indexes instead.

Partial unique indexes are like unique indexes that only apply to a subset of the rows, which is exactly what you need.

Always use your database to enforce constraints. It's less vulnerable to race conditions.",1525153622.0
pancakeses,"On mobile, so cant write a query atm, but one thing to note: You're going to want related_name on your foreign key. Reading up on that topic may help you build your query.

Read this whole page, especially the sections about related objects, and you'll find enlightenment: https://docs.djangoproject.com/en/2.0/topics/db/queries/",1525139075.0
supra621,"I'm having trouble following your example. Year is pointing to a League? From the way the data looks, it seems like a Team can only ever play one year.

You might want to try redesigning your class models first, assuming that the example you're using closely resembles your real data that you're working with.

Team would be it's own class; League should probably use Team as the ForeignKey with a field for year:

    class Team(models.Model):
      name = models.TextField(max_length=20)
      record = models.TextField(max_length=10)

    class League(models.Model):
      year = models.IntegerField(max_length=4)
      revenue = models.IntegerField(max_length=5)
      team = models.ForeignKey(Team, on_delete=SET_NULL)

      def __str__(self):
        return u'%s: %s' % (self.year, self.revenue)

Then you can query a few different ways:

    python manage.py shell
    >>>from app.models import *
    >>>t = Team.objects.get(pk=1)
    >>>t.name
    'Some Team Name'
    >>>t.league_set.all()
    <QuerySet [<1997: 40394>, <1999: 84934>, <2010: 37463>]>

""_set"" is a default assigned by Django for a reverse many-to-one manager, so you can call it from the other model instance. That'd be one way of doing it.

Alternatively, you can just use the `League` and filter by foreign key:

    >>>a = League.objects.filter(team=1) #'1' is the id/primary key of the Team
    >>>a
    <QuerySet [<1997: 40394>, <1999: 84934>, <2010: 37463>]>

With either queryset, then you can just use `order_by` to sort the result, and then filter out the top results. Perhaps something like:

    >>>a.order_by('-year')[:3] #returns top three results in descending order
    <QuerySet [<2010: 37463>, <1999: 84934>, <1997: 40394>]>

Note that I didn't actually run these through Django, but I think it'll be close to what you want. Let me know if it doesn't work for you or if I'm off-target with your question.",1525142597.0
athermop,"There's no need to keep them in separate projects.  It's a pointless complication.

Use python-rq or celery.

If you can't use those for some reason:

1. Write your tasks in your project as django management commands.
2. Deploy your project.
3. On server that handles web requests set it up however you normally do.
4. On server that handles your long-running tasks, run your management commands.
5. Later realize you should have used a real task runner like python-rq or celery!",1525098937.0
mroximoron,What's a project? It's all python.. just put the same code on both and run what you need. If you want to share the database you probably want to share the models too.,1525108054.0
garfonzo,"Another option would be to create API endpoints on the main project for the specific resources you want the *other* project to access. Look into [Django Rest Framework](http://www.django-rest-framework.org/) and their [token auth](http://www.django-rest-framework.org/api-guide/authentication/#tokenauthentication) section. Basically, the main project exposes a few endpoints, the secondary project has an account and uses token auth to access resources from the main project's database and do whatever it needs to do with the data. If needed, it can `POST` data back to the main database. 

This allows you to have multiple projects running on separate machines \(if needed\) that all access one database. ",1525098500.0
kennydude,"You can keep things in the same codebase and run them on different servers.

Celery is not attached to the web server, so you can just have two deployment configs, one for web servers and another for background workers.",1525099870.0
Pr0ducer,"At my previous gig, we had one project running on multiple servers: web servers, worker servers, db servers.

Web sends tasks to workers, using Celery and Redis. DB servers used pgpool to manage the various postgres instances, and both web and workers could access db servers.

",1525101836.0
xBBTx,"Adding to the noise of the rest here, got a single project (single git repo) deployed over 4 servers. They communicate through the same database and same redis server, that's it.",1525112417.0
pgeorgiadis,You just need one database. You can have 2 completely different django projects using it. They can also share the same model. The second project (the one for running the background tasks) will just have management commands for these tasks. Run them with cron. Done.,1525118912.0
simonw,"I've built stuff like this in the past (infinite-running background tasks) all in the same codebase by writing a Django management command which does the infinite-running bit. You can deploy the same project to as many servers as you like and have one of those servers run ""./manage.py my_infinite_running_task"" to execute the task.

Set that management command to restart automatically if it quits for some reason (using something like supervisord or Ubuntu upstart) and you're done.",1525122001.0
fyeah,"I'd make a model to build the db, then I'd use management 'inspectdb' to import it into the other app

https://docs.djangoproject.com/en/2.0/howto/legacy-databases/

The locking and how you handle that shit is up to you, which maybe a task-queue would be your best bet rather than forcing yourself into using locking db's",1525127713.0
uberlofas,"I created ssh tunnel from one machine to other and changed database port in setting for oine of them.

Syntax for ssh tunnel: ssh -v -N -L 1234:127.0.0.1:5432 user@myserver.com

Then change database port in django settings to 1234 on same machine you are running a tunnel",1525098443.0
traherom,Celery or Python RQ are good bets for this.,1525087501.0
VegasTamborini,"Django provides a hook to [run code on start up](https://docs.djangoproject.com/en/2.0/ref/applications/#django.apps.AppConfig.ready). You can use this to fork a process that runs continuously and does what you want. 

However, I find that every time I need this functionality the thing I want to achieve is somewhat separate from my Django project. So I usually end up writing a standalone Python script and running it on my server with Linux's Screen thing. It's really simple to use. Just:

`
$ screen -S screen_bot
`
`
$ python bot.py
`
to run your script on a separate 'screen' (called screen_bot) that you can detach from with:
```
$ ctrl+a+d
```
and reattach to with:
```
$ screen -r screen_bot
```
to see it's progress.",1525092562.0
geosoco,"I have a project with this specific issue and I run them as separate python processes that communicate through the REST api. At the moment they just poll as it's several (10ish) bot-like tasks that just run for weeks on end. The polling every 10 seconds or so also allows them to check in with status updates which are logged.

My original goal was to migrate over to Redis or some sort of message queue, but the system load is so low that it doesn't matter and the < 10 seconds wait to respond to commands hasn't been a problem. (People interact with it maybe once every few weeks). In an ideal world where I had a lot of time to dedicate to that, I'd use a real message queue, but that's time I need to spend on other things. ",1525115667.0
xrayfur,"An idea: you can run a bot forever with systemd as an independent Python process and implement an disable/enable switch over the network (securely: secret token, localhost-only, etc).",1525115794.0
zettabyte,"Sounds like your bots are system level services.  Could you run them as systemd, supervisord, etc. processes and have them watch a flag that indicates when they should actually be ""running""?

E.g., run the service 24x7, maintain a flag in a database that indicates if the service is ""on"" or ""off"", that the services use to either keep processing or not.

I suppose you could even issue `systemctl start|stop` calls from inside your web service...

I would agree with the assessment that this isn't the sweet spot for celery / celerybeat.
",1525122631.0
thomasfr,"Maybe take a look at django channels.. I think that asyncio maybe generally is a better fit than threads for what you are doing'(?)..

Personally I would maybe create a separate python-service implemented fully using asyncio which django can talk to via rest/rpc to start/stop/whatever is needed. It depends a lot on how much you want to be able to scale the solution.",1525087152.0
brtt3000,"If it has to stay up forever you run it similar to the gunicorn/uwsgi app that runs your django production server; so usually that will be a process manager like Supervisor or systemd. You'd define a second process with your bot stuff.

Then use a generic queue solution (like a local Redis), or a named python [multiprocessing.connection](https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.connection) to connect and pass messages into it from your django webserver app.

Inside the bot process you can then use threads or multiprocessing for different bots.

Note that this infrastructure looks a lot like a task queue, so you might want to make your bots task/cron oriented and run them with Celery or RQ instead of rolling your own multiprocess gizmo. Or have a hybrid solution with one persistent process to schedule and coordinate work and an existing queue system for the actual bot work tasks.",1525088094.0
dteskera,"<a href=""{% url 'accounts:customerhomepage' %}?value=1"" target=""_blank"">",1525058610.0
fdemmer,"use an ide, like pycharm.",1525038215.0
yee_mon,"You grep through your own sourcecode:

\> rg \-tpy 'import .\*reverse'

Only sort\-of joking.",1525042873.0
Cictani,I need to build something to learn a framework. So maybe you should just start a simple project and extend it more and more.,1525032611.0
AnkurR7,"After going through the Django tutorial go through the tutorial from Django girls community https://tutorial.djangogirls.org/en/.  Very comprehensive tutorial. Always keep the Django documentation bookmarked for reference. After that you can also follow this tutorial from Mozilla https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website. 

Point is develop as many projects as you can.",1525052392.0
PetterOfCats,Read through the class based views sections in the docs. Then the ORM documentation. Strive to know why they recommend ‘skinny views and fat models’. ,1525030791.0
garfonzo,"Start building. Think of a website you'd like to build, something small, and build it. ",1525036931.0
Saskjimbo,"I always commit my .py files that I code in \(eg. [views.py](https://views.py/)\) , but should I also be committing all of my migrations \(i.e. all of the files contained in the image\)? 

thanks!",1525030602.0
bradshjg,"Yes you should, those files allow you to recreate the state of your database schema.",1525031187.0
IonTichy,You can use this file as a starting point: [django ignore](https://github.com/jpadilla/django-project-template/blob/master/.gitignore),1525036352.0
Glycerine,"You should commit any file you've written or required to run your application. So yep all your py files.

The pyc is compiled by the computer on the fly. You don't normally commit those, as the the machine will generate them again.

Here is the Git .gitignore file: https://github.com/github/gitignore/blob/master/Python.gitignore

It displays a good list of files you shouldn't sent to your version control. You'll notice one of the first items is the `__pycache__` folder followed by any py[*] file, so don't commit that folder.

*edit: extension to info",1525045952.0
daredevil82,">But my frontend people want to send a request body because if there are 100 objects which are needed to be deleted, they are not expected to send 100 ids as comma separated string in query parameter.

Why not? There's nothing stopping them from making a list and adding it to the URL before sending out.  Typically, with a DELETE request, there's no body on it, because you're deleting a resource.  

Anyway, with handling the delete, you'll probably have to make your own implementation of the `destroy` method, assuming `BulkModelViewSet` inherits from `ModelViewSet`.  You can see the default implementation at https://github.com/encode/django-rest-framework/blob/master/rest_framework/mixins.py#L87",1525088067.0
dynaken,DELETE doesn't support payload. Should consider using GET parameters instead. ,1525105848.0
realclarkkent,Reporting in...,1525316936.0
haloweenek,"Simplest there is: spambots usually try to fill all the form fields. 

So you add one field(textarea or input not type=“hidden”) and hide it with css. To the form add a validator(empty required) without any error messages on that field. 

When bots will try to auto submit it and you detect data in post/get it’s a bot. ",1525024615.0
Cictani,"Check out this package: [https://djangopackages.org/packages/p/django\-recaptcha/](https://djangopackages.org/packages/p/django-recaptcha/)

But I haven't tested it myself.",1525032491.0
Saskjimbo,"I've got django\-recaptcha==1.3.1 working on my site. Works great. Its not invisible recaptcha, but v2 i believe. Let me know if you have any questions.",1525069251.0
Investisseur,"Saving the image to memory? What? How? Why? Please save it to some file storage or media CDN. Using Boto3 for S3 being the easiest.

Please don’t check for file types like that. Use the Django FileExtensionValidator https://docs.djangoproject.com/en/1.11/ref/validators/#fileextensionvalidator  or the Python standard lib mimetypes module https://docs.python.org/3/library/mimetypes.html",1525017602.0
fdemmer,this is not good advice. there is no need for a separate thumbnail model field. look into easy-thumbnails or sorl-thumbnails.,1525030075.0
Cictani,"I did that some days ago. I did it without any sql and db specific tools \(only for creating database, user etc\).

First while still having mysql as your db with all that data:

    python manage.py dumpdata -o data.json

Then change db settings to postgresql. After that first migrate everything:

    python manage.py migrate

Then load the data:

    python manage.py loaddata data.json

This should be everything you need.",1525020052.0
ramse,django has a management command called dumpdata and loaddata. It'll dump data to a json formatted file (django calls fixtures) and load data will read them back into the database.,1525020054.0
haloweenek,"Dump the data without content types and admin app... there might be some pain if you use content type based fk’s. 

Django management command dumpdata and loaddata . ",1525024215.0
redfeatheredowl,"Thanks all for the comments.

I got the client's mysql dump file. They are not using Django in their end while our live system in using PostgreSQL. What I did with pgloader is I loaded the client's mysql dump file to MySQL then dump it again using the \-\-compatible=postgresql. After dumping the file compatible to postgresql, I loaded that file to mysql and created a new schema for it. I was able to successfully use pgloader to migrate the mysql database to postgresql using these procedures. I am lost on how will I map this databases \( keys, rows, data \) to our existing system which is using PostgreSQL. Deadline is in 3 days, prolly time to update my CV as I don't really know what I need to do :\(",1525047674.0
wasabigeek,"Try https://github.com/pennersr/django-allauth/blob/master/README.rst, there settings to enable just email and password for sign-up/login and it's well maintained.",1525015408.0
Cictani,"Look at: [https://docs.djangoproject.com/en/2.0/topics/auth/customizing/#specifying\-a\-custom\-user\-model](https://docs.djangoproject.com/en/2.0/topics/auth/customizing/#specifying-a-custom-user-model)

There is also a full example with a User identified by email.",1525038066.0
twistedsteel93x,https://github.com/jambonsw/django-improved-user/,1525011796.0
pat_the_brat,https://simpleisbetterthancomplex.com/tutorial/2017/02/18/how-to-create-user-sign-up-view.html maybe?,1525012627.0
basojun,I have similar implementation for my app. Check if this helps. https://www.stackexpressions.com/django-signup-email-password/,1525015767.0
broadsheetvstabloid,"Variables aren’t persistent in Django Views, every time you load the page you start with a clean slate. They are only good for that one instance where you loaded the page in your browser. Basically a view runs, then passes data to the template, then immediately forgets everything.

You will have to get the table again. You could do it a few ways. 

* store the table name in the session on the first page view, then retrieve it on the second

* if setting the tableview changes your url (example: mysite.com/tablename) then you could grab it from the url.",1525007986.0
philgyford,"I don't fully understand your description but, from what I do gather…

I'd use a set of radio buttons on the search form for selecting which table to search, instead of having one submit button per table. This is exactly what radio buttons are for, and it's best to have a single submit button on a form.

Then, your firm has two variables, `q`, and whatever your radio buttons are called e.g. `tableview`. You can then handle `tableview` in the same way you currently do with `q`, to make it persist.

Does that help at all?",1525248824.0
rackmountrambo,"MPTT is not a django specific package, it's a standard way of implementing parent child relationships in a database. It is the best usual way to store something like threaded comments. 

If you are concerned about overhead, use disqus or something. (they are using MPTT and django too)

As for SEO, MPTT and threaded comments packages generally don't handle that functionality, that's pretty much up to you when templating.",1524979355.0
andytwoods,I use https://readthedocs.org/projects/django-comments-xtd/ in production. I've modified it a lot tho to fit my needs. ,1525016160.0
pverma8172,Did you checked the docs for running python on Nginx and using some cache mechanism?,1524983230.0
athermop,"It seems too simple to use a third party package for.

Also, I generally avoid exposing my object id's if they are your typical database incrementing integers as it gives others too much insight into my data. I'd use a dedicated ReferralToken model with a FK to the user and a unique string as the token. ",1524962150.0
quackmeister,"Pro-tip: Rename the route for django admin and/or block access to it except from your IP. I shouldn't be able to get a login screen.

Also, you need to set DEBUG=False in your settings. For reference:
https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/",1524958832.0
comiconomenclaturist,"Looks good. On mobile, there is some white space on either side that is unnecessary. It should be full width IMO. Also the font is very small. Probably fine for desktop, but not on mobile. It could be nice to align the tiles horizontally too as the text and images are mostly the same size. Probably a simple JavaScript library could do this easily enough. But as I say, generally it looks good :)",1524959031.0
TheStrangeSanta,Do you have the source code in github or something like that? I'm a beginner and I would like to see your project to try to learn a little bit more,1524962847.0
TheCh1ef,Very nice look. I guess that it is static site? Except django and html did you use other technologies/programming languages? Keep do good job!,1524997386.0
parthkrishna1611,It's so good. I've recently started learning it and I wanna make websites like yours. Awesome man.,1524968459.0
,[deleted],1524963239.0
air_zac,I like the site very cool and motivating considering that I too am so close to deploying my own website. Also just wanted to let you know when I click on a game to go to a new page the title Kool in the top left changes to cool. Not sure if that was intended. other then that looks nice!,1524971684.0
torvaldl,"Hah, funny, I've used the exact same template as basis for my first django app; a news aggregator for Norwegian news. https://norskenyheter.no/

So obviously; it looks good!",1524985704.0
ImOverThereNow,"The page title changes from KoolWeb to CoolWeb on certain pages.

[https://koolweb.herokuapp.com/22/](https://koolweb.herokuapp.com/22/)",1524999069.0
,"Cool I am also working on Django. Well not exactly just django because I use Django only to build REST API and use React \+ Redux for frontend.

Anyhow, just like other mentioned, rename admin route and set DEBUG to false in production.",1525008333.0
mutonchops,"It's a good start. Django is about a web front end, so I think it could really be enhanced by some front end design considerations. Resposivity and designing a mobile-first experience would really improve things. It's possible to do this relatively easily using twitter's bootstrap framework - and there is a Django extension for bootstrap too! If you start from a design, it will also change what content you want to serve, and may change the structure of your views.py (or equivalent). Still, I don't want to be overly critical - it's a real good start!",1525012823.0
i_amwithnail,"Looks good - you should look at the `truncatewords` templatetag to cut some of those descriptions on the word, rather than midway through a word, which is happening on a few of them. :)  That will also let you set the card containers to a fixed height, which will keep the rows even, as a couple of them are pushed down in the middle by run on lines. ",1525038249.0
winner_godson,"Sorry for my curiosity and I am a noob in django. I'm currently learning django template. 

I just need motivation from you because I really love your webapp.

Was it built entirely on django? ",1524981961.0
VegasTamborini,The easiest way would be a pure JS implementation. Nothing to do with Django.,1524931398.0
Niicodemus,"Django can't directly change data that's already sent to the client, for that you need [Javascript](https://www.w3schools.com/howto/howto_js_countdown.asp).",1524931506.0
TunaBoo,"Make your cart immutable. 

Add one item to an empty cart, get cart id 1.

Add a new item, get cart 2. Start checkout of cart 2.

Customer starts paying for cart 2. Adds item and makes cart 3. Doesn't matter.

Payment happens and cart 2 is paid. Customer reloads. New cart 4 is created which is everything in cart 3 minus the paid items in cart 2.",1524933892.0
m0skit0d3lt4,"Above comment works too, but one way to do it is to crate a “paying” flag for the cart. Once the cart is being payed for, set the cart’s flag to true and check this flag while you add an item to the cart",1524935110.0
rollc_at,"Hello there, fellow Oscar hacker. The framework will freeze the basket directly before proceeding to the payment provider, but this is called from the glue that you often have to add yourself. If doing this empties your basket, it's a bug - perhaps in your own code. Can you create a minimal app that reproduces the issue and share the code?

Which payment provider(s) are you integrating? If it's not the usual bunch like PayPal, Stripe, etc then please also some pointers at their integration docs. I'm sure we can work through it.

Also check out the `django-oscar` group on Google, you might find help there.",1524953321.0
ccb621,"Freezing the basket prevents items from being added to said basket. It is exactly what you want to do before the user clicks the payment button. Here are the steps to follow:

1. Freeze the basket. 
2. Post to Braintree with the value of the frozen basket. 
3. When you get a response from Braintree, you need to supply the final amount to charge. If this amount does not match the previous amount, raise an error. I believe the Braintree API will actually raise an error. ",1524985029.0
i_amwithnail,"Generally i use Ansible to generate/keep the system config up to date.  (your 'adding keys, updating hosts, pull project setup' bit.), and docker-compose to actually run the services (also triggered from ansible.).  Fabric is also useful, and as it's in python, it's maybe a bit more immediately accessible than ansible.  I use ansible every day and still struggle with the formatting and syntax.  (*rolls eyes*) 
(our deployment is more complicated than that as it's a big enterprise system, with a lot of moving parts, but that's the basis). 

",1524910773.0
mejicat,"I've been using Dokku for simple websites and it worked pretty well so far (2 years and counting). It's basically a self-hosted Heroku, so you setup your project a certain way and then you just `git push` to deploy. Worth noting that it supports both Heroku-style buildpacks and Dockerfiles.

It took me a while to get started, especially configuring static assets to be served directly via nginx (why pay more for S3?), but now I have my basic conf that I can reuse to start a project and see it online in 10 minutes or so, with SSL too.",1524917476.0
goosh11,"Beanstalk with django and a postgres db, you can have the base image up and running in about 10 mins and for a small project the free tier will do the job. ",1524919065.0
JeremyTiki,"In my environment I have SaltStack so everything. I merge all my changes into the Master git branch and run one command, Salt pulls the new code in, runs migrations and collectstatic, finally it restart that uWSGI instance. ",1524923626.0
pydanny,"AWS Lambda via Zappa is my current favorite, and I'm the person who founded Cookiecutter Django. If I had the time, I would make Zappa a deployment option for the project.

Don't use Elastic Beanstalk. Please. There's so much tribal knowledge.",1524985208.0
yoongkang,"Not trolling, but has your company considered Heroku or Divio? These companies exist because deployment and maintaining infrastructure is a pain.",1524918949.0
tagnydaggart,"For smaller projects (websites). I deploy using git and git-hooks. It takes me about 45 mins to set it up on a host initially and future deployments are essentially free after that. Just push code to you ‘hub’. I use this in Digital Ocean droplets regularly.

See: http://joemaller.com/990/a-web-focused-git-workflow/

This method probably wouldn’t be suitable for CI/automated testing workflows, but who knows!",1524934404.0
lzantal,"It takes me 10min max deploying to linode. What’s your workflow? 2 hours seems a lot even with installing server os each time. 
Mines is(with some minor steps left out):
- Create new user for project on Ubuntu 
- Login as that user and pull down project 
- Create virtualenv for project
- Adjust my apache2 vhost file for project dirs and python path
- Enable new vhost
- Reload apache2
- Set server IP for domain or subdomain
  
That’s it. I have bash scripts to do most of this including creating the database. ",1524934745.0
kkert,"Every time i tried Beanstalk, it's been a pain. But i highly recommend testing out AWS CodeDeploy instead, you get a whole lot of control over things.

Also, try out **AWS CodeStar**, if you want heroku-level simplicity",1524935419.0
locusofself,"Ansible playbook that checks out project from Gitlab, sets up virtualenv, gunicorn, nginx and letsencrypt.",1524945173.0
chris-nagora,"Why don’t you try DigitalOcean Django droplet, it’s a ready to use django vps and you only have to set your files db connection",1524916355.0
NotSelfAware,"Heroku deployments are about as painless as can be after the initial setup. I have a Heroku Django template I wrote myself that I use for personal projects, and it takes about 10 minutes from the `django-admin.py startproject` command to actually having a deployed website. (I only deploy that early for personal projects...)",1524937768.0
kurashu89,"New as in brand new?

For me, at work, spinning up a brand new python web service is me setting up CI builds, writing a small deploy script and tossing a ticket over the wall to devops asking for dns and port resolution. Sometimes I need a new box. All the heavy lifting is done by docker (and ergo me or who ever is writing the service, but if it's a python service its probably me) 

In my spare time, I have docker swarm spun up in my network so I write a stack file (docker compose + some other gunk), build and push images to my local repo, set up secrets and configs in portainer and run the stack deploy. Traefik handles pushing traffic to the service.

I keep telling myself I'll automate this but I don't because I'm lazy and I'm more in the business of building libraries in my free time than apps. ",1524940704.0
duppyconqueror81,Feel your pain. I deploy from scratch probably every 2-3 months.  Just enough time for me to forget and hit the same bugs everytime.,1524946329.0
Rorixrebel,Ansible all the way. One playbook to deploy everything.,1524950016.0
dikamilo,Ansible playboks with server provision scripts and deploy scripts.,1524951254.0
chris-nagora,Amd how much traffic you have? I think you have more specs than necessary ,1524973004.0
_drFaust,"Existing kubernetes infrastructure. Just a matter of adding a new yml config and running a kubectl create cmd. The yml config specifies the aws box type and resources to use, along with the image pulling policy. After that it’s just going to redeploy when that image changes from your commits that pass CI. I know I made that sound simple and it is after you spend like two months of fiddling with a k8s cluster to suit your needs.",1524976288.0
boatsnbros,"Set up a 'snapshot' on Digital Ocean w/ django 2.0, 2x postgres db's \(dev/prod\) with credentials, gunicorn, nginx, and a single app called 'app' with static \(templates, img, style.css\) files set up in it. Takes about 2 mins to deploy one, then I push it to an empty github repo and I am good to go. This has helped out a couple of times when I want to MVP something in an afternoon.",1525734018.0
iknowdatruth,"You kinda have to apply migrations automatically if you want CI/CD. We have a deploy.sh script that pulls the latest app image from docker hub, backs up the database, stops the app container, runs migrations, then restarts the app container. You can trigger this script from your CI tool, on a set schedule via cron, or manually- we do a combination of all those depending on the project. If you don't use docker, the pull step can be from GitHub instead.

Backing up the database before migrations gives us confidence that if something goes wrong we can fix it or revert to the previous version with the corresponding data/schema. A solid test suite ensures mistakes get caught well before being deployed.

This works well for our single-server apps. A slightly different strategy is probably necessary when using swarm/kubes/other fleet orchestration tools and many app servers sharing a single db. But the same principles apply.

I'm curious how other people handle this though- I'm still figuring out all this devops stuff.",1524909497.0
sPENKMAn,"I’ve only got a couple of small projects and I’m using Django’s builtin migrations for those. It’s has a learning curve in it self. I’m at the point were I can move data across over relations and apps (more luck than knowledge at this point) by experimenting a lot.

Although I could have done the same manually in much less time I’m committed to the “Django way” as far as I can / seems practical.",1524907251.0
yen223,"Where I work, we have semi-automated migrations as part of our deployment process. The manual part is in deciding whether a migration is to be run before or after the webservers have been upgraded. 

A large part of your migration strategy is going to depend on two things:

1. Can you stomach downtime, and if so, how much? Having downtime will make migrations proceed a lot smoother, but not every company can afford it. 
2. Is the migration going to lock parts of your databade? There are plenty of seemingly-innocuous operations that requires exclusive locks on parts of the database. For example: adding a non-nullable column to a large table. In postgresql, this will lock the table from writes for a significant amount of time, causing lots of transaction timeouts and very frustrated users. 
In cases like these, you will have to do things manually.  ",1524926269.0
dirtybutter,"it sounds more like a reading comprehension problem. both of the projects you name list multiple resources for support.  stackoverflow is a resource for a specific kind of problem. if you try to use it in a way that it's not intended, of course your questions will get closed promptly. you have to pick the right tool for the job

also, ""I use wordpress because i don't like stackoverflow"" is extremely amusing reasoning",1524901055.0
sPENKMAn,"You start of by demeaning a much used website, call others childish and you expect people to invest their (free) time in you?

If you want to discuss thing you should maybe work a bit on how you start your argument because this is not a very inviting way. It’s not appealing to spend time in a response as you seem not open for other points of view from the start.",1524905017.0
tomdyson,"I'm one of the people who decided to focus community support for Wagtail on StackOverflow. While we also provide support by Slack and Google Groups, we prefer StackOverflow because it helps future users find answers to common questions. Before we made the change, we carried out an informal poll on Twitter, with 88% of the 104 respondents voting for StackOverflow:

https://twitter.com/WagtailCMS/status/801384753589080064

The criticisms I've seen about StackOverflow refer to hostile and unfriendly behaviour. I'm sure there are many examples of this across the massive site, but in my experience questions about Wagtail (and Django in general) receive civil, friendly, helpful responses.

How do you think Django CMS projects should provide support?",1524913190.0
kiwiheretic,Sorry for cryptic message but I think my messages are being targetted by automoderators for censorship.  Here is the link in question.  https://www.sitepoint.com/community/t/why-i-refuse-to-use-stackoverflow/38483/4,1524883740.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1524882315.0
tomdyson,"I'm from Torchbox. In case it helps, the site you reference is open source. 

The Streamfield configuration for blog posts can be found at

https://github.com/torchbox/wagtail-torchbox/blob/master/tbx/core/models.py#L105

The model definition is at

https://github.com/torchbox/wagtail-torchbox/blob/master/tbx/core/models.py#L863

and here's a [screenshot](https://i.imgur.com/3w3jrJr.png) of (some of) the admin UI for this page.

Embarrassingly, torchbox.com isn't a terribly good example of a Wagtail site. You might find this Github search a useful starting point for other open source Wagtail sites:

https://github.com/search?o=desc&q=wagtail&s=updated&type=Repositories",1524917065.0
cleancole,Read the docs about Streamfields. Makes everything way more flexible and you don't have to abstract the page model as much for your site map.,1524876225.0
ccb621,Why do you want to support JWT authentication if you don’t have an API?,1524870170.0
CKreuzberger,Part 2: https://www.youtube.com/watch?v=pStG1cmXzZo,1524862868.0
PM_UR_FRUIT_GARNISH,Thanks! Really enjoyed this video and your explanation.,1524864086.0
Vinhii,Good video! Thank you!,1524935894.0
fdemmer,https://docs.djangoproject.com/en/2.0/howto/static-files/deployment/,1524858857.0
ccb621,"Store the files in block storage, not on the VM. This will allow you to scale to multiple machines, if necessary. ",1524870885.0
ccb621,What is the harm in someone scraping your site? Are he listings exclusive?,1524844906.0
xr09,"Create a killer rest API, charge for it's use and profit?


Edit: 

If they keep bugging then [this](https://webscraping.com/blog/How-to-protect-your-data/)",1524846289.0
fyeah,"Is it just search engines scraping your site, or do you think it's someone maliciously stealing information from you?  Is the information you have worth protecting?  As-in, are you collecting a fee and someone else accessing the information would be detrimental to your business?  Are you trying to drive traffic to your website and don't want to see the listings elsewhere?  If so, is there a good reason?

Do you really want to risk accidentally blocking a legitimate user who is browsing your site to stop scrapers, if there is really no consequence to them having the information, which I would expect is public information?

What browser-agent do they claim to be using?  Can you block that?

The best way, I think, is to implement page-loading techniques which require a proper rendering (i.e. Selenium) which may cause enough of a headache for the scraper that they give-up.  But all of this really begs the question:  Why is stopping them really necessary?",1524845069.0
defmacro-jam,Don't ban. Offer an API.  Charge for it.  And severely rate limit non-api use.,1524852105.0
apreche,"If you are posting the information publicly, then it is public information.

If it is somehow sensitive information that shouldn't be available to the public, then make a login system and require users to login in order to get the data. Then just delete/ban/block any accounts that scrape.",1524849048.0
Talked10101,"If someone wants to scrape your site, there is literally nothing you can do if they are willing to go to extremes.


My recommendation would be to use invisible Google recaptcha if possible. That will stop the vast majority of scrapers, but there exist a couple of Russian APIs that can still resolve Google recaptcha. Cloudflare and blocking at an ASN level might be a decent bet, it's highly likely that his proxies are from the same ASN.",1524849548.0
Lance_E_T_Compte,"There are commercial tools that you can embed that detect if Selenium is driving, and may also use other techniques to guess if it's a human clicking or a robot (for example, the button is clicked without the mouse moving there).",1524848020.0
liquidpele,You can’t stop it you can only slow it down or poison it.  Poisoning means basically detecting it and then giving it bogus data.,1524846769.0
xela321,What about periodically displaying a CAPTCHA?,1524848522.0
booooomba,Nothing :-(,1524844738.0
BuyHighExpire,"Where is your instance deployed? Also, are the ips in the same subnet or same ip every time?  If so, you can block on a network level. ",1524845319.0
GHDpro,"How much data are they scraping how fast (request/second)?

It's a bit of work and I'm not entirely sure if it will solve you problem, but you could try Nginx rate limiting (https://www.nginx.com/blog/rate-limiting-nginx/). 

For extra effect write custom fail2ban rules so that if the ""rate limited"" warning comes up more than a few times in the nginx logs you can block them at firewall level.

This is how I stopped a few bots from hitting a forum I operate.

But if the scraper is scraping more slowly (like 1 page / minute) then this trick won't work. The same if he keeps rotating/adding more IP addresses.",1524859508.0
iconfinder,If you are using Nginx you can install rate limiting. Rate limiting should happen at that level as a first step.,1524859584.0
oliw,"Somebody wants your data. Rather than just try to block it, try to coerce their behaviour to something that suits you.

Step 0: Advertise proper access. JSON dumps, streaming APIs, whatever. And put a price on it if you're otherwise unhappy (or unable) to give the data away. Make sure your website has a terms of service making it very explicit what is acceptable use.  

Step 1 through 10: Fuck with them.

 - Rate limit access
 - Change the HTML structure
 - Inject bad data (hidden by JS, etc)
 - Rinse and repeat

Step 11: Go nuclear. Find out where it's being used (inject unique phrases and search) and go after them. If it's your content and their use is well outside fair use, you have DMCA (et al). If it's more subtle than copyright, you have a longer, more expensive fight... But giving them the choice between a legal option and a lawsuit might be enough.  ",1524939762.0
i_like_trains_a_lot1,"You have a few options there:

- You should have a terms and conditions that explicitly prohibits web scraping.
- https://www.whois.com/whois/ - enter the IPs there and contact the ISP provider, they should have a special email address for cases like these. Point them to the ip address that causes trouble and they should contact the client behind it and fix it.
- add rate limiting to your application (http://django-ratelimit.readthedocs.io/en/v1.1.0/ - just the first thing I stumbled upon and looks pretty easy to use).

I am sure there are other options too, best of luck dealing with that bot.",1524987810.0
esantoro,"Warning: these are just some thoughts, I haven't really tried.

If you have a front-end webserver (like nginx or apache) there should be a rate-limiting module. 

You might want to impose an upper bound of request/minute on a per-session basis. Some of these modules can be made aware of application-level sessions, so that you don't kill the service for a whole company sharing the same ip.",1524848513.0
zettabyte,"1) Determine your heuristic for identifying a ""bot"".

2) When an IP address is determined to be a bot, render a page with a Captcha that says, ""We think you're a bot.  If you're not, prove it.""

3) Whitelist the IP for a certain amount of time if the captcha is solved.
",1524852627.0
Poromenos,"I'm not sure you can, and definitely not for longer than a few seconds, because nginx is going to just terminate the connection. You can either do Celery and poll or use django-channels and a websocket.",1524844074.0
booooomba,Websockets it is for you. AFAIK your Webserver is just gonna close the connection after a few(?) seconds. ,1524844219.0
jonykalavera,You can implement the data processing as a celery task and wait for it to finish in the view. But that wouldn't be a significant performance improvement. You could also inmediately return a taskid to the client to be able to check the status. But that would require polling. You could also use websockets to make the client able to listen to the event form the server. But that requieres implementing a websockets server. So you have options. You just need to decide which fits your case. Is there room for optimization of the queries required for the csv generation ? ,1524844644.0
apreche,"There are better solutions. Email the person the CSV when it is done. Give them a link to a page to come back to later that will have a download link on it when the CSV becomes available. Put the CSV directly into a place like DropBox or Google Drive where they can get it when it's ready. I could think of more, but you get the idea.",1524863405.0
AlexFromOmaha,"General best practice is to not keep an HTTP connection open for a long time. Networks are not as reliable in the wild as they are when you're testing on your local setup. To that end, creating an AJAX polling loop of some kind to see if the job is done is almost certainly what you want.

If it's not what you want, then from a Django perspective, you just want to avoid returning. Gunicorn has a worker pool for this reason. See [here](https://stackoverflow.com/questions/22399507/preventing-slow-queries-from-exausting-gunicorn-worker-pool) if that's causing you performance issues other than a CPU bottleneck.",1524844359.0
liquidpele,"Have a standalone python script that does the work, kick it off using the subprocess module or whatever.  You'll have to make a way to know if it fails/dies before completion though (stuff that celery gives you for free, albeit with a lot of overhead).  ",1524844433.0
haloweenek,"Dropping file for processing and retrieving the result later is the way to go. 

Long pooling is not the best idea here...

When you post the file you save it to dB with a job id. Forward client to result grab page with this id.

Celery mills the file and updates dB when finished. 

Client can refresh the page in a interval and grab the result when ready.",1524844670.0
blacwidonsfw,"The way I would do this...

1.  On client, when user hits submit, an Ajax function calls a celery task to be queued to do the processing and file generation.  

2.  The above trigger causes a second Ajax function to poll your celery task, and upon completion, returns some data to the client UI.


Between 1 and 2 you could load a message or even loading icon gif so the user knows it's doing work and has to wait for response. 

",1524847412.0
booooomba,"I don't understand what the problem is. Why don't you just use the Python wrapper? You wont be needing the GUI anyways?!?

Are there no pure Python equivalents? ",1524851015.0
oliw,"2.0.

Some people might suggest 1.11 because 2.0 isn't a long term support version. That's true and means  it'll stop geting security updates in April 2019. Before that point you'll want to upgrade to 2.1 and then 2.2 (probably LTS) to make sure your sites are secure. Upgrading isn't usually hard it's just inconvenient. You have to read the release notes and usually make some changes to your code to stay compatible.

But that's another reason to learn on a non-LTS. Get into mindset of maintaining your environment. Set-and-forget has no place on the internet because even LTS releases expire. 1.11 only buys you another year.

Besides, the future is 2.x... So why start off an additional step back?",1524827109.0
Poromenos,"2.0 for sure. Updates aren't that bad when you're starting our, and you'll have a much easier time upgrading from 2.0 to the next LTS than from 1.11.",1524829251.0
pat_the_brat,"Second 2.0. You'll be stuck upgrading anyway, and it'll be easier from 2.0->2.1->2.2 than 1.11->2.2, as there should be no incompatible changes.

1.11->2.2 shouldn't necessarily be hard... but still, why add even a bit more extra work.",1524827392.0
hoijean,"2.0, I find version 2 too simple  especially with url routing, no regular expression needed",1524841204.0
Pr0ducer,Start with current LTS release. ,1524841556.0
dikamilo,"\- 56 queries is a lot, utilize select\_related and prefetch in you queries

\- use cache for you queries and templates

\- most of the time is probably taken by rendering data",1524820944.0
brtt3000,"11.62 ms for 56 queries is not a huge part of those 2038 ms total .

so its not queries that is the problem (even though I'd see if it is N+1 you can fix).

how accurate is the 2038 ms? isn't it something else like slow dev server, dev toolbar penalty etc?",1524819179.0
mistaekNot,sqlite is not meant to be used in production,1524818781.0
amangarg078,"You got the error because you cannot join two models that don't have any kind of relation. To join `PlayerData`, you need to have a foreign key to `Player`. Similarly, for further joins, you need to declare a relationship between models. For ManyToMany relations, you can take a look into `prefetch_related()`.

Take a look at the official doc for [select\_related\(\)](https://docs.djangoproject.com/en/2.0/ref/models/querysets/#select-related) and [prefetch\_related\(\)](https://docs.djangoproject.com/en/2.0/ref/models/querysets/#prefetch-related). ",1524813348.0
Deskinspin,`Stats.objects.filter(player_id=123).select_related('player_id__other_player_id')`,1524825108.0
hokahokahey,"Just in case you're feeling bad about having to check on how things work all the time see [this Twitter post](https://twitter.com/jacobian/status/988515858887491584) from Jacob Kaplan-Moss.

",1524761243.0
Poromenos,"I've been writing Django since 2005ish, back before 0.96. Still look at the docs daily, why wouldn't I? The important part is knowing how to structure the project on a high level, not how to call send_mail. ",1524770134.0
eighthpence,"I've been doing Django for around 7 years. Still look up simple stuff daily, just to make sure.",1524765651.0
rascaldev,"It's not just a measure of how many projects but how long you spend dealing with the Django-specific pieces. When it comes down to it, core Django isn't really that difficult to understand, it just might be different than what you're used to if you're coming from a background where concepts like MVC are optional or not used at all.

In my case, it was probably 3-4 projects, with the last two being substantive projects for an employer.",1524759559.0
i_like_trains_a_lot1,"The point is to know that certain features exist, not to memorize the exact syntax and stuff like that, because API changes over time. You have to be comfortable with the high-level stuff and do the low level stuff with the aid of documentation and stack overflow.",1524811590.0
CaffeinatedT,Ive developed enterprise projects used by 1000 plus people sending hundreds of thousands of events daily and i still look at the docs daily. ,1524808656.0
george-silva,"None. While im developing i constantly lookup documentation.

Why? Because then i dont HAVE TO remember tinyest details and Focus on other important things.",1524824785.0
bewakes,"I had to do the poll app in django documentation 3 times to get feel of urls, views and models and overall project structure in django. It was around 4 years ago.",1524817447.0
booooomba,"You can have a C/C++ programm that calls Python. But it doesn't make any sense at all. If you need absolute high speed, then write it in C++/Go/Rust directly.",1524750068.0
ducdetronquito,Could you detailed what was used to compile this Django project ? Oo,1524752212.0
mhurron,This is usually done to hide the python code in a project that is not Open Source. There is a minor performance improvement the first time the file is read/run.,1524754219.0
clonebottle,"Edit: I said mine, but it's not exactly mine

It's a fork of a project called djeddit.

The project had a lot of major Cross Site Request Forgery thingies which I fixed and got a designer to design my FrontEnd.

I made some pull requests and got accepted, but then the author took 30 days sometimes to accept the pull requests and the CSRF one didn't get accepted.

The author seems to not have time to maintain the project.

I haven't yet released the source for my Fork since it might be a mess and I don't know when I am or if I am.

Edit: Posted different versions on Design Critique https://www.reddit.com/r/design_critiques/comments/8f93w5/my_reddit_clone_project_with_different_designs_by/",1524745468.0
clonebottle,"Here's a few Gifs

https://imgur.com/RnxHyxl

https://imgur.com/25F31r4

Unable to get upvote to work in first GIF cos, can't upvote self post.",1524746080.0
svbackend,"Don't want to be rude, but this design looks like from ~2012, I think you can improve it a lot",1524747338.0
stayrare,Would you mind sharing your upvote/downvotes app? I'm looking into it for my own app and need a few examples 😁,1524749297.0
daken15,37 Queries could be a problem ,1524755637.0
spookylukey,"Note there is always a deprecation path for these kinds of changes.

The reasons for them are:

* that cruft *inevitably* accumulates in a project like Django.
* we add new features which means different organisation now makes sense.

The alternative is that we never fix anything, we just keep the cruft hanging around. The result would be that the developer using Django gets something with the beauty and elegance of PHP, and the Django core devs would have to constantly work with rubbish, meaning they introduce more bugs, get demotivated etc. 

For example, take URLs. This is how they looked in 1.1:

https://web.archive.org/web/20100301055759/http://docs.djangoproject.com/en/1.1/topics/http/urls/#example

And this is how they look now:

https://docs.djangoproject.com/en/2.0/topics/http/urls/#example

There are *many* benefits to the new version. Everything is simpler, shorter, and integrates better with static analysis tools and autocompletion etc. The imports make far more sense (what was 'conf' doing in there before?). What on earth was that `patterns('', ` thing for? Why all the strings? And cryptic regex syntax by default?

This kind of improvement only happens because we take the philosophy that Django should get better over time, not worse, and are willing to make people pay a small price for this. I'm afraid in the world of webdev you have to keep updating things if you want to stop your project from fossilizing.
",1524752028.0
tomdyson,"In response to your point about Wagtail, my colleague wrote this:

> At this point it might seem like this is a rather minor change that doesn't justify the hassle of updating, but it all goes towards making Wagtail development as pleasant as it can be, and we believe it's better to get this chore out of the way sooner rather than later to make the project better for everyone. After all, we hope that there'll be an order of magnitude more users of Wagtail 3.0 than 2.0!

https://wagtail.io/blog/upgrading-to-wagtail-2/",1524773852.0
fdemmer,"congratulations on your codebase, if changing imports is your worst problem.",1524832441.0
FeatheryAsshole,protip: don't update existing projects to new major versions unless the new one is an LTS release.,1524742263.0
booooomba,"I agree about the imports, but third-party apps is a different story. I always stick to using as few third-party plugins as possible.",1524742969.0
athermop,"> Does Laravel and other MVC/MTV frameworks do this too.

Only good frameworks do it.

Imagine you have a toolbox with different compartments for your tools.  You start out with 5 tools and you organize them in a way that makes sense to you.

What do you do when you get 10 tools?  100 tools?",1524757092.0
calabresi,"Sounds cliché but I usually start with html5boilerplate and bootstrap. Super easy and I can get something up and running quickly. 

I’d be interested in hearing alternatives though since serious designers tend to frown on OOB bootstrap these days  ",1524714124.0
ccb621,"Learn design. Find other sub-Reddits, classes, etc. ",1524714112.0
Brachamul,"So there are at least 3 client-facing skillsets :

- UX : thinking about the steps users need to take to achieve their goals. A clean and straight-to-the-point UX is the basis of any good site. Bad UX sites tend to be cluttered with features that aren't useful, or with processes that are lengthy and complicated. For UX design, pen and paper is pretty ideal.

* UI : arguable a part of UX, but I'm splitting it for practicality. UI is the look of your site, where you give it some sort of identity. Typically work is done in photoshop, but some designers also work directly in CSS/HTML. The end result is ""what the site should look like"".

* Front-end code : with HTML, CSS and either back-end templating with traditional Django Templates or JS templating with React or Vue. This is typically just converting the UI into working code. It's what you're doing now.

Some businesses/activities are heavily reliant on design (dating sites, clothes shopping sites, ...). Some less so (reddit, ...). All activities can benefit at least slightly from good design. The django docs are a good example. They are simple but well designed.

**If you're building something that is not heavily design-dependant**, then use a framework and customize it as little as possible. Bootstrap still works wonders for that use case.

**If you're building something that needs a strong visual identity**... you need a designer to help you out. You can then custom-code your HTML and CSS, maybe using some guidelines like BEM.",1524725808.0
cmothebean,You could try webflow. ,1524742903.0
alexthelyon,"For layout, have a look at dragonjs, it's a script that lets you (temporarily) move elements to get an idea what different layouts work.

https://github.com/tomhodgins/dragon",1524751923.0
Im_Cynical,"This is a very good question. I’m in your boat, a lot of backend work done and now focusing on the front end now.

I chose to split my app, using Flask as an API and using ReactJS with Semantic UI on the front. Using Django is very easy though a bit outdated and limited compared to what folks are trending toward these days. 

As for design tips I’m just starting out, but as others have mentioned, doing a boilerplate site. Following the workflow from a users perspective, cleaning the flow as you go along. It’s been extremely iterative and a bit tedious. I don’t know your app but building “what does it look like this way?”, coding it, testing it, and then realizing it’s not great, losing all that work, redesigning as you go along.

Once you have a good flow down it’s just a matter of a lot of CSS work. For color schemes and design layouts I drew inspiration from competitors or sites in the same general area as me. Not sure if that  helps but that’s been my approach

For your edit, look at Semantic UI, Material UI or even bootstrap. They allow quick building of elements",1524716098.0
vipakilla,"Looks good. Tbh I reckon the UI looks great on mobile at least. :)
",1524719260.0
clerosvaldo,Definitely consider doing it for alternatives based on Free Software instead. Discord is a freedom and privacy threat to its users.,1524749024.0
Fun2badult,What’s your programming background? Did you know a different language prior to starting,1524720410.0
Neorlin,"Try to add endless scrolling to the Browse. I think it will add so much more flavor to the website. Other than that, GJ!",1524728796.0
mildata,"Looks awesome, great job!",1524734198.0
xBBTx,"Looks good, I like how it stays true to Discords own themeing/styling.

When logging in, the OAUTH flow is asking for my e-mail address. Is there any way to not need that? I'm okay with giving out my discord username",1524749537.0
thebatlab,"This seems reasonable enough as a model representation. One thing I would note is that your `related_name` values are inaccurate. The related name is to specify how to get back to the original model from the foreign key model.

So for `floor` in `Room`, the `related_name` would be better as 'rooms', and then from a `Floor` object, you can access all its rooms with `Floor.rooms.all()`",1524693651.0
jabbrwocky,"try /r/djangolearning/. that said, you might be over engineering -- i'd get rid of Floor entirely, make floor a CharField on Room (i'm guessing there are basement/sub-basement/split-level options that make IntegerField difficult), and get rid of number (since it can be appended to a room name, and prevents weird cases like Room.name=""Room 101"", Room.number=102).",1524693748.0
mothzilla,"I think you've over-engineered it a bit. Text fields for each ""row"" of the location seem like they've be enough.

Building might be a choice field, since I'd guess there are a known set of buildings, and a building must always be provided.",1524693788.0
apono4life,"If you think about it building have rooms. Rooms are 9 out of 10 times numbered with the first number showing the “floor”. For example, room 200 is likely on the second floor of the building.   I would lean toward having the relationship be building to room. As for the form I would be sure to have them be choices. ",1524704942.0
synw_,"Many comments are about the legitimate question of over-engineering (because ""premature optimization is the root of all evil""). For what it worth my general recommendation is do what you need right now and do not implement anything that you think would be useful in the future. You will thank yourself when it will be time to maintain the stuff. Specially in our field it is unreasonable to presume of the future",1524753415.0
spookylukey,"This looks good to me. I would go for making your model as tight as possible (like you have done, with tables and FKs for each component), to limit the number of things that can go wrong with user entry. A system is only as good as the quality of data in it. If you make it too loose (e.g. location is a free text field), when you come to try to do useful things later, you'll find that there are 300 ways to spell the same location, and half of them are ambiguous. You can always make your data model looser or more powerful later, but you cannot make it tighter (unless you want to migrate a lot of data by hand...).

With your model, you can also leverage things like 'unique_together' [docs](https://docs.djangoproject.com/en/2.0/ref/models/options/#unique-together) to ensure everything is as tight as it can be. e.g. for Floor it should include `(('building', 'number'), ('building', 'name'))` to ensure that within a building, each floor has a unique name and number.

Your interface does not have to match one-to-one with your model, though - for example, for location, rather than a set of select boxes, you could have an autocomplete widget that can do some kind of fuzzy matching on input, but only allows exact matches (building/floor/room) to be selected. Make the design of your interface be human oriented, and a separate thing from the design of your schema. (Obviously they have to match in some way, but don't let your schema simple dictate the simplest possible interface just because it is easier).

To give another example, if you have a REST frontend, you could have a 'location' endpoint which returns a list of locations, each of which is a building/floor/room triplet in some form. This might be a lot more convenient than 3 endpoints, one for building/floor/room, and depending on the amount of data, might be much faster too.

You might also want to consider locations that are not rooms. To cater for this (which you should only do if you needed to), you could make a more generic 'Location' model, and give 'Room' a OneToOne fields to it. You can then add other location types (e.g. 'Garden') which would also have a OneToOne with Location. Your 'Incident' model would then link to the Location model, not to Room. But **don't** do this until you need to! You can always migrate to this later (a bit of work, but not too hard). I'm adding it here so that you are not tempted to go with a free text field for 'location' ""to keep it flexible"" - you can add the flexibility later in other ways that don't compromise on data integrity.",1524852061.0
porksmash,"Django is a fine framework to work with, but the choice should really be based on what you want to learn or gain experience with. ",1524680247.0
comiconomenclaturist,Maybe think about what payment backend you want to use: PayPal? Stripe?,1524682406.0
naught-me,"Two Scoops is a good book, but it's not meant to be a beginner book.

The most common advice is to just use the documentation (and the getting started guide in it).",1524676901.0
Eimus,Official tutorial is usually recommended first,1524676905.0
elingeniero,"Don't get any books, you don't need them. The official tutorial is excellent and guaranteed to be up-to-date.

https://docs.djangoproject.com/en/2.0/intro/tutorial01/

In general the official docs are fantastic and I haven't seen any example where a non-official explanation is better than the official one. Only turn to non-official resources if the official ones don't explain things in a way that makes sense to you; or if you need information about non-Django things.

Have fun!",1524676952.0
PetterOfCats,"This topic comes up so often, it should be a sidebar link. I too agree that the docs are amazing and that new folks should RTFM, but we should do a better job describing how/why they're so good. For me, if I cannot find what Im attempting within the docs (or a handy ?? on what ever class Im using), Im usually creating an anti-pattern in my application and should re-think my implementation.",1524682958.0
Mjjjokes,Official django tutorial was all I needed,1524678285.0
ic_97,"To get started i would say go and read the official documentation and follow their tutorial on making the polls app.
After you complete that think about what site you want to make and what different things you might need to learn or require and then either find some good tutorials about them or ask questions online. We also have a good slack group for beginners which would be more than helpful to answer your queries.",1524678748.0
heo5981,"It's not clear if you're familiar with Python already, if you're not, start only with it. Learn on Codecademy and similar websites, make some small projects in Python and just after getting familiar with at least the basic, pursue Django.

For learning Django, I always recommend [MDN Docs tutorial](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/) but it's fairly in depth so, do it after the official tutorial.",1524698139.0
TheStrangeSanta,"By the way, join the djangolearning subredit, it will be better to expose your future questions then, when you're learning",1524698204.0
digitaldreamer,"Over the years I've had to learn about a dozen languages and countless frameworks for work and/or RND. Here's what I do to kick start getting into a new stack. I create either a to-do list or blog depending on my mood. It's my ""hello world"" version to app development.

This should be simple but gives me hands on exposure to routing, hooking up the MVC, sessions, user and profiles, form handling, authorization/authentication, asset management etc... in a really stripped down and streamlined way.

At this point I can pull this together in a few days and it gives me a great feel for the major components.

For Django you don't need any books. Start by going through the tutorial. It won't make much sense at first but just get a feel for what's there. After that just start working on your project. You'll then refer back to the tutorial and examples to piece together your components and over time everything will start to make a lot more sense.

That's at least what has worked for me.",1524702666.0
gomoboo,I started with the official tutorial (which is quite extensive) and then jumped into my project from there. I now use Two Scoops as a best-practices reference whenever I start working on a new component and read through chapters in my spare time. It's been good for internalizing efficient ways to write Django applications.,1524706289.0
dorsal_morsel,"Would be helpful if you posted your code, but try using the full path to the executable. ",1524664902.0
oliw,"You have to remember that the environment your webserver runs Django in is very different from you running `runserver`. For example, it probably doesn't have your user's `$PATH`, it might not be able to find `gphoto2` so use a full path.

And it's being run as the same user that runs the webserver here, so might not have permission to do what you're asking. Looks like a certain amount of RPC there. If it's interating with an application your user controls, that might be a blocker. You can test this with:

    sudo -u whomever_your_server_runs_as gphoto2 --trigger-capture

And see what blows up.",1524667196.0
JPguitar,"Thank you for your help! after running which gphoto2, and chmod \+ s to /user/bin/gphoto2 everything works!",1524674643.0
oliw,"Don't use structural CSS on fields. Even if it did render through, it's likely going to be in the wrong place, even with `wrapper_css`. You also don't have a `div.row`.

So I'd suggest, something like:

    Div(
        Div('firstName', css_class=""col-xl-6""),
        Div('lastName', css_class=""col-xl-6""),
        css_class=""col-xl-6""
    )
",1524666906.0
YellowSharkMT,"Your form code works great for me, I am indeed seeing the `col-xl-6` class on those fields. One thing you haven't shared is the code in your template, though. Here's what I'm using:

    {% extends ""base.html"" %}
    {% load crispy_forms_tags %}

    {% block main %}
      {% crispy form %}
    {% endblock %}

Is it possible that you're just outputting the form using the `{{ form }}` syntax? (That won't work of course, gotta use the `crispy` tag.)",1524667104.0
vitogeek,"Did you define the schema for that model? 

You have to define schemas for anything/everything you want so that the graphene knows which fields to include in the results.

At least that's how it used to work a year ago, haven't used graphql in awhile.",1524660165.0
i_like_trains_a_lot1,"Did you define a schema for the model that is referenced by the foreign key? If not, that might be the issue.",1524726935.0
rayendumeldust,Mozilla has a tutorial where they implement a library. https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django,1524650927.0
kaoussi,simpleisbetterthancomplex.com/series/2017/09/11/a-complete-beginners-guide-to-django-part-2.html,1524648361.0
panupatc,"Not sure if this counts, it uses Django.

https://www.obeythetestinggoat.com",1524653555.0
mdmacidmthcoke,"The official tutorial from Django's docs is without a doubt the most recommend and best Django tutorial, and it will give you the tools to make a blog",1524647993.0
FeatheryAsshole,"Django is not a design tool. If you want it to look nice, do a tutorial on CSS.",1524651393.0
bitbayer,Try this https://overiq.com/django/1.10/intro-to-django/,1524651511.0
DmitriyJaved,I’ve seen tutorial in Russian on making ecommerce (typical online shop) website if you’re interested I’d look it up when I come home. ,1524653039.0
lamintak,You might be interested in https://realworld.io/,1524680837.0
booooomba,"You have misunderstood quite a few things. 

1. This has nothing at all to do with Django. Just get a different webhosting service and point your domain there. Just google this, there should be thousands of blogs explaining this.

2. Start with the official tutorial and WORK through it.

But why do you even need a domain? Just start on your desktop/laptop. It runs just fine and you can play around with Django. No need at all for a website. ",1524744759.0
shocketnavy,"I am unable to understand what role does django play in other famous websites that use it. If I am not wrong reddit also use python so does it use django too? Websites like bitbucket and instagram use django, so what is actually going on in the back end using django? What all is it handling?",1524638761.0
dteskera,Try with truncatechars_html,1524627444.0
SlumdogSkillionaire,"Technically, p and li tags don't have to be closed, it's just good form to do so.",1524628859.0
Soupinmyfly,What happens if you truncate the characters before you enable linebreaks?,1524627493.0
haloweenek,Do you use tinymce ?,1524633801.0
fizzy_tom,"The p tags are being created by the `linebreaks` filter:

https://docs.djangoproject.com/en/2.0/ref/templates/builtins/#std:templatefilter-linebreaks

This is then being truncated by `truncatechars`, so you're losing the closing tags.

Change to `{{ article.body|truncatechars:110|linebreaks }}` and it should start working.",1524653598.0
jimbobnoodlepants,"There's a `unique_together` model meta option https://docs.djangoproject.com/en/2.0/ref/models/options/#unique-together

The won't create an index but will enforce a combined uniqueness between your fields, which seems like it would do what you need it to.

Sample:

    class User(models.Model):
        first_name = models.CharField(max_length=100)
        last_name = models.CharField(max_length=100)
        class Meta:
            unique_together = ((""first_name"",""last_name""),)
",1524619614.0
Mephoros,"As a temporary solution I am checking during `clean(self)` on the form for any existing records with the given first name, last name and phone. I guess that means this becomes more of a theoretical/optimization question then.",1524619563.0
naught-me,"`first_name = models.CharField(max_length=100, unique=True)`",1524614818.0
mrtrunin,"No solution to offer, but out of curiosity – why do you need the keys to be numbers?",1524604084.0
Ebriggler,"Change to an array of objects. 

[
    {
        ""key"":1,
        ""values"":[]
    },
....
]

",1524613248.0
aphoenix,I feel like we need to know why you want to do this and then maybe we can suggest a slightly better methodology to do what you want to do.,1524611068.0
BithTree,"This feels like an x, y problem. What problem are you **actually** trying to solve here?",1524616813.0
TiredMike,"Hey!

I think you may be able to do something like:

    class MySerializer(serializers.Serializer):
        def __init__(*args, **kwargs):
            for number in range(1, 11):
                self.fields[str(number)] = serializers.ListField(child=serializers.CharField)

Let me know how that works. I also have some other ideas.",1524604149.0
jonykalavera,I think you might be trying to implement some kind of game. Why dont you use a jsonfield and validate the structure?,1524608724.0
roddds,This just looks like an array of arrays.,1524614419.0
Vitrivius,"You should be able to do this by overriding the `to_internal_value` and `to_representation` methods of your Serializer class. There's an example of this in the docs that you can modify. 

http://www.django-rest-framework.org/api-guide/serializers/#baseserializer

Something like this:

    list_field_1 = serializers.ListField(child=serializers.CharField)
    
    def to_internal_value(self, data):
          data['list_field_1'] = data.pop('1')
          super().to_internal_value(data)

If you need the browsable api html forms to also use the numerical field names, you probably have to do some more hacking to get that working",1524654439.0
Investisseur,This question doesn’t make a lot of sense. Can you clarify what you actually want to happen in step format ,1524600984.0
igncampa,[This](https://github.com/tomturner/django-tenants) might help you with the subdomain-per-tenant part. The rest I don't really know.,1524610741.0
kwuchu,"On mobile, but look at Django Subdomains and hit the auth logic yourself as well.",1524618255.0
buildmybrandxyz,Also ansible would be used to start up new instances of the program. ,1524600548.0
Poromenos,"I don't think there's a significant difference between nginx and S3. Honestly, I just serve them directly from Django with Whitenoise (without even bothering with an nginx route) and proxy that through CloudFront or CloudFlare (usually the latter). This results in a single request ever for static media (they're cached for ever with hash filenames), so it will make approximately zero difference what you serve them with.

If you don't want Cloudflare but still don't want to bother, I do the exact same with nginx caching and Whitenoise. Instead of copying the files to the nginx box, I set an nginx cache for the /static/ URL and let nginx cache things that way.",1524594726.0
androidul,"That really depends on the location of your clients. S3 is not a distributed service, meaning if you create a Bucket in US Canada Central, it's going to stay there, it's not zone agnostic \(like Glacier\).

So if EU clients will fetch from your Canadian S3 bucket, they'll get *some* delay as they have to pass through more hops to get to the destination.

I'd go with **Nginx** as it's much more **flexible**, plus you can launch an Nginx container these days wherever you want, add more instances in different zones as well, tie them with a **Virtual IP** \(LB rr between them\) and you have low latency.

If you want more speed, then you go with **caching**, i.e. Nginx, Varnish, Memcached w/e

Last but not least, use [HTTP/2](https://http2.github.io/) to deliver assets in one shot \(request\). Performance boost is amazing.",1524601790.0
ramse,"Having django serve static files just add extra processing power that is not needed. Djangos core needs to be loaded, routing and apps loaded, then it searches the static folders for a matching file then serves it. Versus nginx which you'll have configured your static location so it just matches the file location and serves the file or 404 if its missing.",1524593655.0
ramse,"What is this script doing? You may be better off with somethig like a celery task, it would move the iperf commands to another process and then your view could have a ajax requesting status updates for the task. It all depends on what the task is doing.",1524593095.0
amangarg078,"You can do the following:

    filtered_A_objects = A.objects.filter(b__status='OPEN')

This will create a join of table A and B and then filter the results based on B's status.

Do take a look at [https://docs.djangoproject.com/en/2.0/topics/db/queries/](https://docs.djangoproject.com/en/2.0/topics/db/queries/) for a great reference on how to make queries with django.",1524566519.0
nim65s,"    A.objects.annotate(Max('b__updated')).filter(b__updated=F('b__updated__max'), b__status='OPEN')

Seems to work, doesn't it ?

edit: raced XD",1524581674.0
bykof,"Yes a deployment of django is not the same as the classy html/css/js stack, because django needs to run on a server.
If you have the classic html/css/js stack you also have a ""server"" running, which is called nginx or apache. 
It serves the html/js/css files on HTTP Requests from a server.

Django works in a broader sense like a nginx or apache.
It gets a HTTP Request, do some computation in your views and Response with a document or just data.

So if you want to deploy django on googlecloud, you need to get a compute engine (server) which runs 24/7.
Then you have to copy your project on this server. 
First I would start to copy it via scp and learn the fundamentals of ssh.
Then start the django application on your server as a daemon.
Afterwards uniquely configure a nginx with a proxy pass to your running django application with the running port.
 
Voilá, you deployed a django application.",1524548507.0
Pr0ducer,"http://www.gettingstartedwithdjango.com/

This site takes you step by step through deployment on Heroku, which has a free tier to tinker.

It's kinda old, but it worked for me back in 2013.",1524589082.0
pat_the_brat,"Consider looking into a VPS. Likely to be much cheaper, but you have to install your own database, nginx, gunicorn / uwsgi, etc.

Still, you can get one starting from $2.50-5 a month.",1524567601.0
c8003f9,"Have a look at django-widget-tweaks. On mobile now, but should be easy to find it.  ",1524581253.0
ramse,mailgun free 10k emails per rolling 30-day,1524540285.0
amangarg078,"Use AWS SES. Nothing is cheaper and reliable than this. Plus, it has a clean integration with Django's Email Backend.",1524548328.0
tabdon,This looks great. Can I integrate it into my site as a sub-domain or something? ,1524532625.0
reduxionist,cool. What did you find most difficult or annoying or surprising or easier than expected in the dev process?,1524530320.0
puddlypanda12321,Dude this is awesome. Congratulations!,1524536798.0
heo5981,"HI, nice project!

So, I'm just beginning with deploying my apps, is there any advantage of hosting the database on Google Cloud instead of on Heroku itself? What are the main differences?",1524533462.0
clonebottle,"I'm looking to convert my project into a similar as a service project which allows others to host on my site.

I have a Forum in Django hybrid. 

How hard would it be to convert it into as a Freemium Service project so that others can use it as isolated subdomains.

I actually have no idea on how to do it.

I thought it might not even be possible with Django, but it seems it is.

The only approach I know which is close is manually adding using the sites framework",1524539773.0
SkawPV,"It looks cool. I'm creating my first Django project too and I had an issue where I want to create multiple inlines in a form, but seems like Django is not enough. Reading I've found that Vue is a good solution to my problem. Did you learnt Vue for this project? It's easy to implement it?",1524566503.0
zowhair,Great work dear....,1524535444.0
mogosselin,"You might want to use fixtures:

https://code.djangoproject.com/wiki/Fixtures

This provides default data after your models create the tables.

You can also export the data from your current database to fixture files.

Here's what I would do:

* Output your data into fixture files. 
* Review your fixtures to be sure everything is alright.
* Backup your local database
* Wipe out your current database on your local
* Run 'migrate' on your local database
* Import your fixtures on your local database
* Check that everything works normally
* Import your fixtures in your production database

With that, you're certain that you can easily start from scratch if you need a new dev / test environment.",1524527545.0
,"manage.py dumpdata <app_name> > <app_name>.json

manage.py loaddata <app_name> <app_name>.json

Or start using something like pgAdmin",1524538680.0
TiredMike,"To bootstrap your remote server's data, I'd just use sql dump to export the data on your local machine, and then import it into your new production machine. That will probably be the easiest way, and is fine for a one off.",1524604843.0
booooomba,"Holy shit. No offense, but having a deployed Django project without knowing even the basic-est of basic database basics is a rather risky. 

But to answer your question: What you want to be looking into is an SQL dump.

If the dataset isn't that large you can also try this:

https://docs.djangoproject.com/en/2.0/howto/initial-data/",1524513869.0
synw_,"A little more code:

- [A schema](https://github.com/synw/django-mqueue/blob/master/mqueue/schema.py) with filters and authentication checks
- [Protect your endpoint](https://github.com/synw/django-graphql-utils) by a Django csrf token
- [Client queries using pagination](https://github.com/synw/django-graphql-utils/blob/master/example/grf_ex/templates/queries/all_users_next.gql). The graphql's pagination system is a joy to work with",1524559892.0
DudaFromBrazil,"I once researched about graphsql/graphene subscription integrations with Django channels, with no luck. Anyone knows if that's easily integrated now?",1524787278.0
Niicodemus,"https://docs.djangoproject.com/en/2.0/ref/middleware/#security-middleware
https://docs.djangoproject.com/en/2.0/ref/clickjacking/",1524528008.0
Etlam,I wonder how this compares to nginx limits?,1524514714.0
askvictor,"Django doesn't have a rate-limiter for logins built in? If not, perhaps it needs one - it's pretty basic security practice.",1524530269.0
aera,"Yup, this was a deliberate design decision to let you just type the number! Something we kept over from South.",1524484418.0
knuppi,"If you need to migrate to the first state, before any migrations are ever run, then use `zero` as the migration name",1524489662.0
angellus,"That was intended. Everything after the numbers is just suppose to be a useful descriptor of the migration which is why you can also do this (when you generate that migration):

    python manage.py makemigrations [app] --name [descriptive_name]

And they will no longer have that `_auto_` name format. ",1524494699.0
xentralesque,You can also just run migrate without any params and it will run all migrations in all enabled apps,1524482168.0
booooomba,What have you come up with so far?,1524478371.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1524468300.0
yen223,"Being in a similar situation, my best advice is to structure it like any other view. Don't bother with any of the admin stuff",1524470905.0
amangarg078,"You can have normal views, and just for the UI, just inherit the templates from *base.html* of the admin app \(use `{% extends ""admin/base_site.html"" %}`\).

You can then integrate these views using their links by adding a custom column in list view or add/replace the links in the *admin.py* or even changing the actual template \(you can access it: */templates/admin/\<\<APP\>\>/\<\<MODEL\>\>/\<\<VIEW\>\>.py*\)

For example, you want to change the creation of a item by replacing it with a wizard. You can do the following to achieve it.

1.Create the appropriate views and templates. Inherit the template from *admin/base\_site.html*.

2.Replace the ""Create"" button's link with the wizard's first step. Your admin template will look like

    # templates/admin/<<APP>>/<<MODEL>>/change_list.py
    
    {% extends ""admin/change_list.html"" %}
    {% load i18n admin_static %}
    
    {% block object-tools-items %}
        <li>
            <a href={% url ""create-item""%} class=""addlink"">Add Item</a>
        </li>
    {% endblock %}

3.You can even add a custom link for each item in a list view by adding a custom field in the ModelAdmin class of the model:

    #admin.py
    class MyModelAdmin(admin.ModelAdmin):
        list_display = ('name', 'view_report',)
        def view_report(self, obj):
            return '<a href=""%s"">%s</a>' % (reverse('report', kwargs={'id':obj.id}), 'View Report')
        view_report.allow_tags = True

So this will give you the ability to keep the admin UI intact and you can add any number of views, from a separate app or from the same app too.",1524486218.0
tagnydaggart,"For the related names, I would probably use `flights_departing` and `flights_arriving`.",1524454398.0
ShortOpposite,"https://stackoverflow.com/questions/2642613/what-is-related-name-used-for-in-django/36916782#36916782


Identical/duplicated related names. 


Related names are 'referenced backwards' from the Flight model to the Airport model. 


e.g. 

    fromAirports = Flight.+.all()
    toAirports = Flight.+.all()


No difference. 
 
",1524454653.0
ubiquitatious,sometimes the oldies are goodies 😎,1524471081.0
Fun2badult,This article is like 5 years old,1524437560.0
k3ithk,"Is translating this into # of requests per second as simple as just (1 second / x seconds per request), or is there more going on with scalability?",1524495966.0
furyfred,Didn't this get posted here like 2 years ago?,1524426409.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1524411729.0
TheNick22,Check out this blog article: https://simpleisbetterthancomplex.com/tutorial/2018/01/29/how-to-implement-dependent-or-chained-dropdown-list-with-django.html,1524563028.0
android2222,I am actually going to be attempting the same thing in my life very soon here. I'll keep watch and try to help if I can :),1524412969.0
uniqueaccount,I'm mobile so please excuse the brevity of this.  You need lots of JavaScript.  Have JavaScript show or hide fields based on what was selected.  Still make sure you verify in your form on the server side that everything was submitted correctly.,1524415908.0
phi2000,"One way you could do this is setup a json file that builds out your ""rules"" for what form fields are shown based on selection/entry. This set of rules would be used on the front\-end to show/hide your forms visually \(through javascript\), and on the back\-end to make sure the actual form submission matches the rules \(in case there is an issue with the js or somebody is trying something funny\).",1524438771.0
yoongkang,"From your example application, it looks like you're better off implementing some kind of form wizard. A form wizard is basically a collection of forms arranged as steps. E.g you use Form 1 for Step 1, Form 2 for Step 2, etc. 

There are different ways to do this. If you don't want to use any JavaScript, Django used to have something called a FormWizard, but it is not its own library -- look for django-formtools. The way it works, IIRC, is that it tracks which step you're at in the user session.

The other way is to write JavaScript.

So, remember, there are two parts to this. There's rendering in the browser, and there's validation of user inputs in the backend. 

Django forms try to do both, but you don't have to. 

You can use JavaScript for rendering, and use Django forms to validate in the backend. That's what I would recommend for this.
 
So I would use JavaScript to build the form wizard dynamically in the browser, submit via Ajax, and write different Django forms for each ""step"" in the wizard. 
",1524445808.0
prasanna_balaraman,"This thread on StackOverFlow can help you:

https://stackoverflow.com/questions/6142025/dynamically-add-field-to-a-form/38117899",1524841161.0
IamFr0ssT,"The chances are much lower than WordPress or Joomla as they are really popular and automated attacks are really common.

Having more different apps does make it a greater chance of one of them having a known exploit.

Brute force attacks are possible but can be rate limited or you can track failed login attempts with django-axes. 

Sql injection attacks are something you need to keep track of depending on how you setup your site, they are possible if you use raw sql queries. That is why I'd suggest using Django's orm. 

Basically Django by itself is fairly secure, more so than most other Web frameworks, but you shouldn't think of it like WordPress or Joomla as it will require you to code to accomplish pretty much anything and code is where exploits form.

Updating a Django release to a higher version means you need to look at what has changed, if something is deprecated and you use it you need to change it, it's not a one click, command line update, tho often it will work just fine. 

You can checkout [Django vulnerabilities](https://www.cvedetails.com/product/18211/Djangoproject-Django.html?vendor_id=10199) vs [WordPress vulnerabilities](https://www.cvedetails.com/product/4096/Wordpress-Wordpress.html?vendor_id=2337)

You will notice that there are no code execution, sql injection, file inclusion and privlidge gain exploits on Django. They are not impossible, but you need to really try to make them possible.

Keep in mind, the results are a bit sqewd as Django is much less common to be attacked and there are less people looking for vulnerabilities.

I have no idea what you plan on making or if this is just a learning project so I can't give you actual advice. I am also fairly new to the Django scene(about 1 year) but have experience with some other Web frameworks. ",1524395596.0
OMDB-PiLoT,"CS101: First day, the professor yells out:

""All softwares have bugs""

""All of them""

after a bit of a silence,

""No app is fully secure""

""None of them""

..................

""Are you ready to write buggy code and create insecure apps? Let's begin....""",1524392039.0
elingeniero,"It is much more likely that you will be 'hacked' through a fault of your own - e.g. accidentally revealing secret keys or credentials, or not securing your webserver properly - than it is that you will be 'hacked' through a security fault with Django.",1524400200.0
actionpotential,"https://www.contextis.com/blog/make-a-django-app-insecure-its-not-easy-and-thats-a-good-thing

If you follow good practices it's very unlikely you'll get hacked, unless the site is of very high value. But it's always recommended to subscribe to the security announcements list and apply patches when something critical pops up",1524397812.0
XenGi,"You here about WordPress being hacked so often because it became the standard CMS/blogging software for a few years now. Which means many people use it and many people search for bugs in there.

Django on the other hand is not a CMS. It's a web framework to develop web backends which can be a CMS but doesn't have to.

There is no way to tell if a self build CMS with Django is more secure than a WordPress.

The only thing you can do is, make sure you always have the latest updates and in case if a self build Django app, follow the best practice guides on how to build a secure Django site.",1524395599.0
colly_wolly,"The framework itself has a fairly good reputation, but crappy coders can make anything insecure. Make sure you keep the minor versions up to date. ",1524400114.0
mbrochh,"Django itself is extremely secure. The biggest threat is probably that you might leave SSL access to your server via username and password open and some hacker just brute forces their way into your server. Once they are in, they can wreck havoc but that's not Django's problem, of course.

So at least make sure that you can only get into the server with SSH keys and make sure that you don't lose or compromise those keys.",1524403634.0
godhatesmetoo,"> I ask these questions as someone with no knowledge of django but wanting to learn so I can create my own cms and move from wordpress to django.

If you fear hackers and you only have static content, try a static website generator. You can generate your blog and host it in an AWS S3 bucket.

EDIT: BTW if you like Django you can use [django-distill](https://github.com/mgrp/django-distill) to generate your blog with Django.",1524428347.0
Cictani,Just to make it clear Wordpress is also secure if you install all the security updates quickly. A lot of people just don't install them and then their website gets hacked...,1524430995.0
fafafefefofo0,"As far as I know, Django markdown does not render template tags that are in the text it filters as that would be a potential security issue and be hard to develop.

Use a custom filter or edit markdown's to add the base static URL to all images.",1524405349.0
wynar,"It doesn't sound like the django markdown app supports django template tags like {% static 'url/to/img' %}. 

Have you tried using a large model.TextField in lieu of django markdown app? I've dynamically rendered HTML in a template by using the {% autoescape off %} tag and inserting my model.TextField content.

template.html has this:
> ...

> {% autoescape off %}

> //body will be my large TextField with my HTML markup

>     {{ post.body }}

> {% endautoescape %}

> //then the rest of my template

> ...

Post model has this:
> def Post(models.Model):

>     body = models.TextField(max_length=10000)

>//rest of my model

> ...

Template tags work fine for me when I use this method and the HTML renders perfectly fine. Even CSS that I include on the template outside of the post.body markup works fine. ",1524424474.0
GHDpro,"The cleanest solution might be to write an extension for it. Using a custom markdown tag, that extension would then take care of prefixing the static path.

https://github.com/Python-Markdown/markdown/wiki/Tutorial:-Writing-Extensions-for-Python-Markdown",1524455606.0
kriwil,are you trying to validate one field? you could use `clean_image()` and return it None if it's invalid. https://docs.djangoproject.com/en/2.0/ref/forms/validation/#cleaning-a-specific-field-attribute,1524346868.0
fuckslavs,"Custom field validation is automatically handled by your form. You don't need to call form.yourField.is_valid(), the validation is already handled by form.is_valid()",1524361391.0
Nicksil,"You may have a specific use-case where you need to build in your own checks, but if not, read about Django's [DATA_UPLOAD_MAX_MEMORY_SIZE](https://docs.djangoproject.com/en/stable/ref/settings/#data-upload-max-memory-size) setting which you could perhaps utilize by catching the raised exception and implementing your own handling procedure.",1524348647.0
Whoopska,"`form.cleaned_data['image']` holds the value you're looking for, but it's too late at this point since it's already ""invalid"" an has errors appeneded to the form",1524349061.0
theslay,check out this [django cookiecutter](https://github.com/pydanny/cookiecutter-django),1524356036.0
bedubs147,"Here's a production ready Dockerfile with a blog for some explanation: https://www.caktusgroup.com/blog/2017/03/14/production-ready-dockerfile-your-python-django-app/

I'm using it as a guideline for a project as well.",1524372717.0
TheDisapprovingBrit,"I deployed an instance yesterday using Portainer, which doesn't seem to have a way to change the command which is run when you start the container - any changes to the container after deployment will create a new container and lose any changes you already made. 

I just deployed the python:3 container, and set the startup command as a shell script containing only `pip install Django mysqlclient` and `python3 manage.py runserver`. 

That seems to work well enough, although I only even heard of Django 2 days ago so it's probably not the optimal way to go.",1525242262.0
chjacobsen,"The official documentation is very good. There's plenty of other resources, but it's most likely the best place to start.",1524314915.0
HeyHeyHeeeeeey,"Simpleisbetterthancomplex, docs, Django girls.",1524329959.0
elingeniero,"Don't touch any other resources until you've at least finished the entirety of the [tutorial](https://docs.djangoproject.com/en/2.0/intro/), and after that only bother with non-official docs if they're talking exclusively about non-official libraries. The official documentation is the absolute best source of information.",1524315542.0
LeonardUnger,[django girls guide] (https://tutorial.djangogirls.org/en/) ,1524352830.0
ic_97,Start with the official polls app to get a hang of how things work in django and get hold of the basic principles of django and after that just think of something you want to build and try building it with everything you learned. At first don't go on following a single tutorial as they will only tell you to build a particular app instead focus on what you want to build. If you need any help you can always ask questions here or on SO.,1524330991.0
OMDB-PiLoT,"After going through the official docs, watch tutorial videos at https://www.codingforentrepreneurs.com

Check out their [projects page](https://www.codingforentrepreneurs.com/projects/).

Hands down, best youtube tutorials out there for Django.",1524318526.0
qwer7y,Max Goodridge's YouTube series.,1524321235.0
diegobust4545,Sentdex on YouTube. He knows his stuff and does other dope python tutorials ,1524347337.0
Batting1k,https://djangoforbeginners.com/,1524349275.0
knowssome,"[Tango with Django](http://www.tangowithdjango.com/) is a pretty good tutorial. Make sure you understand how the web works in general and the general structure of full-stack applications, as that will help accelerate your understanding of the tutorials you read.",1524376918.0
max_daddio,"The official docs are plenty, and definitely where you should start.

Then there are a bunch of good books for when you know slightly more, for example, Two Scoops of Django has been a staple for many Django users for a number of years.

https://www.twoscoopspress.com/",1524315516.0
pat_the_brat,"I like this book as well: https://djangobook.com/the-django-book/

A bit more complete than the official tutorial, but you absolutely should start with the tutorial.",1524315303.0
zowhair,"codingfEntrepreneurs ,check out this bro
 they have tutorials on real project:
https://www.youtube.com/user/CodingEntrepreneurs/playlists?view=50&shelf_id=11&sort=dd",1524356704.0
avinasht1997,Djangoforbegginers,1524366468.0
wharfedalepulz,There's this channel called coding for entrepreneurs. Check it out. Following him taught me a lot. Whenever I have a problem or I'm stuck I go and watch the relevant video. ,1524343399.0
imsearchbot,"Try this one, I bet you won't regret it.

 https://overiq.com/django/1.10/intro-to-django/",1524372207.0
redline97,Great topic,1524354475.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1524286303.0
ccb621,"First hit on Google when searching for ""Django Linode"": https://linode.com/docs/web-servers/nginx/deploy-django-applications-using-uwsgi-and-nginx-on-ubuntu-14-04/. It's a little outdated, but still applicable.",1524283647.0
afdolriski,"I did that just few month ago.
Here is the step you need to follow:
1. https://www.linode.com/docs/getting-started/ and https://www.linode.com/docs/security/securing-your-server/ to get your server up and running.
2. https://docs.djangoproject.com/en/2.0/howto/deployment/wsgi/ to set up your wsgi.
At django docs it mentions some wsgi that you would like to use, the easiest one is mod_wsgi using apache, but if you prefer nginx my recomendation is using gunicorn since it is easier to use than uwsgi.",1524407183.0
ccb621,You can create a custom user model: https://docs.djangoproject.com/en/2.0/topics/auth/customizing/. What's your use case for changing the column names?,1524283849.0
dynaken,"You'll neee to extend/override the admin app. Take a look at link below. 

https://docs.djangoproject.com/en/2.0/ref/contrib/admin/
",1524281505.0
cakeandale,"If the data is coming from the ORM and you use Django Rest Framework, the serializers can reference other serializers very easily (Though it's [a little more work to make them easily writeable](http://www.django-rest-framework.org/api-guide/relations/#writable-nested-serializers)). For this, if you went that route you should be able to do something like

    class ChildSerializer(serializers.ModelSerializer):
        ....

    class ParentSerializer(serializers.ModelSerializer):
        gallery = ChildSerializer(many=True)
        ....
",1524261129.0
don_sno,It really depends where you want to generate this from. I have achieved something similar with recursion,1524258284.0
will_r3ddit_4_food,This is very outdated. 2.0 has been out for months.,1524529254.0
cediddi,You might want to look at django channels,1524253460.0
dalore,You could use Django channels along with graphql subscriptions. Rest is more for polling.,1524254254.0
digitalice,Take a look at this example: https://github.com/narrowfail/django-channels-chat,1524259157.0
haloweenek,Say hello to WebSockets. That will be the least resource hungry solution.,1524255040.0
yerfatma,"If you're just interested in sending the notifications, `django-channels` is what you're probably looking for. If you're wondering about the actual notification part, I wrote up [this when I built a Django social network](https://stackoverflow.com/a/2875875/7376) almost a decade ago (gulp!).",1524268434.0
yoongkang,Websockets.,1524300517.0
strikex,We use the 3rd party API from Stream (GetStream.io) for our feeds. Works okay.,1524259294.0
kroustou,"What i would suggest, which might sound like an overkill is to create a microservice \(in flask maybe\) in which you could make a post request for a new notification and then depending on the notification type it would do the required actions \(fire some celery tasks maybe\) and send an email or push via web sockets to the connected clients the event, or both!",1524296836.0
,[removed],1524252392.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1524247681.0
ccb621,Why example instead of default as the first key?,1524240586.0
ccb621,What do your database settings look like? Can Django actually connect to the test DB? Is it attempting to reuse a DB? What happens if you run on a completely clean DB server?,1524240199.0
mattrodd,"Can you dump the SQL? If you see the SQl, then it's easier to see what is exactly happening. Try setting up the Django debug toolbar to get access to the SQL.",1524243628.0
CrypticParagon,"/u/ccb621 /u/mattrodd 

I think the key question that this is coming down to is as follows: if I am using a custom user model that extends AbstractUser in my login server, how do I also make that my user model in other projects? Do I just copy my custom model definition to every project that uses that user schema and update it in every project whenever it changes?",1524245106.0
vaibhavhrt,"I had the same issue, I deleted the fixtures, adjusted tests to not use fixtures. Delete the database and migrations, and rebuilt everything again. Never gonna use fixtures again",1535096510.0
booooomba,Just do it from scratch. Should be pretty straight forward. Also a much better learning experience.,1524228734.0
2fplus1,"I have a web-based RSS/Atom reader that I wrote with Django: https://github.com/thraxil/antisocial

I wrote it quite a while ago (the weekend after they shut down Google Reader), but I've kept it up to date and it uses Django 2.0.

I use celery to schedule the polling of feeds. Nothing super fancy. The bulk of that functionality is going to be in here: https://github.com/thraxil/antisocial/blob/master/antisocial/main/tasks.py

`feedparser` does the heavy lifting for fetching and parsing.",1524248979.0
jobelenus,"Depending on how ""transparent"" you want this to be you have a few options. You'll either want to make a custom field that will do the operations of splitting that into the relevant lookups when someone passes a field into `XXX.objects.filter()`.

Whatever way you go you'll likely want to explode `""ZB(C,D,E)123""` at the time of storage into all its potentials `ZBC123, ZBD123, ZBE123`, rather than make your lookup more challenging (e.g. do the easy things first).",1524226745.0
execrator,"There are a bunch of ways to go about this which depend on how many wildcards you have and how many different real codes each one can match. There's no obvious solution because you have exactly the opposite case to the way a database is normally used. Normally you have your wildcard/query in the application, and your real codes to be matched against are in the database.

u/jobelenus has a good suggestion with exploding the wildcards, as long as they explode to a reasonable number of real varieties.

Another idea is, if you can change the syntax of the wildcards to that of Postgres' SIMILAR TO query, you can indeed do this kind of reverse query. 

    create table wildcards (
      wildcard text
    );
    
    insert into wildcards values ('ABC%'), ('%123'), ('A(P|R|Q)%');
    
    select * from wildcards
    where 'AQ13' similar to wildcard
    
    > A(P|R|Q)%

You will need to do a little footwork to make Django construct this query but I think it's possible.

[https://www.postgresql.org/docs/current/static/functions\-matching.html](https://www.postgresql.org/docs/current/static/functions-matching.html)",1524231744.0
akaliant,"Break it down to the number of requests per second. If leas than 100, this will be fine",1524220106.0
Poromenos,"If it's a blog-type site, then yes, it should be able to handle thousands of concurrent connections with good caching. Then again, a static site generator is a better fit there, or at least use [django-bakery](http://django-bakery.readthedocs.io/en/latest/) to create a static site out of your Django project and deploy that to something like [Netlify](https://www.netlify.com/), which I'm an extremely happy (non-paying) customer of.

If you do need a VPS, I recommend [Hetzner](https://www.hetzner.com/cloud), they're very cheap and have great performance. Germany-only datacenters, though.",1524228072.0
The_Amp_Walrus,"This should be straightforward to test with [locust](https://locust.io/), assuming that you've already deployed to a VPS.

Depending on the content of your pages, Wagtail can produce a lot of database queries and cache calls when rendering a page (eg. fetching image renditions, fetching page site data), so I'd have a look at what queries your pages are generating with Django Debug Toolbar if it's falling over under load.

Also consider caching your static assets with a CDN (eg. CloudFlare) if you're sufficiently worried about your server struggling under load. You can even cache your HTML pages and trigger cache invalidation on the ""page published"" signal.",1524222025.0
tomdyson,"You could easily handle this traffic with Wagtail on a $5 VPS, if you put it behind Cloudflare (free) or use the django-bakery / netlify combo suggested by /u/Poromenos. My little [wagtail-netlify](https://github.com/tomdyson/wagtail-netlify) app makes this even easier :)",1524237211.0
picasshole,"If you launch on a VPS provider that allows resizing (e.g. DigitalOcean, Linode, Rackspace) then you can start with the cheapest and scale up as you need more resources.",1524229313.0
booooomba,"That should easily be doable. Are you even already getting that many users or are you just expecting that many?

Would it not be better to use some static-site generator instead of Django? Something like Hyde maybe?",1524219622.0
antirabbit,"I had a few thousand simultaneous users for several hours on a 2 vCPU/4 GB server last summer. The visited page only had a few PNG images and some text, though, but I don't think I used any caching (the extra resources are usually for some less-commonly used resources on the back-end that use tensorflow/keras).

You'll probably be fine unless your have a lot of media per page.",1524237596.0
pancakeses,"I use Vultr. It and most other VPS providers (Digital Ocean, etc) make upgrading to a more capable VPS as easy as clicking an ""Upgrade"" button. Start with a lower tier, and check your resource usage. Add more ram/space/cores as needed. Super easy!",1524291183.0
allidoisace,"What is the context entries you are passing in, and what model does it consist of?

Edit: I may know what your problem is and it may be really simple, but i need to make sure i know what you are passing.",1524203037.0
supra621,"From the sound of it, and if I understand correctly, I would use foreign keys for techs/status.

The best way I’ve found to change dropdown fields based on selection is through JavaScript and AJAX. AJAX can also take care of the data updates you’ve described when a selection is made.",1524197396.0
allidoisace,"Right now, how do you know if a tech is associated or not? Or is that part of your question? If so, use a foreign key into your technician model and assign a tech on creation or at any point. Then when you get to your code above, you can simple do.l... ` if some_model_instance.technician_set: ...`",1524203442.0
amangarg078,"Having ForeignKeys for both status and technician is the right way to go. This will ensure a correct database design, consistency throughout your application, and flexibility to handle those entities.

If you want to handle form, then you need to use JS/AJAX to manipulate the fields. Django's forms will provide you with initial values, or the logics to proceed once form is submitted. User behaviour can be manipulated using JS.

Also, to enforce conditions at user submission, you can override the form's `save()` method and save the values according to your custom logic. Below is a snippet that might be helpful.

    # forms.py
    def save(self, commit=True):
        instance = super(StatusChangeForm, self).save(commit=False)
        instance.field1 = self.cleaned_data['field1'] # etc
        # custom logic
        if commit:
            instance.save()
        return instance",1524214032.0
Niicodemus,"There are possible security implications if you GZIP the HTML file and it contains authentication informations, like csrf and session data. It's fine to compress your static files. In the past, with a site on Heroku and static files on S3, I just wrote a script as part of my deploy process that gzips them after I collectstatic, and before I upload them to s3. Just make sure you set a header 'Content-Encoding: gzip' on each file in s3.",1524184700.0
django_throwaway_1,"Sounds like you want some whitenoise - http://whitenoise.evans.io/en/stable/

It takes care of GZIP and Headers for you. Also, if you are hosting on Heroku make sure you are using Waitress instead of Gunicorn",1524187922.0
andytwoods,"Tried django-compressor? https://blog.botreetechnologies.com/django-asset-compression-and-storages-55e3d4d590ee

I don't use Heroku so don't know if you can use Cloudfront to serve static media. Cloudfront can compress files automaticaly. Im keen on learning how to incorporate this into my templates! (as the compressed files will have different names and it is unclear to me how to incorporate this into my templates).",1524201746.0
crsbos123,"SO i created a cloudfront instance, updated my settings file with the cloudfront domain. 

When i go to run my speed test again, it's showing that my files aren't compressed, even though i turn on the 'Compress Objects Automatically' setting in cloudfront.

The speed test for my domain \([dealmazing.com](https://dealmazing.com)\) shows the need to compress several of my CSS And JS files.

I just thought Cloudfront was handling compression.  Am i missing something?",1524438322.0
porksmash,Not with the Django ORM. You'll have to type in all the ones you want.,1524196599.0
yerfatma,"Sure, as long as you don't expect 0 to mean something different from `None`, I think it's a fine practice as it saves you having to do an if check to format `None` as 0 on the front end. Or if you want to do math after the fact. ",1524185281.0
whelks_chance,Is there any reason not to filter on not none before you begin the aggregations? I'm assuming it would save on memory as you're not pulling the entire table.,1524186633.0
duppyconqueror81,"I would definitively do this using Pandas.
",1524198022.0
CaffeinatedT,If I was in the development phase I'd probably have it showing as None so that I'm investigating just why those numbers aren't appearing. But in production where the emphasis is stability I'd probably have it set to return as 0 yes. ,1524214334.0
amangarg078,"Here's what you can do:

1. Create a form view. The form will contain all the columns present in the model as individual checkbox fields. You can choose the default values of the form by overriding its `__init__()` method.
2. Save the above information in a model, or pass onto the next view through url query parameters.
3. The next view will be a TemplateView. In the `get_context_data()`, add the queryset as `context['data'] = MyModel.objects.filter(..).values(self.kwargs.get('columns_to_be_shown'))`
4. In the template of the above view, access the queryset as `{{data}}`. Now you can show your report in the desired format.
5. You can add a custom admin button which will redirect you to the form view. [Here](https://medium.com/@hakibenita/how-to-add-custom-action-buttons-to-django-admin-8d266f5b0d41) is a great reference.",1524217726.0
Kalrog,"Sounds like you might need to explore databases.  I wouldn't do anything like this in Django, I would pass this to the DB itself to check and return the answers to me.",1524164892.0
Nicksil,"Not Django-specific, but likely has something to do with how they're [index](https://en.wikipedia.org/wiki/Database_index)ing their database.",1524165026.0
iconfinder,"If you want good text search, consider using Elastic Search. If you don't then there are also some good text search tools in both Postgres and MySQL. If you want performance searching a database, make sure to spend some time on indexing and learning to analyze SQL queries.",1524168564.0
merican_atheist,"Discord uses Cassandra for this.

For postgres look into its full text search feature. Calculated TSVECTOR column + an index is very fast even for several hundred million rows",1524187485.0
Felidor,Cassandra + Elastic Search,1524200689.0
zettabyte,"Is the ""text"" in the database?  If so you could search those fields with the QuerySet API `__contains`, or you could craft some custom SQL to UNION across a several tables at once.

If the ""text"" is in your `./templates` you could write something to traverse and search those folders and files.

If the ""text"" is a part of your project in some way, templates or in the DB, you shouldn't /need/ to resort to scraping.

",1524163748.0
haloweenek,"Django channels makes it preety easy to integrate WS in your app. 

It’s one box and field proven.",1524157144.0
OuchYouHitMe,"Django Channels. Period.
",1524206724.0
Niicodemus,"You could generalize the logic in a mixin that's inherited by both the ModelForm class and the ModelSerializer, and called by both of their validations hooks.",1524150687.0
sleepingthom,"If I already have a site with multiple templates apps and models implemented, would it be worth it for me to build a blog using wagtail on top or should I just create my own blog app?",1524168854.0
tabdon,"Great write up. Seems very easy to get this powerful blogging tool installed. I recently went through the install procedure for another popular Django blog engine, and it was a PITA. Good to see this one making it so easy. ",1524185396.0
CptSupermrkt,"For anyone looking for a Wagtail blog without building your own, look at Puput.  They just released version 1.0, and it's solid.  With pip install puput and a couple modifications to settings.py, you got a fully functional blog with a nice default theme, tags, categories, social media sharing links, and optional support for stuff like Disqus comments.  It's built with Wagtail so adding new posts is as simple as just adding child pages to the blog.

EDIT: should also mention the developers are friendly and responsive.  I created an issue on Github, they acknowledged, fixed, and released a new version with the fix in like one week.",1524375439.0
pat_the_brat,"Cool, thanks. Any particular reason to use `django==1.11` rather than the latest version?",1524147594.0
pat_the_brat,"> 2007

> Drupal Service Launched

> 2014

> Wagtail Launches

> In 2014, Wagtail, our open source content management system was unveiled to the world. Powered by Django, Wagtail has quickly grown to become the world's new favourite CMS, powering websites such as Global Witness, Meningitis Now and the Royal Drawing School.

Talk about taking things out of context. They started working on Drupal ***SEVEN FUCKING YEARS*** before they released Wagtail. 

Also, they are a digital agency. Clearly, if they wrote a CMS from scratch, it's because the existing solutions weren't filling their needs. Makes sense that they would continue to support clients who use other platforms, though.

[Source](https://torchbox.com/about/).",1524140750.0
tomdyson,"This was a weird post to read! I'm one of the two founders of Torchbox.

We started using Drupal in 2007, when it was the open source CMS with the most momentum, especially in the non-profit sector where we specialise. I'm very proud of some of the high profile sites we built with Drupal - like www.ox.ac.uk and www.greenpeace.org.uk - and my brilliant colleagues who worked on them. But over the years we became frustrated with some aspects of Drupal's design, and we created Wagtail, initially as an internal tool, to address these frustrations. 

Wagtail has worked very well for Torchbox, and it's very exciting for us to watch its enthusiastic adoption by the open source community. However, that doesn't mean we can suddenly abandon all our Drupal clients and our Drupal developers. As it happens, we have recently decided not to take on new Drupal work, so we can focus on Wagtail, and our PHP/Drupal developers are retraining in Python and Django.

No technology is perfect, and I imagine that 10 years time there will be posts on Reddit mocking companies for still using Django :)
",1524178999.0
booooomba,"This is definitely a fail, but not the one suggested in the title ;-)",1524142066.0
will_r3ddit_4_food,Drupal is painful to use. No wonder they created their own cms,1524529833.0
clonebottle,"How many other CMSs do you know whose creators or creator company use other CMSs.

LOL!",1524140212.0
allidoisace,So it is essentially a socket in some way?,1524164479.0
notParticularlyAnony,"This looks very helpful I have never understood middleware and this is pitched at a great beginner level.

Sorry to focus on pedantry, but maybe get someone to help clean up the language a little bit? It's a little distracting...",1524153144.0
racech,You can use https://github.com/romgar/django-dirtyfields,1524124774.0
django_noob,"If it is possible to do a post save based on a field change, would the code look something like this? Note: I want a Car object to get created each time the address of the House model changes.

    def create_car(sender, **kwargs):
        if kwargs['??????']:
            car = Car.objects.filter(user=kwargs['instance'].user)
    
    post_save.connect(create_car, sender=House.address)   

I'm not sure what would go in the kwargs.
Thanks!

",1524122252.0
amangarg078,"Don't do it on `post_save()` as  you won't be able to tell which field was updated. Instead do it on `save()`. What you should do is:

1.Override the House model's \_\_init\_\_\(\) method to access the present value and save that in an object.

    __old_address = None
    def __init__(self, *args, **kwargs):
        super(House, self).__init__(*args, **kwargs)
        self.__old_address = self.address

2.Override the `save()` method to compare the old value and the new value and know if there has been a change.

    def save(self, *args, **kwargs):
        super(House, self).save(*args, **kwargs)
        if self.__old_address != self.address:  # Field has changed
            # create your Car object here or call a function here.
        self.__old_address = self.address  # reassign the old value to the new value.
              

This should so the trick.",1524219772.0
wskyindjar,"    sender=House.user

or  modify create\_car to use 

    Car.objects.create(user=kwargs['instance'].user)",1524120264.0
shabda,"If both `House` and `Car` are in same app, I would strongly recommend overriding `.save` over signals. Signals are useful when you want **other people** to be able to hook into your object creation lifecycle.",1524142021.0
bradshjg,"You should take a look at https://docs.python.org/3/tutorial/classes.html with specific attention to https://docs.python.org/3/tutorial/classes.html#class-and-instance-variables
The last piece that's relevant is that `DetailView.as_view()` returns a functions that instantiates a `DetailView` object and calls the `dispatch` method.
To sum that up

> How does Django reuse the view?

Django doesn't ""reuse"" views, it creates a new instance of the `DetailView` class every request, but your class variable `x` is available on _all_ instances of the `DetailView` class.

> When are the view and the variables inside deleted?

Class variables (unless explicitly deleted) exist for the lifetime of the Python process.",1524109205.0
NotSelfAware,"    class DetailView(TemplateView):
        def __init__(self, **kwargs):
            self.x = False
            super(DetailView, self).__init__(self, **kwargs)
    
        def get(self, request, *args, **kwargs):
            if not self.x
                  self.x = True
                  return redirect('preview') # 'preview' is the name of the view defined in urls
            return super(TemplateView, self).get(request, *args, **kwargs)

Would achieve the behaviour you were expecting.",1524130662.0
ccb621,Wagtail is nice. You can find a comprehensive list at https://djangopackages.org/grids/g/cms/.,1524087747.0
Dafaria,Hello there OP,1528010858.0
beholdsa,I'm a fan of Mezzanine.,1524105330.0
tagnydaggart,DjangoCMS is amazing for integration with existing apps.,1524142139.0
haloweenek,https://www.django-cms.org/en/ ???,1524087022.0
max_daddio,"What URL are you trying to make a connection with from React?

It should be http://localhost:8000 by default.

There is sometimes an issue with CORS, in which case you should check out the package 'django-cors-headers', and just allow all domains for your development environment. When you deploy to production you will want to restrict on which domains your app can make requests from.

Without some more info like the exact error message, or a look at your code, it will be difficult to tell you the issue.

For your next question, you are referring to creating a user. Do you mean on registration? In which case, you will construct the user object in React and pass it along as JSON to your registration end point. There are a number of packages which can provide authentication endpoints, check out the list at 

http://www.django-rest-framework.org/api-guide/authentication/

We use a combination of 'django-rest-auth' and Django OAuth Toolkit.

For a bit more help, you can try copy pasting the error you see in your browser's debugging console, and paste it here, it may give us more info.",1524082457.0
threeminutemonta,"Are you running react separately in dev mode on port 8080 using 

    npm run dev 


And running Django on 8000. We tied Vuejs to Django together using a dev configuration [proxytable](https://vuejs-templates.github.io/webpack/proxy.html). I’m sure there is a react equivalent.

In the browser we hit the UI directly on 8080 and the SPA will route to the backend /api on 8000 without the user knowing.",1524083110.0
krolm1,"what is your output from django's console? Do requests even reach your local server?
If log is empty then its probably a network issue. localhost for your app is not the same as localhost for django. You should then check your ip address with sth like *ifconfig -a*, run django with this command:
*./manage.py runserver 0.0.0.0:8000* and from react app make requests to *ip_address:8000* instead of *localhost:8000*",1524091660.0
,"There's an excellent project setup from 18F doing this. 

Here's the link https://github.com/18F/docker-compose-django-react. Might take you a bit to understand the setup, but you'll be better off once you do.",1524104272.0
haloweenek,Those are some bad DB username practices...,1524126680.0
Brandhor,looks interesting but how does it handle form errors? looking at the code it just shows an error popup without any information in it,1524084576.0
mipadi,"If the attributes have to be unique, why not use `unique_together`?",1524027003.0
ohmtastic,We've had good success working with React and Django. We built our app on it. On thing missing in Python is a good library for GraphQL. Would've loved to use it but Graphene (the python implementation) needs a bit more robustness for our team to be able to use it efficiently. ,1524051365.0
zealmax,This is a great series of blog posts so far /u/v1k45 - I've been trying to start on using Django and React together (both new to me coming from Flask & Bootstrap) so I appreciate you sharing these.,1524021859.0
oxalorg,"Lovely Post  /u/v1k45, thanks for the guide ;3",1524041870.0
ramse,"Both `register` and `edit_profile` suffer the same issue. The return statements are within an if statement, you're not accounting for what happens if the if statement is false.

    def register(request):
        if request.method =='POST':
            form = RegistrationForm(request.POST)
            if form.is_valid():
                form.save()
                return redirect('/home')
        else:
            form = RegistrationForm()

            args = {'form': form}
            return render(request, 'accounts/reg_form.html', args)

What happens when its a POST and the form is invalid? Currently nothing happens and in python if a method doesn't end with a return, it defaults to returning None.",1524008493.0
jnns,"Are you sure you copied the necessary informations correctly? For example, there's no `profile_html` endpoint in your URLconf at all.",1524002883.0
ProgrammerByDay,Did you ever have a profile_html/ end point? Could you be running an old copy with that active?,1524019220.0
jeffbaier,Maybe instead use Channels and redis?,1523991348.0
haloweenek,"I have bad experiences with clean rabbitmq in python. Maybe i was doing it wrong but if a process died it was impossible to restart it gracefully...

But I have really good experiences with Autobahn based websockets. You can easily use Django features in there. 

As for connecting the services together WS do the job really nice.

That would require a good design though ;)",1524001244.0
scout1520,"I really enjoyed the article, thanks.",1523988393.0
kurashu89,"Curious that `/bookings/resource` worked with the Flask set up, something must've been registered there or there was a bad route registration.

    def get_urls(self):
        urls = super().get_urls()
        return urls + <our custom urls>

Why do this instead of just registering multiple viewsets? I've had much more success with that approach. Given the amount of magic that DRF has behind the scenes, it's quite easy to forget there's extra routes being generated and accidentally register over either one of them or an existing route. ",1524010125.0
krumg,"The most simple solution for you would be something like:

    def run_daily_emails():
        [entry.send_email() for entry in ListingsModel.objects.all()]

Regarding celery: it's a very powerful tool and I'd suggest you to avoid using it unless you're sure about what you're doing. For such simple tasks adding a management command seems to be a better option: https://docs.djangoproject.com/en/2.0/howto/custom-management-commands/",1523979301.0
ccb621,"tl;dr The benefits of a true REST API are unclear (to me), and don't seem worth the hassle.

Roy T. Fielding agrees with you. He even wrote a [blog post](http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven) about it. The trouble is that few people have written a true REST API. I suspect this is because there aren't any great examples of hypertext/hypermedia APIs or clients. Additionally, the client needs to keep track of and cache some information. It can be a dumb wrapper that makes HTTP calls.

I have come across http://stateless.co/hal_specification.html, but still can't make much sense of it. Netflix has an [API that uses HATEOAS](https://netflix.github.io/genie/docs/3.0.0/rest/) to provide some useful links for certain resources. Amazon also [has an API that uses HATEOAS](https://docs.aws.amazon.com/apigateway/api-reference/) for link discovery.

I'm honestly not convinced of the value in going all-in on hypertext given the amount of effort needed to do so. Today, I put my APIs behind a versioned path (e.g. `api/v1/users/`) and pretty much follow the DRF guide. When it's time to make a backward-incompatible change, I make a new versioned path (e.g. `api/v2/users/`), upgrade clients, and keep moving. Hypertext offers the ability to change paths somewhat seamlessly since clients are supposed to discover paths. However, the client still needs to, for example, know that a field was renamed or removed. So...what have I gained by using hypertext aside from being able to boast that I've built a real REST API?

RPC. REST. I kinda don't care how you classify your API as long as you have decent documentation.",1524036255.0
Moltti,"Uhh, no thanks. I'm going to stick with [Sentry](https://sentry.io/).",1523957784.0
haloweenek,"AppEnlight / Sentry / New Relic ...

No emails.",1523958089.0
darthmaulik,I haven't read your code but maybe you can try the Django post_save signal,1523934680.0
ccb621,Setting a person on a litigant does not call `Person.save()`. That assignment only affects the litigant. ,1523932718.0
flipperdeflip,Is all that code necessary for the question at hand?,1523958064.0
haloweenek,"That's preety horrible.  Actually - extremely horrible. Kids - don't ever do that !

First. That amount of logic should be performed using signals / post_save ?
https://docs.djangoproject.com/en/2.0/ref/signals/#django.db.models.signals.post_save

That one ... Post save - there's Person in there
> person = Person.objects.get(pk=self.person)

https://docs.djangoproject.com/en/2.0/ref/models/fields/#foreignkey

> Case.objects.filter(litigants__person=self).order_by('-session__date')[0]

There's a queryset method - latest ? 

https://docs.djangoproject.com/en/2.0/ref/models/querysets/#latest
https://docs.djangoproject.com/en/2.0/ref/models/querysets/#earliest

",1523958506.0
Peggy_Ice,"In this case just skip the whole ModelForm part and make it a regular Form.

Then use the View to manually create the models.",1523921106.0
notafuckingcakewalk,"I'm assuming you're meaning to reference something like (assuming in this case `location` is a single `Location` record):

    location.persons.count()

This is not going to work, because the filter has to be a filter that would be usable as a models.Q filter. Which, in this case, just isn't possible, because there is no `__count` selector available for normal queries. It is possible to filter on count if you have an annotate attached to the queryset, but I don't believe that's possible in this situation.

You have a couple of choices:

One: Don't use `limit_choices_to` in the model definition, and instead do the filtering on the code itself. That would involve overriding any model form you are using in `__init__` with something like

    self.fields['location'].queryset = Location.objects.annotate(
        person_count=Count('persons')
    ).exclude(person_count__gte=10)

Two: Add a calculated field to `Location` called `person_count` and update the value every time a person is added to that location. Then instead of `limit_choices_to={'persons__count__lt': 10}` you'd use `limit_choice_to={'person_count__lt': 10}`

I'd probably recommend choice #1. If you're going to have to write a bunch of code anyway, you may as well write code that clearly lays out how you're filtering, rather than code that updates a field each time. The second option is much more likely to break, and it's not going to be 100% clear why it exists for people looking at the code after you.",1523906759.0
ccb621,"Set the search path in your database settings, and you should be good to go. Not sure about testing. Worst case: you can use SQLite, or Docker if available, for testing. ",1523890103.0
originaljewedlaw,"This would make a great tutorial...... 

Extra points for a separately hosted production-quality front-end such as React....",1523993814.0
SymbioticBadgering,"I'm not aware of native django utility dor that, but writing to csv in python is very simple with [csv](https://docs.python.org/3/library/csv.html) module, given that you already got the dicts iter from your query",1523854127.0
Destos,"Try: https://github.com/azavea/django-queryset-csv

Also, if you're unaware, there is a great site for looking up Django modules!

https://djangopackages.org/search/?q=csv",1523854368.0
askvictor,"When I needed to do this some time ago, I just used a ListView and set up the added this to render_to_response():

    response['Content-Disposition'] = 'attachment; filename=""the_filename.csv""'

Though that was rather painful as the template needed to match the fieldnames and you had to remember to update both.

There are also some mixins floating around: https://gist.github.com/kacchan822/24aa5c8e9e33329171754dfcb5910753",1523855927.0
shmik,"I recently used https://github.com/mjumbewu/django-rest-framework-csv

Integrated with rest framework. It probably would have been better to just do it 'by hand'.",1523865179.0
igncampa,"If you are:

* asking for help: paste the code you're having trouble with and be more specific about the issue(s)
* making a statement: yeah that happens and it sucks",1523852860.0
madtriks,https://docs.djangoproject.com/en/2.0/topics/forms/,1523863063.0
i_amwithnail,"I still refer back to the Django Girls forms tutorials section, as I think it's the clearest.  https://tutorial.djangogirls.org/en/django_forms/ If this is one of the ones that you've looked at and are struggling with, what's giving you difficulty?  Which particular bits? ",1523875960.0
diek00,"Read the Mozilla guide to html forms, many newcomers fail to understand the basics, and the official Django tutorial does not give this important topic enough emphasis imho.
https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms
I also suggest checking out the Mozilla Django tutorial as well, a bit more meaty and uses a Library for the concept. Far more interesting imo, than the done to death blog.
https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django",1523985929.0
SymbioticBadgering,"Yes, fk to another table holding the competitors prices in one 2 many relationship.",1523852183.0
delano,"If you're using PostgreSQL, you could use an ArrayField:
https://docs.djangoproject.com/en/2.0/ref/contrib/postgres/fields/#arrayfield

If not or if you need to store more structured data with each price -- like the competitor, the date of price, etc -- you would need to use a Many to Many relation which would create another table. 

Another option if you want more data but it doesn't need to be structured, you could use a JSON field.",1523856508.0
philgyford,"I think you should create a new model to store a single competitors' price for a product (as SymbioticBadgering suggests).

And then you'd want to use [model formsets](https://docs.djangoproject.com/en/2.0/topics/forms/modelforms/#model-formsets) to display the form fields for all Competitor objects related to your Product, and probably one or more extra empty fields for adding new Competitor prices. You may want to add JavaScript to allow the adding of further empty fields.

You know how in the Django Admin when you have inline admin objects for ForeignKey-related objects? You want to be creating something like that. (I hope that makes sense!)",1523986395.0
yoongkang,The variable `title` (and many things in `args`) will only be defined if your form is valid. What if it's not valid?,1523848958.0
Nicksil,"Yeah, you probably don't want to create a separate model for each and every template you're going to offer. Just create one in such a way for you to be able to assign each record/instance of the model an ID and/or name which corresponds to the template to render for the user. Something like the following (over-simplifies for brevity):

    class TemplateProfile(models.Model):
        tmpl_id = models.SmallIntegerField()
        name = models.CharField()

    class UserProfile(models.Model):
        # ...
        template = models.ForeignKey('TemplateProfile')

You would then create a template record/instance for each template you're currently offering to your users. Something like:

    template_1 = TemplateProfile.objects.create(tmpl_id=1, name=''template_1.html')
    template_2 = TemplateProfile.objects.create(tmpl_id=2, name=''template_2.html')
    # ... and so on

Then, you could perhaps [`include`](https://docs.djangoproject.com/en/stable/ref/templates/builtins/#include) the template when your main/base/skeleton template is being compiled. Something like:

    {% include 'templates/includes/{{ user.template.name }}' %}",1523830903.0
SmellsLikeGrapes,"Some people here have said what you're asking for isn't possible, but that's not true.

You can do it a few ways. One way being using having a Base model of Template, and using Proxy models to access said template. Those proxy models can then have additional functionality (though no additional fields).

The other way to do it is using [Django's ContentType framework](https://docs.djangoproject.com/en/2.0/ref/contrib/contenttypes/), which will allow you to link generic models via a foreign key. This approach is basically the polymorphic approach, and you'd probably want your various templates to subclass an abstracted model.
",1523885431.0
daredevil82,"well, there's a way you can get the model name from a string:  https://docs.djangoproject.com/en/2.0/ref/applications/#django.apps.apps.get_model

eg

    from django.apps import app
    TemplateModel = apps.get_model(app_label = 'application_name', model_name = 'model_name')
    t = TemplateModel.objects.create(user = request.user)

Then what you can do is create a templateSuffix convention in which `suffix` in the template filename is mapped to a value in `TemplateProfile`  model.

Then you could do something like 

`render_template = 'accounts/template{}.html'.format(t.suffix)`",1523830606.0
badpython,I used Django-allauth to allow users to create accounts via Google/Facebook/Oauth.  Good documentation and you can customize the login/logout/etc. templates pretty easily.,1523850145.0
danielsamuels,The whole point is that you don't need a password.,1523861683.0
unklphil,"You can use the normal double underscore notation.

Assuming your your foreign key is called `some_other_model` and you want to get the name of the other model, you can do this:

    Model.objects.values('some_other_model__name')",1523824266.0
liquidpele,"based on what you have there, you just need to ensure each field on the other model is part of options[""fields""]...   so for instance ""field1|field2|fk\_\_otherfield1|fk\_\_otherfield2""

https://docs.djangoproject.com/en/2.0/ref/models/querysets/#values      docs are your friend. ",1523842294.0
garion911,http://www.django-rest-framework.org/,1523822464.0
subrata6630,"yet
",1523820144.0
kautkaut,"This data looks okie to have 100 fields. Option 1 is the best. As for option 2, having multiple table could make it better or worst. It depends on your usage pattern. Forget option 3, storing as JSON in database doubles the effort in de/serialisation and prone to mistakes.",1523806797.0
never_safe_for_life,"Posgres has a hard coded limit of 1600 columns. I think they fixed it there because beyond that there would be performance hits, but anything under it is fine. http://nerderati.com/2017/01/03/postgresql-tables-can-have-at-most-1600-columns/

Where you theoretically would start running into performance issues is if you were doing heavy read/writes on this table and you hit your IOPS limit (maximum rate of disk reads/writes). Your solution of only querying for fields you need is a good one. Only returning the data you need is part and parcel of writing SQL queries, but gets overlooked when using ORMs. We've all gotten used to just fetching the whole row (with big benefits, like being able to populate a model object), but that can mean a lot of extra disk activity.

Moving the extra data to a separate table is also good. That way you can write ORM queries on just the data you need, and access the rest via a related lookup. 

I might combine that with #3 on your list. Have a separate table with just one JSON field that you dump everything into. I assume you only need to work with a subset of the data that's being returned by the API? So you pull just the fields you need onto the main model, and keep the rest in an easy to work with JSON blob. ",1523817179.0
booooomba,"Why do you have so many columns??

Tell us more about the data and your db model. Then we can help.",1523805536.0
pancakeses,"If you're on a VPS, you have the ability to install and use postgresql. So why use MySQL? What benefit do you see in that vs postgresql?",1523799656.0
absent_observer,"I hoped this article would supplement what'd I'd previously read.  However, it appears only to be a plagiarized rehash of a DigitalOcean article from 2016.  Google ""nginx gunicorn django mysql"" to see for yourself.  Logging in to downvote.  :(",1523816622.0
SuddenWeatherReport,Well done! Seriously this was a great read and very helpful!,1523804590.0
Later404,Many Thanks),1523830650.0
anzasb,Thanks for sharing. This is exactly how I did it before. Now I'm just using a docker. Far easier to configure. Deploying a fresh new project on a fresh new VPS takes like 5 mins.,1523847319.0
lzantal,"Why all the hassle with gunicorn and nginx? apache2 with mod wsgi runs smooth and besides the virtual host file it’s practically works out of the box. 
Yeah yeah less memory, less this and that. That’s just premature optimization. 
Once your project gets so big that it can’t handle it you can always migrate. 
However I have projects running on over 500k rows of db with 40+ tables and close to 4K requests a day on it. Oh and this one also runs MySQL. I prefer Postgre but when I inherited it, it’s been running just fine. Why change what works... ",1523812328.0
duppyconqueror81,"Try to declare your form field with the « input_formats » widget. Look it up! I’m on my cell but if you’re still stuck in an hour I’ll copy paste you stuff from the computer.

EDIT: here is how I do it:

    class MyForm (forms.ModelForm):
        date = forms.DateField(widget=forms.DateInput(format='%Y-%m-%d'), input_formats=('%Y-%m-%d',))
        def __init__(self, *args, **kwargs):
             super(MyForm, self).__init__(*args, **kwargs)

            self.fields['date'].required = False
            self.fields['date'].widget.attrs['class'] = ""form-control""
            self.fields['date'].label = str(_('Date'))
",1523801561.0
ramse,You're missing an s and its a list https://docs.djangoproject.com/en/2.0/ref/settings/#std:setting-DATE_INPUT_FORMATS,1523796883.0
duppyconqueror81,"I always use something like Flatpickr on the frontend, but maybe it’s a client side thing",1523805405.0
Werkelmann,"Check out Django Rest Auth \([https://django\-rest\-auth.readthedocs.io/en/latest/](https://django-rest-auth.readthedocs.io/en/latest/)\). It is a Django App that already routes for registration, login, password reset etc. Furthermore it supports Social Media  Authentication.",1523786016.0
i_like_trains_a_lot1,"Firstly, it is important to decide how will authentication be checked? JWT? Session cookie?

After that, the usual way is having a login route where you check the credentials, and if they prove to be valid you return a token/JWT/cookie that will be used further on to get the current user's identity.",1523781198.0
basojun,"Checkout my minimal configuration, might help you.

In your **settings.py**

    INSTALLED_APPS = [
    ...
    'rest_framework',
    'rest_framework.authtoken'
    ]
    REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    )
    }

In your **models.py**

    from django.db.models.signals import post_save
    from django.dispatch import receiver
    from django.contrib.auth.models import User, Group

    @receiver(post_save, sender=User)
    def create_auth_token(sender, instance=None, created=False, **kwargs):
        if created:
            Token.objects.create(user=instance)


In your **urls.py**

    from django.urls import path
    from rest_framework.authtoken import views
    
    urlpatterns = [
        ....
        path('api/login/', views.obtain_auth_token),
       ....
    ]

now call login url, which returns token, use this in the header for further calls (Authorization Token *token*)",1523949572.0
chjacobsen,"Django Rest Framework is excellent. Use it unless you have specific reasons not to. Then use some sort of token system to handle authentication. There are several options available that work well with DRF, including one which is built-in and one using JWT (provided by a third party) which is very nice.",1523786797.0
Improvotter,Why would you use Django in a microservice architecture? Seems a bit heavy and too much for just 1 service. ,1523790198.0
jedi_stannis,"https://docs.djangoproject.com/en/2.0/ref/models/querysets/#values

MyModel.objects.values('col1', 'col2')",1523747796.0
i_like_trains_a_lot1,Have you bothered reading the documentation?,1523781369.0
Investisseur,Meta discussion ahead: This is the type of stuff we should be posting and discussing instead of “how do I add <insert JS framework> to my Django app (also idk what DRF is or how HTTP works!)”,1523746150.0
core_dumpd,"Some random things that I've found with Django/Docker/EB on AWS...

I like to leave termination of SSL on the load balancer in AWS, that way your image doesn't have to know about your cert at all and updating it on AWS is pretty painless. I'm certain Azure must have something similar. We still need Nginx to re-route from http to https though, as there was no way to do that on an AWS ELB.

We also found that the python 3.6 stretch image does NOT have any locale support by default, so some things like formatting dates or currency may blow up unless you install them. Something along the lines of [this](https://stackoverflow.com/questions/43356982/docker-python-set-utf-8-locale) sorted it out.

And, we also offloaded static/media files to S3 to keep our instances minimal and 'stateless' - but the django-storages lib we ended up using did not fully support all the filesystem methods that filebrowser expected, and it also turned out to keep an internal cache of 'files' (i.e., broke the 'statelessness'). It still works, just leads to some weird behavior in things like filebrowser where sometimes a recently uploaded file is a file on one instance and a directory on another. This is also likely a side effect of how S3 works as well though. On the up side - we're able to handle our average traffic load (which is not high by any means, but also not non-existant) on two t2.micro instances.

For uwsgi we went with a very basic 3 threads (recommendation was 1 per vCPU + 1), and instead let AWS auto-scaling spin up more instances based on avg bytes out per instance threshold being reached (or how much actual HTML we're serving up) and it's worked great to date.  

Lastly - we run uwsgi via a bash script, and do a few additional things there like check our nginx config and start it, then spin up uwsgi. The Docker stderr/out was supposed to be streaming to CloudWatch but we kept losing the stream each time we'd deploy an app update via elastic beanstalk cli. It turns out that they do a kind of 'log fingerprint' and if they believe they've seen that log (based on the first line) before then they ignore that stream. So if you're on AWS, don't start your bash script with 'echo Checking Nginx/Starting Nginx' - start it with a timestamp!

Anyways, we have a mezzanine + cartridge setup running under this config, and also a separate DRF API setup, and they've both been rock solid under our busiest times, all running on very minimal t2.micro instances (~$12/mo no reserve).",1523757817.0
kurashu89,"Observations from your uwsgi file

* harakari mode, this kills a worker of it takes too long to respond. The request is lost, but you also kill a misbehaving worker. You should set a timeout in your ingress as well. 
* max-worker-requests/time this kills a worker after x requests or x seconds. This helps keep memory leaks from burying you. 
* thundering-herd is a thing to keep in mind if you start seeing accept contention. 
* post buffering is a must, this cleans out any thing left in the body. Without it, you need to be sure to always consume the body. It's a lazy but useful fix. 
* 8 proccesses seems rather high, usual rule of thumb is (2x cpus) + 1, but I don't know your situation, just watch out for cpu contention.
* threads I'm not crazy about, but just be sure your app is io bound and thread safe, otherwise you'll run into issues with your workers. Task scheduling can also get weird with the GIL and threads and multiple proccesses (not sure if uwsgi does cpu pinning off hand).
* you might need to increase your listen queue as well, this solved a number of problems for us, but you need to also increase it on the host box and run the container in privileged mode (the capsys functionality might alleviate this), increasing the listen queue was a last resort for us.
* another pain point for us was the header buffer size. we cranked this all the way up. Our actual issue was cookie sizes but this was the quick and dirty fix. ",1523769916.0
TBNL,"Some very insightful answers in this thread, thx!

We're in a similar process of dockerizing (Django) applications and (almost certainly) moving to Kubernetes.

Plan so far would be to have a pod with one container for the app (uwsgi) and another one for nging (openresty in our case), following the one process per container practice. 

Anyone having good/bad experience on such a set up?",1523777238.0
haloweenek,"Sorry, but lacking nginx , how do you serve static/media files to ALB ?",1523779445.0
andrey_shipilov,Kubernetes lol. Stopped reading at this point. ,1523755101.0
john-wdv,"Suppose you have an instance of a repair order in some function at views.py:

    order = RepairOrder.object.get(id=1)

You can access specific fields like this:

    ro = order.ro_number
    type = order.job_type
    ...

And send them to the template with something like this:

    return render(request, 'template.html', {'ro_number': ro, 'type': type})

Therefore you really don't need extra classes for this case.

If you are going to work with forms, you can create inputs individually. See [here](https://docs.djangoproject.com/en/2.0/ref/forms/api/#more-granular-output) for more details.",1523738883.0
pat_the_brat,"If I understand correctly, you want one view with a list of orders, so yes, a for loop is good for that. Pseudo-code off the top of my head for the list template:

    {% if repair_orders %}
    <table>
     <tr><th>Headers here</th></tr>
      {% for repair_order in repair_orders %}
       <tr><td><a href=""/otherview/{{ repair_order.ro_number }}"">{{ repair_order.id }}</a></td><tr>{{ repair_order.whatever_other_field }}</td></tr>
      {% endfor %}
    </table>
    {% else %}
    No orders found
    {% endif %}

Then you just pass one repair order to the details page:

    <h1>{{ repair_order.ro_number }}</h1>
    <p>{{ repair_order.additional_details }}</p>

Obviously, format the HTML properly.

Also, where are TECHS coming from? Is it a hardcoded list of tuples and employee names? If so, Tech should be a model, so you can add new techs to it if you hire a new guy, and be a ForeignKey rather than Charfield.",1523739607.0
backprop88,As far as I recall vue can be added as a straight JavaScript tag like jquery can.,1523691457.0
el-gato-loco,Why don't you create an independent frontend project and just talk to the backend via API which you can build in whatever you want? That seems as the most sane way to do it.,1523699468.0
dirtybutter,"I'm just about to release a package that generates vue boilerplate and  scaffolding (stores, routers, components) based on a django project.  an alpha version should be ready today or tomorrow.  it's still in alpha, but it will still be usable and time-saving even if it's broken.

I'll keep you updated

edit: /u/itmjack the weather was nice so i was outside all weekend and did very little coding. i didn't get as far as i expected, so it will be next weekend at the earliest ",1523698766.0
synw_,You can try my [django-vitevue](https://github.com/synw/django-vitevue) that facilitates the integration of frontend parts in different Django modules. It has routing and a few helper methods to be productive quick on new projects. It might be too opinionated though,1523704166.0
PulseReaction,"I'd advise that you take a look into Laravel Mix (it's a NPM package). I've been toying with the idea of adding that to Django to test it, seems like it would work without any issues.",1523714756.0
,[deleted],1523666869.0
Brachamul,"What you're looking for is the default interface for [many-to-many](https://docs.djangoproject.com/en/dev/topics/db/examples/many_to_many/) relations.

For example, for the following code :

    class Category(models.Model):
    	name = models.CharField(max_length=64)
    
    class Game(models.Model):
    	categories = models.ManyToManyField(Category)

Will render the following widget in the admin :

https://i.imgur.com/qT33v4V.png

Note that you can select multiple categories just by pressing CTRL and clicking several.

So basically, instead of defining your work types in your code, you'll do it in your database via the admin interface. Makes it easier to manage too, since you'll easily be able to add or remove work types without having to release a new version of your code.",1523671190.0
,[deleted],1523605782.0
,Your gonna want to store the ip address or page refreshes would count as 2 impressions.,1523636095.0
LeavesEveryGame,"You probably want to use 'virtualenv' instead of 'home':

    virtualenv = %(base)/Env/%(project)

Also you might want to create the virtual env to solve the following error:

    Python Home is not a directory: /home/teddycrepineau/Env/contoursandcolors",1523600729.0
Fun2badult,I had struggled and still unable to deploy the simple site I made. Honestly I thought Django was difficult learning but now I realize hardest part is the damn deploy ,1523633910.0
rawmx24,"See if this helps you, its come in handy for me. [How To Set Up Django with Postgres, Nginx, and Gunicorn on Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04) ",1523642242.0
madtriks,Are you usinb a virtualenv to contain you dependencies? ,1523625780.0
bmoe872,"I've seen this a few times, its definitely a user permissions issue.


What user do you have for most of this? I would start there and try to make sure that the virtualenv you have setup is for the same user that you have all the django files under. 


Nginx can be owned by the root user, but your uwsgi.ini should be owned by the user that the python virtualenv is owned by (or at least a part of the same group)


Without seeing anything else, thats where I would start.",1523636394.0
cocochito,"Hi! I may not be too helpful, but I've deployed like 10 sites using Django (Python 3.5) + Gunicorn + NGINX. It seems like you have an issue with your virtualenv. I see you're using both? virtualenv and virtualenvwrapper? You should use one or the other, I would recommend virtualenvwrapper, remember, it must point to your Python version. I could help you with ""my way"" of doing it, since it's the only one I know.",1523643795.0
,[deleted],1523598748.0
jZma,"Im not sure if Iunderstood you but let me tr: When defining your models ForeignKey can have an argument called related\_name. So the Cost model would have a field

  


box = models.ForeignKey(Box, related\_name=""costs)

  


When defining serializers for the box model now you may have a field named costs (many=True) that will access that FKs in reverse",1523595803.0
mroximoron,"On postgresql and you only need it for reading (not writing)?

Add a SerializerMethodField to the serializer, then annotate the costs on the box model using array_agg.

",1523621372.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1523590144.0
ccb621,"Skip the libraries, and integrate directly via Braintree. This will give you credit cards and PayPal. We did something similar with PayPal’s REST API at edX: https://github.com/edx/ecommerce/blob/master/ecommerce/extensions/payment/processors/paypal.py . The Stripe integration is more akin to what you’d do with Braintree: https://github.com/edx/ecommerce/blob/master/ecommerce/extensions/payment/processors/stripe.py

Also, unless you absolutely need PayPal (wallet), Stripe is also a good processor: https://stripe.com/",1523575185.0
maxtopus,"Your question is a bit vague. However, if I understood correctly you can solve this by using environment variables and os.environ to get the values.",1523562699.0
urkh_,Check out django cookie cutter project. ,1523623647.0
davidkwast,Have you tried to customize a queryset using https://docs.djangoproject.com/en/2.0/ref/models/querysets/#month and https://docs.djangoproject.com/en/2.0/ref/models/querysets/#day ?,1523552487.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1523547150.0
Cictani,"You could reinstall the package then do:

    python manage.py migrate <app-label> zero

Replace \<app\-label\> with the name the app is called. This will remove all migrations. After that you can uninstall the package again.

I don't know the package but normally all python stuff should be included with a package or it should have other packages as a dependency. But maybe the package isn't maintained anymore and so it depends on stuff which doesn't exisit anymore?",1523532783.0
whatever_meh,"Yes, just drop the two tables manually. ",1523535059.0
the_cin,What do you see in the error logs ?,1523519641.0
Yablan,"Set DEBUG flag to True temporarily, so you can see more details on the error.
Also, add Papertrail Heroku resource for viewing logs.",1523566419.0
farridav,"Have you checked that the file is not in the bucket ? I've encountered similar issues before when I've got incorrectly configured permissions.

And unless stated otherwise, I think S3 shows a 404 for unauthorized access (to obfuscate)

I'd take a look in the S3 bucket using the aws console or s3cmd/aws client 

Just a thought..",1523518678.0
pat_the_brat,Django 1.1 is nearly 9 years old. Try upgrading to a version that isn't end-of-life.,1523529301.0
ethereal_bitch,[Django code snippets if necessary](https://imgur.com/gallery/Gizw3) ,1523518096.0
farridav,"Perhaps try the official Django tutorial, from start to finish.. you might find the act of writing the code helps you more than watching the videos.

Also, once built, you could always adapt the tutorial application to meet your needs.

Also, if your new to python, perhaps start with python 3 and Django 2

https://docs.djangoproject.com/en/2.0/intro/tutorial01/

Or if Django 1.9 is a must

https://docs.djangoproject.com/en/1.9/intro/tutorial01/
",1523518414.0
askvictor,Django 1.9 is out of support and will become a security hazard. Use 1.11 (long term support) if you can.,1523530063.0
xentralesque,Why the hell does every random website do this now? https://i.imgur.com/gnCKQhK.png,1523549795.0
galqbar,"It’s good to have Django support.... but why would you want to use this database over Postgres? I get a bit concerned about technologies with very small user bases, especially if there isn’t a clear upside to them?",1523593997.0
kosciak9,"I looked up their site, but couldn't really find any direct info about this project. What is it? It's PSQL replacement? ",1523527102.0
Volcyy,"Currently trying to do the exact same, except that I'm using a `ModelMultipleChoiceField`. Did you figure this out yet by any chance?

Also, your indenting seems fine.",1523656620.0
thereShouldBeaLogin,"Try django-datatables, with ajax",1523509222.0
Cictani,"So basically you have 4 buttons:

* Search table 1
* Search table 2
* Search table 3
* Search all

?

if that is the case add a hidden field to the form and in that you can store a value which indicates which choice was made when one of the buttons was pressed. Than if you rerender the page you can check what choice was made and hide specific tables.",1523510165.0
CaptainDudeMax,"I don't completely understand your issue, but I've used dynamic filtering with AJAX before. You could write if statements in your view that are driven by a variable passed through AJAX. 

Does that make sense? This is an add-on free solution. ",1523548429.0
singleton11,"No, you can't because you don't have event loop, and also, architecture of django doesn't allow to use asyncio framework, but you could see https://channels.readthedocs.io/en/latest/index.html, it requires additional config of your environment (I mean installing daphnie, broker etc) but it's a way to do async stuff within sync django core",1523435247.0
tomchristie,"> Now I have to make it asynchronous.

You can't.

Django, Flask, Pyramid etc... use multiple threads, rather than asyncio tasks for concurrency. Multi-threading *is* less resource-efficient than task-based concurrency for scenarios such as making outbound HTTP requests, but there isn't really any way around that, and using channels isn't an answer here.

Channels allows an async webserver to hand over events to a multi-threaded backend, and lets you support WebSockets, broadcast notifications, and long-lived connections. It won't make the backend ""asynchronous"" tho'.

You most likely don't need to ""make it asynchronous"". Your server will still be handling concurrent requests/responses. It's just that each running process won't be capable of handling *as many simultaneous* requests/responses that an asyncio based framework would be able too.
",1523438465.0
jarobase,You could use the Django REST framework and create a asynchronous daemon that communicate with Django through this API. That's what I have done previously in my project. It is  quite easy to set up and it will be easier to adapt it with more functionalities in the future.,1523442146.0
Nicksil,"[Navigator.geolocation](https://developer.mozilla.org/en-US/docs/Web/API/Navigator/geolocation) is the JavaScript geolocation API.

[Using geolocation](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/Using_geolocation)",1523427436.0
i_like_trains_a_lot1,"For location, I would try to get the geolocation of the user via Javascript api, from frontend and if the user denies it, use the IP geolocation as fallback. I have used the open street map api for this a while back (for converting IP to geo coordinates).

Have a look at https://wiki.openstreetmap.org/wiki/Nominatim, if you can afford to host it and maintain it, could probably save you a lot of money in the long run by not paying some 3rd parties for quotas.",1523437658.0
richardcornish,"The ""Django"" way is with [GeoIP2](https://docs.djangoproject.com/en/2.0/ref/contrib/gis/geoip2/). But you can integrate both Django and HTML5 geolocation. Here's a project that integrates both. https://github.com/richardcornish/emojiweather",1523470509.0
canada_eric,I think your best option would be to get their IP. A good example is the geocats website. Uses IP to get location. Only works if their not spoofing ip or not using cons though. ,1523426202.0
,[deleted],1523430012.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1523419949.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1523413714.0
fubarx,"Nice guide. A few extra points:

- Might want to split all settings files into regular settings and 'local' settings that contain the SECRET, the API keys, database password, etc. Import the local setting (if it exists) at the bottom of the normal setting file.

- Also look into using environment variables so you can easily switch between dev, staging, production, etc.

- Make sure you have a .gitignore and specifically exclude the local settings files from getting pushed out. You don't want your private settings pushed out to github.

- To be extra safe include a 'template' local setting with only the keys but no real values and instructions so someone downloading a fresh copy of the project knows what they have to customize before starting.

- Make sure that .gitignore file is in git as well so if someone forks the project they don't inadvertently push out their own local settings.

- If the project is to get deployed somewhere, think about using an automated server install script. Something to bootstrap the whole deployment. Or use Docker and containerize the whole thing. Even better, do both.

- Have a script to handle updates automatically. For example bring down server, backup old code, update new code, run migrate, bring server back up again, verify install, etc. And try to make it as reversible as possible. 

Your future self will thank you and want to buy you a beer.",1523456978.0
genesem,nice guide btw.,1523451530.0
andrey_shipilov,And why is the project template is not enough anymore? Hm? That's the whole point of having a cookie cutter template to ease the project setting up.,1523430123.0
fairytale81,"Hate this bunch of settings files, too over engineering and it becomes hard to maintain with time.

Things could be much more easy and less complicated just using environment variables and a single settings files.

Also it's impossible to use when you have more than one setup of the same project like more than one client. ",1523777493.0
Poromenos,I would recommend using pipenv instead of virtualenv/virtualenvwrapper/pip.,1523457643.0
booooomba,It is missing „accounts“.,1523397658.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1523390362.0
ccb621,Are you using Django-filters for your parameters? The django-rest-swagger should display your filters as query parameters. ,1523400304.0
porksmash,"I'm also using django-rest-swagger and it does document my optional GET parameters used for filtering. I think you might have to implement them by specifying a filter_class on your DRF view for it to pick them up. I'm using the django-filter integration for filtering.

https://swarfarm.com/api/v2/docs/#!/monsters/monsters_list

Edit: Looks like you could also define your own schema in DRF, where you can list out query parameters explicitly rather than have them auto-discovered: https://marcgibbons.com/django-rest-swagger/schema/#advanced-usage and http://www.django-rest-framework.org/api-guide/schemas/

",1523394375.0
sultan33g,Also see this for plans to update from CoreApi https://github.com/encode/django-rest-framework/commit/e5781440fa6ccff09abc6e0566bdfdd9b84a80a1,1523440868.0
farridav,"As /u/porksmash mentioned, using the args as a filter (see http://www.django-rest-framework.org/api-guide/filtering/) as opposed to manually pulling them out of request.GET _should_ pull them into the swagger view.

Failing that, you could (as /u/shahda/ recommends) document them in the views doc string, which will get pulled into the swagger detail for the given endpoint.",1523430512.0
sultan33g,Django Rest Swagger is no longer maintained anymore. Use DRF-Yasg https://github.com/axnsan12/drf-yasg,1523440674.0
420Phase_It_Up,I would use the Sphinx documentation generator. It is a Python package that builds documentation for a project based off the doc strings in your code. I have used it to generate documentation for a couple of projects including a Django project with DRF. This package is used to generate the official documentation for the Python standard library. You can look at the official Python document as an example of how to use this package. It can also document C code too but I haven't tried that. I hope this helps.,1523385029.0
TiredMike,Why not use the official docs provided by drf?,1523397489.0
dershodan,"Look into `django-rest-swagger`. As far as i can tell this is state-of-the art for rest APIs. And it will force you to follow best practices.
",1523385167.0
roysta,"I used pandas to query my Django model into a DataFrame and manipulate into the correct format.  Serve that structure with a simple JSONView.  On your page/template, you can use any JS framework, but I found Google Charts to be quite simple and easy to use.",1523379728.0
Brandhor,pygal is also good especially if you need to export the chart in png/svg since it's made in python and not javascript,1523380182.0
supra621,"Personally I use D3.js. Not saying it’s the best, but it’s the one that I know how to use.",1523376039.0
dirtybutter,"obligatory, javascript charting has nothing to do with django

that being said, i've used c3js in the past with much success.  Highcharts is also an excellent paid solution.

but be careful with d3.  it is a visualization library.  if you want charting specifically, you will have to write a lot of boilerplate or put a library/framework on top of it.  that's what c3js is",1523378325.0
synw_,"Nowadays I recommend generating your charts in pure Python with libs like Bokeh/Holoviews or Altair. They use a declarative approach that make the things simpler and more data focused. A big selling point for the backend guys is that you don't have to write any javascript

Here is some [example code for Bokeh](https://github.com/synw/dataswim/blob/master/dataswim/charts/bokeh.py) to draw charts from Pandas dataframes. I'm working on [a Django lib](https://github.com/synw/django-chartflo) that uses these tools: some worker runs a data pipeline periodically or on an events base to generate static charts that are cheap to serve \(no queries\)

\[Edit\]: link",1523451863.0
pat_the_brat,"Why do you keep asking jQuery questions on Django subs? This is not a Django question. It has nothing to do with Django.

Why don't you post this on /r/jquery if you have problems with jQuery????",1523372740.0
duppyconqueror81,You should look at PLUpload. It facilitates the client side of things.,1523375343.0
chiproller,"Coding for entrepreneurs has a great channel on YouTube that I highly recommend for projects (start to finish) after grasping the Django docs polls tutorial.  Joincfe.com for the main site.

Look up Try-Django-1.9 by Coding for entrepreneurs on YouTube.  It’s a blog based project.",1523372445.0
ckinsey,"We really like Wagtail as a CMS framework, although it does require writing a good bit of code to get started since it doesn’t ship with any prebuilt content types (think post, page in Wordpress land). 

That said you can do a lot rapidly and it’s worth checking out. ",1523368324.0
shabda,"Do you want to setup and use a Django blog app to learn about Django? Or do you want to do have simple blog?

If it is the first, see: https://djangopackages.org/grids/g/blogs/
If it is second, you are better served by Wordpress/Jekyll/Pelican.",1523369784.0
Michaelyin,"I think you really should take a look at [Wagtail](http://wagtail.io/), it is a very powerful CMS framework based on Django.

Using Wagtail, you can build CMS system (not just blog) using Django as you like and add customize it with time. 

If you want to build a blog using Wagtail, just check this project [wagtail-bootstrap-blog](https://github.com/michael-yin/wagtail-bootstrap-blog), it is a blog project using Wagtail, the theme is Bootstrap, you can quickly make it urn in your local env to get started. Now it supports the latest stable Wagtail 2.0.

And you can look at this [Wagtail Tutorial Series](https://blog.michaelyin.info/wagtail-tutorials/), the official Wagtail doc is not easy for newbie developer.
",1523411623.0
Poromenos,"Are you looking to blog about django, or to write a blog on Django?

If the latter, I'd advise not to. Static sites are orders of magnitude more convenient for blogs. I wrote my own backend (in Django) for my blog, it served me very well for years but static files are just so much easier to deploy, scale, host, etc etc. I bit the bullet and switched over to Lektor over the course of two days, and now [my site](https://www.stavros.io/) is hosted on multiple edge nodes for lots more speed.

Plus, hosting is free and all I need to do is git push.",1523369766.0
,"I'm also learning Django and discovered Mezzanine, a widely used Django based site engine.  It was easy to build and looks easy to customize.

    virtualenv env
    cd env
    source bin/activate
    pip3 install mezzanine
    mezzanine-project myproject
    cd myproject/
    python manage.py createdb
    python manage.py runserver
    vi myproject/local_settings.py
    python manage.py runserver

http://mezzanine.jupo.org
",1523375202.0
s0m-81,"As others have suggested, both Mezzanine and Django CMS are great options. They are arguably easier to use straight out of the box. 

Wagtail (https://wagtail.io/) is my pick of the bunch. I've used it when creating a more customised WebApp. There's a bit more heavy lifting to do at first - but if your familiar with Django's Models, Views, Templates you have a lot more flexibility. The Page Editor has a great look and feel to it. 

Sites Made with Wagtail
https://madewithwagtail.org/

Open Source / Demo Projects:

* https://github.com/wagtail/wagtaildemo
* https://github.com/jordij/jordijoan.me
* https://github.com/springload/awesome-wagtail

",1523387538.0
,This is a git issue. https://stackoverflow.com/questions/2998832/git-pull-fails-unable-to-resolve-reference-unable-to-update-local-ref,1523361804.0
bjorn6,Think it has to be your local project name. Not one of your custom apps but the core one.,1523364222.0
andrey_shipilov,The main error here is Heroku.,1523366205.0
ronaldl911,This one isn in English. All the other ones I found was in Russian.,1523344001.0
dirtybutter,"your dpaste is now giving a 404, but if I remember what I said, your problem is with how javascript hoists variables and function declarations

you essentially had something like this:

    document.body.addEventListener('click', handleClick);
    var handleClick = function () {
        console.log('hi')
    }

the problem here is that you are assigning an anonymous function to a variable (a function *expression*).  Javascript hoists all variable declarations to the start of the scope before the code is run so you don't get a `ReferenceError` when accessing the variable before it is declared, however it is still undefined until the line with the assignment is reached.

In otherwords, you're passing `undefined` to the click handler, so nothing will happen

Javascript treats function *declarations* differently than the function expressions above. When a function is declared, it is hoisted (like above) but it is also callable everywhere within its scope.

this should work (given there aren't more errors):

    document.body.addEventListener('click', handleClick);
    function handleClick() {
        console.log(111)
    }


to clarify the difference:

function expression:

    var handleClick = function() {}

function declaration:

    function handleClick() {}

Some camps consider it best practice to manually hoist all variables to the scope start by declaring them before usage. But to the jsengine, it doesn't make any difference, but accessing variables or functions before definition is a recipe for failure, so it's very important to learn how javascript hoisting works

Also, I don't know if that's the only problem with your code since it's no longer there",1523352449.0
pat_the_brat,"Django is a back-end framework, so it does not submit forms using ajax. Trying asking a jquery or javascript sub?",1523352297.0
ronaldl911,Started a little Telegram group for Django Developers if anyone's keen to join. :) I couldn't find an English one so started this. ,1523338279.0
Nicksil,Maybe have a look at [Wagtail](https://wagtail.io/).,1523325439.0
,"Check out Mezzanine.

http://mezzanine.jupo.org",1523378420.0
Michaelyin,"If you have no dev skill and want a CMS to help you get started with some clicks, try Wordpress.

If you have dev skill and want a good cms framework from Python world for you to extend feature step by step, take a look at [Wagtail](https://github.com/wagtail/wagtail)

The wagtail official doc is not very easy for newbie developer, you can read this [wagtail tutorials](https://blog.michaelyin.info/wagtail-tutorials/), it includes a starter blog project based on Bootstrap. I think it can help you.",1523330661.0
django_throwaway_1,"If you want to make a blog the general feeling I see now days it to use a static site generator and host through something like GitHub pages.

If you want to remain fully python, why not try Pelican and host on netlify?
https://blog.getpelican.com/",1523425334.0
ccb621,"There really isn’t a great competitor to WordPress, regardless of language/framework. The community of plugins, themes, etc. built up over the years is quite hard to duplicate. ",1523327039.0
never_safe_for_life,"Not really. A CMS is way more complicated to build than one might think. The incumbents have hundreds of thousands of hours of open source time in their core and plugin ecosystem. As tempting as it is to want to use the latest and greatest language/framework, that's not a high enough bar for an open source community to start from scratch. A CMS for Django? Yeah let's do it! But wait, Ruby on Rails is hot now we should build one for that. Oh, wait I'm being quaint. Now it's Go.

Last time I was in this space Drupal was what you used if you didn't want to suffer through Wordpress. ",1523342188.0
gsousa92,wagtail,1523355079.0
cakeandale,"May be worth taking a look at [django-rest-auth](https://github.com/Tivix/django-rest-auth), it's a package [suggested by DRF](http://www.django-rest-framework.org/api-guide/authentication/#django-rest-auth) that should have the functionality you're looking for built in so you shouldn't have to worry about mis-implementing it and inadvertently creating a security hole.",1523326577.0
ramse,"> I would/have to design my own login and signup forms and IIRC this can be a bit tedious with django-allauth.

You have to do that regardless of what you use, django-allauth just comes with relatively plain looking forms and really styling them is very easy.",1523311847.0
flipperdeflip,"None of them are perfect. Django-allauth is cool unless you need OpenID Connect or something else non-trivial, then you'll have to dig it out and implement it yourself or navigate the sprawling forest of forks..",1523358355.0
georyb,"Have you had a chance to decide? I'm deciding on this now and it seems that Django\-Allauth is lacking integration with Django\-REST\-Framework, while Python Social Auth has a library which integrates authentication for REST API later. ",1528415541.0
pydanny,"More awesomeness from Shabda Raaj, one of the earliest Django people from outside of Lawrence, Kansas!",1523316769.0
dcalsky,"Nice lib. I was confused by importing an existed databases in a period. 😂

It's what I actually need.",1523354573.0
esdio,"Make them 15 characters and then don't worry about it?

Also if these are going to be printed out or retyped you may want to eliminate characters that are easily confused like ""0"" and ""O"" in exchange for a modest loss of search space.",1523298184.0
ccb621,"How much are the vouchers worth? What is the likelihood of an attack? The proposed solutions are nice, but I wonder if you are solving a non-issue.

Also, some merchants use a checksum for coupon codes rather than random strings to solve this problem. ",1523297608.0
jeremylow,"You have a couple options: 

- rate limiting (through your web server); 
- introduce a delay in the backend processing of, say, 100ms; 
- use a post request to enter the code;
- captcha

Etc. Mostly I’d say number one is pretty reliable when combined with using a post request, but I guess it also depends on how long you plan to have the site up. Have you considered combining the code with an email address and requiring both for validation?",1523293431.0
oliw,"IP-base rate limiting is great until you're facing a botnet. Which is always, these days. And GET/POST are both entirely mechanisable. Get is somewhat lazier and unconventional for a modern form submission so I'd stick to post.

2,821,109,907,456 combinations *would* take a while to chew through but if attackers see an open door, you also have to offset the server time they're taking up. And how much of a pain in the arse it becomes when a customer's code gets used.

You can be defensive here without being *really* obstructionist.

I personally like SMS-validated registration. Even if you don't need proper registration. Verify the user owns a specific phone number. It gives you one data point you can rate-limit against. Why not email? Because we all have unlimited email addresses either through plus addressing or `oli+1@example.com`, `oli+2@example.com`, `oli+3@example.com, .. or through anonymous services. And paired with looking at the IP, it allows you to perform a fairly solid region lock. If you only sold the things in the UK, you can probably hell-ban or layer a captcha on the hits from China, Russia, etc.

If you're worried about costs here, a unlimited text plan and a dongle and an instance of Gammu SMSD is a great way to handle this on the smaller scale for under $100.

And if you're making printed vouchers, don't underestimate the power of a QR code for packing in data. You could expand the code to 400 characters without any additional inconvenience, and it *looks* secure too. Apps like https://github.com/schmich/instascan help do this all in-frontend, just posting you back a code.",1523305920.0
TunaBoo,"Limit to one per ip per second

Gives you a head start against brute force",1523293219.0
booooomba,"Can anybody (meaning non registered users) redeem it?

I'd definitely use a form post. Then just limit the amount of tries per user (session) to 3 times or whatever else you see fit.",1523293298.0
synrb,"Making it hard to iterate for the attacker is the key.  You can't complelty stop a talented attacker.  

The suggestion to sleep before returning the response is a good start.  Even a full second isn't that bad for the end user.

You can eliminate 90% of automation by making the client execute javascript to successfully send a request.  Create a cookie using client side JS, and verify the cookie on the server side before sending a response.  This will at least eliminate the curl attacks and will force any attacker to use a real browser of they want to brute force you.",1523317966.0
afiefh,"You can't prevent it, but you can make it unfeasably hard.

1. Longer codes or added pins. Basically increase your degrees of freedom.
2. Add a delay before returning.
3. Use CSRF + Use JS to generate a time based cookie in your submission form then verify that the timestamp was generated in the last 5 minutes. Obscurfate the timestamp to deter 90% of script kiddies.

If someone is determined enough to get past all these measures then they are most likely talented enough to have enough money to buy your product anyway.",1524472404.0
Nicksil,Do [this](https://docs.djangoproject.com/en/stable/intro/).,1523293514.0
icehaunter,"Hey mate!
First of all, congratulations on finishing a publishable project.

Secondly, please, please don't do a thing if you know it's wrong: your ""p.s."" just says that you know you are posting to the wrong subreddit - why are you doing this then?

Thirdly, a Google search ""django free hosting"" produces multiple relevant results including a Quora question - you could've looked into those before making (multiple) posts.

Lastly - best free options for you are either  [PythonAnywhere](https://www.pythonanywhere.com) or [Heroku](https://heroku.com) - both provide great free tiers and will be more than enough for you. Heroku provides a custom url on top of that, if that's relevant.

Have a nice day! ",1523306804.0
booooomba,Pythonanywhere,1523277000.0
Lord_Humongous,[The exception page will filter some of your settings.](https://docs.djangoproject.com/en/2.0/ref/settings/#std:setting-DEBUG),1523275508.0
Thingdeux,"Good info, it’s also worth mentioning that if you use the Database at all, running with debug true is basically creating a memory leak:

From the documentation:

“
It is also important to remember that when running with DEBUG turned on, Django will remember every SQL query it executes. This is useful when you’re debugging, but it’ll rapidly consume memory on a production server.
“",1523280638.0
xBBTx,"The argument for having django serve your static files is bullshit anyway. In a staging/acceptance environment you want to get as close to your production environment (to be) as possible, so staging environment is the perfect location to figure out how to configure nginx properly.

W/r to the arguments 'you will never guess the url', also bullshit. You'll probably be sharing that URL with your client(s). You have no idea who they further share that URL with. On top of that, I seem to remember a staging domain of mine having been indexed by Google, even though I was the only one accessing it. My suspicion at the time was that URLs entered in Chrome somehow made it to Google's search index anyway.

Take the safe approach, use `DEBUG = True` only in localhost development.",1523277654.0
asingjr2,great info,1523308784.0
spookylukey,"Never put DEBUG=True (or use the development server) on ANYTHING BUT YOUR PERSONAL DEV MACHINE.

For all deployment, **including internal to a LAN**, see https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/  . **Deployment to a LAN is 'production'**.

Layered security and defence in depth means your Django app should assume your LAN is hostile - because it probably is. You can do LAN port scans from a malicious web page, for example. Anything you do not directly control you should assume to be hostile as far as possible.
",1523441844.0
,[removed],1523287051.0
,[removed],1523268440.0
,[removed],1523267418.0
andrey_shipilov,"Dev server automatically uses correct locations for static dirs in your project and apps. You don't need to do anything while developing. Only on deploy, “collectstatic” command remotely.
",1523259242.0
fafafefefofo0,I have it set up where I use the settings for local serving if DEBUG is True and remote serving is only used otherwise.,1523231775.0
inceptivecss,"By default, Django's built-in runserver command will serve up the static files directly, no collectstatic required. However, since a good testing environment mimics production as closely as possible, that's not really the best solution.

In my experience, the better way to go about testing a close-to-production setup is to automate the deployment process, either by a Fabric script or something else. But the idea is that you want to type a single command and have it automate updating the install on the server, run the collectstatic command, reload Gunicorn, and anything else that needs done. Then you don't have to worry about remembering to do the same thing each time, it just happens when you run the deploy process.",1523241351.0
allredb,"I'm not sure what I have set up differently but I actually don't have to use collectstatic during development, it uses the files in '/static'  rather than '/collectedstaticfolder', maybe it's because I use the built in development server?  When making a change to the live site which uses nginx/gunicorn I have to run collectstatic.

I think you could just use a symlink to your css files as a quick solution. ",1523230110.0
avaika,"If you want django to serve static via manage.py in DEBUG mode for you, just add this to your urls.py:

    if settings.DEBUG:                                                                  
       urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
       urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) ",1523231133.0
patasucia,just refresh the page?,1523236164.0
haloweenek,Webpack or sass_src,1523253356.0
dalore,Sounds like an SEO question and not a Django one.,1523283683.0
ramse,"If you're using the built-in django template system, then its `{%` and `%}` not `<%` and `%>`.",1523225011.0
camnooten,Just a tip. You don't have to do the if statement to check if it is empty. Just do the for statement then put {% empty %} to check if it is empty.,1523772597.0
athermop,"Yes it is possible.

As far as the ""how"" part, the answer depends on how much you know about django/python/web-development.  The answer could be a sentence or multiple books.

Really, this should be in /r/learnpython...",1523216468.0
haloweenek,"Website - yes - read the Django book it’s all there.
I’m bit worried about the streaming component...",1523224444.0
GlobalComment,"We have have been looking at AWS Kinesis' live stream stuff. Google ""Amazon Kinesis Video Streams"" or similar. Haven't actually deployed anything yet but we already use AWS so it's logical to evaluate it.",1523227710.0
anarcho_kitties,"yeah its possible...Django doesn't have any support for realtime stuff but with things like python twisted you can do a lot... here's an example video chat streaming in python https://github.com/saghul/CallRoulette

there's also django channels https://channels.readthedocs.io/en/latest/  more suited for chat apps, but could do video with a bit of hacking 
",1523230434.0
sauldom102,You should check out this repo for thumbnails in django: https://github.com/jazzband/sorl-thumbnail,1523222470.0
Brandhor,"you need to create a custom widget, something like this should work

    class ThumbnailWidget(forms.ClearableFileInput):
       template_name = 'thumbnail_widget.html'

then create a thumbnail_widget.html file and copy the content of [clearable_file_input.html](https://github.com/django/django/blob/2.0.4/django/forms/templates/django/forms/widgets/clearable_file_input.html) and change it so that it shows an image instead of the path",1523266248.0
lovestowritecode,"Absolutely, Django is one of the most popular web frameworks worldwide. I would not invest time in PHP since many companies are moving away from it and converting their applications to more modern languages. I consulted at Hearst for a year helping them convert PHP publishing applications to Django. 

You could find work doing PHP maintenance for legacy systems but I think it’s smarter to invest in the future, not the past.",1523200724.0
mtrythall,"It's great!

I work for Lincoln Loop, a Django/Python shop of 11 years. One of my primary responsibilities is sales and operations. We turn down a lot of work that just isn't a good fit for us, but would be great for either a small team or if the company/org just got a freelancer or two (not every product needs an agency). 

We send a lot of work away only to hear the client is still having trouble finding someone months later. Nothing us wrong, budget is fair, client is professional, interesting problems to solve... but they just can't find someone capable.

And, as a side note, this really bums me out, because it means that client may move away from Django, which just sucks for the community. The more good freelancers we have, especially if they work together, the stronger our community is.

Best of luck!",1523238300.0
PulseReaction,"You certainly can find jobs working with Django and python and specializing hard can be a plus. I have a lot of experience with freelance work with PHP 7, Laravel and I often find more jobs in those than Django. The bulk of jobs I see are related to data science and machine learning however.

Python is a better language than PHP even though PHP has been making a huge effort to improve. However in terms of framework, I find Laravel and Rails more intuitive and faster to develop with than Django, but ymmv",1523213974.0
jcampbelly,"I don't know how business is for freelancers, but Django is a needed skill in my field (corporate IT).

In my opinion, unlike PHP, to be effective with Python/Django you'll need some systems skills. Knowing Linux, being comfortable on the shell, getting to know libraries, databases, system services, basic security, domains, etc will be really important to getting a new project off the ground.

There do seem to be some easy ways to get started on hosting a Django project in the cloud. [Google has some cloud services](https://cloud.google.com/python/django/#hosting_platforms). You could probably learn and use docker to get something started up really quickly from the docker container registry.

But I think that when it comes down to troubleshooting, regular maintenance, and trying to build things slightly more complicated than CRUD apps, you'll really need some systems knowledge if you plan to go it alone as a freelancer with Django.
",1523213536.0
carlio,I have freelanced in both PHP and Django and I have to say Django is the better bet. There are more PHP devs so more competition - same with Rails - while Django remains a little bit more niche. It's obviously a hugely popular framework and so there are plenty of jobs but you'll be fighting against slightly fewer amounts of freelancers for those contracts that are available.,1523225242.0
mikemaddem,"I used to freelance with php.
Then moved to django. And if I could go back in time I'd use django from the start.

Sometimes you just gotta do what you gotta do. People still ask me for php freelancing, but I always turn it down. No matter the pay.

It can be a tough freelance transition depending on your current clients. But for me, they were all fine coming in with something new and better. It varies ",1523237189.0
pat_the_brat,"In terms of people hiring devs to maintain legacy apps, PHP is much more popular. In terms of people hiring and asking for a specific kind of dev, PHP is more popular.

But if someone just says ""Hiring a web developer"" and they don't know/care about the back-end engine, Python is good.

I wish it were more popular, as most people seem to prefer PHP and NodeJS, when Django is so much nicer and cleaner to work with.",1523199994.0
,"Legacy apps are usually written in PHP. They are also most usually very painfull to maintain. Id stay away from PHP and just learn python instead. 

New apps are mostly not started with PHP anymore, node and python are the goto stack for many companies.",1523200457.0
Improvotter,"I'd say the PHP and the JS community has got less overall qualitative content compared to the Python or most other communities imo. There definitely are great PHP and JS developers, but there are a lot of inexperienced PHP and JS developers because these languages are most often the first languages they come into contact with. The problem is that these people don't learn better practises and they don't really improve. I'd say expand your horizon and just in general learn a bit of everything because you'll be able to use the experience in any language. But imo you're better off starting as a Python developer because you'll learn better practises imo.",1523200921.0
dark_bug,"I've been using it both professionally and personally and I can say it is a charm to work with. When the size of the Back-End isn't that big of a deal, I was Flask too, which is much more simpler to approach.",1523202871.0
pancakeses,I build quick websites for small local businesses with Wordpress for a quick buck. But I build quality tools for important organizations with Django.,1523240169.0
lzantal,Using Django for contract work since Django 0.9 came out. But as others said it’s mainly in large and enterprise companies. At least that’s where most of my work came from. ,1523248288.0
yesvee,too late.,1523383357.0
jenkstom,Yes. Easily.,1523219557.0
c17r,"If you want a plain dict turn into valid json, you don’t need DRF for that. 

    import json
    json.dumps(dict)",1523186859.0
dreamofwaking851,Not sure if this applied but with serializers you can combine serializers of different models into one. http://www.django-rest-framework.org/api-guide/serializers/#dealing-with-nested-objects,1523190699.0
plahcinski,"Why do you need a serializer? Are you confusing renderers and serializers by chance? 

Can't you just :

    return Response(my_dict)

Where response is the drf response class. This is perfectly valid thing to do in drf. You don't always need to run it through a serializer ",1523204669.0
Schnouki,"Did you add `enctype=""multipart/form-data""` to your HTML `form` element? ",1523190693.0
bykof,"Yeah its because you are trying to expose the getBig5Text.delay(file.name, data) in the variable big5 and wc...

.delay() returns an AsyncResult, because it will do the task getBig5Text 

The code at this position continues running, so you have to retrieve the result from AsyncResult at a later moment, e.g. in a new request where you check the AsyncResult: http://docs.celeryproject.org/en/latest/reference/celery.result.html#celery.result.AsyncResult",1523179509.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1523175510.0
ccb621,Celery is overkill. Write a management command that cleans the data. Create a cron task to periodically run the command. ,1523171642.0
panchicore,"Delete but store, you might need the data for analisys. Remember one of the systemic laws: one system garbage is another system's raw precious material.

1. Create a Django command to ORM query the model and filter using the date field with range to instance the records.
2. (Optional) Send the data to a low cost storage using a low cost file format for instance csv.
3. Use queryset.delete(). Test well so you make sure not deleting other stuff in cascade.
4. Set a cronjob to do it on the schedule you need. Once a day. Once a week. Every Sunday at midnight for example.

IMHO with the requirements you mention, crontab is the right tools for the job.",1523181140.0
tsukisos,"Something worth thinking about is whether to proceed with deleting records or find a different design. If your tables will increase dramatically in size in the long run, will the performance be bottlenecked as your periodic delete job is not often enough or too often? If the data size gets crazy big, would it be better with a different storage solution with built-in TTL?",1523174481.0
bwapeup12345,Thank you all for your inputs. I know exactly what I need to do now. You guys are awesome.,1523242978.0
Soupinmyfly,"I would avoid deleting values out of your database.

A few random thoughts below.

Personally when the objects created and first saved to the database I would be setting an expiry date automatically (now + 90 days). Then when fetching objects I would filter for unexpired objects. You could take this further and have a boolean value for expired which defaults to false. Then I would have a management command which checks all unexpired objects and flips the boolean value as appropriate... doing it this way you could avoid having an expiry date. Just use the creation date (i think all models should have this) to calculate an expiry. An advantage of this is that you can always unexpire posts and also change the criteria for expiring posts. ",1523177478.0
xinaked,"since you have a few users and a few records, just make the login page call your cleanup ORM .delete() command. every time someone logs in, its guaranteed to be clean. no cron required.",1523175987.0
_drFaust,"I’d favor unit tests and get real comfortable with py.test and the mock library. Relying on UI tests with selenium is too brittle, been there and done that in the past. If a UI test executes a search and expects a response, we can achieve the same at a much lower level with unit tests. 


For Django I’d make sure the views/api resources are covered. There are DRF api test wrapper classes for these. So basically what you do is make a call with the DRF test api client to the view endpoint, take the response and assert the response data is what you expect. You’ll also find you need may need test data to mock in the return values so you’ll end up building out fixtures in your conftest to reuse in other tests and may need model mommy to setup db fixtures. 


For elastic search you will want your queries, aggregations, etc to have unit tests also. 


That’s a starting point to build confidence in your app. Py.test has a py-cov module to check your code coverage so keep working toward that 80%+ coverage. I also recommend the pytest xdist package for TDD rerun tests on fails. 
",1523164522.0
bykof,"Just iterate recursive through your dict of dicts and collect the files in a temporary folder. 
Afterwards you zip the folder with https://docs.python.org/3.6/library/zipfile.html",1523182611.0
ccb621,"Unit tests. Write unit tests to test the function/task. Write another test to test the code that calls the task (eg. mock task.delay, and assert the mock is called). 

Debugging with a debugger should be the same as with any other script you debut. The only difference is you’re debugging the Celery process. ",1523139443.0
Improvotter,You can simply replace the calls to the `delay()` (you can use mocks) or similar Celery methods to the actual functions that will execute immediately for integration tests. Then also unit test the tasks themselves.,1523141327.0
spindicate,"Right so Ive been pursuing that but I've found that my task won't through any exceptions in the test environment. 

Is there a good reading source for this outside the celery docs. They are characteristically sparse on this point it seems.",1523139791.0
never_safe_for_life,"You're basically asking how to write an integration test, but the behavior you're interested in can be solved with unit tests.",1523213008.0
bjoerns,"I've been using Celery heavily for commercial projects. What, from my experience, works best, is writing tests for your task in a similar way you would write tests for your API endpoints. For example, if you have a Celery task named initialise_fields, you could test it by calling it locally synchronously using the apply() method and
asserting the task status (SUCCESS/FAILURE) and the state of your database.

def test_initialise_fields(self):
        task = initialise_fields.s(vendor='Bloomberg').apply()
        self.assertEqual(task.status, 'SUCCESS')
      
Mock (and whatever else you have to do) as you need to.

I wrote a blog post about it that does into more details, in case it is of help: https://www.python-celery.com/2018/05/01/unit-testing-celery-tasks/",1530513183.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1523126930.0
Investisseur,http://lmgtfy.com/?q=JavaScript+file+uploader+with+status+bar,1523131551.0
agrzw,Here is one of hundreds of implementations: https://github.com/ouhouhsami/django-progressbarupload,1523136482.0
django_noob,"I'd like to add the following assignments to the <input> tag on the django file upload form as part of a progress bar implementation:

     <input type=""file"" name=""file1"" id=""file1"" onchange=""uploadFile()"">

Do you know how I would be able to modify the default file upload input with these values?
",1523138744.0
patasucia,you can put it in the app's static folder and collect it when you call [collectstatic](https://docs.djangoproject.com/en/2.0/ref/contrib/staticfiles/) in production,1523130460.0
jobelenus,"There are very very few things that *need* to take longer than that. And they ought to be done in the background and cached. Either you've got way too many queries running and you can easily optimize (django-toolbar to the rescue), or this shouldn't be running in an http request.",1523113741.0
jaushman,You need to setup a celery task to handle these long running requests. Heroku can handle your needs but keeping a request open for 2-5 minutes is asking for trouble which is why they restrict it. ,1523113736.0
DmitriyJaved,First of all Why your request takes up to 30 seconds?,1523113342.0
andrey_shipilov,Something that takes more than 5 seconds is written especially wrong. You should re-visit your code man.,1523117323.0
,[Use Celery.](http://www.celeryproject.org/),1523115738.0
zettabyte,"https://devcenter.heroku.com/articles/request-timeout

As others have already said, you will likely want to rework your request / view so that it either doesn't take so long or, if it has to take that long, push the job into an asynchronous queue and respond to the client with a job number.

You can have the client then use javascript to ping your server to see when the job is done, and refresh the page with the results.

If none of that works, then you're probably looking at a server of your own.",1523116494.0
garion911,"https://stackoverflow.com/questions/15306897/django-reverse-lookup-of-foreign-keys
",1523052272.0
bjorn6,An etymology_set will automatically be created and you can access this through term.etymology_set if I'm not mistaken.,1523082752.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1523049515.0
Neorlin,"You can change that in file extension defaults. You probably added url.py to text files by mistake. Look for the options, which show the edit mode and all it's extensions. There, under text files will be your url.py - just delete it from there",1523050347.0
,Have you tried hitting the refresh icon at the top of that panel?,1523048176.0
dreamer_soul,Open the file using the file explorer and check it's extension. If so revalidate the cache and refresh the whole ide,1523048497.0
Fun2badult,"One question, don’t you need r’ for the url path on the urls.py page? 

Also, not using ‘path’ for Django 2.0 url redirects?",1523050932.0
yonsy_s_p,"normally you have your own environment and before you deploy this, is passed for test (unit and functional tests at least) this is the reason why you add tests to your code and (sometimes) you deploy this in a test environment, where you need that all your tests get passed (and the coverage need to be good too)

Now, an staging environment is an environment that should resemble production, now only for code, your database and other services added too ... this is not for test, is for check that your **tested** code can be deployed to production, so, this stagin env is almost a copy from your production environment.",1523035097.0
ccb621,"What are you finding overwhelming? At a basic level, staging should resemble production—same EC2 and RDS sizes/configurations.",1523029730.0
AnderperCooson,"Saleor looks awesome. The vast majority of my day job is backend work for Magento 2, and while there's a wealth of knowledge available for Magento, it's just not what I would call an excellent platform. Unfortunately, we won't be abandoning Magento any time soon, so I really have no reason to poke around Saleor :(",1523033048.0
FishyOS,"My company is currently looking to upgrade from Magento 1, and Saleor has been in my top 3 to look into. Can a more experienced Dev give me some insight into possible downsides?",1523041913.0
flipperdeflip,"A serializer would still be useful as a transform between the Elasticsearch data format and your own application's interpretation/enrichment. 

And as you've found out an serializer has value as documentation of what data your search returns, otherwise people have to dig in Elasticsearch's docus (eg: coupling and indirection) instead of your code or generated docs.
",1523018501.0
philipmat,"You could also try /r/Freelance. 

It might also help if you add more details about what kind of work/project it is.",1522985712.0
rspeed,Try /r/PythonJobs/,1522989905.0
pat_the_brat,"/r/forhire is a good one, too.

Also, I might not quite qualify as *senior* Django developer, but I would love to hear more about your project - see if it is something I feel I could do.

Edit: though if it's on-site,maybe not. Where would it be located?",1523001811.0
king_llama,/r/python has a job board,1522996793.0
d3thr0ner,"Fiverr has helped me find developers quickly for a wide range of projects. However if your projects tend to be on the larger side I found Upwork to handle the logistics better. 

Edit: just saw the comments above regarding the position to be in person. If you work for a company they have talent agencies you can reach to post your job position. 

Otherwise, maybe use Meetup to inquire local Django developers in your area. ",1522988175.0
ramfanprogrammer,"Looks like a lot of people are interested in this. We are a startup, so we are not hiring yet, but will within the next couple weeks. Until then, if anyone is interested, PM me - Github, a quick blurb about your resume.",1523045945.0
Isvara,You could also try the monthly Hacker News thread.,1523070335.0
air_zac,You might be able to find someone to fit that timeline on a website like upwork. But if you're set on using reddit I think this is a pretty great place to find some knowledgeable devs.,1522985869.0
dfcHeadChair,"If the job is remote, I'd be interested. I'd have to hear more about the project, but feel free to PM me.",1523018471.0
rockingthecasbah,"I’m interested. 7 years exp Python / JavaScript developer, lots of exp with Django. Reach me via pm",1523030140.0
mogosselin,"Did you check http://www.django-rest-framework.org/topics/documenting-your-api/ ?
It seems like there's some nice tools?",1522982513.0
naught-me,"I guess maybe the bad ones stick out, but I tend to hate single page apps, infinite scrolling, etc.  Instagram, Thingiverse, Pinterest - they're so frustrating to use.  I much prefer an almost-entirely SSR site with a few little JS dashboards/widgets.",1522975480.0
ccb621,"Server-side rendering never really fell out of fashion. People don't really write articles/blog posts about things that ""just work"". They do write about the latest new library/framework. As with any tool, both client-side and server-side rendering have their own use cases. There is some overlap.

I suggest using whatever meets your constraints—time, experience, money, longevity, etc. I am working on two projects. One is all server-side because that is how Django Oscar is architected, and I have a delivery date. The other is all client-side because I wanted to learn more about React, I am starting completely from scratch, and I may need to recruit others to help out (which is somewhat easier/cheaper when seeking frontend-only developers).",1522974316.0
olifante,DRF + React is the way to. Next.js makes React SSR painless.,1522971032.0
ccb621,What is the use case for this?,1522973455.0
patasucia, but_why_meme.jpeg,1522967708.0
jeffbaier,yes,1522945006.0
MaybeAlzheimers,I would suggest [Elasticsearch Completion Suggester](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters-completion.html) if you're already using ES for search. You can make an API endpoint that runs the suggestor and use JS to make requests to it.  ,1522944331.0
redmamoth,Cool. Anyone seen anything similar for Django + Vuejs + docker?,1522964137.0
DATDICKDAUX,Your readme incorrectly says the Django app is at :5000 but its on :8000,1524267019.0
tomchuk,[mail_admins()](https://docs.djangoproject.com/en/2.0/topics/email/#mail-admins),1522937862.0
netscape101,You can have a celery task to do the checks. ,1522938298.0
booooomba,"Definitely 2.0!!
Absolutely no reason to start a new project with an old version!",1522929189.0
Improvotter,"2.0, you can upgrade to a LTS later on without too much problems most of the time. Get it working first, then figure out the rest.",1522928279.0
TunaBoo,"I am a big fan of using the latest stable and making a small upgrade a few times a year, vs LTS and a big bang upgrade every 2 years.

Going to depend on how agile your organization. If you don't write test and have a manual QA team, you aren't going to want to do as many big upgrades.",1522930914.0
yee_mon,"We've decided to stick with 1.11 until the next LTS — because we have a really long release cycle for regulatory reasons. All libraries I have used so far have always supported the latest LTS as long as Django did, so it's not like that would be a problem.

However: If you know you can make releases every couple of months and can justify upgrading the tech stack, I'd recommend starting with the most recent version and upgrading with every minor release until you reach the next LTS. That way, you get to play with all the new features during development.",1522930664.0
urkh_,"Use latest stable release, in that case, Django 2",1522932632.0
thinkwelldesigns,"sticking with LTS releases is a very effective approach. And if you run your tests with `python3 -Wd manage.py test` you get warnings of deprecations, so you can fix them and prepare for the next release while remaining on LTS. If you keep after the warnings, upgrading will be seamless.",1523032882.0
OMDB-PiLoT,"I'm sticking with 1.11 till end of the year for all my projects. ~~2.0~~ 2.2 LTS version from 2019. But that's just my strategy, you can start with whatever you like tbh.

-

^What ^are ^the ^downvotes ^for ^?? ^Work ^place ^requires ^LTS ^versions! ^As ^I ^said, ^you ^can ^start ^with ^whatever ^SMH.",1522928587.0
cakeandale,"For a big-budget project, I'd go with Django 2.0. Django 1.11 is the current LTS, which is good if you're unsure about the project's capacity for technical maintenance like version upgrades, but if keeping the Django version up-to-date as the versions reach end-of-life isn't likely to be a problem, then you should be safe without the LTS.",1522930865.0
danielsamuels,"We sit on LTS versions at work, so it's 1.11 for us at the moment.",1522943502.0
cediddi,"Well, there's not much difference. If you work on a company with slow upgrade cycles, go for LTA, else go for latest. Same goes with operating systems too. We still use 14.04 in all our stack and developer machines, bu will switch to 18.04 in this year. Same goes for our supported python version too. Will be upgrading 3.4 to 3.7 with os. I personally dig LTS operating systems with latest libs and binaries.",1522949081.0
haloweenek,"1. If the traffic will increase you might switch to a bigger instance or run more instances of the app

2. I’d really recommend running it on a database(Postgres/ MySQL) from the beginning. Migration from SQLite might be painful... bear in mind that the database server needs to be close to your application server to minimize query latency. ",1522926626.0
Poromenos,"I agree with the others, it'll take a long time to max out the highest tier in DO. I would definitely recommend using Postgres out of the box, SQLite is amazing for what it does, but its Python driver isn't great for concurrency, and you might get failures.

These days, this is what I recommend for deploying Django:

https://www.stavros.io/posts/deploy-django-dokku/

I've switched to that model for all my sites and it is a *godsend*. I can go from empty repo to deployed project in less than three minutes with Dokku and my [django-project-template](https://github.com/skorokithakis/django-project-template), which has all the Dokku-related defaults.",1522941975.0
booooomba,"1. It will still be more than enough. You'd need a very large app to exceed their highest tier. I don't mean to bash your project, but it will probably take a loooong time until you max it out.

2. It's preferred to use PostgreSQL. But MySQL is fine also. Just use the one on the server. Same argument: You will need to have a massive website before a DO server will not suffice. You will probably never reach that limit. Even tough I hope you will! ;-)",1522926522.0
,[removed],1522948022.0
XarothBrook,"Out of curiosity, why is upgrading to py3 not an option?",1522914326.0
geosoco,"I think you can use channels 1.1.8 which looks like it still supports 2.7. 

",1522914172.0
XarothBrook,"This looks interesting at first, but I have some problems with this.

-  It introduces a large set of helper items that are not *really* related to your hooks, like ``update`` and ``update_field``. While they might serve a purpose, their reasoning leaves some things to be worried about (apart from no in-code documentation):
- - ``.update()`` updates a validated set of fields, but then calls .save() without specifying ``update_fields``. This means its implementation differs from that of the ``ModelManager.update`` method, where only the fields specified are updated. In addition, I would suggest making it follow a ``commit`` argument to specify whether or not it should actually save.
- - ``.update_field()`` calls .save() every time it's called, which makes it a really lazy way of automatically calling .save() every time you update one field. This means that you cut down two lines of code to one, when only updating one field, however, you turn three lines of code to two, which seems like a good thing, were it not that you were invoking two database writes where only one would have sufficed. I would strongly suggest just doing away with that call, and having ``.update()`` provide both functionality, in a more sane way.
- Your has changed detection detects only if values have changed since their instantiation. This means that long-living objects, that have potentially been saved multiple times, will fire off their update hooks, multiple times, where I'm sure this is not desired.
",1522914007.0
ccb621,"I’d rather see explicit code in the `save()` method. This seems a bit too magical for me. Also, adding another package to do what Django already does seems odd to me. ",1522903907.0
jeffbaier,no,1522903104.0
ccb621,"Exactly what are you trying to do? I'm probably one of the ""people that know better than [you],"" and, depending on what you are trying to do, this might not be as complicated as you think. At a basic level you have  an `Account` model that can have zero, or more, related `Transaction`s. You can calculate balances on-the-fly or every time a transaction is saved.",1522876444.0
asdfwaevc,"Just so you know, the second project you linked to is actually forked from the first.

I don't even know what django-oscar is, but it could be that the first app doesn't depend on you really using it. In which case definitely go with that one.

If it does make you use oscar, then I would still fork from the first one, because the second one is just an old version of that.",1522884201.0
zettabyte,"`django-auth-ldap`: https://github.com/django-auth-ldap/django-auth-ldap

Once configured, you can do:

    from django.contrib.auth import authenticate
    user = authenticate(username=u, password=p)


If you really want to work against LDAP directly:

`python-ldap`: https://github.com/python-ldap/python-ldap

Then you can:

    import ldap
    ldapinstance = ldap.initialize('ldap://<your server uri>/')
    ldap_user = ldapinstance.search_s('OU=Users,DC=example,DC=com', ldap.SCOPE_SUBTREE, '(samAccountName=<username>)')

Your use case(s) will dictate what you want.
    

",1522873809.0
joejaz,"I’d still keep the secrets out of version control even for personal projects. You never know when you might want to share the project with someone (or open source) and you’d have to rewrite git history to keep those private in that case.  It also limits exposure if someone gets your GitHub login or a copy of your codebase.

I’d define a secret as any data that would be a security risk or privacy issue if exposed.  For example, any credentials, keys, IP addresses (other than local ones), etc. Also any private email addresses might be considered secret.  Some of it is a judgement call.",1522865318.0
eighthpence,"Yes and yes.

Source control is always a good idea. Protects against many accidents, and also allows you to test for regressions using tools like blame.

And as /u/joejaz says, keep secrets out of source control",1522865445.0
NoLemurs,"> Is this only necessary when the project involves multiple devs?

Multiple devs is largely irrelevant. Each place you store the `SECRET_KEY` is an extra potential point of failure. The effort involved in keeping the key out of version control is minimal, and is certainly far less effort than being careful about what you do with your version control and/or laptop. If you care about security at all, then it's worth doing. If you have users who give you emails and/or passwords, then you should care about security.

> The only secret variables that I know of are SECRET_KEY and DATABASES variables. Are there anything else that should be kept secret?

Ideally, actually, you don't have anything secret in the DATABASES variable. Most modern databases support several authentication methods, and password authentication is rarely the best choice. If your web server is on the same machine as your database, then user level authentication (like Postgres 'peer' authentication) is more secure, and doesn't require any secrets in the code. If your database is on a different machine, some sort of certificate based authentication is probably a better choice.

So with a good database set-up `SECRET_KEY` is likely all you have to worry about. If you access any third party APIs then you'll likely need API keys for those too, and those are important to keep secret too.",1522890129.0
zettabyte,"This may ruffle some feathers, but here's my take:

The easy answer is, ""Put all your sensitive settings into a 'secrets.py' file and import that module at runtime to pick them up.""  Then create a ""secrets.py"" file in all your development environments to house that data.

The reality is that it may not be necessary, at least not for all settings files.  Imaging the settings:

    settings/__init__.py
    settings/base.py
    settings/prod.py
    settings/zettabyte.py
    
In `zettabyte.py`, which is checked into source control, I have the following database settings:

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'project_db',
            'USER': 'zettabyte',
            'PASSWORD': 'zettabyte',
            'HOST': '127.0.0.1',
            'PORT': '5432',
        },
    }


Do I care if you see that information?  Not at all.  Especially when my `pg_hba.conf` file has the following line:

    # IPv4 local connections:
    host    all             all             127.0.0.1/32            md5

So even if you're a nefarious actor and get my local dev settings, you won't be able to connect to my database unless you're already on my box, in which case you can connect to my database via a local Unix socket using the peer method.

What's more, if you're a new developer on the project, you can just copy my settings file to `settings/space_jellyfish.py` and tune it to your needs.  And if I'm doing something odd or unusual that may be of value down the road to a future dev, it's in the repo for reference (e.g., an experimental LDAP auth configuration).

Generally speaking, keep sensitive data out of your settings, but be realistic about what is truly sensitive.

",1522871557.0
spapas82,"I have recently written a tutorial for using django-rest-auth to authenticate with DRF: https://spapas.github.io/2018/03/01/django-rest-auth/

It should resolve most of your problems!",1522857500.0
Bakirelived,"I do it like this, 

    fetch(url, {
          credentials: 'same-origin',
          method: method,
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'X-CSRFToken': cookie.load('csrftoken')
          },
          body: JSON.stringify(dataToSend)
        }).then((response) => {
          if (response.status === sucessStatus) {
            this.handleDialogClose()
            this.handleSnackOpen('Everything ok')
          } else {
            this.handleSnackOpen('Semething went wrong')
          }
        })        

'method' and 'url' are variables with the corresponding strings, in this case, it's a 'POST'",1522833626.0
grouchoboy,"

Of course you can send the authentication information in the header. Think that the most common way to send a JWT Token (or a session token) is in the header. Alternatively to JWT if you are serving the React frontend from Django itself you can use the default session token of Django. If you are serving separately you can continue using session tokens, take a look at [DRF documentation about the different authentication methods](http://www.django-rest-framework.org/api-guide/authentication/#authentication)",1522833568.0
alexthelyon,"Ive used Django rest auth to add rest login endpoints. Then, post username/password to the URL and the reply is a token that you can include in the header (Authorization: Token xxxxx) and the associated user is automatically available in the request.user parameter.",1522891845.0
,[deleted],1522854882.0
rackmountrambo,"> Hi,

>I am relatively new to Django. I am facing some issue in django where i need to hide some form fields along with their labels and help text with checkbox click.

>i have written a javascript to this which is as and working also: 

>     function Hide_flow_enable() {

>        var enable_check = document.getElementById('id_flowroute_enabled');

>        if (enable_check.checked) {

>            document.getElementById('id_flowroute_account_sid').style.display = 'block';

>        else { 

>        	document.getElementById('id_flowroute_account_sid').style.display = 'none'; 

>     		window.onload = function() { document.getElementById('id_flowroute_enabled').onchange = Hide_flow_enable;

>But the problem is that only input fields are hiding but the labels and help text is still visible. In my models.py The field is like as follows: 

>     flowroute_enabled = models.BooleanField(default=True)

>     flowroute_account_sid = models.CharField(max_length=64, default='', help_text='Your Flowroute API accout username \ or \'Sid\'')

>	in forms.py is like as Tab( 'Flowroute', 'flowroute_enabled', 'flowroute_account_sid',

>	Please help.

>thanks.


I tried to make this readable, but there are still syntax errors and stuff.",1522940183.0
Nicksil,"Do

    ...
    month = request.POST.get('month', 1)
    year = request.POST.get('year', 1)
    print(month, year)

Check your terminal for values. Looks like you might be attempting to coerce an empty string or a non-integer string representation into a string.",1522825761.0
spookylukey,"A better pattern, to avoid the possibility of crashes, is this:

    try:
        month = int(request.POST['month'])
    except (KeyError, ValueError):
        month = 1
",1522837609.0
,I advice u to use cookie cutter for django,1522823338.0
SymbioticBadgering,"If the models are relational and relate to each other I don't see any reason to separate them to different apps, since they are not self contained.",1522823493.0
zettabyte,"I would 100% put all the models into one app.  It will be much easier to start with that, and if the project is small, it's really the only way that makes sense.

For your API and website, you could maintain separate modules within your app:

    /app/
        __init__.py
        apps.py
        models.py
        views/
            __init__.py
            api.py
            web.py
        urls.py


",1522874255.0
aavari,"The docs actually have a pretty good example for this, under dynamic filtering - https://docs.djangoproject.com/en/2.0/topics/class-based-views/generic-display/

I would have a single list view, that returns a filtered list if the kwarg is present, otherwise return the full list. ",1522806612.0
hermit000,"Wagtail CMS is highly customisable, but you need to get your hands dirty. ",1522799289.0
Michaelyin,"It seems Django is a very good option because Django has a healthy ecosystem and you can find many useful third-party packages on Github.

If you want to have a blog in your Django application, and also have other functions need to be implemented. **I do not recommend you to consider Django-CMS because it is not suitable for your case, it is a good option for stand-alone CMS system**. You can check this article for more detail [Wagtail vs Django-CMS](https://blog.michaelyin.info/python-cms-framework-review-wagtail-vs-django-cms/)

As @hermit000 said, Wagtail CMS is better option for you. It is super flexible and powerful. But the official doc of Wagtail doc is not easy to understand for newbie developer. You can first take a look at this [Wagtail Tutorial Series](https://blog.michaelyin.info/wagtail-tutorials/)

You can use Django to handle user signup, profile management, events, etc. and let Wagtail to build the blog, manage static content for you.
",1522809211.0
booooomba,Wordpress + Buddypress ;-),1522797490.0
ramse,"That projects status for django 2.0 is alpha, alpha is going to have these kinds of issues. I would recommend using [django-pyodbc-azure](https://github.com/michiya/django-pyodbc-azure).",1522780360.0
batisteo,TL;DR: Don’t use DEBUG=True on staging and prod. Nearly 30·000 websites are doing that (and growing).,1522753414.0
wasa_b,"I don;t usually shitpost, but this is so clickbaity, I just can't refrain from it. I expected a real security flaw. It's neither a leak nor a **mis**configuration. BREAKING: Thousands of households where owners don't close the doors can freely be entered by unauthorised personnel... It's a friendly subreddit with good quality submissions but this is just bad.",1522791577.0
fubarx,Oh shit. Be right back...,1522772869.0
patasucia,so what is he specifically doing to trigger the display of the debug Django page? Is it that he asks for port 8081?,1522766102.0
yesvee,How can I check if my public django site has leaked this? There may have been short spans when I tested it with DEBUG on.,1522948741.0
haloweenek,Well to see any relevant stuff you need a 500... possible but difficult. ,1522775458.0
FloppingNuts,"just follow the [tutorial](https://docs.djangoproject.com/en/2.0/intro/) mah dude. you don't need to install linux, it runs perfectly well on Windows.",1522757911.0
Soupinmyfly,Investigate vagrant and use virtualbox (or hyperv if it supports it),1522764983.0
SymbioticBadgering,"What is your objective?  
If your just looking to learn django or already comfortable with linux servers, than I would keep it simple and run it on windows.
But if you want to learn how to deploy django apps on linux server, the sooner you'll wet your feet in linux machines the better",1522766037.0
mogosselin,"If you already know linux (or want to learn it) and wants to eventually deploy your app on a linux server, you can indeed use a VM.

Advantages of using a VM: 

* You can take snapshots easily of your whole VM (so it's like backup)
* If you screw things up, your main OS isn't affected
* If your VM is linux and you deploy on linux, you have less chances to get a bug due to OS differences (for example linux's directory names are case sensitive, on Windows they are not - or at least they were not back in the days)

Disadvantages:

* It uses more resources from your computer
* If you're like me and prefer to use your main OS to develop / debug, the setup is a bit more complicated.

Personally, that's what I do. It allows me to have different versions of Python, and DB systems and versions, and different projects in different VMs, which makes it impossible to screw up all my projects at the same time. And I like the fact that I can easily backup the whole machine before I test some risky stuff (system update, library upgrade, etc).

Also, I use Pycharm Pro to be able to debug the VM and the SSH tools to log in the VM's terminal. 

If you're just starting to learn programming and just want to fiddle around, maybe that's not worth the time investment and you should probably just use your main OS.",1522983297.0
,"Send me a PM.

Happy to answer your questions free of charge",1522732445.0
jarshwah,You could also join #django on irc.freenode.net - there are a bunch of people that hang out there to answer questions in real time.,1522751909.0
spapas82,If you want to learn about various interesting django topics in a comprehensive tutorial style I recommend taking a look at the django section of my blog: https://spapas.github.io/category/django.html,1522857911.0
andytwoods,Daniel Bader's pythonista Cafe is a great place for learning https://www.pythonistacafe.com,1522735135.0
iBlag,"I like this, but if you use this, please also allow users the ability to encrypt messages to them.

Shameless self promotion: my [django-secure-mail project](https://github.com/blag/django-secure-mail) will sign and encrypt all outgoing mail for recipients who upload their public key (note: does NOT sign mail to users who do have not uploaded their public key). Uses python-gnupg so it needs gpg (<2.0) to be installed.",1522693762.0
iBlag,"I have a few questions/suggestions about this app:

1. Why do you force users to use your logout method? The app's `logout` view simply calls Django's `logout` function, flashes a ""You have been logged out"" message, and redirects them to a configured page. The custom logout method doesn't need to be included.
2. Having a Django model for the `AuthToken` is fine, but why do you store the email address of the user? You may want to consider just using a `ForeignKey` to the user model, which stores the email address. You can get the email address field for a user with `getattr(user, AbstractBaseUser.get_email_address_field_name())` (Django 1.11+). That way a user only has to update their email address in one location, and that's already built-in.
3. What if I want to keep the emailed auth token valid for a maximum of 72 hours after mailing (supported via the `TOKENAUTH_TOKEN_DURATION` setting), but I want to invalidate it 15 minutes *after they first click it* (within those 72 hours)? This would ensure that the links are ""one time use"" only. This would probably require an additional database model to track logins with email auth tokens and complicate the token invalidation logic.
4. There is no way to tell that a user authenticated via an email auth token, which could be useful if I only wanted to allow users to adjust certain email settings (read: what they are subscribed to) when authenticated with an email auth token. If they wanted to do something else (like, for instance, change their username, change their email address, logout all other sessions), they would have to login via more secure methods (eg: username/password, OpenID, etc.).",1522737815.0
prancingpeanuts,"I would go with DigitalOcean's guide - but recommend against using their one-click Django image because it takes away a huge part of learning how to set up the server. I would recommend these in sequence:

- [Initial Server Setup with Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-16-04)
- [How To Set Up Django with Postgres, Nginx, and Gunicorn on Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04)

This will give you a good preview to how a simple & traditional way of deploying a Django app might look like without using any PaaS solutions etc.

Having said that I would strongly recommend moving on from this, then, to deploying with Docker - which in itself involves learning about Docker, maybe Docker Compose (highly recommend!), and Dockerizing your Django app. There should be enough resources to get you started - for a start I recommend looking at the [Django Cookie-cutter](https://github.com/pydanny/cookiecutter-django) repository which has the proper set-up for you. It would be insightful to go through the set-up and try your best to understand the way the app is architectured and Dockerized.",1522686388.0
vapor8bit,"I agree, it's not very clear and doesn't have the same hand holding going on that the rest of the docs do.  To me the easiest way was using nginx and gunicron.  This means you are going to setup a web server/proxy using nginx, then use gunicorn to serve up your django site to that proxy.  

I would suggest going directly to the gunicorn site to get instructions on deploying it (as opposed to guides written by others, those may be using older version of django.).  Especially if you are using Python3/Django2. 

http://docs.gunicorn.org/en/stable/run.html#django

Setup Gunicorn as a service:
http://docs.gunicorn.org/en/stable/deploy.html

Also as others have mentioned, read through this if you haven't already: https://docs.djangoproject.com/en/2.0/howto/deployment/

I know there isn't much there, but you gotta know what is there.

EDIT: as others have mentioned you can also deploy for free using Heroku, one click install of django 1.x on digitalocean, google apps, or aws.  List goes on, there are more and more providers offering easier ""click to deploy"" options.  ",1522684723.0
bwapeup12345,"I had never deployed a web app before, but by following this step-by-step tutorial exactly, I had my first app deployed on Digital Ocean in 20 minutes without a hitch.

https://simpleisbetterthancomplex.com/series/2017/10/16/a-complete-beginners-guide-to-django-part-7.html",1522684830.0
njancsar,Take a look at this. https://devcenter.heroku.com/articles/deploying-python,1522680886.0
GitW_85, I suggest looking into Docker even if it has a steeper learning curve. Django + Postgres + Gunicorn + Nginx. It sounds a lot but it's really simple.,1522700537.0
Jigglytep,"I followed the heroku django tutorial to deploy their sample app.

I then added my app to the tutorial, did an edit on the settings.py and did a git pus to heroku, 

Worked fine:

https://devcenter.heroku.com/articles/deploying-python

How are you using django for resume?",1522713652.0
FeatheryAsshole,"https://www.obeythetestinggoat.com/pages/book.html#toc has quite a lot about deploying, and those parts work without the TDD stuff as well.",1522680312.0
Poromenos,"I have migrated to Dokku pretty much for all deployments, because it's a really simple process. [I did a writeup](https://www.stavros.io/posts/deploy-django-dokku/) on it, I think it's easy to follow. I also created a [boilerplate repository](https://github.com/skorokithakis/django-project-template) that lets you use docker-compose and Dokku out of the box, so you can look at it and see my best practices.

I bought a cheap Hetzner server and put all my projects on Dokku on it, it's worked very very well so far.",1522692709.0
vampiire,"man i felt the exact same way. after spending a really long night and afternoon digging and piecing together a deployment strategy i finally got it working. 

i posted a complete beginners guide today on deploying using google cloud using what i learned. i made it a point to not skip any steps and it is filled with screenshots and code snippets. i PMd it to you. dont want to come across as spamming i just happened to come across your post now",1522702362.0
zettabyte,"Are you going to host yourself on your own DIY server?

If the answer to that is Yes, then by far the easiest thing to do is [follow the documentation on djangoproject.com](https://docs.djangoproject.com/en/2.0/howto/deployment/wsgi/modwsgi/) and use Apache2 running mod_wsgi.  You'll only have one server and one set of configuration to set up (Apache).  If you don't have any experience setting up and running web servers, then this would be the easiest, most well-worn path forward.

You will also see recommendations for  nginx + gunicorn, or nginx + uwsgi.  In that type of deployment, you have a web server (nginx) acting as a proxy between the browser and your django servers (gunicorn|uwsgi).  Two servers, two sets of configuration, more things to look at if something isn't working.

Regardless of what style you choose, you should replicate the production deployment on your local machine.  It gives you a chance to work through the configuration, and have a functioning baseline to refer to when things inevitably aren't working in production.

If you're going to deploy in a container / pre-built environment, then it's best to follow the documentation of those vendors.


",1522703629.0
ipmb00,"If you're just learning, I wouldn't recommend setting up your own server from scratch. Start with a PaaS like Heroku or PythonAnywhere.

DjangoGirls has a tutorial for PythonAnywhere: https://tutorial.djangogirls.org/en/deploy/",1522727421.0
nkuttler,"The Django docs have a section on deploying, have you tried anything from there? ",1522680088.0
Nicksil,"Yeah, just use the [`Serializer`](http://www.django-rest-framework.org/api-guide/serializers/) class.",1522682782.0
apreche,Can anyone please provide instructions on how to build a space shuttle? I have no knowledge of rocket science. Thanks. ,1522670229.0
hilmar8,"The ""whole infastructure"" is relatively simple. Just start by building a YouTube clone without user upload. Expand from there. Noone started with a server farm capable of millions of concurrent requests https://torrentfreak.com/spotifys-beta-used-pirate-mp3-files-some-from-pirate-bay-170509/ (not that I recommend this).

Your first exercise could be the following  (assuming you know enough Django to continue):

1) Encode your video files for different resolutions. Understand codecs, frame rates, resolutions, etc.

https://developers.google.com/media/vp9/settings/vod/

2) Serve your video files. Start by storing them on your file system where your django static files are. Store locations to these static files in your ""Video"" model.

https://docs.djangoproject.com/en/2.0/howto/static-files/

https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests

3) Create two pages. One for listing your video files. One for displaying your video file. This is essentially the same as building the blog in the tutorial, plus some javascript.

https://videojs.com/

https://github.com/kmoskwiak/videojs-resolution-switcher

https://github.com/streamroot/videojs-quality-picker

4) Now you have YouTube without user upload. Continue from there. Upload your files to S3 and serve them from there. Use Celery to automatically encode your video files. Read about some challenges like DRM https://en.wikipedia.org/wiki/Encrypted_Media_Extensions.

The most important part is just start programming and Google problems that you encounter on the way. Don't start by asking ""I need to build a netflix clone"". Ask ""I have a blog, now how to stream video"".",1522689392.0
booooomba,"Hmm what exactly are you having problems with? It seems pretty straight-forward.

Or are you concerned about the entire infrastructure? Which is a whole different story.",1522667898.0
BrickTop2290,"Awesome, I will read this soon! What does it cost each month to have a small Django project up and running?",1522659370.0
scout1520,"Thank you for this write up, I tried deploying an app there the other day and was quite confused by their docs.",1522674180.0
tocano,Do you have any idea what differences are involved if you're talking about the App Engine standard environment instead of the flex? ,1535385415.0
Hovercross,"DigitalOcean is great *if* you are comfortable managing and securing a VPS.

If you're not comfortable with that, I'd look at both WebFaction and Heroku. Heroku scales better for higher traffic sites, Webfaction is a little more on the hobby and personal site scale. Once you're really big, if Heroku's pricing becomes too much, look to move to AWS.

My stuff is at DigitalOcean, but I'm very comfortable as a full stack sysadmin and developer. I wouldn't try that route unless you either want to do a ton of reading to get it right, or are already comfortable with managing public servers.",1522636597.0
jd0m,"digitalocean offers a good service, it used for about 3 years, is not very expensive in my opinion the most expensive droplet we use is 20 dollars, I found another provider (vpsdime) a few months ago but I have not had the opportunity to use it",1522633715.0
PetterOfCats,Pretty easy to get 2.xx up on a flexible app engine instance. Lots of great features with GCE. Little more $$ than DO. ,1522636516.0
,[deleted],1522640580.0
PetterOfCats,I just briefly skimmed that tutorial. Not sure if any of those sh/scripts have commands to create MySQL or Postgres instance. Or if they run the initial migrations. ,1522641569.0
darceMac8,"pythonanywhere - http://pythonanywhere.com

From my experience it was pretty easy to setup sites, seemed really fast as they use AWS servers and they provide great customer service, I was often speaking directly to the guys running it for tech support. ",1522667339.0
antole97,pythonanywhere is a good choice if you are getting started and conscious about cost. With many other providers you'll get a bill that leaves you wondering whether you are hosting Facebook.,1522670633.0
,"Why  wouldn't u set the default image field to none by add required=False, and then if u wanna check against a valid image just pass form. Is_valid() to check against the whole form include image.",1522617125.0
crunching_karma,"You have to do it in `clean` method of the form. There you can do both - check existing form errors (self.errors) and modify returning values of the fields (cleaned_data). Not sure why you need to though, probably something is wrong with the idea overall.",1522625518.0
dershodan,"You should check the validity of the image in the respective `clean_` function in your Form class.

Just define in the form class a  function like so:

    class EditUserProfileForm(forms.Form):
        ...
        def clean_image(self):
            if image_is_ok(self.cleaned_date['image']):
                return self.cleaned_date['image']
            else:
                raise ValidationError(""something wrong with that pic, yo"")

image_is_ok  should be some function that expects a `InMemoryUploadedFile` object and maybe tries to load it into PIL or something to verify it's a image of allowed type.

If the image is not an image or of an  unsupported format, the `form.is_valid` will return `False` and will correctly raise a `ValidationError` for the image field (which your form renderer can display correctly on the website - showing the user why the form was not saved). So your **view** code can stay reduced to 

    if form.is_valid():
       form.save()

Keep form validation IN THE FORM (for your own sanity down the line) and read the django documentation on class based views and forms best practices.

Edit: now that i see it ... please **never** redirect to URLs like this  ~~return redirect('/accounts/profile/websitesetup2/')~~

Use `django.core.urlresolvers.reverse`",1522697195.0
sidarun88,"qs_with_count = Tag.objects.annotate(Count('entries'))

tag = qs_with_count.order_by('-entries_count')[0]",1522677268.0
ccb621,What aspect of security are you seeking answers on?,1522608529.0
njancsar,What kind of due diligence and research have you done yourself?,1522611419.0
ralfp,Likely secure on same level that other established ecommerce solutions from other frameworks or programming languages are: not having any access to your credit card data at any single time and delegating it all to payment trusted handler that you'll configure.,1522635177.0
patasucia,just learn the latest version,1522593815.0
Cictani,Why do you have Django 2.1 latest official version is 2.0.3 I would not use any beta release for production.,1522674826.0
alexthelyon,This is my first time sharing my writing so if you have any suggestions or (constructive) criticism let me know :),1522584998.0
buleria,"Wouldn't it be cleaner if @composed_serializer took a serializer_class argument to be composed with? Even a list of serializer classes?

Then the decorator could actually compose all the classes it was explicitly provided, instead of making an assumption that we're inheriting from a serializer we want to be composed with.",1522622932.0
grudev,Looks great to me. ,1522607452.0
,[deleted],1522640453.0
bhat,"There's a school of thought that Django's generic CBVs are far too complex; [Django Vanilla Views](http://django-vanilla-views.org/) implements similar functionality, but without the complexity.

It would be interesting to compare the two approaches, or at least note that a complex inheritance hierarchy isn't a requirement to implement the functionality that the generic CBVs provide.",1522705865.0
andytwoods,Any chance of letting us know of your new blogs via Twitter or some signup email? Really awesome content on your site!,1522598093.0
HeyHeyHeeeeeey,"All modern web frameworks have different things that might be difficult to grasp when learning them for the first time.

But like with anything you learn, once you've done it a few times it becomes second nature.

I will say the setup with Django might be hard to understand, atleast it was for me but Django's documentation is probably the best in the way they break things down and explain everything!

And if you find it rough to follow the documentation you have extensive resources like YouTube videos(sentdex, & coding entrepreneurs, are two users w/ great tutorials), or even sites like Django girls which help you setup a simple blog site! 

There's many resources to learn from with a simple google search. Try it out! I've been learning Django for about a year and use it for all my back-end development.

If I can learn it, you can also! Good luck ;-)",1522561141.0
krumg,"+1 for Django Girls. I always suggest it to everyone who wants to get into Django (even if they are not girls at all).

And generally I believe Django is one of the easiest frameworks to work with. Yes, it's a bit more difficult to start learning it compared to PHP but it's much easier and pleasant to be used in long term. And obviously it's much easier to start learning Django than learning Spring or N2O.",1522566118.0
supra621,I’d be interested in seeing something like this. I just use Python in views for recursion at the moment. It’d be nice to see a more Postgres-native implementation.,1522562675.0
Pawamoy,I am very interested in this. I wrote django-cerberus-ac which currently suffers a lot in performance because of recursive functions making a lot of queries to the database. Support for Postgres recursive queries would help.,1529331034.0
ClickHereForBacardi,">If, however, Phoenix is the right choice for your project, I believe you will be pleasantly surprised by the framework’s maturity and productivity.

I love Elixir and have used it since pretty early on, but I wouldn't call Phoenix mature. I'm not saying people shouldn't pick it up, but coming from Django, one might be a little disappointed in the lack of googlability of some of the problems you might run into.",1522538614.0
raiderrobert,"So I've talked with some people before about Elixir specifically. And perhaps the question is wrong-headed, but what is Elixir good at? ",1522585552.0
pat_the_brat,Try moving it from `<body>` to `<head>`.,1522485709.0
Improvotter,You've got all of your meta tags and more that belong in the `<head>` tag in your `<body>` tag. You should freshen up your HTML skills.,1522506868.0
radwon,"It displays fine in Firefox but not in Chrome here. Try putting the favicon in the root static folder and see if that makes a difference.

Also I see you've commented out the .ico version, was that the one that was working before?",1522485479.0
sodevious,"your stuff is getting rendered in the `<body>`, even though in your template you have it in the `<head>`.

Try listing your `<link>` and `<meta>` tags first, before any fb-root or `<script>`s. I think the `fb-root` div is throwing off the rendering. Try moving it to the bottom of the template.

https://i.imgur.com/7jeKtLB.png",1522515031.0
mothzilla,https://validator.w3.org/nu/?doc=https%3A%2F%2Fsouthafricans.online%2F,1522528405.0
isotropic_mk3,"If I was to guess, CSRF protection is the cause. You will most likely need to pass the CSRF token in your AJAX post. Check out this [link](https://docs.djangoproject.com/en/2.0/ref/csrf/)  for more info.",1522456588.0
ccb621,"It’s most likely CSRF-related. Use the network tab in Chrome Dev Tools to look at the actual message returned by the endpoint. In DEBUG mode, this will be the HTML for an error page that mentions a missing CSRF token. ",1522458780.0
joej,almost always is CSRF related,1522500707.0
Whoopska,"I can't easily read the code in your question, but maybe `get_fieldsets` 

https://docs.djangoproject.com/en/2.0/ref/contrib/admin/#django.contrib.admin.ModelAdmin.get_fieldsets

Unless you mean his JavaScript to expand the form when a checkbook is toggled.",1522440150.0
NoLemurs,"Generally it's considered a better approach to not modify your `User` model at all. The `User` model is intended to handle Authentication/Authorization, and not much else, and coupling that to business logic just creates hard to maintain code since there's a mismatch between the data structure and the conceptual divisions.

If you want to have specific types of users with individually specific information, the standard approach is to have `Profile` models that store the extra data and have a OneToOne field to `User`. So for instance you could have a `BankerProfile` and an `IndividualProfile` each with OneToOne fields linking to the `User` model.

This approach *does* allow for a user who is both a ""Banker"" and an ""Individual"". If you really don't want that (and you should consider this carefully, because it's often a lot simpler, and there's less downside than you might think), then you can create a single `UserProfile` model which has a OneToOne field to the `User`. The `UserProfile` can have any fields that you're confident will always be shared by all users, and then you can have a foreign key to one of a couple different models. There are a few ways to do that. One possible approach is a `GenericForeignKey` with `limit_choices_to` on the content type. There are also some third party apps that add support for polymorphic models. That approach can work well.

In any case, I really can't emphasize enough that separating the `User` logic from the `Profile` logic is going to make your life better.",1522498016.0
ccb621,"Multiple user models will lead to headache, especially if/when you reach the point that the same user can have multiple roles. 

Use groups and permissions with a single user model. The Banker group has whatever permissions bankers need. Individuals probably don’t need a group since they are merely unprivileged users. ",1522429535.0
the_other_dave,"Have you considered managing your own VPS? It's a bit more work, especially if you are new to server management, but very cheap. The only limit on features is whatever you can install on a Linux OS. And the only limit on traffic is the amount of bandwidth, RAM, and CPU cores you pay for, but you can easily upgrade for a reasonable amount as you go.

I have an un-managed VPS that I use to host about 6 different low traffic sites, mostly WordPress. It costs about $50 per year but I could have gone lower if I didn't need extra HDD space for some large multimedia on one site. I think it's actually overkill for the amount of traffic I'm getting at the moment.",1522437158.0
nannooo,"AWS is fine, Vultr, Digital Ocean, linode are fine too. Personally I wouldn't go with Heroku exactly for the reason you mentioned. Look into Dokku, it's a selfhosted paas. It's easy to setup and works great.",1522444343.0
cmothebean,WebFaction is another option. ,1522609169.0
frankwiles,Probably 80% of our apps these days are Django REST APIs (using DRF and usually Celery) with ReactJS front ends.  ,1522424763.0
jobelenus,"Yep, look at Django Rest Framework and Celery",1522424639.0
DudaFromBrazil,"Main project now is about an intermidiate layer between the ERP for a health insurance company and our stakeholders (users, doctors, hospitals, employee, etc). With 45k customers, this Django layer provide API for our mobile frontend (ionic) and web frontend (plain old HTML request and response. We are also experimenting with Django channels 2.0 and supporting some other areas.",1522461241.0
spapas82,"Using it for ~ 6 years now, mainly to develop in house enterprise applications for the public sector organization I work for. I rarely use any javascript frameworks beyond jquery and a little knockout for compelx situations thus I fully relly on where Django really shines: Good old request / response sites. 

I've also implemented a couple of SPA-like sites using DRF and angular / react-redux but such frameworks are not really needed for internal enterprise sites.

If you'd like to take a look at the packages I usually use with django you can take a look at my essential django package list here: https://spapas.github.io/2017/10/11/essential-django-packages/",1522619408.0
MattBD,"The old Django comments are available in a separate package nowadays. Might be worth a try.

It doesn't have full moderation but you could use signals to produce something easily enough.",1522426398.0
elpybe,Disqus should be easy to integrate.  There’s Django-disqus though I haven’t used that library personally.,1522423273.0
Semver-Hoxha,"If you restart your web server (nginx, apache, etc) it should pick up the change. It probably stopped the pyrhon application from even starting, so just replacing without a restart wouldn’t catch it. Unless the file it was moved to is in your python path, and included properly, it would be unreadable. It’s fine in settings, that’s where it is supposed to be. Just keep it out of source control. Usually secrets and things of that nature are automated to happen in the deployment. The pages that still worked were cached. Remember to always check the logs first!",1522421219.0
Nicksil,"This is redirect, referral link SPAM.",1522370489.0
dmckim,"Ok I actually figured out what I was doing wrong. I will post the correct code tomorrow along with a post on how to get leaflet working with django_filters and django_tables2, without using geodjango. ",1522372680.0
zettabyte,"Quick and dirty.  Obviously not tested, but I think this gets you moving down the road a bit:

    from django.db.models import F, Q

    price_query = (
        Q(product=123) &
        Q(stock__sold_out=False) &
        Q(price_category=F('stock__price_category'))
    )

    results = (
        Price.objects.filter(price_query)
        .order_by('-price')
        .values_list('price_category__pk', flat=True)
        .distinct()
    )

---
Edit:

So to turn the query into English:  ""I want the distinct `PriceCategory`s for `Product` 123 where `Stock.sold_out = False`. 

Could you also do this?

    PriceCategory.objects.filter(
        product=123,
        stock__sold_out=False
    ).distinct()


Models and a description of what you want would help...

",1522351140.0
old_faraon,">However, you can add/edit/delete tours without being in the 'employee' group.

You mean in the admin? The admin checks the permissions automatically but in Your own views You have to check the permission explicitly. You can use decorators or Mixins for the view (https://docs.djangoproject.com/en/2.0/topics/auth/default/#the-permission-required-decorator) or You can directly use request.user.has_perm()",1522336467.0
fdemmer,"the value of ALLOWED_HOSTS can by ""dynamic"", maybe reconsider your design: http://django-polla.readthedocs.io/en/latest/getting_started.html#allowed-hosts",1522313210.0
XarothBrook,"In your case it might be easier to set ALLOWED_HOSTS to ['*'], and add your own middleware that does its own checking before the request is processed fully.

Another way is to set ALLOWED_HOSTS to an interatable (i.e. a custom class instance) that returns the current list when iterated through, but that seems a bit too hackish.
",1522313240.0
jarshwah,"May I ask why your hosts need to be dynamic? Is it like a user signs up and gets their own sub domain? Can you give an example of the domains you’ll be using and generating? 

If it’s just subdomains then you can use a wildcard in the setting. ",1522319074.0
,[deleted],1522378110.0
eljohnsmith,You can use the render_FOO method which makes available record and value for you to use as you desire. You may need to do some jquery selecting to select the parent .td and to apply a css class to it. ,1522296723.0
andytwoods,"You could also try the TemplateColumn. It's super flexible. You specify a template that you want your cell to render from. And use {{ record.myVal }} to specify whatever you want. You can use the full power of templates, which is so useful (eg templatetags). ",1522303055.0
tagnydaggart,"Curious why you need to do something like this? One of the beautiful things about Django’s QuerySets is that they efficiently keep lazy references—or, via select_related, not so lazy as required. This makes iterating over the results a breeze.

What would you be doing with the denormalized results?",1522285559.0
majormunky,"> What I'm looking to get is every region listed for every game, even if there is no region data for that game.

I'm not a big SQL expert, but, I think I can show how to solve this problem.  Lets assume you have a reference to a certain Game object:

    a_game = models.Game.objects.get(pk=10)
    game_releases = models.GameRegionRelease.objects.get(game=a_game)

Now, we have a queryset (game_releases) that represents each link between a game and a region.  If your game does not have any region data at all, this will be empty, but, if it does have a region, then, you would be able to get access to that by looping over each game_release, and accessing the region by doing something like:

    for game_release in game_releases:
        print(game_release.region.region_name)

I may change things a bit depending on what im doing with this information, but, this should show you, using the ORM, how you would get access to those objects.",1522285653.0
anzasb,"The title sounds like there is a security risk in Django. There is None.
Just some fools leaving debug mode on.

Btw where does this 28165 figure come from?",1522234547.0
kennydude,"To be fair the default settings.py does state:

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True",1522237157.0
WesternHarmonica,"How can someone be foolish enough to run the server with debug turned on? You can see directly what code is running on the server, which is a major security threat.",1522245371.0
,[deleted],1522263113.0
pterencephalon,"I probably have one of them, among my early projects that are on heroku and public GitHub repos. (I did accidentally expose my aws password this way and all hell broke loose.) The problem is that as a beginner, it wasn't obvious to me how to separate development and production settings and keep production stuff out of my public repository.",1522240919.0
k4ml,Not enough education in our community that we shouldn't run development server in the public like this ?,1522226657.0
pyford,"I'm not experienced with Django just take a look at it every once in a while. I always found it strange that the defaults after starting a project expose secret keys and set the project to unsafe debug mode. The first thing I always do is create a secrets module, import secrets from there and ignore it in version control. Or use env vars. Either way, the environment changes from live to dev and the code adapts and not the other way around. It's much better to forget to set the project to debug mode while working than to forget to hide secrets when I deploy it.",1522242752.0
thomasfr,I've never understood why the debug error page defaults to print all environment variables and settings. You basically only need a stack trace most of the time so that should imho be the only thing printed unless you specifically request more.,1522234400.0
k4ml,"hmm, the first few apps that I can check on shodan (without  login) all are running the same apps, called scanners. Can't be a coincidence.",1522226993.0
joej,"Interesting ...

The settings have the most sensitive configs asterisk'd out -- via django.views.debug.get_safe_settings()

The django.views.debug TEMPLATE vars iterate over the request.META values, and **that** is where the sensitive configs, passwords are being displayed.

Caveat: yes, its still bad to disclose info via a debug page like this in general: enticement risk, etc. ... I get that.",1522504068.0
tweettranscriberbot,"^The linked tweet was tweeted by [@6IX7ine](https://twitter.com/6IX7ine) on Mar 27, 2018 11:43:57 UTC (76 Retweets | 107 Favorites)

-------------------------------------------------

28,165 thousand django running servers are exposed on the internet, many are showing secret API keys, database passwords, amazon AWS keys. 

A small line http GET [http://54.251.149.60:8081/](http://54.251.149.60:8081/) --body | grep 'DATABASE\_URL\|Mysql\|AWS'
\#Shodan \#django \#hacking \#cybersecurity \#infosec 

[Attached photo](https://pbs.twimg.com/media/DZStw40W4Aoas-R.jpg:orig)

[Attached photo](https://pbs.twimg.com/media/DZStw43W0AAF_01.jpg:orig)

[Attached photo](https://pbs.twimg.com/media/DZSuG-xWsAIJL7h.jpg:orig)

-------------------------------------------------

^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1522226630.0
,[removed],1522235054.0
netscape101,"Use docker compose + use nginx. 
Use links between the containers.",1522235774.0
netscape101,"Use something like this, its not finished yet, but this is to get php-fpm+nginx talking to each other:


    version: '2.1'
    services:
      php-fpm-container:
        image: php-fpm:latest
        ports:
          - '9000:9000'
        volumes:
          - ""./nginx/data/mediawiki-1.27.4:/var/www/html/mediawiki""
        restart: always
      nginx-container:
        image: nginx-mw:latest
        ports:
          - '80:80'
        links:
          - php-fpm-container
        volumes:
          - ""./nginx/data/mediawiki-1.27.4:/var/www/html/mediawiki""
          - ""./nginx/logs:/var/log/nginx""
        restart: always
",1522236121.0
vinyasmusic,I am looking to configure Django 2.0 with Angular 5 for a web app. Has anyone here used Cookiecutter to setup the backend ? ,1522320991.0
Brandhor,you can use a middleware maybe,1522227200.0
vtbassmatt,I'd probably model this with a permission check. Normal users have the permission (perhaps by group membership) while banned users don't. All your views except the ones available to banned users will need to check the permission.,1522235444.0
Saskjimbo,"""ALLOWED_HOSTS¶

Default: [] (Empty list)

A list of strings representing the host/domain names that this Django site can serve.
.
.
.

This validation only applies via get_host(); if your code accesses the Host header directly from request.META you are bypassing this security protection.""

Does this mean that allowed_hosts is cross refernced with get_host()? I though get _host didnt relate to host header, although now that I think of it, maybe thats the point...

",1522215832.0
porksmash,It will be available in `request.META` https://docs.djangoproject.com/en/2.0/ref/request-response/#django.http.HttpRequest.META,1522216019.0
furyfred,"There are so many wrong answers in this thread. Here is Django Canon:

1. Apps should do one thing and do it well. Don't put all your model in one app, it becomes unmanageable over time.

2. DRF use generics until you can't.

3. For app design, put the right code in the right place. User stuff goes into users. Billing stuff goes into billing. Articles stuff goes into articles. And so on. That helps to make things larger in larger projects.

4. That sample projecte you listened hasen't been touched in a year, you can find better maintained like Cookiecutter Django

5. Stop reading this thread and go buy Two Scoops of Django. Right now. All your questions will be answered better than byus here and you won't be stuck with unmaintainable code because you listened to anyone's bad advice here, including my own.",1522249473.0
2fplus1,"On 3) I will say that it is much easier to combine apps that have been made separately than to go the other way and split a monolithic one out into more focused pieces. There's a bit of overhead on having separate apps in terms of a little more boilerplate so you don't want to go too crazy, but if you're on the fence about putting some functionality into an existing app or a new one, I'd bias toward a new one.",1522250135.0
il_doc,"[Two Scoops of Django](https://amzn.to/2GgFARi) by /u/pydanny is kind of a bible of django best practices

also, read the code of [djangoproject.com](https://github.com/django/djangoproject.com) and look at their app structure",1522240653.0
pydry,"1) I start with core and put everything in there and then create new apps later on where it makes sense - i.e. where they constitute a cohesive and (relatively) self contained body of functionality.

2) I usually avoid class based views where possible and prefer method based views, although I recognize that I am sometimes in a minority in that opinion. I think the behavior of method based views is clearer and more obvious.

3) A good rule of thumb is don't (and don't worry about it) unless you see a clear separation of functionality that can be cleaved from the main app. Things that would make sense on their own without most of the main functionality (e.g. a survey module) make sense in separate apps.",1522224421.0
never_safe_for_life,"Aah, the eternal app question. Django really muddied the waters with this concept.  It makes perfect sense for distributing a 3rd party package, but for your own application how is it different from plain old Python modules? 

I would just say this: create all of your Models with the db_name attribute. That way when you change your mind later you can move them around.

Example: if you have table Foo it by default gets created as `app_foo`. But you should override it to be created as `foo`.

Also, I am a fan of one app.",1522218218.0
,[deleted],1522212295.0
core_dumpd,"Not a solution to your problem - but this (redirecting http to https) would most often be done in Nginx or Apache config, not Django. Any reason you'd not do it there?",1522208223.0
ubernostrum,"Is there a reason why you can't just use [the built-in feature of Django that does this](https://docs.djangoproject.com/en/2.0/ref/settings/#secure-ssl-redirect)?

Also, the usual way to check whether a request is HTTPS or not is via [request.is_secure()](https://docs.djangoproject.com/en/2.0/ref/request-response/#django.http.HttpRequest.is_secure).",1522216812.0
tjsimmons,"What web server are you using? As /u/core_dumpd says, this should be done there.

Also look into [HSTS](https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security) - that's also done via your web server, and will upgrade requests to HTTPS (for future requests) once a client hits your site and stores your HSTS setting.",1522209890.0
genesem,"Sorry mate, but this is so wrong.
do it with nginx frontend or use something like cloudflare's `redir all to https` feature.
No need to do this in you django app it's slow enought already.",1522221661.0
GitW_85,"What's up with these ""Django shouldn't be doing this"" responses?

Django can redirect from http to https: SECURE_SSL_REDIRECT = True",1522239389.0
simonw,"Find a job with a full time employer.

Freelancing is a very tough way to get started: finding and managing clients is almost a full-time job in itself, and is extremely difficult if you don't already have a portfolio of work and existing clients to provide referrals.

It sounds like you need to find a junior developer role somewhere that's large enough to be able to provide a solid support structure to help you develop your skills.",1522202118.0
nannooo,"Honestly, if you need money ASAP, then get a job that doesn't have any requirements and is not related to this field. Think of dishwashing, cleaning etc...

Not trying to be the negative guy here, but to start freelancing you need to have a VERY solid base and preferably years of experience. You have to know what you are doing in order to succeed. 

In the meantime, it's probably best for you to start with html, then move to CSS, then to Javascript and then to Python/PHP whatever you prefer.  Start here: https://www.codecademy.com/.

If you want to skip all of this, you could also create a service to build Wordpress sites based off standard themes for a fee, but you probably can't charge much for that as every kid on the block can do that. Also, once customers start to ask for changes (and yes, they will!), you are pretty much stuck without any knowledge of all of the above.

Good luck.",1522201921.0
,"No offence but your not ready to charge people for your work.

",1522286037.0
HeyHeyHeeeeeey,"Lets be realistic here.. if you don't even know html, css you have a lot of learning to do!

This isn't the kind of job you can get just because you want money, you have to enjoy it & it also takes years to learn this stuff.

My advice would to be to start learning the front-end without bootstrap! You should be able to build static web pages manually and then, THEN you maybe can start to learn the back-end.

Good Luck!",1522383542.0
netscape101,If your motivation for getting into this is money then you should try dealing drugs instead. No offense. But don't get into this if you don't love it.,1522236053.0
Madjura,"Sounds like you might want to use [pagination](https://docs.djangoproject.com/en/2.0/topics/pagination/) if I understand correctly? Other than that, put your posts in a <div> and replace (or update) the contents of it after your AJAX request.",1522199530.0
mogosselin,"Usually, with AJAX requests, we use data formatted using the JSON format in the response. Is it what you're doing?

What you need is to return the list of posts in a JSON format.

Here's some example:
https://stackoverflow.com/questions/2428092/creating-a-json-response-using-django-and-python

So basically:

* You POST the data to a view
* You retrieve that data from your view's code
* You add the new post
* You return the response containing all the posts JSON formatted (or just the new post)
* From the 'success' of the Ajax call in JavaScript, you use a 'HTML template' (there's JS render that can do that, but also more complete JS framework like angular etc), fill the place holder with the data and display it on the page.

You say that you have too much stuff in the post.html file, that might be a problem. You should be able to extract some kind of template out of it and just have place holders for title and text, for example. And there, you can use JavaScript to simply duplicate that template, fill the placeholders with your data that you received, and add it to the document.

If you can shar what's in your post.html it could help (simply copy it to pastebin.com or something similar)

A cleaner alternative would be to use Django Rest Framework and build a normal API + use a JS framework like Angular, Vue, React... but it might be a bit too advanced if you're just starting out.",1522207526.0
majormunky,"I have done something recently, where i'm building a fairly complex table as a result of an ajax call.  All I do is use Django's render_to_string shortcut, and render the data using a django template, and send the html string back.  When my JS side gets the string, I just use jquery to set the tables wrapper div with the html I got from django.  Works great, pretty simple.",1522284381.0
mephistophyles,"You'll want to look at using reactjs or vuejs to render and update the DOM after the second request. There may be a way to use channels to do it with ""pure"" python, but IMO this is easier. ",1522199460.0
Nicksil,"Read through the [Aggregation](https://docs.djangoproject.com/en/stable/topics/db/aggregation/) section in the django docs.

You'll learn about all kinds of goodness including `Sum`.",1522196003.0
alexthelyon,"Essentially you have an event based system. Transactions are events and the state at a given point in time is the sum of all transactions before that point.

So you have two methods, one being like you said storing the current balance. This has some tradeoffs for example every read, update, delete etc will now also have to recalculate the balance. 

The second option is to calculate the balance by summing all the transactions every time. This is expensive, however with regular ""freezes"" (ie storing the entire state every 6 hours) you only need to load transactions since the last freeze and apply them to it. This mitigates the risk of desynchronization between the calculated sum and the stored sum but means that there is likely more work per read.

I would personally use the sum approach with regular state freezes purely because I think storing calculated values in a DB is asking for trouble unless you're really careful.",1522196231.0
pat_the_brat,"https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04

Should be everything you need, unless channels has specific requirements?",1522178134.0
jaht1989,Today I deployed a project in production and I used systemd I created 2 files as a daemon service and only used Nginx for proxy.,1522216902.0
tagnydaggart,"This is not an issue with Django. You are just using Set operations on a QuerySet. Since QuerySets are iterable, they are acceptable inputs, you’re getting a set out the other end. ",1522185632.0
checkYourCalendar,"Anybody actually have any success with this?  
Using the trailstash fork wasn't solving the libjasper error",1522251415.0
iconfinder,It's difficult to tell what's wrong without seeing the query. Try getting the resulting SQL as well.,1522150113.0
flipperdeflip,"Hard to say without the code.

One thing to keep in mind order of methods matters with some QuerySet operations like annotation and aggregation.

For example: https://docs.djangoproject.com/en/2.0/topics/db/aggregation/#order-of-annotate-and-filter-clauses

There is a bunch more of those special cases on that page.",1522151607.0
daredevil82,"FYI, when asking these kind of questions, its best to show what you're doing and the how the results differ.  Otherwise, any responses you get are highly generic.",1522151868.0
iBlag,"Hey OP, please use Markdown to format your code (eg: indent your code 4 spaces so it gets rendered in a fixed width font and underscores aren’t interpreted as italics).

On mobile or I would link you to Reddit’s documentation on their implementation of Markdown they call “Snudown”.",1522173590.0
shabda,"You can see the query using `str(queryset.query)`. Compare the query with the what you expect.

If its different start by removing parts of your queryset, until what you get matches what you expect. Then figure out a different way to express your query if needed.",1522307549.0
flipperdeflip,"If this happens for only one user it's probably user or device error, like they had orientation locked and effectively made a landscape picture with the phone rotated. 

Do you have the original? ~~Images don't magically rotate.~~",1522134832.0
tagnydaggart,TemplateTags are very powerful for this sort of thing.,1522120924.0
andytwoods,Have you tried https://django-tables2.readthedocs.io/en/latest/? Really nice way of creating tables automatically. ,1522179621.0
zettabyte,"My notes for a single person managed app as a side project:

1) As Tosh says:  Get your dev environment running against MySQL as soon as possible.  It's an easy setup, an you don't want to debug that kind of issue.

2) Make sure you're doing ""git tag <version>"" for each release to production.  It makes like much easier when you need to roll back to a known good state.  I always use vYYMMDD.hhmm, e.g., v180326.1627.

3) Now that you're live in production, you need to pay closer attention to your migrations.  Adding new columns and tables is usually pretty painless, but altering existing columns can have long running times and unintended consequences.  You'll just need to pay attention and, even better, run them on a backup / QA instance of the production database.  This is where you may need to have a maintenance window where you can shut down your listeners and update your app without users interacting with it.

4) Develop tools to download a backup copy of your production database and restore it into a local database.  Use the restored DB as a QA instance, or even your regular dev instance.  Bigger shops may frown on the latter, but for a smaller one man team it can be pretty helpful and convenient.

5) Develop a suite of Fabric functions to tag and deploy your app.  As an example, for a few apps I manage, I can:  `fab tag` followed by `fab deploy`.  `tag` will apply a git tag as described above, while `deploy` will prompt for the tag to deploy, warn about migrations, deploy the code via a `git checkout --force`, collect static files, reload uwsgi and celery servers, and dump out systemctl and pstree data.  If you're just deploying changes to a single, long running instance, Fabric will serve you really well, with a minimum of mental lift.",1522089783.0
ToshiUmezawa,"Id highly recommend using mysql (same version) in development. the first time you hit an implementation difference between a django orm query in sqlite vs mysql you will realize why after hours of debugging.

I just posted about deploying to production and had some responses, there is fabric, docker + kubernetes, switching to heroku, and a few more recommendations in there.",1522086601.0
core_dumpd,"I've become a huge fan of elastic beanstalk for this kind of thing, as it gives you a lot of options. 

You can scale your environment up to two instances and `eb deploy prod` to roll out app code changes one instance at a time (or a configurable percentage at a time if you have a lot of instances behind your load balancer). Or if have a -dev and -prod environment set up you can use their swap URLs feature to do an instance flip of -dev to -prod - which may make a bit more sense if you have breaking migrations to deploy.

We've had 0 downtime in 6 months with this setup, and push out weekly updates to our prod environment. We've also found that with static files offloaded to S3 we can easily host our site with a single load balancer and two t2.micro instances (3 gunicorn workers each) and an average 200ms latency for even our busiest periods.

And by all means use the same DB you use in -prod for -dev. If need be run it in Docker on your local workstation (or dev environment), it can be almost as simple as sqlite. Sqlite does not offer full feature parity with MySQL and PostgreSQL - things like JSON support for instance, likely just aren't there. You could also find some things work fine in sqlite that do NOT work fine in MySQL.",1522101162.0
mogosselin,"What's you're production 'server'? Is it something like Heroku, Digital Ocean, etc?

Anyways, some quick recommendations:

* Have a mirror environment between your local and your production. That way, you can test migrations easily on that without any fear.
* Just use 'migrate' in production, you shouldn't have to use 'makemigrations' there. Makemigrations creates the migration files, you can just add them to Git and then run 'migrate' on the production server.
* Backups - Daily backup of the data and your production server. Also, having a quick way to do that just before a deployment is also a good idea. That way, if you screw up something, you can always revert back to your old version.

And to go more on the 'pro' path:

* Have automated tests (unit tests / automated integrated test)
* Push everything automatically on your 'integration/test server' as soon as you check in something
* Run these tests automatically on your integration server after something was pushed.
* Use a continuous integration system. Just look for Continuous Integration Django on Google. I personally use Jenkins when I need one.",1522107149.0
simonw,"Congratulations on the launch!

The single most important thing about deployment is that it needs to be 100% automated. You need to have a single script (or, even better, a button you can click in something like Jenkins or Travis) which deploys the site in a single step.

Ideally this would handle the following:

* Deploying the latest code to your production server(s)
* Pushing any static assets to a CDN
* Ensuring any new database migrations have been run

The best deployment processes run without any visible downtime to your users. Generally the way this is done is to deploy two copies of the site at a time - the one that is currently ""live"" and the new version. Once the latest version is running you can switch traffic over to it using your HTTP load balancer (usually a tool like ELB or nginx or HAproxy).

Getting this stuff up and running is quite a lot of work, but once you've invested the initial effort it will make site operations SO MUCH smoother in the future so that work will pay for itself.

One of the reasons I run my personal projects on Heroku these days is that it makes achieving these kind of deploys really easy. I wrote about my current Heroku setup here: https://simonwillison.net/2017/Oct/17/free-continuous-deployment/",1522094227.0
rackmountrambo,https://www.google.com/search?q=How+do+you+make+Django+search+for+templates+in+root+and+application+directory%3F,1522075109.0
ramse,Timeout length: https://devcenter.heroku.com/articles/request-timeout,1522069212.0
asplodey,"Well, it looks like a worker is timing out when you POST to /train/",1522067158.0
DmitriyJaved,task that sends email in user created signal? ,1522063373.0
ramse,"settings.py

    ACCOUNT_FORMS = {
        'signup': 'mysite.account_forms.CustomSignupForm',
    }

mysite/account_forms.py

    class CustomSignupForm(SignupForm):

        def save(self):

            user = super(CustomSignupForm, self).save()

            mail_admins(...)  # https://docs.djangoproject.com/en/dev/topics/email/#mail-admins

            return user
",1522069054.0
simonw,"There's no built-in mechanism but having your signup view send an email (or post a message to a Slack channel) is pretty straight-forward.

You may also find this technique relevant - it describes a way to build a combined ""recent additions"" feed across multiple models: https://simonwillison.net/2018/Mar/25/combined-recent-additions/",1522067557.0
RolandBuendia,You can use AJAX calls to send the contents of a form embedded in a modal.,1522058016.0
jobelenus,You need to ask a far more specific question,1522080234.0
xinaked,why tho,1522050257.0
geosoco,"Why exactly are you trying to optimize this? Do you have data that people do this regularly?

I ask because while there are solutions to this, the ones I know of can get very complex very quickly and require a lot of other processes/tasks running constantly, plus introduce situations where scaling your app might serve pages where new data isn't replicated. 

The simplest solution would be a delayed send from the page. It sounds like you're using javascript, so you can set a timer for 5 seconds later and possibly before following a link where it flushes the data.
",1522050588.0
haloweenek,"That's a preety normal model is you ask me ... If you need extreme speed you can use Redis for keeping the likes state, but it would still need to be saved to the db only - later.

If i were supposed to design solution for this i'd go for somewhat consistent model. I'd store the likes count/last modified in redis and dump the state to db using celery(queue) or cronjob(once in a while). This way i'd have quick access to the likes count (redis) and consistent state (celery job). ",1522051988.0
y0y,"This isn't necessarily a django specific problem. When designing your data storage solution, you have to think about your data access patterns. It could be that the ""like"" functionality is better suited outside of your main database. You could store this information in, say, Redis instead, which may have lower overhead and be able to handle higher throughput.

Though to be honest, there's no reason a standard relational database solution can't handle this at the load you're likely talking about.",1522060074.0
,"Caveat: I'm a relatively new Django and Python dev, but a long time developer in C, Java and other languages.

Seems like the easiest way to accomplish this would be to iterate on incoming likes/dislikes that go into some kind of FIFO queue and then use system time and # of outstanding DB hits to pace and even out how many times the database gets hit.  Memory is cheaper than CPU.",1522122178.0
TunaBoo,"Have you seen how reddit does voting?  All votes are just client side cookie counts... like  comment#12345: +1, comment#444444: -1

Then on the next page load, the server gets sent all of this data.

Some blog posts about it somewhere, it is quite clever. ",1522077539.0
iBlag,"Add a DB field validated that makes sure the email address is valid, and add a `unique=True` constraint to the field to ensure that emails are unique.

Don’t confuse validating email addresses with ensuring that they are unique - they are two separate constraints.",1522020727.0
mogosselin,"In MVC, anything that touches the database should be in the model _layer_. You could have a method like 'is_valid_email(...)' on the User model and call that from your Serializer. 

Note that the Model layer doesn't mean that you have to have a Class per table in your database VS creating new classes.

The Serializer is the Controller in DRF btw.

You can Google 'where to put validation MVC' and you'll get  plenty of answers :)",1522020599.0
Saskjimbo,setting email to unique is a bitch in base django. install django registation redux. one of its options is to ensure email is unique plus is allows your system to send verification emails when a user signs up,1522214834.0
Brandhor,"you are probably trying to put an ndarray object inside the session and ndarray can't be converted to json

you can only put json serializable objects in a session",1522009579.0
simonw,"This technique works OK for picking a random item from your full table, but most applications that I've built instead need you to pick a random item from a subset of records e.g. everything relating to a specific foreign key.

I've solved this successfully using redis in the past: create a redis set of potential row IDs and then use srandmember (which was added to redis at my suggestion when I needed to solve this exact problem)",1521987339.0
liquidpele,"    qs = Model.objects.filter(...)

    with transaction.atomic():

        qs[random(0, qs.count())]",1521990456.0
flipperdeflip,"You can also add a column with a random value, put an index on it and then filter for the first row with a value greater then a new generated value. 

If you could also use your ID column, but you'd get a bias real soon (if you have deletions or extra filters).",1522053507.0
UloPe,"This isn’t the answer your looking for but I can’t recommend using gmail as a mail delivery backend for a web app. It’s way too easy to run into rate limits or some other reason why they will suddenly stop accepting mail via smtp. Been there done that...

I’d instead suggest to use something like mailgun.com which is specifically designed as a (web) app mail relay ",1521968855.0
cracknwhip,Are you using a password generated for the app and not the email account password? Have you tried turning on TLS and changing the port? I thought google required TLS.,1522140782.0
JayTurnr,Did you solve this? I'm having the same issue.,1530008518.0
philgyford,"Thanks for this Simon. In the past I've tried different ways of doing this kind of thing, all of which ended up being over-complicated. I'd either over-looked `.union()` or it was a bit too new for me to rely on last time I needed something like this. Now I'll know for next time.",1521981450.0
xinaked,why not just make 3 smaller queries,1522003585.0
FeatheryAsshole,"django is a web framework, not a database; it USES databases, such as mysql or sqlite.

you can probably build your website with django, though.",1521939507.0
ramse,What about that site makes you think it even needs a database?,1521939724.0
supra621,"Short answer: no. A database is a database. Django is a framework.

Django can use a database and build tables based on models, and then acts as a way for you and your users to read/write things to the database. By default, Django will use a SQLite database. That SQLite file can be viewed by itself with another program - there’s nothing special about it and it’s not a file type unique to Django. All Django is doing is mapping Python objects to the data in that database so that you and your users can interact with the data.

That database can be anywhere you want. You can keep it as a local SQLite file, or it can be a database hosted by a cloud provider, or it can be an existing database from another application. You just have to tell Django how to use it, which you define in models.py.

The design for Django models is, conceptually, no different than any other relational database design. You may want to look into some database design theory and then revisit Django from that perspective.",1521942500.0
Jigglytep,"So I have a site that allows users to make custom queries against a database.

The product database along with the user information is hosted by Amazon's RDS and I use Heroku to host the django portion.

I hope this answers your question.",1522074205.0
ic_97,Django can do your job but it isn't a database it is a framework for backend related jobs that include managing databse.,1522675623.0
TunaBoo,"Kubernetes deployment.

Build  docker image, run migration, update kubernetes deployment to point to new sha and it just rolls out smoothly with zero downtime. Changed  my life.",1521943940.0
simonw,"I run my personal projects on Heroku, using Travis CI to get continuous deployment: I commit code, Travis runs the tests and if they pass Heroku deploys the latest version automatically.

I wrote about how I set this all up here: https://simonwillison.net/2017/Oct/17/free-continuous-deployment/",1521948146.0
xBBTx,"I use Ansible. The database migrations are a step in the full deployment. I usually put up a 503 template for a minute or two - we can definitely get away with that kind of 'downtime'.

The Ansible playbook is parametrized - by default it deploys the master branch, but it can also take a git tag to revert code changes. Rolling back migrations is a manual action.",1521993181.0
i_amwithnail,"Github Pull Request into Master.  Multiple PRs are bundled into a release, which is deployed into the QA servers (mirror of production), before being rolled out. 

-  Push to master builds it and runs tests in Travis.  
-  Travis builds a docker image, which is pushed to Dockerhub. 
-  We use rundeck to schedule deployments, which uses Packer to pull the image, build an AWS AMI of the system, runs migrations (through Salt for some reason that I'm not clear on), registers that as Autoscale Launch configs.  Those Autoscale groups (web, celery, celerybeat) are then deployed into production (minimum of 6, maximum of 30 machines per ASG, depending on load/response times).  I'm not convinced of the utility of this approach, but is what I inherited, as I feel it'd be cleaner and more readable to just provision the autoscale group in CloudFormation, push the deploy to them with ansible, and then swap out our load balancer for the new one, to do a really nice blue green deployment. 

We're moving to Kubernetes in the medium term (2-4 months), as our current method grew organically, and isn't scaling well, for obvious reasons.  

Eta:  Migrations are, and always will be, a pain.  At the moment, we stop our celery workers temporarily (as these do most of the database accessing, for a variety of reasons) to minimise the connections, and run migrations against the first image we create as a launch config.  The main way to avoid pain in migrations is by carefully planning model changes and trying to avoid things that cause full table locks, even if that means two separate migrations.  This is part of our QA/review process now.  ",1521979245.0
Slippery_Panda,"I use fabric.  I wrote a script which uploads the latest version from git, then collects static, migrates then finally moves it to production without downtime.  It was tricky to get it not to have downtime.  If no one else gives you a better answer message me and I'll add details.

I also use heroku, I'm not convinced it's all the much easier.  I have to do annoying work arounds there all the time.",1521939700.0
2fplus1,"This is a few years old, so parts of it are clearly outdated, but this has been my general approach: https://thraxil.org/users/anders/posts/2015/12/06/Continuously-Deploying-Django-with-Docker/

Just go straight to Kubernetes though. What I describe there gets into some details on how things work with Django in a Docker environment which might help clear things up for you, but the overall setup is sort of a buggy, incomplete, ad-hoc Kubernetes. I haven't bothered switching over yet because that setup has been working fine for me and I have other priorities right now, but if you are starting from scratch, just go straight to Kubernetes and don't look back.
",1521972319.0
hectorlab,"I'd recommend you Two Scoops of Django:
https://www.twoscoopspress.com/products/two-scoops-of-django-1-11 ",1521924742.0
ThatOtherBatman,Two Scoops of Django.Anyone who tells you different is lying to you. ,1521925435.0
shabda,"The authors of two scoops of Python maintain a list of Python books.

https://www.twoscoopspress.com/pages/current-django-books",1521979292.0
hologram13,Lightweight Django is such a good book. It's a shame it hasn't been updated for Django 2!,1521990478.0
netscape101,"Really good book along with two scoops of Django:
https://www.obeythetestinggoat.com/book/chapter_explicit_waits_1.html

Also have a look at the videos on safaribookslonline. There are some cool django stuff on there.",1522058690.0
booooomba,Absolutely NOT,1521911462.0
athermop,"Well, naturally, you're going to get some biased answers from this subreddit just because it's full of people who use and like Django (like me!).

However, there's a certain strain of wrong developers who have this feeling about ORM's in general...not just Django's.  A lot of their arguments and examples about where ORMs fail at their job *are* completely accurate, and there *is* a danger of complacently not falling back to raw SQL where appropriate. 

**But really you should just use the ORM most of the time.**

You should view the Django ORM as a storage layer.  The fact that it uses SQL as its backend is an implementation detail.  Ideally, implementation details are things the developer doesn't have to think about.  Unfortunately, we don't live in an ideal world.  There will be many times where `raw()` is a thing you should use and you should hand-craft your SQL.  If your query can be written more clearly or to run faster as SQL then you should do it.

You should stick to the ORM the rest of the time because *somehow* you have to have the information from the database available to you in your code, and its better that that *somehow* is something as robust as the Django ORM.  It is more secure, more portable, and more understandable by more people than what you're going to write by hand.",1521912410.0
pat_the_brat,"I personally wouldn't use Django WITHOUT its ORM. If you want more control / rawSQL, use Flask IMO, but for most use cases, Django's ORM is great.

There might be reasons to use Django and raw SQL, but those are outliers.",1521911268.0
bonestormII,"There are a number of critical reasons you definitely should use an orm (writing tests,  for example) and some imagined/outdated/hypothetical reasons you should not (claims that doing so will necessarily improve performance).

The main thing is to understand a bit about SQL and the way databases work to avoid doing inefficient things in your orm model code. 

Fortunately, it’s not really an either/or situation, as you can use both wherever you feel appropriate. Using the orm is, in fact, considered best practice and performs quite well. Use it until you identify a specific issue and go from there.

",1521912829.0
blbil,"The Django orm, like ALL orms can and will produce some shitty SQL, as well as have systemic problems such as the old N + 1 query problem.

That being said, used with discipline, the Django orm is lovely. You should always be aware of what types of queries it is doing. I recommend paying attention to the sql it is generating.

Basically, use it... But don't trust it to do the right thing.",1521917424.0
kvdveer,"My application consumes a DB which is under strict DBA control. I use the orm, but I just don't use migrations in production (although migrations are used for test databases).",1521912580.0
yonsy_s_p,"your friend must have a DBA Team that manage all the Database processes (creation, reindex, migration, ...) and this team must be scared that NonDBA guys (Sysadmins, Developers) touch or even look at their **sacred** databases.",1522160596.0
garion911,"I personally could give or take the Django orm. But I can't use Django's to create or manage the database.  The reason is that we need to coordinate with a database team that manages all migrations, configuration etc.  I use the orm in the app though, just don't manage the database with it. That does lead to its own issues though, as Django assumes its the one in charge quite a bit.  ",1521917104.0
mazurbeam,Generic relations seem to be a good scenario where Django ORM doesn’t work very well. Gave up on trying to make it work with Postgres and switched to MySQL,1522346830.0
ic_97,Django ORM is in my opinion the best thing about django its really simple and easy to write.,1522675740.0
irve,How I have thought of it is that if I need something more than Django ORM can handle I hopefully am able to afford a person who knows how to scale the system without a complete rewrite in some other language :),1521912541.0
MarsupialMole,"Everyone should stop using the ORM for the came reasons that everyone should stop using php. Is your project better off without it?

In general my answer would be probably not because it probably doesn't make a big difference in projects where you don't already know the answer.",1521933062.0
p_r_m_n_,"Doable for sure. Inspect db’s, export models, and make sure managed in the Meta class is false. 

https://docs.djangoproject.com/en/2.0/howto/legacy-databases/

https://docs.djangoproject.com/en/2.0/topics/db/multi-db/

https://docs.djangoproject.com/en/2.0/ref/models/options/#managed",1521905937.0
gopackgo90,"I think Microsoft SQL Server support is kind of spotty. There seem to be a few options but none of them seem to be actively maintained. Here are some options:

https://bitbucket.org/Manfre/django-mssql

https://github.com/denisenkom/django-sqlserver

https://github.com/aaugustin/django-pymssql

I think these require you running your django app on Windows. django-mssql seems to be the most mature, but only supports up to django 1.8, which isn't *terrible*, but isn't great for a new app.

EDIT: Also found https://github.com/michiya/django-pyodbc-azure which looks like it might be the most modern attempt at django and mssql.",1521907130.0
fgmco,"In your urls path recievea views as function, not classes. Put the class with .as_view()",1521903898.0
ajalele,"    Exception Location:	C:\users\a\projects\ecommerce\lib\site-packages\django\views\generic\edit.py in get_form, line 45",1521905215.0
babblebat,You have links to http content in a page that was served over https.  Chrome says this is a no-no.   ,1521898250.0
xenopizza,"The debug info you provided isn’t very meaningful (a stacktrace from the Django side would be good).

I suggest adding Sentry to support to the project (getsentry.com) i will help you down the line as well",1521887312.0
mogosselin,"Like the others said, we would need more information to fix the problem. 

The image from ofcode.org seems to only show the request that the server is getting (like XYZ accessed that URL, etc) but not if it failed and it doesn't provide the error message. These log are not that useful to debug a web page that throws an error.

In the other screenshot, we can see that your app's URL is returning a 500 error, which mean 'Server error'. It's probably Django throwing an error, so we need to get more details on it. If your DEBUG setting is False (which it should be in production), it won't give you the error details.

If it's easy to reproduce in production, you can simply turn (quickly and temporarily) your DEBUG to TRUE just to get the stack trace of the error, which will give way more details. Then switch it back to FALSE. You should eventually check how to log errors with Django in files, which should be the minimum (someone suggested sentry.io, it also work great). 

Anyways, the stack trace page should look something like that:
https://i.stack.imgur.com/1wcmb.png

If you copy the message or screenshot it, we should be able to help you. It's highly possible that you'll also get enough details to debug it yourself.

Good luck! :)",1521902706.0
wskyindjar,What does the heroku log say? Should dump a stack trace,1521902920.0
Slippery_Panda,Add Django debug toolbar to prod. Add your IP to internal ips.   That will help you track down your issue fairly quickly.,1521894682.0
fdemmer,one database. its basically just new datatypes and functions in postgres (=postgis).,1521882508.0
pat_the_brat,"Same DB, since like U/fdemmer said, it's just extensions to regular PostGIS. Personally, I use [this postgis container](https://hub.docker.com/r/mdillon/postgis/) with Docker. Much cleaner than installing PostGIS and its 8000\* dependencies on the host system, and you can easily select which version to install - e.g. PostGIS 2.4 with Postgres 10, which is newer than what is usually available in your distro's repos.",1521887566.0
rackmountrambo,"Honestly, geodjango sucks. The search engine geospatial systems work much better  these days and I would recommend using them instead.",1521873501.0
beholdsa,I use Mezzanine for my CMS with the Cartridge eCommerce plugin installed. It works quite well.,1521853599.0
whatever_meh,"I’ve used Braintree twice, and now I won’t use anything but. It’s integration is very simple. I wish all APIs were so beautiful. ",1521855072.0
thatyourownyoke,Stripe is the one for me it’s easy to use ,1521903438.0
lzantal,My favorite one is http://satchmoproject.org,1521870667.0
tomdyson,"One option is Snipcart + Wagtail:

 - https://snipcart.com/blog/case-study-carlos-in-huis-django-wagtail-cms
 - https://snipcart.com/blog/django-ecommerce-tutorial-wagtail-cms

There are a few (mainly Dutch) large e-commerce sites on Oscar + Wagtail:

 - https://github.com/LabD/django-oscar-wagtail",1522074880.0
CKreuzberger,"When you want your locations to present like this, you need to make sure they are set to read_only in your serializer:

``locations = LocationSerializer(many=True, read_only=True)``

Else your serializer needs them to be present.
",1521799860.0
the_nate_smith,"Try naming it location_set instead of locations.

Edit: actually It looks like your overriding related_name in your model:

    project = models.ForeignKey(Project, null=True, blank=True, related_name='projects', on_delete=models.CASCADE)

On a side note you might be confused on what related_name does. It specifies the name of the reverse relationship from a particular project to the set of locations. If you don't specify it it will be 'location_set'. That would look like this:

    Project.objects.first().location_set.all()  # Get all locations from the first project

With the way you are setting related_name it would be:

    Project.objects.first().projects.all()  # Get all locations from the first project

So I think you want your related name to be ""locations"" here. not ""projects"". I think settings the related_name to ""locations"", making migrations, and migrating will fix your issue.",1521809412.0
jscn,"Say you had a contact form with fields for the user to enter an email address and phone number. You don't care which one the user provides, but they must enter one of them. If they submit the form with both fields empty, that would be a non-field error.",1521788486.0
defmacro-jam,"Think in terms of where you'd want to display an error message on a form.  An example, might be in a user login form.

The username may follow the rules for a username.  The password may follow the rules for a password.

But the username/password combination doesn't match a user record in the database.  So a non_field_error might be ""Username with that password not found"".

So you might want to associate that message with the whole form instead of either the username field or the password field.",1521810295.0
ramse,"    with open('domains.txt', 'r') as fo:
        ALLOWED_HOSTS.extend(fo.read().split())

That assumes 1 domain per line.",1521808829.0
oliw,"Setting *any* value here is going to be static. That is to say, if you need to add entries to the file, you'll need to restart Django to have that re-read back in.

Having read some of your comments, it sounds like you might need something more dynamic. If a company signs up you don't want to take every other site down (even for 100ms) just so their domain will work with this.

As is already suggested, you can disable the built-in host check with `ALLOWED_HOSTS = ['*']`. You don't have to leave it there. Just write your own host check in an early middleware (as [the docs](https://docs.djangoproject.com/en/2.0/ref/settings/#allowed-hosts) suggest), based on a Model lookup, or reading this file, or whatever. Shouldn't be too taxing to write and you'll have dynamic host checks.",1521833289.0
asplodey,How many hosts do you need to allow???,1521789109.0
badlyDrawnToy,"Sure it's possible - if you can convert them into a CSV string.

Take a look at django-environ

https://github.com/joke2k/django-environ",1521793680.0
patasucia,"why not using ALLOWED_HOSTS = [""*""]?

Too insecure?
",1521815107.0
iknowdatruth,"Are you entering the domain or the IP address in the address bar of the browser? Whatever you put there is included in the request as there Host header, which Django uses for filtering based on Allowed_Hosts.

If you want something more dynamic so you can use various arbitrary domains without updating that Django setting, look into a proxy which can rewrite the host header in requests. Something like haproxy, nginx, or traefik.",1521782201.0
rajbabu0663,"It's not complicated at all these days. Check out let's encrypt. The big picture being: the traffic between client and nginx is encrypted. Once the packet reaches nginx, it forwards it to your gunicorn app.",1521775055.0
elingeniero,"Using nginx as a reverse proxy to your Django application is the right way to go - here's the guide: https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-uwsgi-and-nginx-on-ubuntu-16-04

Then it is very easy to setup SSL on nginx using let's encrypt: https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04",1521794636.0
mrunkel,"You didn't explicitly say the most important part. :) 

What exactly is serving the content? ie, what is proxying the content for gunicorn?  That is where you'll need to configure HTTPS.

The flat out easiest way to do it is here: https://certbot.eff.org/

Just input your server OS and webserver and they will give you step and step instructions.   The best part is that thanks to letsencrypt, it's absolutely free.",1521792954.0
MrStevenJobs,I used let's encrypt and it was easy as pie. I just followed someone's step-by-step guide.,1521794311.0
mrunkel,"Well, it shouldn’t be that hard to set up nginx for proxying unicorn.

A general set up for a secure SSL config can be found here; https://mozilla.github.io/server-side-tls/ssl-config-generator/

For gunicorn proxying I’m sure http://docs.gunicorn.org/en/stable/deploy.html is the best guide, but there are some steps that aren’t covered in there like generating a dhparm cert, redirecting from HTTP to HTTPS.  It will be a bit of work integrating the two configurations too.

If you are a complete noob you might need some help..

If I’m bored this weekend I might write up a blog post on it. :)",1521818906.0
krakster,"You need a proper web server, gunicorn is not the best at handling all kinds of requests, see this:

https://serverfault.com/questions/331256/why-do-i-need-nginx-and-something-like-gunicorn

Create a deploy plan, first setup ngnx with let's encrypt on 443, then proxy to gunicorn on 80, test everything works, then proceed to change gunicorn's bind to localhost:5001 or something, change nginx proxy to this and create a 301 from 80 to 443 with nginx. Good luck!",1521896276.0
ccb621,"Why are you mixing the two APIs? I would treat them as two separate versions. Since you are only building the new one, that’s the only one you should be testing. Additionally, the new version has no knowledge of the old version; the two are completely independent. Test the new API as you would any other views/endpoints. ",1521779604.0
andrijan,"Hey!

You just combined my 2 favourite things, Fantasy Football and Django :)

Send me a pm with what you've got and your issue, I'll try to help you out. ",1521751534.0
eljohnsmith,I’m on mobile. But it seems that you are looking for the field option called limit_choices_to. Look it up in the Django docs model section. ,1521874471.0
shabda,"""Building APIs with Django and Django Rest Framework"" is our second book updated for Django 2.0 and Python 3.6.
It is a free, beginner friendly book to teach building APIs with DRF. The book is open source and available at [github](https://github.com/agiliq/building-api-django)

It starts where the Django ""Polls"" tutorial stops, and take you through building the polls app, but this time using APIs. The book teaches the basics of DRF including serialisation, views, generic views, viewsets, testing, access control and docs using swagger. 

If you liked this, you will also like [Django admin cookbook](http://books.agiliq.com/projects/django-admin-cookbook/en/latest/)",1521742486.0
deBhailis,"I'm still a bit of a beginner with Django, but I've created my own website just using the standard Django configurations. What's the benefit of using the Rest Framework?",1521744879.0
porksmash,"Postgres JSONField would be a good option. One column, unlimited flexibility as long as the data entered is JSON serializable. ",1521736500.0
mogosselin,"What do you want to do with these custom properties? Search, order? Just display? Reports?

Who are going to set these properties and how? Can they be hardcoded or do they have to be dynamic / easily changeable from a UI by you or the customer?

Postgres has json fields, which is basically a text field with json in it. It makes it easier to store this kind of fields that are different for everyone, but you have to search the limitations (is search working well in these type of fields? Do you need to change a property for multiple rows? etc).",1521736437.0
Nicksil,"Yes, this can all be done using relationships.

Also, you may be able to consolidate the whole `repair_project` and `service_project` in to a single `project` with a `type` (or otherwise) field.",1521736718.0
sr33,"The custom1, custom2, custom3 idea doesn't sound good to imho. Scalability will be the biggest problem. What if your client wants more than 3 custom attributes? 

Isolate the problem from your parent project model. What you want is custom attributes that your user can define at will. These attributes should be able to be searched on as well I'm assuming.

What do you think of this solution?

    Class ProjectAttribute():
        project = models.ForeignKey(Project)  # whatever your proj model is
        name = models.CharField()
        
    Class ProjectAttributeValue():
        project_attribute = models.ForeignKey(ProjectAttribute, ...)
        value = models.CharField(db_index=True)


In addition to above, I'd go a step ahead and suggest you to have a json_column in your project model. 

    Class Project():
        attributes_json = TextField()

you can use this to wrap up all your project attributes in one location as a json. This way you don't need to do complex joins and expensive queries to fetch data to display.

Let me know what you think.
            ",1521741352.0
patasucia,"> Do I make a git repo and then clone down the files?

that's how I do it",1521733420.0
Brandhor,"that tutorial is old and suggests you to use fastcgi even which is no longer supported by django

personally I use both mod wsgi and uwsgi with cpanel, uwsgi gives you greater flexibility if you have multiple django sites that need different python versions but it's a little bit harder to configure

after compiling and installing wsgi you can either use the include editor or personally I created a /etc/apache2/conf.modules.d/ 900_mod_wsgi.conf file with this content

    LoadModule wsgi_module /usr/local/apache/modules/mod_wsgi.so
    AddHandler wsgi-script .wsgi
    WSGIPassAuthorization On

then let's say you put your files in the /home/myuser/mydjangoproject folder

after create a file named for example django.conf inside

/etc/apache2/conf.d/userdata/std/2_4/myuser/mydomain.com

if the folder doesn't exist you should create it

inside this file you have to tell apache to send all requests to your django app except for the static and media folders

this is an example of what it should look like

    <IfModule wsgi_module>
     Alias /static/ /home/myuser/mydjangoproject/static/
     Alias /media/ /home/myuser/mydjangoproject/media/
     WSGIDaemonProcess mydjangoproject user=myuser threads=10 processes=4 socket-timeout=7200 request-timeout=7200
     WSGIScriptAlias / /home/myuser/mydjangoproject/project/wsgi.py

     <Location />
     WSGIApplicationGroup %{GLOBAL}
     WSGIProcessGroup mydjangoproject
     </Location>

    </IfModule>

if you want to use ssl you have to create the same file inside

/etc/apache2/conf.d/userdata/ssl/2_4/myuser/mydomain.com

after run 

    /scripts/ensure_vhost_includes --user=myuser

and then restart apache, now if you go to mydomain.com you should see your django website

to reload your django app without restarting apache you can just touch the wsgi file

I probably forgot something so if you have any issues check the [mod wsgi docs](http://modwsgi.readthedocs.io/en/develop/index.html)",1521804225.0
j_syk,Have you tried setting [max_length](https://docs.djangoproject.com/en/2.0/ref/models/fields/#django.db.models.TextField) on the TextField? In Django 1.7 or newer it should add a validator to your form field. Otherwise you could define you own form [valdiator](https://docs.djangoproject.com/en/2.0/ref/validators/) that would check length when you call `clean()` on your input form.,1521733299.0
yerfatma,">want to use a textfield in django but it looks like from the backend there is not limit on the number of chars the user will put in, and that will make my site vulnerable

Vulnerable to what, a giant wall of text-style DoS? You could enforce a maximum post size at the server level ([example](https://serverfault.com/questions/76535/limit-a-form-post-size-with-apache-django)) if it's a concern. Regardless of which field type you use, the request will be processed either way.

>if I use charfield, then I can do more than one line.

The size limit on `CharField` varies by database backend but it's going to accept something like 64k of text. It would help if you told us what you're worried about, what the field is supposed to accept and what your database backend is.

Also: you can enforce length limits like the other posters suggest or via a `ModelForm`.",1521735253.0
flipperdeflip,"The database field has an `validators` argument you can use to set a `MaxLengthValidator`.

See https://docs.djangoproject.com/en/2.0/ref/validators/",1521733337.0
xentralesque,"I'm not sure, but this may be worth submitting as a minor bug to Django. Their class should be named something that wan't collide with possible field classes.",1521717383.0
AnderperCooson,"More info needed. How are you using Bootstrap/the fonts?

And no, I wouldn't say that wide open CORS is a standard setup. Again, more info needed.",1521732698.0
pbaehr,You'll have better results looking for Angular / Django Rest Framework material. That's the most likely way you'd be using Django on an Angular project. Version is not terribly important as long as it's written fairly recently and not AngularJS (Angular 1.x).,1521662933.0
bufke,"The lack of tutorial is because it makes little difference whether it's React + Django or Angular + Rails. Django and Angular are both full featured frameworks - so you might like the combo. A lot of JS people use node since that lets you code only Javascript.

Personally I use [django-spa](https://github.com/metakermit/django-spa) to serve the js bundle just so that I can package all my stuff into one Docker image. For development I use angular-cli and it's [proxy to backend](https://github.com/angular/angular-cli/blob/master/docs/documentation/stories/proxy.md) feature.",1521664119.0
TasticString,"It really depends on the size of your application in opinion.  There could be a lot of bad design choices and technical debt that makes it a little more difficult. 

Does that also include a warranty/support afterwards? That is a pretty major factor to consider.

What about testing/deployment etc?",1521657656.0
ThatOtherBatman,"Maybe. Impossible to tell without more details, but it's not unreasonable.",1521657851.0
haloweenek,"It might be complicated. For example: Some dependencies might be incompatible ... 
Ask for a cost breakdown.
What needs to be done.
If the hour count they provide you can ask for a screencast.",1521663208.0
IntermittentSteam,"I performed a similar upgrade for a client's moderately-sized code base (23,000-ish lines of code for 10 inter-connected apps, 12-ish dependencies). I spent about 200 hours on code review, 60 hours on testing and debugging, 20 hours updating documentation, and about 35 hours on other miscellaneous. This was all code that I was involved (as team lead) in the original planning and writing. Total cost to the client was around $15000.",1521678033.0
xinaked,i'll take a look at your code and tell you if it's a fair cost for $900,1521664620.0
dysprog,"When I updated a largish project from 1.6 to 1.8 it took 2 months of my full time days to iron out all the problems. But then we had 4 sub libraries that we also had to port. And 1.6 to 1.8 is a 2 large renovations at once, new migrations, new template system, new app loading system.  ",1521665861.0
ciebie,my app (100k lines of code) 1.8 -> 1.11 upgrade diff was about 5k lines long. Mostly due to django-polymorphic and python3. So 5% of the total price (?),1521658154.0
bmoe872,"We recently did this for a client and we charged much more than that, almost 3x. The site was a global site though and had all sorts of bells and whistles. It was also a bigger jump 1.6 to 1.11",1521662834.0
daredevil82,"if they've come up with that estimate, ask for a breakdown.  when I've been at an agency, there was a breakdown on estimated developer time for specific features and such.",1521660630.0
torimus,"This is funny. Here was some recent [""discussion"" - What’s wrong with Django? StackOverflow survey results have it at 41.7% dreaded in the frameworks](https://www.reddit.com/r/Python/comments/854an7/whats_wrong_with_django_stackoverflow_survey/).

Someone claimed upgrading large django-based project is trouble-free ;)",1521672177.0
classical_hero,"Upgrading from LTS to LTS could easily be a couple months of work, so anything less than 50K isn't suspicious at all. Whether it's reasonable or not for the work that was done is of course impossible to say without knowing more, but on the surface that sounds like a good deal.",1521686458.0
duppyconqueror81,I’ll do it for 7000$ :P,1521661081.0
oliw,"That's a *lot* of money.

Upgrading a mid-sized application from 1.8 isn't a huge task. There's nothing like the Migrations upgrade in 1.7. We're talking hours, not days. If you're also upgrading to Python 3 (not *required* until 2020, but recommended) that's more hours. I've done this for multiple people, on multiple apps. Only one was billed at over half a day and that was a *huge* billing/booking/reporting system with four separate web-accessible facets.

As others say, your app might be perversely complicated. But 8k? That's not a rounding error, that's just too much (assuming they aren't doing something else). If they are, perhaps we can weigh in.

I'm sure the same is true for anybody else in here but if you want a formal quote from one of us to actually do the work in their stead, send a PM with project details. Again, I'm sure most of us would want *considerably* less than half that number.",1521662987.0
WesternHarmonica,"Haven't read it myself yet, but it looks promising. Thought some might find it useful.",1521649331.0
StraightSwim,Thanks for this link - quite a goldmine. I finished it in a day and it was a fantastic experience. Waiting for Will to finish the book!,1521777328.0
somethingrandom94,Thanks for the link,1522184791.0
sr33,">encountering lots of unexpected problems.

It's part of the learning curve. Make sure you complete the polls app example on django's official site and then make a few other personal projects that might interest you. 

Only then I would suggest you market yourself out there.

About the job market. If you're a developer, a framework or a programming language shouldn't matter to you. You should pick and drop languages/frameworks that suit the needs of your client. Hope this answer helps",1521646560.0
jeffbaier,"Fastest way to learn Django is to build stuff with it. Either find someone willing to pay you to stumble along and learn, or think of a personal project that would solve some problem you have. 

The outlook is good. The StackOverflow Developer Survey shows that Django and Python continue to be very popular. Python especially is blowing up. Last year it passed PHP and this year it passed C# in the list of Most Popular languages. It is only behind JavaScript, HTML, CSS, SQL, Java, and Bash/Shell.

Unlike Ruby on Rails, which proved to be a fad, Django has shown continued popularity and growth. It is the top choice for Python web development, and in the top for Most Popular and Most Loved frameworks. Strangely enough though, it is also high up on the Most Dreaded list. So I'm not sure exactly what that means. Maybe just a bunch of butt hurt Ruby and JavaScript developers.


Source: https://insights.stackoverflow.com/survey/2018/",1521649582.0
so_many_wangs,"As for how much you need to know to advertise it, once your comfortable creating a web app on your own in Django, then you'll know. Learning Django faster? You learn at your own pace, I don't think anyone can help you there. Both Django and Python have been around for a number of years, and in my experience, plenty of SMBs seem to be fond of them. Go ahead and gauge your area for Python devs on LinkedIn or something to get some insight. I'd say Python/Django is just behind JavaScript/node.js in terms of popularity by web employers.",1521646952.0
bwmbrown,"There is a bit of a learning curve with Django and that's probably because it is so full-featured. Be patient while learning, use the community which is amazingly helpful open and receptive. But what others say is accurate, get a few projects under your belt before advertising.",1521656832.0
duppyconqueror81,"I suggest, as previously said in another comment, to build something with it.

I’d stick to function-based views and avoid class-based views until you reach a good level.

It’s worth it. Once the learning curve is done, you’ll never go back to anything else and you’ll wake up eager to start coding. At least that’s what it did to me.",1521658519.0
McDivvy,"Just add it to your CV along with however long you've been using it.

6 months Django experience

That's all you need to put so that someone who is looking for someone with ANY Django experience can single you out from a pile of those with zero experience.  ",1521660187.0
,[deleted],1521645631.0
kennydude,There's a django package called pgviews which can help this as well -- https://github.com/mypebble/django-pgviews,1521735534.0
bufoaureus,"Not app, but once I starred a gist which do the same https://gist.github.com/kyle-eshares/5eaed8a5c299e5282d066a1fbc03152c",1521654192.0
yerfatma,"Not quite the same, but here are a couple of packages for finding N+1 issues:

- https://github.com/klaviyo/django-orm-profiler
- https://github.com/jmcarp/nplusone

",1521674372.0
xinaked,interesting. i too forget,1521652097.0
callius,"I'm unfamiliar as well, but would love to know of one too!",1521652502.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/python] [Django: How do I use \`password\_reset\_confirm.html\` with AngularJS?](https://www.reddit.com/r/Python/comments/85xzgx/django_how_do_i_use_password_reset_confirmhtml/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1521592792.0
fdemmer,"https://docs.djangoproject.com/en/2.0/ref/templates/language/#template-inheritance

your base.html probably does not define the ""blocks"" the template is using: breadcrumbs, title, content_title, etc",1521575006.0
ccb621,See the docs: https://docs.djangoproject.com/en/2.0/topics/i18n/translation/#blocktrans-template-tag. You need to bind to a local (relative to the tag) variable. ,1521563827.0
daredevil82,"what you're looking for is [nested serialization](http://www.django-rest-framework.org/api-guide/relations/#nested-relationships), and there's a section in the DRF docs about that.",1521550122.0
TankBo,"If you only want to publish (read-only) the nested locations, you can use the proper serializer as a field:

    class LocationSerializer(serializers.ModelSerializer):
        class Meta:
            model = Location
            fields = ('project', 'location_description', 'location')

    class ProjectSerializer(serializers.ModelSerializer):
        class Meta:
            model = Project
            fields = ('project', 'creation_date', 'locations')

        locations = LocationSerializer(many=True)

In case of write support (creating, updating and deleting nested resources), you have to bake your own solution, as DRF doesn't support that. For my own needs I built a small package: https://github.com/stschindler/djangorestframework-deep (also on PyPI)",1521550396.0
i_amwithnail,"Digitalocean has outstanding guides, [have you looked at them?](https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04). 
",1521553127.0
fuckslavs,[This guide](https://simpleisbetterthancomplex.com/series/2017/10/16/a-complete-beginners-guide-to-django-part-7.html) is pretty good.,1521584554.0
booooomba,I don't understand your question. How would you want to deploy a Django app without setting up a DB first. That's literally not even possible. Unless you don't want to use a DB. Have you ever even deployed a Django app?,1521546895.0
TankBo,"I was able to finally solve it by myself. Here's my solution:

    booking_amounts = StockBooking.objects \
        .order_by() \
        .filter(stock__storage_location=OuterRef('pk')) \
        .values('stock__storage_location') \
        .annotate(total_amount=Sum('amount')) \
        .values('total_amount')

    queryset = super().get_queryset() \
        .annotate(warehouse_name=F('warehouse__name')) \
        .annotate(stock_item_name=F('stocks__stock_item__name')) \
        .annotate(end_stock_amount=Sum('stocks__bookings__amount')) \
        .order_by('warehouse_name', 'name', 'stock_item_name') \
        .values('warehouse_name', 'name', 'stock_item_name', 'end_stock_amount')

SQL built by Django:

    SELECT ""stock_storagelocation"".""name"",
           ""stock_warehouse"".""name"" AS ""warehouse_name"",
           ""stock_stockitem"".""name"" AS ""stock_item_name"",
           SUM(""stock_stockbooking"".""amount"") AS ""end_stock_amount""
    FROM ""stock_storagelocation""
    INNER JOIN ""stock_warehouse"" ON (""stock_storagelocation"".""warehouse_id"" = ""stock_warehouse"".""id"")
    LEFT OUTER JOIN ""stock_stock"" ON (""stock_storagelocation"".""id"" = ""stock_stock"".""storage_location_id"")
    LEFT OUTER JOIN ""stock_stockitem"" ON (""stock_stock"".""stock_item_id"" = ""stock_stockitem"".""id"")
    LEFT OUTER JOIN ""stock_stockbooking"" ON (""stock_stock"".""id"" = ""stock_stockbooking"".""stock_id"")
    GROUP BY ""stock_storagelocation"".""id"",
             ""stock_warehouse"".""name"",
             ""stock_stockitem"".""name""
    ORDER BY ""warehouse_name"" ASC,
             ""stock_storagelocation"".""name"" ASC,
             ""stock_item_name"" ASC

This is almost 100 % identical. :-)",1521540337.0
jillesme,"I’m on mobile but this looks like a pretty easy query that would use .select_related for each joined table! Then at the end of your call you just call `group_by('warehouse__name, location__name..)` afaik.

Also you probably want to add a `related_name` to all your foreign keys, makes it much easier to use the ORM. ",1521537434.0
ubernostrum,"As noted in the other thread: this will only affect you if you or something you used relied on importing internal modules/APIs from `pip` and using them. It won't affect you if you just use `pip` for its intended purpose.

And personally, I look at that the same way I look at someone who complains that Django ""broke"" an internal/undocumented API they were relying on: there's a clear documented line between what's intended for public consumption and what isn't, and it's on the consumer of the code to make sure they either stay in the public documented APIs, or accept the risk of breakage at any time.",1521536787.0
radwon,This issue is now reported fixed for [pip 9.0.3](https://github.com/pypa/pip/pull/5106),1521725987.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/python] [PSA: pip 9.0.2 broken (KeyError: 'pip.\_vendor.urllib3.packages.backports')](https://www.reddit.com/r/Python/comments/85qwc4/psa_pip_902_broken_keyerror_pip/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1521531404.0
CKreuzberger,"Cool stuff!

I would love to use VS Code for Python Web Development, but it just lacks so many pro features that Pycharm offers.

Though for writing JS/HTML/CSS code VS Code is pretty good. ",1521528872.0
never_safe_for_life,"I switched to VS Code a month ago and I can't believe that I love a Microsoft product. I have actually stopped using Sublime.

God help me, but it's like a team at Microsoft just copied Sublime Text but had the bandwith to polish everything really well. Then they resisted the urge to fuck it up or make it slow.",1521564958.0
McDivvy,"If I understand you correctly, you want to do this:

https://linevi.ch/en/django-inline-in-fieldset.html

And it's not completely straight forward, but not TOO hard...",1521562506.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1521522242.0
garion911,"You need code to raise 404 when you want, while in view?

    from django.http import Http404

Then down in your code:

    raise Http404
    
",1521578073.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/python] [How do I load custom template for password reset?](https://www.reddit.com/r/Python/comments/85nj6r/how_do_i_load_custom_template_for_password_reset/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1521497503.0
ramse,"It's difficult for me to make out whether or not theme is within myBlog or on the same level as myBlog.

If you're using default settings for templates then it should just be `/templates/pages/...` not `/theme/templates/pages/...`.",1521503121.0
ccb621,"The official docs go over this topic at https://docs.djangoproject.com/en/2.0/topics/http/views/#customizing-error-views. The article does a slightly better job of explaining exactly in the codebase the relevant code should be set, but wastes a lot of ""ink"" setting up a new project.

Know your audience. If your reader doesn't know how to setup a Django project, or have one already setup, said reader may not be ready for a custom 404 page.",1521491479.0
oliw,"I know it's the site name but calling this ""Django Crew"" makes it sound like multiple people involved.

As far as I can see this is one chap: Renjith S Raj, aka [Cadmus](https://github.com/Cadmus).",1521471185.0
tagnydaggart,I call dibs on use as a band name!,1521472688.0
,[deleted],1521474028.0
,[removed],1521475942.0
neuronet,what is django crew?,1521483945.0
CKreuzberger,Good catch. ,1521528597.0
AssOrTheCrotch,"I think the [regroup](https://docs.djangoproject.com/en/2.0/ref/templates/builtins/#regroup) template tag will do what you're looking for.

Sorry if I'm way off, but I'm at work and just jumped on here real fast. ",1521478972.0
bwapeup12345,"Sorry, the formatting of the code in the question appears out of alignment...but when I try to edit it, in reddit edit box it looks perfectly fine. Not sure how it can be fixed",1521452204.0
ragnaror1,"I assume this is what you want in django templating:
    
    {% for unit in course.unit_set.all %}
        {% for lesson in unit.lesson_set.all %}
            {% for lm in lesson.lesson_material_set.all %}
                {{unit}} - {{lesson}} - {{lm}}
            {% endfor %}
        {% endfor %}
    {% endfor %}
    
context in view:
    
    context['course'] = courses_with_slug_requested.first()
    ",1521453753.0
beholdsa,"You build the API like normal and then simply call it from the code inside the Chrome extension - just like you'd call the API from anywhere else.

Am I missing something with the question?",1521434329.0
asplodey,"Unfortunately there isn't exactly a best or easiest way to do this. I have recently been grappling with a similar scenario. Social Auth providers kind of make it a bit easier, but that doesn't solve the issue of users who are registered only on your server.

You'll want to install and learn a bit of Django ReST Framework. There's a section on authentication which has links to a few other projects/packages. You'll probably want to use token authentication in lieu of storing the user's password.",1521442937.0
DabsJeeves,Well let's see the link to the picture. Are you using {% static 'filename' %} or hardcoding it? ,1521426182.0
Saskjimbo,sorry for the title.,1521416224.0
xentralesque,"Are you trying to display the geographical location of `object.address` instead of the address of whomever is viewing the page? It looks like you need to pay for that https://ipinfo.io

Yeah, so what's happening is the browser of the person looking at your page makes a request to ipinfo.io and they respond with coordinates. In order to get coordinates of a different IP, ipinfo.io wants you to pay for that service.",1521414494.0
danielsamuels,You could quite easily do this with reversion's create_revision API,1521361680.0
,"Sounds like you want to be looking into Delta's.

Otherwise your gonna start storing alot of the same data.",1521532972.0
booooomba,"This is a JS, not a Django question.

Are you familiar with JS?",1521372922.0
Giggaflop,LMGTFY: https://buildwithdjango.com/blog/post/celery-progress-bars/,1521575545.0
Whoopska,"When I end up with an auto_now field, I do 

    Model.objects.filter(pk=obj.pk).update(...)",1521362261.0
radwon,"Are you trying to use loaddata as in your [other post](https://www.reddit.com/r/django/comments/858mxo/importing_data_to_database/)?

If that's the case then you will need to supply the values, otherwise you can leave them blank when saving a model and they will be automatically populated with the current date/time.",1521375500.0
PyBet,"I have tried a few things and that's what I have learned:

* null and blank fields don't need to be included

* Foreign Key and Many to many relationships need to be passed as integers

For the relationships I am not sure if integers is the only way.",1521348490.0
radwon,"The idea of loaddata is to populate the database directly with the data, so it's different from creating a model with external data that's then validated and saved to the database.

As a result, a model's save() method is not called, so you'll need to make sure any calculations are included in the final data to be loaded.

If a field can be null and blank then it can be excluded.",1521374895.0
bjorn6,"I had to populate my database ealier today with initial data, however I used bulk_create() instead. What is the main difference between this and your approach? Sorry for not answering your question, I have no idea, still learning :)",1521406820.0
igncampa,"""you'll *sink* yourself later"" lol

I've been trying to devote 1 hour of open source development and 1 hour of studying Fluent Python every day at a minimum and then rest of my time on my projects (currently jobless). I like Wagtail, I will try to contribute",1521318996.0
oliw,"It's hard to recommend a DIY how-to when there are both external indexing solutions and databases (eg postgres) that can do this internally.

But the theory isn't too hard if you want to build your own, super slow and memory intensive version that has no chance in hell of scaling past a few hundred documents. Notice that this isn't a good option.

 - Break down your query into separate tokens
 - Work out if there are any variants (eg plurals, trigram typos, etc) you also want to search for, for each.
 - Query your database with a lot of `field__icontains=token` queries, with a lot of OR statements.
 - Tick through each document and search for these phrases again. Keep a score of how many matches you make and also keep track of the how many of the original phrases (or their breakdowns) were matched.
 - Then order the results by *how many phrases matched* then *how many instances matched*. Or something like that.

Again, without indexing this is going to be *so* slow. But it'll work, just about.

But pros will use a separate indexing solution or PostgreSQL's full text search (which is really surprisingly good without complicating the stack). I won't say that search indexing is a fully-solved problem but for most people, it is. What's best is this is [fully hooked into Django](https://docs.djangoproject.com/en/2.0/ref/contrib/postgres/search/) with a few bundled-in extensions; it's dead easy to use:

    >>> from django.contrib.postgres.search import SearchQuery, SearchRank, SearchVector
    >>> vector = SearchVector('body_text')
    >>> query = SearchQuery('cheese')
    >>> Entry.objects.annotate(rank=SearchRank(vector, query)).order_by('-rank')
    [<Entry: Cheese on Toast recipes>, <Entry: Pizza recipes>]",1521286264.0
simonw,I wrote a tutorial on building search using Django and PostgreSQL a few months ago which you should find useful: https://simonwillison.net/2017/Oct/5/django-postgresql-faceted-search/,1521300567.0
daredevil82,"Simon Willison, one of the original Django developers, gave a presentation at this past Djangocon on something very similar. 

Check it out at https://www.youtube.com/watch?v=NzcvewgqYog

But this is definitely advanced material, and requires extra infrastructure.  Because of that, I'd go with what /u/oliw suggested.",1521293438.0
django_throwaway_1,"I'd recommend Django-Haystack before anything else. If you can't or don't want to use Elasticsearch, Whoosh is fully python, filesystem based and fast - much faster than a roll-your-own database search using ""like"" queries will be.",1521500646.0
KronktheKronk,"Django has:

* **code first data models** - meaning you define tables and rows in code instead of writing pure sql in your backend controllers.  This makes it really easy to work with objects one level up.
* **Migrations** - migrations are the way django handles changing tables and rows on the backend to cope with the fluid nature of early development.  It's done automagically as you make changes to models at the code level.  This makes it really easy to make changes to your database structure and be sure things will work between revisions.
* **ORM** - The Object Relational Mapping is how Django lets you write queries from simple to complex code first, again instead of having to write complicated, error prone, insecure pure sql in your back end controllers.
* **Plugable databases** - Want to start with postgres and switch to Maria?  Drop in a different config block in your settings.py file, run your migrations, and populate your db.  No code level model changes required.  No code level queries/CRUD changes required.  Pick a different one every week if you like.
* **Django-rest-framework** - Django rest framework is how django really shines as an API provider.  It provides an insanely easy-to-use framework for responding to API calls at the API level, and also for displaying the results of those API calls in a very pretty way in a browser.  It's stupid easy.

Node.js has Restify for pure API work, and Express for providing browser templates to display that data, but if you want to get a code-first data model you have to use Mongoose (for mongodb) or some other library for others, and in my opinion those are less clean and require more manual labor to do things like validate.  

Django is the shit.",1521261928.0
chaseroyaleee,"Python is very simple to learn and is one of the easiest languages to program in. As much as I love asynchronous features in Node, the simplicity of synchronous programming makes life so much easier. Django is stable, very fast to code and build in, has active support, one of the best ORMs (at least IMO), and handles migrations gracefully. ",1521259101.0
skolsuper,"Nobody said the admin yet, but that's number one differentiator for me.  A lot of people don't like ORMs (sometimes with good reason) and don't care about pluggable databases.  Everyone can benefit from an instant GUI to crud their database objects as soon as they're written though.  It makes prototyping a joy.

Likewise, the API browser that comes with drf is an insane productivity boost.

Take both of the above from someone who uses node and express at $job",1521267081.0
nerdwaller,"Having worked in both it (somewhat) comes down to the use case.

If you need highly concurrent, long running connections: node may fit well (though now we have channels in Django, which can pretty much meet that need).

However if you want:

1. An ecosystem far beyond webdev (today your app may be basic crud, but later it will likely expand)
2. Opinionated framework - meaning a ton of decisions are removed from your (and other developers) way. I’d argue this simplifies growing a team (or scaling it back for fewer to at least know what’s up).
3. A top of the line ORM
4. An amazing community (node’s May be great too, I don’t know :))
5. A standard library (pulling in added libraries is often a choice, not a requirement.)
6. Awesome groups for growth like pyslackers.com with many well know djangonauts there to help (disclaimer: I’m an admin there and longstanding member)

While I like python, I try to be pragmatic - and I still have few use cases for other languages for my backends with clients, formal work, or fun.",1521264467.0
pydry,"Javascript's type system and language design is a trainwreck. This isn't noticeable in small pieces of software where you can easily reason about what's going on, but the larger your project gets the more it becomes like building a jenga fort on quicksand. It doesn't just cause extra bugs in your code, it causes extra bugs in the code your code relies upon, the code *that* code relies upon and so on.

If you want a happy and easy life, keep your javascript code bases small. One way of doing that is to build your back end in python.",1521287095.0
porksmash,"If you're going to really get into backend development you'll probably end up learning both. But neither Node or Python are the end-all-be-all of backend programming. You'll encounter Java, C#, Go, and a ton of more things out in the wild, especially if you're entering an established company with an existing codebase. ",1521259638.0
ClickHereForBacardi,"Having done both, I would answer your question with this:

Maintainability.

Node projects simply do not age gracefully as they from a very early point take off into one of several - none very good - directions to compensate for its poor concurrency model. Even if you do nothing and continue using regular callbacks, the code will eventually be a scary ""pyramid"" of callbacks inside callbacks.

Django on the other hand does not concern itself with concurrency by default, which means it has much less mental overhead when first diving into it. It might sound nice to get a hypothetically faster system but when it comes at the cost of a huge mental overhead, it's not really worth it.

Now, should you reach a point where you're actually developing a highly concurrent system, I'd recommend you go with neither and instead pick up something like Erlang or Elixir.",1521283095.0
tony2times3,"Thanks Guys , this is very helpful!!",1521280549.0
weberc2,"Not a Django user, but NPM is a dumpster fire, and installs regularly fail for obscure reasons and the error messaging is rarely helpful. I really dread touching it.",1527289233.0
njancsar,"If you are asking this question, you honestly should not be in a position where you are responsible for ""very sensitive information"" on a web application. This is really troubling news for your employer and the hospitals who somehow use your application.",1521257866.0
,[deleted],1521244734.0
ccb621,Search Django’s documentation for “nested forms”. The Forms docs cover this topic pretty well. ,1521248740.0
Slippery_Panda,"They will work together, though I suspect you want to have a long-term connection to the lab equipment, which means you would want to use something like django-signals, to run jobs in the background.",1521238175.0
CKreuzberger,"Connections from a webbrowser to a webserver usually have a pattern like this:

* REQUEST
* PROCESSING / WAITING
* RESPONSE

If you want lab equipment that is ""streaming"" some data, you should dig into things like websockets, where you can keep a connection alive between the browser and the django server.

In addition, depending on your use case, it might be necessary to have a secondary python application to connect via pyvisa. Django is (per design) not meant to be multi-threaded, though hardware connections usually tend to require such a multi-threaded behaviour (e.g., 1 listener thread that is always open).
",1521277368.0
CKreuzberger,"Something seems completely wrong with what you are describing.

1) There should only be a single settings.py. If you have multiple, you have created multiple apps (seems like you ran ``django-admin.py startproject django_project .`` and ``django-admin.py startproject projectname .`` or something like this)

2) The tutorial clearly states that you have to do this: 

    cd ~/myproject
    python manage.py makemigrations
    python manage.py migrate

There is absolutely no need to run makemigrations again (it will do nothing, if you ran it properly the first time). 

3) This is linux. You don't have to reboot your machine to fix issues (unless you are messing with the kernel or kernel drivers, and even then, it's not always necessary).

I'm pretty sure that at some point you misspelled a command or the command failed with an error that you overlooked or ignored. I recommend trying it again, with a completely clean system. 


PS: The tutorial recommends to use ``python manage.py runserver 0.0.0.0:8000``. This is okay for runnig a development server **locally**, but not if you want to make the application available for other users. 

PS: The tutorial does not say a thing about security (things like DEBUG mode, etc...).

PS: DigitalOcean is a server host like many others. Make sure you not only look at their tutorials, but look for tutorials based on the operating system you are using (e.g., Ubuntu 14.04 or Ubuntu 16.04 or Debian 8 or Debian 9; sorry Redhat people :P )",1521278126.0
netscape101,"Here are some links that might help:

https://yoirtuts.com/index.php?title=Create_Virtual_Env_And_Activate_Python3

https://tutorial.djangogirls.org/en/django_start_project/


https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website

Please also check my subreddit I created /r/linux_mentor.
",1521532913.0
dylan15766,Any further help or advice in the comments will be greatly appreciated. :\) ,1521220984.0
booooomba,"Sorry but: Why would you even install bootstrap via pip instead of ""normally"" via the official CDN?",1521231441.0
daredevil82,check to make sure you installed it to the right environment and that environment is active/targeted when starting django.,1521207253.0
,"Are you using a virtual environment?  Did you pip install in the right environment?  What does pip freeze while in the environment show?

",1521209714.0
4477i40,"I was able to find a fix, please let me know if I need to improve upon this:  

    settings.py
    STATIC_ROOT = ''
    STATIC_URL = '/static/'
    STATICFILES_DIRS = ( os.path.join('static'), )
The above the is the pointer I used for any css files.  Right now I only have one static folder and changing the base.html only.  I am under the assumption I can use that one path to affect all my html docs I have under different apps, if not I will put a static folder in each one.  

    base.html
    {% load staticfiles %}

    <head></head>
  
 href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css""
    ",1521219064.0
Investisseur,"No stack trace so no real answers. Also just pull from the cdn. They're cache is going to be a heck of a lot faster than your trying to serve static files. And a note: pick one, 3 or 4 friend. ",1521256445.0
,[deleted],1521209608.0
Mekhami,"`News and links for Django developers.`

Not personal stories. This isn't your blog.",1521178535.0
flipperdeflip,Lolol.. did you miss school or work today?,1521194510.0
Fun2badult,Checked discord subreddit but nothin really there and slack seems to be a general chat. Anything more specifically on Django where other users gather around?,1521180848.0
Fun2badult,"Yea the redirect is kinda confusing at times. Not sure why use redirect compared to render (request, ‘html’) but I think the difference being that redirect doesn’t need an argument and that it just forwards the page to wherever you want it to go to, if that makes sense. That’s the gist I got but I still have to really get it down. ",1521178073.0
lohank,"Awesome spirit. 
Actually I m learning the exact same right now. Did registration part with form but having problem with redirect(). 
Planning to use this weekend to finish a lot. ",1521177308.0
Eimus,Im having some problems with forms it feels complicated :D,1521177903.0
Nicksil,"There's potentially a lot going on during that procedure.

Show us what you've got so far and what you're stuck on; we need something a bit more specific.",1521163824.0
jefwillems,"On mobile, the menu links with about etc. Are submenus under account. I think it would be better to always have them in the menu",1521184564.0
rdom22,"I just signed up and got a 500 error when I try to login...

Concerning the menu
I think you could also hide the links to my profile and settings if the user isn't logged in.",1521198097.0
crunching_karma,"Could it be very large join? Maybe serializer causes linear queries to get related data for every record of a?

Did you try to run `a.objects.filter(b__flag=1)` in shell?

",1521161201.0
Niicodemus,"If you set up the authentication like the docs say, just set `action=""{% url ""password_change"" %}""` in your `<form>`. You can post to any form from anywhere, it doesn't have to come from the view/template associated with the form.",1521205339.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/python] [How do I send inputted email to built-in ""reset password"" view from custom template? • r\/django](https://www.reddit.com/r/Python/comments/84psnc/how_do_i_send_inputted_email_to_builtin_reset/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1521146654.0
booooomba,"You need to replace ""django"" with ""javascript"". :-)",1521146733.0
iconfinder,You probably need JavaScript pinging an endpoint in Django that returns a status in JSON format. ,1521157961.0
Slippery_Panda,"Django_debug_toolbar helps a ton.  I'd start with that.

I'm also looking for better tools for finding slow queries.  I'm trying newrelic, so far I'm not impressed with it.",1521145287.0
xenopizza,I came across https://github.com/jazzband/django-silk recently and might be worth taking a look,1521150016.0
Investisseur,Why is the title here specific to Manjaro Linux suggesting Postgres performed differently on that OS?,1521159692.0
DudaFromBrazil,"Take a look at prefetch_related and select_related on your queries. It will save a lot of queries by joining relational tables. In some cases it can increase performance a lot. You can inspect the queries on Django debug toolbar, and check out the difference.",1521157306.0
CraigTorso,"As it's not been mentioned yet, and perhaps that's because it's obvious, it's worth looking at your indexing for any fields that you use in filter expressions.

Queries on properly indexed databases are significantly faster than ones with just primary keys.",1521218110.0
Ake_Vader,"The other option would obviously be to make the viewset absolute URL's point correctly, however then i'd have the same kind of problem but reversed in my custom single views.",1521122944.0
neoreeps,"Why? Just leverage high availability features directly in the database (synchronous mirrors, replicas, etc). This will be more accurate and less prone to errors. Also, the number of failure modes in the architecture you propose is not manageable. ",1521117939.0
apreche,http://xyproblem.info/,1521122574.0
5alpha-reductase,Don't.,1521147697.0
apiguy,"It is possible to get location data through the devices browser, but it will prompt the user to give permission. Device serial numbers/etc. aren't sent to the server from the browser but I assume what you're trying to do is make sure you can uniquely identify each user? If so why not just use a social login feature? Or if you don't care about that at least put a cookie on the device so you know when the device is sending data again. A malicious user could easily clear their cookies and defeat that system but if it's just for research that doesn't matter so much (don't really know the scope of your project).",1521139392.0
booooomba,With a webapp this won't be possible. And even for a native iOS app this won't be possible because Apple doesn't allow you to access the IMEI. ,1521114734.0
itmightbedave,"This is less a Django question and more a html/JavaScript question about what Web APIs are available. You can usually use them to get gps (with user consent), but that’s about it. The rest requires explicit user input and consent, which is how it should be.",1521139491.0
Hotel_Arrakis,Please look into Phonegap.,1521149162.0
netscape101,Have a a look at GeoDjango. You can use something like IOnic to build a web app that gets the IMEI number from the phone. ,1521532651.0
oliw,"From [the docs](https://docs.djangoproject.com/en/2.0/ref/models/instances/#validating-objects):

> You should only need to call a model’s `full_clean()` method if you plan to handle validation errors yourself

Do that. Catch the `ValidationError`s it throws back at you.
",1521106603.0
jef79m,"I think maybe an inline formset could help you out here.
https://docs.djangoproject.com/en/2.0/topics/forms/modelforms/#inline-formsets",1521096059.0
dmckim,"What is the issue with having multiple users use the same credentials if it is only a test account? Just send them an email with the demo credentials after you capture their information in a form.

Or do you actually want a temporary account that gets created and deletes itself after a period of time so it would be more unique. ",1521085829.0
ysmoliakov,"Hi, PyBet

Check out my project https://github.com/egorsmkv/simple-django-login-and-register",1521205361.0
furyfred,I always wanted to go to Japan.,1521088671.0
ducdetronquito,Does someone know if the conference will be held in english or in japanese ? (or if subtitles will be available) :),1521101239.0
Dev26000,"I just finished migrating from simplejwt to jwt on a react/Django project. Django rest jwt had a bit more features that I needed. The project has backing from the drf author and has a much bigger following on github than simple jwt(179 to 1.8k stars). _jwt is a wrapper around pyjwt which implements the core functionality, written by the same authors. Pyjwt is a bit more active. The project I’m working on is using Django 2.0 with python 3.6 and the package worked as intended. ",1521103036.0
ccb621,Your formatting is wrong. This is more of a GCP/Python install issue than a Django issue.,1521075601.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/djangolearning] [Trying new Saleor release on GCP CentOS7, but...](https://www.reddit.com/r/djangolearning/comments/84h7e0/trying_new_saleor_release_on_gcp_centos7_but/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1521063711.0
the_nate_smith,"I usually name the app ""accounts"". But yeah I like to make it into it's own app.",1521054939.0
geosoco,"i've largely used the built-in auth. In the past I've put that in a base/core app, which has only a few basic things like the auth and some base models & mixins that others inherit from (CreatedByMixin, ModifiedByMixin, ..., FullAuthModel. 

It also has some basic templates that others inherit from as well. 

It used to host a few other things which have since been integrated in the core Django app. 

",1521055396.0
patasucia,"I did authentication for a single app in my first project and I regretted it so much when the project grew and I had to add other apps. Then my new apps referred to a custom user model from my old app, and logging in and out became too tied to the original one. 

I just had to rewrite the whole thing. I would recommend having a single app to deal with authentications.",1521069070.0
angellus,"    from django.db.models import F
    
    players = Player.objects.all().annotate(total_points=F('goals') * 4).order_by('total_points')
    players[0].total_points

EDIT: You can also use a computed property as mentioned below, but it sounds like you might need this in a more sortable and way you can manipulate it better. This leaves everything as a `QuerySet` so you can sort and filter it in Python however you want still. 

https://docs.djangoproject.com/en/2.0/topics/db/aggregation/
https://docs.djangoproject.com/en/2.0/ref/models/expressions/
https://docs.djangoproject.com/en/2.0/ref/models/database-functions/

EDIT2: You can actually combine the computed property with the annotation pretty easily. If you use a cached ""protected"" member and then have the computed property that uses the cached member, you can auto fill it with the annotate and then still dynamically calculate it if it does not exist. 

    class Player(models.Model):
         _total_points = None

         @property
         def total_points(self):
               if self._total_point is None:
                   self._total_points = self.goals * 4
               return self._total_points
     
         def refresh_from_db(self, *args, **kwargs):
              self._total_points = None
              super(Player, self).refresh_from_db(*args, **kwargs)

     players = Player.objects.all().annotate(_total_points=F('goals') * 4).order_by('_total_points')
     players[0].total_points # will be filled by the annotation if you used above, or else calculated on the fly if not",1521048364.0
mhurron,"That could be done with a database view, or on the frontend. You don't want to be tracking fields that should be calculated in the table.",1521044395.0
ragnaror1,"you could write a function that calculates this everytime, bear in mind that ordering on this will be harder than usual
    
    @property
    def score(self):
        return self.goals * 3 + self.assists
    
make score a database field if you need to order often and assuming save is not called too often:
    
    def save(self):
        self.score = self.goals * 3 + self.assists
        obj = super(Player, self).save()

These are just other options. Doing it in JS is also an option, just send goals and assists to the template. Personally I would go with the @property function, but idk your circumstances
    
    
",1521044501.0
adrianh,"Cocreator of the the Django template language here. I suggest using simple indentation to keep things readable. Beyond that, possibly move logic into pure Python (model or view) and take advantage of template includes.",1521049092.0
LifeIsSo_Complicated,"Generally if your logic is getting that messy in the template, then the logic should be in the view.",1521043587.0
eljohnsmith,You have total control of the context before you send it to your template. If you put a more concrete example I am sure ppl here would be able to give you a very creative response to prevent nested ifs ,1521076250.0
IntermittentSteam,"Custom template tags can sometimes be leveraged for cleaning up these situations.

But often indentation is enough.

Also: template inheritance and named blocks

Finally: refactoring the views to be more granular.",1521054930.0
factbuddy,Doesn't Python have a do while or similar? ,1521074067.0
asdfwaevc,"Great, I think that the solution I was looking for was to put more logic into creating the context_data, use includes, and template tags. I appreciate the input ",1521168148.0
garry__cairns,I think a lot depends on the state of your local job market. In a market with lots of opportunities for developers I'd expect someone with your interest and enthusiasm to find a junior position. But if there are few opportunities then more experienced developers would likely fill them. It sounds like you're on the right track by taking related work and working on projects when you can. Good luck!,1521057281.0
orangerocksports,interesting app... where are you getting the data? ,1521059568.0
oliw,"If you're having memory issues with big calculations on huge querysets (that you can't just do all in-database)...

 - Use `.iterator(chunk_size=..)` to page how many results you get back at a time
 - Don't use your instances as bloody dictionary keys. *Of course* they're going to stay in-memory that way. If you need to keep track of what you've handled, use primary keys.
 - If you don't actually need the instances to do your calculations (you just nee the data), use `.values(..)` or `.values_list(..)`.

Update: I edited my Medium comment a bit as you responded so I'll update this to save people time.

The real problem here is holding onto full instances. Not being able to see the full code means I can't offer you a complete solution but doing massive operations where you ned old data usually means you want to break down to simple types. 

You still haven't fixed that. You've just duck-""fixed"" the queryset to hodge out a mashed up iterator. For what it's worth, `queryset.iterator()` is *way* older than Django 1.6. The modern chunk size isn't as important as streaming the results. It would still help you.

Slumming around on 1.6 is just gravy. It's not an excuse, especially not for a public-facing website.",1521032196.0
charettes,One thing to keep in mind is that the `[start:end]` batch approach could miss objects or return duplicates if inserts or deletes happen during the full retrieval process. ,1521036729.0
jobelenus,Nice outline of your investigation as to where the garbage collection can't be happening and how to limit that by only have one set of instances (rather than every) which cannot be GC'd. No idea why you're getting down-voted.,1521041015.0
ubernostrum,Do you have the auth middleware turned on?,1521019084.0
ccb621,"As others have stated, the auth middleware is running on every request.

How exactly is this a problem? If this one query is slowing down your site, you may have bigger issues with your database. Are you, perhaps, trying to optimize before you’ve done any analysis?",1521043484.0
,Can u show me ur settings.py file,1521020286.0
CraigTorso,"I'm not saying it's a better option as I haven't tried using django-axes but I've followed the advice in [this blog](http://tech.marksblogg.com/django-admin-logins.html) to add unsuccessful logins to fail2ban

I already have fail2ban running on all my servers so utilising it for banning logins keeps everything in one place.
",1521016687.0
i_amwithnail,"Axes is nice, I've also used [Django Defender](https://github.com/kencochrane/django-defender) on a previous project, and it was basically plug and play, v slick.",1521036054.0
ramse,https://docs.djangoproject.com/en/dev/ref/forms/validation/,1520982993.0
jobelenus,It does. There is a corresponding `form_invalid` method which re-renders the same page with the form as the `form` entry in the context_data for the template to render it with errors.,1520986880.0
tagnydaggart,"Form validation still happens in the form class. In a CBV that inherits from FormView, there is logic in the post() method that routes to form\_valid() or form\_invalid() as appropriate. Otherwise there’s no magic going on. 

Check out: http://ccbv.co.uk/projects/Django/1.11/django.views.generic.edit/FormView/

This site is super handy when composing CBVs. Have fun!",1521002992.0
lzantal,Not sure what you are asking. You only posted js code here. So I assume you are asking what the you need in the Django side. Since it looks like you are making an ajax request have your view check the submitted email exists in your users table and if it does send an email to it with instructions. You probably want to store the reset request and add a unique string to it. So you can check to make sure the unique string exists and didn’t expire plus so that you know which account you want to reset the password for. ,1521004612.0
CKreuzberger,"Django comes with a set of basic models (like the user model, session model, etc...), which will have some basic migrations. ",1520971850.0
limerenceN,Do you have them all pointing to the same database?,1521350477.0
ubernostrum,Can you point us to the part of the documentation about it that was confusing to you?,1520958024.0
rawayy,"include() incorporates the url mapping’s listed in another module.

contacts.urls refers to a urls.py file inside a folder called contacts.


The official django documentation should make this all pretty clear, though I can readily attest that I struggled with it at first...",1521437039.0
Nicksil,"A computer scientist or someone otherwise proficient in programming practices and problem solving may get a job at Google. Django -- and your proficiency therein -- means next-to-nothing unless you're applying at a Django-specific workplace.

Concentrate on becoming a good programmer and problem solver and not so much on frameworks and libraries.

Also, Google is not the end-all, be-all of software developer workplaces; there are many on-par, and above, eager to hire worth-while individuals.",1520951185.0
CKreuzberger,"1.) Do not focus on a single framework. Django is great, we here at /r/django probably know best :)

2.) From what I have heard, Google is not the place to stay ""for ever"" as a developer. It's cool for ""some time"" (1-2 years) while you are young. Though I'm not going to spoil you with what others said, everyone needs to make their own experiences.

3.) At your age (you said that you're 15 in one of the comments), Web Frameworks are just like boys/girls. You will be ""in love"" with a new one every week.

4.) Finally, if you still want to work at Google (regardless of using Django or not), you need to formulate a plan. What do you need to do? How long will it take you?

Example: You will probably want a degree in Computer Science (maybe with the focus of web development, if that's your thing). Then you should have some open source repos or at least contribute to them (e.g., via github). Maybe your own little project that some people find helpful, a Youtube video, etc... This shows your potential recruiter some of your skills ;)
",1520971787.0
mipadi,"Probably not, unless they also have a lot of general computer science knowledge. Google interviews focus fairly heavily on general computer science.",1520961854.0
cbartos1021,"As somebody that interviewed at lots of tech companies, it doesn't matter what language you know. It's more about how you think about problems. Are you able to solve problems in a systematic way? Or, do you give up after spending a little bit of time on something? 

A language or framework is simply a tool -- a means to an end. Google doesn't care so much what you know as they care about how you tackle problems. 

That doesn't mean you shouldn't know how to do things programmatically: algorithms, Big O Notation, data structures, etc.

You should aim to be a very well rounded individual that can both solve problems and program well.",1520992444.0
Crapulam,Migrations are actually [used](https://github.com/django/django/blob/074a2f7f58cfab807ae72b09e634cad30a895369/django/db/backends/base/creation.py#L63) during the setup of the test db.,1520947615.0
TheKuchenBurglar,If you want to disable them for running tests [here's a package for that](https://pypi.python.org/pypi/django-test-without-migrations). You just have to add `--nomigrations` to the end of your test command.,1520953812.0
radwon,"Yes that's correct. For example:

    ALLOWED_HOSTS = ['127.0.0.1']  # Replace 127.0.0.1 with your host IP address

Documentation: https://docs.djangoproject.com/en/2.0/ref/settings/#allowed-hosts",1520937956.0
GoldFrame,"I don't know if this will help you, but what about having multiple settings.py files each with their own ALLOWED_HOSTS?",1521113692.0
booooomba,You should be using a frontend framework instead of Django for that. ,1520891658.0
athermop,"Your view has to have some javascript that polls some view created for this specific purpose at some interval.  (alternatively you could use a websocket connection)

When the server has the info from the raspberry pi, the view that the frontend javascript is polling will have the data.  Then the frontend javascript updates the page's HTML with this new data.",1520893165.0
peterpaul321,"Look here: 

https://channels.readthedocs.io/en/latest/
Maybe this helps.

Regards",1520921801.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1520886206.0
WelshDwarf,"I've never used it but this might be up your street:

http://django-tenant-schemas.readthedocs.io/en/latest/",1520885998.0
supra621,"Separate databases.

I would say that you never, ever want to mix data from one customer-company with another, else you’re asking for a security issue. It’ll only take one instance of a company accidentally seeing a record from another company (perhaps due to a glitch or oversight in admin/user permissions) for them to lose their trust in your product.",1520886793.0
DividableMiddle,"1. Yes, the scraping and data modeling will happen in your Django applications. Something I took away from the Two-Scoops book: thin views, fat models.

    Your application will need to render webpages, then scrape the page of information, which will then be built into a report.

    That is all completed server-side. Look into using `requests` and `beautifulsoup4`. Also, you can't expect the user to have a loading icon while this task is completed. That means this task of getting web pages and scraping them needs to be done asynchronous, look into Celery plus probably RabbitMQ.

2. Yes, you do. What if a user or potentially many different users all request the same company? Do you really want to hit the same servers multiple times for the same information? This is where caching comes into play. Look into Django's caching mechanism, then pair it with something like memcached.

Honestly, if this is your first project in Django (and more saying, software overall), then this is a big one. HOWEVER, it can be done.

Start small. Build out one feature. Don't preoptimze. Read other people's code on Github.

If you want to connect offline and have more questions with your project, then PM me and we'll discuss this more.",1520909312.0
rmakings,"1) It can.. but with external data like that, where one can't be assured of the response time, the ""better"" solution is to use something like Celery to actually perform the task.

2) Nope.  But if you're not going to use a database, I might consider looking at Flask.  Django may be a little too much for what you're doing here (batteries included!).  Nothing wrong with that, but you may find Flask a little simpler in this instance (no user auth, no db, etc.)

Just my two cents.  I'm sure other, far more qualified, voices will speak up!",1520885884.0
Choscura,"1.  Yes.  Basically that's the computer running your code, unless you specifically make it so that *that* computer also farms it out to other computers.

2. part of the power of Django is the flexible drivers-seat controls of databases in a way that leaves your software running the show but in a way that can automatically hook it into any database you like. if you're going so far as to make models representative of your data, you may as well use a database that can secure it in a variety of different ways.",1520889021.0
marmaladeontoast,"Good job, it's definitely got a lot of good info about stitching django and react together. Well done.

One thing that has always stopped me from using react with a real django project is that I can't find good resources on deployment....a simple deployment guide for digitalocean or something would really complete the picture I think.
",1520885181.0
GitW_85,"OP here. I've made this tutorial for those looking to integrate React in Django, with DRF. I would love to hear your feedback.

Cheers

Valentino",1520879329.0
faded_filth,I use this combo but I think I'll use GraphQL / graphene in my next project like this. Setting up writable nested resources requires a bunch of custom code in django-rest-framework.,1520887658.0
raouldukeisbatty,"Nice to see this! I have found that stitching together these two is best done with option 1 for sure unless you are using React in a very minimal way. When you dive into authentication things tend to ramp up quickly in terms of complexity for the frontend. If you can get away with using Django's session-based auth and redirect into a server protected JavaScript application then I have found no need to worry about server-side rendering or any auth logic.

Plus, by doing it this way you can still build a ""marketing"" homepage for your application that is using Django templates and get the SEO you may need.",1520946440.0
Dev26000,"I think optimizing react performance on its own is pretty difficult. Adding the overheard of running the application from within Django makes things worse. Yes, building the react app outside of Django and completely decoupling the api from the frontend is difficult at first, but it’s cleaner and much more scalable solution. ",1521104248.0
FeatheryAsshole,nicely detailed. looks like it would be very useful.,1520880008.0
vinyasmusic,"Is there something for Angular 4 and Django, with a little pointer on deployment ?
We are facing issue like AnonymousUser even after logging in and also confused on how best to use the Angular front-end.
Basically how to setup so as to get the best of both worlds is an issue ? I was planning on using the Cookiecutter Django to setup the backend ",1520937801.0
Garlic_Lade,django ;D,1520976271.0
ibtokin,"That's a good approach. You may want a separate model for attributes they don't have in common and map these to user via a foreign key, since everybody is a user, but not everybody is a teacher/student.",1520867406.0
nemesisfixx,Nifty idea. ,1520869182.0
,"Why don't u expand user model and add boolean field True if he is student , false if he is teacher or vice versa...",1520877467.0
eddyizm,"You just need to change the connection settings in your settings.py file 

```   

# Database

# https://docs.djangoproject.com/en/2.0/ref/settings/#databases


DATABASES = {

    'default': {

        'ENGINE': 'django.db.backends.sqlite3',

        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),

    }

}
```

",1520823601.0
Whoopska,"If everything is pretty clean, you should be able to make your DATABASES a local sqlite (or whatever you use in production esp postgres if you use postgres features) and then run

    python manage.py migrate --run-syncdb

And you should get all your models. If it doesn't apply cleanly, you may have to do something like blank out your MIGRATION_MODULES, run them, unblank them, then migrate --fake the migrations so they don't try to run again. That'll at least give you the schema you want.",1520827817.0
gallifreydweller,"Check out [Vagrant](https://www.vagrantup.com/) - it's a simple way of managing virtual machines. Using this you can have a virtual machine per Django project with the configuration (Vagrantfile) committed version control. This will allow you to use the same database as you do in production when developing locally. Not all database have the same features so it highly recommend using the same locally as you do in production and shying away from sqlite where possible.

You'll be able to google some vagrant scripts for the database of your choice.

Once the vagrant VM is up and running change your config in setting.py as others have mentioned. [dj-database-url ](https://github.com/kennethreitz/dj-database-url) is a really great way of configuring database in different environments using envvars.",1520855037.0
zettabyte,"Rather than try to jump into the other comment thread, I'll start a new one:

Before we engineer something complex, I'd ask how many records are we talking about?  And how long does it take in a local DB?

If the number of records is small, or the loop runs quickly (quick enough for your needs), just do it manually from a shell.  No need to overcomplicate it.
",1520863145.0
,[deleted],1520822691.0
flipperdeflip,"The other comment is ideal if you can do it in an `update()` but you have to exactly replicate the functionality.

Your example is the most simple if you really need to use the `save()` code on the models. The big bottleneck is probably saving the records. If this situation is a one-of then just go for it? You could optimize by using `save(update_fields=...)`. 

If you really have a ton of items maybe use something like [django-bulk-update](https://github.com/aykut/django-bulk-update), again with only the changed fields.",1520843274.0
oliw,"You have a custom `save()` method. They all need to be called via a loop.

The problem you're facing is that means at least 1 database transaction *per* Product here. If n=5000, that's 5001 queries. Slow and tough on all the components involved.

If you can emulate what your save does based on existing fields or fixed values, you can use `manager.update(field=...)`. This is pretty limited but if you can do this, even if n=5000, you're only doing 1 query.

But you probably need to do something in the middle. For that I like to use [`django-bulk-update`](https://github.com/aykut/django-bulk-update).  Basically, run save without committing. Then tell django-bulk-update to update all the changes in a single query.

    from django_bulk_update.helper import bulk_update
    
    products = Product.objects.all()
    
    for product in products:
       # maybe do something else?
        product.save(commit=False)
    
    bulk_update(products)

You can also limit the update to certain fields to limit the query complexity, see docs. If you're doing hundreds of thousands of these, you can chunk them up.",1520936925.0
wheezy360,"A lot of these questions are ... questionable. I don't see a lot of value in them.

* #1 and #7 are very open-ended, open to interpretation.
* #4 is wrong -- there are no Controllers in Django. That's what the View is (and the View is not the user-interface layer. It's the business logic layer). I'm not sure what you're getting at with the description of Controller as it pertains to Django. The settings module, maybe?
* #7 answer doesn't describe `views.py`
* As the interviewer, I wouldn't care if anyone knew the answer to #8.
* There are a lot more features than what's listed in #9 (maybe asking about specific features would be more valuable.
* #11 is wrong: `django-admin.py startproject <projectname>`
* #15 makes no mention of STATIC_URL which is a very important setting. Also should mention strategies to handle static files in development vs. production (i.e. serving them with Django in development is fine but set up something else like S3 / nginx / other static file web server in production)
* #17 Middleware is a function that acts on or transforms a request / response before / after it passes through the view layer (e.g. adding the `user` object to the request). The answers given here are very vague and I would ask for clarification from a candidate who gave such a response.
* #19 Vague answer. On the right track, but the author could've just quoted the docs directly:

> Django includes a “signal dispatcher” which helps allow decoupled applications get notified when actions occur elsewhere in the framework. In a nutshell, signals allow certain senders to notify a set of receivers that some action has taken place. They’re especially useful when many pieces of code may be interested in the same events.


Appreciate that the author is trying to help here but it seems more like someone was asked these questions in an interview and wrote a blog post about the wrong answers they gave. Some research and reference to the actual documentation for these answers would've made this post much more valuable.
",1520776800.0
Soriven,These are pretty awful interview questions / answers to be honest.,1520776776.0
Investisseur,What is the site you're working on mate ,1520793059.0
Grimnur87,How long did the current site take you?,1520769829.0
Fun2badult,Haha well it’s a simple site so not much. Now I’m trying to have it deployed on server without my server being up and now it’s not working and I can’t get it up again. Gonna be spending a lot of time trying to figure out this nginx thing,1520797559.0
ubernostrum,"You change it immediately.

`SECRET_KEY` is used for several things in Django that are security-sensitive. It's used in the signed-cookie tools, for example, so someone who knows your `SECRET_KEY` could forge valid cookies for your site and trick your site into doing things it shouldn't do. It's also used to generate password-reset tokens, so someone who knows your `SECRET_KEY` and some other information about a user account can forge password-reset tokens and take over that account.

There's a reason why there are big scary warnings all over the place telling you to protect your `SECRET_KEY` value.",1520765995.0
__himself__,I changed ours a few months ago. The worst to come if it was people have to log in again because session invalidation and password reset links expire. ,1520791805.0
spoetnik,Change it. ,1520765748.0
ramse,"https://docs.djangoproject.com/en/dev/topics/auth/#installation the paragraph and list talking about MIDDLEWARE tells you how.

    request.user",1520736605.0
flipperdeflip,Try not to use globals. Globals are evil.,1520954318.0
allredb,"I suppose you can use the <style> tag in your main template and use a django template tag in there. The only time I've used an image in CSS I just hard coded the link (../images/image.png), I generally try not to use images in CSS if possible. ",1520737507.0
yesvee,I suppose you mean the {% static %} directive. You can do the same thing in CSS also.,1520754280.0
philgyford,"I usually keep any images that I use in CSS in a separate directory from other images (maybe in the same directory as my CSS files, e.g. like `static/css/img/image.png`) and then use the relative path to them in my CSS (i.e. `img/image.png`).

If I was using SASS/LESS then I'd set a variable containing that path so I could change it easily in future if required.",1520864285.0
dude222,"thanks for posting, always nice to read about someone else's architecture.",1520736209.0
,[deleted],1520753103.0
xr09,This is porn for devops! <3,1520783525.0
haloweenek,"Looked at it briefly - looks solid - added to reading list. 
Thanx !",1520792754.0
ragnaror1,"Nvm, TIL form renderers...
solution is to set the formrenderer to be the same as template renderer:     
    
    FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'
    
Should I delete?",1520726584.0
ccb621,Sure. You could also use a foreign key if users can have multiple cars. ,1520728667.0
_Daimon_,"I recommend checking out the [official page](https://github.com/pypa/pipenv) for pipenv, they do a lot better job of explaining why this is a cool tool (sorry OP).",1520719808.0
Niicodemus,"I dunno, I think I would miss `workon <projectname>` more than pipenv would make up for. And it seems that pipenv requires more typing overall. I just open a new shell, `workon ...` then forget about virtualenv until I close the shell. I never `activate` and hardly ever `deactivate`. Further, `requirements.txt` allows me tons of control over my dependencies, including pinning exact versions or letting version auto-upgrade to point releases. So are there other reasons to switch? I'm just curious as I've never looked into pipenv before.",1520716408.0
Improvotter,"Having to use pipenv run every time looks like a pain. I’d rather stick with Pyenv instead, but the improved Pipfile and lock are interesting though. I’m currently using pip-tools.",1520728586.0
Eurynom0s,"Unless I majorly missed something, nothing about this post makes me understand why it's a replacement for virtualenv. The entire point of virtualenv is that while it's a pain to have to activate/deactivate, it's worth it because it enforces very explicit separation between versions of packages. This becomes especially valuable when you start getting into having a bunch of different packages you're using where for each one you need a very specific version to keep all of the packages playing nicely with each other. 

I also don't understand why they'd suggest that using homebrew is preferable to just using pip. ",1520753928.0
heilkitty,"Looks like an extremely opinionated wrapper for virtualenv+pip to me, TBH.",1520749177.0
mbrochh,I'm still torn about it. It feels like a chore to use pipenv run all the time (ai created an alias `pir` and the fact that it generates a random venv name is a nightmare when provisioning servers.,1520748853.0
lzantal,Install using brew?! Yeah no thank you. I rather stick with workon ... Instead of letting brew screw up everything. ,1520750868.0
jokikinen,Seems like a great step forward honestly. I really like the `.env` pattern and the Pipfile and its lock lend from some very proven approaches. Activating was a bummer before. It feels like Python is catching up in this respect!,1520750948.0
elbiot,"I thought the point of keeping secrets in environment variables is that you don't have them in a file, where snoopers can find them",1520715160.0
joejaz,"Pipenv seems cool, but I have several questions about it. 1) from my understanding, the virtualenv that is created by it is created in the creating user's home directory. Is there a way to override this location?  It seems like a less obvious place to have this, but more importantly if multiple users are logging into a system and want to ""activate"" it, the would each have different copies of the virtualenv in each of their home directories.  2) is there an equivalent command to ""pip download"" where it would download all of the deps from the Pipfile and the Pipfile.lock into a single location for installation later. ",1520783161.0
nemesisfixx,Good progress! Thanks for sharing. ,1520795711.0
blbil,"Ever since moving to docker and minikube (local kubernetes cluster), I really enjoy not worrying about this stuff.

Edit: you got me. This is why you shouldn't comment while on the toilet.",1520716732.0
supra621,Use `ModelChoiceField` instead of ChoiceField for college.,1520690144.0
dmckim,"You could always hard code it in the html also. If your list is static this is an easy solution. https://www.w3schools.com/tags/tag_select.asp

Or you could use jQuery selectable for autocomplete functionality and load the data from an Ajax call. https://jqueryui.com/autocomplete/",1520996295.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1520687472.0
,"I’m sure there’s a way to do this with class based views, but I use function based views for stuff like this.  Then I’ll validate whichever is completed (you can tell by which button is pressed).

Inline formsets can accomplish what you want, too


https://docs.djangoproject.com/en/dev/topics/forms/formsets/


",1520684671.0
mattpii,"You can use class based views, but I prefer function based views. Just pass in both forms in the context parameter when rendering. Define validation in your forms file and check if the form is valid for BOTH forms in your views class.",1520704927.0
andrewingram,"Create a single form with fields for your data requirements across both models. Override `form_valid` in `FormView`, feed data into both User and Address.

Based on your question it feels like you're leaning too heavily on ModelForms. ModelForm is a convenient abstraction around the common requirement of creating (and persisting) a single model instance from a form. As soon as you're dealing with multiple models (two in your case) it's no longer a suitable abstraction and you want to drop to the layer below (a standard form). There are obviously ways to coerce a ModelForm into behaving how you want, but abusing the wrong abstraction is the fastest way to accruing technical debt..",1520708874.0
,"Hello, I have encountered this problem before all I did was duplicate the field of address model in template and then intercept the request.post context and pass it to address model in my views.",1520685225.0
bhat,"I like the way that the `CommandMixin` abstracts away the complexity. However, there's still a fair bit of complexity, and it looks a bit hackish to me.

Have you looked at [intercooler.js](http://intercoolerjs.org/)? It provides a more structured way to define ""commands"" (which it generalises to any HTTP request), and also provides a way to update the page depending on the response without requiring a reload. I think you should be able to adapt your mixin to use Intercooler without much difficulty.
",1520901460.0
Roman_V_M,Image is no different from other files and you can surely upload a file via a post form with multipart encoding: http://docs.python-requests.org/en/master/user/quickstart/#post-a-multipart-encoded-file,1520690761.0
connlloc,"    f=request.data['file']
    destination=open('/adirectory/photos/%s.jpg' % uuid, 'wb+')
    photo = '%s' % uuid
    for chunk in f.chunks():
        destination.write(chunk)
    destination.close()

uuid is the name you want to save the image as, I generate mine by first saving a model instance with a uuid key",1520696949.0
netscape101,Maybe look at something like AWS Kinesis or Kafka...this is a tough question though...,1520863277.0
siliousmaximus,"I might be better to handle this with some framework that are naturally asynchronous 

NodeJS + websocket looks more robust",1520674487.0
khvn26,"Learn asyncio and subclass asyncio.StreamReaderProtocol. Alternatively, if your API uses websockets, use aiohttp.",1520679747.0
vitogeek,"Well if you don't wanna go the web sockets or channels route then you can write an API to grab and return the latest price and do the AJAX calls from front end every few seconds. Since no one really cares and no other price trackers display ""the live data"", you can set to refresh every 10-15 seconds and a put a refresh button right on front-end as well in case someone doesn't wanna wait 15 seconds.",1520700965.0
crypticG00se,"I have a couple of suggestions. 
1) Async inside of django like using Obervables: [Django Observables](http://django.wikispaces.asu.edu/Observer+Design+Pattern) or [reactiveX] (https://github.com/ReactiveX/RxPY).
2) Externally and instead of using celery try Apache Storm [STORM](http://storm.apache.org/) with Streamparse [Streamparse](https://github.com/Parsely/streamparse).

Observables could be a nice usage of async with a timer. 

Ex:
    from rx import Observable

    Observable.interval(1000) \
        .map(lambda i: ""{0} Mississippi"".format(i)) \
        .subscribe(lambda s: print(s))
",1520855161.0
flipperdeflip,django-instant is easy-mode.,1520862467.0
maratmkhitaryan,Pusher.io is for you :) But you can make own REST API for AJAX.,1520782642.0
YPCrumble,This is pretty cool. What do you think about the potential for this to work with [django-anymail](https://github.com/anymail/django-anymail)?,1520630344.0
laxbuddha,I like the look of this!,1520643201.0
scottocom,I didn't pick it up from the docs but It looks like you can store templates in the database? I like it. ,1520653129.0
theredmist,I have used django-post_office https://pypi.python.org/pypi/django-post_office/3.0.4 in the past with good results.  How is EmailHub different?,1520637119.0
iBlag,Would you be interested in integrating with [django-secure-mail](https://github.com/blag/django-secure-mail) (mail backends for GPG/PGP encryption)?,1520749656.0
thulasi_ram,"There are two ways to get.

data = request.GET and data = request.data

The request.data is the preferred one. It will be a dict of all the url parameters. ",1520593915.0
ProgrammerByDay,"What url patterns have you tried?

",1520618361.0
vikkkki,"Well done. This is good to have. Have you tried Mockaroo before? I use that to mock my endpoints. If you plan on further development, Mockaroo might be a good case study for you.",1520598160.0
prancingpeanuts,"My first Python package that was made to solve an issue I was facing in my day to day work. I wrote a blog post about it https://thomasjiangcy.com/blog/fake-api-endpoints-django-rest-mock

Hope this might help others!",1520588586.0
SymbioticBadgering,"You should look into [aggregations](https://docs.djangoproject.com/en/2.0/topics/db/aggregation/).  You just need to filter the desired records and aggregate them.
Whether to store calculations in a DB is a matter of opting for runtime or storage efficiency. ",1520581772.0
thibaudcolas,Follow-up post (of which I'm the author as well): https://wagtail.io/blog/rethinking-rich-text-pipelines-with-draft-js/,1522936456.0
checkYourCalendar,Show relevant template and urls?,1520582061.0
douglasekuwanda,Options include [django-excel]( http://django-excel.readthedocs.io/en/latest/) and [django-import-export](http://django-import-export.readthedocs.io/en/latest/). Check out [Vitor's tutorial](https://simpleisbetterthancomplex.com/packages/2016/08/11/django-import-export.html),1520589916.0
Zulban,"I'd be very surprised if Python's csv library couldn't safely parse a csv file. Just never execute user input as code, and verify the values are within acceptable limits. Worst case is you get some exceptions while parsing a crazy csv.

When you add data to your database, use the database utility functions to escape input. Don't cook your own string formatter to insert into SQL statements.",1520571797.0
jeffbaier,"You want to use a project like https://github.com/jjkester/django-auditlog

or maybe even http://django-activity-stream.readthedocs.io/en/latest/concepts.html

depending on how you want to use and display the logged actions.",1520574636.0
checkYourCalendar,"I've implemented something similar by having a separate model, maybe `ProductChangelog`, and then saving a new object there whenever you update a `Product`.",1520570902.0
mattsl,https://github.com/grantmcconnaughey/django-field-history/blob/master/README.rst,1520582025.0
rjschave,I've used [django-simple-history](https://github.com/treyhunner/django-simple-history) on several projects for tracking edits and deletes.  ,1520611265.0
Nicksil,Don't pass the request object; it doesn't need the object to run the procedure. Just pass the user instance instead.,1520549392.0
fotcorn,"I do not think thats possible. Just call the method with the request from your view, something like this:

    class MyModel(models.Model):
        code = models.CharField(max_length=256)
        def set_code(self, request):
            self.code = request.user.username + hex(int(uuid.uuid4().time_low))[2:]
    # in the view:
    my_model = MyModel()
    my_model.set_code(request)
    ny_model.save()

Show us the view code if you need more help.
",1520544345.0
Nicksil,Do not click. This is referral link spam.,1520535720.0
bengerginger,"Worth noting this is using an older version of Django. In my opinion, it might be a better idea to start out learning Django 2.x. most of the tutorials can be used and path vs URL is easier to understand.  ",1520535603.0
Nicksil,"Have you considered loading the data in to a spatial database (e.g. [PostGIS](https://postgis.net/)) once, then implementing some of [GeoDjango](https://docs.djangoproject.com/en/stable/ref/contrib/gis/)'s feature set?",1520528703.0
jobelenus,"This is less a Django question, and more of a Python question. You want a class, and you want to store the data in class-level variables (not instance-level).

When you query for the data, you want to check if its not loaded. And if its not loaded - load it. That means you'll only load it one time. Because the variables are class-level, and classes are only constructed once. So long as you don't re-assign/empty those variables your data will always be there.

Note: what this really means is that for every process that data will be loaded once (e.g. if you are running apache with 20 workers, each a separate process, each worker will have a single reference to that class).

Further note: *do not ever put other object references into that class*. Because this is designed to be long-lived, if it holds onto other objects those objects will never be garbage-collected, and you're going to run into problems and wonder ""what the hell is going on""",1520527636.0
pydry,"It sounds like you're looking to implement a singleton?

I'd probably put this in the django settings (it would load on startup).",1520541661.0
massover,"If this isn't some sort of [xy problem](http://mywiki.wooledge.org/XyProblem), I'll also add in that django has some [functional lazy utils](https://docs.djangoproject.com/en/2.0/_modules/django/utils/functional/) that might help accomplish what you're asking. It's used for things like [reverse_lazy](https://docs.djangoproject.com/en/2.0/ref/urlresolvers/#reverse-lazy)",1520543461.0
geosoco,"If you run your own servers, one thing you could do is set up a tiny daemon that loads this data once, then handles internal requests. This might be a better solution than loading it in Django, which could actually be running in multiple processes. 

The internal requests could happen in a number of different ways including web requests, a message queue, or whatever other method. ",1520546184.0
asdfwaevc,"How are you serving/hosting this stuff? If you're using GUnicorn with server-refreshes after every request, or something similar, then you're going to have trouble no matter how you look at it, because it'll have to reload every time.

Otherwise, as long as your import is top-level, Django should use the same import everywhere, even across files, so it shouldn't be slow.

I've never tried this, but maybe you could `pickle` the module?  Then load from the pickle-file instead of loading from disk?

",1520531731.0
dedsm_,"well, you can put the data in the settings and then it's loaded on server start, you can also create a memoized classmethod and then first request will have the performance penalty ",1520549719.0
flipperdeflip,Grab your favorite memoisation decorator and slap it on a function that loads the data. ,1520584651.0
booooomba,"I'm not sure if i understand exactly what your library does, but why not just put it in a simple if clause?

Also if it really takes 3-5 seconds you should consider a task queue.",1520524935.0
apreche,"I think I understand what's going on. The thing is, Django is for HTTP. Other than the user's session data and the data in the database, each and every request is brand new and separate from all other requests. There is effectively no information held over from one to the next.

You can try to put some information into just normal old global variables, but this is a very bad approach. It will take lots of RAM, and how well it works depends on your uwsgi server (gunicorn, uwsgi, etc.). 

What you want to do is put this somewhere outside of Django so it can be queried, just like you query the database. Make a little server, completely separate from django, that holds this information and provides an API to query it. Now your Django app can query it just like it queries the database. Every request will have access to it and wont' have to worry about loading it.",1520529732.0
tagnydaggart,"I'm not familiar with tzwhere (looks interesting though!) but consider making it a separate microservice (hosted on the same server or another) and call it from your app via a REST interface. In this manner, you can keep the whole thing loaded even if you need to update/restart your main Django service. You can still limit access to only your app, so there shouldn't be any additional security concerns.",1520536356.0
booooomba,Have you tried the google search results? There seems to be a pretty recent (12/2017) video explaining how to do it as well as a lengthy SO post about it.,1520521444.0
fdemmer,http://django-nopassword.readthedocs.io/en/latest/,1520512649.0
liquidpele,"you can make several models based on a parent model, you just have to make the parent model abstract.  

https://docs.djangoproject.com/en/2.0/topics/db/models/#abstract-base-classes

django migrations will ignore those models, as they are only meant to be used by other models for inheritance.  ",1520470078.0
bmoe872,"One of the sites I work on has this. We've been seeing CPU Bottlenecks due to some very long queries. We didn't get crazy with subclassing, but it did get crazy with the number of foreignkeys and many to many's on the subclass which seems to be causing an excessive amount of queries. I don't have much experience with the other way you defined, at scale, so I can't really say if its worse or not. ",1520481858.0
yee_mon,"I've been using both and I can't say that there is much of a difference I noticed in terms of performance (as you say, they are the same structurally).

Subclasses are easier to query. If it is a true is-a relationship, it feels more natural in code.

OTOH, 1:1 field relationships are easier to add on after the fact and make more sense when only the child side of the relationship is used, as you can avoid the join then.

My general rule: Composition over inheritance, just as with any other class. Exceptions are totally fine.",1520495797.0
martey,"> This many sub-classes doesn't apply to my project...

The performance hit doesn't require multiple levels of inheritance. Any time you query the main `Product` table, the tables for `Bearing`, `Widget`, and all of the other subproduct models you have created will be queried as well.

> I don't see where this is an issue specific to concrete inheritance itself, but rather a fact of life with database table joins.

I am not sure this matters, since using concrete inheritance in Django automatically creates table joins. It might look like it won't matter now, but I guarantee that you will run into issues with slow SQL statements in production.

Read this post by Jacob Kaplan-Moss, ""[Django Gotcha: Concrete Inheritance](https://jacobian.org/writing/concrete-inheritance/)"":

> In nearly every case, abstract inheritance is a better approach for the long term. I’ve seen more than few sites crushed under the load introduced by concrete inheritance, so I’d strongly suggest that Django users approach any use of concrete inheritance with a large dose of skepticism.",1520499654.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1520464524.0
booooomba,"Obviously you cannot use real models. But you could just use a JSON object and store it in a Postgres JSON field.

Quick, easy, fast.",1520449547.0
Azelphur,"Well, this is an interesting one.

My two cents is that I don't think creating actual models owned by the end user would be a good idea. You talk about being able to define and edit fields, which would mean creating new columns and such which would create difficulties with defaults, etc. Doing this right would be hard imo.

Here's what I'd do, assuming your survey design mentioned [here](https://www.reddit.com/r/django/comments/82qlpr/something_like_airtable_in_django/dvcgcab/):

    class Survey(models.Model):
        user = models.ForeignKey(User)
        title = models.CharField(max_length=64)

    class SurveyField(models.Model):
        survey = models.ForeignKey(Survey)
        field_name = models.CharField(max_length=64)

    class SurveyResponse(models.Model):
        user = models.ForeignKey(User)
        field = models.ForeignKey(SurveyField)
        value = models.TextField()

These models (with some forms and such alongside them) could be used to do exactly what you ask. A business user would create a Survey and add multiple SurveyFields, and a responder to the survey would create multiple SurveyResponse fields.",1520471741.0
djangoblaster2,"Ok I found there are ""form builders"":

- https://djangopackages.org/packages/p/django-form-designer/
- https://github.com/stephenmcd/django-forms-builder
- https://github.com/mishbahr/djangocms-forms
",1520472718.0
,"What exactly about this is causing you problems? It seems extremely simple.

",1520472255.0
supra621,"It sounds like you just have two many-to-many relationships to manage here. I would just make a view for the relational table, and a form with drop-down selectors for relating an entry from ""A"" to an entry from ""B"". Basically a simplified version of how I might build an Admin model, but with forms and views instead.",1520474795.0
roysta,"Absolute most basic way would likely be to use Django Admin?  If that's not an option, just a form with that field on it could be ""POSTED"", and the view shouldn't have a problem saving it.",1520559861.0
Nicksil,You could [write an authentication backend](https://docs.djangoproject.com/en/stable/topics/auth/customizing/#writing-an-authentication-backend) and create a [custom User model](https://docs.djangoproject.com/en/stable/topics/auth/customizing/#substituting-a-custom-user-model) to get the exact behavior you need.,1520447695.0
ramse,"You can just override the login.html template removing the form and only show the linkedin icon for login purposes. For added measure you can also write your own accountadaptor overriding the is_open_for_signup returning False.

    class NoSignUpsAllowedAccountAdaptor(DefaultAccountAdapter):
        def is_open_for_signup(self, request):
            return True
",1520458013.0
pat_the_brat,You can try [this solution](https://github.com/pennersr/django-allauth/issues/345#issuecomment-195695992) from the allauth Github issues.,1520447743.0
flipperdeflip,"There are more oath apps then just django-allauth, check pypi for some alternatives like django-oauth-toolkit.",1520584221.0
MattBD,"""Updation"" isn't a word any native English speaker would use. You should replace it with ""update"".",1520453700.0
shabda,"Django ORM Cookbook is the second book in our Django X Cookbook series. It is very much a work in progress, but I would love to get some feedback.

The repo is [https://github.com/agiliq/django-orm-cookbook](https://github.com/agiliq/django-orm-cookbook). PRs welcome. 

I would love getting feedback on

1. What is the appropriate level to target for a book like this?
2. Are the current question too basic? Too advanced?
",1520438059.0
locusofself,"The format of:

How to model one to many relationships? 
How to ...  ?

is not as concise as just:

""Modeling 1-to-Many relationships""  or even just ""One-to-many relationships"".

It will be a little easier to find what you are looking for.",1520476433.0
Colonelrascals,I’d love to give it a look!,1520430887.0
mephistophyles, I'll take a look too. ,1520432854.0
S-6-6-6,"I'm trying to learn exactly this, do would be grateful for the link! ",1520433653.0
toolzark,"great, i'll take a look",1520435588.0
tonde_mut,Would love the link mate,1520435643.0
MarkoPoli,Yes please :),1520435785.0
XarR,I've been long time looking for exactly THAT! Would love to read that preview.,1520461286.0
IIGrudge,I'm interested. Picked up Django and would love to learn a frontend framework. ,1520571457.0
tornaloco,"I want the link, Please!",1521621772.0
dzlkxj,"Never had a use case for which django.contrib.auth wasn’t a good fit. It actually saves a lot of time, and prevent design mistakes.",1520415240.0
geosoco,"Unless you've got a very specific case, use Django's own auth. It's pretty flexible. You can add fields and use just the parts that are valuable.

Also, if you need something else, consider some of the other packages out there before rolling your own. There's a lot of great code out there to support OAuth and other forms of social authentication and such. 
",1520416069.0
,"My advice is before you start programming, work out in detail what your requirements will be.

If you think the built in user and group system will be able to handle it use that (very rare), otherwise create your own",1520415164.0
haloweenek,If you feel that you can do that better that 10 years of artisan improvements - create your own.,1520423796.0
shabda,You can also specify your own models for your user model using `AUTH_USER_MODULE`.,1520499898.0
geosoco,"AJAX is probably the best solution for this, but it'll require some work. You need a rest endpoint on the django side that you call from javascript and then render the data. 

You can get/post from javascript and pass in any variables like the startDate to that, which you'll then filter and return the objects probalby on JSON.

(it's possible to return html fragments, but that could be a hassle depending on how you've got things set up). ",1520409832.0
supra621,Second on AJAX. I have a similar filter built into my admin pages for limiting dropdowns based on other key values. [See my post here](https://www.reddit.com/r/django/comments/81um17/filtering_admin_addchange_form_with_multiple/dv6aq5v/).,1520475308.0
Nicksil,"- Fetch the new value from the server
- Query the DOM for the element which houses the value to be displayed
- Insert the new value in to that element

Something along these lines:

	function fetchAndReplace() {
		// Fetch the value from your server
		someAjaxProcedure.then(
			response => {
				// Query the DOM for your element
				const myElem = document.querySelector('#myElemID');			
				
				if (myElem !== null) {
					// Update the element's value with the response data
					myElem.textContent = response.data.myValue;
				}
			},
			error => console.log('Unhandled error');
		)
	}",1520394840.0
asplodey,Why can't you check if the form has errors before you redirect?,1520409627.0
,A simple solution would be to use AJAX for posting the form data and then use Django's messages framework to let the user know that the action was a success or not.,1520409732.0
ramse,"If you're using gunicorn, you just have to add the following to your *.service file, whichever launches the gunicorn processes.

    Environment=SECRET_KEY=......",1520437008.0
booooomba,One has an underscore the other doesn’t.,1520418820.0
juliob,"How are you starting the app? Via runserver or through wsgi/systemctl?

Thing is, running via wsgi (with, probably, another process control server, like systemctl or supervisor) will *not* read environment variables from those files. You usually need to set them manually on your wsgi.py, with something like

    import sys
    sys.environ['SECRET_KEY'] = 'secret'
    # normal wsgi stuff goes here

*edit*: Also, just check the user which the process is starting. You can have those variables in your environment, but that user may not (say, the app runs as `http` user, instead of your normal user).",1520421051.0
wildyd,"My approach is to use gunicorn.service with parameter

EnvironmentFile=-/etc/django.conf",1520440301.0
ccb621,"/u/juliob is on the right track. Also, note that there is a library that helps you use environment variables for much of the configuration: http://django-environ.readthedocs.io/en/latest/.",1520441786.0
xinaked,"    if not created:
        lawn.wins += stats['wins']
        lawn.losses += stats['losses']
        lawn.save(update_fields=['wins', 'losses'])
",1520394936.0
c17r,"how are running django?  If it's a production setup of a web server, python application server, etc. then it's http (80) or https (443).

If you are running it on AWS in debug mode (`django runserver`) then by default it's ~~8080~~ 8000 but it's not good to run it in that fashion on a public server.",1520384937.0
jellyliketree,"It's using HTTP, but just on a different port. The default is 8000 like the other comment says, but that's customizable at the command line.

I've most often seen it run behind a web server like Apache or nginx though, and that'd listen on 80 and 443 for http and HTTPS and route the requests to your application.",1520385484.0
Nicksil,"Paste the complete traceback from the exception.

Edit: also post the entire template or the entire context in which this procedure takes place.",1520363037.0
Nicksil,"> how do i pass all of them to `Player.objects.create()`, can i do something like **kwargs ?

Give it a shot and see what happens. If it breaks, figure out why, then go from there. If you get stuck during that journey -- and you've *tried* everything you could think of -- come back and let us know.

We're happy to help, but this is a golden learning opportunity (the 'try it and see what happens' exercise)",1520362953.0
DmitriyJaved,"You better post here your github and add some issues so someone who interested in helping could just pull request changes, not mail you or smth ",1520366142.0
shebazz42,What would be _really_ nice would be if the leftmost column in the giant tables were sticky. Those have always been really hard to read.,1520370089.0
,"http://www.dropzonejs.com/

Sounds like exactly what you are after",1520410167.0
Ob08,"Without digging in to your code or seeing any details about your deployment, my gut reaction is that you have a concurrency/transaction issue with your database.

Looks like you're using MySQL, try setting the isolation to read_commited.",1520377353.0
abrazilianinreddit,"I test my ImageFields like this:

    from PIL import Image
    from os import unlink

    def test_model_with_image():
        image = Image.new('RGB', (100, 100))
        image_file = NamedTemporaryFile(suffix='.jpg')
        image.save(image_file)
        my_model = MyModel(picture=image_file)
        self.assertIsNotNone(my_model.picture)
        unlink(my_model.picture.path)

Mind you that this will save a file to the file system, so you should delete it after the test using unlink.",1520354452.0
DmitriyJaved,"It’s not clear what are you testing in your views, object creation? ",1520366766.0
rajbabu0663,This looks similar https://stackoverflow.com/questions/42436976/django-rest-framework-attributeerror-user-object-has-no-attribute-books,1520355873.0
pydanny,"When you are sending by POST, you are sending HTML form fields, which don't easily allow nesting. Switch the type to `application/json` and it should work fine.",1520359282.0
xenopizza,"What about not using nested objects and instead having the client_id in the url ?

POST “/foo/<client id>/pets” ?
",1520362454.0
eljohnsmith,Thanks for this. I read everywhere how easy it is to use celery but it’s rare to find end to end examples such as yours. Good job.  ,1520633127.0
shebazz42,"Hey homie, don’t be so hard on yourself. This stuff is hard. IMO you should read up on and be comfortable with database normalization. Then *draw* a diagram of your database and apply what you’ve learned.",1520341734.0
maratmkhitaryan,https://docs.djangoproject.com/en/2.0/topics/db/models/,1520527941.0
shabda,Yes. https://github.com/django/djangoproject.com,1520329607.0
adrianh,"Yes, except for the [bug tracker](https://code.djangoproject.com/), which uses [Trac](https://trac.edgewall.org/).",1520333657.0
shabda,"The app was inspired by this reddit post. https://www.reddit.com/r/django/comments/7wkff2/if_anyone_looking_for_a_new_django_package_idea/ .

This is a simple app which adds some basic performance details as headers. The headers follow the W3 servertiming API specs, so chrome dev tools will display it under timing tabs. I don't know of any other browser which supports servertiming, but as it becomes more mainstream, more browsers can show this.",1520329569.0
shebazz42,"A couple comments/questions:

-	why is there a random “LDAP” model at the bottom of your models.py file?
-	clean up your readme to make it more clear what exactly this does, why you would use it, and what the differences are between it and the built-in logging. I had to dig into the source code to figure out what your library does.",1520341487.0
pontificator2347,how does this compare to what I use for model change tracking : https://github.com/jjkester/django-auditlog,1520368153.0
flipperdeflip,"You are probably not connecting to the same database server with psql as you do with django: check address, port etc.

How did you create the postgres database? Usually you have to do a ""CREATE DATABASE ... "" somewhere and run a django migrate. 

The other developer can use a different settings file, or you can use environment variables to pass connection info. He'd probably have his own development database and you keep their schema using the migrations and possibly some fixtures.",1520323926.0
elingeniero,"It's just a list of stuff Django does, gives no indication of why it remains the premier framework. All the other frameworks listed have at least some of those feature as well.

Low-effort blog spam.",1520323420.0
connlloc,I don't think nginx enforces a timeout. can we see your code somewhere? ,1520316696.0
kennydude,"If you're using Django-storages and uploading the exact same filename, it defaults to overriding it.

You can set `AWS_S3_FILE_OVERWRITE = False` to disable that",1520337290.0
jamsquad87,"That auth_user table is because in the config you probably have something in INSTALLED_APPS called 

    django.contrib.auth

This is djangos built in auth system and will create the tables on a 

    python manage.py migrate

Also, you will want to check out AUTHENTICATION_BACKENDS in the settings.py.

You can make your own authentication backend, which you can do whatever with. They can stack, and backfall on one another. This way you can have OAuth2, Saml2 and the default + more

    django.contrib.auth.backends.ModelBackend

Check out the ModelBackend in your python site-packages to see how it works, and create your own",1520301881.0
booooomba,"If that's all you need, why not just use a simple Python script?",1520301675.0
,[deleted],1520312461.0
batisteo,"For lovers of dark themes and Stylus / Userstyles, I made* a dark theme for the Django website and documentation.

I hope you like it!
Here is the source for comments and forking: https://gist.github.com/batisteo/4f4c1552ba18ffa51a4b8bfb527c9673

*which involve copying and adapting for others’ work",1520298784.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1520293763.0
keckbug,"Are you looking to simply password protect certain pages, or do you need a full user management suite?

If it’s the first, I’d lean more on nginx’s [basic auth](https://www.digitalocean.com/community/tutorials/how-to-set-up-password-authentication-with-nginx-on-ubuntu-14-04) rather than Django.  Remember to use HTTPS whenever handling auth to protect the credentials.",1520313935.0
pat_the_brat,"Speculation based on what you told us (note that I didn't spend hours thinking about it, of course)...

If you don't need all that data, you are probably better off parsing it before you store it. If you parse it before writing to the DB, your writes will be much quicker. If you store massive amounts of data, it will take longer to store in the DB, longer to read, and the same amount of time to parse (though if you parse it each time, it would be `x ms * number of reads`. If you parse it and save minimum data in the DB, it will just take `x ms`.

It only makes sense to store it all if you think you may want to extract more data from the JSON in the future.",1520284675.0
The_Amp_Walrus,"You need to define which efficiency you care about. There are lots of kinds of efficiency. You might want to optimize for:

* cpu usage when processing the data
* worker script runtime
* request time when presenting the data
* memory usage
* disk space usage
* disk access patterns
* etc

It all depends on what's slow now and what needs to be fast. There is no generic answer.

As an exercise - most text characters in a JSON are 1 byte each. Figure out how many bytes are in one ""big"" JSON. Figure out how many of these you're likely to store on disk. Is it a lot?",1520284766.0
never_safe_for_life,"Great answers already, I'll add a little bit: you're saying ""I hear Postgres JSON searching is fast, is it for me?"" E.g. can I save the work of parsing the JSON now and use this built-in tool instead?

If you process the JSON when you first get it, you only have to parse it once. If you do it in Postgres you have to search that big JSON blob every time. So, pre-processing in this case is clearly better. Do the hard thing once versus every time.

I might change my answer if you need other elements of that data later, and it was hard/impossible to retroactively fetch it. If you *need* the data then you have to store it. Just keep in mind if you go that route, your problem will be storing large amounts of JSON. 

I wrote an API parser like this for Path Of Exile stash tabs API a while ago, where I stored the whole blob for every request. Within a week I had 20GB of data. I was off the free tier and queries started taking ~10 seconds. Within a few months I would have had to switch off Postgres altogether, and investigate NOSQL.",1520303617.0
,"I think you're over complicating this..., want to signify it's a percent to the user? Just display it that way.

Using bootstrap appended input groups, additional text, a placeholder, or whatever else you want. The input is just a regular input form field.",1520281340.0
ghostofgbt,"I would write a custom template tag (called percentify for example) so you can do something like {{ somefloatvar | percentify }} that returns the percentified number plus a percent sign. I did this on a financial web application to auto format percentages, red/green text for positive/negative numbers, etc.",1520316384.0
Nicksil,"> I'd like to be able to add/delete bookmarks within the bookmark group

    # Creates a new Bookmark record
    new_bookmark = Bookmark.objects.create(user=..., resource=..., ...)

    # Fetches an existing BookmarkGroup record
    bookmark_group = BookmarkGroup.objects.get(name='favorites')

    # Creates the relationship between the new Bookmark record and the existing BookmarkGroup record
    bookmark_group.bookmarks.add(new_bookmark)

    # Removes the relationship between the new Bookmark record and the existing BookmarkGroup record
    bookmark_group.bookmarks.remove(new_bookmark)

> I'd also like to be able to see what group a resource has.

    # Fetch a Resource record
    resource = Resource.objects.get(name='My Resource')

    # Fetch ALL Bookmark relationships for Resource
    resource.bookmarks.all()

    # Fetch Bookmark relationships for Resource if Bookmark was created after 2018-01-01
    resource.bookmarks.filter(created_at__date__gt=datetime.date(2018, 1, 1))

So, that's the gist of it. You didn't explain what specifically you are having issues with, so if what I've just posted doesn't help, give us a little more detail as to what exactly you're having trouble accomplishing.",1520279861.0
andytwoods,I wonder if django taggit could be a good alternative https://django-taggit.readthedocs.io/en/latest/,1520318551.0
,Fileinput js plugin,1520269248.0
igncampa,"I don't have an answer for you but my guess is that any of the popular CMS' (django-cms, wagtail, mezzanine) **might** have a **similar** feature and by reading the source code you could have a starting point for your logic",1520269033.0
Dom4n,FineUploader is really nice. I have used it in few projects.,1520289089.0
Nicksil,"Learn JavaScript when you think your cognitive load can carry it. You can re-create the most complex Django/JavaScript project in the world without using JavaScript. Now, it wouldn't be as fancy or, perhaps as some may argue, as user-friendly, but the fact remains that all the plumbing and infrastructure needed to carry out the tasks necessary for the core operation of such a piece of software exist between the client and your server (the request-response cycle).

It is important you try and avoid the 'advanced' tooling (compilers, transpilers, checkers, etc.) and brand names (React, Redux, Vue, etc.) and instead concentrate on learning just JavaScript. If you get tied up in the pandemonium that is the JavaScript world as we know it today, you will burn out and you will quit.

With all that said, I'm not loaded down with the latest in decent JavaScript tutorials out there (like a lot of things, there is more bad/mis- information out there than good, well-sourced, well-articulated tutorials, discussion, etc. I can recommend [MDN Web Docs](https://developer.mozilla.org/en-US/) as a decent source of JavaScript documentation and its various APIs. There's also [Eloquent JavaScript](https://eloquentjavascript.net/) which is a well-written manual on the JavaScript language.",1520267681.0
synf2n,Now,1520281311.0
FeatheryAsshole,"It's probably are good idea to get a more or less firm grasp on using a traditional MVC framework like Django before jumping into JavaScript. It hugely increases the complexity of your work. 

On the other hand, using a JavaScript frontend framework with an API-backend like DRF is pretty much state of the art, so arguably it's not that useful to learn how to use Django for the frontend.

What's your general knowledge of programming and web development? I was doing web dev without JS for about 2 years before I picked up some JS.",1520265432.0
heo5981,"I learned HTML, CSS and Javascript before I started to learn Django but I'm still learning many things about each of them. I think the most important thing is for you to completely focus at only one thing at time, even if you shift everyday, for instance, one day you focus only on Django, the other day only on JS.

You definitely don't need to master one thing to only then go to the other but you need to make sure that when you're learning one thing, you're completely focused to really understand what you're doing.

I'm learning React right now but I'm also going to Rest Framework's docs and tutorials and trying to learn something from there, the same thing with Javascript and CSS but this is only possible because I know the basics of each. Focus completely on one thiing until you have mastered the basics (even if you focus intermittently) and after the basics, do some alternation to master each of them. You could try to use one to learn the other, learning Rest Framework for me is a chance to also learn React and use the API I created, which is also a chance to learn more Javascript, which will make my Django wbsites better even if I don't use Rest.

Have a plan and master the basics.",1520278217.0
antirabbit,"If you want to dynamically generate content on pages, I would start learning basic javascript and jQuery at the very least. ",1520283805.0
JulianCienfuegos,dedicate a half hour each morning before breakfast? The eloquent javascript book is really cool and pretty decoupled from html and css and frameworks.,1520294511.0
JulianCienfuegos,http://shouldilearnjavascript.com/,1520294745.0
supra621,"If you’ve already got a working Django project, learn JavaScript when you can no longer accomplish what you want to do using HTML/CSS alone.

Learning all from scratch in the last month myself, I ended up learning HTML/CSS/JS right after I finished my first run of `templates` in Django. I followed along with books until I figured out how to use template tags, then started to make some templates in HTML, expanded on that with some CSS, and then went straight to d3.js to do things with the data. It took about a week.

About three weeks after that, I came back to jQuery when I needed AJAX for my templates. I was hesitant to learn jQuery because I didn’t want to pursue ANOTHER language, but jQuery really is just like shorthand for JavaScript, and I picked it up in just a few hours.

I found JavaScript in general to be easier to learn than I thought, but what made it really easy for me was that I had an end result in mind. In the past I’ve tried learning JS for the sake of learning it, and lost interest. When I had a real application, however, I picked it up in no time. D3.js was extremely fun to learn and worked well with Django models.",1520312765.0
daredevil82,"what you want to do is have your server return a task ID back to the client after the job has been put in the broker.  Using polling, have the client check Redis for the task state, and when it's complete you can dismiss the loading gif.",1520248714.0
xenopizza,"Maybe you could use Websockets and let the backend message the frontend when task is done ? Bit more complex than polling but arguably better.
",1520251394.0
jobelenus,"In addition to what's been said, you need to make sure that Celery is not ignoring the result of the task. If you are ignoring it that means that the `state` won't ever be meaningful (e.g. will always be pending). That setting is slightly different based on the version of Celery you're running, so check the docs.",1520262610.0
NotSelfAware,"Sounds like you actually want another foreign key from Extension to PhoneNumber (use camelcase for multi word class names - it’s more pythonic), and save the default number for the extension there. It seems what you’re trying to do is give a default for a reverse relationship, which isn’t possible.",1520255356.0
dreamofwaking851,The reverse side of a fk relationship generally would be phone_number_set unless it's got a related name defined. Check out django docs. https://docs.djangoproject.com/en/dev/topics/db/queries/#following-relationships-backward,1520251928.0
pat_the_brat,That depends.,1520235584.0
benjiboi214,"Perhaps this article in SO will help if you're aware of choices fields but or stuck on implementation:
https://stackoverflow.com/a/39387236

If you're not familiar with Choices in Django, I'd suggest looking those up in the Django docs!",1520236072.0
KronktheKronk,"You can accept them as http params in the URL with ?countries=comma,separated,list

or you can accept them by doing REST by JSON in the body (which some people decry as being very un-REST-like, but which I think is great).",1520279657.0
hoijean,"Wow this looks amazing, how long have you been learning Django? I just started a week ago",1520236354.0
no_sle3p,"This is my first project I've written since learning django and moving on from the standard polls apps or to-do lists.

The site will remain live as a portfolio project of mine.

Any questions? feel free to ask away!



*[Post scheduled by [Later for Reddit](https://laterforreddit.com/)]*",1520215619.0
Nicksil,"I'd suggest beginning your research with Django's [`FileField`](https://docs.djangoproject.com/en/stable/ref/forms/fields/#django.forms.FileField).

There's also the section, [File Uploads](https://docs.djangoproject.com/en/stabel/topics/http/file-uploads/), in the documentation which goes over the basics.

Beyond that, you haven't really given us much else to go on. How to reference user-uploaded files between views is a relatively broad subject which may include several variables unique to each project.",1520214361.0
haloweenek,The notification part might require WebSockets since it’s preety unhealthy to poll the server every second or so ;),1520203454.0
Blargwill,"I just looked through your code and it looks like you're actually calling the haveibeenpwned.com database. Like others have said, this is *really* dangerous! It's bad practice for both database security and client trust. The third-party can't be trusted to not store all passwords submitted to it, and use them later down the line. It also isn't great for client trust, as you aren't explicitly telling them that their password is being given out. ",1520191557.0
I_know_one_thing,I can't imagine a scenario where I'd feel comfortable sending a users password to another site.. especially in plain text.,1520191565.0
LesterHoltsRigidCock,"Don't transmit your passwords to an endpoint you don't own, especially in cleartext. Don't tie your authentication to a web request to a third party, especially without a timeout. 

The idea isn't bad, but I wouldn't recommend it. There are better ways to ensure users use strong passwords. ",1520191146.0
koslib,"Thanks everyone for your feedback! Code has been changed to not divulge the password in plain text to any 3rd-party service, and a warning message has been placed on top of the repo. 
Remember, the point is to promote the idea of ensuring our users select more secure passwords.

Feedback, ideas and suggestions always welcome :) ",1520198826.0
bhat,"Troy Hunt's description of the new HIBP API (that lets you check passwords without sending the cleartext, and without sending an entire hash either) is here: https://www.troyhunt.com/ive-just-launched-pwned-passwords-version-2/

(In case you're confused by other comments here as I was, the OP's package used the insecure old API for HIBP initially; it now uses the new API described above.)",1520227338.0
Poromenos,"Here's a short script that checks if your password has been pwned without divulging it to the remote service:

https://www.pastery.net/wwzqua/",1520194696.0
haloweenek,Yeah. Idea is cool. But did you ever hear about “exception handling” ?,1520186490.0
DmitriyJaved,"I did it myself not long ago, but I’m green too so my code most likely not the way it should be done but it works, you can see it here:
https://github.com/JaveBychkov/xusers-django-api/blob/master/profiles/serializers.py#L182",1520170591.0
never_safe_for_life,"I did this exact thing 10 years ago working for a magazine publisher and it ended up being such a pain. Conceptually an ""address"" is its own object, and if two Persons live there they should have a foreign key to the same address, right? But in practice I saw no benefit from that and just made the whole process of adding a new person more complicated. Eventually I hid the separation from the front-end altogether. 

Rambling aside, and more answering your question, look at Django Rest Framework serializers. They have something like a SubSerializerField. It would return data something like this


    {
        'first_name': 'John',
        'last_name': 'Doe',
        'address' : {
            'address1': '12345,
            ...
        }
    }
",1520188726.0
supra621,"I actually haven't used serializers for DB normalization. I just create my models like I would in any other database application (used to use MS Access a lot before I knew Python and HTML).

For addresses in the same form, from the Admin interface anyway, you can use `inlines` in your `admin.py` `ModelAdmin` entries. You should also be able to use `inlines` for `ModelForms` if you're working outside of the Admin interface.

To prevent duplicate addresses, in your `models.py` models, you can add `unique` to a field, or `unique_together` in `class Meta:` to constrain multiple fields.

Examples (slightly different context than yours): I have a ""Building"" with many ""Floors"". A single ""Building"" shouldn't have more than one ""Second Floor"", nor would I like any of my ""Buildings"" have the same ""name"":

    #models.py
      class Building(models.Model):
        name = models.CharField(max_length=20, unique=True) #Prevent two buildings with the same name
        floors = models.IntegerField(default=2) #number of stories
      class Floor(models.Model):
        fkbuilding = models.ForeignKey(Building, on_delete=models.CASCADE)
        name = models.CharField(max_length=20)
        floor_number = models.IntegerField(default=1)
        class Meta:
          unique_together = ((""fkbuilding"",""floor_number""),) #Prevents two ""second floors"" of a building

I tend to start with a normalized database structure, and then serialize out as needed when rendering to the front-end.",1520191630.0
VikramjeetRaj,Maintain a flag in database ,1520167412.0
joej,"This is /r/django ... so, you get a django centric answer

**Backend**

For users with accounts, its easy: they've been here before :-)
Now, [""Django provides full support for anonymous sessions.""](https://docs.djangoproject.com/en/2.0/topics/http/sessions/). See the example for ""has_commented"" lower on the page. There is also a browser-length vs. persistent sessions discussio below that.

Ok - so django will set, send, save session ""settings"" for a user accessing your site. It also will get, make available (request.session['xxxx'] those variables it saved for that user.

Below the hood: user's browser gets some kind of cryptographic session key saved in a cookie or other persistent manner. Django just saves (to the db) and retreives such info, when the browser comes with that session key.

You can do cookie based session settings via changing a django backend session handler. I think that sends all the session vars to the browser, and gets them back, when a user accesses the site. That makes me a bit nervous (security-wise).

**Frontend**

So, you don't *have* to do something at the browser, front-end. But, maybe you want to. 

See, if the user comes to you website cold, then you show them a pop-up dialog. That works.  But, what if you want to SPECIFICALLY track the users' acceptance of ""site policy"" or something. Who knows? Maybe you want to show them one set of content, if they do, and another set of content, if they don't accept. 

In that case, you could have the dialog be a form or replace the ""I accept"" button with an on-click handler. In that case you would (a) have the form submission simply set the session variable (or save to user ""accepted"" boolean setting); or (b) have that button's on-click send an async/ajax/Promise javascript to a django url/view to do the same logic (set session or save user profile field).

**Design?**

Consider the design of this, though. Its intrusive to pop something up. Its almost as bad as the time you go to a website and within seconds you get 2 popups for ""Chat window: Can I help you ?"" ... before you can even read the landing page.

Consider this

* set a page element to notify the user ... a ""help"" icon/text.   
* put a shake, wobble, or pulse class on it. to entice the user to click
* Increase the visibility over time, if you want -- spin, etc.
* Heck, maybe even a bootstrap ""growl"" notification tied to the django.contrib.messages (or, better yet, django-stored-messages) !

There you go: I'll hate your site less ;-) ... since you let me choose to positively act vs. being forced. If the site's intuitively designed, then I might not need to click that for a while: making me feel smart, too ;-)


",1520178749.0
,[deleted],1520162213.0
academicbadger,"Have you tried adding a test for the basic styling? Something like from the obey the testing goat .com guide?

Should then trace back exactly where error is with the system (missing files, not correctly directing). 

May be the namespacing sometimes too. 

Can use my version if it’s helpful - still learning working my way through the book but functional test is liked below that checks if static is loading correctly (also works tested against staging server)

Make sure to also grab the base.py and install selenium. 

[tdd test layout and styling GitHub shiftypanda](https://github.com/shiftypanda/python-tdd-book/blob/master/functional_tests/test_layout_and_styling.py) 

Original chapter this code is based and extends on:-
http://www.obeythetestinggoat.com/book/chapter_prettification.html",1520165885.0
,Do you have a repo?  Or are we just supposed to shout out everything that impacts static files and you’ll try it one by one?,1520166852.0
Troyhy,"You definitely should learn basic HTML coding yourself. Even there would be frontend developer with you, you should be able to make basic views.  Frontend developer can then take on there and make it beautiful.

",1520145867.0
oliw,"Being able to read and write some HTML is definitely a requirement for *typical* Django usage. It is a webdev framework after all.

I'd add CSS and some JavaScript to the list too.",1520150605.0
pat_the_brat,"A lot of people hate this, but [I find the w3schools tutorial](https://www.w3schools.com/html/default.asp) to be a good start, if you want to learn the basics.

Edit: go ahead and downvote away, idiots who aren't capable of critical thinking. [W3S has improved considerably over the past decade](http://www.w3fools.com), but stick to your meme-like level of outdated knowledge.",1520153254.0
thulasi_ram,"I think your best bet would be http://django-autocomplete-light.readthedocs.io/en/master/.

I have been through a similar path and it doesn't look good. Keep in mind that this is admin interface and not a dashboard. You keep adding dashboard functionality to admin interface the code will get convoluted and at one point it'll bite you. ",1520137838.0
supra621,"Well, I got stubborn and figured it out after another few hours of Googling. So for the good of all humanity searching for this, I shall post it all. It's a very hacked method, but no doubt could be refactored DRY.

My classes remain nearly the same as above, but I added Buildings as a FK to Floors. Not that I have more than one building IRL, but it helped narrow down the test data with some contrived things. ""ef"" is just my prefix for ""extra field"".

    #admin.py
    class AssetForm(forms.ModelForm):
        efbuilding = forms.ModelChoiceField(queryset=Building.objects.all(),label=u""Building"",required=False)
        effloor = forms.ModelChoiceField(queryset=Floor.objects.all(),label=u""Floor"",required=False)
        class Meta:
            fields = '__all__'
            model = Asset
    class AssetAdmin(admin.ModelAdmin):
        form = AssetForm
        fieldsets = (
            (None, {
               'fields': ('efbuilding','effloor','fklocation'), #The 'extra' fields from above
            }),
            ('Asset Information', {
                'fields': ('name','serialnumber', ...)
            }),
        )

The `fieldsets` force the extra fields at the top of the Admin form, where they look quite natural. `views.py` and `urls.py` were next:

    #views.py
    def addasset(request): # <-- note that this only needed ""request"". Putting something else there screwed things up.
        from django.core import serializers
        if request.method == 'GET':
            building_id = request.GET.get('id')
            json_floor = serializers.serialize(""json"", Floor.objects.filter(fkbuilding_id=building_id))
            return HttpResponse(json_floor) #Probably a terrible practice here with not using JsonResponse, but this worked
        else:
            return HttpResponse(""No-go"")

    #urls.py (Needed to hook view, the URL doesn't really matter)
    urlpatterns = [
        ...
        path('addasset/', views.addasset), #<-- later versions of Django use ""path"" instead of regular expressions
    ]

Instead of extending the Admin `change_form.html`, I made a copy of it to its own folder to replace it for this test so that I didn't lose my bearings on the template tags. As this could be documented more clearly, here's exactly how that works:

From the virtual environment directory, copy:

    /env_assettracker/Lib/site-packages/django/contrib/admin/templates/admin/change_form.html

...to a new directory inside the project (my project directory is in the `env` directory):

    /env_assettracker/assettracker/templates/admin/assetapp/asset/change_form.html

In general terms, **/PROJECT/templates/admin/APP/MODEL/change_form.html**. This worked without having to add anything extra `DIRS` to the `settings.py` file.

At the bottom of the new copy of `change_form.html`in the last block after the script, I added my own scripts:

    #change_form.html
    {% block admin_change_form_document_ready %}
        <script>...the existing script for in the template...</script>
    //add jQuery from my static files
    <script src=""{% static ""jquery-3.3.1.min.js"" %}""></script>

First, since this is going to be using AJAX, I went with the Django recommended cookie method. [The exact verbiage from their documentation worked fine](https://docs.djangoproject.com/en/2.0/ref/csrf/#acquiring-the-token-if-csrf-use-sessions-is-false). I pretty much copy-pasted their block of code into the beginning of my new script section.

Now for the good part:

    #change_form.html
    $(function() {
        ...all the csfr token / cookie stuff...
    $('#id_efbuilding').on('change', function(e) {
      e.preventDefault();
      $.getJSON(""http://127.0.0.1:8000/addasset/"",{id: $(this).val()}, function(j) {
        var options = '<option value="""">---??---</option>'; //blank value when nothing is selected in the box
        for (var i = 0; i < j.length; i++) {
          options += '<option value=""' + parseInt(j[i].pk) + '"">' + j[i].fields['name'] + '</option>';
        }
        $(""#id_effloor"").html(options);
        $(""#id_effloor option:first"").attr('selected', 'selected');
      });
      $(""id_efbuilding"").attr('selected', 'selected');
    });
    });

This was my first attempt with jQuery and AJAX, so I'm sure that the requests are muddled between Http and JSON. Far from elegant, but it works. Selecting a building now changes the choices available in the floors, and then I guess I'll make another one after that to change the locations.

These were compiled from multiple sources. The most helpful was an old blog post from 2009 [here](https://formerlyconversal.wordpress.com/2009/11/01/dynamic-select-fields-with-jquery-and-django/).

And with that, I should probably eat something.",1520187668.0
Nicksil,"What do you mean 'connect'? If you're talking about sending/receiving HTTP requests, then use your favorite flavor of JavaScript AJAX library/API; it's not a Django-specific dependency.

If you're speaking about serialization/deserialization then Django Rest Framework is a good place to begin your research.",1520281860.0
S-6-6-6,Also very interested in this ,1520253168.0
NotSelfAware,"This is not the kind of situation that model signals are designed for. You cannot create a receiver function that depends on data from two separate signals simultaneously. You should create your own form that creates both an Organisation and User instance in parallel, and create and save the OrganisationUser in the `save` method of that form.",1520123917.0
theWanderer4865,"Another option is to have two forms in a view and just use the prefix feature of the forms. You can load the post data into both and deal with them independently until you want to create your third object. Signals are used to pass data around to decouple things, this is a place where I would want to be explicit about this relationship.",1520171009.0
LesterHoltsRigidCock,I don't understand why Django signals won't do exactly what you've proposed. ,1520107880.0
ramse,"    useridea=userReg.objects.get(id=request.session['user_id'])

Obtain the userReg object where `id == user_id`

    newidea=idea.objects.create(
        ideaMaker_id= request.session['user_id'],
        useridea= request.POST['idea'],
    )

Create an idea object setting `ideaMaker_id = user_id`, and `useridea` to a form element named `idea`

    newidea.like.add(useridea)

From here I'm guessing the `idea` model has a many to many relationship to another model that we don't see here, this adds `useridea` to the relationship.
    
    return redirect('/second/')

Redirect the user to /second/",1520257713.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1520036247.0
pydanny,Nicely done!,1520051797.0
haloweenek,Sup with the {{ in names ??,1520062354.0
TunaBoo,"You should fix the typos and mistakes in the demo video. I got bored after 30 seconds and quit :)

For example, no reason to have clone give a warning asking if you want to overwrite..",1520018785.0
josejaguirre,Postgresql is the database 🤘🏼,1520001879.0
ThatOtherBatman,"Depends entirely on what your use case is, but as a general rule of thumb I would say:  
  
* If it's only going to be a local project, with no more than one user at a time, SQLite is the easiest to set up and use.  
* For everything else, use PostgreSQL.  
  
There is, at least in my mind, no reason to use MySQL ever.",1520006220.0
pat_the_brat,"Depends on your project.

My go-to is PostgreSQL with GIS extensions.",1520001893.0
adrianh,"Totally depends on the nature of the headache.

* Fewest headaches in data integrity (due to stricter rules on things like types): PostgreSQL

* Fewest headaches in development environment: SQLite

* Fewest headaches with GIS: PostgreSQL

* Fewest headaches finding production web hosting circa 2005: MySQL",1520002837.0
mkingsbu,PGSql is definitely worth figuring out either way.  It's solid and free.,1520005881.0
synw_,Agreed that Postgresql is great and really well integrated with Django. To advocate for Sqlite if your app is read-heavy and does not need frequent or concurrent writes you'll be just fine with Sqlite,1520027451.0
skullone,"PostgreSQL as others have said, is one of the most durable and fully featured DBs, and well tested with Django.  
However, MySQL has nicer modeling tools, MySQL Workbench is nice, and the equivelant polished tools for Postgres can cost a lot of money.",1520131256.0
NewColCox,"SQLite is the easiest to use initially since it can be used out of the box, where as others all require separate database configuration.  
  
However, it's only really suitable for one simultaneous user/process, so you will need to move to another option when you get closer to deployment.",1520002226.0
shobble,"At a guess it's because of the `default=1` args in the FK definitions - do you actually have a Player (or Team, depending on direction) with `id=1` in teh db?",1519963924.0
,[deleted],1519960960.0
Nicksil,"If the data is sent via HTTP and someone was able to intercept the request, they'd have access to the plain text (bytes).

All password hashing is done server-side before being committed to the database. 

Utilize HTTPS always.",1519962875.0
genesem,use https it does that thing (encryption).,1519964477.0
TheDumbfounds,"Speaking of login security in production, I'd also recommend setting the true admin path to something other than /admin. Maybe you create a fool admin page on /admin (there are packages for that). That could help making it securer.
",1520106761.0
Marlysson,"Hello,  Great that you want getting this world of collaboration.

I have some projects in python/django in my github profile:

github.com/Marlysson

And related to django project, this is a interesting project..

https://github.com/Marlysson/Project-Manager

There many issues to make..

I will translate it soon..",1520009575.0
ragnaror1,Would love to help if you have something,1520114661.0
kasztof,I would love to do some Django project with someone else. I know the basics of Django. Check priv,1519999797.0
ic_97,I would like that currently i'm working on a project but we can surely do some together too,1520253306.0
Niicodemus,"You can use the built-in ImageField and have them upload the file, but capturing from the camera will require JS, [certain browsers](https://caniuse.com/#search=capture) and/or a mobile app.",1519944834.0
nerdwaller,"I tend to use django-storages because the backend is pluggable and supports most the major static storage services (s3, azure blob, Dropbox, etc).

Regarding the upload from a phone I don’t think that’s an issue but it will require some html and JS usage. Beyond that the server just knows of it as a file on upload/submit.",1519969309.0
Whoopska,"Once you install admindocs, you can go to `reverse(""django-admindocs-bookmarklets"")` and you'll see a javascript snippet. If you create a bookmark with that snippet 

```
javascript:(function...
```

when you view a regular page and click the bookmark, it'll open a page with some info about the view.

I've never found them very useful because they're generally too technical for non-developers and developers have the code to read the same info and jump into surrounding functions more easily.",1519961543.0
2fplus1,"I'm not sure if you realized, but both Salt and Ansible (two major, popular config management tools, both written in Python) use jinja2 for templating config files.

I'm sure your thing is great, but you'll need to make a really strong case for differentiating it.",1519991083.0
youlleatitandlikeit,"As someone who has django-cms on all of his sites, it'd be great if there was a tool to export directly from django-cms to Wagtail, so that I could just install the Wagtail app, run a script, and then have all of the pages working as close to the way they did before as possible.

Obviously you're going to have to change all of the templates as well.

Still, the way that django-cms stores its page content is so complex that any kind of straightforward conversion is going to be pretty challenging.",1519923987.0
anticipat3,"Anyone else getting Javascript errors when attempting to use the new Draftail editor?  Even when I just make a new blank project, add a rich text field to the homepage, I'm getting JS errors and the editor isn't appearing.

I'm able to just revert to the old Hallo editor in the settings, but yeah... I'd like to try the new editor :)",1519957847.0
DDiran,"Woohoo! Big fan of Wagtail - use it for all my projects.

Migrating is going to be a pain though!",1520076556.0
phi2000,"Love WagTail - been a really great experience so far. Just upgraded to 2.0 last week, especially loving Draftail - such an improvement from Hallo.js.",1524433886.0
booooomba,"Please give us more detail. And also please format your post. When does this error come up exactly? What server are you using? etc...

Obviously it is not finding the URL ""xxx.com/new/1"". So we/you just have to figure out why.",1519906706.0
Nicksil,"Post the entire traceback. It seems like somewhere you're passing in the request object to a reverse or reverse_lazy function, but impossible to say without the traceback.",1519910230.0
rajbabu0663,Should not it be /boards/new/1?,1519911006.0
aws5923,"Take a look at the Guardian app. It works on the premise of object permissions. Basically you assign a user a permission which can be associated with a model if you want. Then in your logic you check to see if the user has that permission, or that permission for that model instance, and you’ve got a dynamically adjustable permission system. 
My group extended this a bit with a UI to assign permissions to people because our platform is for event management with a hierarchy of people managing the event. We built it so that certain people at the top have permissions to give certain other people permissions who are below them in our hierarchy. The people giving permissions are only allowed to flow down the permissions they themselves possess, aka we wrote it to enforce our hierarchy.
You can do a lot with this, don’t be afraid to get creative and adapt Guardian to your needs! We’ve done some customization on basically every tool we used.",1519882402.0
,"    class UserPermissions(models.Model):
        user_profile = models.OneToOneField(Profile, related_name=""permissions"")
        can_view_x = models.BooleanField(default = False)

Then in ""view_x"":

    def view_x(request):
        profile = getProfile(request)
        if profile is None:
             #redirect somewhere
        if profile.permissions.can_view_x == False:
            #redirect somewhere else
      #REST OF VIEW",1519886453.0
chaseroyaleee,In need of this as well ,1519872524.0
pat_the_brat,"Normally, django should be enough. See the manual section on [aggregation](https://docs.djangoproject.com/en/2.0/topics/db/aggregation/).

You can also [execute raw SQL](https://docs.djangoproject.com/en/2.0/topics/db/sql/#executing-custom-sql-directly), but that is usually overkill.",1519863770.0
igncampa,I'll find any excuse to use Pandas. Sadly/Thankfully it's really never necessary as the data manipulation I do is easily handled by the ORM. ,1519868413.0
synw_,"You can probably do it in the orm but if you are comfy with pandas it is easy to use with Django:

    query = MyModel.objects.all()
    df = pd.DataFrame(list(query.values()))

There is also [django-pandas](https://github.com/chrisdev/django-pandas) that looks nice

To answer your question in the title I do use Pandas to manipulate my Django data, even for things that I could do with the orm when it is more easy for me or when it comes to serious data transformation and cleaning",1519917189.0
new2python1,Looks awesome ,1519868549.0
eljohnsmith,I like it. Looks good. Please implement https.,1519934706.0
nickchuck,Nice! Looks clean. On mobile the text in the red boxes goes all the way to the right edge. Might wanna add a lil padding :),1519865209.0
maratmkhitaryan,"Yes, it looks great but you need to add a validator for password length.
P.S I registered with 1234567890 password, this is insecure :)",1519907216.0
redmamoth,"I've not personally done anything, but looking at multichain.com and the savior python wrapper would be a good place to start.",1519854099.0
boxidea,"The admin interface sucks for generic foreign keys. There's no way to use the built-in autocomplete with it. There are third party components you could look into.

Honestly I'd probably have a foreign key to both Building and Property and get rid of the generic foreign key.

Then make sure that one of the two fields is provided in the model:

    class TenancyDocument(models.Model):
        building = models.ForeignKey(Building, ondelete='CASCADE', null=True, blank=True)
        prop = models.ForeignKey(Property, ondelete='CASCADE', null=True, blank=True)

        def clean(self):
            if not self.building and not self.prop:
                raise ValidationError('Must provide either building or property.')
            if self.building and self.prop:
                raise ValidationError('Select building or property, but not both.')
            super().clean()

Then you could autocomplete on both `building` and `prop`. 

You could customize the admin template if you want to simplify selecting one or the other.

edit: If you really want, you could even add a database constraint to ensure one of the two fields is not null.",1519848247.0
never_safe_for_life,"The generic foreign key has always been more trouble than it's worth. It takes a simple concept, a relational join, and tries to make it clever. But then downstream packages like autocomplete don't work...

I would just switch to two separate foreign keys, then add attributes to the class to pull fields from the correct related record

",1519847229.0
ricvolpe,DjangoEurope!,1519832715.0
maratmkhitaryan,"Heroku, Digitalocean, Docker.",1519907828.0
simonw,"So you want to see ""all users who are in any of the groups that I am a member of""?

    alice = User.objects.get(name=""Alice"")
    users = User.objects.filter(gangs__members=alice).distinct()",1519830271.0
c17r,"Is there something you are looking for that you didn't get from the last 5 times you asked this question?

* https://www.reddit.com/r/Python/comments/7yv81l/why_should_i_learn_django/ - 8 days ago, 9 comments

* https://www.reddit.com/r/Python/comments/7zxht8/why_should_i_learn_django_will_it_help_me_in/ - 3 days ago, 16 comments

* https://www.reddit.com/r/Python/comments/7zxqln/should_i_learn_flask_first_or_django/ - 3 days ago, 28 comments

* https://www.reddit.com/r/learnpython/comments/801zqd/java_script_or_django/ - 3 days ago, 6 comments

* https://www.reddit.com/r/django/comments/80kyxd/i_am_in_high_school_and_should_i_start_learning/ - 1 day ago, 32 comments",1519829389.0
FeatheryAsshole,there is no best web framework.,1519828561.0
Nicksil,"Can you get away without having studied math? Yeah. However, as math is pretty central to computer science, there is a whole lot to be gained from at least a cursory understanding. I highly recommend paying attention in class -- take advantage; you'll thank yourself later.",1519825303.0
knyghty,"I'm garbage at maths and I do just fine - but there are plenty of situations where you might need to Google something that you might've ""just known"" with a better background in maths.

No biggie, but worth learning.",1519832897.0
CraigTorso,"Not really, but if you struggle with the concepts and logic of algebra programming anything is going to be harder",1519828872.0
booooomba,No you won't need any math. At all. Unless you do backend dev work for a math project of course. ;-),1519825140.0
pat_the_brat,"Why use a java server, and not [Django Rest Framework](http://www.django-rest-framework.org)? I haven't really used it yet, but [it should be able to do it](https://iheanyi.com/journal/user-registration-authentication-with-django-django-rest-framework-react-and-redux/).",1519824361.0
McDivvy,"As Pat already said, use the Django Rest Framework.  Build a mobile app that is purely a front end pointing at that.  No need for Java and messing around with security.",1519833586.0
Investisseur,Please mods. Please. Add this to the sidebar. This and questions like it are literally the most asked question on the subreddit.,1519862360.0
dorsal_morsel,"Why add an extra server at all?

If you must, you could add oauth2 support and use a [custom Python Social Auth backend](http://python-social-auth.readthedocs.io/en/latest/backends/implementation.html#oauth).",1519823703.0
Nicksil,https://docs.djangoproject.com/en/stable/intro/,1519823855.0
tweeks200,"I found this one to be really good, I did do the django tutorial on the django site first and think it was a huge help too.

https://www.codingforentrepreneurs.com/projects/try-django-111/
",1519995164.0
mohammed_salman,It would be great to write anything about it! Anything at all beside the repo url.,1519840293.0
asdfwaevc,"Django is supposed to do all of the DB work for you. When you make a model, you run `python manage.py makemigrations`, which generates steps to create the tables your model needs. And then `python manage.py migrate` creates the actual tables. Then, you can easily use django to access your data.

It sounds like you're coming in to this having a database already. If so, you can still use the ORM to access it. Check this out: https://docs.djangoproject.com/en/2.0/howto/legacy-databases/",1519790247.0
black_loop,"If you are connected to db, run    python manage.py inspectdb > path/to/models.py    while in project root. Now, you will get the models automatically created for every table in database.",1519795275.0
IntermittentSteam,[Using Django with a legacy database](https://docs.djangoproject.com/en/2.0/howto/legacy-databases/#auto-generate-the-models),1519818906.0
asdfwaevc,"Take a look at django-encrypted-fields or django-fernet-fields, they both let you encrpyt/decrypt sensitive information in the DB and access it with the ORM.",1519784407.0
warchild4l,i liked this design! really cool,1519754802.0
iesma,"I'm not very familiar with Django (still learning!) so I can't comment on the code, but from a user perspective the site looks great! Very clean design and easy to navigate on mobile.",1519770584.0
pydanny,Really nicely done!,1519772059.0
amoltangade,Dude this is 'the nice and clean' Django site I have ever seen(excluding the big players),1519775934.0
vernomcrp,"Hey i think u did a great job, ui look very good to me",1519789007.0
axelx6,Great website and useful tool!,1519790674.0
academicbadger,I like it nice clean design. Will have a look through the code as sure lots for me to learn from it!,1519803779.0
iwantobesmartwo,Is this all in html? It looks really good!,1519771783.0
KiranChavan,Superb! I like your project! Did u make the CSS and HTML yourself? Or made it with your team?,1519824890.0
boring_troll,It’s really refreshing to see someone writing tests when they’re just starting out. Well done. IMO you shouldn’t have much trouble finding work. ,1520121493.0
heo5981,"what do I need to learn to make a frontend clean and beautiful like this? All my designs are terrible.

Nice website by the way, bookmarked!",1519775765.0
,"I like the design. Anyhoo...some quick remarks about your code:

1.) Use path() or re_path() for routing. url() is an alias to re_path(). 
re_path() uses regex while path() doesn't. 
You should only use re_path() for complex regex calls and path() for simpler lookups.

2.) You should check https://docs.djangoproject.com/en/dev/topics/db/managers/

",1519754471.0
v_krishna,"I spent 3.5 hours yesterday dealing with issues caused by a table with utf8mb4_bin collation (so ûp.com - which is somehow a valid url? - wouldn't match with up.com). I had fixed it and then performance went to shit, I rabbit holed debugging wtf was going on before realizing that all of these queries hadn't died but had slowly brought down my rds instance. Thankfully just a dev instance to test out a data migration. The issue ended up being the columns were utf8mb4_unicode_ci collation while the table was _bin and apparently that trashes your indices. 

After I got home from work I was explaining the story to my fiancée, whose eyes promptly glossed over.",1519752687.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1519738373.0
bobishardcore,"Is it that you want to have the ""HELLO!!... etc"" be visible when you view who_we_are.html? If so, you'd need to put {{ block.super }} inside your {% block content %} in who_we_are.html so that about/header.html's content block is preserved. 


Edit: [Django template inheritance](https://docs.djangoproject.com/en/1.7/topics/templates/#template-inheritance)",1519727301.0
checkYourCalendar,"https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html  
This was pretty helpful to me, but I wasn't creating users on the admin. ",1519726796.0
aiurealand,"I finally managed to render the user creation page:

## urls:

	urlpatterns += [
	    url(r'^user/create$', views.CreateUser.as_view(), name='create_user'),
	]

## forms:

	from django import forms
	from django.contrib.auth.models import User
	from django.contrib.auth.forms import UserCreationForm

	class UserCreateForm(UserCreationForm):
	    email = forms.EmailField(required=True)

	    class Meta:
	        model = User
	        fields = (""username"", ""email"", ""is_active"", ""is_staff"")

## views:

	class CreateUser(LoginRequiredMixin, CreateView):
	    model = User
	    form_class = UserCreateForm
	    template_name = 'admin/user/user_create.html'

	    success_url = reverse_lazy('create_user')

	    def form_valid(self, form):
	        user = form.save()
	        return redirect(self.success_url)

## user_create.html:

	{% load widget_tweaks %}

    <form class=""form"" method=""post"">
        {% csrf_token %}

        {% for field in form %}
            <div class=""form-group floating-label {% if field.errors %}has-error{% endif %}"">
                {{ field|add_class:'form-control' }}#}
                <label for=""{{ field.id_for_label }}"">{{ field.label }}</label>#}
                {% for error in field.errors %}#}
                    <span class=""error"">{{ error }}</span>#}
                {% endfor %}#}
            </div>
        {% endfor %}

        <button type=""submit"" class=""btn ink-reaction btn-raised btn-primary"">Create New User</button>
    </form>
Is it ok to do it this way?

I used also the widget_tweaks because I couldn't find a better way to add classes to the rendered inputs. I now have problems rendering the checkboxes using bootstrap styling.",1519742852.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1519725614.0
pat_the_brat,"- If you start now, and keep at it, you can be a Django expert in 4 years. No sense in waiting 4 years and starting from scratch then, if you are interested in it.
- Use Django 2.0, and Python 3.6, if possible. No sense learning an old version. Most material will not have been updated to 2.0, but the material for 1.11 should mostly be good enough.
- If you have problems, don't give up. Google the error messages, and if you don't find a satisfactory solution, ask here or on /r/djangolearning. 
- Check out [The Django Book](https://djangobook.com/the-django-book/) - it's free to read online, and has a nice, natural progression. If you do use Django 2.0 as I suggested, simply remember that the `url()` function is being replaced by [`path()`](https://docs.djangoproject.com/en/2.0/topics/http/urls/) when you get to the section on URLCONFS.
- The [official tutorial](https://docs.djangoproject.com/en/2.0/intro/) is also a great place to start, even though it doesn't go in depth as much.

Good luck!",1519728407.0
oliw,"I don't think age has anything to do with it. I started programming little ASP websites when I was ~15 and I was pushing that to its limits (and, more, the limits of shared ASP hosting - all I could afford). Database driven dynamic images for forum signatures (reflecting the users IP, ISP back at them). A blog, a forum. Good times. 

Django isn't very much different at its core, IMO. It is more complex in some respects but it also does a huge amount of the work for you. The documentation and community are also way better. I had 4guysfromrolla and a few MSDN VIP blog posts.

Your only blocking point is the same as mine, deployment. Even if you've only got a few pennies to rub together, you'll find a host, somewhere. You don't *have* to deploy to the internet, it's just more fun if you can show off.

That all said, you seem to be putting way too much of a personal requirement on *videos*.  
Django has great written documentation, and a great community of bloggers writing interesting posts for edge-case stuff. Copying code out from videos is a massive stumbling block. I know you're not the only person that wants videos but seriously, wean yourself off them. They're holding you back both in version and in scope.",1519731543.0
superbeck,"I am 33 and I have never in my life wished that I had waited to learn something. Push through, you'll be glad you did. ",1519743315.0
jasdeep13,"Start now, and you “might” be able to save yourself from hefty and painful Student loans. (not recommending you skip school at all)",1519738114.0
warchild4l,"try to search for problems on django docs, because if you grow up, this will not change anything, because by that time there will be older version tuts only, so try to figure out problems by yourself.. just if you get any error in program, first search for that error on google, and after that search it in django docs, also you can check out migration guides, they are so good! ",1519721196.0
frankster,"If you are interested in it, and you want to make websites with it, then now's a great time to learn it. Maybe it could lead to a django/python job in a few years, maybe it could spark a lifetime interest in programming. 

There's no age that's too young to learn programming or web design. I learnt bbc basic while I was at primary school and visual basic while I was at secondary school off my own bat. It's a very long time since I've used either of those languages, but stuff I learnt in those languages has helped me in the multiple languages I'm now fluent in.

Basically, just do it! It will be great.",1519737634.0
rascaldev,"> they use Django 1.8 and I use 2.0 and I see a 5 min videos and I run searching for errors for hours as my version is different from them and for each and every step I need to roam from one site to another and I am very annoyed ! I

Why not install 1.8 just so it matches what they have in their tutorial? You can switch to 2.0 later on as part of your ""continuing education"" where you can also gain the experience of going from an older major version you're familiar with to a newer one which would probably teach you good habits going forward. Some people have a tendency to camp out on older versions when upstream changes because they don't want to learn the new way of doing things. This way you match their tutorial and are ready for 3.0 whenever that's released.

But yeah I'd agree with the others. If you _want_ to do it there's absolutely no reason to wait. If you have the patience, discipline, and core interest to learn it in the first place.",1519746050.0
iconfinder,You should definitely learn as much as possible in your age. You'll never have as much free time as you have now. Code every waking our and you won't have to worry about landing a good job when you get older.,1519750777.0
netscape101,"I suggest that you try learn Linux system administration while you are also learning Django. It is really good to code and also to be able to setup servers etc. See this post: https://steemit.com/linux/@netscape101/how-to-get-into-linux-or-linux-system-administration

I have a subreddit I started /r/linux_mentor

If they use Django 1.8 then use that in my opinion. In your own projects you can use 2.0. In a job you will have to work with old applications written in Django 1.7 or 1.8 and you might be asked to migrate them to Django 2.0 so this is something you should learn to do.

If you want you can add me on telegram, discord,gtalk or whatever your I'm poison of choice is if you want somebody to chat to.

About me:
I work for a company where I do lots of devops and Django stuff. I'm also currently learning react. I am selftaught and I started at 16.
Kudo's for starting so early.
Btw check my wiki: yoirtuts.com

Pm me if you wanna chat on IM! ",1519810521.0
,[deleted],1519723124.0
badlyDrawnToy,"Hi. Well, that's not really in your control. The best you can do is to set the mime type so that the browser knows that it is a PDF. Then the browser decides how to render the content - most likely using a embedded PDF viewer.

What you need to do is work out how to render your response as a PDF.

If you want it in the page, use an iFrame",1519718452.0
Isvara,You'll probably be wanting [PDF.js](https://mozilla.github.io/pdf.js/).,1519733579.0
yesvee,"Google ""how to set content type header in django""",1519737325.0
Lt_Sherpa,"I don't use mongoengine, but my guess would be that `bill.orders.append(order)` is expecting the `order` to be a document, and your list of orders is a list of validated data dictionaries, not documents.",1519737912.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1519713656.0
Zalozba,Post the code.,1519713025.0
core_dumpd,"Take a look at mezzanine/cartridge, it's pretty flexible as a base for ecommerce. You can also handle a lot just with the extensions they support via settings.py.",1519689819.0
athermop,I'd probably *start* with the simplest solution...create a database table and store what you've returned to the user and exclude those from your queryset on further pages.,1519682624.0
andytwoods,"Why not keep a tally of images in your front end and send this 'exclusion list' in each request of new images, using eg mymodel.objects.all().exclude(imageid__in=my_exclusion_list)

Edit: I'd not use pagination. ",1519669585.0
daredevil82,Have you done the django tutorial in the documentation? It already gives you everything you need to know for this.,1519662753.0
Nicksil,"This is core Django functionality. If you haven't done so already, I highly encourage you to read through the [getting started](https://docs.djangoproject.com/en/stable/intro/) section in the official documentation.
",1519662759.0
,"What part of this is causing you issues?

Should be very straight forward.

Feel free to pm me for some help",1519709748.0
booooomba,Well rendering a 200page PDF will never be done within half a second. So just use a task queue like celery and then have the user check back in his dashboard or send him an email with the attached PDF. Depending on how large the file is.,1519655709.0
daredevil82,"Uhm, that's going to take a while, regardless of what format you're doing it in.  You've given some rendering numbers, but there's no breakdown in them.  What's the difference between the SQL query time, and rendering time?  How much time is spent iterating over the results?

I found the best way to generate spreadsheets and PDF docs is via async (Celery) tasks and email the user with the document attached.  That'll get you out of the request/response cycle and holding open a server connection.",1519651523.0
bhat,"I was doing some work generating PDFs a couple of years ago. I recall I also had massive performance problems with xhtml2pdf; I did some work profiling the library to see where it was spending its time, and while I was able to speed it up a bit, it was still too slow for my use case.

You might want to look at alternatives like http://weasyprint.org/ or https://pypi.python.org/pypi/django-wkhtmltopdf to see if they'll do what you need, and faster.",1519772656.0
dzecniv,xhtml2pdf is ~~abandoned~~ in favor of weasyprint.,1520345920.0
snuggl,"Just follow the convention, a View isnt a page, even in a rest framework its the class that produces the viewable output from the data model. ",1519634729.0
,"Im pretty sure the term ""view"" here is in reference to MVC (Model, View, Controller architectural pattern)",1519635518.0
OuchYouHitMe,"It is a frequently asked question. That is why it is in the FAQ.

https://docs.djangoproject.com/en/2.0/faq/general/#django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names",1520028586.0
shabda,"About 20 days back I asked for feedback on our in progress book - [feedback on our in progress book](https://www.reddit.com/r/django/comments/7vmwz4/looking_for_feedback_on_a_new_book_i_am_writing/). I am happy to report that I have completed writing a first version of the book. You can read it [here](https://books.agiliq.com/projects/django-admin-cookbook/en/latest/). The book is [open source and is available on github](https://github.com/agiliq/django-admin-cookbook).

It targets Django 2.0.x and Python 3.6.x. I am hoping to update it as newer Django versions are released. I am still looking for feedback especially around the format and style. I am hoping to write another short book in the same style ""Django ORM Cookbook"" depending on that feedback, and how this book is received.",1519627544.0
raiderrobert,"This is a great set of common questions! Thanks so much for all the work you put into this!

A word of caution to those getting into Django: the admin is so fantastic you'll be tempted to build user-facing functionality in there; I would strongly discourage this pattern of thinking, and I strongly encourage you to build user-facing features in standard class-based Django views.",1519652844.0
IAmACentipedeAMA,"looks pretty good, im gonna check it out! awesome!",1519630404.0
Fun2badult,Awesome! I’m learning Django right now so definitely useful! Keep up the good work ,1519630467.0
snuggl,"Great job! thanks!

There is a small typo in https://books.agiliq.com/projects/django-admin-cookbook/en/latest/database_view.html

> we don’t indent to cross 10000 Heroes

I dont think it was your intent to write indent.",1519635436.0
scottocom,"I accidentally clicked the github link and could not find the book just rst files. Maybe a link to the book should be in README.md

I found the Book and it has a lot of great ideas. Concepts I don't yet know how to do but the code samples need more context at the moment I am unsure where these code snippets go. But that could just be me. 

However thank you so much for your efforts. This would be a great resource. 
",1519684707.0
heo5981,"bookmarked for future reference :)

looks great, keep it up!",1519688844.0
pointyball,"Looks really interesting, thanks!",1519628662.0
please_to_help,This is awesome! I looked at your earlier version of the book when you posted it and it already helped me out! (In particular I decided to finally change the title and name of my Django admin page),1519659877.0
inceptivecss,"**Typo Correction**

Location: https://books.agiliq.com/projects/django-admin-cookbook/en/latest/logo.html

Original: ""Your highers ups at UMSRA loge the admin""

Corrected: ""Your higher ups at UMSRA love the admin""

I'm definitely liking the format, and the steps so far are excellent in their detail.",1519663779.0
bpainter327,"This is a great resource! This hits on the things that I don't do all the time, and have to go and look them up whenever I do want to add them to the admin. Bookmarking the page for future reference!",1519821401.0
NewDimension,Go through the tutorial. You misunderstood what they mean by template.,1519620244.0
ProgrammerByDay,"There a few, they are hard to search for as django template just finds stuff on the the html templates.
The big one i can think of is https://github.com/audreyr/cookiecutter",1519623956.0
DmitriyJaved,People usually use  ‘import pdb; pdb.set_trace()’ as one-liner,1519606374.0
rascaldev,"TBH you're probably going to see more benefit to just going deep into one framework in particular and at some point become somewhat familiar with other frameworks. PHP/Symfony is probably a good ""second framework"" if you're already on Django but some people like Rails too.

Basically, 90% of your job is actually understanding _how to solve problems with code_. The language and your knowledge of a given framework obviously matters (familiarity with the ecosystem breeds productivity) but in general the difficulty in development is less about the language and more about how many and what type of _problems_ you're used to solving.",1519591162.0
punkweb,"Well it depends, would you rather know the basics of dozens of frameworks and be able to create simple web projects with each of them, or would you rather master one and be able to build essentially anything you want with it.  No matter what, if you've mastered your framework of choice you should ideally be able to build whatever you can think of with it (for the most part).  Definitely nothing wrong with checking out other frameworks and experimenting with them to see what each brings to the table though.

As a side note about SQL, you should DEFINITELY learn to write SQL queries by hand if you're using Django.  There's some things the Django ORM just won't handle well and SQL queries will handle 1000x better, like loading large datasets to render in graphs.",1519594356.0
geosoco,"This really depends on your goals. If you're looking to get a job, going deep into one is probably a better path, but whether Django is the right choice for that depends on where you want to work. Switching languages entirely at this point, probably won't benefit you. 

One of the best things to do is pick a full on project where you can go more in depth. Either a website you like, or perhaps make a django app for distributing that solves some problem? Build up a nice portfolio showing you have the ability to learn something in depth. ",1519594219.0
ramse,"It depends on what the work is and wether or not the results matter to a certain extent. If its in JS someone could maliciously change code and submit values they shouldn't have, in this case its better and safer to do the processing server side.",1519584842.0
ciarancour,"It depends (of course). Do you intent your backend API to serve apps and web requests? If so, you don't want too much BL in the JS, as you'll have to write it again for apps.",1519581621.0
synw_,"> I've never seen it done before without adding models into the database

With a model you can track changes and revert the edits. Your no reversion approach seems a bit risky. I did something similar for templates and static files using a model to be able to take advantage of django-reversion: [django-dirtyedit](https://github.com/synw/django-dirtyedit)",1519575091.0
lzantal,Very Cool!,1519577833.0
WesternHarmonica,"This should come in handy for sure. Also your code looks clean and simple, awesome job!",1519588720.0
Investisseur,"Without looking at your repo:
- how does this work in a production setting where templates should be served by a load balancer / caching service? Does it redeploy single files?",1519569470.0
pydanny,No PyPI release?,1519601587.0
GeniusFrequency,I will definitely be using this in the future. +1 for incorporating models for reversions.,1519658140.0
punkweb,"That's pretty cool, at first I was thinking it was for swear words or something lame, but checked into the-big-username-blacklist project and I can definitely see a use case for this.  Thanks for sharing, I'll probably end up using this.",1519550155.0
ramse,As long as your other views have some sort of security in place to ensure they're logged in (@login_required) then its fine.,1519504028.0
shacker23,"No risk. Templates are only accessible to the views that render them. And even then, your business logic is in views code, not in templates.",1519510293.0
checkYourCalendar,Yes. Create a ModelForm and only specify the fields from the model that you wish to include in the form.,1519716437.0
hadmatter16,"At a quick glance, I think it's because of your port forwarding.  For your nginx container, you specify a forward from 80 to 8000.  This means that port 80 on your localhost will forward to 8000 on the nginx container.  However, your nginx server is listening on 80, not 8000.",1519480398.0
thugg,"Babun is a wrapper for cygwin which gives you a Linux-like command line interface on Windows.

It can be very useful for managing your local development stack, especially if you are developing on Windows but deploying to Linux.

However, if you are just starting out, you should seek to reduce your learning curve by avoiding extra tools at this point. Get Django running by following the tutorial, once you figure the basics out you can revisit babun.",1519466259.0
haloweenek,"So you like what ? Install random stuff randomly ? Not knowing what it’s for ? 

Why VMware ? Because it’s hip or what ?

And why babun - your aunt told you to do that ?

And what has Django got to do with this ?

Since you’re already babooned I’d start hitting the keyboard randomly - maybe something will happen...",1519458752.0
ramse,It uses the built-in provided django users.,1519442547.0
,"[here](https://github.com/pennersr/django-allauth/blob/master/allauth/account/utils.py) is probably the best place to look when trying to understand how all-auth works.

TLDR: When possible all-auth uses the Django user model. Its only for additional content e.g  Email-Confirmation where it uses its own models.",1519624014.0
ccb621,"Why are you using `APIView` instead of `ModelViewSet` or a [generic view class](http://www.django-rest-framework.org/api-guide/generic-views/)?

Your `put` method is operating on a `QuerySet` (e.g. multiple instances) instead of a single instance.

Checkout the [viewset tutorial](http://www.django-rest-framework.org/tutorial/6-viewsets-and-routers/). You can achieve what you want with minimal custom code.",1519435867.0
asdfwaevc,"Not saying that it would replace this, but I've used the `django-fernet-fields` library for something similar. You could check it out for implementation ideas, if you get that far. I like the idea of randomizing for data-dumps a lot.

A few comments:

* I don't think the secret-key is used for passwords, otherwise you would lose your passwords every time you switched it. I may be wrong about that though.

* A problem I had when customizing django-fernet-fields is, if a model has encrypted data on it, and you don't have the key to decrypt it, re-saving it may corrupt the data.

* Another scheme for accessing the sensitive data is have `ssn` be a custom `Object` that has accessors you can customize. So `model.ssn.get()` could return the ssn or throw an error, `model.ssn.get('default=""***-***-****""')` could return the ssn or the placeholder, etc.  

Really great idea overall.",1519427991.0
ccb621,"1. Why make this part of Django core rather than a separate app?
2. How does this compare to https://github.com/defrex/django-encrypted-fields?",1519436477.0
porksmash,"I think it would make more sense to have `is_sensitive` be a property of the field rather than a method on the model class.

I'd also like to see how you expect Django to respond if  SENSITIVE_ENFORCE_HTTPS = True and the site is accessed over http. Redirect to HTTPS? HTTP 500?",1519491104.0
Mekhami,you don't have a form action?,1519424312.0
djcharding,Did you ever figure out what happened? I'm having trouble with extending django templates and angular. Wondering if this might be related. ,1526866151.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1519423775.0
Nicksil,wat?,1519415225.0
Niicodemus,True,1519424762.0
apreche,"The best thing to do is just shrink the image files as much as possible.

If an image can be a low resolution gif and still be usable, make it a low resolution ultra-compressed gif. 

If an image can be drawn with vectors, make it an svg and make sure it is gzipped.

Really, there's not much to do in Django. Most of the work will be in Photoshop and Illustrator to produce smaller files.",1519406012.0
booooomba,"Holy shit, how bad is their connection? How large are your image files? Would it maybe be better to work from that angle?

But about your question: Yes that is possible, but you'd have to do it using JS.",1519400343.0
ozymandiasxander,Definitely shrinking the images. Maybe serve them over CDN? Also do a search on lazy load. ,1519411446.0
21pixels,Resize on upload According to fix dimension and optimize images using an image compression API like TinyPNG or ShortPixel will help.,1519420397.0
styluss,Consider reducing image size with imagemagick or other tools. Also try to use nginx to gzip requests.,1519421990.0
pat_the_brat,"Using Base64 encoding would probably be stupid. You can totally [use Base64 encoding](https://jsfiddle.net/rgoz27fy/2/).

Smarter ways would probably include googling ""preload images.""",1519400733.0
elingeniero,Why are we not using the `auth.User` model?,1519412997.0
oliw,"I hate to RTFM people, but you're not going to do better than to read the forms documentation here. The link below is specifically the view portion (which is where you're struggling) but honestly, it's worth reading the whole thing.

https://docs.djangoproject.com/en/2.0/topics/forms/#the-view",1519389598.0
adrianh,"Change your view function to do different things based on `request.method`. If the method is `""POST""`, then instantiate the form with `request.POST`. Otherwise, instantiate the form with nothing (you currently have a bug in that you're passing the `RegisterForm` _class_, not an _instance_ of the class, to the template).",1519388775.0
summersonnn,"I solved this problem by moving the content of Register view to the home page view. So there is only one view right now.
I'm not sure the other method I suggested (having two views for one page) is doable.",1519392688.0
bradshjg,"You should look into [honcho](https://github.com/nickstenning/honcho) for starting multiple services w/o using docker-compose or similar.

I find it more user-friendly than backgrounding a bunch of services.",1519402694.0
booooomba,I don't understand your problem. You don't know how to start django and celery?,1519387327.0
DmitriyJaved,That’s alright,1519385286.0
synw_,"How often does your data change? Do you really need to query it in real time?

In [django-chartflo](https://github.com/synw/django-chartflo) we use a preprocessing approach: a data pipeline is associated with your module: it will do all the calculations and generate html for the charts when you run it (via a management command). The pipeline can be run on a time base or triggered by some application events to regenerate the charts with fresh data.

The advantages of this approach is that the dashboards are cheap to serve and you get a centralized place to manage your data. The inconvenient is that it is not suitable when a frequent refresh rate is required. 

Anyway I suggest you to make a data pipeline to do the calculations and trigger it with requests rather than splitting the data processing into multiple views

[Edit] : grammar",1519471949.0
supra621,"Just came across this - I use a lot of d3.js with Django. For the sake of minimizing queries on the database (and depending on how big the datasets are, and what your models look like), I tend to pass complete models into my templates, and use JS to do calculations and change how the data is displayed on demand. Your data and use cases may vary.

In any case, d3.js is worth a look if you're thinking of changing your charts up.",1520250531.0
xenopizza,Maybe use S3 to store the videos ?,1519378399.0
tkc2016,"I would use ansible for this task, but any other config management tool would work, like chef or salt stack.

If that is not an option, then I'd go with rsync.",1519375749.0
p_r_m_n_,"Sounds like the add method might help. You can add one or more related models this way.
[https://docs.djangoproject.com/en/2.0/ref/models/relations/#django.db.models.fields.related.RelatedManager.add](https://docs.djangoproject.com/en/2.0/ref/models/relations/#django.db.models.fields.related.RelatedManager.add)",1519367910.0
ubernostrum,"In the old days, we used a lockfile and/or pidfile to do this.

Choose a filename and location. For sake of example, say it's `/var/run/yourcommandname.lock`. Now write the command so that:

1. When it starts up, if that file exists, exit immediately without doing anything else.
2. Otherwise, create the file, run normally, and delete the file just before exiting.

This way you never get multiple copies of the command running.",1519366761.0
rmakings,"It will spawn a new function every 30 minutes... so if you're using a ""while True"" and you have nothing to terminate that function, you will end up with multiple instances.  

Cron is fine if you know that the function will terminate before the next one runs.  

Also, maybe look at something like Celery?",1519355641.0
pat_the_brat,"> Will it cause that management command to restart every 30 minutes (which is what I want)?

If you want it every half hour, you need to use `*/30` for minutes. `30` runs it once an hour, at `0.30, 1.30, 2.30, ... 23.30`

See https://crontab.guru/#*/30_*_*_*_* if you'd like help deciphering your cron strings.",1519376650.0
never_safe_for_life,"Cron is a good choice to run a job every 30 minutes. You would remove the `while True` statement and let each process terminate. 

Cron isn't a good choice when you need to run a job more frequently than once a minute, which is the minimum timeframe it lets you specify. 

Another fuzzy case is where you want to run something every, say, 5 minutes, but sometimes a job can take longer than that and it's a problem to have multiple concurrent processes. Another posters suggestion of setting up a lockfile is a good one. Here's a package that has that built in: https://github.com/kraiz/django-crontab

    CRONTAB_LOCK_JOBS
        prevent starting a job if an old instance of the same job is still running",1519368768.0
oliw,"So you basically just want to keep this command running all the time? Sounds like you want to write it a systemd (or other) service and let that respawn your command if it stops.

For ease, I'd just mirror the way you keep the Django server alive. It's similar stuff.

For completeness, as others have said, Cron will launch a new instance each time. If the old one is still there, it'll make a new one.",1519370545.0
,"It doesn't sound like a cronjob is what your after.

Can you not just set up a single process to constantly monitor the feed?

Cronjobs are better suited to situations such as:
* Do X every Y hours
* Scrape a page every 24 hours
etc",1519383565.0
crimeaguy,I have rss aggregator which utilizes celery. It works well a year already.,1519460735.0
axlee,"I would probably associate the errors with the index where they are found in the source text. I would do something like this:


- Text
 - text_id PK
 - content STRING

- Error
 - text_id FK
 - start_index int
 - end_index int
 - error_type
 - error_message

When it comes to making changes, you can either just create a new text and reference the previous version (if you want to track changes between versions), or simply update the text and update the errors accordingly (if you don't need version tracking).
",1519349652.0
Dr_Ironbeard,"I just use pandas and save any calculations using the ``to_hdf()`` and ``read_hdf()`` methods. Pandas also has nice methods to style DataFrames as HTML, which can be sent to the template processor. 

Is there any reason why this wouldn't work for you?
",1519347195.0
Nicksil,"You build the form yourself, thus handling the styling yourself. You then apply the necessary form variables to the form elements. All of this is covered in detail in the documentation.",1519339308.0
Nicksil,"`context['object'].bmark.resource`

`bmark` in this context is the many-to-many field on your `BookmarkGroup` model. So, when you attempt `bmark.resource`, you're not accessing a single object from your database, you're accessing a [relationship manager](https://docs.djangoproject.com/en/stable/ref/models/relations/#django.db.models.fields.related.RelatedManager). Read more about many-to-many relationships in the [docs](https://docs.djangoproject.com/en/stable/topics/db/examples/many_to_many/#many-to-many-relationships).

So, instead, you might try `context['object'].bmark.all()` if you want to query all records. Just as with the other relationship types, you can also `filter`, `get`, etc.

Lastly, your models little funky. You've declared a many-to-many relationship on each model included w/in that relationship. Just do something like:

    class Bookmark(models.Model):
        user = models.ForeignKey(User, on_delete=models.CASCADE)
        resource = models.ForeignKey(""Resource"", on_delete=models.CASCADE, related_name=""bookmarks"")
        # meta
        created_at = models.DateTimeField(auto_now_add=True)
        modified_at = models.DateTimeField(auto_now=True)

        class Meta:
            unique_together = ('user', 'resource',)
            ordering = ('resource',)

        def __str__(self):
            return ""{} | {}"".format(self.user, self.resource)


    class BookmarkGroup(models.Model):
        name = models.CharField(max_length=50)
        slug = models.SlugField(null=False, unique=True)
        bookmarks = models.ManyToManyField(Bookmark, related_name='bookmark_groups')
        def __str__(self):
            return self.name",1519350913.0
brejoc,"If you want to avoid writing JS, you should take a look at [intercooler.js](http://intercoolerjs.org/).",1519331827.0
haloweenek,"Django-bootstrap or django-Bootstrap-jinja  for forms in templates
As for django admin grappeli or django jet
",1519336204.0
p_r_m_n_,"The django common middleware should redirect the request and append a slash if it doesn't match anything and the APPEND_SLASH setting is True. By default the APPEND_SLASH is True. See [https://docs.djangoproject.com/en/2.0/ref/settings/#append-slash](https://docs.djangoproject.com/en/2.0/ref/settings/#append-slash)

It is ""common"" to redirect a non-trailing slash to a URL with a trailing slash. There is an ""old"" google article that describes why you should return 200 from one and redirect with the other. [https://webmasters.googleblog.com/2010/04/to-slash-or-not-to-slash.html](https://webmasters.googleblog.com/2010/04/to-slash-or-not-to-slash.html)

Adding the trailing slash is probably the easiest solution here. The regex version in your example has a trailing slash. No reason to treat the path version differently. It's just cleaner. 
",1519339940.0
dfcHeadChair,"I'm still catching up on how to use path properly,

but in the meantime, I've found using re_path in place or url is a perfect replacement. ",1519327322.0
yorroy,Try adding a trailing slash in path('test/'....,1519333145.0
khvn26,"Great job! Now fork, or submit a pull request.",1519323772.0
ramse,"You're using django 2.x and their supported installation only lists up to 1.11. There may be other issues that you haven't run into yet, but i do agree with the other comment to put in a pull request with your fix, for them.",1519342820.0
NoLemurs,"I feel as if this blog post puts the emphasis entirely in the wrong place.

The really smart thing the author is doing is using an FSM to manage user state changes - that's the thing that guarantees that there's only one code path for user state change and that makes the logging reliable. 

If he didn't use an FSM, then he'd have to make sure every time the state changed the signal was sent, which is exactly as hard as making sure that the change was logged each time! On the other hand, the author could just replace every call to `state_audit_signal.send` with a call to a function that immediately logs the state change, and achieve the same result without the added complexity of signals.",1519352570.0
flipperdeflip,"We've done a few projects using hashids and it's mostly cool but the fundamental problem is they are very invasive: the automatic conversion makes it very hard to work with the plain integer ID's directly. 

So you loose some options to optimize your applications because every time you touch a (fresh) hashid it has to be encoded or decoded. So `values_list()` type queries or accessing ForeignKey integer with the `_id` postfix are no longer solid optimization options. This adds a lot of performance-tax on bulk operations. 

You also have to use a custom JSON serializer and face other occasional integer/string assumption issues etc. Also external things keyed to the ID are problematic, with hashds you might get very long (compound) keys in redis or other key/value stores, and again loose some raw-integer optimization options.

So to hide your integer ID's from the outside world you penalize your internals.

I think this is the implicit/explicit concept that was mentioned :)
",1519292619.0
apreche,"Not every table is a collection of objects that each directly correspond to a publicly visitable page. For those that are, you can use a slug or an explicit separate uuid field to be used in url patterns and such. Just make the incremental PKS inaccessible and invisible to the outside world, and now you don't need hashids making everything unnecessarily complicated just to gain some obscurity. ",1519303644.0
Airith,"They aren't easily indexable, which is very important for larger data sets. Someone guessing at the number of records in your database is probably not that important. I would assume that the url associated with that pk would require permissions or at least for the user to be logged in.",1519292497.0
,[deleted],1519371626.0
pat_the_brat,"Sweet! I might have a use for this :)

Any estimate for a 1.0 release?

Also, in the docs' TODO section:

> See issues on github.

Might be a good idea to link to https://github.com/Punkweb/punkweb-boards/issues ... Haven't seen a link to the github anywhere on the boards.",1519290740.0
anticipat3,"Looks awesome, I may consider giving it a try for a new community site I am building!",1519341649.0
qbitus,This looks pretty cool and with more thought put into it than any other Django forum software I've stumbled upon in the past.,1519348480.0
,Out of curiosity were you inspired by Django-machina? Also looks good!,1519806503.0
DmitriyJaved,"Sessions literally working out of box, you don’t have to add anything to your settings.
Don’t forget to do manage.py migrate because default sessions require database table ",1519296428.0
chrisshyi13,"I'm by no means a Django expert, but I think you're confusing sessions and cookies. My understanding is that sessions and cookies are separate things in Django, you'll need to enable cookie-based sessions if you want to use cookies. And like Dmitriy said, don't forget to do a manage.py migrate to create database tables for sessions.

https://docs.djangoproject.com/en/1.11/topics/http/sessions/",1519316024.0
FuzzballLogic,"By the by: there's a list of Django 2.0 compatible packages on PyPi: 
https://pypi.python.org/pypi?:action=browse&c=645",1519743688.0
Michaelyin,"You can take a look at Wagtail https://github.com/wagtail/wagtail 

In the homepage you can see it support Django 2.0

I have used it before to bring blog to my Django project, it is amazing.

You can take a look at this [Wagtail demo](http://wagtail.michaelyin.info/blog/) and the source code is here [wagtail-bootstrap-blog](https://github.com/michael-yin/wagtail-bootstrap-blog)",1519782729.0
punkweb,"I've never used any django blog packages, but there's dozens of them out there.

[zinnia](https://github.com/Fantomas42/django-blog-zinnia) seems to be the most mature.  Depending on your use case you might even try building your own, could be a fun and rewarding project in the long run.

A quick google search for ""django blog"" will turn up dozens of results for existing package, and tutorials on how to write your own.  Good luck!",1519345134.0
FuzzballLogic,"Looking into this as I'm building a blog from scratch using Django 2.0. A bunch of familiar packages (like Django CMS) do not support over 1.11 yet, and with 2.0 having released only three months ago, patience is king.",1519743642.0
willcodefortea,"Definitely not, that looks like the context processors result with [default variables](https://docs.djangoproject.com/en/2.0/ref/templates/api/#built-in-variables). My guess is that you're passing too many arugments to [render](https://docs.djangoproject.com/en/2.0/topics/http/shortcuts/#render), and are accidentally setting the content type as the context?",1519249974.0
nerdwaller,"Is this for all endpoints in your app, or just one/a few? If it’s just one can you show the code for the view handler?",1519249943.0
marmaladeontoast,What error do you get?,1519246899.0
Eccleshall,"Now that you’ve added files to the form you need to add 

<form method=“post” enctype=""multipart/form-data"">

Appears to be missing from the form code you’ve posted.",1519283842.0
dmckim,"I'm not getting an error in the browser console, in my console or any form errors. My console shows post 200 and the browser console is blank.",1519247320.0
dmckim,Thank you. I took the filefield off for now to troubleshoot the issue I'm having first. I will add that when I get the basic form working. ,1519306315.0
nannooo,Digital Ocean or Vultr (with or without Dokku for easy deployment). $5/month.,1519229054.0
mikeoquinn,"Pythonanywhere 

Cheap, plus has a ton of other tools available. ",1519229316.0
dougie-io,"What about serverless hosting? Using Zappa with AWS costs me next to nothing for a small app of mine.

EDIT: 

[Zappa official documentation](https://github.com/Miserlou/Zappa)

[Helpful tutorial on getting set up with Django](https://edgarroman.github.io/zappa-django-guide/)

My app is just a tiny little ""course"" software that I use to onboard freelancers from time to time. Haven't had to use it for some time and just checked my billing in AWS. $0 this year so far!

Just be careful setting things up in AWS. It's so easy to accidentally buy a database hosting option that costs the same as your monthly rent. As a tip **ALWAYS** have billing alerts. Since I'm not spending that much, I have an alert that sends out when I'm billed more than $10 in a month. Luckily if you make a mistake like that, support will refund you.",1519244189.0
epwnym,"AWS (EC2/EB with RDS for database)

Recommendation: do not generate an automatically linked DB from the EC2 instance. Otherwise it's destroyed and rebuilt when an instance is generated/changed etc.

Make the database separately and go through the more tedious task of manually connecting it to the web server instance.",1519243523.0
_paddy_,Heroku.,1519232995.0
NoLemurs,"Linode starts at $5/month. If you're comfortable managing your own linux server, I'd strongly recommend it - I've had really good service with them.",1519265955.0
Zaboravljivi,"Scaleway - from 2.99€ per month (2GB mem, 50GB disk)",1519393152.0
wkoorts,WebFaction,1519242898.0
W_A_J_W,Spin up an EC2 instance in Amazon's AWS,1519241965.0
,"Heroku 7 dollars for the hobby dyno.  I love how easy it is to deploy.  They have a free option, but your app will go to sleep without constant use",1519255157.0
,Heroku if it's just a small side project,1519258456.0
Djangopy-org,"Heroku for free always, if your application is not  that much of large",1519306413.0
dreamer_soul,Doesn't that defeat the whole purpose of lambda to though? From my understanding lambda is like a small peice of logic not a whole web app,1519204217.0
andytwoods,"I used zappa to host on lambda. https://github.com/Miserlou/Zappa. It is straightforward and well worth exploring. 

Getting external internet to work nearly broke me (I needed an nat gateway [$30/month?] with very specific vpc settings). But, it was far easier than getting up and running on aws beanstalk!

Whilst lambda can have 1000s of instances working at one point, you are still restricted in terms of db connections. A shame. 

Writing my next app and will though be using lambda again, mainly for cost reasons. I've also become quite fond of zappa. ",1519247810.0
,">Web applications activity is uncertain, sometimes they serve huge amounts of workloads but at times they may sit idle without any considerable request count. Hosting applications on an EC2 Instance or in containers like ECS make us pay for the idle time too. To address such a problem we need to look at load balancing, DNS lookups and auto-scaling. Managing all these is difficult. AWS lambda is the perfect solution. It scales automatically when needed, depending upon the requests the application gets. Thus, making us pay only when we consume it. If our code is not running then charges are not incurred.


I cant say I agree with this paragraph at all. Hosting on your whole stack on Lambda is a heart attack waiting to happen.",1519205652.0
Nicksil,"Do you have write privileges on your user account? If you're executing the `startproject` command as your user (not using `sudo`) and nothing is being created, you may not be allowed to write files at all. However, it would seem that if Django ran into write issues, it would somehow inform the user, so I may be off base here.

Whatever the case, you can find the project template at `<python-dir>/site-packages/django/conf/project_template`. You can copy over its contents, then go about changing the names of the files as-needed, as well as skimming through those files for what will look like template variables (`{{ variable_name }}`) and replacing those variables with the necessary values for your project. It may be a pain in the ass, but it may also get you going.

There may also be a simpler way, but I don't have it off the top of my head and am too busy with other stuff to go searching right now :)

g'luck!",1519170503.0
iBlag,"Why are you using Django at work if you aren't allowed to install stuff? If you need to install stuff go talk to IT to give you those permissions. And they will probably go tell you that you need permission from your manager or another higher up, so then you go get that permission in writing (either have them email it to you and forward it to IT or have them CC IT in their email).

You want to look like you are a trustworthy computer user and only install ""good"" stuff from the internet and only with their permission. So don't bring up the fact that you've already installed stuff without their permission.

The shorthand for this is ""going through the proper channels"". Yes, it may take 10 times as long, but that's not your problem.",1519208077.0
hhh333,"You should definitely consider hosting at home if cost are a consideration and you have sufficient bandwidth.

However, I would still advise making a daily copy of it to an online service.

Don't let all your family photos depend on a metal plate that spins at 7200 RPM in your basement, you will regret it.

If you need a large amount of storage, the most competitive service I've found is having a [business Dropbox](https://www.dropbox.com/business/pricing).

It's for 3 users, so it cost about 60$/month but you get ""unlimited"" space.",1519168078.0
mattva01,"As a baseline: 5 TB of storage is about $120 a month on S3 (in US East). S3 is way more  resilient and low maintenance then any home solution would be, so any home solution needs to be way cheaper on a month to month basis in order to compete.  

Also  because you said access is  fairly rare, you can basically half that bill by going with S3 Infrequent Access. The cost of access is a bit higher, but the month to month cost is much lower.",1519169164.0
zipo-z,"Simplest would be host at home files and application on the same server.

If you want to test your skills a little bit more and still keep it cheap, find hosting for the application and then host an FTP server at home with the files themselves. 

If you really want to get into it you can create a system that keeps low res photos on the server and pull from the ftp when you need the big photos. That way even if you have some downtime for your local server, the site will be mostly usable.",1519165730.0
pointyball,"Ow. The data size means you should seriously consider home hosting.

Storing multiple TB will likely cost more than you want to pay, especially since no one is going to download it all.

But yeah, the ones you listed and digital ocean and vultr",1519165090.0
pat_the_brat,"VPS servers tend to be ridiculously expensive if you need this much space... Like, $10/month for every 100 GB, so $100 per TB.

I think the cheapest would be to find a *colocation* center in your city. I used to pay < $100 CAD per month for a 1u server that I built myself. Even if the server costs you $800, and you pay $100 a month to host it, with 5 TB, it pays for itself after the 2nd month.

Of course, at home is the cheapest option.",1519167878.0
crb002,S3 bucket.,1519177142.0
mbi0,"The cheapest storage I've found are [Time4VPS' Storage VPS](https://www.time4vps.eu/storage-servers/#biennially), I've got a few of those I use mostly for storing backups. 

For 4.50€/month you get 1TB, (13.50€/month for 4TB) in an actual VPS, so you *could* actually use the same box for hosting the data and running your code. Don't expect stellar performance, though, and obviously your data is not backed up (these are meant for backups).

",1519198219.0
iconfinder,Google Photos is brilliant.,1519165432.0
chris_conlan,"Look into AWS S3 with ""Infrequent Access"" set on the bucket. Should cost around a dozen dollars a month for a TB -- at the expense of access speed.",1519242669.0
flipperdeflip,Consider how to transfer all that data to the storage service: it will take a lot of time and maybe some bandwidth expense. Also check usage terms from your provider.,1519310205.0
blizz017,Build a REST API and query for the data via JS.,1519166462.0
ramse,"Have you looked into something like [DataTables](https://datatables.net/)? It'll handle everything, you just need to supply the data.",1519167384.0
booooomba,"OK, if you want to do this you need some JS skills. Just load the entire table and then do the pagination in the frontend. (Meaning in the browser using JS)",1519163986.0
dmckim,I tried django-datatables-view but couldn't get it to work. I did get datatables to work with editor on django 1.11 and python 3.6 with drf. Its slow to load when you start getting over 10 columns and 3000 records but eventually I will get around to serverside. If you would like to know more send me a message.,1519247061.0
ramse,"Just store it in the database, the hit is minimal and django does cache a lot of results. If you're running a script that loops over a lot of items using the token its easy to obtain the token before the loop.

I have a Token model that stores tokens as well as keeping a history of tokens used, calls used per token...etc. We have staticmethods on Token to obtain the latest that look something like:

    class Token:

        ....

        def get_latest_token(self):
            return Token.objects.order_by('inserted').first()

That's simplified, theres also exception catching that'll automatically obtain a new token, revoke as needed, increment counter on calls used...etc.",1519175859.0
ccb621,"The database is simplest. If that doesn’t work, look into caching. Note that, if you have multiple servers, you will need to use a central cache (e.g. Redis), rather than in-memory cache, as in-memory is specific to the single server. ",1519180027.0
kurashu89,"I'd recommend redis. I do this at work and it works great, doubly if the token expires. Our token hit rate is higher than 10/sec but lower than 100/sec in most cases. 

Just do a set with a ttl (I recommend shorting the ttl by a few seconds to a minute depending on how long it lives for). When you go to retrieve it, if you don't get one you know you need to fetch another.

The only issue you'll see is when the token is expired and multiple instances go to fetch it at the same time. Your auth will take a tiny, tiny hit and it's technically a race condition but the net effect is the same is the same as if only one did it so I've never bothered to address this.

Redis is fast, so your only worry here is network latency but that's not been an issue for us. But redis and the application are both in the same data center. 

If you're not running redis already, an in memory cache is probably good enough. The race condition is fixed with this too as each instance will have its own token.

I've not pursued this solution as I have a system where each user gets their own token that should be shared across 30ish instances of the app. Having a 1:30 cache hit ratio isn't great, especially when networks get involved. ",1519254726.0
zettabyte,"First, where to start:  https://docs.djangoproject.com/en/2.0/howto/static-files/

Next, as a summary of that documentation:

**STATIC_URL**  The setting that defines the URL for your static files.  This gets put in your HTML `href` attributes.

**STATIC_ROOT** The setting that defines where the management command `collectstatic` puts your all the static files in your project.  You would typically have your webserver serve this directory in a production environment.  It's doesn't do anything in a development / runserver environment.

**STATICFILES_DIRS** The setting that defines a list of additional directories that will get served up by the development view `django.conf.urls.static.static`, and will be collected into the STATIC_ROOT folder when running `collectstatic`.


---


From your description, it sounds like the behavior is correct.  STATIC_ROOT defines where things get collected into, while STATICFILES_DIRS would define where to find files to serve.

If you changed your settings to:

    STATIC_URL = '/static/'
    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

I would guess things would work, provided your development views are set up correctly. ",1519153967.0
pat_the_brat,[`STATIC_ROOT` and `STATICFILES_DIRS` are two different settings](https://stackoverflow.com/a/24022604/4337941).,1519154057.0
McDivvy,"It sounds like you are familiar with client side code - HTML, CSS, JS etc.

Python is server side.

If you do not know the difference, but you have a project already started ""with a lot of stuff already built""  you should be able to see on the folder where the project files reside that there are a bunch of .py files.  These are the server side python files.  They do the back end work.

This is where your python code goes.

Without knowing more about the project that's about as much as I can say for certainty without just guessing!",1519149670.0
Nicksil,"[`run`](https://docs.python.org/3/library/subprocess.html#subprocess.run) [`subprocess`](https://docs.python.org/3/library/subprocess.html), [`pipe`](https://docs.python.org/3/library/subprocess.html#subprocess.PIPE) result to `stdout`, convert to `str`, and attach to response?",1519147147.0
saptorshi7,"If you are planning to develop a website go for django framework. 
Else, you can you render functions and templating based on python 
Hope this helps :)",1519148869.0
ben174,"Would need to see your migrations, but it seems that name field was once an int.   ",1519140087.0
Nicksil,"What's the question?

If you have uncaught exceptions, provide us with the complete stacktrace; also any code w/in the context of the error (besides the model declarations in OP).",1519136069.0
Fictionfree,I have added the error log. Please take a look at it again.,1519140005.0
dfcHeadChair,"I couldn't find any great tutorials, and also struggled with the docs so I switched over to Saleor. You should give it a go.",1519131768.0
ccb621,"There aren’t any great tutorials. The best tutorial I have found has been to install it, and use it myself. Note that there is a learning curve, and you don’t get everything out of the box. Refunds and payments are where we did a lot of customization at edX. ",1519144301.0
adioevan,"I have never used angolia or google for custom search but if you expect your sight to grow, the Django built in search (whether via Django ORM or haystack) will be too cumbersome for your system. If you have good knowledge of lucene, or willingness to learn it you could try making your own search service using elastic search or solr. Otherwise I am sure algolia or google will do. So the benefits will probably be mostly tied to your specific situation.",1519099654.0
This--Ali2,"Faster and more flexible search for M2M fields!


That’s what I want from it, don’t know if I’ll be able to get it.",1519100279.0
will_r3ddit_4_food,Are you using indexes on your database tables? That can drastically speed up queries. ,1519090360.0
daredevil82,"Indexing and profiling.

As in add indexes to the db fields, especially if you're doing `icontains`, `gt`, `lt` and such queries.

Profile  your queries with [django-silk](https://github.com/django-silk/silk) and see where the bottlenecks are.

Off the top of my head, I would leverage postgres and postgis combined with geodjango for your spatial queries.",1519096181.0
oliw,"There are a few things in this that I would upgrade for style but the biggest performance drain is going to be the `property_type` string comparisons.

 - Indexing them will improve performance
 -  I'd probably *also* convert them all to a smallposint integer enumeration or FK relation to simplify the lookups.
 - [Tune postgres](http://pgtune.leopard.in.ua/) to your server. The out-the-box performance is quite conservative.
 - It may also be worth considering the spatial indexing you get from GeoDjango+PostGIS. This adds some complexity —and a lot of stuff you don't need— but searching around a point in a spatial index will likely be fastest.",1519130026.0
i_amwithnail,"In addition to the other methods of speeding things up mentioned, it's also worth considering whether you have lots of unintentional joins, in model methods.  (this is a long explanation of 'minimize the joins') 

When i joined CurrentCompany, we had lots of nice, helpful functions that pulled out strings from across models, largely to populate fields in DataTables (so Ajax calls, same as you). So we could just do `Booking.propertystr` in templates or datatables.  Problem is (of course), that when you have lots of these in big queries for ViewSets, the serializer will run them all individually, so you end up with thousands of database queries (which was where our slowness came from).   We refactored to do select_related and pushed some of the most important string methods into their own fields on the original models (an element of denormalisation).  Keeping them up to date was handled by updating the save methods, so that the changes cascaded onto related models, as the retrieval speed (tens of thousands of queries an hour) was more important than the save speed (hundreds per hour).  

If you're using viewsets that are infrequently updated, you can also use [DRf extensions](https://chibisov.github.io/drf-extensions/docs/), which lets you cache the _serializer_ output.  (Again, this is where our slowness was happening because of methods.)  This is a temporary fix (at best...) unless you address the other bottlenecks mentioned in some of the other answers, though.  :) 

ETA:  Silk is a great tool.  I also like New Relic, as it's on the whole time, and will let you trace slow transactions, particularly during the free trial where you can get really deep into your stack trace through their interface  (Other tools are available, DataDog, OpBeat, etc.)   It was the main tool I used to profile where our slowness was happening.  
",1519132934.0
ramse,"I would check to see how many queries are being issued at certain points.

    from django.db import connection
    print(connection.queries)

I'd place the print statement before and after the data loop to see how many are being executed.

Also have you tried executing the query that makes up `data` direct on the database just to see how long it takes there? `print(data.query)`",1519176437.0
njancsar,What problem are you having? Can you be more sepcifc? I've worked with pinax stripe without error before ,1519091212.0
,I was originally looking at using either dj-stripe or pinax-stripe but after looking at my requirements in detail I ended up using the Python stripe api. The api docs are well documented and the full implementation only took 1-2 working days.,1519091648.0
ghostofgbt,"I strongly recommend the raw python stripe module/API due to docs and support.

I created models for customers, subscriptions, charges, refunds, invoices and webhooks. Customers can have a 1:1 relationship to users. The rest depends on your requirements. I'm leaving this brief for now but can answer any specific questions you have in response.",1519102364.0
calabresi,Pydanny did a Django-stripe integration that was functional and worked with some effort. I don’t know if it’s up to date but I’ve had success with it in the past. ,1519087717.0
TunaBoo,I just use stripe directly. I found no benefit to any of the apps.,1519134753.0
daredevil82,"This is a known issue, check https://github.com/angular/angular.js/issues/1019",1519084452.0
asplodey,"I use PyCharm. It's got lots of bells an whistles like any IDE, including plugins and run configurations for Django.",1519078510.0
Branden_M,I use a docker image with docker-compose that I've built off of the python3 image to run Django sites. I use the postgres image for the DB and create a volume to sync file change to the container. Then code in atom (IDE of choice) locally. Super easy local dev that can be handed off to teammates w/out worrying about missing dependencies or getting a junior dev up and running quickly without a lot of terminal knowledge.,1519241249.0
punkweb,"Honestly any editor, vi or even sublime, and a couple terminals, will be a better workflow than any IDE in MOST cases.  Some languages make sense to use an ide for, but as far as python is concerned there's no need to add all the extra bloat of an ide for a couple of ""handy"" gui's and buttons.  If it's the workflow you're after and assuming you're using linux, get a tiled window manager like i3 and enjoy the productivity boost.",1519289831.0
dzecniv,"As others, I use Emacs. It has many packages for python, web templates, javascript and django (in that case maybe less intelligent). A few links:

- https://www.gnu.org/software/emacs/
- http://wikemacs.org/wiki/Python (managing virtual envs, sorting imports, some refactoring,…), don't miss elpy
- awesome git integration: https://magit.vc/
- https://github.com/myfreeweb/django-mode sometimes useful to run django commands.
- http://web-mode.org/ to edit html+css+js, see also jinja modes etc
- https://github.com/emacs-tw/awesome-emacs
- https://github.com/justbur/emacs-which-key (what uses spacemacs to show nice help on keystrokes)",1519308815.0
lykwydchykyn,"I use emacs with elpy for the python, web-mode and emmet for templates, and js2-mode for javascript.  Works fine for me.",1519083037.0
mdmacidmthcoke,I'm a fan of emacs specifically Spacemacs as a development environment.  It has a bit of a learning curve but it's a great development tool.   Also if you are coming from vi Spacemacs shouldn't be too hard to pickup. ,1519081085.0
nerdwaller,"I’m in the vim (well, neovim) camp and often flirt with using PyCharm Pro (if I’m doing enough with the templating engine). But I’ve found that generally I’d rather know each specific tool than the abstraction on top (redis-cli, psql, etc).",1519082048.0
Dr_Ironbeard,"I shh into my dev machine (Digital Ocean droplet) and use tmux to set up a few panes. I usually have one set of windows that show my server and celery output, and another divided into vim and the ipython shell with %autoreload turned on so that the shell updates when I save in vim. ",1519096047.0
nerdwaller,"Unfortunately there’s not [much movement](https://code.djangoproject.com/ticket/27806) to support this yet. Though I do understand your desire, say for example your site allows people to whitelabel it and point their domain to the single instance verses hosting their own. 

It may work to edit the allowed hosts at startup (and as users add domains), but I kind of expect that to be a workaround that may go away.",1519069320.0
fdemmer,"check out django-airavata for dynamic hosts: http://django-polla.readthedocs.io/en/latest/

i forked it from bitbucket for completing the library rename from ""polla"". not much going on upstream: https://github.com/fdemmer/airavata",1519073267.0
zettabyte,"1) `ALLOWED_HOSTS` is a Setting, which should be treated as immutable.  But if you were to change it, you'd use: `django.conf.settings.ALLOWED_HOSTS`.  But it probably won't work right at some point.

2) I don't think you're using `ALLOWED_HOSTS` correctly.  I don't understand the use case where an individual user's profile would impact what should be in the `ALLOWED_HOSTS` list.  And if the user's profile did impact the Host header validation, the documentation for the setting says you should implement your own Middleware to handle it, and use ""*"" as the `ALLOWED_HOST`.


",1519067896.0
booooomba,"What exactly are you trying to do? Are you sure you have correctly understood what ALLOWED_HOSTS does?

",1519067460.0
Bonteq,"I appreciate the resource. I've never used Django alongside a separate framework so I'm excited to play with this. I'm attempting to follow your startup tutorial, but I'm getting stuck here: 

    cd vueapp
    npm install
    npm run dev
Finally migrate the database then run the Django dev server with:

    python manage.py migrate
    python manage.py runserver

After running npm run dev, I get stuck in the Vue.js hosting the site and am unable to migrate the database on the Django end. Do I need to open up a second terminal? Any help woould be great.",1519083439.0
Soupinmyfly,Use this https://www.amazonaws.cn/en/about-aws/china/,1519045124.0
_Timboss,"I've used twilio's API for SMS in Django / Python before and found it extraordinarily easy to use, they even have a free tier.

If allauth doesn't support SMS natively it wouldn't be very hard to roll your own!",1519134346.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1519029024.0
flipperdeflip,"Celery isn't the only choice for task runner, there are simpler ones also. But checking the tests seems a good case although you obviously wouldn't be able to provide the result in the response. You could mark the test in database as 'being processed', maybe rig something with a server push event to update users browser.",1519031990.0
athermop,"As it sounds like you're a beginner at using task runners, I'd recommend python-rq instead of Celery.

Celery is great but it's very heavy duty with lots and lots of configuration.  Python-rq is also great but is lighter weight.

But yes, a task runner is probably what you need.",1519065770.0
haloweenek,"Sending email

Long data processing

Queries to external API's",1519042064.0
NoLemurs,"> Will using celery to evaluate a test get rid of the problem.

Probably. Celery is useful any time you want some computation to happen outside the request --> response cycle. If evaluating tests is slow, then you can just queue it up as a task, and you'll be able to send your responses basically immediately.

There is a downside - if your test evaluation is happening outside the request --> response cycle, then your response won't have the results yet, so if your uses want to *see* the results, you need to think about how that's going to happen. There are a bunch of possible solutions, but no matter how you cut it, it's likely to be a bunch of extra work!",1519058608.0
DmitriyJaved,"It’s literally in celery FAQ:
http://docs.celeryproject.org/en/latest/faq.html#what-kinds-of-things-should-i-use-celery-for",1519033331.0
badlyDrawnToy,"I do this on all projects. Like others have said, just write a script to read the CSV and save the model. I use Django Management Extensions to run the scripts - easier than writing management commands.",1519027233.0
,"Either convert the CSV's into something suitable for the loaddata command, or just read the CSV file's and create the models whilst reading the file.",1519016120.0
Borderline92,"You don't need the Rest Framework. 

1. Open the file (the csv) in read mode
2. Make a 'for' loop to go over each line in the file
        2.a create model instance
        2.b populate each field with a value from the line.
                 (Most of the time the line is read as a dictionary)
        2.c save model instance
3. Your done!",1519024714.0
kaddourkardio,"fixtures are great for ""preloading"" data",1519161008.0
dorsal_morsel,I'd write a separate script to transform them into fixtures suitable for the loaddata command. Read https://docs.djangoproject.com/en/2.0/howto/initial-data/,1519011892.0
athermop,"PyCharm will build a model diagram for you.

Do a Google Image Search for ""pycharm django model diagram"" to see a bunch of examples.",1519008788.0
CARROTINMYASS,"If you know Flask you should have no issue crushing some Django. I was a senior level engineer working on Flask products, and now I'm living the high life in Django. Flask is hard mode- if you've mastered it, Django shouldn't be an issue. It's worth it to make a simple CRUD app with something to render views just to get the hang of it, but also any employer should be happy with your Flask experience. If not, that doesn't sound like a place I'd want to work.",1519061106.0
supra621,"I once read somewhere that if you build packages into Flask for long enough, you'll end up having built Django...

I looked at both for when I started a web-based database project, and I ended up using Django as of about three weeks ago. I've found it really, really easy to get enough of the Django basics down to accomplish building useful applications. I think with you already knowing Flask, spending a few weeks learning Django wouldn't put you off-course by any means.",1520192725.0
koslib,"In my opinion, it depends on the seniority of the each position. For example, in our company we have open positions for both entry-level and senior Django developers. 
In the entry level case, someone like you, with demonstrated programming experience and Flask experience, would probably make a good fit. 
The senior positions though may require an in-depth knowledge of the framework and a more invested person in the framework would most probably make it until the end. 
To give you an example, it's very easy for you to get started with Django and set up a simple web application with a not so trivial functionality. On the other hand, it'd be not so easy to create a custom Middleware connecting to a 3rd-party or an in-house API (at least following the industry-recommended methods) even if you know what a middleware is and how it works.

Hope I helped, and good luck to your job hunt!",1519046921.0
Nicksil,"You realize that defeats the entire purpose of having two password input fields, right?

Also, this is an Angular question.",1518993650.0
thunderouschampion,Plans to make it compatible with cookiecutter?,1519047249.0
,"Is this meant to run on the client side as a backend to an electron.js / react native type app, or is this for a remote backend?",1518997426.0
NewDimension,What do you use for push notifications?,1519006510.0
Nicksil,"The official [documentation](https://docs.djangoproject.com/en/stable/).

No, I'm serious.

Start with the [tutorials](https://docs.djangoproject.com/en/stable/intro/).",1518984504.0
suzukipunk,I recently did the Django tutorial at Mozilla and I find it to be the best begginer tutorial between the official one and this one. Here's the link https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django,1518997827.0
aberrante,"I liked Harry Percival's [Test-Driven Development with Python](https://www.obeythetestinggoat.com/). The book's focus is on TDD, but it develops its examples in Django.",1518994746.0
UberDiver13,"This guy: https://djangoforbeginners.com
He is putting together a book and offering it for free while he is writing it.  He is very quick to respond to comments and has a great way of communicating to noobs. And his site is virtually ad-free (which is so rare today). ",1519226994.0
LeonardUnger,"I found the [Django Girls Guide](https://tutorial.djangogirls.org/en/) a great introduction.
",1518984908.0
DabsJeeves,"I did the official docs followed by the Mozilla tutorial. I had a rather weak background of coding in general but got through those in a few days and was able to keep going from there. 

They mean a lot more when I go read them now but it's a great startt",1518995960.0
DullBlade0,"Good courses I've seen are:

* [Official Documentation](https://docs.djangoproject.com/en/2.0/intro/tutorial01/)
* [Django Girls Tutorial](https://tutorial.djangogirls.org/en/)
* [MDN Tutorial](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django)
* [Simple is Better than Complex](https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/)",1519152549.0
authalic,"I'll agree with the recommended Udemy course, which you can get on sale sometimes for around $10.  The Mozilla tutorial provides more explanation than the official Django tutorial, but it may not be best for absolute beginners.  I found this series on YouTube to be a huge help:  

https://www.youtube.com/playlist?list=PL6gx4Cwl9DGBlmzzFcLgDhKTTfNLfX1IK

Unfortunately, the guy who did it never finished it.  It stops unexpectedly at the Django Rest Framework lesson.  But, you'll learn enough by that point to figure out the rest.  [Pun]
",1519181764.0
Deaygo,"Take a look at this page here: https://stripe.com/docs/saving-cards

You need to pass  `source=request.POST['stripeToken']` to `stripe.Customer.create` along with the email.",1518972595.0
phytogram,"You seem to imply that having access to all the npm universe is the main positive point, but for me having a thin backend API + frontend applications that consume it has made my applications so much more maintainable and less complex. That was the biggest win. MVC doesn't work well with a modern frontend stack, nor with frontend app design patterns.",1518961738.0
bulldog_in_the_dream,"If the Django app is maninly static pages I would not bother including webpack. If on the other hand you're making a SPA I would separate the frontend and backend completely, like phytogram suggests. 

React, Vue and Angular all have CLIs that will autmoaticall set up build tools and dependencies on the frontend. ",1518972579.0
booooomba,"If you do all your front- and backend stuff in JS then webpack is a viable option. But in your case I would definitely NEVER use webpack or npm. I'm a minimalist so the entire JS ""ecosystem"" is much too bloated for my personal preferences. ymmv",1518962087.0
godhatesmetoo,"For standalone use I really liked gulp. It is easy to learn, because there isn't a lot of magic going on. Nevertheless I think Webpack is more mature (i.e. it has some really good docs). It also has a large community (especially react&angular people) and it is easy to use in combination with django (i.e. have a look at [saleor](https://github.com/mirumee/saleor)).",1518972850.0
jobelenus,"I'm working with webpack and django for the first time on a current project. I'm actually liking it a lot. Much like with virtualenv you get package version pinning, and package requirements are automatically dealt with behind the scenes. Even in cases where widget A wants version X or something and widget B wants version Y. Webpack does a great job of managing the context of each package.

If you're going with a complicated UI/UX that requires angular, react, vuejs I'd much rather use webpack than any other method.

But if you're just using vanilla JS/jquery to enhance pages its not worth it at all.",1518977605.0
JhonnDuff,"I've been using Webpack (with JS / SASS) outside of the django standard. I have an assets folder where I write my files and then the webpack plays in static. This does not seem to be the best setting, but it was the simplest I could leave. There is even a webpack [library](https://github.com/ezhome/django-webpack-loader) in django, however you need some time (as you yourself said) to configure exactly how you want it.",1518991299.0
dzecniv,"I went with brunch instead: http://brunch.io/ which is simpler to configure (usually plugins have zero-configuration), but it seems that the latest webpack also has zero-conf plugins. (brunch is less famous but also used a lot (default in Elixir's Phoenix))",1519042870.0
creativexploder,"Search for ""Sentdex Django tutorials"" on Youtube. He has the best tutorials for python where u will learn all the basics related to Django

Hope this helps!🤞 ",1518958294.0
Sayemon10,follow official Django tutorials.. it might help,1518952999.0
tularem,Traversy Media on YouTube has a pretty good Django Crash Course,1519001600.0
ramfanprogrammer,"A few things - 
Django girls has a great walkthrough to go through. 

Next, Coding For Entrepreneurs has a great tutorial to make an ECommerce website. I got it on Udemy. This covers a lot, as well as some more advanced features such as sessions, custom model managers, etc. 

Another great resources is Two Scoops of Django - it is a great way to learn some more advanced features and common practices.

Good luck!",1519008543.0
booooomba,There are loooooooooooooads of videos on Youtube and Udemy about this. ,1518953602.0
Ake_Vader,"Stateless auth, i.e. using tokens:

* Client: sends username/password
* Server: authenticates the client and if success it creates and returns a token for the authenticated user
* Client: the token is now presented by the client at each REST API call by attaching it in the Authorization header
* Server: does a database lookup to check that the token exists and is valid (this is one thing you seem to have misunderstood with regards to the DB requests). If valid it returns the requested content, else a HTTP 403 status, i.e. forbidden.

To force a ""user logout"" you would delete the token on the server side as any following requests made by the client would result in the server not being able to find a token for that user.

To prevent the user from a re-login and making the server create a new token you'd also set an is_active flag on the user account, Django comes with one by default i think.

Stateless authentication basically means that the **client authenticates itself at every request** by presenting the token in the Authorization header when requesting content using an API call.

With stateful authentication the user inputs user/password and for the rest of the session **the backend keeps track of what users are currently logged in** with help of session files etc.

I'm sure someone else can go into more detail and with better explanations but it's something at least.",1518948056.0
This--Ali2,"I think it’s safe, always use the latest version of software.

Unless there’s a backlash from the community. Bootstrap 4 is great. Go ahead. ",1518932017.0
searchingfortao,"It's probably ""safe"" but this project is doing things for you that require very little effort in HTML/CSS.  It's basically a limited templatetag wrapper around simple class usage which makes me think it'll get in the way more than it will help.

Day for example you want to attach some custom CSS or just an idea to a button group so you can manipulate it with JavaScript.  It's straightforward with HTML/CSS, but now you've introduced something new that other developers will have to learn before they can do what's necessary (if it's even possible with this library).",1518950609.0
vscodeandveganlattes,"I don't see any red flags on the Github page. If there are any issues it looks like they're making regular commits to solve them.

Try it out - let us know what you think!",1518933859.0
LudwikTR,"I've used `django-bootstrap4` in my most recent project at work. The use wasn't extensive, but I've displayed couple of forms with it. Everything went smoothly. Nothing blew up. 
",1518941446.0
NewDimension,"Learn Bootstrap it's very straightforward and there are plenty of examples online. After you do that you should learn at least the basics of CSS and JavaScript. These are all tools a web developer needs. 

Now your goals should be to master Django and learn Bootstrap. As soon as you're doing non-basic stuff you'll see the need for CSS and JavaScript.",1518985872.0
,[deleted],1518923088.0
searchingfortao,"It's a nice idea, but I think you'll find that you're reinventing the wheel somewhat, especially since there appears to be a standard developing around the use of a `.env` file in your project root.  Have a look at [python-dotenv](https://github.com/theskumar/python-dotenv) for example.  Going this route, you just need to `load_dotenv()` in your settings, manage.py or something similarly gateway-esque and then everywhere else, you can just `os.getenv(""WHATEVER"")`.

Typically I just populate settings.py with lots of references to `os.getenv()` and then use `settings.X` everywhere else.  I'll even create a `app_name/settings.py` and do the same, which prevents users from having to edit settings.py at all if they want to use my app.",1518963455.0
diox,The naming is a bit unfortunate considering https://github.com/django-compressor/django-appconf has existed for a while now :/,1518980308.0
execrator,"JSON doesn't allow for comments which makes it a fairly ordinary format for configuration. I'm sure you've had YAML suggested to you, and I sympathise with the extra-dependency argument. From this point of view you might think about https://docs.python.org/3/library/configparser.html

Of course, python files are a readable and commentable format which I believe python has support for ;). What is JSON allowing users to do here? Share configuration with a frontend?",1519024327.0
ccb621,"Alternatively, you could do the following:
- Use an in-memory database for testing
- Squash your migrations",1518997363.0
allidoisace,"Documentation really isn't that great. I prodded the internet for awhile and have them implemented finally, but they were a hassle haha.",1518926944.0
ramfanprogrammer,"For anyone interested, I found an article that is actually pretty useful: https://medium.com/@taranjeet/adding-forms-dynamically-to-a-django-formset-375f1090c2b0",1518985865.0
np-,"In my opinion, formsets make your code a bit unreadable if there is more-than-minimal amount of your custom logic involved. 

The official docs cover the basic usage of formset, you need to have a good grasp if you want to make it sophisticated. In that case, I suggest you to look at the formsets code, it is pretty easy to reason about.",1518929937.0
FLX,"Coincidentally I worked for the first time on formsets myself today. Similar to you, hard to find good resources. Finally got it working through a ModelForm and a FormSet, plus the ability to add more rows on the front end via JavaScript. Anyway, if you have specific questions, DM me.",1518944011.0
booooomba,I would look on YouTube. There are loads of good Django videos.,1518908714.0
nerdwaller,"I’m not sure I’d recommend people litter their global shell config with a bunch of project specific settings. Instead you have a few options:

* pipenv: simply add the env config to a file called `.env` (note that honcho also uses this same file)
* virtualenv (including virtualenvwrapper): add the env config to the activate script
* use a tool like direnv that automatically sources on navigation to a directory.
* ide config (in case you run an app fully from the ide)

This frees you up to use standard environment values to keep the number of settings files small, for example `MYAPP_DATABASE_URL` becomes a fairly common `DATABASE_URL`. Things like this means the base config can look for the standard environment variables and default to your local settings limiting the indirection someone may need to follow to see setting values.

For me I encourage my teams to only ever have three total settings with very restrictive use:

* development: local machine config only
* testing: config for local testing runs or CI (I try to match these so we can reproduce CI issues locally)
* production: any deployed environment - trying to keep prod config as close as possible with a few config points via environment variables (if you’re unfamiliar, see the [12Factor App](https://12factor.net/) concepts).",1518930948.0
StevenMercatante,"I've shown this technique to a few coworkers who were just getting started with Python & Django, and thought writing it down and sharing it would be helpful for anyone that's new to Django. ",1518886942.0
furyfred,"This is a very common practice, I like it. Cookiecutter Django is even built on it, and that's what our company used to get started. :-)",1518966428.0
,[deleted],1518907400.0
DmitriyJaved,https://youtu.be/Lwp73bSaplo,1518873383.0
ramfanprogrammer,"I'm not sure of an exact resource, but I would look for an explanation of the MVT framework of Django. It seems like that is the concept you are looking to understand. ",1518907709.0
moeris,"Tell thing which will help you to understand the order of things are writing tests and using pdb or ipdb to follow a request through the chain.

Writing tests is helpful primarily for understanding the data structures involved (Requests, POST data, etc.), since you either have to generate them to pass into the view it, or you have to mock them out.

pdb and ipdb are good general purpose tools which are particularly useful for walking through the call stack.",1518907999.0
Nicksil,"You didn't instantiate the serializer.

Reference [this page](http://www.django-rest-framework.org/tutorial/3-class-based-views/) of official tutorial.",1518890717.0
ghostofgbt,"I'm not an expert on DRF, but I'm gonna guess this has something to do with your ""done"" variable, since it is just a BooleanField. That would mean it is either true or false, which is a property, which is not serializable.

Just a stab in the dark. Someone who knows more should feel free to correct or elaborate!",1518880578.0
Investisseur,"Yo man you've only got two fields on the thing, why not just use fields = '_all_'",1518879844.0
ghostofgbt,"I'm not entirely sure what you're trying to accomplish, but you might want to look into AJAX. It's a very simple method of sending and receiving data to and from web servers without actually changing the url.

Basically you make an AJAX call and when the call is completed you do something with the data. It's typically used for loading dynamic content on websites that will be populated after the initial page loads, but it might work for what you're trying to do.",1518879910.0
zettabyte,"Put the ID in the session.  That's by far the easiest thing to do.

When you render the second page, check for an ID in the user session.  Pop it off the session if you want the behavior to reset.

There can be downsides to throwing to much data at the session.  But I think you're fine in this use case.

Other suggestions here are good too, and probably worth familiarizing yourself with them.  But I'd say the session would be the right tool for this behavior.",1518887778.0
thugg,"Despite your concern, you should use GET (put it in the URL as a variable).

Edit: Give more info on the problem and I will try to explain better.
",1518879408.0
,[deleted],1518876060.0
Nicksil,"The author seems real insecure.

Also, this doesn't belong in here.",1518859094.0
jmfsn,"As far as I can see you have two possible approaches: 1) have a certain code on the text represent an image, that the controlled then replaces by HTML - example: https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#images (the easy way would be to actually use something like markdown where you'll have libraries that would do the rendering for you) - in this case the model is a simple TextField, 2) or you can go the old CMS way and say that each part is a Block and a text is composed of multiple blocks and then have text and image blocks. In any case don't forget to add a way to upload the images before using them.",1518859440.0
ubernostrum,"The usual practice is to have your server set `SECRET_KEY` and other sensitive things in environment variables, and have the settings file read the environment variables.

For a real example, [here's my site](https://www.b-list.org/) and [here is my actual Django settings file on GitHub](https://github.com/ubernostrum/b_list/blob/master/b_list/settings.py).

There are also some tricks in there like using the value of `DEBUG` to toggle other settings, since (for example) I don't use SSL in local development on my laptop.",1518812757.0
athermop,"The other answers provided, and a hundred other important things to know about can be found in the book *2 Scoops of Django*.",1518816928.0
Niicodemus,"The other answers have focused on keeping them in environment variables, but to more directly answer your question and get you moving faster, put those keys in `secret_settings.py` then add a `.gitignore` file with `secret_settings.py` in it, so it isn't added to git. Remove your keys from `settings.py` then just add `from secret_settings import *` to the top so that django can see your secret settings, but they're never added to Git. Then later down the road when you're more ready for production you can do django-environ or other environment key methods. And to answer your other question (I think), in your view, `from django.conf import settings` then add `settings.GOOGLE_API_KEY` to your context variables of the view that renders the template with `{{ GOOGLE_API_KEY }}` in it.",1518829719.0
bcgroom,I’m on my phone so instead of explaining everything I’ll just point you in the right direction. For API keys and other secrets you can either store them in environment variables or you can have a secrets.py file that you import into settings.py and then don’t commit it to the repo (I like to put it in .gitignore so that I don’t accidentally commit it). ,1518811636.0
lamintak,"Check out https://github.com/joke2k/django-environ

Also, depending on your needs, you can take this really far and look into something like https://www.vaultproject.io/",1518811946.0
davidkwast,"Never. But what for? In the place of regular javascript
",1518822688.0
BotOtlet,"It's nice idea, but easier is find front end solutions in js",1518904058.0
dzecniv,I personally gave up with this idea in python. Looking at other languages.,1519042978.0
fdemmer,https://packaging.python.org/tutorials/installing-packages/#installing-from-a-local-src-tree,1518806574.0
TunaBoo,Is your script running onload? Make sure your full page is rendered before you run JS,1518809396.0
plus500s,"Great article! In fact, it's quite useful to me since I am using behave for a while now. I wrote a blog post which is very similar to yours a while ago https://blog.anvileight.com/posts/behavior-driven-development-pycharm-python-django/ - the only difference is it uses behave as the primary library. 

However, it worth looking at Aloe. Do you happen to know key advantages of Aloe over behave? At the first glance, it seems like pretty similar libraries. ",1518895135.0
flipperdeflip,"Not with Content-Disposition:inline, there can be only one and it will take the whole browser view.

You could try to make a page that uses a Javascript PDF reader like https://github.com/mozilla/pdf.js to display multiple PDF's in one HTML template.

I'd reconsider what you're trying to do.

",1518788901.0
wizpig64,"Here's a solution of mine from 2014, which uses [ghostscript](https://packages.debian.org/ghostscript) to merge and compress PDFs via a subprocess call. It's a small part of the entire solution of delivering the document to the user, but you can use it as a starting point.

It's a little slow and can take a few minutes for huge workloads, but we're using it when sending out email reports, so we can wrap it in a celery task, defer calls to it, and tell the django web user ""your email has been queued"" right away.

Since file size matters a lot when sending email attachments, we compress *all* of our pdf attachments with the batch command, even when we're batching just a single page.

If you wanted to return it in a view, do something like [this](https://stackoverflow.com/questions/3582414/removing-tmp-file-after-return-httpresponse-in-django/3583527#3583527) to set the mime type and all that.

Security note: make sure your list of file names can't be generated by a malicous user!

- You don't want them injecting ""/home/admin/super_secret_document.png""
- You want them choosing restricted options that point to ""/mnt/filestore/<random_hex>/File1.PNG""
- If all of your paths are generated by your file storage in a sane way, you're probably good.

--- 

    import os
    import subprocess
    import tempfile
    from textwrap import dedent
    
    def combine_some_pdfs(*file_names):
        # use ghostscript to combine PDFs.
        # thanks http://askubuntu.com/a/257170/95296
        
        # open a temporary file just to get a file name
        batchfile = tempfile.NamedTemporaryFile(suffix='.pdf', delete=False)
        batchfile.close()
        # $ gs -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile=finished.pdf file1.pdf file2.pdf
        command = ([
                       'gs',  # ghostscript
                       '-dBATCH',  # exit when done
                       '-dNOPAUSE',  # no user interaction
                       '-sDEVICE=pdfwrite',  # use PDF writer to process the files.
                       '-sOutputFile=%s' % batchfile.name,  # output PDF
                   ] + [name for name in file_names])  # input PDF list,
        p = subprocess.Popen(
            command,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
        )
        stdout, stderr = p.communicate()
        
        # if something didn't work as expected, raise an error.
        # in production, this will send off an email that will help debug.
        if p.returncode or not os.path.getsize(batchfile.name):
            message = dedent('''\
            Something went wrong when PDF batching.
            The email has been canceled and you'll have to resend it.
            
            Return Code: {error}
            Batchfile size: {size} bytes
            
            Here's the output given by ghostcript, our batching software:
            
            COMMAND:
            {command}
            
            STDOUT:
            {stdout}
            
            STDERR:
            {stderr}
            
            ''').format(
                error=p.returncode,
                size=os.path.getsize(batchfile.name),
                command=' '.join(command),
                stdout=stderr,
                stderr=stdout,
            )
            raise RuntimeError(message)
        
        # reopen the file and return the contents. (for my workload, the filename is handled elsewhere)
        return open(batchfile.name, 'rb').read()
",1518824289.0
grudev,What if you merge all PDF files into a temp file and your view returns it? ,1518793096.0
ryselis,Is zipping them and returning the zip file an option?,1518798079.0
jobelenus,If you show your relevant code we could offer suggestions,1518790333.0
Lt_Sherpa,"> the available options in the filters include all data.

What options for what filters? I assume you mean the user choices?

Also, your product filterset is not a complete example. Either the `Meta.fields` or `Meta.exclude` option should be present.",1518833671.0
PyBet,"I also found out and tried the following:

	def __init__(self, *args, **kwargs):
		super(BetFilter, self).__init__(*args, **kwargs)
		self.filters[""bookie""].queryset = self.queryset.values_list(""bookie__name"", flat=True).distinct()

I thought that it would set the queryset parameter for bookie filter, but it complained that a queryset parameter was needed and even when I set as a placeholder queryset=Bet.objects.all(), so it would stop giving me the error, it displayed all the available options.
",1518844518.0
athermop,"You don't have to use any of that when you're doing Django dev on Windows...you just dev like normal.

However, you should actually use the environment that best matches your deployment target.

",1518713068.0
apreche,I use VirtualBox with Linux inside of it.,1518712692.0
extra_short_giraffes,"I'd recommend choosing the environment which best matches the environment you'll deploy it in. If you're going to deploy containers, choose Docker-Compose. If you're going to deploy in VMs, use Vagrant. And make sure that if you're going for VMs, that you put the configuration management files in the same repo, to make sure that your dev and prod environments are as similar as possible. Easy to do with Vagrant and Ansible, see here: https://blog.jetbrains.com/pycharm/2017/12/developing-in-a-vm-with-vagrant-and-ansible/",1518712437.0
porksmash,I use Vagrant -  because my prod environments are bare-metal Ubuntu boxes. ,1518714949.0
ffreitasalves,"I spent a few years developing apps for desktops and Django web apps on Windows. If you don't have a really good reason to use Windows in your development, avoid it. 
If you can't avoid it, try to work inside a docker container or a virtual machine (I liked to use vagrant for this). It will save you from the headache of having dependencies that doesn't work well on Windows, problems with filesystem and UAC. Using those tools you can have an dev environment more similar to production.",1518752327.0
JhonnDuff,"Docker / Vagrant are the best solutions available, at least that's my opinion. I had to use Windows for months and unfortunately WSL is not good enough, besides being slow (if you have a machine from years past, like mine, this can get worse).

Using WSL one of the problems was sharing ""programs"", then slowing down, mainly to restart DJANGO after some internal change in the development environment.",1518991780.0
haloweenek,I use regular python No fancy mojos Over that. No Vagrant docker and rest of that hipster stacks...,1518726167.0
jordanpwalsh,"Not running Windows, but that doesn't really matter in this context. 

I like docker because I've got a about 5 containers that are really portable that simulate the important parts of production (namely a clustered redis). Doable in Vagrant too, docker is just less resource intensive.
",1518709474.0
dynaken,No one mentioned Cygwin? I use it in place of Linux VM inside Windows. Python for windows have some weird quirks. Cygwin is almost 1-1 without being a VM. ,1518718893.0
twigboy,"Windows subsystem then treat it like Linux.

Or get easy_install py script and set up a virtualenv. Not too different in my experience apart from stuff that's compiled without wheel (postgres and MySQL libraries)",1518765691.0
ubernostrum,"When you subclass `UserCreationForm`, what you're saying is ""hey Django, I want a form that combines the things I wrote in my class, and the things that are in `UserCreationForm`"". And that's what you got: the first three fields are defined in `UserCreationForm`, then you added three fields in your subclass, so the result is a form with six fields in it.

If you want to subclass and remove fields, you need to set those fields to `None`, like so:

    class RegisterForm(UserCreationForm):
        username = None
        password1 = None
        password2 = None
        # ... put the rest of your form definition here ...

Your form still won't *work*, though, because `UserCreationForm`'s logic for creating a user is tied to its field definitions. Which is why, if you want to significantly alter the user model, you write your own form *without* subclassing `UserCreationForm`.",1518661477.0
ccb621,What’s wrong with Django’s built-in authentication system?,1518679154.0
gbrennon,Check this https://docs.djangoproject.com/en/2.0/topics/auth/default/,1518717517.0
StevenMercatante,"Auth is one of those few things I don't want to handle via a third party. Nothing against Firebase or Cognito, but auth is such an essential part of your app that it makes sense to have it as part of your codebase. Definitely check out the docs gbrennon linked to. I also like this package https://github.com/pennersr/django-allauth",1518911866.0
hhh333,"Very useful article.

I encountered the same questioning when I started using migration on larger projects with more devs.

I went for a simple hybrid method: I only add migration in master.

The devs never commit their migration files on their branch and they specify that new migrations are needed in the merge request.

It has worked pretty well so far.

And for everyone yelling to never delete migration files, this is not entirely true. As long as the application isn't deployed in production you can delete them as much as we need.

Personally, I like to keep things lean. While in dev at the modelisation stage I usually keep a `reboot-migrations` bash script in the project dir. It does what you think it does and I use it a lot. Once the application is deployed I remove the script and never use it again.

**Note**: I also start tracking migrations in git only when I know I ran my last reboot and I'm ready to deploy.",1518651075.0
NotSelfAware,"Covered by the article, but the most important tip is to **not delete migration files**. Seen so many people have issues with migrations because they erroneously assumed that keeping the full set of migrations was not necessary. ",1518625393.0
,"Can anyone enlighten me why django uses 000X.stuff.py for migration names, and if its important for django? Lets say i have 2 devs working on two features in need of migrations, both features are merged to master and rolled to production.

Now if both migrations start with the same number, is this a problem? If not there should not be any conflicts right? 

Most frameforks i have used have a unix timestamp_migration_name file that is committed, so the order does not really matter. Unless the conflict at the database level, but in this case its a diffrent issue.",1518638150.0
CodeByKyle,"Having to specify a migration in a pull request almost entirely defeats the purpose of migrations. Not just in this framework, but any framework. The idea behind a migration is to allow other developers to work independently, check in their code, and running the migrations will result in the same schema state. Having to note migrations in a pull request might indiciate why a field exists restrospectively, but it doesn't allow  developer control over the schema.",1518687257.0
Brandhor,"I don't think this has anything to do with the python version, it seems like you have a charfield with max_length=10 and you are trying to load a string larger than that, if you look at the stack trace when you run the migration you should see which migration is causing this error",1518600674.0
,"Looks good! Works! All the stats drop downs I tried worked, every link I tried worked. It loaded fast, it's simple and easy to get around. You'll learn to use CSS frameworks and templates in time, as well as some javascript to make things a little prettier on the front end. Nice work!",1518587147.0
the1kingdom,Good job,1518604083.0
theli0nheart,"This is great, congrats!",1518619171.0
WildlyUninteresting,"I was just curious. 
What made you choose Django versus any other language? Was it because of python?

Nothing against Django, it is a great. Just curious what factors helped you decide it was the framework for you? 

Did you find it as easy to learn as you hoped?",1518583036.0
academicbadger,"Looks good thank you for sharing. Just embarking on my journey into Django and always good to see ideas and using api as well to fetch data looks good. 

I’m trying to make it up bit as I go along with the test driven development guide. Being able to do tests as I go is amazing and revelation from prior php and MySQL pain :)",1518629700.0
thethc3,"I believe just doing this:

    class ExampleUpdateView(generics.UpdateAPIView):
        queryset = ExampleModel.objects.all()
        serializer_class = ExampleSerializer
        lookup_field = 'type'

Haven't tested that but the generic view is just looking for 'pk' by default. http://www.django-rest-framework.org/api-guide/generic-views/#attributes",1518577200.0
massover,"There is a problem with your urls. The generic viewsets expect a url keyword argument named 'pk', unless you overwrite it in your ViewSet. You can see the lookup_field attribute in the [generic view attribute docs](http://www.django-rest-framework.org/api-guide/generic-views/#attributes)

It looks like your url is using the url keyword 'type', which I don't think you want, as it doesn't look like it matches to any fields on your model.

Switching the url to this may fix it:

    url(r'^update_example/(?P<pk>\d+)/$',views.ExampleUpdateView.as_view())

And since you're using viewsets, have a look at [routers](http://www.django-rest-framework.org/api-guide/routers/) to generate your urls, they're a friendly abstraction.

",1518577399.0
Ake_Vader,Where's ExampleModelView that is mentioned in the error message?,1518606693.0
Kronok,"    # url(r'^get_example/$', views.ExampleUpdateView.as_view()),

Comment this out just to eliminate this being an issue. That url won't work with that view.",1518654183.0
alexthelyon,"I'd say Django's strengths come from its orm and app composition. Simply put, database access is simplified and reusing components such as authentication or apis is much easier. If you simply want a basic web frontend for a python app, you might be able to get away with  something with fewer 'batteries included' such as flask or bottle which can be much more straightforward.

I don't think a character creator needs any persistence so you're right you can get away without a database.

To get started you need to create your routes and think about how the data will be sent to the server (json, form) and how to split your script out.

One step further is ditching the backend entirely and writing it in js. It doesn't look like it relies on any varying data so I'd be inclined to drop the client server complexity entirely. But, that solution doesn't involve Django.",1518560043.0
academicbadger,"I’d recommend if youve not already try converting it using test driven development to Django. 

Obeythetestinggoat.com has great guide. 

Learning Django myself but for projects that are going to be very database heavy and it’s lovely! So much nicer than blinking WordPress (though I do admit WordPress is great for a bog standard webspace). 

There’s good guides on pythonanywhere.com as well. That site would let you host the app self contained as well. Another option :)

Djangogirls turorial. Really good but using older 1.11 version worth doing in viruslenv and then learning the 2.0 updates (mostly not using regex but path instead for urls and a lot simpler)!",1518564888.0
fergal-dude,Thanks everyone for the thoughtful responses.  This is a great board with lots of helpful folks.  I look forward to starting Django in a number of months so I can come back with questions.,1518615926.0
iconfinder,"Django uses the database quite heavily. If you don't want a database, there is little need for Django.",1518557983.0
gosh_djang_it,"I don't think you need Django for this...You would be adding tons of overhead to your project, tons of time learning stuff you really don't need. Django is really for projects that need databases. Your project seems more suited for client-side scripting, perhaps?  Learning Django takes a long time, why torture yourself needlessly.",1518559867.0
gosh_djang_it,"Holy crap I found the problem it is sheer madness. The dropdown menus need an `href=#` (like...literally a `#` in my code, not an actual address). So for instance:

     <a class = ""nav-link dropdown-toggle"" id=""leaderboardsDropdown"" role=""button""
          data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"" href=""#"">

This is one of the most insidious bugs I've ever had to track down! I found the answer at stack overflow:    
https://stackoverflow.com/questions/20960405/bootstrap-3-dropdown-on-ipad-not-working/20963048#20963048
",1518554466.0
haloweenek,Wrong sub,1518550465.0
gosh_djang_it,"It's almost always better to have lots of simple apps that do one thing each, instead of one app that does everything.  This makes it easier for debugging etc.. (Two scoops of django plus....programming common sense). I recently read that most modern django projects have 10+ apps.

I typically build apps around my models. If I have five main models, I usually have five key apps (plus a couple of others for utilities and core stuff).
",1518559627.0
ramse,"Perhaps

One App:

* query various config datasources and return results
* move customer specific config from one env to another (staging to prod, prod to staging, etc.)
* display running versions of code across our environments

Another:

* make api calls to various microservices to perform configuration actions or return data
* parse a csv and make api calls to import data

I also have an app I typically call core_data or configurables where I store all my project wide things like EmailTemplates, EmailQueue, Settings that are stored in the database...etc.",1518546234.0
pydanny,There's actually a lot of Django books that are current. See my curated list here: https://www.twoscoopspress.com/pages/current-django-books,1518536049.0
cortical_iv,"At worst, do 1.11, which is the most recent LTS. Or do 2.0.* to stay current.

1.9? Nope. Not even a LTS.",1518539427.0
daredevil82,"well, 1.9 ended support back in 2016, so you really should move forward.  The current LTS version is 1.11, and the next one won't be for a while yet. 2.0 has some breaking changes, specifically the removal of python 2 support.  

",1518530882.0
pat_the_brat,"If you're writing your own code, do it on 2.0. Less chances of it being deprecated down the line.

You can also write it in 1.11, then change the `url()` calls to `re_path()`, then to `path()`, when 1.11 is unsupported, but 2.0->2.1->2.2 shouldn't have any incompatible changes, so it should make your code easier to manage.",1518531809.0
FormalPatient,"I am facing the same decision/problem.
I would like to learn 2.0.2, but I am afraid about all the plugin and stuff already developed for 1.8+.
",1518554211.0
shady_traveller,"Why not, instead of making fun of them on Reddit, explain them what the problem is and how to correctly do what they're trying to achieve? Because quite frankly now you're being an asshole.",1518530035.0
Pr0ducer,"I wish I could see the context here.  I never use select_related because my current project does not use foreign-keys, but it looks like this code is trying to find notification objects related to whatever cls model is, but the IndexError will never happen, because that's not the error that's going to get raised when result.notification doesn't exist.  Can OP elaborate on why this is funny?",1518530189.0
flipperdeflip,Admire their creativity and teach them the way.,1518531772.0
i_amwithnail,"This is pretty douchy.  Never made a mistake?  Never known what you didn't know? If they're your intern, you're a shit mentor. And if they're an intern on your team or in your org, then that still applies.  

Frankly, if they've given it a crack, then they're doing better than 80% of new Stack Overflow questions.   Would rather work with them than someone who's going to be a dick about them not knowing something. 
",1518535935.0
the_nate_smith,"Your intern hasn't been shown how to do some things properly. Not their fault.

This is a great teaching opportunity about what filter() and get() and select_related() do as well as when a Model.DoesNotExist exception is raised by django, and if your going to talk to them about that, might as well tell them about Model.MultipleObjectsReturned exceptions as well.",1518560295.0
,You sound like a great person to work for..,1518570119.0
bhat,https://xkcd.com/1053/,1518556679.0
hoonboof,"You wouldn't, if you want an expert level knowledge of django you use it, you don't rewrite it. ",1518513545.0
grudev,"As you develop your own apps, you will probably hit some snags that will motivate you to look into the original source code (Class Based Views, I'm looking at you!).

This makes more sense than exploring a huge code base without ever having written any code with it. ",1518531566.0
meehow808,Maybe you can list things which are annoying for you in Django or can be significantly improved. I think they already did rewrite when Django 1.0 was introduced and 2.0 wasn't that serious change as 1.0. Are you planning some changes for Django 3.0? :),1518534941.0
booooomba,What have you researched so far? Where do you think you should start? Your thoughts? ...?,1518515276.0
jaht1989,Ajax,1518497893.0
flipperdeflip,"Ajax (or `fetch()` these days) to poll/pull new data, or something like websockets to actively push data.",1518528838.0
ramses_55,Jquery and ajax indeed,1518524943.0
kurashu89,"> For instance, if you use them for storing your Django’s Secret Key, you could put it here:

Please don't as it'll show up if someone analyzes the image, which isn't difficult to do at all.

>Docker Run Commands are kinda obvious. You’re running a command “inside” your container. I’m quoting inside because docker creates something as sub-containers, so it doesn’t have to run the same command again in case of rebuilding a container.

When you're running a build command, you're not dealing with containers you're dealing with images. Containers are running instances of images -- think classes and objects.

> Workdir is also kind of self-evident. It just telling docker to run the commands in the indicated directory.

A small nitpick at this point: Try to avoid words like ""self-evident"" or ""obvious"" when writing a tutorial or explanation unless something is really really obvious for your audience but at that point, why point it out?  And if you end up explaining something, it's not really obvious is it? Just something to keep in mind for the future, it's a hard habit to break.

Anyways, you're ultimately right about what WORKDIR does but it should be mentioned that WORKDIR will both create the directory if it doesn't exist AND change to it. So all commands you run are now relative to that directory.

> Copy and ADD are similar. 

They will both move files to the desired location. However, you should always use COPY unless you need the extra stuff ADD can do: auto unpacking tarballs and fetching content from the internet.

> Expose Instruction is for forwarding a port from Guest to the Host.

Nope, EXPOSE advertises a port as an available connection once the container starts but that's it. All by itself, an EXPOSE doesn't do much. 

> When you’re writing a file on a shared volume this file is being written on your container as well.

It's worth noting that it goes both ways: a RW volume mount will also write to your host as well. Worse, unless you take precautions, there's a very good chance that the process in the container is running as root. Not just any root, but the root on your host machine. That should set off some very big alarms .

> In this case, the current directory (.) is being shared as webapps on the container.

If I had a nickel for every time that sharing CWD screwed me, I wouldn't have to work any more. You should only share as much as absolutely necessary for dev or debug work. I find the src directory, a log directory and maybe an application local tmp directory for stuff like Redis images.

> Links

It's preferred to use networks, but links are good for local dev. But networks are really amazing and you should check them out.

> In order for your application to work, your database has to be ready for use before web container, otherwise, it will raise an exception.

The implication here is that depends\_on will solve this, but that's wrong. From the docker-compose docs:

> depends_on does not wait for db and redis to be “ready” before starting web - only until they have been started. If you need to wait for a service to be ready, see [Controlling startup order](https://docs.docker.com/compose/startup-order/) for more on this problem and strategies for solving it.


> Command is the default command that your container will run right after it is up.

This isn't actually true. `command` (and the Dockerfile `CMD`) is passed to the entrypoint of the image. The entrypoint is responsible for running the processes in the container. The interaction between CMD and ENTRYPOINT is actually surprisingly complex as there are two forms of each and each combination is a different behavior. I won't go into details as it'll be far too long.

IIRC, you've done the command form correctly for an image without an entrypoint. However, there is an issue with the script that is executed. You should `exec` the actual process to be run in the container, otherwise the shell script remains PID 1 and unless you've taken steps to forward commands from the script to the actual process, you end up with zombie processes in the container. `exec` causes whatever you exec to take the place of the shell script, meaning that your Django server will become PID 1 and receive signals directly.

> One can argue that run the migrate at this point, automatically, every time the container is up is not a good practice. I agree. 

I'd actually recommend creating an additional entry in the compose file that is responsible for running the migrations and goes away when its done. I thought I had an example ready for this, but apparently not. But the idea would be you have [an entrypoint like this](https://github.com/justanr/flaskbb-swarm/blob/master/scripts/launch) and you'd have an entry in your docker-compose that invokes it with the `db-migrate` (in this case, feel free to name your command whatever) as the command.

    services:
        migrate:
            build: .
            command: [""db-migrate""]
            # add links/networks to hook up to the DB here",1518498463.0
core_dumpd,"One thing that you're inevitably going to run into with this is lack of support of locales (docker base images tend to be VERY stripped down). It can break date/time and currency formatting functionality in Django. One way to get around it:

    FROM python:3.6-jessie
    
    RUN apt-get update && apt-get install -y locales
    
    # Configure timezone and locale
    RUN echo ""America/Toronto"" > /etc/timezone && \
    dpkg-reconfigure -f noninteractive tzdata && \
    sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    sed -i -e 's/# en_CA.UTF-8 UTF-8/en_CA.UTF-8 UTF-8/' /etc/locale.gen && \
    echo 'LANG=""en_CA.UTF-8""'>/etc/default/locale && \
    dpkg-reconfigure --frontend=noninteractive locales && \
    update-locale LANG=en_CA.UTF-8
    
    RUN locale-gen en_CA.UTF-8 && update-locale
    
    ENV LANG en_CA.UTF-8
    ENV LANGUAGE en_CA:en
    ENV LC_ALL en_CA.UTF-8

Adjust for your own locale/timezone needs. The above was borrowed from several SO posts and other various online resources that I unfortunately did not keep track of...

This may also work with the slim-jessie python 3.6 base image, haven't tried it.",1518496575.0
m0ei,"Just have an entrypoint bash script that has something like that:  


until python manage.py migrate --settings=project.settings.dev  
do  
    echo ""Waiting for postgres...""  
    sleep 2  
done  
        

Sorry on phone now.",1518472306.0
fkafkaginstrom,We use [dockerize](https://github.com/jwilder/dockerize) with the `--wait` flag,1518479004.0
rollc_at,"It's sad and incredibly silly, but a lot of Django projects I've seen do use a tiny Python script in the Docker entry point to poll & wait for the DB. (Other than that, a restart policy could also do the trick, but it wastes resources crash-looping and only hides the real problem.) Maybe there is a better way, that I do not know of, but as of today, entrypoint polling is what works.

If ""works out of the box"" is your end goal, that's your solution.

May I inquire as to why exactly (putting elegance aside) do you consider this unsuitable for both dev & prod?",1518472518.0
GoodOldBoys,"Why wouldn’t the bash script example in the linked docker docs work? It looks perfectly suitable for a dev environment. And prod should be completely different and not require the functionality you’re asking for here, so it seems like it would work fine. What am I missing?",1518472605.0
Investisseur,"Wait wait wait

use:
backend:
  restart: always

So if it dies with exit code due to not connecting, it'll try again ",1518484458.0
ffreitasalves,"Now you can use links, instead of depends_on. If it doesn't work, try this file, I've used it before and it helped: https://github.com/vishnubob/wait-for-it",1518486306.0
eljohnsmith,As it is as suggested. This is what I use and it has not failed. https://github.com/pydanny/cookiecutter-django/blob/master/%7B%7Bcookiecutter.project_slug%7D%7D/compose/production/django/entrypoint.sh,1518531818.0
booooomba,"2.0 !!
Why would you start with an older version?",1518462183.0
BlueSnakeYellowSnake,"1.11. If you're going to be looking for your first programming job you'll most likely be working with 1.8 or 1.11, and 1.11 is the most recent LTS. I don't think the next LTS is until 2.2, which is still relatively far away. You'll also find way more tutorials (and stack overflow questions/answers) for 1.11 than you will for 2.x",1518475134.0
gosh_djang_it,"Definitely not 1.8. I can see 1.11 as it is the LTS version right now and most books and tutorials cover that. 2.0 is better though I'm using that and haven't regretted it, it is very stable.",1518465441.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1518461215.0
rnevius,"In my opinion, any article about Django migrations is incomplete if it doesn't include a mention of the `--dry-run` flag. It's easy to get in the habit of just blindly running `makemigrations` and `migrate`. `--dry-run` will let you know what is going to happen, before any files are written and before your database is altered. [Source](https://docs.djangoproject.com/en/2.0/ref/django-admin/#cmdoption-makemigrations-dry-run)",1518472779.0
apreche,Use the media storage API. ,1518439237.0
oliw,"I don't know how you're generating this stuff —you never said— but regardless, there's nothing wrong with [creating a temporary directory](https://docs.python.org/3/library/tempfile.html#tempfile.mkdtemp) to do your work in. Just remember you need to clean up after yourself.

That may be easier than trying to find a way around this (which may or may not exist).",1518439758.0
,[deleted],1518440186.0
jedi_stannis,"Use a through model for the many to many relationship https://docs.djangoproject.com/en/2.0/topics/db/models/#intermediary-manytomany
Store the order on there as a positive small integer field.",1518350681.0
mick88,"I use this library, which works fine. It remembers order of adding items and it allows you to drag and drop items in django admin to reorder them. It's compatible with django's m2m field so you don't need to change any code.

https://github.com/gregmuellegger/django-sortedm2m",1518365002.0
akoumjian,"I recommend not using a real M2M for ordering. If you are using Postgres use an ArrayField and store the foreign keys in that array. Then you can serialize / render them from that array.

Using a through table on M2M or even a position field on a set of reverse foreign keys will be an absolute pain to keep synchronized and updated. When rows get moved, inserted and deleted, you will be in a world of fun making sure all the other positions are correct.",1518373485.0
i9srpeg,"Either add an order column, or when updating the M2M relation, always clear the relationship and then re-add the records in the desired order. This way, the primary key of the linking table will be increasing in the desired order, and you can sort by that. The first solution (separate order column) is much clearer and should be preferred unless you can't add a custom through model for legacy reasons.",1518353199.0
callius,"Sorry, I'm on my phone and can't fiddle about with stuff right now. So this is just a suggestion, but could it perhaps be because your `__unicode__` method is within the webtoken class and referring to the M2M field value rather than the instances of the `webfield_type` that they refer to?

Would `self.web_field_type.get_webfield_type_display()` do the trick? 

I'm not sure. Like I said, on my phone and can't test or fiddle about with it myself. Just a thought.

I do wonder about referencing a many field in your `__unicode__` method. I've never done it, so I don't know how it would react. Like, what will happen when a single instance of WebTokens has multiple `webfield_type`s associated with it? Will `__unicode__` be able to iterate over the dict or will you need to have a `for loop` in it to do that? My guess is the latter. But, again, on my phone.

Finally, you may want to standardize the variable names between the models (is it `web_field_type`, `webfieldtype`, or `webfield_type`?). Also, a good practice is to make the M2M field a plural version of the model it refers to (e.g. `webfield_types`). [See the docs here](https://docs.djangoproject.com/en/2.0/topics/db/examples/many_to_many/). The reason to do so is exactly because of how I referred to the instance of the M2M above: you could use `self.webfield_types` and instantly know that it refers to a plurality of them rather than `self.web_field_type` and have to remember that this is actually the name of your M2M field in the `WebTokens` model.

Sorry that I couldn't be more helpful. Hopefully this at least points you in the right direction.",1518547829.0
callius,"So, in addition to my other post, I did some more digging. [It looks like you might need to run a query, iterate over it, and turn it into a string.](https://stackoverflow.com/questions/39729238/manytomany-relationships-returning-fields-in-def-str-method)

This may not be identical to what you're encountering. Hopefully it helps.",1518548531.0
dorsal_morsel,This is actually covered in the FileField documentation. Read the part about passing a callable to upload_to: https://docs.djangoproject.com/en/2.0/ref/models/fields/#filefield,1518327225.0
njancsar,So basically just follow the documentation of Django?,1518305588.0
haloweenek,"It’s a bad idea to drop choices into model class. I have them in separate file, useful with import...",1518341252.0
CKreuzberger,"Always talk about common pitfalls. Maybe even show them in your videos ""on purpose"" (read: make the same error that you already made again, on purpose).",1518558477.0
jinchuika,"Looks awesome! Since you're asking for feedback, I'd suggest:

- Add Https, [Let's encrypt's](https://letsencrypt.org/) ones are very easy to install.
- Don't log stuff to the console unless that's really intended ;)
- When you click on ""Users"", are you actually listing ALL of them? That'll break someday if (hopefuly) you get a lot of users (pretty much the same with any list)

Any way, great work!",1518292889.0
Alex3917,"For Django newbies who want another example of what's possible, we also built https://www.fwdeveryone.com using Django and DRF. 

That's probably a more straightforward social network in terms of having a newsfeed, user profiles, following, commenting, embedding, etc. And of course Instagram is probably the canonical Django social network example.",1518293558.0
TripleSnipe,"What is the frontend you are using?
Also really nice work.",1518285865.0
jefwillems,Can you share the code?,1518313487.0
parthkrishna1611,"That's really good
You know, I actually thought of creating a social network based on Django for my project.
Now I gotta think again.
Any suggestions please?",1518332488.0
checkYourCalendar,"Looks good. Do you plan on taking this mobile? If so, how would you go about it?  
""Create a new board"" and ""Post a new subject"" don't collapse properly as you resize to a smaller screen.  

How did you go about implementing the ""loading wheel"" that spins as you wait for page transitions? ",1518412046.0
tularem,"[Search bar could use some tweaking ](https://i.imgur.com/5coiKno.png)

[As could the navbar dropdown ](https://i.imgur.com/bp7YSoW.png)",1519004758.0
OuchYouHitMe,"Needs a bit more mobile support. The google captcha is wider than the page and adds a white bar to the right. Move the captcha all the way left?

Also the form labels take up almost all the space, only about 3 characters can be seen at a time.

And the dropdown menu button on the top is positioned a bit to the left, but when you click on it, it moves to the right edge.

And that is what I noticed in the first 30 seconds. Maybe you are not planning to support mobiles at this stage, but first impressions are important.",1520029557.0
never_safe_for_life,"I would refactor into Python modules, not Django apps. With views.py, simply create a folder named views and put an `__init__.py` in there, then split the `views.py` into whatever you want: users.py, backend.py, etc. 

Have `__init__.py` import everything from those sub-views files and boom, your module acts just like it were a file. You won't need to change any import lines anywhere else.",1518308737.0
TunaBoo,"Is any one part an app that future projects will want to borrow? Say an auth app? Then split that out.

If you aren't going to need that, keep it a monlith. You can have a views folder instead of a views file. My current app has 10 views, each with an average of 1000 lines. Works great.

Multiple apps only makes sense if you are needing to reuse part of the app in a different project.",1518279557.0
bhat,"Look at foreign key relationships between your models. If there are any models that don't have any such relationships, then they're candidates to be split into their own apps (along with their views, etc.). That doesn't mean that they should be split, just that you could consider splitting them out.

One exception would be a custom user model, which you could split out even if other models refer to it, because Django has [good support for custom user models](https://docs.djangoproject.com/en/2.0/topics/auth/customizing/#substituting-a-custom-user-model).",1518556586.0
kankyo,"1000 lines? Heh, we used to have I think it was 15k or so in one file at work before starting to split it up.. still close to 10k. 1000 lines isn't a lot, don't worry about it.",1518345263.0
pat_the_brat,"Just get an Ubuntu VPS and install Django 2.0 on it yoursel.

https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04",1518273550.0
booooomba,Just do it yourself. DigitalOcean has EXCELLENT guides. Even if you had no idea (which I hope you have) you just need to follow the guides step by step.,1518273447.0
tkc2016,"This would be a great opportunity to look into automation tools, like ansible. Get it running once that way, so next time you can point it at a new VM and let it go.

I personally compile python to get the latest and then put everything in a virtualenv, but I'm experimenting with docker options too.",1518274760.0
Bohbo,Do it from scratch you will learn a good deal about all the moving parts. ,1518277943.0
i_amwithnail,"I found the one-click on DO disproportionately difficult.  I spent as much time configuring stuff for that as I do doing it from scratch.  It  might save you some time the first time out, but that's about it.  I'm mildly surpised DO is still using 1.8, as although it's a Long Term Support release, that extended support stops in April 2018. 1.11 is the latest LTS that still supports Python 2.7.  (This is all by way of agreeing with the others - do it yourself and install 2.0.) 
",1518274468.0
tagnydaggart,"Installing Django from scratch is pretty easy and there are a number of blogs that walk you through it. The ‘hardest’ part is probably the uwsgi/nginx (or alternatives) setup, which is essentially identical for all versions of Django.

The actual setup of Django is normally done of your local dev machine first anyway, and deployed to your remote server. The only difference *should* be using uwsgi and nginx (or alternatives) instead of the local runserver.",1518281645.0
iMichael_,"It's simple. Just launch a few droplets via Docker-Machine, then create a Docker swarm cluster. Then Dockerize your app and push the image an image repo. Then run that image across all the nodes for high availability with env vars exported so they can connect to the DB and stuff. Oh yeah don't forget to setup an RDS instace in AWS for the data and setup a load balancer and cloudflare.

/s",1518497509.0
Llywedd,Do it manually or what I do is build the base server and then import my django project from github. I did it for my newly launched site [Bargain Forest UK](http://www.bargainforest.co.uk),1518284487.0
elingeniero,Use the DO Docker image and deploy your Django app in a docker container. ,1518342737.0
DmitriyJaved,There is Django-silk that allows measuring of AJAX timings,1518254936.0
rjhelms,"I'd love to find a better way to this, but I basically end up with something similar every time.

What I've taken to doing lately is have all this logic being in the template layer, rather than using request.path or something that comes from the context.

So, for example, my `home.html` template might have:

    {% block header %}
        {% include ""myapp/include/navbar.html"" with active=""home""%}
    {% endblock %}

and then in `navbar.html`:

    <li class=""nav-item {% if active == ""home"" %}active{% endif %}"">
        <a class=""nav-link"" href=""{% url 'home' %}"">Home
            {% if active == ""home"" %}
                <span class=""sr-only"">(current)</span>
            {% endif %}
        </a>
    </li>

Maybe it's silly, but I feel a lot better having all this just live inside the templates rather than being dependent on urlpatterns or view layer stuff.",1518216055.0
lzantal,Use JavaScript for it. No seriously it’s the simplest way to go. ,1518226197.0
davidkwast,https://django-simple-menu.readthedocs.io/en/latest/,1518221371.0
ramse,"I wrote a template filter to make it easier on me:

    @register.simple_tag(takes_context=True)
    def menu_item_active(context, value, display_hide=False):
        try:
            view_name = context['request'].resolver_match.view_name
        except:
            return ''
    
        default = '' if not display_hide else 'display-hide'
    
        if isinstance(value, list):
            return 'active open' if view_name in value else default
        else:
            return 'active open' if view_name == value else default

In my menu template file I have:

    {% load menu_tools %}

and then for highlighting:

    <li class=""nav-item {% menu_item_active 'games:index' %} "">

So now whenever games:index is the current page, `active` and `open` are added to the class.

For when the menu has multiple items and you need the active/open on it (say you group menu items and the top menu item needs `active open` so that the child item can also be highlighted, I use a template context that stores the menu layout as I want it.

    def menu_structure(request):
        menu = {
            'games': ['games:index', 'games:entry']
        }
        return {'menu': menu}

Then in the template i use the following on the parent item:

    <li class=""nav-item {% menu_item_active menu.games %} "">

and the child has

    <li class=""nav-item {% menu_item_active 'games:entry' %} "">

So if we're on the games:entry page, it'll highlight the parent and the child accordingly.",1518228361.0
kankyo,"You’re on the right track. But did you put request in the template context? Does it have the path attribute? What is the actual contents of that attribute? 

Print values and see what they are. ",1518213678.0
raiderrobert,I've used this before: https://pypi.python.org/pypi/django-activeurl,1518237275.0
tyrdall,"Simply use Django's `resolve` function.

Example: https://github.com/bitlabstudio/django-libs/blob/master/django_libs/templatetags/libs_tags.py#L278

Usage: http://django-libs.readthedocs.io/en/latest/libs_tags.html#navactive",1518270113.0
daredevil82,"About the only thing that's really missing in django that you probably used in rails was asset pipelines.  There's no direct equivalent.

Other than that, python tends to be more explicit than ruby's implicitness",1518209452.0
igncampa,"I've never used RoR or Ruby for that matter but I think a good approach would we to go through the [official tutorial](https://docs.djangoproject.com/en/2.0/intro/tutorial01/).

When you're done with that and get a hang of the basics think to yourself ""ok I know who to do X on RoR and it was not covered in the Django tutorial"" and then gogole ""Django {0}"".format(X) ;)",1518207831.0
siliousmaximus,OOP in python,1518213598.0
docclox,"Use crontab and a management command.

That's how I did it, anyway.",1518185868.0
dorsal_morsel,"Crontab is a good option.

If you want to use a Python based option, a task queue like Celery or Huey will do the trick.",1518186696.0
tagnydaggart,"What I do in situations like that is to create a management command that does the thing you need. That makes it easy to test, and, gives you the power to easily run the task on an ad hoc basis if needed. Then, as others have suggested, it is now trivial to call that command via a crontab.

A nice Django “wrapper” of sorts for managing tasks executed via crontab is ‘kronos’ (https://github.com/jgorset/django-kronos)

If you find you need a lot of async tasks, or require more flexibility/functionality, have a look at Celery.",1518189804.0
apreche,Celery is the way to go. ,1518190720.0
booooomba,Also throwing in systemd-timers. I prefer those over crontab. ymmv,1518188592.0
pat_the_brat,"If you already have the task running in Django, with a secret key, you can also use `cron` with `curl`, or something similar.

Just have the scheduled task call something like `curl  --insecure https://localhost/api/caller?secret=MySecretKey`. Not the most elegant solution, but I have it running on a PHP server and it works fine.",1518200771.0
jithurjacob,I have 2 pending issues that needs help with. Thank you https://github.com/jithurjacob/Windows-10-Toast-Notifications/issues,1518103945.0
mhall119,I'm developing https://gettogether.community a Django based alternative to meetup.com and I'm always looking for new contributors,1518136335.0
dzecniv,"Hello, there are many things to do in my project :) https://gitlab.com/vindarel/abelujo a free software for bookshops.",1519043097.0
jobelenus,"Frankly, if I'm hiring a junior programmer I'm looking for a very specific person (and a bunch of what is below has been said by others).

Here is what I won't have a junior developer doing:

1. Making architecture decisions.
2. Making technology decisions.
3. Estimating features/timelines.

Here is what I will have a junior developer doing as the majority of their jobs:

1. Fixing bugs (best way to learn whats going on).
2. Taking small features from zero to done.
3. Helping to complete larger features that aren't quite done yet.
4. Writing any internal tools/scripts that may be necessary (nothing mission critical like backup scripts, or devops)

What I'm looking for most in a junior developer:

1. The desire and ability to learn quickly.
1. The desire and ability to learn quickly.
1. The desire and ability to learn quickly.
2. Not adding to the bug count unnecessarily. (There will be bugs, but we are in a fight against entropy after all).
3. Completeness, and testing their own code.

Things every developer needs to be able to do:

1. Communicate what tasks are easy while dong your job (either you're good at it, or you're missing something about why it isn't easy).
2. Communicate what tasks are difficult while doing your job (either you're bad at it, which is fine, or you're missing something that will make it easier).
3. Communicate honestly what you're working on and how far along you are and whats left.",1518105669.0
chjacobsen,"We generally hire more on general programming skill as opposed to Django specifically. Django isn't the kind of tool where you need 5 years of professional experience to get productive. There's an initial hill to climb while figuring out where everything is and how it fits together, but beyond that point, the framework sort of gets out of your way. A personal project or two would be quite sufficient if i was hiring a junior developer, assuming they were otherwise skilled coders.",1518103782.0
crunching_karma,"You will never become ready for the interview beforehand that's why you actually should try one or two. It may happen that manager will not ask Django related questions at all or maybe soft skills for junior are more important for him, you'll never know. Also usually they will give you a test homework, so you should try it and see if you are able to complete it.

For junior I would look on things like: is this person an asshole? does he want to learn? Maybe some generic questions about python generators but it doesn't really matter if position doesn't require scientific knowledge and web development positions don't in 99%

But don't feel despair in case of reject! This is part of the process, you will get experience and knowledge about your weak points - it's a win-win situation with possible job as a bonus.",1518102799.0
SqueakyCheeseCurds,"* A desire to learn
* Good communication skills
* The ability to design a basic data model (good understanding of 1:1, Many:1 and Many:Many relationships)

If you want more specifics, perhaps something directly related to Django, read the job openings on Stack Overflow: https://stackoverflow.com/jobs?sort=i&q=django",1518102437.0
SlightlyMadman,"If you've been building applications on your own already, just make sure it's up in a public github repo, and that the code is good and clean (PEP8).",1518108347.0
mattwritescode,"For me a junior developer role is primarily a learning role. Soft skills are a lot more important than technical skills at this level, that being said:

* a solid understanding of python is a must
* you do not need to know django
* depending on the role you should know javascript

Soft skills:
* good communication, spoken and written
* self starter
* be willing to do the boring bits
* ++ they must know their limits and limitations. I cannot get over how important this is. Those who know their limits learn faster and smarter.
* must be willing to be out of their comfort zone regularly
* must be willing to put their hand up and say 'I do not know the answer'. 

",1518164061.0
oliw,"Possible, sure. Completely untested:

    from django import template

    register = template.Library()

    @register.filter(takes_context=True, is_safe=True)
    def as_template(context, value):
        return template.Template(value).render(context)

And load that then `{{value|as_template}}`. It'll pass the context right through.

**Edit:** that won't work quite like that because `register.filter` doesn't accept takes_context. You'd need to do this as a tag rather than a filter... But I really CBA retooling the post to do this.

But yeah... Obviously, this gives whomever can write to the template an amount of executional power over the website. This may be an issue. It might not. It just strikes me significant that there isn't such a simple templatetag bundled in the default library.",1518096664.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/djangolearning] [Shower thought: Is it possible to create a filter that allows users to use Django template tags in text input, the same way Wordpress handles shortcodes? • r\/django](https://www.reddit.com/r/djangolearning/comments/7w4sdg/shower_thought_is_it_possible_to_create_a_filter/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1518096957.0
mode01,"Change  - (TemplateView, LoginRequiredMixin)

To  - (LoginRequiredMixin, TemplateView)",1518093866.0
DmitriyJaved,Oh man you should really dig into python style guides,1518084280.0
dadwal_akshay,"i can contribute, but i am a begginer with django so i'll contribute to learn django better. ",1518080478.0
FreePotatoFries,It seems like an interesting project but I have my hands mostly full for the next couple of weeks. Good work!,1518081161.0
stay_at_home_daddy,"The project looks interesting.  I'm a beginner as it comes to django and I would love to contribute, but there are no test nor real documentation.  ",1518103335.0
academicbadger,"Hello thank you for posting your project. 

I’d recommend starting to add to your tests.py file

Maybe start with your functions for adding and removing items form spaces?

Really good guide on Django website:-
https://docs.djangoproject.com/en/2.0/topics/testing/

I think your using older version of Django so may need to adapt it slightly. ",1518203645.0
seashorepartner,https://www.seashorepartners.com/python/,1518443427.0
george-silva,"There are two migration methods available RunPython and RunSQL 

Check the docs 😁",1518060776.0
flipperdeflip,"Are you really sure you (still) need to use a manual migration to add enhanced indexes?? Since 1.11 there is an API for this: https://docs.djangoproject.com/en/2.0/ref/models/indexes/

If that doesn't cover your parameters I'd see if I could use this same framework and implement a custom Index and get free migration support.",1518090888.0
ccb621,"Honest question: why do you want to go the microservice route? What problem does that particular architecture address? I ask because microservices don't make sense for everyone.

Answering your question, when I was at edX, every service had its own repo and deployment configuration (e.g. Ansible, Terraform). We operated under the principle of independently-deployable applications, hence the separate deployment configuration and ""hardware"" (EC2 instances). This makes sense for an organization of our size, and our needs to scale certain functionality.

Beware the overhead associated with a services-oriented architecture. You need to manage multiple repos, deal with cross-service API versioning, maintain stage/prod environments for each service, etc.",1518055182.0
igncampa,"From [Channels 2.0](https://www.aeracode.org/2018/02/02/channels-20/)

> This does all come at a price though, and that price is one of the highest you can pay as a user of a piece of software - no backwards-compatibility. The concepts in Channels 2 are the same, but you will absolutely [have to change your code](http://channels.readthedocs.io/en/latest/one-to-two.html) to make it work if you are porting from Channels 1.

Edit: [reddit thread](https://www.reddit.com/r/django/comments/7v0lu8/channels_20/)",1518063799.0
jobelenus,"Is there something wrong with the example in the docs? https://channels.readthedocs.io/en/latest/topics/consumers.html#generic-consumers

I didn't use v1, but I've used v2 quite a bit now and it works pretty great for me.",1518057420.0
aera,Sounds like you might have this bug: https://github.com/django/channels/issues/882 ?,1518066006.0
jeffbaier,"No but I would like to, so I'm following this topic closely.",1518050543.0
Niicodemus,"`path()` takes a string, not a regex. Either change your second pattern to `path('signup/', views.signup, name=""signup"")` or use re_path instead, so it would be `re_path(r'signup/$', views.signup, name=""signup"")`.",1518037273.0
WesternHarmonica,"I am a bit confused too. Just started learning django, but almost every tutorial explains how to use url instead of path. Are there any nuances here?",1518036404.0
SqueakyCheeseCurds,"I was a software developer in the .NET world. I decided to move across the country and try my hand at a SaaS for shuttle reservations. That failed, so then I started to pick up more clients for freelance work that were looking for Django stuff. With enough work over time I learned the framework pretty well, but not entirely.",1518117080.0
Investisseur,"Django management command or not, use boto3 to upload the file. since they are larger files you can do a multi part upload. when completed save all of the data from the S3 object to a DB model? doesn't seem to complicated, believe this could all be accomplished in a utils.py in a Django app.",1518040290.0
Investisseur,"Ah. My approach would have been for if the files were on the same server. To achieve what you want:
- make python app (installable via pip is a plus)
- in python app, use os lib to access video files, upload to S3 using boto3, upon completion use data in response / custom data to make a POST request to a DRF ModelViewSet to create the new object that your server has
- if you want to check the S3 bucket periodically for changes use celery tasks orchestrated from Django server ",1518053262.0
flipperdeflip,"Option 2 is more robust and would allow for different methods to put files on the bucket, like a local script or some 3rd party S3 browser GUI tool or even a browser-based direct-to-S3 upload (there are apps that allow secure uploads to private buckets with some pre-signing magic) or anything else. 

You maybe won't even need to create your own CLI tool to put large files on S3; you can upload with the AWS CLI or one of many tools on pypi (or npm or whatever).

Then indeed a script to look for new uploads. 

Or even better you could configure an S3 Event via CloudWatch to trigger a SNS notification and subscribe your Django app to that topic and trigger your database update code from the event. It is a little more involved but not that hard. The even handler is just a HTTP endpoint with some requirements (easy to do yourself or grab some code from pypi)

If you wan this fancy (and cheap) you can make it serverless: you could use for example Zappa framework to deploy a small Django app as a AWS Lambda function that subscribes to the SNS topic and updates your database. (or skip Django here and use a pure python AWS Lambda function, or Flask etc)

If you want it with less Django you can just connect to the same database from whatever language/framework and query the database with SQL directly, but of course you won't have the python-based model functionality. You could also store the processed meta-data instead, maybe in a simpler non-django RDS database, or as JSON in Redis/Memcached in ElastiCache, or like DynamoDB, S3 or whatever.",1518090600.0
CraigTorso,"You can just pass a dictionary as a context to the Template, and render that.

https://docs.djangoproject.com/en/2.0/ref/templates/api/#rendering-a-context

By the by, there's /r/learndjango which is probably a better place for questions",1518018889.0
coredumperror,"This sounds like a perfect use case for the `render_to_string()` function: 

https://docs.djangoproject.com/en/2.0/topics/templates/#django.template.loader.render_to_string

I use it all the time for rendering templated emails that my apps send as notifications. You just pass in the name of the template, e.g. `'my_app/notification.template.txt'`, and a dictionary for the context.",1518049073.0
Investisseur,to generate templates without requests sounds like you just need a template rendering engine. just use jinja2 in a python function to create your own files,1518040384.0
bpeller,"1) What's wrong with Rails, that Django would be better at? (aka why is it worth the effort of porting?)

2) Make sure you really, fully understand the business logic, and why things were done the way they were done in Rails. A lot of times all ""those stupid hacks"" are actually important corner-case bug fixes that somebody forgot to comment.

3) If you decide you really want to go through with it, personally, I'd recommend ""one thing at a time"" - as in, don't change the data structure/naming at the same time as you're porting business logic. Too many things to keep track of, and get confused about, IMO. If you need to reference how the old app does X, much easier to grep for things if you're not constantly needing to ""translate"" between new/old naming. There's only one ""master"" set of data, with no migrations to mess up. If you later decide it's too much work, gonna throw in the towel, the old app won't need any updating to work with the latest state of the data.

4) #3 said, if data relationships are flat out wrong, by all means fix them. But fix it to be how you want in production (rails), migrate the data in production, and use that new data structure for the port.",1518018689.0
take_whats_yours,Is there a fb group for these meetups in the region?,1518060993.0
Ake_Vader,"Think this was just a case of badly configured serializers, i.e. too high depth parameter. :I",1518071921.0
bufoaureus,The best way to push a new code is pushing the code without your local database. You motioned you use git so just add your sqlite file to the gitignore and don’t add it to the zip file. After uploading code run the migrate command on the server to update database schema if you’ve added new migrations. ,1517985730.0
import_python,"It sounds like you're committing/zipping your sqlite database and overwriting your live/production database with you local copy.  Although manually copying your local DB & code to your server may be an easy way of getting the latest code changes to go live, this is the least ideal deployment setup.

You should never overwrite your production database with a copy from anywhere else.  Your production database should be the single source of truth compared to any other database instance or copy.

A ""best practice"" would be to use something like Ansible or Fabric to script out a repeatable deployment process that essentially:

* SSHs into your production server
* Pulls the latest production-ready source code from your source control
* Runs **migrate** against your production database (Note: migration files *should* be committed to your repository; you shouldn't have to run **makemigrations** on your production server)
* Runs **collectstatic**
* Reloads the webserver (nginx/apache/whatever) to run the latest source code

Also, if you need to push new *data* to your production database, the best practice is to use a [data migration](https://docs.djangoproject.com/en/stable/topics/migrations/#data-migrations).

Now, if you haven't set this up before, it can be a substantial learning curve the first few times around.  There are access controls, deployment keys, configuration files, new scripting frameworks, etc. that you need to work through.  But having gone through that somewhat painful process some time ago, it's definitely worth it.  It's one of the biggest differentiators between a junior Django dev and a senior one.",1518015110.0
Zalozba,Dumpdata and loaddata can be used to transfer content between the dbs. You need the migrations to set up the new models in the database. What db are you using on prod server?,1517985105.0
yee_mon,"If you are indeed using sqlite you have to make sure the database is not in your repository. In fact, it should be outside your source directory so you don't overwrite it when you deploy. Consider this layout of its compatible with your hosting infrastructure:

Hoster/
+ db.sqlite
+ project_dir/
--+ manage.py
--+ app1/
--+ app2/

Don't be tempted to create migrations on the server! That would invalidate your tests, and make it completely impossible to have data migrations.

It sounds like you are just starting out and have barely scratched the surface of what's possible with Django. Have fun on your journey!

Edit: Does your hoster not provide a RDBMS? In that case maybe everyone here is answering the wrong question and you should be asking something along the lines of: How can I have different database settings on my server than when developing?",1517991340.0
thomasfr,"you should not store production data in the same directoru as the application code.

if you application is installed /opt/my-app you could save your sqlite database file under /var/local/my-app or whats most appropriate for the operating system you are using.",1518010545.0
,[deleted],1517985645.0
igncampa,"I have come to learn in my self-teaching journey that once you start looking for ""more than the basics"", it's time to start working on a project you will go hard at, and as you continue to make progress and come up with new ideas, new questions will arise, more problems and roadblocks will show up and by solving those is how you go beyond the basics.

That has been my approach though, there might be a magical recipe out there. In any case, people will probably recommend [Two Scoops of Django](https://www.amazon.com/Two-Scoops-Django-1-11-Practices/dp/0692915729/ref=sr_1_1?s=books&ie=UTF8&qid=1517958465&sr=1-1&keywords=two+Scoops+of+Django+1.11). I, however, haven't read the book.",1517958610.0
tiagval,"It is not exclusively a Django tutorial, but I really like this test-driven development book, that teaches you to build a to-do app with Django, using TDD. You get to learn two things at once, it is really well written. I am going through it and so far I love it.
http://www.obeythetestinggoat.com/",1518001865.0
gratteux68,There are nice videos at [GoDjango.com](http://godjango.com). ,1517974075.0
shabda,I don't think there is anything like that available which is open source and off the shelf.   ,1518006824.0
scaphilo,"hey i know this is a quit old post but as you did not receive any good feedback yet - could you maybe sketch your requirements in more detail. I working on an open source django crm called koalixcrm ""[https://github.com/scaphilo/koalixcrm](https://github.com/scaphilo/koalixcrm)""   
I would put your request on the open issues and see whether others would also like to see this feature

From what you write it seems quite easy to implement. It will be just persons that require some additional  
",1531340516.0
shabda,"All the three use cases you mentioned are simple and basic uses of Django+DRF. With Chat too, unless you are looking to send millions of messages a day, its fine to use a simple API and a polling on client side. Don't complicate it for an MVP.",1517936723.0
joelschopp,For Auth consider django-allauth,1517968317.0
dynaken,I would not use Django or DRF personally. You should look into connexion which uses swagger for API. ,1517937101.0
superchink,"I highly recommend two scoops of Django. A solid reference filled with best practices. 

It’s not updated for 2.0 but it’s all still useable. 

https://github.com/twoscoops/two-scoops-of-django-2.0-code-examples/blob/master/README.md",1517939933.0
CKreuzberger,"Literally go with anything that uses Django 1.11, that's currently the long term support release which you need to focus on.

Switching to 2.0+ is easy enough, though I don't recommend doing this yet. The next long term release is Django 2.2, and it is scheduled to be released around mid 2019.

See https://www.djangoproject.com/download/#supported-versions for more information about release schedules.",1517945272.0
notParticularlyAnony,"If you have done one tutorial, just start a project and learn what you need as you hit each wall. And you will hit. Many. Walls.

Reference: have hit many walls.",1518099486.0
,[deleted],1517938100.0
chrisshyi13,Django 2.0 is probably too new at this point. If you read a book on Django 1.11 I'm pretty sure you'll be in a good position to learn 2.0,1517976201.0
spookylukey,"For material, you might want to check out all the things I retweet here - https://twitter.com/djangoadmintips
",1517938553.0
pizzathief1,"can you cover topics on creating dashboards, or showing graphs in admin?

also, the packages in https://djangopackages.org/grids/g/admin-interface/ would be nice to get some coverage too.",1517970750.0
PM_ME_STALLMAN_MEMES,"I would definitely read such a book, despite the fact that I regard the official documentation as very high-quality.

Glancing over the outline and some of the chapters that you put up, I like the organization and content of your book very much -- it is condensed and straight-to-the-point. What you refer to as ""cookbook format"" seems to be a good fit for this type of writing.

And I absolutely love the fact that you are making the book available freely -- you rock! ;)",1517975651.0
naught-me,"I love having more Django resources, and I'm a fan of the cookbook layout.

I don't currently use the admin much, though - am I missing out?  Most of the admin stuff I've done is pretty customized, so getting up and running with little effort wasn't worthwhile if it made customization more difficult.",1517933859.0
please_to_help,"Man this is perfect, this is literally what I need. I find the Django admin to be one of the most powerful tools in my practical programming toolbelt, yet digging through Django's documentation to figure out how to do a particular thing can be pretty daunting. This is perfect, thanks! I hope you continue!",1517947186.0
scorpioxy,"Very nice!

The information you included is easily search-able information but you can sort of say the same thing about any book describing a framework. There's no reason that your book wouldn't become the reference for these sorts of searches. Only the issue of updating the ""recipes"" to keep up, which you're taking care of by making it a repo. 

The cookbook format is a little dry, in my opinion, and assumes you know what you need to do. So this might not be the best choice for someone with less experience. I don't know. Maybe a mix of both styles would be better? Like grouping the questions by functionality and complexity. I'm thinking -  changing the base template is very easy compared to customizing the admin to include row level security and user groups to be used as a user-centric backend.

Very nicely done. More django resources are always welcome.",1517991569.0
grudev,"Just want to register another vote for writing the book.

This is an incredible idea, especially since the subject doesn't get a lot of attention.",1518005809.0
supra621,"I recently came across an Admin question that I [posted on Reddit with a solution in the comments](https://www.reddit.com/r/django/comments/81um17/filtering_admin_addchange_form_with_multiple/). The code needs cleaned up, but it introduces jQuery and AJAX into the Admin interface for what I thought would be an easy feature...

If that kind of stuff made it into your book, I would buy it in a heartbeat. Having no prior knowledge, I learned enough Django, HTML and Javascript in a weekend to launch a working beta of a website - but I spent about a week trying to read through the Django docs, SO, and random Google hits to decipher how to add extra boxes to filter the Admin interface.

Basics tend to be well-documented, but the intermediate-level ""How do I..."" questions between beginner and fluency are the most frustrating to deal with. That's what a good cookbook should focus to cover, in my opinion.

Also, I really like the fact that your examples don't assume the end-user is running a bookstore or a blog. The lack of variety in the examples used in the official Django documentation has been one of my biggest complaints while I've been learning to use it.",1520249721.0
sciencewarrior,"I would have used that resource a few months ago, when I hacked an admin interface for a side project, and I'll probably use it now that I'm starting a new one. Thank you!",1517923986.0
,"Just checked the list. Looks pretty basic (in a good way) and this is what you need in pretty much every project. At least I need it in like 90% of all mine :)

I'd also love to see here something like crazy ChangeList hacks with removed distinct() for optimization or some cached queryset count for huge tables (in case count() takes forever, but you still want your pagination). Also maybe embedding of asynchronous progressbars will be helpful to many people.
Also maybe some charts? :)

Overall, I think your idea is great, I've bookmarked your repo, will check it from time to time for sure!
Thanks for your work!
",1517934124.0
djpain,Nice work! I've passed this to some of the devs I work with and see if I can get any feedback for you.,1517982502.0
TechAlchemist,"We leverage the admin extensively at my job where we have an internal Django deployment which powers most of our internal analytics and reporting, dashboarding, systems consolidation, data management and more. I suspect there are a lot of places like mine that could seriously benefit from leveraging the admin to give users a quick interface to their data but are hurt by the default (slow) loading of related objects, not-so-clear-how-to-customize interface, or perceived limitations on functionality. Resources like this aren’t that easy to come by, which is why I usually just re-skim the ModelAdmin code (which is extensive but helpful). 

You can do an awful lot with the Django admin, which is especially powerful for teams that start out needing to do only a little and don’t have the time or the bandwidth to build out full applications for handling user input or model manipulation. I think this would be a great idea for a desk reference for a senior dev or a full cover to cover read for a new team member on a Django project, assuming it can really guide people from what they would have already (basics, model + model form) to the advanced (data export, prefetching related data, understanding limitations, cleaning and validating, managing permissions, I’m sure there’s plenty to put in an intermediate / advanced book).",1517986785.0
iMichael_,"Developing tools for Django Admin or contributing to open source in general would be better use of your time IMO. Dev books have a very short life span and the ROI just doesn't make sense in most cases, especially for something as niche as Django Admin.",1518055985.0
theslay,You can checkout the django cookiecutter project which was built with best practices from the two scoops django book.,1517912113.0
brylie,Check out [Spirit](https://spirit-project.com/).,1517929417.0
hatonium,What about [sentry](https://github.com/getsentry/sentry)?,1518045783.0
ralfp,Misago is internet forum software with django-driven backend that provides JSON API for JavaScript UI (which is what Discourse is): https://github.com/rafalp/Misago,1517943554.0
flipperdeflip,"In your snippet you pass the whole `**kwargs` to each base class's `__init__` instead of single attributes like in the example, so one of the views gets the instance arguments it doesn't understand.

Sidenote: in my personal (limited) experience you're sometimes better of using/combining the mixin versions of the generic view functionality then to combine different concrete views.
",1518015542.0
grumpydev69,"Remove the init method and flip the inheritance order (Passwordresetview, createview) 

If it doesn’t work, provide the passwordresetview so we can investigate it further ",1517884544.0
tmierz,So what's the stack here? What's on the front end?,1517869891.0
rjhelms,"This is really slick, and it's really performant. Well done!

One suggestion I'd make is to show some products after choosing a top-level category: for example, when I click ""electronics"" don't just show me the list of subcategories, but also some (most popular? most recent?) products as well to give the user motivation to keep going.

I did find a break, likely caused by a typo somewhere: it looks like there's got some confusion between ""mens-outerwear"" and ""mens-outwear"" as the category slug, and ""mens-outerwear"" throws a 500 in some cases - `/search/mens-outerwear/` and descendants, primarily. It might be better to handle failed category lookups more elegantly in general, but that's a perfectly reasonable ""version 1.1"" task.",1517886307.0
SWE_bayarea,Congrats!,1517905910.0
TopSheff,Nice and fast. Do you use datafeeds to import products? ,1517871967.0
Valachio,It's great.  Well done.,1517889691.0
niziou,hey really like your project. From where do you scrap the products? It's really interesting for me how is it working from backend. You scrap everywebsite that you have products or using google feed prices?,1517903044.0
jessietee,"Nice site :) 

How did you get to the point where you thought ""This is a good idea for a project!""

I'm a beginner coder and think I could probably figure out how to code something like this over time, but my problem is that I would never actually think of the idea to code it, if that makes sense lol would just like to ask how you came about picking this as something to build?",1517921935.0
i_amwithnail,"Nice fast site, good design. Are you using affiliate linking in that? When I click on a link I get a cannot connect on awin1.com - which I suspect is my VPN /adblocking stuff stopping tracking links. (Not a criticism, just wondering.) ",1517943127.0
Dom4n,Locust kills server with 2-3 requests per second.,1517950880.0
oriontyler,"Looks great. Congrats!

How did you integrate ES? Can you share articles/tutorials you followed?",1518073080.0
academicbadger,"Really good to see some examples. 
Have done basic html, php and MySQL for many years as a hobby and got into python with a raspi3 last year. 

I didn’t know anything about Django until about a month ago and wished I had. 

Started my Django journey only few weeks ago and nice to see some end points. My biggest struggle is always getting nice css and layouts. 

Currently doing the codeacamdy css course. 

Any advice on how you learnt some good techniques?
",1518205953.0
grumpydev69,How do u define a bargain? ,1517886944.0
Vinhii,Nice website! How long did it took from start to end? I’m getting into Django and this is motivating!,1517907511.0
pontificator2347,"> ajax call has finished

Does the ajax call return the id of the new object?",1517859787.0
jnns,"> And make sure to check out virtualenvwrapper as well, since it helps manage different virtual environments with ease

Better yet: use [pipenv](https://pipenv.org). It's great.",1517851109.0
fairytale81,"> TLTR: use cookiecutter-Django so you have most of stuff ready to use.

And then spend the next week removing things that you don't need from the project.

cookiecutter-django has become to bloated over the years",1517877498.0
flipperdeflip,"    datetime.datetime.strptime('08:00', '%H:%M').time()

There is no timezone info in this snippet and it looks like Django converts it to UTC when saving? You could see what you get if you print the `tzinfo` of the 03:00 result (and maybe peek in the database itself)

This is kinda surprising since the docs on `USE_TZ` say conversion of timezone naive values should use `TIME_ZONE` (or maybe I misunderstand, or maybe this default value is special). 

Also your code is unusual: you create a datetime and then only use the time? Maybe create the time directly and give it a timezone and see what that does:

    datetime.time(hour=8, tzinfo=pytz.timezone(settings.TIME_ZONE))",1517841441.0
pat_the_brat,[Read the fine manual](https://docs.djangoproject.com/en/2.0/ref/urls/#path),1517831303.0
cortical_iv,"Typically you pass via the url (in `path()` function) to the view, which passes to the template via context variable. Define something like this in `urls.py`:    

    path('<str:value>', views.page)

This will pass the 'value' to the view (so in views.page you will have requests and `value` inputs, and then you can use the `value` as you see fit, for instance send to template in the context.",1517850725.0
stringParameter,Did someone say my name?,1525102530.0
quackmeister,"Don’t take this the wrong way - being successful in programming means banging your head against the wall until you break through these barriers. It sounds like you lack the motivation to see it through, or you may not have the right disposition for putting in the long, grindy hours required to really master this stuff.

Consider your motivation... if your only goal is to “make a profit” and you don’t really enjoy the act of programming, you should reconsider your priorities.",1517829581.0
senuch,"Well my friend after reading you post I have but two suggestions for you which I think you are in need of...
1: Don't give up. It's the harsh reality of the frameworks with big code bases that their learning curve is difficult. But giving up on a product just because you hit a wall is a no.no. Django has a big community of developers where they answers your question in a precise manner. You can find it on their site. There is also that guy named #VitorFreitas the link to his blog is https://simpleisbetterthancomplex.com/ he continuously blogs about django and is really a cool guy you can ask him for help if required. 
2: Well my friend currently I am working on a small compiler myself for some sort of automation. When I made the prototype of it there were walls that I hit into like the algorithm for Parsing was not efficient enough there was hella wrong thing with the semantics module etc what I did after making the prototype was to Improve the code One By One. This is how software is done. You have to go through continuous development and improvement iteration to make some cool and efficient. So 1 iteration concentrate on product. 2nd Iter improve it. 3rd Make it better and .... so on.",1517847863.0
willcodefortea,"Personally I find it nicer to supply the base HTML file from Django, which provides a mount point for react and loads the js and css from there.",1517826679.0
never_safe_for_life,"Django would work. Check out Channels, the new websocket framework. That would suit an instant chat program.",1517806602.0
The_Amp_Walrus,"What do you mean by 'scale'? Do you need to serve 10000 concurrent users, or 2 for your project demo? You haven't clearly defined the problem that you want to solve.

The naive way to build a chatbot API would be to use [DRF](http://www.django-rest-framework.org/) and have:

* POST /chat/ to begin a conversation
* GET /chat/{id} to read a conversation
* POST /chat/{id} to respond

...or something like that. That's a really naive implementation but it would work. A client (webpage, mobile app, whatever) would poll the API every 500ms to get the latest chat records.

Django can do all of that easily, so what's wrong with that? I suggest the scaling problem occurs when you have 100s-1000s of users all polling your /chat/ endpoint, all the time. You'd start to see high latency, or timeouts or something. You wouldn't have enough Python threads to handle all these requests, your database will get hammered, etc. Polling is a really inefficient way to co-ordinate all of these chat events. But are you going to have 1000s of users? Does the inefficiency of polling really matter? Did your assignment specifically ask you to make it scalable? How scalable?

Here's an idea - make a quick n dirty chatbot API in Django (or Flask), but have the chatbot return random text to the user rather than something intelligible. If you really care about scale (which is questionable), then whack your random-chatbot on a little server and use [locust](https://locust.io/) to test it.

You _could_ use the Django Channels library to make a super-efficient event-based chat system that uses Websockets. If you're keen on learning about that stuff then go nuts. But it's going to be a lot of work.",1517824998.0
iconfinder,You can do that with Django. Consider Flask though.,1517849040.0
never_safe_for_life,"Django would work. Check out Channels, the new websocket framework. That would suit an instant chat program.",1517806550.0
,[deleted],1517779672.0
gosh_djang_it,"This looks really helpful, thanks for posting it!",1517808384.0
Nicksil,Do [this](https://docs.djangoproject.com/en/stable/intro/).,1517762036.0
ramse,"    num = 12
    return HttpResponse('<h3>{}</h3>'.format(num))",1517761931.0
daredevil82,This seems like a good use case for Django's [`GenericForeignKey`](https://docs.djangoproject.com/en/2.0/ref/contrib/contenttypes/#generic-relations).  Victor Frietas has a good writeup at https://simpleisbetterthancomplex.com/tutorial/2016/10/13/how-to-use-generic-relations.html,1517750663.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1517742944.0
honestduane,Never?  I care about my data too must to trust it to something that doesn't even support ACID.,1517780934.0
TunaBoo,Agreed. Friend's don't let friend's use MongoDB,1517753635.0
Frenchiie,"> Anyone who tells you that relational databases can't scale as well as MongoDB (or anything else) is selling you something. Or was sold on something and don't want to admit they bought the hype.

lul wut? Good luck trying to run jobs on terabytes of time series data in a relational database by scaling it. MongoDB, Cassandra, BigQuery, S3, data storage, HDFS, are all better storage method for that. The reason for that is because it does the exact opposite of what a RDB tries to do(RDB normalizes data, NoSQL DBs denormalize) and so it can scale better. What database you use totally depends on the usage of the database. If you're only trying to hit a few rows/column of a database and care about being acid compliant then yeah a RDB is better and yes it will scale if done correctly.

Also MongoDB is way better if your data is unstructured and yes there are cases where that happens, no you can't just ""structure it"".",1517788266.0
cediddi,"I disagree with PyDanny. I'm using postgresql and mongodb together. If your django app uses both sql and nosql databases, it becomes a joy. For management (user, group, company etc.) data I use postgresql, for time series or always growing data I use mongodb. I could've used another nosql but in this case, a mongodb cluster with 3 replicas per shard fit my needs. So, yeah, no django admin for mongodb collections, but why would you administrate billions of rows worth data on django admin anyways.

Ps: I love Flask! It's a great fit with ""only mongodb"" situations.

Ps: I'm the 0.0000001% he ignored, I'm the float's error rate. Fear my unenviable reddit rant.

Edit: sorry for late replies guys, I'm on gmt+3 İstanbul. Just woke up. ",1517747273.0
elbiot,"For performance with postgres, don't forget about ayncpg

https://github.com/MagicStack/asyncpg",1517801580.0
,[deleted],1517807656.0
cephalopod1,All of the arguments for why you should not use MongoDB in this article are essentially “Don’t use MongoDB because PostgreSQL is just as good”. Which is a good argument for why you should consider PostgreSQL but a pretty terrible argument for why you shouldn’t use MongoDB.,1517760196.0
haloweenek,"That's a bit Bullshitty ....
I use JSON for cacheing purposes in my apps and i hold data in PG. Regular CharField works perfect for that purpose. I JSON to maintain structure for quick use of data in templates. 
I would NEVER recommend Mongo to anybody for production use. You can do loads of other stuff if you can't WebScale but using mongo is on the end of that list. ",1517752899.0
daredevil82,"Your URL pattern and regex look good.  I don't think the problem is there.

What I think is missing here is you're not telling the URL what view method you're using.  You're importing `blog_startup` from views and using that in the URL but in that file you have a function `post_detail`.  The names don't match up.

Try `blog_startup.post_details` for your view binding in `blog_startup.urls`",1517750123.0
PrimeGrateModz,Are you running collectstatic as part of your build process?,1517714530.0
Dave_Fyre,"If you open up the developer console, you should be able to see an error message that could give more information about the problem",1517714254.0
never_safe_for_life,"> 172.31.40.171 (213.47.234.212) - - [04/Feb/2018:02:50:00 +0000] ""GET /static/futureFleet/style.css

Did you configure your server program (httpd I think?) to serve from the /static/ folder? Generally Django doesn't handle static assets. The development server does, but only for convenience. In practice it's way too slow.

I think you want to top-level routes:

/ -- goes to Django
/static/ -- goes to wherever collectstatic dumps static files",1517722264.0
maratmkhitaryan,https://www.youtube.com/results?search_query=pretty+printed+django,1517714174.0
fakintheid,"I know this is an unpopular opinion but I’m really not a fan of Django forms, atleast on the presentation layer. I have been resorting to DRF and doing it my myself. ",1517702273.0
kaddourkardio,Django crispy forms is your way to go,1517713142.0
Nicksil,"Are you inside the directory where the manage.py file is located when attempting to run the command?

Take a screenshot of your terminal just after your attempt to run the command and post the link after you've uploaded it.",1517693041.0
Nicksil,"Lots of Django-specific information in the documentation.

[Security in Django](https://docs.djangoproject.com/en/stable/topics/security/)

[Using Argon2 with Django](https://docs.djangoproject.com/en/2.0/topics/auth/passwords/#using-argon2-with-django)

Generalized security information and considerations can be found with simple keyword searches and a bit of time investment to further your knowledge and understanding of the topic.

[OWASP](https://www.owasp.org/index.php/Main_Page)

Also, quite a bit comes down to you -- the human -- and your practices in-general; don't create simple passwords, for instance.

Security is ever-evolving, so it's on you to continue your education to stay abreast of the latest threats and how to properly mitigate their effect. To this end, some resources I benefit from:

- Reading industry professional articles
- Watching the latest *Con videos on security
- Paying close attention to related developer forums (like on Reddit and Hacker News)
- Monitoring/participating in the various IRC channels pertaining to frameworks and security",1517685969.0
furyfred,"Two scoops has two chapters on security, about 60 pages total. For starters, it would tell you not to put your admin at `/admin/` in production.",1517686358.0
kankyo,Step one is to use https. Step two is using a password manager and only use unique super long passwords. ,1517727656.0
pydanny,"Awesome news. Some takeaways:

* Simpler internal workings because it runs just on Python 3's asyncio module.
* Improved interface thanks to the internal simplifications. 
* Downside: Not backwards compatible 

We're starting to migrate our projects over today. With tests, it hasn't been that much work. Thanks Andrew Godwin!",1517678521.0
synw_,"> We have a lot to do if we want to keep Python relevant on the back-end over the next decade.

Wise observation. Not being a big fan of Asyncio myself I have to admit that this release is a big step that brings a full async environment into Django. Concurrency seems to be important in the modern world, and Go shines on this, eating some Python market shares. So it is good that Django Channels leads the way about this, bringing some appealing product to the developers to go async.

> These let you turn any async callable into a synchronous callable, or vice-versa - letting you call the Django ORM (a synchronous interface) from an async consumer, for example

Wait ... it means that I can run my old Django code in an asynchronous fashion? Sweet",1517683363.0
MrPopperButter,[What's new in Channels 2](http://channels.readthedocs.io/en/latest/one-to-two.html),1517702301.0
jollybobbyroger,"This is a great write up, and I completely agree with the design choices. Great design is hard and can often only be achieved through iterations. Hope this will make it into a standard.",1517680226.0
maratmkhitaryan,How do you think is it better to use Channels or ready to use service like PubNub?,1517718381.0
coleifer,"Good write-up and sensible...if you want python asyncio to be the future. I'm not there yet. It's complicated and smelly. Code is positively littered with async/await keywords. Unpythonic. I love gevent...no need to change your code. No need to rewrite the entire stack like you have with asyncio. I wish the async stuff hadn't become part of the language, I mean...it's fucking twisted...now it's just twisted as part of the language, which seems silly because twisteds been around forever.

* http://lucumr.pocoo.org/2016/10/30/i-dont-understand-asyncio/
* https://veriny.tf/asyncio-a-dumpster-fire-of-bad-design/
* https://whatisjasongoldstein.com/writing/im-too-stupid-for-asyncio/",1517706937.0
ubernostrum,I am a fan of Django being a piece of boring predictable software that people use to get things done.,1517714657.0
never_safe_for_life,Is that a question or statement?,1517680496.0
Nicksil,"Unfortunately don't have much time to go into detail at the moment, but what you want to look into is permissions.

You can start here: https://docs.djangoproject.com/en/stable/topics/auth/default/#permissions-and-authorization

You can create permissions as granular as necessary by rolling your own or using one of the libraries already developed and tested. One library in particular is called Django Guardian. But before you go that route, you should research the topic and get a decent grasp before diving in.",1517618201.0
Crowbarkz,If only one user can be a librarian to a library - add field librarian to Library model. Then when you fetch the model in relevant view check if library.librarian == request.user and decide which template to render,1517640883.0
,[removed],1517609024.0
jeffbaier,"I personally use DRF + AllAuth + rest_auth

http://www.django-rest-framework.org/

http://django-allauth.readthedocs.io/en/latest/installation.html

https://django-rest-auth.readthedocs.io/en/latest/",1517603010.0
apreche,"The risk is that someone accesses your database and does whatever they want to it, usually stealing all your data or vandalizing your site.",1517577216.0
pat_the_brat,"Truthfully, it can be completely benign, and it can be catastrophic, depending on a number of factors.

Is your database accessible from a public IP, or only listening on localhost? Are you running other software, e.g. `phpMyAdmin`, which would give people access to your database if they have the credentials? Do you use the same password everywhere, or do you have separate passwords for different services?

Obviously, if your database is publicly accessible, anyone could connect with the credentials, and wreck it, steal your data, etc.

If your database is protected by a firewall, and only accessible from the localhost, and you don't have other services that accept that login, even leaking that information should be relatively harmless (of course, that isn't a reason to be careless).

Keeping credentials out of your repos is definitely preferable, in terms of security, but don't forget to take other precautions, such as restricting access to your DB with a firewall, etc.",1517580617.0
simonw,"Most databases are set up to only accept connections from localist (for single servers) or from the same private network or specific hosts (for multi-server environments). This is a crucially important security measure - you really don't want to risk attackers brute-force guessing your credentials or intercepting unencrypted credentials through network sniffing somehow.

If your database is configured to not accept outside connections even leaking your credentials won't allow someone access, unless they can also get onto your machine or into your private network in which case you have additional problems!

I can be worth ensuring that even if someone did manage to SSH into your box somehow they still couldn't read the database credentials - ensure they are only readable by the user that runs your web application. Unfortunately the most likely way someone might get a shell on your box is through a vulnerability in that application (which would give them access as that user) but it's still good practice to ensure those secret credentials aren't readable by any user.

Short version: it sounds to me like you are already doing things responsibly.",1517586565.0
MagicWishMonkey,"Never check sensitive information into source control. If someone manages to hack your github account or gain access to your repository, you don't want them to be able to leverage that into compromising additional systems/accounts. 

I keep all of my configuration settings in a settings.json file (that gets checked into source control) and I keep environment specific settings in a settings.override.json file that is not checked into source control. 

Like this: http://github.com/rodenberg/configurator",1517600033.0
flipperdeflip,In django? The domain that was used can be found in the request object: https://docs.djangoproject.com/en/2.0/ref/request-response/#django.http.HttpRequest.get_host,1517571510.0
dirtybutter,"you can use `window.location` and its properties to get information about the current page, but if  you are asking how to get the input as a user types, i don't believe that's allowed. it would be a gaping security hole

but this is more of a javascript question, unless i misunderstand what you're asking",1517567544.0
chanamasala4life,"I see Wagtail, I upvote!",1517607408.0
flipperdeflip,"This is pretty cool. 

I wanted to mess with Streamfield but I'm not sure where to find it? Is it the main field in Post page type?

Also maybe it is cool to link to the source of this demo site on github or something so we can see how things are implemented.",1517842482.0
Xef,That's what OneToOne fields do. I tend to use a try/except with the DoesNotExist exception. ,1517577552.0
jobelenus,"Be positive that `checkout` is the same record as `order.checkout` (e.g. the `checkout.order`related-name reference could be None, and thus orphaned).",1517588393.0
dirtybutter,"i've never used beanstalk, so this might be a stupid question. how are you deploying?

from your description it sounds like either you haven't pushed your local changes or you are on the wrong branch
",1517548505.0
andytwoods,I think you need to add that beanstalk url to your ALLOWED_HOSTS variable in your settings file. Afraid I found beanstalk the biggest pain ever and moved over to aws lambda via python Zappa within a few months.,1518982501.0
furyfred,How much and can you do remote?,1517546734.0
elingeniero,Sure send me details. ,1517561453.0
javireguera,Please send me details of this too,1517576403.0
boxidea,"I do this with my flask apps and django apps. It's a great idea.

Makes it easy to deploy, too. Our CI server builds a wheel file, pushes it to the server and does a pip install on the wheel file. Super easy.",1517600375.0
Fun2badult,Interesting ,1517589879.0
yesvee,"Why is this not more ""mainstream""? What is the controversey?",1517625222.0
Dababolical,"I have never heard of Pinax. Is anyone here possibly using it on their projects? It sounds like an interesting project.
",1517604497.0
booooomba,"Haha well you can put it wherever you want to. It is your website! If you want it to be at the exact same spot on every page, then put it in base.html otherwise put it somewhere else. Not sure why this confuses you?! :-)",1517529603.0
jeffbaier,"The solution is in the github issue you linked. Why would you use a different urlpattern? Yes, the `<slug>` is your problem. The account confirmation key looks something like `Ng:1cGlUl:EvPY0Yyu6YHLZEWEtIp`, and the django docs for the `<slug>` path converter say


> Matches any slug string consisting of ASCII letters or numbers, plus the hyphen and underscore characters. For example, **building-your-1st-django-site**.


This comment has the solution to your issue: https://github.com/Tivix/django-rest-auth/issues/290#issuecomment-287601376


Basically, you need to use some fancy regex like `(?P<key>[\s\d\w().+-_',:&]+)/$` as the pattern matcher instead of `<slug>`. Also note his second comment about the order of the *urlpatterns* (specific before general), don't fall down that hole either.


----------------


**Edit:** OK after re-reading your post I realized I was being kind of a dick with my response. I see now why you're confused. You're using the new `path()` stuff in Django 2.0 and those don't take regex. You need to use `re_path()` instead (https://docs.djangoproject.com/en/2.0/ref/urls/#re-path).


I actually haven't used django 2.0 and the new `path` and `re_path` yet, but I think this will work (or at least put you on the right path) - 


    from django.urls import include, path, re_path
    
    urlpatterns = [
        path('', include('rest_auth.urls')),
        re_path(r'^registration/account-confirm-email/(?P<key>[\s\d\w().+-_',:&]+)/$', TemplateView.as_view(), name='account_confirm_email'),
        path('registration/', include('rest_auth.registration.urls')),
        path('refresh-token/', refresh_jwt_token),
    ]",1517528458.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1517497078.0
gosh_djang_it,So far it's been using `path()` to replace those abominable regexs in `url()`.,1517494191.0
booooomba,"Really? Nobody mentioned the cool new Django ""start-screen""?

;-)",1517500924.0
nickchuck,Oh! Also that python 2 bites the dust :),1517488086.0
jobelenus,"I am super happy to see the URL changes, an internal squashmigrations, and select2 in the admin. I am happy to see `on_delete` required because it will force me to remember and do it. Python 3, obvs, but I've been on it or compat with it for a while now.

I didn't see anything surprising or innovative -- which isnt a criticism -- because its ridiculously hard to do that with such a large and mature framework. But I hope to see something that makes my ears perk up in the future.",1517498667.0
be_haki,"1. filter attr to aggregate functions.
2. named attr to values_list.
3. select_for_update(of...)
4. responsive admin.
5. Subquery.",1517560088.0
zachtib,"Definitely the responsive admin, it's the main reason I updated some of my personal sites rather than stay on the LTS",1517494409.0
jobelenus,"Curious, where do you teach?",1517498003.0
,[deleted],1517471604.0
DmitriyJaved,“The problem” also solvable by overriding __init__ as described in drf docs and by adding 4 lines mixin in view ,1517482936.0
booooomba,"Why not just have a ""Team"" model? Then assign the users to the team and manage everything via the OTO/OTM relationship.",1517445262.0
,"Im assuming you would want something like this:

    class Profile(models.Model):
     user = models.OneToOneField(User)
     #other fields you may require here..

    class Team(models.Model):
     team_name = models.CharField(...)
     #other fields you may require

    class InTeam(models.Model):
     profile = models.ForeignKey(Profile)
     team = models.ForeignKey(Team)",1517446569.0
,[deleted],1517422838.0
never_safe_for_life,"Docker is tangential to what you're trying to do. Use it if you want to, but it won't fundamentally change your task.

The authors of above article say how each user gets their _own_ container!! That is some fanboy love right there. I mean, it's cool and all but what problem are they solving? Why not just have one instance of Django running?

",1517462997.0
dikamilo,"You need to authorize user with oauth/oauth2 using twitter provider. So you link should require that user is sing in on you website with twitter account. After this you can access user public data like username, email etc. and having this you can compare it with autor of the tweet or other data that you save as a admin to check if this user should have permission to delete or edit this.

Look at https://github.com/python-social-auth/social-core ",1517423089.0
booooomba,"You will need to familiarise yourself with JS, Ajax and JSON. The Django part will be pretty easy (just a JSONresponse). All the actual work is gonna be on the frontend.",1517411941.0
fuckslavs,"    <body>
    <div>
        <input id=""date1"" type=""date"">
        <input id=""date2"" type=""date"">
        <button type=""button"" class=""Submit"">
            Submit
        </button>
    </div>
    <div id=""html_insert"">
        <!--table inserted here-->
    </div>
    </body>
    
    <script>
        // Ajax to insert table
        $('button.Submit').click(function() {
          var date1 = $('#date1').val();
          var date2 = $('#date2').val();
    
          $.ajax({
            url: '{% url ""between_two_dates"" %}',
            data: { 
              'date1': date1,
              'date2': date2
            },
            success: function(data) {
              $('#html_insert').html(data);
            },
            error: function(response, error) {
              alert(error);
            }
          });
        });
    </script>

views.py

    def ajax_between_two_dates(request):
        date1 = request.GET.get('date1', None)
        if request.is_ajax():
            queryset = YourModel.objects.filter(date__range(date1, date2))
            html = render_to_string('table_insert.html', {'queryset': queryset})
            return HttpResponse(html)

Create a separate html file titled table_insert.html and just put the table that will be inserted between <div id=""html_insert"">...</div>

You also need to create a url for your ajax view with name='between_two_dates'",1517417794.0
ubernostrum,"Django is a web framework; it's a set of tools and libraries developers use to build applications. That's why you're finding developer documentation.

What you want is documentation for the specific applications your developers have built (or that make up the content-management product you're using). For that, ask your developers, or your vendor.",1517414133.0
flipperdeflip,Isn't most of what happens in the admin specific to your project?,1517413531.0
plahcinski,"https://github.com/bernardopires/django-tenant-schemas

Is another option that does the same thing. This is what we use",1517447091.0
flipperdeflip,"/r/djangolearning

What version of django does your book use? What version do you use to test this? The code and the snippet you use look very old.

Compare with this example from 1.11: https://docs.djangoproject.com/en/1.11/intro/tutorial03/#a-shortcut-render",1517395640.0
Brandhor,"by default it uses the timezone set in [TIME_ZONE](https://docs.djangoproject.com/en/2.0/ref/settings/#std:setting-TIME_ZONE)

the date format of your browser is not available to django because it's not an http header, you can only get it via javascript
",1517396166.0
StewPoll,"Another solution, 

1 - have a url path/view that outputs an ICS calendar file. 

2 - Subscribe to the url in Google calendar

3 - profit. ",1517391861.0
flipperdeflip,"1. find a module on pypi to connect to your calendar
2. create some code to sync one of your model instances to your calendar
3. connect your model to this code with some post_save/pre_delete django model signals 
4. add an admin list action or a management command to bulk sync a bunch of instances because you forgot QuerySet.update() and QuerySet.delete() bulk queries don't trigger signals",1517387571.0
oliw,"The biggest thing stopping me from doing essential maintenance work —like upgrading Django and Python— is freelance clients being unwilling to pay the time. I can enumerate the development benefits, outline the possibility of security issues (hacks, data leaks, etc) but some people just see this as busywork if they get nothing tangible from it, but more than once I've had to say *I'd* stop working for them too.

Thankfully it's worked but dropping ultimatums on clients isn't pleasant. It's annoying that:

 1. I haven't found a solid *sales pitch* to convince [cheap] clients to pay me to keep infrastructure jazz updated. Again, *I* understand the technical reasons, as most developers do, but 

 2. The sheer amount of time it takes to upgrade some things. An old Django CMS version on an old Django version on Python 2.6 took *hours* to make current again. ""Little an often"" might work for some, but again, justifying these costs to some cheapskates is a difficult task.

I've no doubt both Django 2 and Python 3 are better (they are), but it's taken some really painful conversations to get where I am now.",1517395021.0
i_amwithnail,"Same answer as I gave [the other day](https://www.reddit.com/r/django/comments/7tc0oo/angular_on_django/dtbdur9/?context=0) to a very similar question.  Yes, Django/DRF will do what you want.  Do the tutorials, and it'll become apparently, but they're 100% the right fit for what you describe. ",1517342311.0
heppy,"It seems to me like you could benefit from working through the official Django tutorial (maybe a second time). I'll try to give you a very quick rundown anyway, but it will be quite high-level.

The classical approach is to use models, views and templates. The browser makes an HTTP request that is mapped to a view according to the urls.py. The view handles the request, which usually involves reading/writing some data from/to the database by using the models and then using this data to render a template into an HTML page that is sent to the browser. The HTML page can also contain or reference some CSS and Javascript files.

Alternatively, you can have a client-side Javascript application (e.g. in React or Angular) that loads data from an API in JSON or XML format. In this case, you generally don't use templates. You could use Django REST Framework to create the API.

I suggest you use the classical approach unless you are required to implement a REST API.",1517349879.0
spookylukey,"Do you need the graph to update immediately after new data arrives, or is it OK to refresh the page? If the former, then only efficient way to do this is to ""push"" from the server to the web page, using something like websockets. In this case, plain Django may not be that suitable. You would need something like Django Channels - https://channels.readthedocs.io/en/latest/ - or pick a framework with better builtin websocket support.",1517398366.0
CaptainDudeMax,"I've built something exactly like this using Django and SQL Server. Shoot me a PM if you have some questions and I'll do my best to respond. 

I'm not trying to be a downer, but I believe you have a LONG way to go. 

And to answer your first question... 
>I'm not sure how the relationship between Database - Django framework - Frontend

You enter your DB connection settings in your Settings.py file. Your models.py file will have a a model for each table in your database. You use the views to make ""queries"" and manipulate the data. 

That's a really simple answer but that's the gist of it. ",1517527037.0
flipperdeflip,"Possibly, or maybe use something like http://django-select2.readthedocs.io/en/latest/extra.html#interdependent-select2

(wasn't django-select2 supposed to become part of django-core at some point?)",1517315892.0
,[deleted],1517294851.0
dikamilo,"You need to create 3-way migrations:

Add new foreign key attribute to your model (tractFIPS_FK), create migration for it

Create data migration that will iterate over all objects for example like this:


    for b in model_b.objects.all():
        b.tractFIPS_FK = model_a.objects.filter(tractce=b.tractFIPS).first()
        b.save()


Remove old field (tractFIPS) from model_b and create a migration for it. (You can also rename tractFIPS_FK into tractFIPS if you want).

Apply your migrations.

Done.",1517295090.0
NewbieRPiGuy,"Thanks to the replies here, I made a `.py` file in my `migrations/` folder.

    from django.db import migrations, models
    def convertToFK(apps,schema_editor):
        model_a = apps.get_model(""app_name"",""model_a"")
        model_b = apps.get_model(""app_name"",""model_b"")
        for b in model_b.objects.all():
            b.tractFIPS_FK = model_a.objects.filter(tractce=b.tractFIPS).first()
            b.save()
    
    class Migration(migrations.Migration):
        dependencies = [(""app_name"",""previous_migration_filename""),]
        operations = [migrations.RunPython(convertToFK),]",1517349445.0
flipperdeflip,It is a nice way to clean up some save() methods. I would like something like this that has facilities for updating from foreign key based data.,1517300560.0
synw_,The concept is interesting but what do you get out of not having to overwrite the `save` method of a model?,1517301021.0
george-silva,"Interesting. This is a Common use case.

Congrats!

Are you using in production somewhere?

Also,since there are db writes, migrations are working? When you create a computed field, the migrations identify it and do the right thing ©?",1517318208.0
charettes,It's a bit hard to tell without your exact schema. How do you want to handle the case of a transaction containing products in different categories?,1517256112.0
booooomba,https://docs.djangoproject.com/en/2.0/topics/db/aggregation/#generating-aggregates-over-a-queryset,1517252329.0
booooomba,"The ""\_set"" only works one way. Depending on which model has a ForeignKey.

Have you worked through the official tutorial? It is explained in detail.",1517250809.0
brechinj,"Start by making your code more readable and maintainable. Good variable names, avoid clever combinations of comprehensions where they aren't necessary. By breaking your code up into chunks you get closer to making it easy to break into methods that are more testable.

Here's a start: https://pastebin.com/b1SbzK1f",1517416127.0
daredevil82,"when you say doesn't work in actual view, what do you mean?  Error, nothing, etc?",1517245918.0
booooomba,Are you 100% sure that the inputs are 100% the same?,1517251275.0
jastr,"Things to confirm

- Same database

- Same environment variables

- Same timezone

- Same user permissions

- tickets() is the same  


I like list comprehensions, one-liners, and short variable names as much as the next guy, but it makes this code that much harder to read and debug. More iterative code might help you pinpoint where an issue might be.",1517272315.0
flipperdeflip,"What is with this giant mess of a hairball? If you can't read what your own code is doing you probably should write more readable code. Do you expect random devs to make sense of this if you can't even figure it out yourself??

What is with the rain of similar underscored single letter compound variables? What is with all the `sorted(set(map(` stuff? What is the comprehension stuff mixed with functional stuff? 

I would throw the whole thing out and redo from start.",1517402593.0
jeremyandrews,This is Part II of the beginner's tutorial posted a couple of weeks ago: https://www.reddit.com/r/django/comments/7qimxu/a_beginners_tutorial_to_django_rest_framework/,1517225447.0
gosh_djang_it,I really need to start using persistent connections to my database...,1517244336.0
,Nice article! ,1517221893.0
Niicodemus,"This is fantastic, so many great tips. Excellent explanation of BRIN indexes, too.",1517229931.0
fessacchiotto,Thank you!,1517234558.0
skernel,I don't understand well the BRIN index.. ,1517259685.0
george-silva,"Also, can this handle groups, chords, etc?",1517318317.0
george-silva,Seems great. I'll try on one of my projects!,1517318275.0
brejoc,"You can just create a view with a template. Your template will, in this case, just be your static HTML file. This way you can start to extend whenever you want. 

If you want to read more about serving static files [take a look here](https://docs.djangoproject.com/en/2.0/howto/static-files/). Please note that serving static files during development is completely different from serving in production, which should be handled by the web server instead.",1517208347.0
AtWorkButNoWorking,"Normally you will want to serve static files using Apache or Nginx.  Digital ocean has really [good guides for doing deployment](https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04).

You could also try [whitenoise](http://whitenoise.evans.io/en/stable/index.html) which seems to make everything easier.",1517208754.0
,[removed],1517332564.0
Nicksil,"I don't completely 'get' what you're trying to accomplish, but it sounds like you can just use the [`user_passes_test`](https://docs.djangoproject.com/en/stable/topics/auth/default/#django.contrib.auth.decorators.user_passes_test) decorator (as you mentioned), passing in a callable which can run any number of tests as you'd like. Something like:

    from django.contrib.auth.decorators import user_passes_test


    def check_all_the_things(user):
        passes_email = user.email.endswith('@llama.com')
        is_pro = user.is_pro
        has_money = user.accounts.get(primary=True).balance > 0
        
        return all([
            passes_email,
            is_pro,
            has_money,
        ])


    @user_passes_test(check_all_the_things)
    def my_view(request):
        ...

If I'm missing something, provide a bit more clarification, I'd be glad to try again.",1517189218.0
spookylukey,"First of all, you will make your life simpler if you change the `premium_account_required` function to only be usable in one way. It is currently written to support two different usages:

    @premium_account_required
    def my_view(request, ...):
        ...

and

    @premium_account_required()
    def my_view(request, ...):
        ...

There isn't really a reason to accept both of these, it only makes life harder.

So, as written, it could actually be:

    premium_account_required = user_passes_test(
        lambda u: u.userprofile.is_premium,
        login_url=reverse_lazy('upgrade')
    )

However, if you are trying to write a more complex decorator, you need to go the other way. `user_passes_test` is a shortcut for a common pattern. If you have more complex needs, you will make life simpler by starting from scratch with your own view decorator. They are not hard -  see https://realpython.com/blog/python/primer-on-python-decorators/ for decorators in general and https://simpleisbetterthancomplex.com/2015/12/07/working-with-django-view-decorators.html  for Django view decorators.

If you need things like the redirect functionality of `user_passes_test` then just copy it from the source code of `user_passes_test` (see https://docs.djangoproject.com/en/2.0/_modules/django/contrib/auth/decorators/#user_passes_test ) 

This way, your code can access the the request object, and check request.POST etc. - whatever you need.

Also, you can write 'parameterised' decorators - decorators that accept parameters/arguments. These look like this:

    @my_decorator(option=True)
    def my_view(request):
        ....

which itself can be rewritten as:

    my_decorator_with_option = my_decorator(option=True)

    @my_decorator_with_option
    def my_view(request):
        ....

These involve another layer of nesting, which can be confusing. See https://stackoverflow.com/a/5929165/182604 for more info on what it should look like.


Here is a (completely untested) example from what I think your requirements are, which I don't think will need decorators with arguments.

    from functools import wraps
    
    def premium_account_or_free_tickers_required(view_function):
        @wraps(view_function)
        def decorated_function(request, *args, **kwargs):
            user = request.user
            if user is None or user.is_anonymous():
                return redirect(url_for('login', next=request.url))
            if not user.userprofile.is_premium:
                ticker = request.POST.get('ticker', None)
                if ticker is None or not is_allowed_free_ticker(ticker):
                    return redirect(url_for('upgrade', next=request.url))
                
            return view_function(request, *args, **kwargs)
        return decorated_function
",1517214002.0
ccb621,It’s been my experience that user type is usually a stand-in for user role. Django’s roles and permissions usually provide a decent implementation of this functionality. The teacher “type” is the role. Guardian helps handle row-specific permissions. ,1517193601.0
_Timboss,Pillow (PIL)?,1517176824.0
flipperdeflip,I use `django-versatileimagefield` with prewarmer.,1517219924.0
igncampa,is there a reason why those can't be fields in a relational database?,1517176325.0
ramse,"A ForeignKey is a Many-to-One relation. Meaning your original model can only be linked to a single Author model.

As for why you can't just change it, ForeignKey is an Integer field it's expecting a number value however one or more rows in the database contain blank string values which are not allowed. IntegerField is NULL, or 0-9 only. You also need to think about what you're going to do with values that already exist in the CharField, the migration won't just magically convert those into Author objects.

Your best and safest option would be to create a secondary temporary field like

    author_tmp = models.ForeignKey(Author, null=True, ...)

Then run `makemigrations` to add it to the database. Then create your own migration file that converts the old author field into the proper Author model and assign it to author_tmp. Once that's done you can then delete the original author field, then rename author_tmp to author.",1517150718.0
booooomba,Sounds like you haven't updated your views to filter for the ForeignKey instead of the CharField.,1517144627.0
vtbassmatt,"I suspect most people who have done extensive preparation for GDPR won't be able to talk about it here. On advice of counsel and all that, ya know?",1517143174.0
a4ng3l,"I'd start with the easy part of listing all PII data in the app and make a nice data flow diagram. Include the business / technical reasons for which you keep these PII. For each step (capture, exchange, processing, storage) I'd do a small risk assessment to ensure you're covered against the main issues that could potentially arise. Then add additional (security) controls to mitigate those risks (amongst which the list you provided but also ogranisational / process controls). For each data exchange make sure they are compliant with applicable régulations (especially contractual things for out-of-europe data processors and the like). Then tackle the whole 'rights of the data subjects' and pray you don't have too much trouble with handling those. ",1517156447.0
heppy,"IMHO, this list should come from a legal counsel specialized in this topic. That being said, here are some points that come to my mind:

* documenting who of your dev and ops teams has access to PII (and any code and infrastructure dealing with it), why they need access and what steps you take to prevent unauthorized access
* having a privacy policy that has been updated for GDPR
* following security best practices, preferably according to some kind of catalogue by a nationally recognized institution. In Germany we have the ""IT Grundschutz Katalog"" (which roughly translates basic data protection catalogue) by the Federal Office for Information security.",1517348544.0
academicbadger,"Looking into this for a new app (not yet launched) will we need to record what version of privacy forms users consented with?
E.g. new app launches have to consent for data to be used as detailed below:-
Email - app booking into events, sending password resets, event info
Marketing opt in if want it


Few months down the line need to update privacy policy as business expands and now also need to share data with third party e.g. mail chimp for marketing 

How do you then track those users who agreed to old policy and need to gain consent for changes, date filter from joining or keeping privacy model and versions to check against?!",1524933229.0
booooomba,"Remove ""Context()"" from this line:

    context = Context({'tag_list':test_list})

and try again
",1517144691.0
DmitriyJaved,Why would you do that in shell,1517154988.0
DmitriyJaved,Just open source code and look for auth related stuff,1517155050.0
fakintheid,Can I ask why you’d rather have the validation in your view? You could always use the built in python  date time module. But I’m sure Django has something to check against time zones. ,1517113781.0
haloweenek,That’s preety much a form operation. Stuff like that is done past super in override of clean() on a form.  It’s a multiple field Check. You can also add clean_fieldname methods to form.,1517129654.0
,[removed],1517332688.0
exxy-,"Ajax would be great for this task.  From Django, make a controller method (err.. view) that takes a string and returns either HTML or just the text of your Markov-chain.  Go to MDN and grab the snippet of code for [XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest).  Use this to send your string and grab your chain.  Slap the result in your HTML. ",1517122545.0
Mekhami,This can be done entirely client side with no need for django at all. ,1517115510.0
kylemh,"If you don’t plan on separating the back-end from the front-end, why use DRF at all? ",1517079346.0
kylemh,Enjoy the separation of concerns. I love it. ,1517088674.0
mroximoron,"Frontend apps are usually just html, js and CSS. So you can serve them from the most basic hosting. But usually you want to point the / of your website to the frontend app and then have /API/ point to the django project. That way they are on the same domain and you have no cors issues.",1517068410.0
mbrochh,"If you want to be really modern, skip REST and go straight to GraphQL with graphene-django.",1517124686.0
whatever_meh,Stackoverflow is much better for this than reddit.,1517086818.0
adioevan,is haystack in your INSTALLED_APPS?,1517088643.0
rackmountrambo,Posting a traceback would help.,1517240403.0
i_amwithnail,"You should have a look at Django Rest Framework - it  can provide JSON responses for whatever your Django system has in the database.  If you haven't done the main Django tutorial yet, I""d start with that, and then add DRF on top once you've done that.   There are some (slightly outdated, but the basic principles are the same) examples here. https://github.com/makinacorpus/drf-examples",1517049811.0
Investisseur,Mods can we PLEASE have an answer for JavaScript frameworks with Django stickied? This is probably the most common question each day and has the same answer,1517060120.0
FeatheryAsshole,"I agree with /u/i_amwithnail,  Django + DRF is the way to go for this.",1517050342.0
Tetsubin,"It's builtin.

import sqlite3",1517047454.0
furyfred,"https://github.com/pydanny/cookiecutter-django/blob/master/%7B%7Bcookiecutter.project_slug%7D%7D/%7B%7Bcookiecutter.project_slug%7D%7D/templates/account/login.html

This demonstrates crispy in use in the login form. I think you just need to look more closely.",1517064686.0
roysta,"You can create and fully edit your own Crispy Form in a forms.py file, then in your view serve your custom-created Crispy Form instead of just the generically created form.  Take a look at Layouts on the Crispy Docs, they are really great and you can fully customize each field, each group of fields, etc.  I do all my markup in BootStrap and haven't ran into any issues.
",1517231826.0
fakintheid,What you’re looking for is basically report generating. There are a few Django projects that do this for you. Usually it shows the data in a table like view. ,1516991977.0
a4ng3l,Expose some views of the data via Qlik / Tableau / Power Bi?,1516997007.0
hhh333,I had great success using Superset.,1517023611.0
caseym,HTSQL: http://htsql.org/,1517072409.0
synw_,[django-chartflo](https://github.com/synw/django-chartflo) can be a starting point for you (disclaimer: I'm the author),1516986181.0
fakintheid,Really what you’re looking to do is accomplish is two things. Pull data points from an API(your Django project) and then graph them on the front end with JS. Start out by writing some end points that allow you to query the points and ship it over in JSON. Then on the front end use Ajax calls to populate your graph on whatever interval you’re needing the data. I just did something identical a few months ago. I can’t exactly give you the code because it shows the structure of some sensitive data. But I’m more than happy to help you directly if you’d like. ,1516990751.0
,"If you have the option i strongly suggest to use postgres instead of mysql. Theres json fields buitin, and looots of other goodness.",1517035220.0
TechAlchemist,You may want to consider using a database that can store json natively like mongodb or postgres if you also want it to be relational. ,1517015363.0
Nicksil,You're likely better off asking your questions here so we can all see and potentially lend a helping hand.,1516978209.0
Peacook,For free?🤔,1516977509.0
kurashu89,"
    ## SimpleMemStore(TM)
    # 8/10 benchmarks say it's faster than Redis!
    # ^ citation missing
    function_queue = []


I'll take ""what is thread safety"" for $100, Trebrek.

I can see so much going wrong with this package since it indiscriminately spawns threads. You'd just need to repeatedly hit an endpoint and you'll be able to drag down the server as all of the threads are spawned and begin consuming more and more resources.

At the very least a thread pool would be better, and an actual thread safe sequence. ",1516968218.0
booooomba,Looks like a lot of time has passed since the last update?,1516966164.0
dershodan,What's the advantage over mature async tools like celery? It seems a new wheel was invented here.,1516962816.0
oliw,"While trying to dig into how this worked, [I found how it queues function calls](https://github.com/defrex/django-after-response/blob/master/after_response/store.py):

    ## SimpleMemStore(TM)
    # 8/10 benchmarks say it's faster than Redis!
    # ^ citation missing
    function_queue = []

Genius.

But, yeah, it's just [hooking onto the `request_finished` signal emission and threading out function calls](https://github.com/defrex/django-after-response/blob/master/after_response/signals.py). Pretty neat. I don't expect it'll break unless Django changes its signals.",1516967441.0
furyfred,"You should know python, at least a little",1516947075.0
iakovosbelonias,You don't necessary need to know OOP but at least you have to be familiar working with functions,1516958422.0
dorsal_morsel,"For any web framework, you should know the basics of HTTP.",1516970099.0
gosh_djang_it,/r/djangolearning : see sidebar there,1516974667.0
TasticString,I would skip the official django tutorial and use mozilla's tutorial and/or https://tutorial.djangogirls.org/en/,1517069303.0
levymtr,"Basics for http, rest architecture and request, http://docs.python-requests.org/en/master/ ",1516970333.0
Investisseur,Just want to let you know that learning how static files actually work is a rite of passage in Django development. Everyone has problems with it. Good luck!,1516943074.0
cleverint,"You're just missing a closing %

You have 


     <link rel=""stylesheet"" href=""{% static 'bootstrap.min.css'}"" type='text/css'>

It should be

    <link rel=""stylesheet"" href=""{% static 'bootstrap.min.css' %}"" type='text/css'>",1516946335.0
Nicksil,Have you [collectstatic](https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/#collectstatic)'d?,1516938691.0
booooomba,"Have you migrated everything?
Also that is not how you call the model. Try:

example = ExampleModel.objects.all()",1516918378.0
,[deleted],1516945270.0
rizogg,"Did you created a user and tie it up in exampleModel object???, what is the output of on python shell when you do this? 

from your_app.models import ExampleModel
ExampleModel.objects.all()",1516931994.0
ghostofgbt,"If you used the Heroku django template, comment out the line at the end of your settings.py that handles zipping/compression with whitenoise. For some reason, at least when using sqlite3, that has never worked for me but my static files are served fine if I just comment it out. Using postgres it is ok if you leave it there, I believe. Also I'm on mobile and don't have access to my code at the moment so ymmv, but it's a quick easy thing to try. ",1516917593.0
mnemonicj,You need to have a static folder that is not empty in your project. Place a 'humans.txt' file inside. Or just follow the template off of the Heroku website. ,1516922536.0
gosh_djang_it,"Your namespace is a bit strange: you have `cautiousdoodle/mysite/static/futurefleet`. Better practice is `cautiousdoodle/futurefleet/static/futurefleet/stuff`.

I'd start there, reading these docs about it (the box `Static file namespacing` at the link on the docs you provided).






",1516936107.0
pat_the_brat,"Sure. I doubt you will find much material that was already updated to 2.0. (Though I can't vouch for the course itself, as I haven't taken it, nor do I know which one you refer to).

The biggest caveat is probably the change from `url()` to `path()` (and the fact that it no longer supports python 2, so make sure the course uses Python 3).

Also, be sure to go through the [Django release notes](https://docs.djangoproject.com/en/2.0/releases/2.0/) for a complete list of changes.",1516901627.0
GoldFrame,I'd recommend you go through the Test Driven Development with Python book by Harry Percival. It's very easy to follow and introduces libraries and important concepts along the way. It's free on his website if you do a search.,1516922746.0
fubarx,"You may want to split your app into separate standalone entities that can invoke each other through clean interfaces.

For example, a Product class implements the model and logic code for accessing product data. Make sure you have encapsulated classes for operations that apply to instances, like update and delete actions.

Django also lets you have a separate ""manager"" class for each object. You can implement creation and lookup functions there.

Now each time you create a new product you call the ProductManager's create method. To look up product values you call ProductManager's find method (these are your own methods, they're there to make sure there's a standard way to access the object). Each time you want to change an object you call the product instance's update method. This way everything is nice and encapsulated.

For standard web views, you create a views.py and go through the manager class to create/find and through object methods for update/delete.

For DRF your serializer goes through the same interfaces. For unit-testing you go through the same (or mock versions of them). Also if you need a command-language interface or to implement websockets.

This way each module offers a standard way of interacting with it. Now if one app needs to interact with another app's objects all they have to do is ""from app.models import ProductManager, Product"" and they're good to go.

It sounds like your DRF implementation is tightly bound to object implementations which makes it hard to keep things encapsulated. That's one of the problems with DRF. They make it really easy to munge it all together since their serializers take care  of a lot of boilerplate code. But treating DRF as just another kind of view on the app makes it easier to test and reuse the code.

tl;dr: if your app has to make a web API call to itself to get something done, you've got a problem.",1516903837.0
DrinkingAndFighting,"Personally, I'd refactor the view into a method that can stand along without a request, so you can call it from other parts of the app.

However what you're describing is possible, and sometimes a good idea if you're trying to architect your code in such a way to allow an easy refractor into microservices.  I have done this before in Flask, and I'm pretty sure the same can be done in Django. You can abuse the TestClient to make requests to the server.",1516912674.0
never_safe_for_life,"There are two options: call the code directly, or call the code via the API.

In the first approach, one piece of code has to import another and call it. Total overhead: a few thousandths of a second.

In the second approach, you send a new HTTP request out to the network interface, through nginx and uwsgi, then back again. Total overhead: maybe half a second.

It's 500x more expensive the second way. Not that this is _inherently_ bad, but you want to think through when to use HTTP as an interface and when not to. This is generally the way microservices interact, but they have good reason to operate independently.

The only difficulty in the first approach is that you likely wrote your code in the view class, and how the heck do you call one view class from another? It's not easy, so a better approach would be to abstract that code out of the view. I like calling it the 'service' layer, so in this case a 'wishlist service'. 

Both your view and the original view call the service, which returns Python objects. It's the views (only) job to serialize that into something an http response can handle.",1516923493.0
levymtr,"Use a serializer hyperlinked, will help you",1516902984.0
FeatheryAsshole,"Sounds like you need to 

> Change your form to point to localhost:8801/api/formularios/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.
",1516896165.0
Nicksil,"What part of the error are you having issues with?

- Did you append a trailing forward slash to the URL?
- Did you set `APPEND_SLASH = False` in your settings?",1516896238.0
levymtr,"my request URL witthout ""slash"" when click button. but should send with slash. I don't how to make a corret post  ",1516897140.0
Niicodemus,"Check your URL configuration, you may not have the slash in your regex, and thus when you `{% url ""post_view"" %}` in your template, it's not adding the slash.",1516903169.0
levymtr,"I got It, the solution is, in angularjs exists a  $resourceProvider.defaults.stripTrailingSlashes a function, per default is true, but you set a false.
    config:

      .config(function($httpProvider, $resourceProvider) {
    $httpProvider.defaults.xsrfCookieName = 'csrftoken';
    $httpProvider.defaults.xsrfHeaderName = 'X-CSRFToken';
    $resourceProvider.defaults.stripTrailingSlashes = false;
})",1516903396.0
Nicksil,"bruv, the error message is telling you exactly what the issue is.

Go into your settings file, go to line 134+ and correct your indentation. ",1516856299.0
mukwastaken,"You're running into a Python syntax error. In Python, whitespace is important. That means it treats things like spaces and indents as important syntax. In other languages, code blocks are often determined by brackets {}, but in Python, it's whitespace, indents and linebreaks.

In your case, you have a space in front of the if statement here https://github.com/normandantzig1/urban-doodle/blob/master/mysite/settings.py#L134 which is a syntax error. This is what the error message means when it says unexpected indent https://github.com/normandantzig1/urban-doodle/blob/master/herokuErrorMessage#L34",1516856433.0
black_loop,[django-nested-admin ](https://github.com/theatlantic/django-nested-admin) does that.,1516828088.0
brtt3000,What about Django 1.11 and 2.x?,1516828218.0
booooomba,">OneToOne field of Client

That's the problem. It should be a one-to-many. For every ONE client you have MANY health measurements.",1516805751.0
pat_the_brat,"Your `BodyMeasurement` model should have a `models.ForeignKey(Client, ...)` field, and a Date/Time field.

https://docs.djangoproject.com/en/2.0/topics/db/examples/many_to_one/",1516806534.0
ajr237,"Just having a bit of an issue accessing the BodyMeasurements data in the view now.

I have this in my View

body_measurements = BodyMeasurements.objects.select_related().filter(pk=pk)
return render(request, 'clients/client_detail.html', {'client': client, 'body_measurements': body_measurements })


and this code in my template

{{ body_measurements.Body_mass_index }}

also {{ body_measurements }} just results in an empty query set <QuerySet []>

Nothing is returned though. guess I'll need to have a good read of those docs posted. Thanks for the help though, definitely got me going in the right direction.

**EDIT

I've removed the .filter(pk=pk) and I am now able to loop through each attribute:

{% for measurements in body_measurements %}
    {{  body_mass_index }}, 
{% endfor %}

Only problem is that it is displaying every BMI result (for every client, no just the one selected).

",1516808017.0
softiniodotcom,You should consider wagtail for your blog.,1516884661.0
booooomba,"Nice guide, just two suggestions/questions:

1. Why does absolute_import require future?
2. Why is supervisor still used? A systemd service would be easier and one less thing to install.

And just to be sure: This is not meant to be negative! :-)",1516755527.0
flipperdeflip,If Celery is a but too much work to setup but you already have redis then you can have RQ and django-rq working in 10 minutes.,1516871088.0
Valachio,It was late at night.  That banner image scared the shiet out of me,1516938042.0
andrey_shipilov,"You’re not creating an instance. You just get the class from the app. 

Is there a reason why you’re not doing it the conventional way?",1516756193.0
heppy,"I think your original problem has been solved, but if you want to set multiple attributes at once, you can also do it like this:

    data = {
        'field1': 'value1',
        'field2': 'value2',
    }
    model = apps.get_model(app_label=""theme"", 
    model_name=""MyModel"")
    obj = model.objects.create(**data)",1516778147.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/python] [\[help\] unbound method save() must be called with MyModel instance as first argument](https://www.reddit.com/r/Python/comments/7sj9st/help_unbound_method_save_must_be_called_with/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1516754736.0
IntermittentSteam,"    obj = apps.get_model(...)

This makes `obj` another name for `MyModel`

To use it, you'd want to do this:

    my_obj = obj()

Now you have an instance of `MyModel` (which would usually be done with `my_obj = MyModel()` directly)

The instance can then access the `save()` method:

    my_obj.save()

It doesn't make sense to call `obj.save()` since that would be equivalent to `MyModel.save()`

(Related: You probably don't want to use `setattr`, but instead want to do `my_obj.myCol = 100`)",1516759464.0
i_amwithnail,"It's very common, I think the question was just misunderstood. 

We use a react front end on a DRF backend.  (Our authentication service is actually a separate system, but also in DRF, and that doesn't make much difference for these purposes.) 

For auth, the user logs in via React, which sends BasicAuth (username, password) to DRF, which provides a JWT.  The token is presented as an Authorization header on every request to the API.  When the token's decoded we get the client ID to filter the responses round.  The [Django-JWT](https://github.com/GetBlimp/django-rest-framework-jwt) implementation is a good place to start if you want to use this.   To make JWT more secure (see, e.g. [this about brute forcing](https://auth0.com/blog/brute-forcing-hs256-is-possible-the-importance-of-using-strong-keys-to-sign-jwts/) ) we use an 800 bit secret, which makes it v hard to brute force the signature verification.  We also have a very short expiry time on the token ( a couple of minutes), so that if we need to disable a user, we can deactivate them (`active=False` on the usermodel), and the token will no longer refresh. 

If you're not sure where to start with this, have a look at Django AllAuth, it has some good patterns.  

Staticfiles - depends on setup/requirement but we've found Whitenoise to be fine for almost all of our needs. We have a specific need for user uploadable photos (tens of thousands of them, hundreds every day), which we manage in S3 using boto, as `media` rather than staticfiles, iyswim.  

If you're considering React as a front end, it's worth knowing that you can [host it as a static site on s3](https://medium.com/@omgwtfmarc/deploying-create-react-app-to-s3-or-cloudfront-48dae4ce0af) (or similar, other providers are available! We just use AWS is all) - you don't need a node server running. You can probably do this with some of the other front end frameworks, I'm just familiar with how to do it in React. :)  We host ours in an S3 bucket behind a cloudfront CDN which makes it ridiculously fast, and means all your SSL needs can be covered in AWS. 




",1516798173.0
andrey_shipilov,Bad idea. ,1516756251.0
booooomba,"Haha well this is something new. :-)

So first question: Why the hell are you trying to do this? What are you hoping to get from it? ",1516755777.0
EpokeWeb,"Use Django-Allauth and follow the steps. In the settings section you will find:

ACCOUNT_AUTHENTICATION_METHOD (=”username” | “email” | “username_email”)

If your settings.py, use:
ACCOUNT_AUTHENTICATION_METHOD = ""email"" 

And BAM. Only email mode.

http://django-allauth.readthedocs.io/en/latest/index.html",1516761879.0
luv_dhari,"I would suggest making a custom user model as that is a better approach if you want to add some features into the user model in future.

",1516827462.0
warrior242,"This is the code that I wrote for my backend to switch from username to email. Let me know if there is something wrong with it because it doesnt work. 



    from django.contrib.auth.models import User
    
    class EmailBackend(object):
        def authenticate(self, username=None, password=None,):
     took out because it wasnt anywhere
            try:
                User.objects.get(email=username)
            except User.MultipleObjectsReturned:
                user = User.objects.filter(email=username).order_by('id').first()
            except User.DoesNotExist:
                return None
    
            if getattr(user, 'is_active') and user.check_password(password):
                return user
            return None
    
        def get_user(self, user_id):
            try:
                return User.objects.get(pk=user_id)
            except User.DoesNotExist:
                return None
    

and then at the end of my settings i put 


    AUTHENTICATION_BACKENDS = ('django.contrib.auth.backends.ModelBackend', 'Users.backend.EmailBackend')

Users is my app. backend is the name of the file I put this code in, and emailbackend is the class. I keep looking at it and it should work but I am not understanding why it is not.

Please let me know what you think ",1516869188.0
Nicksil,"You want to look into creating a [custom user model](https://docs.djangoproject.com/en/stable/topics/auth/customizing/#substituting-a-custom-user-model)

Also suggest working through the Django [tutorial](https://docs.djangoproject.com/en/stable/intro/tutorial01/) to become better acclimated with the framework.",1516750687.0
Velkow,Facebook .. :yuck:,1516740928.0
accraze,"I worked with Oscar quite a bit last year and some of 2016. It’s great once you know how it (and Django) works, however there was a huge learning curve for my team. The Oscar lingo can be a bit confusing as well if you are not from Western Europe.


The best thing about Oscar is that it is completely modular and allows you to mold the framework to your exact business case. It comes with a pre-built sales funnel/checkout flow, but you can subclass whatever you want and add your own functionality. Everything is split up by domains, so if you need to work on a cart issue, you can just focus on the cart app etc...


The downside imo is learning the framework, the docs are not super helpful, you will need to resort to reading the source code a lot if you are doing heavy customization. It is quite opinionated and has a lot of idioms that can be confusing the first few times you encounter them.


Overall it worked for my company, we have a multi-tenant marketplace running on Oscar, you can see one of the sites at www.gearogs.com

",1516724502.0
andrewingram,"I guess the crux of my argument is that I think ecommerce frameworks are an anti-pattern, so I favour good jumping-off points instead. Oscar’s swappable module pattern is great if you only want to tweak some functionality, but if you want bigger customisations you end up having to override so much of the codebase that you’ll very quickly find yourself wondering why you’re even using it. The prettiness of the UI is the last thing I’d be worrying about, it won’t take long to adjust to your needs. The question is whether the fundamental programming model is sustainable in the long term, with Oscar I’d argue it isn’t. But obviously this is purely down to opinion and preference.",1516795636.0
andrewingram,"Well, I don't know what Oscar is like now, but I worked on it in the early days, and combined with my experiences with other Django-based e-commerce frameworks, I reached the conclusion that we keep trying to solve the problem in the wrong way. Why? Well fun fact, the first major use of Oscar contained practically zero Oscar code once it finally went live. If you need something simple, Shopify is probably more than suitable. But if you need something bespoke *and* you have in-house coding capabilities, you're going to be fighting a framework every step of the way.

I now advocate forkable examples. By this I mean sample projects (not frameworks) that are relatively well-aligned with my requirements that are intended to be forked and heavily modified.

I believe [Saleor](http://getsaleor.com/) follows this philosophy, it's built by some of the people who worked on Oscar (amongst other ecommerce frameworks) at the same time as me.",1516790154.0
flipperdeflip,"/r/djangolearning

1) What do you mean with ""is there a way to access the given url before url patterns?"" What do you want to do?

2) The manual got you covered (its great if you know the way). First you look [here](https://docs.djangoproject.com/en/2.0/ref/class-based-views/generic-display/#detailview) at the DetailView. Then you see [get_queryset()](https://docs.djangoproject.com/en/2.0/ref/class-based-views/mixins-single-object/#django.views.generic.detail.SingleObjectMixin.get_queryset) and you'll find:

> Returns the queryset that will be used to retrieve the object that this view will display. By default, get_queryset() returns the value of the `queryset` attribute if it is set, otherwise it constructs a QuerySet by calling the `all()` method on the `model` attribute’s default manager.

So `model` is nicely concise, `queryset` is there if you need a specific filter or annotation and you can also override `get_queryset()` (with or without `super()`) if you want it dynamic based on `self.request`.",1516699759.0
Nicksil,"Congrats and well done!

A huge thank-you to all who contribute to this most excellent project!",1516673087.0
EpokeWeb,"The last time I did it, I used django-dynamic-formset

https://github.com/elo80ka/django-dynamic-formset

There is a great list of demos to make you understand how it works! 

https://github.com/elo80ka/django-dynamic-formset/tree/master/demo/templates/example",1516669167.0
mrtrunin,"Depends on the problem you're trying to solve. Typically the limiting factors are the cost of using the API for pulling a lot of data and DB performance. If either of the two is an issue, then I would ask:

(1) In practice, do you need all the information about all financial items after every 10-minute interval? Maybe you only need full information on a few items from the total list of several thousand or you need all the information only once every two hours instead of every 10 minutes.

(2) Do you need all of the historical data at all times? If the worry is that the table grows infinitely then you could always consider implementing a regular archiving / cleanup process that removes old data.",1516656169.0
jmfsn,"Basically you have to decide whether you need your app to use historical data or not. If the queries you want to do can be done through the JSON API, you can sort yourself out with just the current basic information you have. If not, then you need to download the historical data to query it. Please check the terms of conditions of the API for rate limits or whether you need a special authorisation and whether they have a bulk way of providing the historical data.

Oh, and for collecting the historical data you probably want to do it directly with a task (rq or celery, using requests), not through a view.",1516660046.0
booooomba,"Why would you think it wouldn't have a future? Its userbase is very large, development is going strong and the ecosystem grows along with it.

What EXACTLY are you concerned about?",1516640695.0
zettabyte,"[Just a Google away](https://www.caktusgroup.com/blog/2016/12/14/django-boring-or-why-tech-startups-should-use-django/)

It doesn't sound like you have specific concerns, so a non specific ""Yes, it has a future"" is about all we can offer.

As that article states, it's pretty boring.  It's not about bleeding edge, it's about a simple to use framework that lets you focus on features.  Coupled with Django Rest Framework, it's a pretty good stack to run a website on.

[And there are some big websites that use it](https://www.shuup.com/blog/25-of-the-most-popular-python-and-django-websites/) (though some of those are just Python).",1516642654.0
BuyChristianSlaves,It's pretty much taking over the whole backend development space. Coupled with React for the front-end together they are unstoppable,1516687675.0
flipperdeflip,[Wagtail](https://wagtail.io/) comes to mind.,1516966535.0
filteredport,"Do you mean SAML instead of SingleSignOn?

If this is the case, for seamless authentication I think it os better to use SAML. Oauth is better for authorization.",1516825501.0
flipperdeflip,"/r/djangolearning

There is no instance of `model` in this code. You got the model class and messed about with some meta information.

Why do you use the name 'column' instead of 'field'? It is inaccurate and confusing. 

You need to pull some instances with `model.objects.get()` or `model.objects.filter()` and then use dynamic attribute access, like `setattr(my_instance, field_name, my_value)`. Or maybe do a direct `model.objects.update()` on the database.",1516614570.0
flipperdeflip,"You could run a regular expression over the message text, find every word starting with @xxxx, query the user table for these names and replace the words that match with a user with a link to their profile or something. Then send a notification to the users you found.",1516612434.0
fuckslavs,"Unless I'm misunderstanding it's relatively easy to nest through templating
    
    return render(request, template_name, {'customer': customer, 'lines': lines, 'formset': formset})

    {% for line in lines %}
        {% for form in formset %}
            {% if form.instance.id == line.pk %}

For adding forms create a hidden div/tbody/whatever that's a ""copy"" of your visible formset but using formset.empty_form

    <div id=""form_set"">
        {% for form in serviceFormset.forms %}
            <table class='no_error'>
                {{ form.as_table }}
            </table>
        {% endfor %}
    </div>
    <input type=""button"" value=""Add More"" id=""add_more"">
    <div id=""empty_form"" style=""display:none"">
        <table class='no_error'>
            {{ serviceFormset.empty_form.as_table }}
        </table>
    </div>
    <script>
        $('#add_more').click(function() {
            var form_idx = $('#id_form-TOTAL_FORMS').val();
            $('#form_set').append($('#empty_form').html().replace(/__prefix__/g, form_idx));
            $('#id_form-TOTAL_FORMS').val(parseInt(form_idx) + 1);
        });
    </script>

For deleting you could do something like this. It just checks the form's delete checkbox then hides the table row and lets django handle deletion on the back end

    $(document).on('click', 'button.Delete', function() {
      var target = '#id_' + $(this).val() + '-DELETE';
      $(target).prop('checked', true);
      $(this).closest('tr').hide();
    });

    if formset.is_valid():
        instance = formset.save(commit=False)
        for obj in formset.deleted_objects:
            obj.delete()


",1516620018.0
yoongkang,"Can you give an example of what you're trying to achieve that is difficult with inline formsets?

EDIT: I know you gave a few examples, but just not really clear what you're trying to achieve.",1516576330.0
flipperdeflip,"It's probably not a great idea to send ""mass email"" from the webserver app even from a thread.

Also why doesn't this use the regular template syntax?",1516610549.0
MajorCopper,It's a terrible day for rain...,1516570740.0
booooomba,Just work through the official tutorial. ,1516552468.0
james_is_an_ok_guy,"Udemy has some solid tutorials. My advise is to take some of those classes where you build multiple projects so you see how the pieces generally fit together. Then work on your own project using the tutorial projects for reference. Then during that build start diving more into the Django docs to better understand how different pieces work.

In general I disagree with the other commentor saying you need to understand js/bootstrap/git etc first. They're not building blocks of a framework, so you don't lose anything by learning what you want, and then learning other pieces as they become necessary to build the things you want.",1516563981.0
fuckslavs,"I started with the simpleisbetterthancomplex tutorial. Once I had a decent understanding I took what I learned and applied it to my own project. I think having a project in mind rather than blindly following the series was definitely a good motivator. 

I just deployed my app last week for internal use within the company I'm at.

I found the tutorial series incredibly easy to follow. Anything not included I was able to find answers by googling. 

",1516580117.0
volkandkaya,"* Learn HTML, CSS
* Learn Bootstrap 4, amazing CSS/JS framework that makes websites look great with little work
* Learn the basics of JavaScript
* Learn the basics of jQuery
* Learn Git and GitHub
* Learn SQL
* Learn Django (Django girls tutorial -> official tutorial)
* Build a small project

Once you have completed that you can move onto

* Django REST framework (to build single page applications and mobile apps)
* I recommend React but any frontend framework
* Build a medium sized project 

",1516557007.0
ynotna,"Depends, is the text actually HTML (e.g. containing tags)? or is it plain text that has been HTML escaped?

If the text is actually html, then I think marking safe is the correct way

If not, then you could reprocess the stored entries so that they are stored ""properly"" (i.e. not as html entities), and then they will be encoded to them when outputting html

e.g. iterate over them with https://docs.python.org/3/library/html.html#html.unescape

You could do also do the same ""at run time"" in between the text being passed e.g. instead of marking safe",1516547497.0
helicopetr,"In my opinion either your text data is supposed to be html formatted, with headings, tables, images, and so on, or it isn't. If it is, use Django-ckeditor or something similar to get a rich text editor in the admin. If it's not, make a database migration that unescapes all the strings in the database.",1516560827.0
jarshwah,"You need to show your code and stacktrace if you want help here. You can assign a datetime to a DateTimeField. The fields themselves aren’t subclasses, they’re containers. ",1516532176.0
TunaBoo,"This will not work as written AFAIK. 

The correct way to do this, is to pass the order_by to the more fancy version of prefetch related

See the second half of this doc

https://docs.djangoproject.com/en/2.0/ref/models/querysets/#prefetch-related

You will thus do your prefetches ordered.",1516488840.0
charettes,"As mentioned by TunaBoo you'll have to use a `Prefetch` object.

    albums = Album.objects.order_by('-created')
    artists = Artist.objects.prefetch_related(Prefetch('albums', albums))
    for artist in artists:
        artist_albums = artist.albums.all()  # They'll be ordered.

",1516524539.0
TunaBoo,"Install Django debug toolbar. It will show you.

Querysets are lazy though",1516485359.0
dirtybutter,https://docs.djangoproject.com/en/2.0/ref/models/querysets/#when-querysets-are-evaluated,1516519059.0
igncampa,"maybe the tl;dr version is:
> am I hitting my DB twice on the same view?",1516483147.0
daredevil82,"are you storing the query params in the database?  Usually when you seen an error like that, its db-related.

Also, do you have any logging going on?  You should have the stack trace in the logs to see where its happening.",1516472331.0
dirtybutter,"If this is a learning project, I'd suggest diving into plain JavaScript and see if you can get it working.  In addition to the DOM API, some topics you might find helpful are fetch, xml requests, document fragments, web workers, progressive web apps, promises, and async functions

Otherwise I'd suggest picking a front-end framework (react or vue) and learning how it would work with remote data

Once you've done either of those, I'd look at the template you have and break it down into components that you can map to your data. 

This is all very general, so if you have more questions I'd be happy to answer them",1516472454.0
george-silva,"Well, what I do when I need the SPA index.html served by django, o usually place my SPA repository next to the Django repository.

Then configure static_dirs to also use that as place to look for templates.

Then create a simple view and ask It to render Index.html.

Django Will find your index and It Will serve It just fine.",1516477939.0
mbrochh,"Our stack at theartling.com does what you want. The repos for frontend and backend are actually different repos.

Both repos are deployed to the same EC2 instance, though (good enough for low/medium traffic sites). So you deploy your Django site and then you deploy your frontend (I can recommend Razzle as a great starter kit to get a ReactJS frontend up and running).

With Razzle, when you build your frontend you get two builds: One huge server.js that contains everything and one ""public"" folder that contains the bundle.js and all the chunk.js files (and media files) for the client.

We upload the server-build into the EC2 instance and run it with a software called ""pm2"" (that's like supervisor for Node.js apps) and the client-build into a S3 bucket.

We use graphene-django for our API and Apollo on the frontend to make GraphQL queries against our API.

In our Nginx config we have proxy passthroughs, so requests to /admin or /gql go against Django and all other requests go against the pm2/Express server that pre-renders the templates for SSR.",1516506476.0
yoongkang,"Hey, looks like you're on the right track. 

I don't know what your hosting situation like, or if you're just running this locally. In either case, your front end JavaScript will have to make AJAX requests to your API. So if your Django application is running on http://localhost:8000 for example, you will need to make AJAX requests to http://localhost:8000/api/products/ (or whatever your endpoint URL is). In Angular you're probably going to need the $http service (you should check this as I'm not an Angular developer, sorry).

Your front end JavaScript should expect the API to return a JSON containing a list of products. Typically you use a templating library (in Angular) to display this data based on what you received.

The other thing is, since your frontend and backend are on different domains, you need to configure your Django application to enable CORS. You can look at a library called django-cors-headers for this.",1516575964.0
Borderline92,To start look into function based views and how to call a template and define a context. That should get you going.,1516470877.0
IvaGambino,"[Python and Django Full Stack Web Developer Bootcamp](http://www.udemy.vip/python-and-django-full-stack-web-developer-bootcamp) is a great Django course. Jose goes fully in depth into both the front-end and the back-end which let us understand fully and become a very powerful developer using the Django Framework. Great for novice web developers to get started, and quickly move developing some complex websites.",1516466846.0
daneah,Django's official tutorial is actually quite thorough and beneficial. It goes through creating a small project from start to finish. Beyond that I would recommend the book Two Scoops of Django.,1516466498.0
masahazen,"This [page](https://www.codingforentrepreneurs.com/) is very usefull, Justin Mitchell make very good courses focused on Django.

[Teamtreehouse](https://teamtreehouse.com/) is very good too.",1516475234.0
m0skit0d3lt4,The Tango With Django ebook was what finally got me going ,1516483119.0
slackPy,"Reading the docs then just diving into my proj and learning as I went was how I learned django.
I had a good understanding of how python works under the hood and object-oriented programming which helped a lot. Might be good to start there then poke around in the [source code](https://github.com/django/django). Python is really wonky as an object-oriented PL but the django devs do it pretty well. 
I also think python is a very clever language– a lot of engineering knowledge can be gleaned by studying it: https://stackoverflow.com/a/6581949
",1516488186.0
AegisAsterism,"I actually just taught my self Django in the past two weeks. I preferred Mozilla's Django tutorial over Django's one in their documentation. It was a much more comprehensive tutorial covering a wider variety of features.

https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django",1516496591.0
PetterOfCats,"2nd Django's official docs. Since you're new ( or guessing you are ), one of the highlights for me is Django's wonderful documentation. While they're not the gospel, I do find that if Im operating far outside of them, Im usually digging myself into a whole/implementing some anti-pattern. Fulltime dev, using that framework since 1.3. I still every now and then come across something new and useful in that framework. ",1516503979.0
furyfred,"Justin Mitchell for basics, then Two Scoops of Django once you start getting the hang of things.",1516527204.0
pat_the_brat,https://www.obeythetestinggoat.com,1516446611.0
fubarx,"Does your app involve user input? Then create a bunch of tests that adds good data and also bad data. Your tests should work when good data is entered and fail when bad stuff shows up. Change up the types of bad data to catch common user errors.

Does it involve database record creation when the user has done something? Then create tests that simulate what the user would do then verify that the proper records with the proper field values were created. On cleanup just delete those records.

These might seem obvious. Of course it should work, but what you're doing is helping your future self not work so hard or make silly mistakes and break things with a misconfigured json file or letting people enter punctuation marks or emoji where it shouldn't be allowed.

Do you rev your code and push out updates? Have a bunch of sanity check tests that make sure the right files are in the right place, that config files are parsable and, that migrations worked properly. Also test for the negative to make sure you catch inadvertent problems.

And if you want to be safe, set up a separate 'test' environment (i.e. a database and the app running on a different machine or port) so you can run your tests without impacting the production site. To make sure your tests are close to the real thing run a script and snapshot the production system to a testing environment then run the new code against that version to make sure it works before pushing the new code into production.

If your service offers web APIs you can also exercise those by using the requests module and and sending good and bad calls to your service then checking to make sure good records were created and bad ones weren't.

Tests are there to help you catch your own inadvertent mistakes or to defensively look for user errors or hacking attempts. Over time you'll have a bunch of them that you can run automatically before each deployment. And each time you add a feature, add a few more to make sure the new feature hasn't broken any other test. Your future self will thank you.",1516463425.0
grudev,"I wrote this as a starting point:

https://dezoito.github.io/2015/09/21/how-to-test-django-applications_pt1.html

It deals more with structure and code than concepts, but I hope you can find it useful. ",1516465751.0
pat_the_brat,"Do you want your users to be able to login through Facebook, or Google? Then you need to use OAuth. I'm much more likely to register if you allow me to use a social network than ask me 600 questions, and I am sure I'm not the only one.

If you want to be an OAuth provider, that's a whole other question.",1516439031.0
danux,"It really depends what you're doing. OAuth is useful if you're building an API that lets 3rd parties access your user's accounts. Or, for example, if you built a companion app and didn't want to store people's usernames and passwords in the device.

OAuth basically works using tokens. If in the future you want to revoke access to an account from a 3rd party service or app, you simply revoke the token.",1516436043.0
scunion,"I use oauth in my site and love it. My app connects to salesforce so users just click to sign up and salesforce gives me a token I can use to query/update data and users never have to reset their password. 

You do have to be aware that tokens expire so you generally need to refresh them or have the user log in so often to get a new one. 

Downsides of oauth: you can’t just place a username/pw form on the site and with users. Generally, when a user clicks to log them in there’s some back and forth to confirm that user x is trying to log in with your app. It’s not crazy but you’ve got to have a callback view to handle that back and forth. 

Others are right that data can be inconsistent between providers but it’s always abbeys practice to ask for ONLY the data you need. Don’t ask for friends’ info or photos or some other bs if all you REALLY need are email and birthdate. 

Otherwise, I’d say give it a shot, at worst it should cut down on users forgetting one more password",1516461896.0
mosfotoh,Using OAuth depends on what u r doing ! So the should answer here depends on what u know it should .,1516463726.0
dirtybutter,what exactly would you like feedback on?,1516425043.0
FeatheryAsshole,"sqlite is easier to use and uses less RAM, but believe me, you don't want to use it if you already got a project set up with mysql. sqlite is slow as shit, and that definitely isn't better at sd-card-speed.

how much RAM does your system even use?",1516425795.0
exxy-,You should print the coin_price variable and make sure your API function is returning more than one object in the first place.  Make sure that whatever type you're returning is compatible with json.dumps. ,1516426989.0
Obviousresons,"I think you should be able to use JsonResponse https://docs.djangoproject.com/en/dev/ref/request-response/#jsonresponse-objects).

You should be able to return as many objects as possible. I think for returning a QuerySet you might have to serialize the data first, although if you’re trying to return objects that have foreign relationships you’ll have to work with it a bit.",1516408789.0
haloweenek,Appenlight ,1516341153.0
danidee10,"django-notifs would also have an API to decouple it from django, this means that you can send and manage notifications for your application's users regardless of the language or framework you use.

From PHP to Node, Go, Shell Scripts, Even mobile apps.",1516376964.0
marmaladeontoast,This looks really well done... Nice job,1516351509.0
grudev,"That was indeed fantastic.

Any plans to package this as a pluggable Django app?",1516388290.0
Mypupsup,"awesome stuff. btw, bootstrap 4 stable came out today",1516390732.0
checkYourCalendar,Mind if I ask what your reasons were for choosing this particular stack over integrating Channels?,1516443531.0
fanckush,"This is great, i did something a while ago with django channels and redis and vue for the front end (i used vue as a jquery replacement) so no SPA or anything form that kind
I find this much better than my approach !",1517062154.0
Valachio,Look into `collectstatic`.  Usually you need to run that to put everything into a single static folder before you can use static files in production.,1516328093.0
jarcoal,"Follow the WhiteNoise instructions here: http://whitenoise.evans.io/en/stable/

Short answer: you haven’t added the appropriate middleware. ",1516460204.0
gosh_djang_it,"ok I got it fixed with help of someone from codementor. As /u/Valachio suspected, it wasn't running staticfiles for some reason (even though I had DISABLE_COLLECTSTATIC set to 0) , Plus, when it did, there was a problem with staticfiles_dirs. I removed my configuration parameters to set to default, and simply *removed* my staticfiles_dirs so it would default to the magic of finding static files in my apps. With those changes it worked!

New/slightly improved version is in updated repository.",1516513912.0
FeatheryAsshole,"is it just that one file? if so, i'd check whether it's actually there. no idea how this works on Heroku, though.",1516327720.0
tkc2016,"I personally remove my settings.py from git so it doesn't update.

Look into configuration management, something like ansible.  You can deploy your settings file using a template and automate cycling only if the git clone changed something.",1516336552.0
benjiboi214,"As you figure out these small steps to set your VPS in a usable state, consider taking a look at Ansible to create reusable build scripts for your deployments. Often you'll figure it all out once and then need to figure it out again in a year's time when your server falls over.

Either document your process well, or automate it and maintain a repo for deployment as well! :)",1516530955.0
shiggie,"You're probably going to want to put it behind apache or nginx with gunicorn. And if you checked in your settings.py, you've checked in your secret. Even if you've paid for private repositories, it's still not a good idea to leave your secret in there.


I recommend reading the Two Scoops of Django - that's a more complete explanation of the things you want to do.",1516325476.0
FeatheryAsshole,"yes, you have to clone it into the appropriate folder. check your app on the VPS into version control as well and then git pull when updating. 

best practices: 

- use a staging server that is as close to your VPS setup as possible - same distro, same database password, same webserver, same settings (i.e. `Debug == False`) etc. - this can be just a PC on your local network or even a VM (VM generally not recommended).

- it would be wise to automate deployment, e.g. with `fabric` - you can automate downloading, database migrations and all the necessary settings changes with it. a regular old shell script is fine, too. this really cuts down the hassle when updating your application.",1516325884.0
bpainter327,https://tryolabs.com/blog/2012/06/18/django-administration-interface-for-non-staff-users/,1516302572.0
porksmash,You need to use Javascript. onclick is a javascript event and only happens in the browser. ,1516294661.0
SmellsLikeGrapes,"If the function that's referenced in the onclick event is firing, then it's probably safe to say it's being called from somewhere else.

You should inspect the outputted html code to see exactly how the page is being rendered. 

This is more a front-end JavaScript issue, rather than a Django issue.",1516299992.0
Nicksil,"Try wrapping in an anonymous function. I am not sure it will work, but can't hurt to try. Also, try working on separating out this sort of code. You'll eventually find that sticking JS all up inside your document will become unwieldy and insanely frustrating for your future self and/or co-workers.

`(function(){ {{ photo.id|checkandincrease }} })()`",1516286711.0
sentientmold,"Break it down into steps you want to do.

User report posts by clicking a link.  After confirming they want to report it save the post ID and probably the user ID of the reporter into a model called something like ""ReportedPosts"".

In the admin section either have a notification system track new reported posts since last log in or a table of reported posts.  The model can also include status like ""not handled yet; post deleted; post is ok; etc"" or ""open/close"".",1516260304.0
synw_,"You could use events if you want a simple and lazy solution: fire an event when the user reports something, and the admins can filter the events in the admin interface to check for reports. 

You can try my [django-mqueue](https://github.com/synw/django-mqueue) to manage events. This module also has options to report the events in real time via websockets if you want your admins to be notified",1516273458.0
c17r,https://stackoverflow.com/a/1126209/72005,1516248606.0
flipperdeflip,"Any time you feel a need to use \_\_dunder stuff in regular code you're probably missing a public API: https://docs.djangoproject.com/en/2.0/ref/models/options/#read-only-meta-attributes

    MyModel._meta.label
    MyModel._meta.app_label
    MyModel._meta.object_name
    ...",1516264705.0
jellyliketree,"Having up to two DB hits per response doesn't look that bad, is it actually a performance issue? It doesn't make sense to try to optimize for it just yet.

You can also retrieve the list of questions in batches, but have the answer verification be individual requests so that you can store the users' progress granularly.",1516234017.0
mariserts,"#2 because #1 is 'hackable' - i can see response with questions and answers in developer tools. ;)
You need to start with front end functionality, that will give you clue how to sort your backend
1. I want single page app
2. I can reload page for each question",1516230015.0
Nicksil,"Read through the application's logs (if you haven't set up logging, then view sys log)

Might be the ALLOWED_HOSTS setting not configured correctly.
",1516210081.0
rnevius,"Your best resource is going to be the Django documentation: https://docs.djangoproject.com/en/2.0/topics/auth/default/

This assumes you understand how Django works. ",1516164338.0
heo5981,"Hi, [this tutorial from MDN](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Authentication) is the one I always look for when I forget something about authentication in Django.

I read in another comment that you already solved your problem but that may help others or even give you a better idea about the subject.  Also, I encourage anyone to read all the parts of the tutorial, for a better understanding :)

EDIT -- Actually, I misread your question and the tutorial doesn't state how to create a **registration** page but if you understand well the other concepts of authentication (forms, post, models) than it shouldn't be hard, 

* create a registration page with the fields required in a form (username, password, password confirmation)
* make the form send a post, don't forget the csrf token.
* create a view that accepts the post from the form (it can be the same view that sends the page with the form) checks if everything is okay and create a new User instance with the data sent, authenticate the user and redirect to another view, if there was any error, send the same page with the erros specified in the form.

PS: If I got anything wrong, any correction is welcome.",1516213318.0
booooomba,What? Just youtube „Django user registration“. There are many videos about this.,1516173991.0
ccb621,"Stripe makes payment processing easier, and supports subscriptions for recurring payments.

I’ve used Oscar in the past for running a store. Saleor is also an option. ",1516170711.0
CardFellow,">I don't mind setting up a merchant account if it's cheaper/easier

No matter what, to accept payments, a merchant account has to be involved somewhere. You can either open your own (with traditional processors) or you can essentially 'sublet' someone else's (with aggregators.)

Note that Stripe is an aggregator - you will not have your own merchant account if you use them. This is not inherently bad, but it can cause complications in some instances. Companies that don't provide merchant accounts are somewhat more likely to freeze or close your account with little warning, because they're more risk-averse and didn't do a full risk assessment/underwriting when you opened the account. It's best for businesses that don't do anything that can seem at all ""suspicious"" to a processor. (As in, no big seasonal shifts in processing volume, no sudden spikes in number or size of sales, etc.)

Stripe acts as both the gateway and the processor, so it's not possible to use the Stripe gateway with another payment processing company. Not necessarily a bad thing, but something to keep in mind. If you decide down the road that they're too expensive or that you don't like the lack of phone support and want to switch processors, you'll need to integrate a new gateway, too. 

Authorize.Net acts as both a gateway and a processor, and you can use just the gateway (and get a merchant account through a different processor) or use the gateway and get a merchant account with them directly. Authorize.Net the gateway is supported by a TON of processors, so it's a good idea if you think you may switch processing companies in the future. It's much simpler to not have to change the gateway if you want to change processors down the road. 

Braintree can work as both a gateway and a processor, which is what they prefer to do, but they will allow the gateway to be used with other processors. Like with Authorize, that gives you flexibility down the road. Braintree also frequently runs promotions to give free processing for your first X amount of dollars, which can be a nice way to try it out and get a feel for everything.

If you're doing recurring payments, one thing you may want to check for specifically is automatic card updating, to keep card-on-file details current so that payments aren't declined when a customer gets a new card. That's one spot that costs recurring billing merchants time and money. Last I checked, Authorize was still in the process of setting that up, but Stripe, Braintree, and companies like TSYS all offer it. 

As far as costs, if you're only processing a few thousand/month or if your average transactions are small (under $50 or so) a flat rate company like Stripe will probably be your lowest cost option. If you're doing more volume, then a traditional payment processor with competitive pricing will be lower. There are comparison services (disclaimer, [my company](https://www.cardfellow.com) offers one) to see pricing from different processors.

I hope this helps!

",1516200120.0
charlielovescatfood,"I highly recommend Stripe. They really are developer friendly (straightforward docs, and very innovative). ",1516171096.0
kennydude,"Stripe is easy and very developer friendly. Most Payment Gateways are reasonably easy to implement though, as in you redirect the user to the payment gateway, they pay there, and then the user is redirected back. Usually with a callback directly to you so you can record the payment.",1516185648.0
gwynevans,"It's a common question - see [example question on SO](https://stackoverflow.com/questions/3748/storing-images-in-db-yea-or-nay) for example, but normally, it's better to store the file on the disk and just a reference to it in the DB.",1516147358.0
oliw,"You *can* store binary data in databases (as BLOBs) and I've seen arguments in the past for storing images in database blobs. I don't believe there's a one-size-fits-all answer for this... But for *most* people, filesystem approaches will be more appropriate.

As for storing ""a link to the file"", if there's a one-to-one between posts and their images, you could just store the image under the post instance's primary key. This does have considerations:

 - You lose the original filename but is that a problem? Possibly better to stop people sneaking through dodgy filenames.
 - You have to process every image and convert them to one type so you have a static extension (eg .jpg). You probably *should* do this anyway to filter out dodgy uploads.
 - Do your primary keys give away how successful a system is? I've had quotes from people and the quote ID something silly like 000012. This may not matter but you could store SHA1 hashes of the PK plus a salt. ",1516204889.0
njancsar,Just use the Django-storage library with boto3 and a storage bucket on S3. You can configure this all in like 8 lines and then just use Django vanilla file fields.,1516425682.0
george-silva,"Not sure about mongo or nosql. But dont store imagery in the database. Unless your database and you will be running database functions on the imagery.

A Nice case for that is postgis with Raster support where you can do calculations on the imagery stored. even in that Case, its possible to store them directly on disk.",1516186368.0
mariserts,"Main reason to store images in db (Base64 encoding) is if you are planning to restrict users from accessing images that has been signed as 'private'.
",1516202034.0
crawzacan,Check out Django channels if you're interested in web sockets ,1516145109.0
ramse,"How sure where you heard websockets are impossible, thats what [django-channels](https://channels.readthedocs.io/en/latest/) does.",1516145127.0
p_r_m_n_,"You can use both. Firebase provides a lot of nice features for mobile development. But if it sounds too good to be true, it probably is. I recently built a mobile app using 100% firebase as a back end and it became quite a pain. I finished the project right before they announced firestore (that might alleviate some pain points such as relational data, pagination, and sorting). While cool, a real time database for all data is overrated and can add unnecessary complexity (..but it might be worth it.. idk). I have a love hate love relationship with firebase. I just can't convince myself to give full control over my project to google. A lot of people apparently have success and enjoy it. I can guarantee it'll be easier to setup than django channels. The learning curve is really small. I would give it a go. At a minimum you'll want the other features firebase provides for mobile apps. It is really nice for prototyping and MVP's.

I usually choose django first. Django is one of the most productive frameworks I've ever used. When it comes to realtime services firebase, pusher, and even [pushpin](http://pushpin.org/) do a good job and can be used in harmony with django.



",1516168201.0
_wsgeorge,"Yup! I started a new project late last month. The last time I touched Django, it was 0.9. I like the fresh look :)",1516130589.0
FeatheryAsshole,nice! i assume that's for django 2.x?,1516131807.0
scottmacpherson,Animated SVG!,1516141672.0
chris_conlan,"It is pretty nice.

It tripped me up that all the assets are loaded externally, though. You can't use the launch page to test static asset configurations.",1516166586.0
faddypaddy34,Best part of 2.x for me is the URL routing. It is just so much cleaner.,1516195608.0
Timonweb,"I do really like the splash screen too, it's very modern and stylish!",1516263639.0
theology_,I can't pip install Django==2.0 for some reason,1516157005.0
JAmedeo,"Two Scoops of Django was an excellence introduction on Django.  If you are looking for specifics on converting raw sql to using the ORM I’d just recommended Django’s website and knowing SQL.  I’ll post the specific link shortly when I get to my computer.


Edit: Whoa my apologizes I thought the SQL was in the views and not the models.  There should be little to no SQL in the Django models.  I’d recommend Two Scoops of Django and going through the Django tutorial.  How to Tango with Django is also a good website.  ",1516101708.0
oliw,"Most of what you describe sounds like some crappy migration decisions. Do you really need your old migrations? Most people can —after a while— squash or even delete them.

In your case I'd suggest dumping your existing migrations as soon as possible. Unify all your environments (get them to the same state of models, data, migration), delete the old migrations, create new ones and `--fake` the `0001_initial` for each model (and Django).

That gets rid of a lot of historical sins, but it comes at the cost that if you ever need to restore an *ancient* backup, you may need to dig the old migrations out of git to reapply the old manual migrations and get you back to the state you started afresh.

If there are loads of `.extra(..)` or `.raw(..)` queries, you should be able to replace these. From Django 1.11, there's almost no reason to ever run raw SQL. Everything either has a [database function](https://docs.djangoproject.com/en/2.0/ref/models/database-functions/), or can have a function written for it which templates the SQL out safely.

I'm not sure which of these you're actually dealing with mostly. The migrations sound like the biggest headache but again, if there's no need to keep them, don't keep them. Start again.",1516106797.0
kindall,"Why not link directly to the section?

http://django-filter.readthedocs.io/en/latest/guide/migration.html#enabling-warnings",1516120724.0
netscape101,"I didn't know about this before. It is really helpful in Python and even  in Django. Try this:

   $  python -W once manage.py test -v 3

This is how I use it:

https://yoirtuts.com/index.php?title=Run_Django_App_and_Write_Stderr_To_File_And_View

",1516093179.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/python] [Something Cool I learned about recently in Python: See section:""Enabling warnings"" • r\/django](https://www.reddit.com/r/Python/comments/7qra4k/something_cool_i_learned_about_recently_in_python/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1516096302.0
oosthuizenb,Maybe you need to set the CORS headers in your app?,1516079625.0
Nicksil,https://djangopackages.org/grids/g/ecommerce/,1516063431.0
patrys,[Saleor](http://getsaleor.com/) maintainer checking in. You might want to check [eCommWar](https://www.ecommwar.com/) to research your options. It allows filtering by language and framework.,1516091894.0
beholdsa,I recommend mezzanine with the cartridge e-commerce plugin installed.,1516067639.0
ramse,https://www.ecommwar.com/,1516141708.0
booooomba,Theres a course on udemy about just that. Shows you everything you need.,1516060715.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/djangolearning] [Migrations Affecting Multiple Apps](https://www.reddit.com/r/djangolearning/comments/7qnh16/migrations_affecting_multiple_apps/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1516055001.0
rhgrant10,"I don't think you're wrong. The issue is that, in my experience, many Django projects make liberal use of many of Django's features (such as middleware, template logic, etc.). Without being deliberate, that tends to create many tight couplings to the framework. In turn, this makes testing views in isolation (i.e. with `RequestFactory`) much harder than testing views using the entire stack (i.e. with the `TestClient`).",1516041374.0
yoongkang,"You're not wrong. Depending on your definition tests that use the test client are integration tests.

Too bad views are usually tightly coupled to other stuff though, for example you typically use flash messages in the view via the messages framework -- that requires the middleware. So if you want to test a view like that you'll need to mock out a bunch of stuff, and people usually decide not to bother.",1516321417.0
Headpuncher,"If you are always connected to the net, ie not working on a train or in a cafe, then just link to it. Also if you are not making any changes to Bootstrap itself.   

Really, for a development environment it comes down to 1. network traffic (local files = faster, no breaking changes, no update nags etc) 2. Security, as I said working from a cafe/other public network. A lot of page refreshes under development will mean a lot (compared to zero) of bandwidth. 

If you ever want to show someone the site, you can do it offline in a meeting room without worrying about joining a network if you dl the files and serve them locally. Also true if you want to serve from a server in a VM, locally lets you see where it should go and how to configure, making eventual release easier too.   

my 2c",1516038733.0
lovestruckluna,"Just point to the bootstrap files on the CDN. Most users will already have those in a cache, so it will load faster. Also, make sure the link tag has checksums for security. 

I personally also put an `{% if DEBUG %}` to load offline, unminified files while developing. But that was mainly because I tend to work on planes sometimes. ",1516042562.0
gosh_djang_it,"So basically I didn't realize it but I was asking if I should store stuff on my server, or use a CDN. There is a good discussion over at stackoverflow, that agrees largely with what /u/Headpuncher said:    
https://stackoverflow.com/questions/2180391/why-should-i-use-googles-cdn-for-jquery/2180401#2180401

Another answer there also outlines when you *wouldn't* want to use a CDN.

Good discussions here also:    
https://www.quora.com/Why-does-the-django-documentation-recommend-using-an-external-cdn-for-static-files    

One point that doesn't come up very often is that it is always a good idea to try to develop in a similar environment to the production environment (e.g., postgres if you will be deploying to heroku). So it seems for lots of reasons using a CDN is actually more efficient than using local static files (this was initially very counterintuitive to me, but reading all the stuff at these links explains why--caching, local servers, etc). 
",1516075941.0
qwerty0931,Has anyone used django-channels in production ? ,1516025206.0
elgigi,I'd be interested in that as well.,1520244188.0
booooomba,"So what is it you want? That there cannot be two branches named BSC? 

Or that you can always see not only the ""BSC"", but also what batch  it belongs to?",1516015410.0
Stanulilic,"Sorry, Reddit messed up the formatting of my message as I was trying to reply and I can't fix the original message.

>Thanks! Sorry for the late reply

I should be the one apologizing for responding so late

>I took this project thinking it'd be easy but boy is it hard .

Me too. I thought it was going to easy as well. My deadline is in March so am panicking as I underestimated some features which turned out to be a pain in the butt to implement.

But am just glad that if I will be successful, I will have learned a lot since this the project touches on a lot of stuff.
I wonder, what method did you use to highlight the active link on the navigation?",1518202611.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/djangolearning] [Am stuck on the models. Please help](https://www.reddit.com/r/djangolearning/comments/7qj6wa/am_stuck_on_the_models_please_help/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1516016851.0
DustPuppySnr,The back button in a bowser loads the browser's own cache. It is not loading from your server.,1516014354.0
oliw,"You're putting way too much emphasis on ""should be configurable by a non-programmer"" conditions, and frankly they're a real pig. Not only will you get specced conditions that differ amazingly, they bloat out your code and invariably *never actually get used* past the time they were first set up. 

I'm not saying this is your fault. **Clients think they want this.** They want content management systems they have to learn how to use. They want silly settings they'll never ever touch again. They want to think they're doing stuff, taking five times longer than it would have taken you, rendering a result that is much, much worse.

There is very usually a clear *economic* case to argue here. It's much cheaper up-front. It's relatively cheap for you to iterate. Nobody else has to waste productive time learning a system. Make this case, up front and tack on a support period where you'll handle three or four iterations of the process by which time you'll know how to bill out for more.

This also makes *you* more valuable. Just don't highlight that too much.

---

Additionally —and perhaps more importantly— you don't really appear to have given any thought to how you actually get people to engage with this system. We have enough problems getting lazy office workers to fill out job-critical forms properly. The last thing somebody at the end of their long, physically-exhausting shift is going to want to do is fight an authentication system on a website they have no other interaction with.

Obviously, this means integrating with existing systems. Something we do for beginning-of-shift stuff is latch on to existing card reader systems. When a new event comes in, we look up who we're dealing with and ping them an SMS with a tokenised URL that allows them to skip authentication for the form we want them to fill out. They can do that on their phone with a few taps.

Your forms sound a lot beefier so I'm not sure where you expect these people to fill them out, but if you can integrate with existing card readers, even at a desktop environment, it'll greatly increase the engagement rate. Don't fool yourself that something being ""mandatory"" will mean it's actually used. It just takes one hero to unplug the computer or put a spanner through the screen and everybody gets to go home 10 minutes earlier with a legitimate excuse.",1516012428.0
Verio,Clever idea about invalidating tokens. I've seen others create a temporary blacklist or storing tokens in redis and checking against that. ,1516010910.0
Dababolical,"Thanks for sharing the tutorial. I am nearly finishing up deploying my first app, a basic blog.  I plan on picking up React and learning DRF to build a bigger project. Glad to see people writing for 2.0 already.",1516009671.0
,[deleted],1516040744.0
Chiron1991,"To be specific: You want to know how a **relational** database works. That's what the Django ORM works with. For the basics read at [Wikipedia](https://en.wikipedia.org/wiki/Relational_database).

Once you're familiar with basic concepts and terminology, connect your Django project to a SQLite database. It behaves like a proper relational database system and is great for doing your first steps since you don't have to hassle with setting it up (it's just a file on your disk).
Note that SQLite isn't suited for production apps or heavy workloads **at all**.

When you want to dive even deeper or want to deploy your Django project you should give PostgreSQL a look. That's probably the most serious FOSS relational database you can find. Django has excellent build-in support for it.",1516012322.0
marmaladeontoast,"You should start off looking at postgres... It's a database that works really well with django. There are plenty of guides out there, just Google postgres tutorial",1516006351.0
oliw,"The ORM that Django uses will obviate any requirement to learn SQL, and you can follow tutorials to a point, but at some point you're going to step back and wonder *why* you're putting relationships in places, and how best to define models.

Relational theory is something I've Just Known™ for 15 years so I'm perhaps not best places to say what the most efficient way of learning it is, but [learning about normalisation](https://www.youtube.com/watch?v=yYioLVWgh64) will help you understand why relational databases exist; what problems they solve, etc.

Picking the right relationship types should be much easier once you know why you're doing something.

As for getting set up, ignore SQL for as long as possible. If you understand the syntax of Django Models and queries, they'll do fine. Don't go running head first into Postgres, SQLite3 (default in Django) will do fine. It's a bit like learning Object Orientated Programming. Pick something in the real world, model it and then denormalise it as far as you can go and then query it to get all the data you need.",1516051747.0
jackthecoiner,"From the [model field reference](https://docs.djangoproject.com/en/2.0/ref/models/fields/#django.db.models.Field.default):
> For fields like ForeignKey that map to model instances, defaults should be the value of the field they reference (pk unless to_field is set) instead of model instances.

So, try passing the ID of the admin user, rather than the instance of User.",1515995391.0
theheat715,You're trying to define it in models.py which defines the data formats. You should set the user when you add a new record in your view.,1515995221.0
code-shoily,"You should really do the user assignment in the view or admin's save_model. In any case you really want to tie the default user with the admin from within model definition (I wouldn't), then I'd suggest instead of using primary key + default attribute, override the save method of the model and in case of absence of data, query your user model for ""admin"" and set it there.",1516001237.0
lost_send_berries,The linked package doesn't provide a UI it just handles saving emails to the database.,1515972283.0
mdmacidmthcoke,"I think the question that you really want to ask is if you should set up your own email server or use something like outlook. I just set up an email server personally and although it's a great learning experience, it took forever to figure out, its extremely hard to get off spam lists, and a general hassle to deal with. If I ever do it it again, I'm going with outlook or Gmail.",1516402163.0
TheNick22,Best bet is to install a CMS (content management system) such as Wagtail. Not used it Myself but heard good things,1515943237.0
FewPolychrome,"I’ve been using django CMS on a project. Works quite well and does what you are looking for. 
https://www.django-cms.org/en/",1515946274.0
DudaFromBrazil,"Never used, but I think that tailwag can be the closest you can get.",1515942077.0
code_dexter,"you should use patch in axios and model viewset .
the patch as to be  /url/<primary-key>",1515937503.0
mitchell271,"Simple is Better Than Complex is my personal favourite and helped me the most. He recently did a complete beginner's guide to Django series, and it's very good. ",1515974185.0
wharfedalepulz,That is clear and concise. Loved it. Keep doing more.,1515942028.0
Airith,"* Use python3 whenever possible
* Include a requirements.txt if you want to share your project, we don't know what version of django or other third party libraries you're using
* You have a non-traditional django project layout, keeping your apps in a folder called 'apps', this should work but may also cause issues
* You posted your SECRET_KEY and db PASSWORD, change these if this project makes it to production
* Your project apps should come after the django apps in INSTALLED_APPS, unless you're sure they need to go before
* You should get in the habit of following a style guide, pep8 or similar
* Use a .gitignore file to avoid committing .pyc files and \_\_pycache__ folders, these aren't relevant to sharing your project
* Remove the duplicate AppConfig for main in your program/apps.py
* I moved your apps main and program up one directory level, and fixed the relevant imports. Your project now runs fine, the line `from main import models as main` in your program/models.py now works.
* If you insist on keeping your apps in an apps directory, remove both apps.py files, it should work. There's an import issue involved with apps.py/settings.py/AppConfig/default_app_config",1515882012.0
Nicksil,"Circular imports?

You don't need to import models from other apps for use in your relationship declarations. Just use a string: '<app_name>. <model_name>'",1515867861.0
,[deleted],1515866706.0
xelhark,"I'm on mobile so I might have missed something, but I took a quick look at your repo and I think you messed a bit with the folders structure, have you?

I see there's an ""app"" package and a ""main"" package.

Unless Django had a major overhaul that I didn't know about (possible, since I haven't looked at it in several months) that should be the problem.

Django has an internal structure that allows it to look up the files. The PYTHONPATH includes the ""base"" folder (where manage.py is). From there, according to your structure you should do ""from apps.my_app.models import MyModel""


Unless you know exactly what you're doing and you have a good reason to change the folder structure I strongly advice you to stick with the default one though, or you'll be in for a lot of headaches (for example, every snippet of code you find online should be updated according to your structure or internals of Django might not work correctly)",1515868237.0
fubarx,"A few suggestions:

1. Try explicitly importing specific models, for example:

  from apps.main.models import Family, Student, Teacher

2. When using model names in ForeignKey you can either specify a class name derived from Model or use the name of the model as a string. For example:

  from app1.models import Item
  ...
  item = models.ForeignKey(Item, ...)

or skip the import line and use:

  item = models.ForeignKey(""Item"", ...)

The second method is handy because you avoid creating circular imports when importing models.py files from different apps. Depending on the path settings you might have to be more explicit and specify ""app1.Item"" in the string to help resolve ambiguity.

3. Not sure why your apps are one level deep inside an 'apps' folder. The standard Django project template is to have the apps in the same level as the manage.py file. Not that it's a big deal. But if you do move them up you can get rid of the ""apps.####"" stuff in settings and simplify the paths. Check out the folder structure in the Django tutorial: https://docs.djangoproject.com/en/2.0/intro/tutorial01/
",1515869884.0
DudaFromBrazil,I think this is what you are looking for: https://docs.djangoproject.com/en/2.0/ref/applications/#django.apps.apps.get_model,1515870760.0
DudaFromBrazil,"Try this to avoid circular import error:
from django.apps import apps
model = apps.get_model(""app_name"", ""modelName"")

Sorry, I am on mobile, so cant test.

Link: https://docs.djangoproject.com/en/2.0/ref/applications/#django.apps.apps.get_model",1515870944.0
hot_carl_satan,Thanks!,1515855539.0
rwillmer,"This looks to me like you're not reading the settings file for some reason, or that your settings file is not pulling in the local.env.

I notice that the Edge repo uses an old version of Django (1.11); I wonder whether there is a difference between Django 1.11 and Django 2.0 which might be tripping you.

Thinks you might try: 
(a) change the requirements to explicitly specify 1.11 rather than >=1.11. Does that change the output?

(b) explicitly set DJANGO_SETTINGS_MODULE. e.g. DJANGO_SETTINGS_MODULE=<path.to.settings> python manage.py runserver. Does that change the output? (Note I mean your settings file here, not the env file which should be read in by that settings file)",1515832317.0
rwillmer,"When you're debugging, it's always good to separate out the potential problems",1516484803.0
code_dexter,"once i had this problem ,i gave a space near =
assuming its py syntax",1515824713.0
rwillmer,:),1516484717.0
,"Form.as_p is just a way the form is being rendered. There are other options

Redirect field.... you can specify the name of the redirect field (next...) and if this field has a value.

So... for example /accounts/login/?next=my/relative/route

To which you would be redirected on login",1515822983.0
flipperdeflip,"""Form rendering options"": https://docs.djangoproject.com/en/2.0/topics/forms/#working-with-form-templates",1516287314.0
rwillmer,"You use a service like Mailgun (I use SparkPost) to send out large amounts of transactional email; the benefits are (a) to get tracking on which mail is opened, (b) high volume, (c) less likelihood of getting put in spam folder.

You do it by (a) configuring DNS correctly to say that <yourdomain.com> can send email via that service; and (b) adding the config into your Django settings to say to use it. Follow the service provider's instructions for how to do that.

I'm not sure why/whether you actually need a separate domain or sub-domain; where's the link to that advice?",1515832855.0
TheFrev,"There is a risk of people using the ticket trick to hack access. https://medium.freecodecamp.org/how-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c
",1515803694.0
iBlag,"~~Spoofing the From: field is very easy. If you go down this route you will want to validate the DMARC information (DKIM and especially SPF) of the email you receive and you want to be very careful how you validate subdomains, because those could be used by dyndns (eviluser.no-ip.net) users to spoof email from the parent domain itself.~~

Nevermind - I didn’t understand the question before answering.",1515797216.0
gifgifgifgifgif,"Don't know what your building, but if I were building this:

Yes, clicking a link in an email is pretty good authentication. Slack uses it, as do you probably for password resets. As long as the company has their email system in order it should be fine.

However, do you really want to let any user sign up with a company address? I'd make it configurable in at least 3 ways. Firstly off (as you have it now), secondly open (anyone can sign up, immediate access), and thirdly open, but new accounts must be verified before having full access (company admins see a list, or get an email or something). This might be desirable for some companies. ",1515798371.0
nemec,"The short answer is no, it is not secure. That link posted above about companies' Slack being 'hacked' through the helpdesk account is one example, another is improperly configured mailing lists with external participants.

The best approach is going to be something like [SSO](https://auth0.com/blog/how-saml-authentication-works/), where the user actually logs in to a company server and the company server passes you a signed authentication token that proves both the user exists and that they've logged in successfully. Unfortunately that requires the company to meet you halfway and maintain an SSO server.

Another option might be to require new users to be invited by an existing user (or 'company administrator') of your site, where users can only invite people with the same email domain (although watch out for stuff like gmail/hotmail).

You could also continue to ask for a weekly dump of all valid email addresses and use that to update a whitelist on your site, but that's also a huge risk if hackers/spammers get ahold of that list. ",1515810227.0
m1ss1ontomars2k4,"It isn't secure, but if the company asked for it...",1516314545.0
honestduane,"No, its not.

Anybody can register a domain.  Anybody can buy a domain that sort of sounds like another company. In fact, you don't even need to be a legitimate company to look like one.",1515802265.0
Belco90,Could you include also the error trace? Settings can be helpful also to check if template loaders properly configured.,1515779745.0
dfcHeadChair,"I've had this issue a time or two. Try moving your index.html file into either polls/ or polls/templates/.

You should be able to do some basic troubleshooting by moving the index file around to different directories, then you'll know where you Django thinks your static files lay.

It ain't a pretty fix, but it is a fix.",1515784637.0
code_dexter,"this is a most common mistake

1.check weather you have added installed apps

2.check the templates folder

3.in traceback(error page) you will template post mortem it will show all the locations django looked for the templates",1515827769.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1515775799.0
dmonator,"Help would be much appreciated, have run through the tutorial a couple times now to ensure all the code is correct. Not sure what i'm missing here.

The error is: ""Not Found: /polls/index.html""

THanks!",1515775859.0
oliw,"First up the shoulnd't-need-saying-but-somehow-still-needs-to-be-said: **Don't run Django 1.3**. It's 6½ years old without any backported security fixes. Get it up to 1.11 and that'll last you for a couple of years (when Python 2.7 exits support). I daren't ask about condition of the operating system.

FormFields and ModelFields both have a [`error_messages` attribute](https://docs.djangoproject.com/en/2.0/ref/forms/fields/#error-messages) where you can override error messages by type.",1515767574.0
daneah,"Typically cleaning the form is done as a distinct activity prior to saving the model. To achieve this, you'd create a form for the model (likely a `ModelForm`, if those are available in 1.3) that contains your `clean` method. If the form validation fails, you'd redirect the user back to the same page showing the error message and asking them to try again. If the form validates, then you'd call your model's `save` method without calling the `clean` again.",1515763210.0
bastih01,"Oh my, `while` instead of `if`? Did I miss a new style trend in Django land?",1515778897.0
booooomba,Just work through the official tutorial. It will give you exactly what you need.,1515711712.0
marmaladeontoast,"Definitely start with the django docs tutorial. I refer to it all the time to remind myself how to do the basics.

There is also Django girls turorial which had a but more focus on doing the front end stuff so your site looks good.

",1515713916.0
foxywildthing,"Below you find two very good tutorials:

https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/

https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django
",1515757894.0
thomasfr,"There is no bad database size, postgresql can easily handle terabytes of data. 

If you need to know if your application is getting slower you can use some metrics collection system like prometheus to plot graphs over request latencies, memory/cpu usage and so on... If the application is progressively getting slower you might need to revisit you database design and/or add more hardware and/or maybe prune old data if you don't need it anymore.

",1515694478.0
hachoo,"If you have 5,000 entries/day, that is 150,000/month.  So, the database backups grow at about 700 bytes/entry. I don't know what you are storing, but doesn't seem crazy.

If you are storing sessions in the DB, that adds to it also.",1515695990.0
shebazz42,"One thing with your database growing is make sure that your indexes line up properly with how you’re querying the data - as the table grows, this becomes more important.",1515704553.0
raiderrobert,I have a production instance that grows at about 100k entries a day. Postgres handles it like a champ.,1515714371.0
flipperdeflip,"When using postgres don't forget to run `ANALYZE ` periodically so the query planner has enough information about your data. Look into it, and see if you need `VACUUM` as well.

Some managed hosts do this for you (for example AWS RDS has options for this).",1515767118.0
dexterbt1,"Over the past 5 years, a DB in one of our apps have grown to around 200GB, and now at the rate of around 1M rows per day. Note that these are IOT events, spread across 3 or 4 very large tables. InnoDB is a pain and we haven't touch the schema since. We'd probably rearchitect this to use sharding soon. All this is happily served by an instance with just a 8GB ram.",1515720346.0
ben-cleary,"It’s entirely feasible to run your Django application to run from IIS, you would need to configure FastCGI to run your application. A quick google will point in the right direction 👍

If you would rather use a VM then you could but isn’t that defeating the point on running it on windows? ",1515926771.0
elbiot,"A post is necessary for the server to receive info, but can't you have Ajax post without further user interaction?",1515649949.0
richardcornish,"If you need a working example of how to integrate IP-based (with [GeoIP2](https://docs.djangoproject.com/en/2.0/ref/contrib/gis/geoip2/)) and browser-based (with [HTML5](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/Using_geolocation)) locations, I have [a weather project](https://github.com/richardcornish/emojiweather) that shows one way to do it, which is basically inserting the coordinates into a form field and triggering a submit. One could also just directly submit the data to the endpoint as a POST request as others have pointed out.",1515690405.0
boring_troll,I don’t know if I understand the problem - you can obtain a user’s lat/long coordinates from the first GET request to load the page. You just grab the IP address from the request and run it against something like maxmind. ,1515653392.0
__himself__,You can print `form.errors` and see what errors are coming up,1515639697.0
cannibalsock,The form's probably not valid. Check the stuff you're passing to it.,1515721122.0
raiderrobert,"CSRF token not set in the template where this form is being used, and so it's not being sent? Have you checked the errors that come back on the form?",1515637260.0
simonw,If you have a bunch of fields shared between multiple tables you can declare them on an abstract base class to avoid code duplication: https://docs.djangoproject.com/en/2.0/topics/db/models/#abstract-base-classes,1515641307.0
TunaBoo,"How will you query?

Is it just a few common column.. say NAME or tract-id only.. or will queries change over time?  One table needs a query by tract #, another by S1903_C02_001E?",1515637290.0
igncampa,"It doesn't sound like you are using any Django [CMS](https://en.wikipedia.org/wiki/Content_management_system)'s as framework for your news site, however you should definitely check them out as they already solve many of the problems you would encounter if you were to develop your site from scratch. Some of the most popular ones are:

 * [Wagtail](https://wagtail.io/)
 * [Mezzanine](http://mezzanine.jupo.org/)
 * [Django-CMS](https://www.django-cms.org/en/)

All of the above have a section for 'case studies' or links to websites that have been built using the respective framework",1515616767.0
coleifer,You could implement your own: http://charlesleifer.com/blog/saturday-morning-hacks-building-an-analytics-app-with-flask/,1515633013.0
v_krishna,"I like fluentd across the entire stack (ruby, python, scala, java). Then your apps just fire and forget, and your fluentd setup handles all the parsing, aggregating, routing, retry, etc.",1515608601.0
,[deleted],1515646832.0
BondxD,I guess you've got separate endpoint that handles second factor. This view can include info about succesful 2fa in JWT and return new token. And endpoint for signing document will verify if JWT contains 2fa confirmation.,1515658371.0
flipperdeflip,"I think you need to separate the API from the MFA stuff. You secure API with regular JWT, and separately create a MFA flow to get that JWT.
",1515663218.0
Timonweb,"The solution has several flaws:

a) You can end up having thousands of URLs in the global urlpatterns list, which is way slower compared to gettings them from database on request.

b) Every time you start your app, the ready() method gets executed. Thus your app startup time will be influenced by the number of URLs you have in the database. Think about the case of hundreds of thousands of urls.

c) Again, because the ready() method gets executed during the app's startup time, the URLs of the models that have been added after the app has started won't be available until you restart the app.",1515585543.0
synw_,"Bulma looks nice. How does it compare to something like Bootstrap?

I've seen some good flexbox features like vertical centering, columns auto resize. What are the other benefits we can get using this framework? What are the downsides?",1515591097.0
oliw,"Why would I want this deeply integrated into Django?

The form-handling tag is nice, but a set of Crispy forms templates is what I'll actually end up using. A build system is fine, but again, this comes with the framework itself.",1515603857.0
flipperdeflip,"Nice, should be in Django core :)",1515498445.0
flipperdeflip,"Why do you want this? Is breaking up the monolith worth the extra hassle of integrations and distributed debugging? If you pursue this make sure you actually create microservices and not a fragmented monolith (eg: if you share the same database they are not really microservices).

What is your problem with basic Redis pub/sub or RabbitMQ? What kind of app do you have? Basic request/response app, sockets or many back processes? 


I think your question is more about microservice architecture in general maybe?",1515487565.0
TheNick22,"Don’t prematurely optimize. Build it to work, then build it fast. 

As others have described, what you are describing is a fragmented monolithic structure (not good) and not a micro services architecture. 

Build out your application, scale out your servers, use caching, use a CDN. Only worry about a microservices architecture when you need to, and not before",1515500642.0
DustPuppySnr,"The easiest way is to just start with APIs and calling those from each service. When speed becomes an issue, you can start with the slowest and adding that to a queue.
",1515486881.0
djangoblaster2,monoliths are not always bad.  read this: https://m.signalvnoise.com/the-majestic-monolith-29166d022228,1515501677.0
booooomba,"I think you completely misunderstood what microservices are and how they work. Splitting up Django for the above mentioned ""services"" (Login, payments,...) does not make any sense whatsoever.

Could you elaborate why you think you should use microservices and especially what benefits you hope to achieve from this?",1515499058.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1515479212.0
flipperdeflip,All the project make for you!,1515485883.0
Timonweb,You mean a project for the community or yourself?,1515487821.0
bearzk,"I would create the model, then inside a Django command script read and parse the tsv file line by line, assign to model, save to DB, it should only be a tiny script :)",1515480282.0
boring_troll,"If you’re using postgresql, take a look at the COPY command. If you’re using mysql, research the LOAD DATA FROM FILE command. ",1515653781.0
blahreport,Not too familiar with Django so this may be irrelevant but I know pandas can save a data frame as a sql database.,1515478435.0
uberfade,I don't think you can load data from any type of .*sv file.  Django supports loading data via json.  Check out [fixtures](https://docs.djangoproject.com/en/2.0/howto/initial-data/).,1515479767.0
jillesme,Simple! Write a regular expression to parse that data. Then add it to Django via a script (I am a *massive* fan of RunScript in [django-extensions](http://django-extensions.readthedocs.io/en/latest/runscript.html)). I recently did the same with all my transactions of 2017 that came in some weird CSV-like format. ,1515491792.0
ProgrammerByDay,"You could try the digital ocean doc : https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04

Not sure how helpful it is.",1515525422.0
monty33,Went through the same thing...this one got it done for me https://simpleisbetterthancomplex.com/tutorial/2016/10/14/how-to-deploy-to-digital-ocean.html,1515460111.0
GoldFrame,Check out chapter 10 of Test Driven Development with Python (https://www.obeythetestinggoat.com/book/chapter_making_deployment_production_ready.html),1515463247.0
xtrasalty,The links already posted are good.  If you need more help feel free to message me and tell me where you are stuck.,1515519237.0
ThatOtherBatman,"Nice. I've was working on setting something very similar up recently, and there aren't a ton of resources out there on how to do this.  
I haven't read past the second post yet, but one suggestion would be to label which files the code that you show belongs in. E.g. `models.py`, `schema.py` etc.",1515469465.0
porksmash,Is layering Graphene on top of DRF really best practice? It seems silly to have your Django app making API calls to itself over HTTP when Graphene can work with Django models directly. ,1515514690.0
kontekisuto,Did you get subscriptions working? I sort of did but when it came to integrate with apollo i had to completely redesigned how my observables where queuing messages to be sent.,1515460512.0
furyfred,"Wonderful! Am African DSF board member!

Now how do we get some non-white people into Django core?",1515440346.0
plahcinski,"You're on a LTS version, wait for next LTS version and upgrade to that. ",1515368581.0
NewDimension,I think the deciding factor are your project dependencies. Before upgrading make sure all the packages you're using have been upgraded and are compatible with 2.0. Some might have not upgraded yet. ,1515368167.0
Dagito,"Some packages wouldn't be ready to use in Django 2.0 so if you decide to upgrade be ready to probably say goodbye to some of them, look carefully before",1515368952.0
angellus,"As mentioned, 1.11 is an LTS version. In general for Django and stability, do not use non-LTS versions unless you have a specific use case for them (which you would not here since you already completed everything). 

Some use cases might include:

* Personal project (not really ""production"" level)
* Need a specific feature introduced in version

That being said, *if* you have the time, you should fix all of the deprecations because it will make it easier to upgrade to the next LTS version, 2.2. To do this, add the `-Wd` to your startup param in dev:

    python -Wd manage.py runserver",1515423622.0
knightshift79,"Yes, if you have the time/energy to spare you should upgrade. This assumes that you are running python 3.4 or higher, as 2.7 is no longer supported as of Django 2.0",1515366990.0
FeatheryAsshole,"No, stay on the version you developed on. It's dumb to start porting a web app when you could just deploy it and be done with it.",1515367296.0
raiderrobert,Sounds like a problem for django-channels,1515364899.0
Grelek,"The obvious and common methods without need of any library are HTTP longpolling and holding an opened WebSocket stream.

You can also use something like Firebase, however for sending one notification it seems like way too heavy solution.",1515349210.0
flipperdeflip,django-instant is easy,1515399171.0
oliw,"How important is the speed of the notification? Serious question. Is 2-10 seconds after the event too slow?

People are posting big solutions (channels → long polling, third party subsub websocket hosts) here for something that can be handled with a single view that just pushes messages out to people. Front end JS to poll this at whatever rate you and your clients can handle.

It's not instantaneous and it's ugly by modern standards but it works... In a way you're already used to. There is value in familiarity (in that it takes you 10 minutes to set up, not 10 hours, and you know what it's doing)",1515424198.0
caioariede,"Just use a serializer for this, docs here: https://docs.djangoproject.com/en/2.0/topics/serialization/",1515345313.0
Temeez,"One way to do this is to create a view that returns a json response with the queryset and then make an ajax call with javascript to that view.

This is how I have do it usually, but I'm not certain if that is the ""best"" way.",1515340098.0
brtt3000,Encode it as JSON string and print it in a script-tag? `var my_qs = {{json_str}};` See stackoverflow or pypi for examples and template-tags/filters etc. You can also put the JSON string in a HTML tag's data attribute (escape it properly).,1515342002.0
StewPoll,I had to overcome this a few days ago. [Link](https://stewpolley.com/2017/12/16/rendering-a-json-string-inside-a-script-with-django/),1515355589.0
fdemmer,"yes.

- avalanchy was credited
- the [merged patch](https://github.com/django/django/pull/9415/commits/ec2ce4517ac89f6c6334fe5322d1fc2007dfcbd4) is different to what [avalanchy](https://github.com/django/django/commit/8be00f8c92665f25c05bdb3f884bfc92b0ed2faa) provided

not affiliated with the django project, personal opinion.",1515339869.0
TechAlchemist,I think if you are submitting open source patches to get glory and credit rather than to be constructive you may want to reconsider. ,1515342515.0
wldcordeiro,"As an OSS maintainer, yes totally. There are a number of times I've added commits and reworked contributor PRs, sometimes it's to improve it, sometimes it's because they have seemingly disappeared and we need tweaks to land the change. Don't let your ego get you down. ",1515347317.0
tagnydaggart,"Tim Graham works tirelessly for the Django community. I would agree he probably should have given avalanchy (OP?) the chance to make the required changes, but he was probably up against a deadline or other time constraint. It would have been equally debatable if he made substantial changes to the code and accredited avalanchy with it all.

Avalanchy needs to ask him/herself why they are making the patch to begin with. If it was only for recognition, then publicly complaining about Tim’s aide is probably counter-productive.",1515363322.0
caioariede,"Single commits are part of the guidelines for PRs and there’s no way for a commit to be authored by two persons afaik.

This could be avoided if Tim instead of applying fixes himself reported it back as part of the review process.",1515345955.0
jeffbaier,"Django AllAuth is the best library for this. 

http://django-allauth.readthedocs.io/en/latest/index.html",1515319797.0
opium43,"From what I can tell a commit was made to 2.1.0 on 22.12.2017

https://pypi.python.org/pypi/social-auth-app-django/

https://github.com/python-social-auth/social-app-django
",1515312635.0
LesterHoltsRigidCock,"Run the server on your computer, access it from your phone. Or emulate a phone on your computer",1515290838.0
tagnydaggart,"runserver 0.0.0.0:8000

This tells Django’s runserver to serve requests at from all interfaces on your dev machine. 

Now, just ensure your phone is on the same network and access your development machine's LAN IP address on port 8000.
",1515292407.0
daredevil82,you can use [ngrok](https://ngrok.com/) to create a tunnel to your local machine and use it for internal testing.,1515290862.0
GuacFries,I've found chrome -> developer tools provides a decent emulator for responsiveness. It's not very good for testing iPhone safari experiences though.,1515291839.0
StewPoll,"Assuming the phone is on the same network (wifi) - first figure out your local IP address. Let's assume it's 10.0.1.104

Then on your machine: `runserver 0.0.0.0:8080`

On your phone, navigate to 10.0.1.104:8080 on your phone
",1515292260.0
django_throwaway_1,"[Cloud9](https://c9.io/) - build in the cloud and then you already have a server. its a bit trickier now that they are all integrated with AWS, but so worth it.",1515631158.0
bradshjg,"This would be a good candidate for [/r/Heroku](https://www.reddit.com/r/Heroku/), make sure to also include the error you're getting.",1515963765.0
grudev,"Excellent writing!

I appreciate the concise text and examples.

Could you delve into the notation for ""weight"", though? How do the capital letters you assign to the search vectors influence the final score? ",1515269788.0
Glycerine,Not just django. Great purchase.,1515277316.0
Valueduser,This is killer! Thanks for the heads up!,1515429544.0
kCinvest,"I mean, you just have to use a little brainpower and create some rules of yourself",1515414462.0
SumatranRatMonkey,Why not use groups ? Am i missing something ?,1515232888.0
Crowbarkz,"What you have implemented is called Roles, and it's another way to do it. Permissions are more granular but if roles do the job you can stick with them.

One thing I would change in your implementation is instead of fields like is_teacher add a related model to User called Role which can be teacher, student our admin. And then check that role like user.role.type == Role.TEACHER.",1515222706.0
genmud,"You are looking at it probably in the wrong way.

The django permissions model is that you pull in the user object, and as part of that object, you can check permissions on a specific role. 

So, for example, you needed the user to have permission to delete an object, you would basically check:

    if session.user.has_perm('mymodel.delete', the_object_your_working_on)
        # delete the thing
    else:
        # error out and return 404

You can use a decorator to do basic stuff, like validate the user is logged in, or has permissions on a specific class. Or if you want to do per object permissions... for example, if you want to verify that if the user is a teacher, the student is part of their class, or if they are a parent, they can only view their records, then you can do [something more advanced.](https://stackoverflow.com/questions/33227521/django-per-object-permission-for-your-own-user-model).


**How would I do it?**

First, I would drop the boolean fields on the custom user model for the permissions...

* Every student, teacher and administrator would have an account
* I would create new permissions that are appropriate per model, for example... in a grade object, you can create a *view_grade* [inside that model](https://docs.djangoproject.com/en/2.0/topics/auth/customizing/#custom-permissions), or maybe even a *view_parent_comments*
* Once you have established the model permissions, you will create new groups inside the admin and assign the appropriate model permissions to that group
* After you have established groups, you will assign groups to the user objects
* If you have per-object permission requirements (as you should), you will then need to create a [new authentication backend](https://docs.djangoproject.com/en/2.0/topics/auth/customizing/#specifying-authentication-backends) to check the permissions
* I would probably create a *period* model, or *classroom* and assign students(users) to that classroom via m2m as well as a teacher using foreignkey and maybe even a department or subject area as well, which you could then have a department head who can view all the student grades
* Then I could create the new backend and check object permissions to ensure the student is viewing their own record, or if they are a teacher they aren't able to update grades from other classes *and* they have permissions to change the records

The nice thing on using builtin django models is you can then create new permissions on a per model basis, for example if you had someone who only does attendance and doesn't need to look at grades, they can then just focus on that one area of the app",1515224451.0
Stanulilic,Thank you OP for asking this question. I am also doing a project for my local school and I am stuck with same problem.,1515243161.0
broadsheetvstabloid,"Use the login required mixin. 

In your view.


from django.contrib.auth.mixins import LoginRequiredMixin

class MyView(LoginRequiredMixin, View):
    ...


Then set the users and groups in the admin backend. 

https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Authentication",1515253821.0
TasticString,"I prefer a role based approach.  Groups in django are useful, but the role based permission projects expand on that to make it more useful.  Personally I also have not found much of a use for ACL based permissions. Not to dismiss their utility, they just have never fit my projects.  I prefer the ""you are this, you can do this"" simplicity, vs ""you need specific permissions to do x, y and z, on this particular object",1515634244.0
obtruse,"I believe the old version of Cactus still works via the command line and the GUI still works if you can get hold of that (there is a download link somewhere in the github issues comments)

As far as I know, it's not being actively developed because it doesn't actually do much and therefore isn't particularly useful

I was recently looking to do a similar thing and managed to quite easily replace Cactus (and better) with a simple gulpfile using Nunjucks templates which are based on Jinja2 templates and therefore very similar to Django.

Depending on which templating features you need, this might be worth exploring for your project too and will give you much more control

Realise I didn't answer your actual question but hopefully that's useful",1515195242.0
geosoco,"FWIW, it's fairly easy to run the templating engine by hand with any content you want. You can store it in the filesystem or in a database if that suits your needs.

If you're generating static pages, though, why would you not just use the template engine normally?",1515203039.0
furyfred,Is it just me or does Cacktus work outside of virtualenv?,1515221757.0
NoLemurs,"I've heard good things about Hugo (possibly combined with Forestry if you want an accompanying CMS). 

It doesn't use Django templates, but I actually count that as a good thing - if you're designing a static site generator, deciding to make as large a project as Django a dependency is a seriously questionable choice - it's just not what Django is made for. I would require a lot of persuading to give serious consideration to any Django-based static site generator.",1515256534.0
naught-me,"I'm using django-medusa.  There's one unmaintained version, and maybe another that's not-quite-maintained.  I don't recall what all I had to do to get it running, but it wasn't a substantial amount of work.",1515527491.0
notafuckingcakewalk,"> I'm asking because on a server farm my guess is that the object would be in different RAMs and therefor have differnt values, is this correct? Where do I instaniate objects so that they are handled properly?

Data consistency across servers is an issue outside the scope of Django programming IMO. If you *are* going to be returning data from multiple servers you need one other central storage to keep the data consistent, and pull it from that on each request — *unless* the data is unimportant enough that you don't need to keep it absolutely current each time. Like, if you were making an interactive encyclopedia and pulling up entries, those entries probably won't change much over the course of a few requests, and it's relatively safe to output outdated information.

But anything else, and what you'll want to do is make sure whatever object this is is pulling its data from either a central cache server, or some kind of (SQL or no-SQL) database.

The nature of your question leads me to believe you may want to consider doing a little bit more basic learning. This sort of sounds like someone saying they are working on rebuilding their car's engine but had a question on what to do when they go to a gas station.",1515170342.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1515164821.0
oarthurnardi,"I try to follow a tutorial but for some reason, my code didn't work and I try to debug my code but I can't understand why it does not work for me.

",1515164913.0
rednixon,"Note:  If you walk down the tree of the static files(django-jet/jet/static/jet/js/src/layout-updaters/branding.js), you will find this fun section of code:

    $(document).ready(function() {
        $('#branding').each(function() {
            new BrandingUpdater($(this)).run();
        });
        if ($('body.login').length != 0) {
            $('<img>').attr('src', '//jet.geex-arts.com/ping.gif');
        }
    });

The gif is(presently) a harmless 1x1 transparent tracking pixel, but targeting the login form of the admin console with an external resource pull is probably the least forgivable method of tracking a themer can do.  I **really** hope you never let that domain name laspe.",1515209944.0
circledcornershop,"Has anyone tried this? The entries in the urls.py file don't seem to be working since they've changed the system in Django 2.0

I keep getting 404 even though the URLs match.

Edit: Never mind, you're supposed to go to /admin as usual to access the new dashboard, I'm dumb.",1515183261.0
SpringCleanMyLife,"Why not just have a `messages` model with a FK to the user, a `recipient` field with a FK to the other user, and a `timestamp` field. 

When you instantiate a conversation you can query for all messages by user to other user and (vice versa) and sort by timestamp.

You don't need the `pair` model as far as I can tell. If you really want it for some reason you could set it up to automatically insert the pairing when a conversation is started. ",1515162316.0
unloder,Been using channels in production in an e-comm food delivery service for over a year now. Works fine with very fiew hickups.,1515145304.0
uniqueaccount,Use another listview with a different queryset,1515054129.0
tyrdall,"Assuming you have a model structure like:

    Category(models.Model):
        ...

    Subcategory(models.Model):
        category = models.ForeignKey(
            Category,
            related_name='subcategories',
        ) 

Then you can simply do the following:

    CategoryListView(ListView):
        model = Category

    CategoryDetailView(DetailView):
        model = Category

    SubcategoryDetailView(DetailView):
        model = Subcategory

In the template for the category detail view simply iterate over their children:

    <ul>
      {% for sub in category.subcategories.all %}
        <li><a href=""#"">{{ sub }}</a></li>
      {% endfor %}
    </ul>",1515083341.0
notafuckingcakewalk,"There are two benefits of class-based views. The one they sell you on is that it ""simplifies"" creating these views.

However, the real benefit is being able to share common functionality across multiple different views.

For example, say I have a catalog store like Etsy and on the admin side I want to output different views based on the store owner — so the store owner can edit products, but only *their* products, the store owner can view products, but only *their* products, the store owner can process orders, but only *their* orders, and so on.

I *could* write code in each view function that looks up their store based on their user record, and then filters for access based on that store, or I could create something like this instead:

    class StoreViewMixin(object):
        @property
        def store(self):
            if not hasattr(self, '_store'):
                self._store = self.request.user.store
        @property
        def products(self):
            return Product.objects.filter(store=self.store)

and then:

    class StoreProductsView(StoreViewMixin, ListView):
        def get_queryset(self):
            return self.products

    class EditProductView(StoreViewMixin, ListView):
        def get_queryset(self):
            return self.products

Now, the list view will only list products that are in that user's store, and if the user tries to edit a product not in their own store they'll get a 404 (the program will act as though that record does not exist).

Similarly, it is trivial to create a mixin that restricts requests — for example, forbidding certain request methods, or requiring the existence of a particular header.",1515170966.0
LeonardUnger,Any examples out there on the web so I could get an idea of what this does?,1515103349.0
kurashu89,"The way I usually approach this is treating the api client as the reverse of what the CBV would look like if I was to design it.

So if there was a profile endpoint with a get, post, patch and `GET /badges` (for example) I'd have a service that handled each of those as one class.

Something I've found helpful is creating a connector class that is responsible for all the typical busy work (adding auth, marshaling and unmarshaling data, setting headers, raising HTTP errors) and injecting that into the service so the service only deals with the specifics of that endpoint (where it is, transforming http errors into action specific errors if appropriate). 

This has the advantage of connection pooling, centralizing implementation details, and easy testing (I can provide my fake connector at test time rather than mock all of requests).

Creating a new session for each request is complete overkill and you don't get any of these benefits. ",1515021094.0
gosh_djang_it,"I ended up going the route of making endpoint classes to contain the data and methods (making requests, pulling relevant data from json, making url). I am really happy with it, as I have one abstract class `Endpoint`, and then for each particular endpoint, such as `GetProfile`, I inherit from the abstract class. The abstract class takes care of just about everything except making the url, so I basically just have to reimplement `make_url` in each child class.

It feels like the right approach, given what I'm  doing in my app. Plus, it should work pretty well as a standalone wrapper for the D2 api. ",1515124016.0
kankyo,That person was right. You don’t need classes here. ,1515043382.0
porksmash,"Google Maps API can do that. It's a two step process - query [Geocoding API](https://developers.google.com/maps/documentation/geocoding/intro) to convert an address to lat/long, then query the [timezone API](https://developers.google.com/maps/documentation/timezone/start) with the lat/long to get timezone information.

Free tier allows 2,500 req/day. ",1514996992.0
punpunpun,Use Tiger lines zipcode shapes and geodjango __contains= query.,1515000532.0
njancsar,"Another method is to use a jQuery library to determine the location based on request information, and to also just ask the user.",1515008802.0
flipperdeflip,"Sure, it is somewhat simplistic but for me at small scale (~50 admin users in a few roles) it works fine. ",1514995279.0
dirtybutter,"[The official tutorial](https://docs.djangoproject.com/en/2.0/intro/tutorial01/) is very thorough and explicit, and when using the CLI, it explains what files are generated and where to find them.  If you haven't worked through the tutorial, just about everyone who replies in this thread will tell you to do so. It's an invaluable resource.

also, django doesn't enforce a specific project structure. For the most part you can put things wherever you'd like. So if you're aimlessly browsing the docs without any knowledge of django, I can see why you'd be confused

Most people, even those who aren't big django users find the documentation to be one of the strongest in all of software. The introductory documentation was one of the major reasons I chose the framework initially. What is your native language?

",1514972032.0
kixlsd,Django docs are some of the best out there. ,1514977637.0
MarsupialMole,"When I first tried to learn django I found that it was very slow going. I often had the feeling ""why can't I just do X?"" but over time it became apparent that there were usually reasons I couldn't do X, and usually those reasons were because a more mature project than mine wouldn't want to do it that way. That was a learning experience.

For that reason I recommend you choose one of two paths.

1. Use your work in django as a learning exercise rather than an attempt to produce working code, and when you find questions you can't resolve, try researching them as general software design questions rather than django questions.
2. Switch to flask, and learn by going fast and then iterating, absorbing as much as you can about the python ecosystem more generally than django in particular. You can then rebuild some components in django, which should be quick because you've built them before with flask, just to see how things end up different. ",1514984198.0
,[deleted],1514973950.0
Batting1k,"This MDN guide on Django is absolutely great, at least in my opinion. I didn’t really understand any other guides or tutorials until I went through this one, and then it all clicked:

https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django",1515109324.0
TheMightyBeaver,"Depends on your environment, if you are running local you will need to open that port, and access the url from your app, by a simple query. Or if you have something in production / development via Heroku or whatever, just query that url. ",1514964816.0
dirtybutter,"From the docs for ForeignObject:

> Abstraction of the ForeignKey relation, supports multi-column relations.

Foreignkeys, Generic Relations, and o2o's are essentially convenience classes wrapping the ForeignObject class to build specific DB relations. ForeignObject allows you to explicitly define how tables are related. However you would be responsible for properly implementing any methods unique to that relationship

edit: you probably just want to stick to ForeignKeys, OneToOne, and ManyToMany",1514970801.0
charettes,Without going into much details you'll want to stick to `ForeignKey` and ignore `ForeignObject`altogether.,1514995466.0
c17r,change your cache key from the static `context` to something like `ticker + '_context'`,1514950955.0
iamsidd2k7,I think out of the box it might work with sqlite database. I think you might need to check `settings.py` file to get an idea of what DB vendor its using along with name or path of where its stored at. ,1514957940.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/python] [Where can I view my Mezzanine project's data tables?](https://www.reddit.com/r/Python/comments/7nqid5/where_can_i_view_my_mezzanine_projects_data_tables/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1514936930.0
ubernostrum,"Depends.

Can you guarantee right now that you will never *ever* need to do any kind of server-side processing or filtering based on things like distances between these points? If so, you could just create a couple columns, shove latitude and longitude in there, and let your JS handle plotting onto the map.

On the other hand, if there's even a chance you'll ever need to do some server-side geographic processing, you should set up the GIS stuff and model the lat/long as a `PointField`.",1514929460.0
ghostofgbt,"Stripe is definitely the way to go. Read through their docs...everything you need to know is in there IMO

You'll need models for customers, subscriptions, refunds, charges, invoices and webhooks, and a webhook handler 

Edit: Here's a couple model examples to get you started:

    # CUSTOMERS:
    class Customer(models.Model):
    	user = models.OneToOneField(User, on_delete=models.CASCADE)
    	stripe_customer_id = models.CharField(max_length=100, primary_key=True)
    
    	def __str__(self):
    		return self.stripe_customer_id
    
    # SUBSCRIPTIONS:
    class Subscription(models.Model):
    
    	plans = (
    		('FREE', 'Free Plan'),
    		('MONTHLY_BASIC', 'Monthly Basic ($15/Mo)'),
    		('MONTHLY_PRO', 'Monthly Pro ($30/Mo)'),
    		('ANNUAL_PRO', 'Annual Pro ($300/Yr)'),
    	)
    
    	stripe_subscription_id = models.CharField(max_length=100, primary_key=True)
    	stripe_customer_id = models.ForeignKey('Customer', db_column='stripe_customer_id', on_delete=models.CASCADE)
    	is_active = models.BooleanField(default=False)
    	plan_type = models.CharField(max_length=15, choices=plans, default='FREE')
    	initiated_on = models.DateTimeField(null=True, blank=True)
    	terminated_on = models.DateTimeField(null=True, blank=True)
    
    	def __str__(self):
    		return self.stripe_subscription_id",1514902671.0
__himself__,"If you use any of the stripe webooks (in case things are done from the stripe dashboard, like a plan is deleted and you need it to delete the plan in your db) use `ngrok` so “the Internet” can talk to your local machine",1514904003.0
wildyd,"You can check these projects - they are created by the same person and can be used together.

https://github.com/cypreess/django-plans

https://github.com/cypreess/django-getpaid",1514905792.0
asplodey,"> without interacting with your website?

Might need some more details on what you mean exactly, but short answer is yes.

If you're interested in security (and based on this question) have a look at 'attack vectors'. One type of attack vector is social engineering. Your site/db can be super technically secure, but if one of your devs has the keys to the kingdom and falls for a phishing attack, then your technical security won't matter too much.",1514872357.0
Nicksil,"If you're trying to avoid building a separate model to represent this data, and you're using a PostgreSQL database, you might have a look at [ArrayField](https://docs.djangoproject.com/en/stable/ref/contrib/postgres/fields/#arrayfield). Or, if you're interested in range values, look into the various [Range Fields](https://docs.djangoproject.com/en/stable/ref/contrib/postgres/fields/#range-fields).",1514847526.0
flipperdeflip,"Are these stops connected? Do you also model the route a bus takes? 
",1514889283.0
duckseasonfire,"Why not create a bus stop model?  If Django allowed a list type thing it would simply be creating a table for you.  Another model would also let you put more data pertaining to the stop: who created it, when, etc.",1514847207.0
_Timboss,"Not sure this is most relevant in /r/django, but it was perfect timing for me as im just getting started in python machine learning.

Purchased and appreciated... muchas gracias amigo!",1514903342.0
,Links in your post aren't clickable,1514835836.0
asdfwaevc,"Nice website. I don't see why there's a limit of 5 links per card though. Also, granted I'm not a UI guy, but I would add some explanation to the home page. I wouldn't know what your site was supposed to do without having read this post.

But, it's simple and clean and works, so it's got my approval.",1514839711.0
heo5981,"NIce project!

As said in another comment, a tutorial of how to use the website would be useful, also, I think the cards should have a little more space between them, they are too close in my opinion.

An important note: there are two typos on the land page, lathegic (lethargic ?) and a space missing between ""created this"". On the login page it's written ""let get back on track"" did you mean ""let's"" ? 

Another thing, the link make homepage doesn't seem to do anything on my browser, I using Chrome.

Just one more thing, would you mind sharing your stack?

To finish, it's a simple website and has a nice idea behind, I like it! Keep working on it!",1514840654.0
Nicksil,"> - works only in chrome browser

Curious, why is this; what sort of technologies are you utilizing that are otherwise unavailable in other browsers?",1514847699.0
devine_111,"Awesome! It looks and works really great. Though the links don't work when I clicked on them, it is not going to the url instead it is going like this /daily-launcher.herokuapp.com/<my url here> and throws a request error.

It just needs a few touch ups and it'll be good to go in my opinion.
Btw going off the topic here, I thought you used materialize in your front end as it really resemble the feel of it. It looks great :o :) 

",1514976465.0
dirtybutter,"since you're targeting chrome, you might look into converting this to a progressive webapp so the links are available offline: https://developers.google.com/web/progressive-web-apps/

or it might even be better served as a browser plugin",1514974423.0
digdilem,"Fwiw, my daily sites are stored in a folder in my bookmark toolbar - and I just middle-click to open all of them in one go (Chrome). It's easy to use, and easy to add/remove sites. (Although if more than 15, Chrome checks to make sure you want to open all of them)

Not sure why I'd want another website to store this stuff for me?",1515185121.0
Nicksil,https://www.obeythetestinggoat.com/,1514825526.0
4477i40,"Just curious, Two scoops of Django just came in the mail and I was going to start reading it today.  Do you know if that book will cover testing well enough?",1514825857.0
graemep,"A signal will not do that. The traditional approach ue a task queue that runs separately, such as Celery http://docs.celeryproject.org/en/latest/index.html

If you are using Channels, it provides support for background tasks: http://channels.readthedocs.io/en/latest/inshort.html

",1514819859.0
athermop,"You'll get lots of recommendations for Celery which is a great and powerful task queue.

I will buck that trend and recommend python-rq as it is also great.  It's also less featureful...and it's also a lot easier to use.",1514832635.0
cwurld,Django-RQ is another option. [Here](https://snakeycode.wordpress.com/2017/05/21/django-long-running-processes/) are my notes for getting it working.,1514832783.0
kimaniyyyy,Signals are not asynchronous. Please avoid dispatching signals unless you have to. Setting up celery with a messenging queue like redis/rabbit mq is pretty straight forward.,1514836461.0
bobishardcore,"For handling events out of the web loop, you need something like Celery. I would post a link but I'm on mobile. 

You will also have to add a message queue backend to your stack as well. RabbitMQ is the most commonly recommended one.

If you're just starting your project, I'd recommend running Django-Cookiecutter and say yes when it asks if you want whitenoise, celery and docker support. You'll also need to install Docker.io -- cookiecutter and docker make everything I just described such a breeze and painless. ",1514819079.0
ramse,Pretty sure its because %p is AM or PM depending on locale.,1514815903.0
duckseasonfire,"Just looked at Sanic for the first time.  It looks new... fast and lacking the framework Django has.  I think most of the selling point of Django is the organization, documentation, and batteries included nature.  It isn’t always the fastest, but most of the frameworks compared to it don’t do any more than respond to a request like flask.

Depending on your requirements, a smaller more streamlined framework might be perfect.

I have used Django since 1.5 and I have been pretty impressed with it so far.  It would take quite a bit drag me away.  Keep up the great work guys.",1514761132.0
flubba86,"Sanic is not a replacement for Django.

It is more similar to Flask, in that it is very light weight. It's actually lighter than flask because it doesn't even come with a template renderer like Flask does (and because it isn't based on the behemoth that is werkzeug).

I use Sanic at work and at home for hobby projects, and I have contributed multiple bug fixes and features to the Sanic project. I also have written and maintain 4 opensource and released Sanic plugins.",1514765682.0
Airith,"Pairing Django with a frontend framework is a great idea. I still prefer a pure Django approach, but there's too many nice JS features to ignore.

Learn vanilla JS before a framework though, you need to understand when to use a framework and why you need one or it'll be overwhelming. Even just jQuery before a framework.",1514759102.0
boshlol,"1. Tests. Look into TDD and BDD. learn about regression tests and integration tests and unit tests. Write bad tests and see how they annoy you later on. Actively try and get legacy code under test and refactored. IMO the ability to write good tests is one of the most important skills a developer working with other developers can have. There is a good quote from ""working effectively with legacy code"" (a book I would recommend having on your desk for reference) that I like: 

  Code without tests is bad code. It doesn’t matter how well written it is; it doesn’t matter how pretty or object-oriented or well-encapsulated it is. With tests, we can change the behavior of our code quickly and verifiably. Without them, we really don’t know if our code is getting better or worse.

2. Look at some other languages and frameworks. First of all its important to diversify professionally. Secondly Django and python are very powerful but they are not without their weaknesses, oddities and limitations as well. Learning how to think about things in terms of the problem at hand and not just the tools that you are used to is super important. The seven languages in seven weeks books are great for feeling out what languages appeal to you.
",1514805846.0
Verio,"middleware, caching, testing, template tags to name a few.",1514777504.0
CharlieDenton,"I'm in charge of CCBV. It should be back up tomorrow, when Heroku's free tier allowance ticks over into the next month. The account is shared with another (very low traffic) website, so the allowance is shared. Usually, this isn't an issue, but for some reason, the other website has been seeing increased traffic. I'm looking into moving the other website to other hosting, so that this is no longer an issue.

Apologies for the inconvenience.

EDIT: Thanks for the love, everyone! The website is back up now. Happy new year!

EDIT 2: Gold! Wow! Thank you!",1514747588.0
dirtybutter,"for pycharm users, there are several inspection tools you can use that provide plenty of information to you:

* Alt-7: Show **structure**.  This show all the properties and methods of an object or objects in a file
* Ctrl-H: Show class inheritance **hierarchy**. Similarly Ctrl-Alt-H shows the calling hierarchy of a method
* Ctrl-Q: **Quick documentation** relating to a class, object, function, method, etc. This only displays doc blocks and tries to infer parameters, so it's only as helpful if the authors of the package provide thorough documentation. Also, you can use it on python operators and keywords
* Shift-F1: Open **external documentation** for a package, if available. You can alternatively register your own external documentation for a package

If the shortcuts are different on your computer, bring up the action menu (usually ctrl-shift-a) and type the words in bold",1514745368.0
duckseasonfire,"Come up with a simple app/project and start.  Grab a piece of paper and think of what would make up each model.

If you already have a blog, a news app shouldn’t be much of a stretch.  A news article would have a... title, body, date_published, date_added, author, etc

When you have something basic and it is working, try breaking it by adding features.

Maybe use markdown to format the article?  Or use tinymce.

Add attachments so you can embed photos.

Make permalinks.  In case id numbers change?  ;)


Jump into the deep end of a problem you understand.  Or at least understand enough to refactor half a dozen times.",1514864288.0
daneah,"To my knowledge, the best way to accomplish what you're looking for will be to generate a query set of the events you want to display and then create model forms for each object that only allow editing of that limited set of fields. This seems much easier/faster than trying to extract pieces of the admin interface and functionality, unless Django exposes some kind of API for this that I'm not familiar with.

If you're looking to do it all dynamically on-page you may want to consider creating a small API for your models using Django REST framework or similar and talking to that with AJAX.",1514731645.0
1qkz,"I just did something similar from the ground up, which was quite a hassle (i.e. deriving from the modelformset_factory method and related classes). So if you find a better way, I'd be interested to know.",1514747858.0
rnevius,"This is covered [right in the docs](https://docs.djangoproject.com/en/2.0/ref/templates/builtins/#for):

    {% for title, uri in dict.items %}
        <p><a href=""{{ uri }}"">{{ title }}</a></p>
    {% endfor %}",1514725199.0
,[deleted],1514685126.0
mothzilla,"Don't memorise stuff, use a code completion tool.",1514690798.0
LesterHoltsRigidCock,"I usually segregate my classes into modules associated with a model, e.g.: forms/member/add.py, forms/member/remove.py. The class name matches the filename.",1514691519.0
simonw,If you're using PostgreSQL you can actually implement pretty good search without having to add an external search engine. I wrote up how I did that here: https://simonwillison.net/2017/Oct/5/django-postgresql-faceted-search/,1514666501.0
Laundr,Don't forget to check out [django-watson](https://github.com/etianen/django-watson) either.,1514658094.0
umutuygar,I think haystack is the way to go. I recommend you take a look at http://haystacksearch.org,1514656119.0
rnevius,Extend the `Customer` model?,1514596903.0
booooomba,Just extend the User model. ,1514598233.0
ramse,Are you expecting the user to supply the code that needs to be run? Or do you already have a bunch of tasks and just want them to manage their schedule?,1514562908.0
__himself__,"If they can select the time the task happens, you can use `apply_async` and pass an `eta` that is a datetime object of when the task should execute.

1.	Be sure to do everything in UTC
2.	Make sure you have some state.db (a flat file that is writeable by whatever is running celery) so that if celery restarts it can pick up old tasks. ",1514559249.0
will_code_for_tea,"So I've done a _lot_ of this, if you're already using webpack then you should probably stick with that and not introduce another build tool.

Under the [rules](https://webpack.js.org/concepts/loaders/) section of the config you can include tests to for scss files, as well as running all your js files through babel. (The ExtractTextPlugin is for straight css files.)

You'll want to change your `output` to be something like, 

```
output: {
   filename: './static/[name]'
}
```

This will place both your compiled css and js into the same directory, so you'll want to modify the path in your templates (or the output, the point is to make it dynamic).",1514550755.0
mrtrunin,"There is another way though. 

You could setup your Django project as a backend only app and expose it via an API with Django Rest Framework. Then you can build a simple standalone React frontend app and connect it to the backend API. Although it will require just a bit of setting up and maybe learning React, it's actually really simple and logical once it clicks.

Source: someone who just did exactly that and is really happy.",1514586129.0
Qunayu,"If I’m understanding your question properly, use gulp to compile your sass code into a single css file then import that into your base template? ",1514541423.0
webhenrik,"You can use the SASS compiler to compile your code into statics if you want to without needing to use Gulp or Grunt et.al. You can also use webpack and the ExtractTextPlugin to compile your SCSS.

`sass /whereeveryouputyourscss/input.scss /static/output.css`",1514544569.0
daredevil82,"What I would suggest you do is shift things slightly.  Rather than having a specific src/lib directory for your JS, have it as 

    client
       |  - src
       | - build (or dist, if that's your preference)

where your `src` js and scss files get compiled and bundled into `build/dist` and then you can have your template link to the build artifacts.


For scss stuff, I would sugggest you look at https://www.jonathan-petitcolas.com/2015/05/15/howto-setup-webpack-on-es6-react-application-with-sass.html and use the tips there to integrate scss compilation with your webpack build.  No need to have multiple build tools running.

Don't worry, this is a pretty common issue, and the above is one thing I've found that helps a great deal.  There are still different experimentations going on, and this is basically a result of django's legacy of rendering individual pages and not as a SPA.",1514564493.0
athermop,"You need to use an UPSERT-type of operation.

https://wiki.postgresql.org/wiki/UPSERT

You will likely need to use raw SQL for this.",1514491810.0
crunching_karma,There is always an option to remove duplicates via Python.,1514510523.0
DoISmellBurning,"DjangoLTS - https://djangolts.com/

> 5% of the profits from this service are donated to the Django Software Foundation.

(Thanks to https://twitter.com/jarshwah/status/946540119816773632)",1514513052.0
iBlag,"If I understand US trademark law correctly (and I took one summer class on patents, copyright, and trademarks in college, so I’m pretty much an expert [1]), simply writing a book about Django is entirely permissible and is not considered trademark infringement. A trademark is used as a distinguishing name or brand to differentiate aproject/product from other competing products. It is absolutely _not_ used to control who can use the term when writing about the trademarked project/product, and any attempt at that would likely be struck down under anti-SLAPP legislation.

Trademarks come into the picture when there could be some brand confusion. Example: somebody forks Django without renaming it. So if I were to sell a forked version of the Django source code as “Better Django”, or any name that could reasonably be confused with “Django”, I would need to abide by the terms you pointed out.

But if I were to fork Django [2] and call my fork “Orangish” or any name that couldn’t reasonably be confused with “Django”, I would not be violating Django’s trademark. But I *could* potentially interfere with whoever holds the trademark to a software project called “Orange”, or “Orangist”, because our two projects could be reasonably be confused for one another. So legally speaking, choosing a name for a project fork is actually a slightly more difficult problem than it would appear to be.

Now Django’s trademark policy here seems to say that I can fork Django without renaming it *as long as I do not charge for my fork*. Once I start charging for my non-renamed fork I have to contribute money to the DSF as stated.

Note that this is exactly what Mozilla does with Firefox [3] - you can fork Firefox into anything you want, but you can’t distribute the end result as “Firefox”. You can however call your distributed fork something silly like “Iceweasel” or “Swiftfox” or “Swiftweasel” or if you’re really creative “Netscape Browser” or “Tor Browser”, but I’m sure nobody would ever use any silly names like that.

Obligatory: I’m not a lawyer. Go to /r/LegalAdvice to talk to actual lawyers.

[1] /s

[2] Assuming here that I completely comply with Django’s BSD license (I think it’s BSD, somebody please correct me if I’m wrong because I’m on mobile and too lazy to look it up).

[3] Mostly. There are some exceptions, like you are allowed to port Firefox to the OS or Linux fork of your choice and distribute that as “Firefox”. But once you change how your fork of Firefox actually behaves - beyond working on a niche OS, Mozilla may not want you to call it Firefox anymore. The exact amount of changes allowed is entirely up to Mozilla to define though, so talk to their lawyers before adding features to your TempleOS port of Firefox, or simply call your shiny new browser “Templefox”.",1514492212.0
furyfred,Sounds to me like they should be paying up or reporting their earnings. I would like to know how much they make.,1514535240.0
pydanny,"Yes, we (me and Audrey) are VERY slow on open source work these days. You see, doing open source doesn't pay the bills that need to be paid. Keep that in mind if you decide you want to start a popular open source project that requires a lot of time and attention.",1514479232.0
,[deleted],1514481058.0
1qkz,"Heads up, Heroku doesn't recognise cookiecutter projects as Django due to it not being required as part of the top-level requirements file. I had to move it there (e.g. for collectstatic to be called).

Thanks for your work maintaining the project though. I bought your book and found it very useful for creating my first Django application.",1514542659.0
TasticString,"Does anyone have any recommendations on a django 2.0 cookiecutter?

Also thanks pydanny!",1514568438.0
CraigTorso,"I've not looked at Django 2.0 yet but it looks like it's not been changed so I think this still applies

The admin.[ModelAdmin](https://docs.djangoproject.com/en/2.0/ref/contrib/admin/#django.contrib.admin.ModelAdmin) class calls its [get_queryset](https://docs.djangoproject.com/en/2.0/_modules/django/contrib/admin/options/#ModelAdmin) with the request so you can filter the result using the request.user fairly easily.


The request.user has .[groups](https://docs.djangoproject.com/en/2.0/ref/contrib/auth/#django.contrib.auth.models.User.groups) which can be filtered so there's plenty of options for deciding who can see what.",1514477902.0
rnevius,It's literally right in the docs: https://docs.djangoproject.com/en/2.0/ref/contrib/admin/#django.contrib.admin.ModelAdmin.get_queryset,1514476826.0
tagnydaggart,"Also, when someone selects a seat, mark it unavailable and fire off a Celery task for, Say 15 mins into the future. When the finally task runs, if the seat wasn’t purchased, mark it available for others again.",1514477638.0
booooomba,What exactly is it you want? Actual seat selection or simply buying a ticket?,1514465276.0
rnevius,"Associate each `Seat` object with a single `Order` (i.e. Many-to-one relationship). See the docs for an example: https://docs.djangoproject.com/en/2.0/topics/db/examples/many_to_one/
",1514477032.0
SpideyIRL,"I would create a model for a Seat, and another model for Order. Add a “seats” field to Order which will be a ManyToManyField, and create a validation that doesn’t allow for orders to save the same seat twice. You can also add other logic here, such as not allowing a single seat to be left empty. ",1514470358.0
daredevil82,check out https://djangopackages.org/grids/g/analytics/,1514470587.0
booooomba,"Good question. I hope I can help clear up a few questions:

There are some geo functions in Redis (like GEORADIUS), but this is nothing compared to Postgres/PostGIS. 

Redis holds its data completely in memory, so if you have a 30GB database, you'll need a server with at least 30GB of free RAM.

Since you're specifically asking in the Django sub: Most people use redis for caching, due to the fact that redis stores all key-values in-memory.",1514464637.0
i_like_trains_a_lot1,"Redis is a key-value store that is stored in memory. It's best use is as caching layer (as it does not guarantee persistence of data).

So when you have simple data that may be accessed multiple times and does not change that often, cache it and retrieve it from there. This is faster than querying the database multiple times as the most common bottleneck in a web app is the database.

I didn't respond the specific PostGiS question, but I hope this helps put things into perspective and serve as a starting point in building your own use case.

Cheers.",1514473017.0
petr0,"> At what point do you move the data from models to Redis?

I don't think it's a matter of scale, but rather type of data. Redis is great for offloading stuff that doesn't need to be in relational database, like sessions. If you use your main database as session backend, moving sessions to redis is a simple way to gain perfomrance. Not only it's a faster backend, but also it reduces the db calls.",1514467855.0
blbil,"Typically use it for caching things so we don't have to hit the database every time. Also, can be used to do stuff that doesn't need to be permanent since Redis supports TTLs (time to live).

One example of using TTLs that my company uses is for sms code authentication. We store something in Redis with like a 2 minute TTL and send that in an SMS, then when the user authenticates with that code we can tie it to the user by querying Redis. After 2 minutes the data is wiped from Redis automatically.",1514507413.0
duckseasonfire,"I am using redis for a few edge cases as cache but how do you name your keys?  I have been using colons.

Sessions seems like the next step.  Might be worth putting some of the “every request” user settings in.",1514769949.0
mrtrunin,"I think you may want to rethink how you structure your project. 

Instead of thinking about the model design in business terms such as Income Statement or Balance Sheet, you may want to start with the atomic operations instead and treat the financial statements as aggregations of the individual transactions. 

Have a look at this article and see if you get any good ideas: https://medium.com/@RobertKhou/double-entry-accounting-in-a-relational-database-2b7838a5d7f8",1514446102.0
tyrdall,"Yes, create another model. Something like:

    class Asset(models.Model):
        name = models.Charfield(max_length=32)
        type = models.Charfield(
             max_length=16,
             choices=(
                 ('financial', 'Financial'),
                 ('operating', 'operating'),
             ),
        )

    class BalanceSheet(models.Model):
        assets = models.ManyToMany(Asset)",1514445705.0
richardcornish,"The change was part of an [optimization of setup.py to work with setuptools](https://github.com/django/django/pull/2116) on Windows. The change was [merged](https://github.com/django/django/commit/088cb711fe8c8bfb6af04ac7ef094817802c4256#diff-2eeaed663bd0d25b7e608891384b7298) along with ticket [#21827](https://code.djangoproject.com/ticket/21827) for backward compatibility. If you look in your virtualenv project's `bin/django-admin`, it's almost identical to `bin/django-admin.py`. It's just shorter and easier to use.",1514409960.0
ysmoliakov,These scripts doing identical things. ,1514404358.0
AlexFromOmaha,"> The alternative seems to be to have one serializer that returns an overkill amount of data and have the front end deal with sorting out what it needs vs doesnt need.

With reason, do that. It's ok to break off at foreign key boundaries sometimes and make the client make more requests to fetch some of that as needed, but otherwise, just send data.

If you're feeling really bandwidth-conscious, you might want to let your clients specify the fields to return and by default return a very small set, or implement something like [GraphQL](https://gearheart.io/blog/how-to-use-graphql-with-django-with-example/), but that just smells like premature optimization to me.",1514396535.0
Mekhami,"GraphQL is nice. You should try it :) graphene-django is fully featured, very fun to use. Combine that with apollo-client and the apollo-dev-tools for google chrome and front end development has become  much more fun.",1514400806.0
scottocom,I would make it C+OS+AS usually but only if OS and AS are only used with the client. I am interested in other people's answers as it felt wrong But doing more HTTP requests just to get the data for the one screens seems worst. ,1514422373.0
byteblaster,"I personally would build a model to receive the information from your Moneybird system and store it with fields for tracking the process. Then write a python function to take that data and save it to the Exact system. If you have issues with Django timeing out, set up Celery (http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html) to run that code asynchronous thru another Process.",1514442600.0
twigboy,"Accessing a NoSQL database by using SQL...

So much irony it hurts

(seems like a very useful project for those trying to slowly move away from mongo though!)",1514381836.0
TunaBoo,"Guys just use postgres. Your framework has built in support for a stable, fast, free database. Don't do extra work to wire in a hot mess of crap.",1514388192.0
gifgifgifgifgif,"Fun project, but never use this, ever. ",1514390790.0
TasticString,"Interesting, on the plus side it doesn't use mongoengine.",1514567808.0
pat_the_brat,[Use `python manage.py runserver`.](https://docs.djangoproject.com/en/2.0/ref/django-admin/),1514363190.0
kmmbvnr,You can set all parameters in the settings.LOGGING instead of logging.basicConfig call https://docs.djangoproject.com/en/2.0/topics/logging/,1514342561.0
gosh_djang_it,"Ummm. wait by doing basicConfig() the way I did, am I setting a class attribute for `Logger`? Crud.

Fix: override the basic config in that module:

    logger_1.setLevel(logging.INFO)


OK...that was embarrassing.

Less stupid question? Where should I run basicConfig in my django project? Clearly I'm being stupid by running it in every file where I import logger. I am still learning.
",1514341786.0
ramse,"That's because django doesn't do multi-dimensional dicts for GET/POST..etc. You'll need to use a different parser for this.

I use this all the time: https://github.com/bernii/querystring-parser

If you've ever used django with formsets and multiple forms, one thing you'll notice is they always do something like `name=""form_1_name""` rather than `name=""data[1][name]""`",1514341052.0
dmckim,"By using the python3 urllib.parse.unquote I was able to get this.

'action=edit&data[1][method_sent]=&data[1][date_signed_invoice_returned]=&data[1][date_submitted]=&data[1][notes]=test'

It still doesn't look like a usable format but it is at least closer. I am still hoping someone can help me figure this out.",1514340524.0
ramse,"What version of Django? Have you tried putting your own app after all of the `django.` stuff?

Months ago I may've had the same issue, I can't remember completely. I ended up having to change the lines in INSTALLED_APPS from `account` to `account.apps.AccountConfig` however you need to make sure that the following file exists and the class exists:

account/apps.py

    from django.apps import AppConfig
    

    class AccountConfig(AppConfig):
        name = 'account'
",1514342345.0
oliw,"A score of +41? **The very first tip is inaccurate!**

    from django.urls import include, url

The new `django.urls` module doesn't have a `url` function. They introduced `path` and moved `url` to `re_path`. That's still available under the old module path so for a smooth migration, just leave all your old urls and their imports well alone. Move them later on.

You only need one tip for *any* Django migration: [read the release notes](https://docs.djangoproject.com/en/2.0/releases/2.0/). Especially the section on backwards incompatibility. It's all in there, usually with more accuracy and without arbitrary limits on length.",1514413785.0
Investisseur,Is the app name needed in the urls.py if it is included correctly in the app.py /_ _init_ _.py ??,1514356837.0
bremelanotide,"Looks like you're encountering the error when running this migration. https://github.com/WolfElkan/hst3/blob/master/apps/main/migrations/0001_initial.py

I'd start by checking out your database to see which of the tables it bailed on. Once you narrow the search further you can look more closely for what might be causing the issue.",1514312040.0
Kalrog,"Ahh yes, the old SQL error but no SQL files because they are all automatically generated by the framework.  Yet another reason why I'm of the opinion that an ORM should never to DDL.  

Is your github up to date with what you are trying to run?  I don't see a ""grad_year"" in github's version of https://github.com/WolfElkan/hst3/blob/master/apps/main/migrations/0001_initial.py",1514312363.0
furyfred,"Nose is no longer maintained. The docs for it even say so at the top. The author should upgrade their article to nose2, or better yet, switch to the infinitely better py.test.",1514307801.0
adioevan,"I think using data fixtures is definitely faster in terms of execution time. The drawbacks I see are the maintenance of those fixtures for a bigger project where the database mock is returning more and more data or when the model changes and all the fixtures need to be updated to reflect that change. That being said, I have seen both in bigger services, I think the ideal is using a test database if the service is a microservice and is small enough were the test time is small anyway. If it is a larger service and the test time is too long, I can see using more test fixtures, but keeping the fixtures as abstract and easy to manage for future model changes.",1514306215.0
massover,"The TestCase is actually built upon a [TransactionTestCase](https://docs.djangoproject.com/en/2.0/topics/testing/tools/#transactiontestcase)

Django’s TestCase class is a more commonly used subclass of TransactionTestCase that makes use of database transaction facilities to speed up the process of resetting the database to a known state at the beginning of each test.

The TestCase also has support for [fixtures](https://docs.djangoproject.com/en/2.0/topics/testing/tools/#fixture-loading)

The built in test runner also supports options for [test discovery and test running](https://docs.djangoproject.com/en/2.0/topics/testing/overview/#running-tests)

The get_wsgi_application() function doesn’t need to be called for testing. This is probably having a side effect to setup django. You could also call django.setup() inside the __init__.py. However if you run through the built in test runner or something like pytest-django, you wouldn’t need to call setup yourself.",1514330923.0
ubernostrum,"I typically don't do fixtures. Also, the standard test runner is fine, and if you're distributing something for others to use it's probably best to use tox so you can set up a matrix of Python/Django versions to test against.",1514562321.0
booooomba,Sure. Just put that logic in the corresponding view.,1514283383.0
summersonnn,"After all, it wasn't as tricky as I thought it would be. I just wrote the logic in the corresponding view and it's done and working. Thanks for all the suggestions.  
Special thanks to @BigEnoughRock even though I wasn't looking for the second type:)",1514374692.0
i_amwithnail,"Yep, we used a specific view function that checked the current time when users accessed the sales system, and returned a 'not allowed' page with an error message if it was outside the allowed access times.  That was a bare function in the system I inherited, but it'd make for a good decorator - would work well with the redirect, too.",1514296250.0
BigEnoughRock,"Do you only care about server time, or should it depend on the client's current time? The first is simple - as other suggested, using `datetime`, simply compare the current server time with your target and redirect if the result is not what you want.

If you want to check the client's time, i.e. ""this link is only accessible after 8 PM where you are"", then it gets a bit more complicated. You can make the URL always return a page with a form and a button saying ""Click here to proceed"" or something similar. On load, the page would get the client's current time using JavaScript, put that in a hidden field in the form, then submit it onclick. Server-side, you get the client's time and compare. If the condition is True, you redirect to another page using a one-time token that the user would not be able to guess. How you would generate that is up to you. This has some obvious drawbacks though:

- Unreliable: the form data, as well as the JavaScript doing the work, can be manipulated by the client
- Browser-dependent: your client must be a web browser. If you're building an API or for some other reason the URI should be accessible using e.g. curl or Postman, that won't work, as HTTP clients generally do not interpret JS
- Bad UX: as a client, I want to access the information behind that URI, as far as I'm concerned a dumb button saying ""click me to get there"" is useless and an unnecessarily time-consuming.",1514314041.0
dirn,"virtualenvwrapper doesn’t work on Windows. There is a port, however, called [virtualenvwrapper-win](https://pypi.python.org/pypi/virtualenvwrapper-win). Try with that instead. ",1514290839.0
booooomba,"Are you behind a firewall?
Also update your Python to the most up to date version. No reason to use 3.4 on Windows.

Once you updated. Try again",1514280940.0
defmacro-jam,"> my command prompt says ""mkvirtualenv"" is not recognized as an internal or external command, operable program or batch file

You've apparently missed some step in setting up virtualenvwrapper.  

Carefully go back through the documentation for virtualenv and virtualenvwrapper and you'll probably find it.  I'm unfamiliar with Windows so I'm afraid I can't be of more help.",1514284730.0
dorsal_morsel,"Unless it’s absolutely necessary, don’t use windows. ",1514320408.0
marmaladeontoast,If you want a nicer Dev experience go and set up Linux alongside windows. It will give you a much smoother experience and compatibility with most python packages ,1514322219.0
seventendo,Did you forget the post?,1514267347.0
rsgm123,Yes,1514290191.0
chancecordelia,"There’s two ways. You can use react talk to Django via api. Basically you’ll build your Django part without a front end. Your Django app will just be a bunch of endpoints for an API. Those API points will be called by your React front end. If you do this method, you’ll have two apps running on separate servers in dev mode. In production, it’ll just be one server. 

The second option is to build both react and Django on one server with a proxy. 
[this tutorial connects react to node express API using a proxy.](https://medium.freecodecamp.org/how-to-make-create-react-app-work-with-a-node-backend-api-7c5c48acb1b0) ",1514331728.0
neupaneanish,No,1514268388.0
BithTree,"1.11 will be mostly fine. The biggest change that concerns you is how urls.py works. I believe the old way still works, but the new way is simpler.

Edit: a word",1514244354.0
__himself__,"There were no backwards incompatible changes from 1.11 to 2.0. 

2.0:

-	dropped support for python 2 (so some material may use python 2 syntax)
-	added a mobile friendly admin
-	added a “simpler” url pattern convention

Hope this helps!",1514254265.0
colly_wolly,"Django releases are fairly compatible. There are a few  (usually minor) breaking changes each release but they are well documented, and for someone learning it's probably not worth bothering about too much. Have a look at the release notes and see what has changed. 

The development server warns you about changed that are to be deprecated in the next release. ",1514257631.0
checkYourCalendar,"If anyone was interested in [checking it out.  
](https://stackoverflow.com/questions/47869130/how-do-i-correctly-create-a-related-object-overriding-the-save-method) ;)  
10 views in 7 days, at time of this comment.  

edit: Much appreciated, and Merry Christmas, reddit :)",1514209447.0
ramse,"I read your question, we would need to see the view logic where the form is being called and used.",1514210551.0
pat_the_brat,What does this have to do with Django?,1514215835.0
hopemeetme,"It's `checked`, not `cheked`.",1514209507.0
LudwikTR,Is it really autoreload related or does this also happen when you start the server initially? Do this happen with an empty fresh project? ,1514193787.0
daredevil82,"does the same thing happen with a new django 1.11 project?  If you're using WSL, I wonder if its the file watcher that's running slow.

Also, do you experience the same issue with using a virtualmachine like vagrant/docker/etc?",1514215838.0
ramse,"I have no solution for you but can confirm, reloads take forever. Using pycharm I've just become used to CTRL+F2+F11 quickly because its much faster than waiting for it to detect a change and restart. Using Django 1.11.8 currently.

I feel that part of the reason is because its watching literally all py files in the python installation, the virtualenv, AND the django projects. Really I see no need to be watching anything outside the project folder but have yet to figure out how to stop it watching outside.",1514233027.0
sPENKMAn,"I suppose ""manage.py check"" runs slow as well? If this is the case you might want to turn towards your settings.py.

If I remember correctly I had some issues with template loaders which got in some loop or something.",1514200363.0
von_tenia,Are you running Django from a VM or vagrant?,1514215010.0
fairytale81,Are you using a remote database? ,1514232617.0
fdemmer,i find using django-extensions' runserver_plus (requires werkzeug) to work/detect change/reload a lot faster than built-in.,1514244248.0
gummiboll,"Running macOS? This started happening for me after the last major update of macOS.

Im suspecting I might need to rebuild my virtualenv but havent tried it yet",1514220469.0
der_hump,"In your context {{ year }} will be a list (queyset actually) so you have to do a for on it.

So you will go 


> {% for detail in year %}
>   {{ detail }}
> {% endfor %}


And you can get anything from the detail like so {{ detail.year }}",1514195165.0
richardcornish,"One can't know for certain from the code, but could the model be singular, e.g. `context['year'] = Detail.objects.filter(year=2016)`?",1514238811.0
ysmoliakov,"This line:
> context['year'] = Details.objects.filter(year=2016)

must be:
> context['year'] = Details.objects.filter(year=2016).all()

* * *

But I recommend use a method described in this article: https://reinout.vanrees.org/weblog/2014/05/19/context.html ( No need to use get_context_data, use {{ view.some_method }} ) ",1514198054.0
Nicksil,"What you're describing is pretty much the exact use-case for having an `updated` field on your model; you want data to persist, databases are used to persist data.

The class/instance state will be wiped/reset when whatever Python instance it's running on is killed/restarted, so there is no persistence there. 

Just add the field to your model, use [`Date[Time]Field.auto_now`](https://docs.djangoproject.com/en/stable/ref/models/fields/#django.db.models.DateField.auto_now), and run your queries based upon the last time a record was updated.",1514159305.0
lost_send_berries,"If you add a new member, the stored updated time is inaccurate for them. Why not just add it as a field? It will be more flexible in the future.

But to answer your question:

Best way: create a model with one row and one column called UpdateInfo . Define class method s in member to access it.

An alternative way: store it in a cache, assuming you have one set up.",1514195752.0
ramse,"Somethings for improvement:

getattr has the ability to return a default value if said item doesn't exist (default is to raise an AttributeError).

    ip_hits_timeout = settings.IP_HITS_TIMEOUT if hasattr(settings, 'IP_HITS_TIMEOUT') else 60

becomes

    ip_hits_timeout = getattr(settings, 'IP_HITS_TIMEOUT', 60)

This whole section:

    # get the hits by this IP in last IP_TIMEOUT time
    this_ip_hits = cache.get(ip_cache_key)

    if not this_ip_hits:
        this_ip_hits = 1
        cache.set(ip_cache_key, this_ip_hits, ip_hits_timeout)
    else:
        this_ip_hits += 1
        cache.set(ip_cache_key, this_ip_hits)

Could be replaced with:

    # get the hits by this IP in last IP_TIMEOUT time
    this_ip_hits = cache.get(ip_cache_key, 0) + 1
    cache.set(ip_cache_key, this_ip_hits, ip_hits_timeout)

Maybe for another improvement would be to allow a setting that lets the admin set the header key that they know contains the users IP.",1514172008.0
ynotna,"Nice tutorial on middleware classes, but unless you have very good reason to do it in the application layer, it is likely better to do it higher up the stack e.g. nginx

Less overhead per request than python or Django, using the tool closest to the job, not implementing in every single app or instance",1514191014.0
Spit4520,Lit,1514145366.0
hopemeetme,What is the `instance` you provide to `for_instance_by_user`?,1514126750.0
rnevius,"I'm not sure what ""take everything as text input"" means...But why not just split the URI by the forward slashes, and keep the parts you need?

    >>> '127.0.0.1:8000/example/url'.split('/')
    ['127.0.0.1:8000', 'example', 'url']
",1514125452.0
SubZeb,"When you define your string, put an r in front.  To like this r'127.0.0.1\index'. It will ignore the \ as an escape character. 

Or you could just double the \.  So your string variable would be like this '127.0.0.1\\index'

Edit: changed forward slashes to back slashes, my mistake.",1514124052.0
rnevius,"With a `CheckboxSelectMultiple` widget. Something like: https://stackoverflow.com/a/1268493/3518452
",1514126655.0
zachtib,models.BooleanField,1514118629.0
quantumbot,In device-selector.html do you have a {% url 'device_selector' %} tag somewhere?,1514089060.0
Foxmask2,"You should have a look at 
https://docs.djangoproject.com/en/2.0/topics/http/urls/",1514107292.0
jedi_stannis,"Yes, make a custom form",1514070522.0
daredevil82,"check the documentation

http://www.django-rest-framework.org/api-guide/serializers/#saving-instances",1514057699.0
dmckim,Thats exactly what ive been lookimg for. Thanks for your help. ,1514100283.0
george-silva,"I'm using vuejs.

Create components! I've done auto generated forms, but they dont always look good. So i Just created my form components and reuse whenever needed.

If you have a lot of auxiliary models, like simple mappings auto generated forms might pay off, but when you're dealing with a end user product i've always needed them to look a bit different, so i created my Fields components and wrapped them in a form component.",1514037733.0
never_safe_for_life,"One thing Django did really well was auto-generate forms html for you, which got lost when we all switched to DRF and a front-end framework. I personally found that it wasn't that big of a loss

1. It's not hard to write the html, nor is it a burden to maintain
2. The number of times I had to customize a forms output was pretty high, meaning I was usually doing this work anyways

I suppose you could find a way to bridge the gap; perhaps you expose an endpoint that returns a description of the form, and some front-end code that translates that to HTML. There's probably a dozen projects that have done that, though I don't know any.

",1514055662.0
jeffbaier,"I use angularjs with DRF but the concepts should be the same. 

When you do an OPTIONS http request to a DRF endpoint it returns info about the fields it accepts for the POST or PUT. You can use this to auto generate your forms. 

Now for the most part I don't completely autogen my forms because that's of the UX/design aspect of my frontend app. The main thing I use it for is populating multiple choice type fields. So select options, dropdowns, sometimes even radio groups. 

This way your frontend is not hardcoded to choice values or foreign keys that can change. One change on the back end code or the database and the frontend updates too.",1514041656.0
be_haki,"I've used Formik with React and it's been great.

https://github.com/jaredpalmer/formik",1514055465.0
akoumjian,"My experience starting with Django 1.2 through doing API driven apps the past 7 years: auto-generated forms will make you unhappy.

Take the time to write out the components that map to your models. Don't forget that you're also probably going to want some form validation and user feedback. You may also want other UI elements that don't strictly map to a model value, (ie: a toggle that shows or hides a certain set of fields).",1514059658.0
Investisseur,"DRF, get options with axios/fetch, store in Redux store as keys waiting for input. Render keys and input types in JSX. Attach an action to submit of the formfield that dispatched a post/patch",1514061730.0
lonahex,"Tcomb forms. Very flexible and easily extensible. Doesnt make a lot of assumptions and the API is somewhat similar to django forms. 

https://github.com/gcanti/tcomb-form",1514062895.0
cq_in_unison,preact and formik,1514063411.0
roysta,"Hello!  I've asked very similar questions on here before, and received very similar feedback.

After trying several options, I ended up using crispy-forms, and having a url/view that only returns the auto-generated HTML form.  Then, on my front-end, I can do a modal pop-up that calls this url and loads the form.  I serialize the form data and send it to DRF's api (as opposed to posting to the django view).  That way, all the save is done via DRF's serializer so I can easily change to a different front-end if I need to.  Crispy-forms gives you nice flexibility in the layout of the form and works great with Bootstrap layouts.  It also lets you add python code... for example, in the crispy-form init() you can say... if field type is datetimefield, add the css class datetimepicker.  


For me, crispy forms is flexible enough to customize when I need to customize, but prevents me from recoding every field name and type on the front-end.",1514467624.0
colly_wolly,If you just want forms why not go with standard Django without the Rest Framework?,1514074471.0
daxaxelrod,"Hrmm interesting. Maybe serialize a dummy model and send that through an endpoint to some component that then forms the model off of that? Then again serializing the model would include the actual data. I wonder if there is a way to grab the actual model schema?

Django's modelform class is really useful and does what you're looking for but I'm pretty sure it wouldn't work with react right out of the package. ",1514049998.0
masterco,React,1514045664.0
crunching_karma,"It's not related to Django. This is how it works in python 2. You import same module twice which leads to two different objects created which have different ids.

You shouldn't add anything to system path while using dajngo tests.

http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-double-import-trap",1514039136.0
booooomba,"Hmmm I'm sure you could do something like this with the Django relational ORM, but I'd say you really wanna be looking into graph databases for that. That's one of the use cases that they are made for.",1514026924.0
vtbassmatt,"Storing the cross join of all users' answers against each other's sounds like a recipe for pain. Your database row count will grow with the square of your user count, and (I hypothesize) dating sites are only useful with a large user count. There are lots of obvious things you can do to reduce constant factors (e.g. heterosexual responders only need to be compared to people of the opposite sex, not everyone) but the algorithmic complexity works against you from day 1.

I think you could treat this as an [information retrieval](https://en.m.wikipedia.org/wiki/Information_retrieval) problem. The answers from the new user are the query, and everyone else's answers are the objects you're searching against. That's not a specific suggestion on how to implement in Django, as you still have to pick which model would best map to your problem.",1514034215.0
Mekhami,"when you typed this question and then hit submit, did you think to yourself, ""Yeah, that's definitely enough information for my polite request for help. This was a good use of my time and everyone who reads it will think the same thing.""?

Just curious how people think on your planet.",1514015788.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1513991915.0
NoLemurs,"Instead of a UUID, use a [cryptographic signature](https://docs.djangoproject.com/en/2.0/topics/signing/). Just build the signature from the user id. This avoids any need to store extra data in the database, and is just cleaner across the boards. If you use `TimestampSigner` you can easily have the link expire by using `max_age`. For a simple ""YES""/""NO"" choice you can add the response to the signature as part of the url. There's not really any need to use a form for this, and I'd recommend sticking to simple links. As you noted, it's considered better to use 'POST' requests but there's no security implications really to using 'GET' - it's just a bit of an abuse of web standards - but given the state of email clients, there's no real alternative.

Directing to a page with a form *is* a little more secure. With just the links from the email, someone could conceivably swap the links on the user and he'd have no easy way of telling what was up until after submitting the change, while the form allows the user to verify the data is correct before submitting. Also, you can require actual authentication so that someone who happens to have the link, but not a user's password wouldn't be able to make the change.

For a non-critical response though, I think a link that just makes the change is fine.

> If I wanted to include day of the week form, should I make them login to do this

Including a real form in an email is problematic. It will work for *some* users, but not for many (for instance, many versions of Outlook won't render a usable form). So if you decide to do this, you still have to handle the ""form failed to render"" case, usually by directing the user to a form on your website to fill out. Setting that view up to render the form, or process the response if one is sent shouldn't be *too* tricky, but there are also security concerns here, and I'd really recommend against it unless you're willing to put a lot of extra work in!",1513993287.0
daredevil82,"First question: not as long as you specifically set the URL path correctly in django urls.  Something along the lines of 

    url(r'^(?P<temp_user_id>[0-9a-f-]+)/(?P<user_response>[\w]+), ViewHandler.as_view(), name = 'temp_id_request'), 

and check in your view handler whether `user_response is `yes` or `no`, or any other value you want for true/false.  Check these values before you do any db access/inserts, and if they don't match, throw an exception immediately and log to file.  Django will automatically attempt to fit the values in those parts of the URL to the regex scheme defined, and non-matches will not proceed through.

Second question: yes that would be true, but wouldn't work for an email link.  If all you're doing is recording a yes/no then this is fine.    ",1513986741.0
disuser,"I like some of the suggestions about how to construct your link, I just want to mention the possibility that your link could go to a yes/no form and use that link token as an input to the form. That would get you out of the GET/POST dilemma, and you could easily add to the form if you needed more options. 

My company’s SecOps tries to discourage the sending of links, their main concern being that it makes users more complacent about phishing attacks. We still send an occasional link, but it is something we are cautious about overdoing. ",1514001738.0
,"Send the email with a URL with a parameter of a encoded version of their username/email and their answer

Eg.

Name = base64encode(username)

site.com/subscribe/' + Name + '/yes

site.com/subscribe/' + Name + '/no

And then set the above URL to direct to a view where you decode Name and update your db accordingly



",1513988034.0
PopeOh,"> I read somewhere that for changing state, it’s better to use POST and not GET. 

In general I agree but if you send ""one time"" links by using a new UUID per mail it should be fine. It's similar to the password reset links you get per mail if you forget your password. It is a GET request but it resets your password.",1513988944.0
Durakan,Let me tell you about a little browser plugin called Wappalyzer... or yuh know just install it. It’s pretty good at telling you what sites are made with.,1514007180.0
jmitchel3,Yes. Most likely in combination with JavaScript for the media player(s).,1513977256.0
never_safe_for_life,"Django would serve as your backend, then you'd build a front-end in something like AngularJS, Backbone, React, etc.",1513978381.0
ubernostrum,"A foreign key, by default, points at the primary key of the related model. Which is an integer. So you told Django to find you the `Contender` whose `user` id is the integer 'SUMMERSON', and Django told you ""I can't make an integer out of that"".

You probably want to pass `request.user` there instead of `request.user.get_username()`, though, since normally when filtering on a relationship you just use the object -- Django will figure out what to do there.",1513967410.0
__himself__,"Also, consider using a filter and update with F

Contender.objects.filter(user=request.user).update(F(‘howmany_photos_owned’) + 1)",1513973802.0
hopemeetme,"Your semantics ""logged in as"" reveals the answer: you should have two users of different types for a person.

Define which role is primary (host or guest) and add a one2one relation to secondary role. Primary role shows the majority of views.",1513952527.0
HairyBeardman,"Make two permission groups and add one of those to the user.

This way you will be able to also have users who is both host and guest, just in case.    
As one wise man once said:    
*It's better to have something you don't need than to need something you don't have*",1513975216.0
Investisseur,"User model. Extend user model. Attribute, type of user as a choice field. If user model either at creation or via updating settings in app changes to version two, state of type of user changes. If user has x values change y value on frontend. Also insure that on def saves of models that require version 2 of user that this is checked before model is saved.",1513957697.0
oosthuizenb,If you could link to the code giving you problems that would be great! Check this out for csv stuff https://docs.djangoproject.com/en/2.0/howto/outputting-csv/,1513926476.0
ramfanprogrammer,"I am actually trying to create a financial app as well, and was wondering how to structure the year over year data too. (If anyone has a suggestion, please let me know too).

For your question though, I would need to understand your code more. If each year is a model instance, then I am assuming you have revenue, expenses, etc as fields. If that is the case, can't you calculate using a method like this:

Rev_growth_2016-2017 = (year_2017.revenue - year_2016.revenue)/year_2016.revenue

You could make a loop to go through each iteration. Then, you could just save it under the last year. So, the rent_growth_2016_to_2017 would be saved as a column in year_2017. It will be easier to show in templates as well, because you will want the growth % to be in the terminal year of the calculation.

Disclaimer: I am not an advanced Django programmer, but that is how I would do it. If anyone else has a better idea, let me know.",1513926922.0
jobelenus,"This is a pretty standard reporting problem. The calculations aren't difficult - but they are time consuming given fully-normalized data, especially to do in realtime. The solution is a technique called ""Rollups"". I'm actually working on a project now that needs reporting and we're using this technique. Here is how it works.

You create a model that represents a ""Fact"". Facts have quantitative data attached (as fields/db columns). These data points are numeric so they can be SUM/COUNT/AVG/MIN/MAX/STDEV very quickly by the db engine. *Anything* that is not a numeric value should be a foreign key to another model, called Dimension(s).

To put it in concrete terms of my project I'm handling Sales leads. LeadCreatedFact is one fact. LeadReviewedFact is another, while LeadClosedFact is another. They represent three different events in the lifecycle of a lead. For simplicities sake I'll say I have two Dimensions: DateDimension, and ClientDimension. Every Fact has a FK to both those dimensions.

My DateDimension has a number of columns: date (python native date), month_year (""Dec 2016""), weekday (0-6), quarter (""Q1 2017""), week_number (0-53), week_number_year (0-53 201X). Populating all the different ways in which dates can be sliced and diced allows you to quickly filter and GROUP BY for your Facts. The ClientDimension has name, and category. 

Now here is where the rollup comes in. Lets say I wanted write that Yearly report, year over year like you described. I would create a LeadCreatedRollup, with the same ClientDimension, and a YearDimension (where the ""name"" of that dimension would be the string of the year, e.g. ""2017""). At any time I can run a background job that goes and tallies up every day in a year per client, and creates a LeadCreatedRollup record.

So when I want to write that report its really easy to use a django ListView and GET params to determine how to filter the queryset. Having really simple queries and zero calculations per row allows you to do a lot of optimizations for performance (e.g. you can use prefetch_related b/c you're not doing any related model filters later in processing) and ease of writing the template (e.g. you can still use regroup if you want to).

You pay a small price in DB size with extra tables. But thats it. You're just moving the calculation of the numbers from a View in real-time to a script. I've used this technique for years now.",1513955948.0
Crowbarkz,"Your problem is with aggregating/calculating new data from existing, not storing it. So storing data in a different way (csv) would not solve your problem.

You can calculate something from your data either in view or model method (don't do it in templates). There are many ways to do it, the most straightforward one would be to write a custom view, where you fetch all needed years, do all needed calculations and pass all the prepared info to template. 

Another way, like in case of ""revenue growth"" you can implement it as model property. E.g.:
1) define a new field on your ""year"" model, which points to previous year (you will need to somehow fill this field for existing and future instances). 
2) define a property which calculates growth

    class Year(models.Model):
        ...
        previous_year = models.ForeignKey('self', null=True, on_delete=models.CASCADE)
        ...
        @property
        def growth(self):
            if self.previous_year:
                return (self.revenue - previous_year.revenue) / self.revenue
            else:
                return 0

Edit: added null=True to the example, so that there can be a year with no previous year
",1513938190.0
charettes,You might want to have a look at [`FormView`](https://docs.djangoproject.com/en/2.0/ref/class-based-views/generic-editing/#django.views.generic.edit.FormView). You should be able to use `form_valid()` in your case.,1513917740.0
richardcornish,"You're sort of on the right track but making it harder than it needs to be, but Django also doesn't make this kind of thing easy to understand in generic CBVs.

It appears you are using form fields to only retrieve object(s) and not modify them. In other words, you're trying to create a rudimentary search form. Therefore, you should not use `request.POST` or `FormView`, which automatically looks for `POST` data and redirects you. You should use `FormMixin`, which sets you up to use a form but stops short at processing the data, and you should subclass the `get` method, which should be looking to see if the form field name is in the `request.GET`. I usually prefer `TemplateView` if I'm using `FormMixin`. The form in the template should use `method=""get""`. You probably don't need a 404, but rather a simple ""No results found"" message. For initial loading of the page, you would simply render the form, and now you don't need a separate view. The branching happens in the one template. Also, I don't think you need to query individual attributes. You simply pass the results along to the template and query what you need in the template. I renamed or eliminated variables for the sake of clarity; `name` is now `q`/`query` (which is a common convention and makes for better URLs), and `device` is now `result`.

`# views.py`

    from django.views.generic import TemplateView
    from django.views.generic.edit import FormMixin
    from .forms import DeviceSearchForm

    class DeviceSearchView(FormMixin, TemplateView):
        form_class = DeviceSearchForm
        template_name = 'search.html'
        def get(self, request, *args, **kwargs):
            query = None
            result = None
            if 'q' in request.GET:
                form = self.form_class(request.GET)
                if form.is_valid():
                    query = form.cleaned_data['q']
                    result = form.get_device(query)
            else:
                form = self.get_form()
            context = self.get_context_data(form=form, query=query, result=result)
            return self.render_to_response(context)

`# forms.py`

    from django import forms
    from .models import Device

    class DeviceSearchForm(forms.Form):
        q = forms.CharField(label='Query', max_length=20)
        def get_device(self, query):
            try:
                device = Device.objects.get(name__iexact=query)
            except Device.DoesNotExist:
                return None
            return device

`# search.html`

    <form method=""get"" action=""{% url 'search' %}"">
        {{ form.as_p }}
        <button type=""submit"">Search</button>
    </form>
    {% if query %}
        <p>You searched for {{ query }}.</p>
        {% if result %}
            <p>{{ result.ipadd }}, {{ result.type }}, {{ result.user }}, {{ result.password }}</p>
        {% else %}
            <p>No results.</p>
        {% endif %}
    {% endif %}

You might also consider using `.filter()` instead of `.get()` in the form method, but you're getting into robust search territory, which might be slow. Additionally, you would need pagination go through results. Unfortunately, this is as short as it gets. If you were doing a basic CRUD operation with typical create/read (list/detail) /update/delete views and not a filter by search, this would be a lot shorter. You simply have to get into the guts of `get` and `form.is_valid()` to return the results you want. Try it out and see what works for you.

If I'm misunderstanding something, then please describe what you're trying to do in more detail.",1514051317.0
,"It very much depends what you want to accomplish.

- REST + Dedicated Front end is a lot more work, better suit for large projects where you have a dedicated FE and BE team. You most likely need to support mobile Applications as well 

- In contrast Django's ""traditional"" way will speed up your development time a lot, for small apps, prototypes or even medium apps. Having form, validations, sessions, security, out of the box with little to no code needed is super convenient.  The downside is that you end up with coupled code which tends to be harder to scale or optimize. If you ever need a REST feed for mobile devices you will have to repeat a lot of work etc.. 

As with everything engineering there are trade offs, pros and cons. My humble advise: first think what problem are you actually trying to solve. Let the problem inform the tools, not the other way around. ",1513910611.0
Airith,"It's entirely dependent on the project's needs. Neither is better than the other in a vacuum.

A purely django app would miss out on some nice javascript features. A combination would be best.",1513908741.0
pat_the_brat,"To add to Omar's excellent answer, you can always go with a Hybrid solution, as well, particularly if your web app consists of many different types of pages, making it not suitable for a Single Page Application.

You can send the layout directly from Django templates, and use AJAX/REST to get the data for it. If you want to support mobile apps, now or in the future, this may be a good compromise.",1513944997.0
punpunpun,"I found that it's easier to get PHP developers to go with a modern stack by giving them a REST endpoint and JavaScript, instead of telling them to learn Python and Django all at once.",1514219437.0
TunaBoo,I would code it as one app with one urls file.,1513914196.0
HairyBeardman,"Start from writing down requirements, like you should do always in any situation.    
Then check if messaging framework will do.    
If not, proceed with caution.    
Don't forget to cover everything with good unit and functional tests.",1513898667.0
basalamader,"Just to find out more information so i can advise you better, is this a social network?",1513901548.0
madscientistisme,pinax-notifications is one way to do it. ,1513977312.0
execrator,"MailChimp is free up until something like 2k mails per day. If you're sending bulk mail to a list, it's a good choice.

You can run your own celery queue very easily. Both redis and rabbit are free. I'm not even sure that you *can* pay for rabbit. The SMTP server may still charge you but that's unrelated to celery.

If you provide some detail about when and why you're sending mails, and what sort of management that a nice UI would enable you to do, I think you will get some better advice.",1513892709.0
,"Sendgrid gives you 12k emails free per month
Then just setup a cronjob to run a script every minute/hour etc that sends the email based upon some logic from your db records (if email type X hasn't been sent for user Y then send it)

No need to mess around with celery or redis for this",1513995542.0
__himself__,"Amazon SES is free for the first 62k a month and is pretty reliable. I’ve used postmark in the past which was really nice. Mail chimp is nice if you want help building an email template. 

https://aws.amazon.com/ses/pricing/",1513907729.0
a_simple_pie,"How are you referencing your model in the data migrations?

It should look like the following

    def do_data_migration(apps, schema_editor):
        Airport = apps.get_model('myapp', 'Airport')
        # ...",1513900653.0
daredevil82,"Do you have schema migrations combined with data migrations?  If so, I would split them up into two distinct migrations

>Migrations that alter data are usually called “data migrations”; they’re best written as separate migrations, sitting alongside your schema migrations.

from https://docs.djangoproject.com/en/2.0/topics/migrations/",1513888083.0
naught-me,"I don't know what the consensus is, but so far I've only done templates in my main apps.  I started this way under guidance of a senior Django developer, and it's never come up that I wanted the same templates in two projects, so, so far, it's fallen under YAGNI for me.",1513890358.0
,"Look at any app like all auth for them to be reusable by its very definition they must be self contained.

Even if you don't want the same templates cool you can override this in your main templates folder in the root project same as allauth etc ",1513890799.0
booooomba,"I dont get it. You cannot have more than 1 <title> tag anyway. 

And why do you create an extra block if all you do is input {{ post.title }}? Why not just input {{ post.title }} right away?",1513865915.0
wskyindjar,Template tag to look up title by constant? But I would still pass the title in the view context. ,1513874029.0
This--Ali2,"HI, so this is what i understand, you want different Page titles for different pages ? right? correct me if i am not getting this...
",1513882138.0
porksmash,"Make your title tag in base template a block, and then don't ever call block.super in your sub templates. The lowest or deepest template with the title block will win. I think that's what you need to do if I understood properly.",1513900730.0
i_amwithnail,"I've had to do this in the last two roles.  I start by looking at what's throwing errors (if you have something like Sentry or similar), and what's high traffic.  Basically, start with the fragile and/or important bits.  That's not how i'd approach a new system, but it's a pragmatic way to start on an existing one with no coverage. 

Framework/tools wise, we use FactoryBoy, Django Nose and Coverage.  Need to get around to doing Selenium for front end but not there yet.  ",1513852015.0
hopemeetme,"For your integration/functional tests you should use Django's StaticLiveServerTestCase and so you'd go with Python's unittest.

For consistency you may write your unit tests with unittest too, but give the pytest a try. It would recognize and run all of your unittest too.",1513862836.0
gyrftw,"Could you make a ModelForm based on the linklist model?  Users could create their own linklists using this form.  If you want them to create multiple linklists at once, look into formsets.  If you want the users to have the option to keep adding links, look into something like [django-dynamic-formset] (https://github.com/elo80ka/django-dynamic-formset). ",1514026442.0
hopemeetme,Subclass ModelForm and under `class Meta:` define `widgets` dictionary with yout name of the field as a key and with initialized `Select` class (or subclass) as value. ,1513863479.0
scottocom,Have a look at https://github.com/docker/docker-py,1513835951.0
cleancole,Look at AWS cloudformation alongside ECS and ECR,1513948991.0
ubernostrum,"    from django.apps import apps
    from django.contrib.auth import get_user_model
    
    
    User = get_user_model()
    
    
    user_relations = []

    for app_config in apps.get_app_configs():
        for model in app_config.get_models():
            for field in model._meta.fields + model._meta.many_to_many:
                if hasattr(field, 'remote_field') and \
                   hasattr(field.remote_field, 'model') and \
                   field.remote_field.model is User:
                    user_relations.append((model, field.name))

`user_relations` will end up as a list of `(model_class, field_name)` tuples, where `field_name` is the name of a field on `model_class` which is a relation pointing to the user model. The snippet above finds *every* such relation in every model in every app in `INSTALLED_APPS`. But you can see the technique there, and pare it down to just what you want to search.",1513847021.0
SumatranRatMonkey,"I think you are looking for from django.contrib.auth import get_user_model  
(untested)",1513842231.0
flipperdeflip,"IMHO using django @cache_page output cache is just a stop-gap measure.

You'd look at a getting dedicated HTTP cache like Varnish or a CDN like CloudFront. Those have proper flushing/banning capability and will be a lot faster (both in response time as in system load).

Also look at https://docs.djangoproject.com/en/2.0/topics/conditional-view-processing/",1513954184.0
,[deleted],1513828410.0
bedubs147,"Definitely interested. I'm in a similar spot in my learning. Been doing some contract Django dev for a few months, but I still have a lot to learn and am always interested in doing some collaboration. I can't say I have many ideas on what type of projects to do. ",1513821153.0
pat_the_brat,"I'm down! Haven't had time to do much Django lately, as I'm going insane managing a garbage, bug-filled cart written in PHP and trying to fix all the vodka-fuelled bugs. Would love to get back to Django more actively.",1513853432.0
sakisbl11,"I am definitely interested too. I have experience working with Django and I created some personal projects. But, I would like to reach to the next level. I would be glad to be part of a team to create some interesting projects.",1513854159.0
misterE_STL,Delete and migrate out.  What's the point in keeping them around unless you have a need for the data or think you'll resurrect them at some point?,1513811225.0
Airith,"Checkout [DATA_UPLOAD_MAX_MEMORY_SIZE](https://docs.djangoproject.com/en/2.0/ref/settings/#data-upload-max-memory-size), it's already handled.",1513803369.0
CKreuzberger,"The most expensive part (computing wise) will be the part where Django retrieves 30 billion characters in the body of your HTTP request, as this will be blocking your application and filling up memory.

This is not a problem of your Django application though, this is a problem of all web applications. The only way to prevent this is by properly configuring your webserver to block such requests.",1513802457.0
flipperdeflip,"You want to filter this early in the stack, ideally at the webserver so it doesn't even reach python.

Nginx has `client_max_body_size` for example.",1513955623.0
,"In addition, add some JavaScript validation at the point where the user enters the text.

If length of string > X then don't submit and display a warning to the user.

This won't stop programmatically actioned POST requests but it will add some extra security",1513995914.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1513798304.0
leehinde,Why does that web page make my cpu spike?,1513785261.0
daxaxelrod,I've been learning react over the last couple weeks to do just this! Django is fantastic but the template engine can be limiting and slow. Reacts declarative component approach is really clever and redux maintaining application state is wayyyyyyyy better than writing a ton of jQuery to update the page. Great read!,1513781920.0
gr33n3r3,"Is there a code repository to go along with this, by any chance?",1513776259.0
skernel,Well done ( ͡° ͜ʖ ͡°),1513788673.0
scottocom,I didn't read the article but can someone tell me WHY choose React over Angular? I have used angularjs successfully for years and I love how easy it is. React looks like a lot more work so what am I missing? I would love to know. ,1513804092.0
kmmbvnr,"It's just plain django. `manage.py shell` would start ipython or bpython if one of them installed

https://github.com/django/django/blob/master/django/core/management/commands/shell.py#L18",1513760598.0
dikamilo,"it's not Django expensive, it's your project type and scale ;)",1513765458.0
WelshDwarf,"OK, if you want multi-vendor, then you aren't operating an e-commerce but a marketplace, which is an important distinction and rules out most plug and play solutions.

Doing this will require building out a custom solution and adding a specialized layer to manage the market place as a whole (you'll probably build ontop of an existing e-commerce to lower costs). I suppose you don't have system administration skills, so this will have to be saas based.

At agency rates, your 50k$ will buy you 50 development days (plus testing and project management) or one guy working for 2,5 months. The devil is in the details, but that doesn't sound outlandish for the scope you have outlined.

Edit: when I say the cost seems right, it would be right regardless of the technology, this isn't Django specific.",1513761110.0
yup_its_me_again,"Yes, look at what you want. It's a complex project with which you'll earn (might earn) a lot, so no problem to pay this agency ",1513761188.0
,[deleted],1513776755.0
booooomba,Have you changed your url patterns also?,1513731124.0
chiruu,"Can you post your html, urls.py, and the error?",1513734510.0
Mekhami,"i'm a bit confused. Django has login, registration, password change, logout, and password reset out of the box. What does this project showcase?",1513742573.0
gunni,You should add U2F support.,1514035954.0
ic_97,Instead of using different forms for email and username wouldn't it be better to define a backend for login via both?,1513755661.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/djangolearning] [An example of Django project with login, registration, password change, log out, and password reset functionality \[UPDATE 3.0\]](https://www.reddit.com/r/djangolearning/comments/7m0yus/an_example_of_django_project_with_login/)

- [/r/python] [An example of Django project with login, registration, password change, log out, and password reset functionality \[UPDATE 3.0\]](https://www.reddit.com/r/Python/comments/7lngr9/an_example_of_django_project_with_login/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1514201535.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1513723245.0
Imalame,"Figured it out, just have to create a custom filter!",1513750714.0
rascaldev,"Can you rephrase? I'm not entirely sure what you're asking. Are you asking what `.po` files are or is the syntax used there what you're unsure on?

If your question is about the syntax, it's multiline text and [this](https://www.gnu.org/software/gettext/manual/html_node/PO-Files.html)(towards the bottom) should be useful in understanding more. It also explains the python syntax on other pages of that site so you should be able to understand how the variable interpolation is happening.",1513715335.0
earlyterror,"After searching a while I think I missunderstand how blocktrans works, thats why the .po file format looks weird",1513721596.0
jeffbaier,It's possible to do just about anything with Django. Especially now with Channels it's easier to do real-time updates. I am a big fan and player of DOTA2 so I'll try to give you any advice I can. Where do you plan on getting the upcoming match data from?,1513713609.0
Nicksil,"[Writing your first Django app, part 1](https://docs.djangoproject.com/en/stable/intro/tutorial01/)",1513704875.0
igncampa,"i've seen [The Lincoln Loop](https://lincolnloop.com/) recommended in other threads.

i have never worked with them nor have any idea of their quality or work, i just know they exist. hope that helps",1513703863.0
gosh_djang_it,"Caktus     
https://www.caktusgroup.com/

They are very good:  not sure of $$$.",1513708009.0
CKreuzberger,"Every bit of my body is screaming ""hell no"" when I read this ...

But I guess you can do some interesting things with that, maybe you can showcase something?",1513718336.0
booooomba,"Oh god, why would you want to deploy on a windows server? That is super uncommon.

Do you have specific requirements that force you to do this or do you just think this is a good idea?

The usual recommendation is:

nginx + gunicorn + PostgreSQL",1513699969.0
wheezy360,"Absolute easiest thing you could do is put it up on Heroku. With Windows, you're going to have a bad time.",1513720526.0
leir80,"Take a look at Digitalocean tutorials :



[setup a django prod server on Ubuntu](https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04) 

[use a one-click install image on Digitalocean](https://www.digitalocean.com/community/tutorials/how-to-use-the-django-one-click-install-image-for-ubuntu-16-04)  (sadly only for Django 1.8 atm)

Or take a look at [pythonanywhere](https://www.pythonanywhere.com/) ",1513714346.0
duqq,"Here is a step-by-step deployment guide for Django:
https://simpleisbetterthancomplex.com/series/2017/10/16/a-complete-beginners-guide-to-django-part-7.html
nginx + gunicorn + PostgreSQL as mentioned above.",1513700210.0
A3gis,"Does it have to be IIS or just windows? If it's just windows, I'd recommend taking the plunge into docker. There are a lot of libraries that have bad Windows support (celery is a famous example)

I'd recommend using the base images for nginx and postgres:

    docker run <options and port mappings> nginx
    docker run <env vars for database name and pass> postgres

(Would need to find a way to put your staticfiles into the nginx container)

Then you'd need a Dockerfile to run gunicorn which would be something like this:

    FROM python:3.6.3

    # Set environment variables like this
    ENV DEBUG=0

    RUN mkdir /code
    WORKDIR /code
    COPY requirements.txt .
    RUN pip install -r requirements.txt
    
    EXPOSE 8000

    # Put all the files from the host folder into the container's folder
    COPY . .

    CMD [""gunicorn"", ""ProjectName.wsgi:application"", ""--preload""]

",1513702437.0
PM-ME-Your-Passwords,"If your looking for a simple way to get it up and running quickly, I'd recommend pythoneverywhere because you don't have to set up the server yourself. If you want full control over everything though, then I'd recommend digital ocean. ",1513715254.0
charmandre,pythonanywhere.com,1513716336.0
banana_poet,I just had to do this using fastcgi. I failed and finally downgraded to 1.8. Works like a dream now.,1513720722.0
,"The easiest way to do this is with either Heroku or pythonanywhere.com pre configured settings:

https://github.com/heroku/heroku-django-template

https://devcenter.heroku.com/articles/deploying-python


",1513721364.0
lovestruckluna,"Yup. If Windows is a must, look into [Waitress](https://pylons.readthedocs.io/projects/waitress/en/latest/), which is similar to gunicorn but supports Windows. Just run `waitress-serve --port someport yourapp.wsgi: application` in the background (are service wrappers in Windows a thing?) and tell IIS to reverse-proxy it with the necessary headers.

You will still have to set up static and media files (tell IIS to serve a directory before falling back the reverse proxy, point your django settings to it, then run `manage.py collectstatic` to copy css, images, and js there). Also, make sure that you use a real database software, not SQLite. There's a third party connector for MSSQL if you have to, but otherwise Postgresql is highly recommended, and supports Windows. 

Note that this setup is not the norm (a lot of Django folks do Dev on Windows but not production), so expect less support from the community and consider using a VM instead. Hyper-V is really easy to configure with modern Windows. ",1513702167.0
flipperdeflip,"What? 

> In this Django Tutorial I will describe how you can move ***a PHP based wordpress blog*** to a  Python 3 based Django blog.

OK, cool..

> Reasons to Switch to Django.

> - Python being easier to program in with several modules ***including Machine Learning*** already built in.

What has machine learning to do with moving your shitty Wordpresss blog?
",1513686172.0
CKreuzberger,"Talks about Django/Python being more secure and uses an outdated Django Version (1.10.*) in the tutorial...

",1513699010.0
TBNL,"Loving Django. Hating WordPress.

But I think a lot of blogs could (and should) do with a static site generator.",1513710633.0
twigboy,"Title should have been ""how to use django mezzanine""",1513711363.0
mbrochh,"I build Django sites for a living since 9 years. 

I can only say: If you just have a Wordpress blog, HOLY SHIT STICK TO IT AND STAY AWAY FROM Django.",1513686928.0
pat_the_brat,"> 200k-300k records

Assuming that isn't a typo, use AJAX. Assuming the average record is 1000 characters long, using 8-bit encoding, you would be looking at 200-300 MB of data to transfer them all. Your site's mobile users will murder you if you send them a 200 MB listing on their phone and eat up all their mobile data, and the page will load forever.",1513635603.0
TBNL,"Came here to say: ""Now people will start discussing why you should use React and Vue over Angular""

Late to the party...",1513673596.0
,[removed],1513625203.0
Nicksil,"One way:

- Set up the POST/create URL to accept the Contest's ID
- Look-up the Contest record via the ID w/in your view
- Create relationships/extract data as needed.

Something like:

    def contest_post_create_view(request, contestpk):
        contest_record = Contest.objects.get(pk=contestpk)
        # ...do work

    url(
        r'^contests/(?P<contestpk>[\d]+)/posts/$',
        views.contest_post_create_view,
        name='contest_post_create_view'
    )

Obviously, your variable naming-conventions and/or URL regex parameter requirements may differ, but you should get the idea.

Also suggest referencing the [documentation](https://docs.djangoproject.com/en/stable/topics/http/urls/).",1513615409.0
jonr,"So... where is the source?
",1513599582.0
The_Amp_Walrus,"Do you have a problem with developers accessing your models or your  database data? I think you're trying to solve the wrong problem. Is there anything sensitive about the models themselves (not the data in the database)? Python is typically very permissive with access to modules and you're going to have to work _way_ too hard to lock that down.

If you want developers to work on your Django project without accessing sensitive _database data_ then provide them with a sanitized copy of the database (eg a Postgres pg_dump file). If you do that then you don't have to worry about ""access to the models"". This is normal practice when dealing with sensitive production data like:

* personal identification information (PII)
* credit card data
* chat logs
* etc

Have a script that makes a database backup from prod. Have another script that restores that database on another non-prod server, sanitizes it, and then dumps it back out. Provide your developers with the sanitized data. Alternatively, create your test data from scratch using fixtures or Factory Boy.",1513591151.0
,[deleted],1513564235.0
ramse,"I leave the answer about button types to someone else, you're doing a lot of variable assignment that isn't needed. There's no real need to be doing things like `ipadd = device.ipadd`, just reference `device.ipadd` directly. Also `type` is a reserved word, I wouldn't be doing `type = device.type`

    def devices(request):

    	if request.method == ""POST"": 

            if ""arp:"" in (request.POST['name']):
                
                form = ArpDevice(request.POST)

                if form.is_valid():
                    devicename = form.cleaned_data['name'].split(':')[1]
                    try:
                        device = Device.objects.get(name__iexact=devicename)
                        device_arp = get_device_arp(device.ipadd, device.type, device.user, device.password)
                        return render(request, 'devicearp.html',{'device': device_arp, 'devicename': device.name})
                    except Exception:
                        raise Http404

            elif ""config:"" in (request.POST['name']):

                form = ConfigDevice(request.POST)

                if form.is_valid():
                    devicename = form.cleaned_data['name'].split(':')[1]
                    try:
                        device = Device.objects.get(name__iexact=devicename)

                        driver = get_network_driver(device.type)

                        connection = driver(device.ipadd, device.user, device.password)
                        connection.open()
                        config = connection.get_config()['startup']
                        connection.close()
                        return render(request, 'deviceconfig.html',{'config': config, 'devicename': device.name})
                    except Exception:
                        raise Http404
",1513563656.0
LesterHoltsRigidCock,"Put it into a form that goes into the query arguments and use that to indicate what to filter on. 

Why are you doing raw SQL?",1513529354.0
UloPe,Get a better idea editor that allows to open files by partial prefix match (e.g `s/adm` would complete to `someapp/admin.py`),1513540178.0
mroximoron,Have you looked at the source? It's not rocket science ;-),1513530411.0
AlexFromOmaha,"It's not complaining about the models you've made. It's looking for one of the built in ones. Is django.contrib.auth in your INSTALLED_APPS setting?

EDIT: Checked your post history, looks like you've been at this for a while.

If manage.py migrate --list still says that you've run the auth migrations, you've got something else going on. Possibly, you've accidentally run the migrations with the --fake flag. If so, drop your database and start over. There's also a possibility that you've run the migration in your local environment, but not against the Heroku server's database. 

Basically, the output of migrate --list tells you all the migrations that have been run against the database that applies to your current settings file. A migration is a set of instructions on how to modify a database table.

You might need to use some non-Django lateral thinking to sort this one out, or paste buckets more text for us to help you debug what's going on. If you're not comfortable putting all of that out in the open, feel free to PM me, but you'll probably get quicker response times asking in the open.",1513491307.0
ghostofgbt,"If you're using sqlite, download a sqlite browser and open the database to dig through the tables manually. In the django_migrations table you can safely wipe out all the records (don't forget to write the changes!) and then rerun makemigrations. This will remake the initial migrations based on the current state of your database, and then you can run migrate again, which should rebuild the auth tables

The easier solution, as someone else said, is to just dump the whole database if you don't care about the data.",1513503095.0
Daishiman,"APIView is similar to a Django CBV with some changes that allow you to specify different view methods per HTTP method, and which allows you to override a bunch of class attributes related to access control, authentication,  and renderers.

GenericAPIView adds methods and attributes to deal with views that work with models or model-like objects.

A viewset describes a complete REST resource, and inherits from the above things, allowing you to override behavior for all the different HTTP verbs the resource supports, allowing sub-resources. It's normally used with the Rest Framework router to be attached to a single resource URL.",1513483309.0
geosoco,"What do you mean by password confirmation? Do you mean requiring user to input their password even though they're logged in? Also, why do you think a redirect would be annoying? The redirects can happen without the user really knowing. 

Without knowing the specific flow, it's hard to know what would be simple for the user. If you insist on the dialog, you could do this with some Javascript on the client side, and a special view that returns JSON, and shows the errors on that dialog input. However, if the rest of your app is all pages served without javascript, this might make it a bit awkward for you and for the user. In terms of the actions required from the user, whether it's a dialog box or a separate page probably won't make a huge difference to the user (it's potentially an additional page load, but it should be simple).  

It'd be slightly awkward for you as there's a bit of additional overhead in javascript for doing the ajax work and adding/changing errors from the return call. For the user, it could be difficult to notice what needs to be done. While that may seem unlikely, I've watched numerous people struggle with interfaces because they've missed/ignored the dialog and are confused what's going on. 

Also, FWIW, You can use the [authenticate function](https://docs.djangoproject.com/en/2.0/topics/auth/default/#django.contrib.auth.authenticate).  This authenticates the user without logging in the user (or without changing the login if they've failed I believe). ",1513473387.0
lamby,Why do you have `@login_required` and then you test for authenticated users within the view itself? :),1513505759.0
BithTree,A recommended way of making your own login form would be to make a ModelForm in forms.py and rendering it in the template as {{ form }}. Documentation and tutorial goes a great deal into this.,1513543124.0
crunching_karma,"`user = User.objects.get(username=username)`

Why do you get user from db if you already have one in request? Remove `login_required` decorator or remove auth checks inside the view. This code already has smell (reluctance to use the form just adds to it.) and it will have even more after implementing `# Password is ok, do stuff`.

Also remove comments, you don't need to comment self explanatory code.",1513516340.0
jefwillems,"In our uni, you can not use scripting and backends on there at all. So no php, bo python, only html and maybe a javascript frontend framework",1513413284.0
geosoco,"It's difficult to answer this without knowing the exact setup, but there's a decent chance Django isn't an option in this configuration. The existing webserver has to be configured to support WSGI, and configuration from there depends a bit on the specific way they have that set up. However, it's possible they don't have WSGI configured.",1513405032.0
rob_vandam,If you insist on using the webspace of the university you could load some parts of the page dynamic with javascript (ajax) and you can run the django part somewere else.,1513422264.0
Zalozba,You don't do it this way. Read up on django deployment options. These types of free hosting usually only allow html and to a lesser extent php. You usually can't run python apps,1513405288.0
supermario182,i doubt you can do it that way. talk with someone at the university they might be able to set you up with something if they are cool,1513414054.0
grokjtrip,I would suggest setting up Django elsewhere and using the university page to redirect. Dealing with frames or other tricks doesn’t seem worth while.,1513437304.0
Niicodemus,"Set up something like a free heroku, then embed that in an iframe on your university site.",1513439598.0
Compizfox,"If you want to host your Django app under a webserver like Apache or Nginx, you should look into WSGI.

I doubt your university hosting lets you do that though.",1513440923.0
d36williams,Well the truth is Django is not a server. You need to set up a socket or port that allows nginx/apache to communicate with it. Typically you use uwsgi to do this,1513450619.0
BithTree,I personally override the form_valid method. Don't forget to self.object = form.save(),1513402950.0
jedi_stannis,If your are doing anything with the built in class based views this documentation is a must: https://ccbv.co.uk/,1513436061.0
TunaBoo,https://stackoverflow.com/questions/1999607/download-and-open-pdf-file-using-ajax,1513387515.0
TunaBoo,"I hope you are using source control?

Two sane ways to do this:

1) Bundle up common stuff into app. Have your other projects import this app in requirements.txt. As you upgrade common stuff, you update version numbers which will make it upgrade elsewhere.

2) Monorepo. Google has billions of lines of code in 1 code repo. I personally have all of my projects for my company in 1 repo. So very easy to share code, because everything is in one place.",1513377311.0
never_safe_for_life,I never have things I need to share between two projects. Do you? Don't you end up needing to make a bunch of minor changes between two copies in separate projects?,1513400741.0
pat_the_brat,https://simpleisbetterthancomplex.com/tutorial/2016/07/22/how-to-extend-django-user-model.html,1513342270.0
xrayfur,"Try a [relative import](https://www.python.org/dev/peps/pep-0328/#rationale-for-relative-imports):

    from .secret_settings import *

Or alternatively use the environment variables to decouple settings from files:

    from os import getenv
    SECRET_KEY = getenv('DJANGO_SECRET_KEY', 'n0t-s0-s3cret-def4ault')",1513329053.0
Foxmask2,"Hi,
You could use [django-environ](https://github.com/joke2k/django-environ).
You store your data in a `.env` file and in the settings.py, access them this way 

    import environ
    root = environ.Path(__file__) - 3 # three folder back (/a/b/c/ - 3 = /)
    environ.Env.read_env() # reading .env fil

    SECRET_KEY = env('SECRET_KEY')
",1513342257.0
StewPoll,"Try:

`from mysite.secret_settings import *`

Not sure why you'd do this and not use environment variables though",1513328844.0
TasticString,"I highly recommend using dotenv, or django-environ and pretty much putting all settings there.
",1513358445.0
Troyhy,"In project witch has multiple developers deploying changes to production I find it helpful to have all needed settings and keys in git repo. 

To hide stuff from public I find it helpful to use git-secret to encrypt .env file. This way you have all needed files and variables versioned for deploy.",1513344152.0
jobelenus,"I don't know which version (1 or 2) you're working with. But last I was using 1, there were good $stateProvider and $urlRouterProvider objects for dealing with URLs/slugs and transitions.",1513350056.0
vscodeandveganlattes,"Your first mistake (don't worry pal - I did the same thing) is *not* using a VirtualEnv.

If you don't have it already, download and install Python 3.

Open terminal.

Navigate to the folder with your project in it.

Run this:

    python3 -m venv your_venv_name

Activate your virtual environment:

    source your_venv_name/bin/activate

Check your pip to see what you have installed. This should be blank.

    pip freeze

Install Django

    pip install Django==1.11

Save your pip logs.

    pip freeze > requirements.txt

Begin coding!

Once you're finished, deactivate your virtualenv and move from there.

    deactivate",1513306340.0
ben174,"Would help to know what command you're running. 

But it's likely you're trying to install django 2.0 in a python 2 context. maybe try 

    pip install django==1.11",1513298892.0
leehinde,"If you're using the latest Django (likely) you'll want python3:

http://blog.manbolo.com/2013/02/04/how-to-install-python-3-and-pydev-on-osx (steps 1 and 2)

Then make sure you create and activate a virtualenv:
https://docs.python.org/3/library/venv.html#module-venv",1513299645.0
andrewingram,"If the abstraction stops working, don't use the abstraction.",1513267721.0
keepdigging,"Try to put logic into your models and not your view sets.
I’ve worked on large code based and I’ve never seen a case where using views is more  useful than viewsets for writing DRF endpoints.",1513274173.0
daredevil82,"Sure, no problem with that, since fixing a problem to fit a solution is not the way to go about things.",1513265135.0
NotSelfAware,"Yes, that is perfectly ok.",1513265638.0
dedsm_,can you explain that use case? I can't picture a case where a ViewSet won't be able to do something a View can,1513280027.0
225367619339231,I inject logic into views using mixins and over-writing functions where needed.,1513296766.0
furyfred,"Subclassing the allauth views to work together might be impossible. If it were up to me, I would write a new CBV view from scratch.",1513260787.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1513235250.0
synw_,"Good writing. Its true that notebooks are very convenient for prototyping.

Note: you don't have to use sql to load the Django data into a dataframe:

    import pandas as pd
    from django.contrib.auth.models import User

    users = User.objects.all()
    df = pd.DataFrame(list(users.values()))
    df.head()

Alternative: [django-pandas](https://github.com/chrisdev/django-pandas) has a ``read_frame`` function:

    from django_pandas.io import read_frame

    df = read_frame(users)
    df.head()

Btw I'm currently coding a [library](https://github.com/synw/dataswim) to manipulate data and generate charts in an easy way. There are [example notebooks](https://mybinder.org/v2/gh/synw/dataswim-notebooks/master) that can be run online: maybe it can illustrate a bit this article showing some notebooks in action. Two of them use Django user data and can be run on real user data.
To distribute the charts into dashboards using Django we are working on a module: [django-chartflo](https://github.com/synw/django-chartflo).

Where notebooks are the best is for data exploration and visualization prototyping.",1513245572.0
fdemmer,no need for a separate connection for raw sql: https://docs.djangoproject.com/en/2.0/topics/db/sql/,1513244668.0
jnns,"> 1054, Unknown column 'app_x_somemodel.user_profile_id' in 'field list'

You mean …, right?

> app_y_somemodel.user_profile_id

Please show us the code for the ModelAdmin that is throwing the error.",1513203175.0
TasticString,"Helpful advice: Since it only happens sometimes, I would re-evaluate the situation and take a step back. I have gone through similar issues and it can be frustrating to say the least.  It is probably something incredibly stupid, or and esoteric bug. my money is one the first one.

less helpful response:  mysql? why??


How many migrations do you have and how many times have you squashed them?",1513233359.0
mhurron,"> catch Exception as e:  
>    print(f""You done blew it: {e}"")

I've done this before, usually with a message similar to this. It's usually when something in the preceding try is failing in a very unexpected way and you don't know what exact error is actually being thrown and why. `Exception as e` is being used here for a 'gather all the information you can and log it.' It's bad for handling exceptions, decent for diagnostic logging.

> what if foo() has excellent, very detailed exception handling, and it raises any exceptions (let's call them Exceptions A, B, and C), so they will percolate up to the caller. In that case, isn't it redundant

No it's not redundant. foo() is raising those specific exceptions to allow you as the user of foo() to handle them correctly. Just because an exception was raised doesn't mean your app should shit the bed and just stop. It should handle that situation, and handling a `host not available` and `incorrect password` may not be the exact same function for instance.",1513180143.0
Vitrivius,"You should really prefer to use specific Exceptions. In this case you re-raise the exception, which makes it less bad.

However, you should be careful about putting code inside the except block that might itself throw an exception. Use proper logging instead of `print()` function. 

I've had an heisenbug where `print()` failed with certain unicode characters only in production. Can't exactly remember the details, but I solved it by using proper logging instead.",1513195291.0
Xef,"I've used `except Exception, e:` for `python-requests` when forming JSON. 

    try:
        r = requests.get(url)
        r.json()
    except Exception as e:
        print(e)

because `r.json()`  can throw a couple different errors, and I don't really give a shit what they are. All I need to know is that it didn't work.

However, I frequently create my own exceptions if I'm writing a library, so that when I use that library somewhere else I just have one type of exception to catch.

    from my_library import do_thing, MyException
    
    try:
        do_thing()
    except MyException as e:
        # do something else


and inside the library I'll probably do something like this:

    try:
        r = requests.get(url)
        r.json()
    except Exception as e:
        raise MyException(str(e)) # or raise MyException(""Couldn't form JSON from response."")",1513190909.0
yerfatma,"This is a subject interesting enough to me I wrote a [blog post about it long ago](http://thosecleverkids.com/thoughts/posts/exception-handling). tl;dr: don't do this unless you absolutely have to or if you are a piece of ancillary code that's not part of the main functionality. For example, if you build your own logger class for your project, it might make sense to never let the logger explode since it's not critical to the workflow, but if you generically trap exceptions in your main code, you will most likely wind up with a bug much harder to fix than it would be if it blew up once.",1513180609.0
dirn,"Catch the most specific exception you can. And be prepared to handle any exception you catch. If you have a reason to catch all exceptions and respond to them the same way, catch `Exception`. If you only want to handle specific exceptions, catch those and let everything else bubble up. 

The only hard rule to when catching `Exception` is bad is when you have code like

    except Exception:
        pass 

or

    with suppress(Exception):",1513214411.0
TasticString,"I don't have much to add to the conversation but please never do this:
    
        Try: something
        except: pass
",1513232570.0
daredevil82,"In the code for that field at https://github.com/madisona/django-google-maps/blob/master/django_google_maps/fields.py#L106, you can see it requires a format `lat,long` in number format.

",1513165388.0
Talked10101,Doesn't using Mongo with Django mean you lose out on lots of the benefits of Django? If you want to do this could do it with a much lighter weight framework like aiohttp. ,1513160563.0
TasticString,"I love the article because it has good info. but unless you have a very specific and well defined use case for mongo, don't use it with django. Use postgres and call it a day. for a secondary store if the circumstances fit, maybe use mongo[1]. Or just use postgres JSON and probably get better performance [2]

[1] https://medium.com/@vasjaforutube/django-mongodb-django-rest-framework-mongoengine-ee4eb5857b9a

[2] https://www.percona.com/live/e17/sessions/high-performance-json-postgresql-vs-mongodb

Disclaimer: I am currently dealing with a django/mongo application, I have a low opinion of mongo and most nosql.",1513231224.0
ysmoliakov,Are you author of this article?,1513133459.0
Foxmask2,"Hi,

I made dynamic loading of forms in the session wizard too, but for a given number of steps (5 in my case)

step 1 choose a service provider 
step 2 fill the form of that service
step 3 choose a service consumer
step 4 fill the form of that service
step 5 give a description

It seems that the SessionWizardView need to know the list of form that will be used, to reflect the number of step to process.

So in my case I know what I will display in step 1, 3 and 5, but not in 2 and 4. So I did this to cheat and make beleive to SessionWizardView that I use ""this"" 5 forms:

    UserServiceWizard.as_view([ProviderForm,
                                              DummyForm,
                                              ConsumerForm,
                                              DummyForm,
                                             ServicesDescriptionForm]),
 
But in fact in the UserServiceWizard, in the get_form method, I dynamically load the form for the step 2 or 4 in place of DummyForm

So I suppose that for your use case, you'll need to set 4 forms, for example:

    ShoppingWizard.as_view([PlanForm,
                                          WhatEverForm,
                                          DummyForm,
                                          DummyForm]),

And in the step2: 

* if paid is not checked, shortcut the process and trigger the ""done"" method (I've never tried that)
* if paid is check, load CheckoutFrom and ReceiptForm at the step 3 and 4

this is the basic idea 

Hope this could help
",1513154897.0
dikamilo,Doesn't matter if this will be one app or multiple apps or microservices or any other project model. Scrapping is expensive so this probably will live in some background process like a task in Celery or so. Don't see the point to have separate apps here. Just create API that will return data for the users and have possibilities to instrument scrapping.,1513141500.0
Talked10101,"One app. Use rabbitmq to launch scraping jobs in the background which then post back to Django, would probably be the simplest way to do this. Or have a seperate microservice which you post to and which posts results back to Django via rest. ",1513153365.0
A3gis,"When you say ""two separate apps"", do you mean like two ""[django apps](https://docs.djangoproject.com/en/2.0/ref/applications/)"" in the same ""django project""? Or do you mean two, separately deployed microservices that communicate via REST?

I'd advise against the microservice approach in this case. I'm running an extremely similar django website, and the two microservices you describe are waaay to micro to justify the development time it takes to split them up.

If I were you, I'd just use cron to scrape and load the database at the same time. That can just live in a manage.py command unless your scraper is too complicated.

",1513123625.0
dzecniv,"I'd make the scraping app independent, and include it either as a pip dependency or (what I do) a git submodule. I'd make the django app itself call it regularly (django-q, [huey](http://huey.readthedocs.io/en/latest),…) and save results into the db. The app could use its own db, or cache results (requests-cache,…), or just let app B deal with the db.
my ideas :)",1513174495.0
flipperdeflip,Something to consider: do you need to permanently save the intermediate result? Eg: the scraped data before it is turned into a post? Maybe it doesn't need a database but more like a queue where it lives until processed. Also consider how you're going to track/de-duplicate scraped content. Maybe you only need to save a URL or ID permanently for scraping and use temporary storage for the intermediate scrape data.,1513154400.0
gunthercult28,Does anyone have thoughts or opinions on django-dynamic-scraper? (I believe that's the name of the module),1513433067.0
never_safe_for_life,"One app, multiple apps, it doesn't matter. ",1513124154.0
crunching_karma,"You have full control over you project. So, basically, you can make it in a way so it knows the fields that must be tracked.

    FIELDS_TO_TRACK = ('list', 'of', 'your', 'fields')

This must be much faster than your variant but it's still makes 39 queries in worst case which is not good at all.

    def clean(self):
        errors = {}
        for field in FIELDS_TO_TRACK:
            current_val = getattr(self, field, None)
            if current_val is None:
                continue
            max_val = Update.objects.filter(trainer=self.trainer).aggregate(max_val=Max(field))['max_val']
            if max_val is not None and max_val  > current_val:
                errors[field] = _(""This value has previously been entered at a higher value. Values cannot decrease."")
        if errors:
            raise ValidationError(errors)
           
But you can grab all max values for every field you need to track in one query:

    def clean(self):
        errors = {}
        aggr_list= [Max(f) for f in FIELDS_TO_TRACK]
        data = Update.objects.filter(trainer=self.trainer).aggregate(*aggr_list)
        for field in FIELDS_TO_TRACK:
            current_val = getattr(self, field, None)
            if current_val is None:
                continue
            max_val = data.get('{}__max'.format(field))
            if max_val is not None and max_val  > current_val:
                errors[field] = _(""This value has previously been entered at a higher value. Values cannot decrease."")
         if errors:
             raise ValidationError(errors)
   

",1513121719.0
django_throwaway_1,"Using a throwaway to say that I hate seeing the Django Foundation constantly asking for donations, but simultaneously offering someone $1500 to travel to a conference (and it will probably be someone who will already have numerous ties to the Django community).",1513222141.0
furyfred,I wish I could go but I’m already scheduled for something that week. 😿,1513260879.0
CKreuzberger,"Both.
Your API will most likely not be able to handle all cases, especially on mobile.

",1513089006.0
ghostofgbt,"With stripe you can simply set up different plans that have a unique plan id. You'll want that plan id in your model for each user so you can control access based on the user's plan. For payments, stripe will handle charging the proper amount based on the plan id.

",1513083907.0
Niicodemus,"I would tend toward the form just validating that the CSV was provided and is properly formatted, but the view does the actual processing of the data and creating of the objects.",1513102681.0
flipperdeflip,Shouldn't this be a PR instead of a package?,1513069857.0
asdfwaevc,"If you're going to mock that method, you should also test to make sure that sub-function does what you expect (it's complicated enough for a test of its own).

But if you go the non-mocking route, then instead of a fixture, it's better to create the test data within the function. Tests should be readable, and fixtures are a bit opaque.

FactoryBoy is a great library for test-data generation, although vanilla model.objects.create() works just fine.",1513056488.0
strig,Digital Ocean is great. The network panel is super simple and they have excellent documentation. ,1513045635.0
fubarx,Heroku is pretty beginner friendly: http://herokuapp.com,1513053865.0
black_loop,"Linode is good. We have multiple VPS,all linode. They have very good documentation and support. Will recommend.",1513059937.0
TunaBoo,"So not to be mean, but if you cannot get the DNS to work - I am not sure you are ready to admin a linux box.  Are you confident you know how to keep your security patches installed? Can you firewall off ports you don't need? How about disable ssh via root account?

I would suggest some kind of a platform as a service. Heroku is a popular one. Google app engine is another route. There are some more.

In either case, you can upgrade down the road. I have a lot of admin experience so I started with GCE, but it makes no sense for you go crazy on it for a new project. Wait until your spend hits like $1000 a month and then switch to a better setup.

",1513048147.0
duppyconqueror81,Been using Webfaction for years on small to medium-big (60000 lines) Django projects and I ‘ve always been satisfied and haven’t had any reason to move elsewhere. ,1513058260.0
pat_the_brat,"Digital Ocean has great tutorials, but Linode and Vultr gives you more bang for your buck (more ram for the same price). Compare the plans, and see which one suits you better. Easiest OS to start with is Ubuntu, by far. Use 16.04 LTS. For help:

- https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04
- /r/linuxquestions
- https://help.ubuntu.com/lts/serverguide/index.html

Most popular VPS providers (all of which should be similar in terms of functionality):

- https://www.vultr.com
- https://www.linode.com
- https://www.digitalocean.com",1513077354.0
brtt3000,If you are on Amazon then going serverless cuts out a lot of Linux and software management stuff. It is still not trivial though if you have trouble with working through the docs for stuff.,1513061773.0
netscape101,check my subreddit /r/linux_mentor . I use kinsufi.com its really cheap and i use gandi.net for dns. The admin panel is really easy to use. You probably want to look into creating an A record.,1513076966.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1513042198.0
shadfc,"It is definitely a speedup in that it reduces the number of queries your application has to make to the db. Reducing the number of queries will (likely) make your application faster and it will (likely) reduce the load on your database, also making things faster. To pay for this (nothing is free), Django-mptt will add some columns and indexes to your tables and will run some additional logic on saves in order to keep those columns up to date. In most cases, self-referential models devolve into JOIN queries (harder for databases) or just a much larger number of simple queries (1 per level best case, N per level worst case). Many Django-mptt operations involving entire trees can be done in a single query. Most are simple queries but there's at least one that evaluates to an OR (which is harder to optimize).

For example, assume you have 10 categories, each with 5 sub-categories, each with a 3 sub-sub-categories. You want to display a navigation tree for only one of those categories (Programming). With a self-referential model, you'd have to do the following queries:
   - find category with title = 'Programming' (1x)
   - find the 5 sub-categories with parent = <programming> (1x)
   - find the 3 sub-sub-categories with parent = <sub-category> (5x)

Now what happens if you decide to have a 3rd level? Add the following:
   - find sub-sub-sub-categories with parent = <sub-sub-category> (15x)

You've now done 22 queries just for your tree nav, not to mention what else is on the page. You can probably reduce that number by retrieving all nodes for a particular tree level by doing ""where parent IN (<sub-category ids>)"" but then you also have to do more work in your app to keep the associations with the parent.

Because of the way Django-mptt stores information about each category tree and children, this can be done in 2 queries regardless of the depth of the tree and maintaining tree-order.
    - find category with title = 'Programming' (1x)
    - category.get_descendants() (1x)

If you have a self-referential model and you want to find the root of a leaf node, you'll have to traverse up the tree node by node, which will make N queries, where N is the depth of the node you started at. Django-mptt can do this in a single query, regardless of depth.

And if you want the entire tree based on a leaf node?  For a self-referential model, you'd probably have to traverse up to a root node, and then execute the queries above to get the tree. Django-mptt gives you a `get_family()` instance method to do this in a single query from any node. 
",1513026255.0
booooomba,"You won't need to install Geodjango. Once you have lat/long for both users you can calculate it via a simple formula. This is much easier than ""messing"" with a huge plugin like Geodjango. (I always tend to stay as minimal as possible, YMMV)

However for the last part of your question: You actually might need Geodjango. But I'm sure there are people with  more GD experience than me here who can give more details.",1512997164.0
pat_the_brat,"Based on test code I wrote a while back... (read: it was never fully developed, so I make no guarantee this is a *reasonable* way of doing this, or it will even work.)

    # Imports to add to your views.py
    from django.contrib.gis.measure import D
    from django.contrib.gis.db.models.functions import Distance

Query the users. [`annotate`](https://docs.djangoproject.com/en/2.0/topics/db/aggregation/#cheat-sheet) will add a `distance` field to `users[]`, and `filter()` on [`distance__lte()`](https://docs.djangoproject.com/en/2.0/ref/contrib/gis/geoquerysets/#std:fieldlookup-distance_lte) will limit it to users within a set radius (which would be `radius_variable` in my example). `ACTIVE_USER_COORDINATES_POINT_GOES_HERE` should also be a PointField, or GeometryField... you can use your active user's last_location (as long as you update it first).

    users = User.objects.annotate(
        distance=Distance('last_location', ACTIVE_USER_COORDINATES_POINT_GOES_HERE)).filter(
        last_location__distance_lte=(ACTIVE_USER_COORDINATES_POINT_GOES_HERE, D(km=radius_variable))
        )

Hope that's enough to get you started. Aside from `filter()` and `annotate()`, see also the docs for [`Distance()`](https://docs.djangoproject.com/en/2.0/ref/contrib/gis/functions/#django.contrib.gis.db.models.functions.Distance).",1513024147.0
cannibalsock,I'd make a user_profile model to start. Store last_location as a column in it. Then make a property `nearby_users` that returns a filter of users who are close by a given person. Call that property in your views and you should be good to go.,1512999977.0
cannibalsock,"You could do a user.lattiude -y  < user.lattitude < user.lattitude + y. You can make a box pretty easy, I'm not sure exactly how I'd make it a circle. Use the __gt and __lt methods. 

You could also just calculate the distance of every user from your active user and then filter. That's only one DB call + calculations. Or maybe grab users who are in approximate range and them trim that list down.",1513016933.0
,"Thanks for posting this, this is exactly what I want to do for 1 of my projects.  Right now I am going through my first tutorial.",1512999525.0
SnapDraco,"this sounds really useful, i'll check it out. Thanks!",1513002871.0
kaddourkardio,you are awesome !,1513011042.0
float,This sounds great. I see that you have code for resending activation email. Do you have some or any explanation on how to set that up or is that easier if I go through the code. Thank you.,1513018598.0
chrisshyi13,thanks for sharing!,1513042130.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/python] [An example of Django project with login, registration, password change, log out, and password reset functionality \[UPDATE 2.0\]](https://www.reddit.com/r/Python/comments/7j8kz4/an_example_of_django_project_with_login/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1513056796.0
pydry,One thing that always bugged me about previous django templates was a) setting the ordering of items in the registration page was a pain in the ass (sometimes it appeared randomly) and b) you couldn't dump username and just do email registration/login. Fix those and this would be golden.,1514047669.0
GoldFrame,Where are the tests?,1515461817.0
longdongjon,"Hey, figured I might as well share in the hopes that it might help someone. This was a group project awhile back, and I think it's a pretty good example of a small django project. It's not well documented, but if someone was wondering how to build a restful API with django, it might be a good reference. 

I'm free to answer any questions if people have them.

ninja edit: typo",1512956498.0
sultan33g,This is awesome thank you!,1513232864.0
booooomba,"This is what you wanna be looking at:

https://docs.djangoproject.com/en/2.0/topics/auth/default/",1512914471.0
lost_send_berries,"I wouldn't recommend using the built in groups feature as it's more for internal use (you could have say trial users, paying users, admins and moderators).

You need to create a Group model with a ManyToMany with Users model and then give the shareable items a ForeignKey of the group they are in. Then whenever a user loads something, do `.filter(group__users=user)` which means only get objects attached to a group containing this user.",1512918839.0
chris_conlan,I’ve known Django’s slugify processor to be pretty robust. Is there anything I should be made aware of?,1512868378.0
hwknd,"I don't know a lot of Django yet, started learning about 2 weeks ago (right before they updated to 2.0, yay outdated syntax in books, double yay for the great official docs) but I do have a working Django app running on localhost that pulls data from 5 databases, where those databases are connected to each other (email in database 1 is used to look up data for matching email in database 2)

Happy to post what I have if that would help you.",1512979955.0
rackmountrambo,"You need to convert these to related fields, not just dumb integer fields. ",1513002956.0
jabbrwocky,"I have projects that are AWS only, Heroku only, and a mix, depending on requirements. You're going to be trading off ease-of-use for price and more precise customization. If you plan on keeping simple, I would recommend staying in Heroku land -- it's worth a couple dollars a month to save devops time.

If you are managing any static files, try using S3 for your repository to get your toes wet. HTTPS in Heroku is ok, but I've found AWS to have more robust support. When you want to jump in completely to AWS (as /u/adamcharming mentions), the elastic beanstalk tutorial is solid.",1512830586.0
adamcharming,"From my experience using both platforms, it’s generally cheaper on AWS, but it really depends on your requirements and how much the flexible your development needs to be.
I don’t think there’s a migration tutorial but the normal elastic beanstalk tutorial should be a good start. After that it’s just migrating the db and configuring the elastic beanstalk leader to run cron jobs and have auto scaling ect...",1512829214.0
theli0nheart,"I run all of my clients' products on AWS. Here's our project template. There aren't many instructions included for setting up, but if you check out the ""conf"" directory, you should get an idea for what tools we use to deploy and run. My typical stack is nginx, gunicorn, S3 for static file storage, and CloudFront for static file serving. Still working out the best process manager.

https://github.com/lionheart/django-template

I'm working on a CloudFormation script to set this all up automatically, but for now, check out the below steps and you should get you started:

https://github.com/lionheart/django-template#server-provisioning

Cheers!",1512837450.0
TunaBoo,It is def worth leaving heroku once you get past hobby stage. You should be able to get a 75% bill reduction if you are careful.,1512832868.0
never_safe_for_life,"I switched my company over and it was so worth it. Before, our application would stop working randomly every 5 days or so. Nothing in the logs, no indication of what went wrong, but a simple reboot of our dynos would fix it. I imagine some bullshittery at the networking layer was causing our processes to hang indefinitely. Once I put us on AWS, it was flawless. 

Heroku also reserves the right to reboot your machines once a day. I was running sensitive financial software and a reboot at the wrong time could be disasterous.",1512835224.0
fubarx,"Check out AWS Elastic Beanstalk, AWS Lightsail, and an update tool like Ansible.

Elastic Beanstalk gets you easy scaling. Lightsail simplifies server set up, and Ansible (or similar systems like Chef) help automate pushing out changes from dev to staging or production. These are all things you get from Heroku but would likely have to replicate if moving to a less managed service like AWS.

Another suggestion. Take a look at Docker. It lets you recreate all the services you need into a 'container' (for example web server, db server, app server, cache, etc) that you can test on your dev machine. 

Once it's good and ready you can deploy the whole thing to AWS in one go and save having to manually set up the services again on EC2. From then on you can change the container on your dev machine and when ready just push the changes out to the server. Saves a lot of time and production hassle.

Edit: if all this seems too daunting there are services like https://bitnami.com/cloud out there that simplify things (for a price, of course).",1512837951.0
threeminutemonta,See if your project will work with [zappa](https://github.com/Miserlou/Zappa) as it does the leg work of hosting on AWS lambda and not traditional servers that you need to manage.,1512849428.0
nannooo,"Look into aws Codestar. It's a template for Django ons ec2 or beanstalk. You can hook up git to automatically deploy updates. Works great, have been using it myself for a month now.",1512853916.0
daxaxelrod,Hrmmm I'm unaware of a specific package but [this](https://stackoverflow.com/questions/26979733/how-to-include-an-external-javascript-file-conditionally) seems like a pretty straightforward way to do it using plain js. If you want to respond to server side events setup ajax calls and conditionally load on the result.,1512830475.0
Niicodemus,"You might look at [Google Tag manager](https://www.google.com/analytics/tag-manager/). I've not used it, but it's built for this very thing.",1512832812.0
duckseasonfire,"You could just put logic in your Template and use a context processor to push the variables into every template.

If chat_rep_available...
Insert js code

Then just add a little caching to the context processor so it isn’t hitting your database too hard.",1514832963.0
lovestruckluna,"S3 allows signed urls, where an authorization token with a customizable lifetime is securely included in the querystring. Django-storages defaults to having this on, so nobody can access the file without you actually presenting it (provided your bucket isn't publicly readable).

As far as uploading, there's a setting to disallow overwrites, but it's probably easier to just use subfolders per user or unique IDs.",1512782476.0
jmitchel3,"I think my [post on joincfe.com/blog](https://www.codingforentrepreneurs.com/blog/large-file-uploads-with-amazon-s3-django/) will help you on the upload portion. We have another post on their for the download portion. 

I agree with the other comment about signed urls. It’s all in that post and there’s a video at the bottom. 

Good luck!",1512807532.0
wjdp,"Should be next to no difference to any other VPS hosting, it's a computer in the cloud ",1512775173.0
confused_banda,"My experience with Heroku is limited as I only used it for one personal project. But I think what you want should be achievable by just Cnaming all your different sub domains to your main app.heroku.com domain.

With a Cname your Django app will see the correct sub domain for each request and you can handle the rest using Django-subdomains.",1512856595.0
booooomba,"Yes of course. Just add a new managent command.

Or just use a python script. Whatever you prefer.",1512760887.0
jedi_stannis,"Are these autocompletes usable in your own templates, or only on the admin page?",1512762023.0
supra621,"I like the fact that this is built into 2.0, but I'm having issues getting it to do some of the things that autocomplete-light does, like chaining foreign key lookups. I'm still quite new to Django, so maybe I'm missing something.",1520123162.0
booooomba,"Well you need to tell us what exactly the problem is. Meaning debug messages, console output, etc.

Also please be more specific than ""were tough to save on S3"". What exactly does that mean? What is the problem? Any error messages? etc...",1512747349.0
p_r_m_n_,Make sure your IAM user associated with keys has the proper permissions.,1512751394.0
a_simple_pie,Does anyone know the reasoning behind the is_authenticated() change to a property? Seems like a  very pointless change and easily kept backwards compatible.,1512802586.0
ysmoliakov,"The DRF supports Django 2.0 in tests: https://github.com/encode/django-rest-framework/blob/master/.travis.yml#L14 and they successfully passed.

So, I think that you can use it without problems.
",1512720239.0
bykecode,googleSearch! DRF,1512755738.0
genesem,"In my earlier projects I did something similar,
but better way is to handle subdomains with frontend nginx server to internal subfolders (just to note).

So the view code was:

    def index(req):
        sub, _ = req.META['HTTP_HOST'].split('.', 1)
        if sub != 'www':
          pass;

etc etc
  
p.s. another variant of getting subdoman in the view: `sub = req.META['HTTP_HOST'].partition('.')[0]`
",1512716752.0
flipperdeflip,"It would help if you keep your terminology straight: 'redirects'  means a HTTP redirect, so www.lazyfa.com doesn't redirect to the Heroku app but you created an CNAME and configured heroku to use/map the alternate name. Eg: the redirect is a HTTP feature, while A record, ALIAS and CNAME are DNS features (IP level)

Same with domain resolution, CNAME and A record resolution happens BEFORE https even comes into play. If you read the Technical explanation on https://support.dnsimple.com/articles/redirector-https/ you linked you see what I mean. DNSSimple doesn't have your HTTPS certs/keys so can't do anything HTTPS for you.

So you need DNSSimple for the DNS stuff only, to point the aphex and subdomains to Heroku (using ALIAS and CNAME's) and no URL redirects. 

Then configure Heroku to map them your app, and put appropriate HTTPS cert(s) on Heroku (a wildcard or per domain or whatever they support). 

Then in your django app check the HTTP HOST or `request.host`, or maybe use something like `django-hosts` or the site framework. And enable SECURE_SSL_REDIRECT et al.",1512747679.0
Nicksil,Look into [`Event.preventDefault`](https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault) method and the [`submit`](https://developer.mozilla.org/en-US/docs/Web/Events/submit) form element event. Mash those two concepts together and you might end up with something that works.,1512699770.0
richardcornish,https://docs.djangoproject.com/en/2.0/topics/class-based-views/generic-editing/#ajax-example,1512701997.0
fdemmer,probably issue in logging config; not really two requests.,1512688629.0
pat_the_brat,"It would be helpful if you mentioned your setup. Are you using the internal Django server, Apache, Nginx, Gunicorn, uwsgi, etc.

Also, do you see the multiple requests in Google Chrome's dev tools, in the network tab?",1512684516.0
core_dumpd,Do you perchance have your 404 redirect to your userapp? ,1512701419.0
HeathenForAllSeasons,Are you sure these aren't preflight requests?,1512712022.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1512679941.0
ysmoliakov,"Did you read the official documentation? 
Or this tutorial https://docs.djangoproject.com/en/2.0/intro/tutorial01/ ?",1512686077.0
brylie,You might like to check out these Django [channels examples](https://github.com/andrewgodwin/channels-examples).,1512667218.0
brylie,See also this [example of Test Driven Development with Django REST Framework](https://github.com/erdem/DRF-TDD-example).,1512667342.0
mockingburt,Put app_name='app' into your app.urls file and remove namespace,1512626705.0
googhalava,"If they have been applied you can manually remove references to all migrations from your DB and makemigrations again, which will create one new migration based on the current state of your models.",1512631869.0
patrys,Are you using some sort of version control system? How do you deploy to production? Can't you just restore any files that got deleted? Also how do does get deleted from production? Do people work there directly?,1512632677.0
haloweenek,"A) Don't deploy - to clients server - without the cash on account

B) The ownership(legally) is transferred when you receive the payment

C) Timebombs - although this one is dangerouss

edit: ""to clients server""",1512622784.0
booooomba,"First of all: Thanks for taking the time to explain this. I looked up Window functions when Django 2.0 was released, but it didn't really make much sense to me.

And even your article is still way over my head. :-)

Could you - or anyone else - ELI5 this?

I looked at the Postgres Docs and it says this:

> But unlike regular aggregate functions, use of a window function does not cause rows to become grouped into a single output row — the rows retain their separate identities

I have no idea what that even means.

Let's have a really simple example: One table with user_id and the persons body weight. 10 people in total. An aggregate function would be to calculate the average body weight, correct?

So it goes through all the 10 people in the table and averages their body weight.

Now how would ""the rows retain their separate identities"" in this example be an advantage? And what does that even mean? I just want the average? Why would these 10 rows become permanently grouped? There must be something I do not know about the internals of a RDBMS. Because to me it looks like the RDBMS just goes through every row, adds up the bodyweight of the person, then divides this sum by ""number_of_elements"" and that is it. But apparently there must be way more to it?

Sorry if this is a ridiculous question.",1512651849.0
adamchainz,Nice idea using the django commit logs for a demo data set!,1512757535.0
haloweenek,Thanx a lot !,1512623135.0
ccb621,"Go to production. No project is ever perfect, or completely finished.",1512615085.0
IamNotTheMama,"First rule of software development :
Minimal viable product ",1512622769.0
haloweenek,"Perfect on production ;)

THB - if it's working in 98%, release it and let people play.

Put hotjar on top of it and check out how do they interact with website.

And you're back to 80% :)",1512622953.0
haloweenek,"iCloud ?
Google Drive / Photos ?

Don't reinvent the wheel.",1512623302.0
ccb621,"Flickr still exists, and serves this purpose very well. A private Facebook group is also an option. Just remember that, if you embark upon this path, you are now tech support for your family.

I host my personal projects on [Digital Ocean](https://m.do.co/c/d00a5fc34bb9). My company, edX, uses AWS. You should really spend some time to estimate the cost of this project for the longterm. Sure, hosting is as low as $5, but how much will it cost to store *and transfer* the images each month?",1512615384.0
i_amwithnail,"I really like Cloudinary for handling image processing and hosting.  (Similar services are available elsewhere, I just happen to have used Cloudinary before.)  You can edit /resize/rescale and even crop the images as you upload. They have a nice API so you can go through your photos in the hundreds in a script.  

Digital Ocean are great, and I second the thoughts about AWS being potentially v expensive.  (I'm the same - a DO droplet runs 5-6 of my own pet project websites, work stuff runs on AWS.) 
",1512641761.0
tkc2016,"If you are looking for a self hosted option, try [Nextcloud](https://nextcloud.com/).
Also /r/NextCloud/
Look into some of the group folder and gallery plugins.
It's not Django, but I agree with the previous comments suggesting not to re-invent the wheel.

I have this running on a home LAMP server.  My storage requirements are quite high, and I haven't found a hosting company to provide that much for what I consider a reasonable price.",1512675295.0
kaddourkardio,"I personally use LaTeX to render PDF reports.
Why? Because I already had the templates so converting them to Django compatible templates was not too much works. 

Also I love the quality of LaTeX output.",1512634503.0
,[deleted],1512648184.0
redditor72,"\>paying for software

gross",1512644271.0
BaconGlock,"what i did/am doing is to install django manually and, using the cookiecutter-django as a reference, copy over only the code from that project i'm interested in, piece by piece, after i understand why it's there and vet if i want to keep it. this is giving me a deeper understanding of what's happening/what's installed and leaves me free to update dependancies as i chose and not wait for the cookiecutter-django project to get updated. currently i'm running django 2.0 and just got allauth installed and havent experienced any issues yet. yes, this approach is more of a time investment initially but i intend to save out my own copy once it's built up and use that as my ""new project boilerplate"" with everything all configured to my liking",1512622889.0
daneah,"He's the co-author of Two Scoops of Django 1.11 so I'd be surprised if this is the case. Are you encountering a particular issue using the latest cookiecutter version?

Edit: run-on sentence",1512620286.0
please_to_help,"What does Django-Cookiecutter provide that django-admin startproject doesn't provide?
",1512596532.0
asplodey,I upgraded the Django version to the latest 1.11 release and it seems to be fine.,1512598652.0
Etlam,"Why do you have this goal? I mean, is your site too slow or?",1513165078.0
athermop,"In addition to the other answers, the sky is the limit once you understand python's logging module and how to use it with Django.

It's weirdly complicated.  And by ""weirdly"" I mean, maybe I'm just dumb, but it took me a long time to grok how it all works together.",1512582262.0
volksman,django-debug-toolbar !!!,1512572086.0
kezabelle,"From your description it sounds like `django-devserver` is a reasonable approximation, though debug-toolbar, as mentioned by /u/volksman also offers many of the same metrics (in-page, rather than in-terminal)",1512572738.0
NoLemurs,"If you're running Python 3.4 or later check out `TestCase.subTest` ([docs here](https://docs.python.org/3/library/unittest.html#distinguishing-test-iterations-using-subtests)). It should do pretty much exactly what you want.

EDIT: rereading your post, I've noticed you also don't want to persist the data between subtests. `TestCase.subTest` itself won't do that. You need to explicitly start a transaction and roll it back within each subtest. Since Django `TestCase` tests are already wrapped in a transaction, I think you want to use [savepoints](https://docs.djangoproject.com/en/1.11/topics/db/transactions/#topics-db-transactions-savepoints).",1512568802.0
FloppingNuts,"Have a look at [how](https://simpleisbetterthancomplex.com/series/2017/09/18/a-complete-beginners-guide-to-django-part-3.html#adding-more-tests) Vitor does his testing. You can define a SetUp method that constructs a new data set just for testing, maybe it'll help you.",1512567748.0
jarshwah,"We’re using cloudinary for two sites. The first just has cloudinary serve images but not upload them. The python library is really good, but you need to look at default transformations like cropping and make sure they’re suitable. We were previously using thumbor and the move was a breath of fresh air. 

Our second property is also using cloudinary as our storage engine. Currently being developed but we had some issues getting it working correctly wth regard to image fields and storing the default dimensions. 

Would still recommend giving it a go if you need a thumb nailing service with optimisation and decent transformations. ",1512526553.0
Niicodemus,"I've used cloudinary in the past... I was quite happy with it, especially since I wasn't footing the bill. It saved a lot of time with developing uploading and serving of images. Making changes to the size of images on the site was super easy and just resulted in new images sizes getting cached. I was also able to set it up to copy-on-request from production to stage and dev environments so images were available everywhere and made testing easier, but also meant we weren't messing with live images.",1512528256.0
quantumbot,"Do you have a build process for your JS? Maybe grunt or webpack?

I would keep a STATIC_ROOT variable in your build configuration (per-environment) and replace that value at compile time using [something like this](https://webpack.js.org/plugins/define-plugin/)",1512523519.0
flipperdeflip,We have a variable like `window.__app_config = {...}` with an object with a whole bunch of configuration stuff like this and some helper in javascript to access it (with default values etc).,1512551433.0
rsgm123,"Your first issue is downloading your prod db. That has private shit on it and you really shouldn't be transferring it around to places. Use a db browser if you need to view data. For testing, you should setup some ""fixtures"", which are basically json on files containing objects that can easily be inserted into the database. Fill fixtures with any fake data you need to run your tests.

For testing if your updates break anything, you can setup another identical environment(db, servers, any other things you need), just for testing. Load the db with fake data again so if something goes wrong, there is no risk with people having access to the db. It also helps to make the test environment easy to setup and disposable. This way, you can start over if you mess the environment up too much.
",1512519332.0
ccb621,"Your staging environment should mirror production infrastructure-wise—same droplet size, OS versions, etc. The best way to do this is to use a tool such as Ansible or Salt to provision your servers in a repeatable fashion. Docker is also worth checking out. 

Every environment should be isolated. Stage should not be using the production DB. Use fixtures, management commands, etc. to create production-like demo data in your development and stage environments.

Automate your acceptance/e2e tests in the development and staging environments so that you can confidently push to production. 

Why not feature flags? Waffle makes them easy to implement!",1512525908.0
TBNL,"There are two things that need improvement (both related to automation/repeatability):
1. Deployment process
1. Ability to test

For rugged deployments you might look into Capistrano or ansistrano (Capistrano when using ansible). Or containers.

For local testing: unit tests. If for tests need a real DB instead of a in-memory sqlite, docker-compose is your friend.

After addressing those topics, staging setup will be trivial: same as prod. but with different config.",1512546112.0
haloweenek,"I run my ansible deployment script on a separate host and check stuff out on a fixturized db. 
",1512549999.0
ramse,"You can do whatever you like, you just have to know the names of the fields within the form. A coupe ways to figure that out is to hope its in documentation, or find the form definition within code, or when using `form.as_p` each field's id will be `id_<field name>` and just write that down and use the fields name.

https://github.com/pennersr/django-allauth/blob/master/allauth/account/forms.py#L89",1512502263.0
pterencephalon,I use django-markdown and have a little template tag I use in different projects that will apply markdown formatting to the text. ,1512519807.0
gosh_djang_it,whichever version pip installs :O,1512510379.0
Investisseur,"Production use latest LTS

If you're a bleeding edge hipster hacker install the latest dev branch version ",1512529733.0
spookylukey,"Typically in Django you can have lots of ""apps"" that you put together to build your websites, and these might have different parts of the ""URL space"" (e.g. /admin/ for the admin app, /wiki/ for a wiki app etc.)

However, by their nature, CMSs often aim to provide something a bit closer to a ""WordPress""-like solution, where the CMS has everything you need to make a website, and ""out of the box"" you have a website running. You also usually want to be able to manage an unlimited hierarchy of database defined URLs with them, rather than a fixed set of URLs that other apps might provide.

Because of this,  Django-based CMSs often want to ""take over"" your Django project more than other Django apps e.g. they often are installed at the root URL /, and manage every URL that doesn't match other apps. They still have Django as a dependency, any you can usually still put other Django-based apps into them. However, they usually become frameworks in their own right, and so might have things like their own plugin system which works differently from the way that normal Django works.

They also often come with installation scripts that set up the entire project (so that you have an out-of-the-box CMS), and they do so according to their own conventions (some of which are based on older Django versions).",1512543860.0
Nicksil,"They're built on top of Django; Django would be considered a dependency.

Some of the CMSs, if not all, certainly promote a structure of their own from their 'getting started' documentation and the like, but by no means is your project's operation contingent upon that structure.",1512496348.0
FloppingNuts,"Yikes, borderline unintelligible english",1512509539.0
,TLDR? ,1512492595.0
kuemmi,"When you access form fields in the template, you'll get an instance of the BoundField class which is responsible for rendering the field to HTML. BoundField has a field attribute which should contain your custom CharField instance (you should give that its own name, by the way).

So try: {{ field.field.icon }}",1512489521.0
joejaz,What’s the output of “manage.py migrate —list” or “manage.py showmigrations”.  Maybe a migration for auth got accidentally faked?,1512457732.0
haloweenek,"Table is not in the database.

Do you have multiple settings there ?
Try good old syncdb ?
",1512453361.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1512446309.0
Investisseur,"http://lmgtfy.com/?q=Django+model+form+error+message

Sorry /r/django in salty tonight and lots of these questions are googlable",1512437675.0
fdemmer,"yes, that's what the test client is for.",1512436352.0
hip_modernism,"Have you checked out django-webtest?

https://pypi.python.org/pypi/django-webtest

It can't do ajax or javascript, so I use selenium for those situations, and webtest for everything else. It is far far faster than selenium, with very little overhead.",1512427473.0
Investisseur,Your initial thoughts are correct. Keep chaining the request or use selenium ,1512437995.0
aeneva,"Import Axios and make calls to the back-end like you would any other API. 

Is this not normally how it's done? I'm new to React and that's how I've been doing it.",1512424368.0
SurpriseHanging,"Having just learned the same thing over the summer, honestly it's just easier to use a tutorial for django-rest-framework without worrying about the react part. And then look for a good react tutorial that talks about redux and maybe saga if you need it.",1512419926.0
Investisseur,What the hell does Ejected mean??? ,1512437411.0
Vitrivius,"It should be quite possible to create a react frontend using create-react-app without having to eject. The typical api you would create with Django rest framework is very conventional (in a good way), and can be used with any javascript front-end framework.

The thing with react is that it doesn't provide _one true way_ to communicate with a api backend. It depends on how you manage state in your react app. For example, you can use redux and redux-thunk, and the fetch api to do ajax calls to the backend api.

So your question is a bit broad and hard to give specific answers to. Maybe you can tell us more about what you tried, and what difficulties you ran into.",1512417050.0
mumbaimaari,django rest framework has a javascript client. you can find the documention here http://www.django-rest-framework.org/topics/api-clients/#javascript-client-library. you can use this to interact with your react app,1512452261.0
FishyOS,"I have a personal project that uses both, and I found my favorite way to combine them is to keep them separate, each with its own server.

I used redux and redux-thunk because I wanted to learn them, but you could just as easily use any data layer you'd like on the front end to connect the two.

This allows me to develop them separately, and getting react up was as simple as using create-react-app.",1512420828.0
masterco,"What you can do is just make the API with DRF and deploy it to a server in Amazon, Heroku or whatever.

Then you can just make your React app with CRA and call the API from it. When you are done you can upload the built bundle to GitHub pages or Amazon S3.

",1512492527.0
silent1mezzo,No tutorial but we use Redux and Sagas to pull in the information.,1512435533.0
_drFaust,"Check out https://thinkster.io/tutorials/fullstack
They've got a really solid plug and play backend+front end series with a bunch of languages, including django drf and react.",1512437783.0
lovestruckluna,Use your method. Just make sure there's some logic coupling the form to that answer (eg. A hidden field) and to ensure invalid responses don't show N instances of an invalid response.,1512414690.0
AutoModerator,"Your post appears to be a link to a Stack Overflow question you'd like answered. Unfortunately, we've had a flood of these lately, so now they are automatically removed. Please consider the /r/djangolearning subreddit, [the Django documentation](https://docs.djangoproject.com/), and the #django IRC channel on Freenode as options for getting quick help with a question.

*I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/django) if you have any questions or concerns.*",1512409582.0
CKreuzberger,"Actually, the point of an upgrade (Major Version) is that they are allowed to break the API. This is true for almost every software product you will find.

Django is really good at maintaining API stability and providing ChangeLogs of breaking changes / backwards incompatible changes:
https://docs.djangoproject.com/en/2.0/releases/2.0/#backwards-incompatible-2-0

",1512388255.0
oliw,"Not been using Django long then? Couple of tips:

 - Always read the release notes. Seriously, none of this would have been a surprise.
 - Never, ever, ever blindly upgrade a production system (any updates, not just Django) without testing.
 - Lock onto a long-term-support release of Django if you can't afford to keep pace with the development releases.",1512390112.0
daredevil82,"Answer is yes.  But a large amount of those breaking changes are listed at least two releases beforehand as deprecations.  With backwards-incompatible changes, the documentation is really good on that.  

So if you ignore deprecation warnings and the release notes before upgrading, you're going to get bit bad.  Next time, do a little reading and evaluation first.",1512390297.0
TBNL,"So... You bump a major version and are surprised it doesn't work straight away? /s

As mentioned, the changelog of Django is very descriptive.",1512391105.0
jcampbelly,"Yes, as with all software under active development. But IMO, they do a pretty good job of helping you along.

- They do a good job with release notes and migration instructions.
- They throw deprecation warnings so you can see if you're using a feature or setting on the chopping block for a future release.
- They maintain LTS releases with security patches between them so you can take the necessary time to upgrade.
- Every big release includes migration instructions. That is to say that there is always a clear path from one release to the next. Don't just go bumping 2 or more releases at once and you'll find good instructions on how to upgrade one version at a time.",1512395186.0
flipperdeflip,"There is a lot of stuff every API needs/wants so DRF can do a lot of the repetitive and common work for you, so you need to create and maintain less boilerplate and infrastructure. 

Have a scroll through it documentation and you'll see a lot of stuff you don't really want to re-create yourself. Like serializers/deserializers/validation stuff, class-based views, authentication, pagination etc etc.

If you are new and have a small project you might roll your own api for now just to see what is involved. There is a JSONResponse and a JSONView example view in the Django docs somewhere; see how that goes.",1512381104.0
Nicksil,"A few ways off the top of my head:

- [Manually render](https://docs.djangoproject.com/en/stable/topics/forms/#rendering-fields-manually) the form inside the template, using [`if` blocks](https://docs.djangoproject.com/en/stable/ref/templates/builtins/#if) to conditionally render each field.
- Dynamically build/modify your form class during initialization. For instance, you can pass in additional context in your `FormView` subclass using the [`get_form_kwargs`](https://docs.djangoproject.com/en/stable/ref/class-based-views/mixins-editing/#django.views.generic.edit.FormMixin.get_form_kwargs) or [`get_initial`](https://docs.djangoproject.com/en/stable/ref/class-based-views/mixins-editing/#django.views.generic.edit.FormMixin.get_initial) methods.
- Build 2 forms; one for editors, the other for writers. I'd avoid going this route unless you've exhausted all other options.

Side note: You may already be doing this, but be sure you're checking permissions (or, if you're not using permissions, specifically check if user is part of a group allowed to execute a specific action), before you commit the form data to your database. Right now it looks like the only 'guard' you're putting up against users who are not editors is obscuring a form field. A user is able to transmit any data inside the request if they really wanted to, so checking input against the user should be taking place somewhere. ",1512367093.0
,"Add all of them to 'fields' if model form or just write all of them on a standard form then in __init__ do 

`if not request.user.in Editors`:

      `del self.fields['approved']`
",1512399273.0
Nicksil,"You're not giving a whole lot for us to go on.

It could be that your routes aren't setup correctly, allowing the user to completely bypass the view where you're executing this database check.

If the user already has a session set (a session was set when they signed-up, before receiving their verification email), and you're not taking that in to consideration, that could be an issue.

Given what little I've got to go on, the problem seems likely solved with a simple middleware you could write then include within the middleware declaration inside your project's settings. You'd want to be sure to include it after any session/authentication/security middleware currently active.",1512367797.0
ramse,Why not do the check in a [user_logged_in signal](https://docs.djangoproject.com/en/dev/ref/contrib/auth/#module-django.contrib.auth.signals) instead of a view?,1512347594.0
Investisseur,The Django AllAuth URL has its own view associated to it. You're view is completely different and is using the standard Django auth. To achieve what you desire please move to creating a middleware ,1512438090.0
daredevil82,"`MIDDLEWARE_CLASSES` needs to be `MIDDLEWARE`

https://docs.djangoproject.com/en/2.0/topics/http/middleware/#activating-middleware

`MIDDLEWARE_CLASSES` was deprecated, as per this in the docs https://docs.djangoproject.com/en/1.11/ref/settings/#middleware-classes

>Deprecated since version 1.10:
Old-style middleware that uses settings.MIDDLEWARE_CLASSES are deprecated. Adapt old, custom middleware and use the MIDDLEWARE setting.

which is confirmed by the very end of the release notes page at https://docs.djangoproject.com/en/2.0/releases/2.0/

>Support for old-style middleware using settings.MIDDLEWARE_CLASSES is removed.",1512307273.0
lamby,"> is back

Bugs/computers are not magical creatures or personalities...",1512462765.0
booooomba,"Yes GeoDjango.

But if you have your users' lat/long coordinates you can just calculate it mathematically. No need for GeoDjango then.",1512248884.0
lamby,"I wrote about this in 2009 here: https://chris-lamb.co.uk/posts/geodjango-and-uk-postcode-database

It's a little dated perhaps, but the concepts are still sound.",1512251216.0
jeffbaier,"If you are simply calculating distance between two lat/long coordinates then its just some simple math. 

Geodjango and postgis become super useful when you start doing more complicated things. Like spatial queries (select closest user to X) or bounding queries (select all users inside New York), etc, etc.",1512261298.0
pat_the_brat,Have you read the [Django Deployment Checklist?](https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/),1512244189.0
booooomba,"I'm currently learning JS and Vue.js especially and I wonder myself something similar. How much of the templating work am I gonna leave to Django and how much am I gonna be doing in Vue.js.

I'm not quite sure what you're trying to do. What would be a use case? Can you give an example?

I'd be happy to discuss/learn.",1512239463.0
pat_the_brat,"You can offer bounties on sites like:

- https://hackerone.com/bug-bounty-programs
- https://www.bugcrowd.com/bug-bounty-list/

You can hire hackers on /r/forhire though I don't know if any of them are good, or willing to work for bounty. Ask them for their deliverables, and they should offer a report of what they test, even if they don't find anything. Methodology, tools, etc.

You can do a lot yourself, as well. The [OWASP Testing Guide](https://www.owasp.org/index.php/OWASP_Testing_Guide_v4_Table_of_Contents) is a good starting point.",1512244035.0
synw_,"Historical! Congrats to the Django team. Its a long way since the good old 0.96 days, and Django is still Django. Projects like this that are getting better and better with the time and not loosing their soul are not that common: Django like Postgresql are examples for us of high quality code and project management.

I tried the 2.0 release: no noticeable change in a blank instance out of the admin responsiveness, which is nice. It was another story when I tried to update my existing stack. 

First problem was on foreign keys in models: you now have to set the `on_delete` parameter that was optional before. I updated a few models and removed a couple of external apps, and it was ok for this one. Where it became really problematic was the change of the `reverse` function's (for urls) import path that many modules use. I had to remove well known modules, like django-ckeditor. I guess we will have to wait for compatible versions for quite a lot of modules.
I stopped when it started to complain about my urls format: I knew enough for now: it is not upgradeable for now. 

No big deal but there will be a cycle of required upgrades for many modules. I guess that this release will contribute to the adoption of python 3 by the web developers.",1512245164.0
misingnoglic,The new urls look amazing!! Congrats to the team :),1512248971.0
Airith,"What a milestone :)

Congrats to the django team. I wish I hadn't just started a project two days ago haha. 

Anyone know when/if they're planning on adding channels?",1512249227.0
DullBlade0,"I'm writing a project on 1.11, it hasn't reached production just yet.

Would it be worth my time to upgrade?",1512249649.0
,"Congratulations on 2.0 !

Great timing as well. I decided the day after the 2.0 release to try Django. I'm not new to development/framework, but I AM new to Python and Django. Wish me luck :-P

Had some fun installing it already LOL. My server had Python 2.7 still. But it has 3.6 now as well ( keywords: pyenv local , venv ). And it works :-)",1512519400.0
iKenshu,"So if I have the urls like this

    url(
        regex='^articles/(?P<year>[0-9]{4})/$', 
        view=views.year_archive
    ),

How can I change that to new format with path?

Also, ELI5: What are the new window expressions?",1512233884.0
strongdoctor,">What is javascript used for in django?  
  
Nothing.  
  
Javascript is used in the front-end for asynchronous requests and the like.",1512227751.0
kylemh,"It's good that you've learned so much about Python. Before learning how to use Django as either an API or an MVC framework, I highly recommend learning about the web first. Dive into freecodecamp.com and come back to Django after you create a few websites. Django's Templates and JavaScript in general will be clearer to you then.",1512229884.0
vinaychandra,"Simply put, you cannot do everything in django for Web development. Django runs on a server and sends the Web pages to people who visit that website. Javascript is something you call a client side language which runs on web browsers like chrome and Firefox and provides interactivity with the bland html pages that you generate with django.",1512227806.0
Mrpiggy97,javascript is front end django is backend they can work together but that would be it,1513458429.0
pat_the_brat,"First is a lot easier in terms of DNS (unless you use wildcards), as well as webserver setup. Second is better if you want easily shareable URLs.

For most applications, I'd go with #1. Basically, if you have to ask, #1 it is.

Edit: I think #1 is also better for SEO, though I may be wrong.",1512215658.0
danielsamuels,"1, but I would advise not mounting directly on the root as you may end up not being able to add a new page at /about/ if that's someone's username for example.",1512226643.0
lamby,"I'd definitely start with the first as it's far *far* less complex in Django. You'd also need a wildcard SSL certificate which, for example, is not available on letsencrypt :)",1512227385.0
znpy,I'd say www.site.com/u/userid ;),1512398277.0
booooomba,Clearly #1 !!,1512215509.0
booooomba,Absolutely. This is basic CRUD. Pretty much every framework is able to handle this. Including Django of course.,1512170230.0
never_safe_for_life,"Sure. That said, you probably want to use a CMS. If you use Django you'll have to write a lot of wiring that's already taken care of for you with a CMS. ",1512191067.0
MattBD,"My dad and I have been talking about building a site for listing houses independently and I've had Django in mind for that.

I figured that there would be a lot of photos and my plan was to use S3 to store those images.",1512218331.0
Nicksil,"Is the complete data set sent to the client on initial load? If you're just filtering existing data, you can likely get away with doing it client-side as opposed to making a another request to the backend for data which you already have.

> The issue with using ajax is that it goes against the purpose of using ajax in the first place, which is for asynchronous actions. The page will be completely refreshed when the user clicks any of the buttons.

I don't understand this. Why would you refresh the entire page if you've just sent/received an AJAX request? Just populate an existing container with the data you receive from the request.",1512169919.0
booooomba,Why will the page be completely refreshed? You mean it's getting new data each time the filter is set? ,1512170418.0
pat_the_brat,"I'd send the whole set of questions as JSON in a `<script></script>` tag, then use JavaScript's [`Array.filter()` method](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter) on the checkboxes' `click()` handler.

Unless your data set is really big, in that case, AJAX is the better option. You don't want to have a 10 MB page load... particularly on mobile.",1512203534.0
crunching_karma,"If you don't need ajax: Put filters in a form, implement filter form on backend, submit form on forms change event. Done.

If you need ajax: Put filters in a form, implement filter form and update view on backend. Fire ajax on form change (and once on page load if you want more DRY solution) and replace part of html with one received from backend. Or work with json or whatever you prefer. It doesn't really matter in the end.",1512219049.0
pat_the_brat,"http://www.uncensoredhosting.com/best-iceland-hosting/

Any **VPS** will allow you to install Python and Django.",1512203093.0
sbk__,"Out of curiosity, why in Iceland ?",1512179388.0
will_r3ddit_4_food,Pythonanywhere is good but it's in London. I'm in the USA and I have no problems.,1512181683.0
Bt2bn,Have you ran makemigrations and migrate? Wonder if the model is actually in the table yet. ,1512164551.0
summersonnn,"Since it has a GenericRelation, I think the only way is to use GenericTabularInline or GenericStackedInline in admin.py.

It's not exactly what I want, but it's close to it.

    class RatingInline(GenericTabularInline):
       model = Rating


    class PhotoAdmin(admin.ModelAdmin):
        list_display = ['id', 'contest', 'ownername']
        list_display_links = ['id']
        list_filter = ['contest']
        search_fields = ['ownername']
        inlines = [
            RatingInline,
        ]

    class Meta:
        model = Photo
",1512297807.0
Bt2bn,Am I wrong in thinking that the Django log dict setup for deployment covers all of these bases?,1512162112.0
Airith,"What do you guys use logging for? Curious, this is something I know I should be using but haven't found a use for.",1512165277.0
JimBoonie69,"Wow this is hilarious actually. Lincoln loop did some contract work for us building a django app and the end product they gave us had NO logging what so ever. It was quite the pain!
",1512179265.0
lamby,"Anyone else dislike the monolithic `LOGGING` dict? Makes it really hard to see differences between prod/stage/whatever. Not sure what the best solution would be, mind you, especially as this setting does mirror  — for example — `CACHES` and `DATABASES`.",1512227541.0
krumg,"Channels is a great tool for specific tasks (real-time communication, various async features, etc). But it takes more time to build compared to standard ways due to more complicated debugging process. Also regular xhr approach allows integrating mobile apps easily while in case of ws you'll have to do way more work.

And generally ws based apps require more complex js and as a result you spend more time. Time > all.",1512136037.0
athermop,"Websockets *might* end up being the future, but I don't think it's likely.  The response/request cycle maps too well to too many paradigms.

HTTP requests and accoutrements also come with stuff for ""free"" that you have to reimplement on your websocket-based transport.  For example well-defined (haha, I wish, but they are there) HTTP status codes, caching mechanisms, authentication mechanisms, the list goes on...

Additionally, there is a lot of tooling on the backend and frontend built around response/request and AJAX-y stuff.  You will end up having to re-implement a lot of stuff yourself.  Which leads me to my next point:

> I want to be using the ""simplest"" (meaning straight to the point, as little tooling, as little other libraries and plugins as possible) yet most up-to-date way possible.

This is so common with new programmers.  And there's definitely a thing where people just try to glue together too many libraries and end up with a mess.  But...you are likely not experienced enough yet to know one way or the other, and you'll save a ton of time and effort by re-using other people's work.

You might think ""but, I'm trying to learn and I won't if others are doing the work for me!"".  Believe me, there are a ton of things you need to learn first and a lot of the stuff libraries do for you is just mundane boring stuff.",1512151593.0
newusernamenoflair,"That’s what I’m doing for the application I’m building right now. I’m just sending JSON over the the socket and using template elements and some simple JS functions  to replace DOM. 

I haven’t looked into the Rest framework or any front end Vue like frameworks, but this approach feels natural enough to me.  However my site isn’t an SPA and isn’t trying to be, which might be a factor for you. ",1512212602.0
cbartos1021,"I'm a web dev myself. I couldn't possibly think of using websockets for EVERYTHING. That said, websockets are mainly used where I work, but for Push Notifications. For example, you are sitting idle on page on the internet (let's say a chatroom), a push notification comes through and updates my screen automatically. With websockets the server pushes notifications to the client. (Which I believe is the strongest case for using Websockets) 

On the flip side, AJAX is used with client interaction. So, there is a click of the mouse on the client side, AJAX pushes notifications from the client to the server. 

I'm not saying you HAVE to do it this way since Websockets are bi-directional, but it's the easiest way for us to do it.

Tl;dr ....
You potentially COULD use Websockets for everything, but it's more of a pain than just using AJAX unless you need Server to Client interaction as well.",1512224622.0
mbrochh,Better look into graphene-django and Apollo - the days of DRF are numbered.,1512145238.0
ccb621,"Honestly, why would you? If you want a backend developer, hire for general principles. Django, and other frameworks, can be learned on the job by a competent developer. ",1512139229.0
tagnydaggart,Do you mean when interviewing candidates or ???,1512111542.0
