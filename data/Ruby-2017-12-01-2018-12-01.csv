author,comment,timestamp
BadMinotaur,"I didn‚Äôt get to see this talk in person but it was a pleasure meeting you! I‚Äôll be sure to watch this soon, it looks like an interesting topic. 

Also it‚Äôll give me some context to all those lemur stickers I have. ",1543650251.0
fp0047,I love this. Storytelling is great. Is there more?,1543674406.0
coldnebo,"nice post showing how all the parts come together. also, good catch on the c extensions. ",1543607536.0
mariozig,Would you ever attempt to try this with a full app + framework?,1543632758.0
s3gFault,"Looks really cool. Excited to start playing around with it.

I'm the author of [PgParty](https://github.com/rkrage/pg_party). Wondering if there's an opportunity for some collaboration here. I've wanted to implement automatic partition creation for quite some time.",1543602686.0
scytherswings,"Some background: 

I have a \~2TB database with several partitioned tables running in Amazon RDS that I need to maintain long term. RDS does not support the most common way of managing partitioned tables via the excellent [https://github.com/pgpartman/pg\_partman/issues/152](https://github.com/pgpartman/pg_partman/issues/152) . Additionally cron tasks are less than ideal since they depend on a host directly and are harder to manage externally. PgDice is built on top of the extremely useful [https://github.com/ankane/pgslice](https://github.com/ankane/pgslice) gem which provides much of the heavy lifting. The benefit of this gem is that you can call PgDice methods from Ruby directly and thus handle exceptions and alerting with existing tooling such as New Relic etc. without adding another mechanism for alerting and handling failures for cron tasks etc.",1543593594.0
toskies,"As a Rubyist, this is kind of cool, but my excitement is tempered by the slowness of the Ruby interpreter.",1543540399.0
WinterMolder,"Have you tried

```
testXML.xpath(""//parameter[@name='drug-name-ddl']"").text
```",1543515896.0
shayhtfc," `testXML.xpath(""//parameter[@name='drug-name-ddl']"")` should get you the element

`testXML.xpath(""//parameter[@name='drug-name-ddl']"").text` should get you the text `'MORPHINE PH'`",1543516492.0
jrochkind,"Your sample XML indeed does not have any namespaces. That second hash param to `xpath` is for [XML namespaces](https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Namespaces)  -- which your document doesn't have, so it's not what you want. ",1543601972.0
Jboogy,Finally!!!,1543517635.0
midasgoldentouch,Bruh üòçüòçüòçüòçüòç,1543515658.0
equivalent8,O\_O  best Christmas ever !,1543520445.0
honeyryderchuck,"About time! If only one could now get a background job lib which triggers lambda functions over SNS, we could make this baby fly",1543518322.0
olivierlacan,"Relevant caveat/workaround thread from Alex Wood (who worked on this) regarding gems with native extensions: [https://twitter.com/alexwwood/status/1068421791918448640](https://twitter.com/alexwwood/status/1068421791918448640)

Basically: 

```
docker run -v `pwd`:`pwd` -w `pwd` -i -t lambci/lambda:build-ruby2.5 bundle install --deployment
```

More here: https://www.rookout.com/3_min_hack_for_building_local_native_extensions/
",1543567506.0
dissonance,"I have a PR open for an example using serverless framework

https://github.com/serverless/examples/pull/336

Makes deploying to AWS ez-pz",1543570066.0
menge101,"While thats awesome, the fact that we can now bring our own language and arbitrary runtimes is way more meaningful, imo.",1543535586.0
FishNuggets,Nicee ,1543548669.0
StevenTTuD,Awesome!!,1543569764.0
ylluminate,Interesting to see [Crystal also possible](https://www.reddit.com/r/crystal_programming/comments/a1sx95/hello_from_crystal_in_aws_lambda/).,1543595983.0
equivalent8,"Just finished  implementing Sinatra application on AWL Lambda  [https://github.com/aws-samples/serverless-sinatra-sample](https://github.com/aws-samples/serverless-sinatra-sample)  

&#x200B;

this is super cool. Sinatra running on Lamda :) 

&#x200B;

\*\*note:\*\* reminder that Sinatra running on Lamda  (as well as Expres.js running on Lambda) is more like ""try it out"" feature of AWS Lamda not really what Lamda was designed for . Yet pretty neat that it works so easily :) ",1543993771.0
sarkonovich,"Is there any way to put gems in a lambda layer to allow for inline editing?
",1544034771.0
stanislavb,Nice one. Thanks for sharing your experience! Definitely helpful.,1543553865.0
HomemadeBananas,I‚Äôd recommend you just keep your front end and backend entirely separate.,1543503364.0
aemadrid,I've learned to really dislike/distrust Sprockets. I use Vue so I use the cli to generate all my frontend and let the ruby/nginx server handle the already generated assets.,1543508383.0
katafrakt,"There is a trend to avoid Sprockets in Rails too, for what it's worth. It just does not pair well with complex modern solutions such as Angular or Vue.
There is a Webpacker gem in Rails that is a wrapper for Webpack and its idiotic config files no one can write. Outside of Rails you can try to use webpacker_cli, but it's pretty new: https://github.com/danielpclark/webpacker-cli",1543603202.0
SuccessfulBread3,"If you're super unkeen on rails then I'd suggest Sinatra, but as others have said, keep back end and front end apart.

&#x200B;

If you want to use databases and junk, you can either write the SQL yourself in the controllers, or you can import just the 'active record' gem into Sinatra. (Which I recommend as it comes with a lot of freebies such as assisting in avoiding SQL injection.)",1543580390.0
firstpantsthenshoes,Nice work! What was your use case? Or did you simply do it for fun?,1543492127.0
scytherswings,Nice work! I'll have to try this out. I've been looking for some Ruby-friendly NLP for a project I started a long time ago to do semi-sentiment analysis on commit messages.,1543536729.0
nordrasir,"Looks great - i'm about to put something live with this right now, will let you know how it goes!",1544258336.0
waffle_ss,"If you're a heavy view user I suppose using this gem makes sense but I've always just used plain SQL migrations:

    class AddFooView < ActiveRecord::Migration[5.2]
      def up
        execute <<-SQL
          CREATE OR REPLACE VIEW foo AS
            SELECT ...
        SQL
      end
    
      def down
        execute <<-SQL
          DROP VIEW IF EXISTS foo;
        SQL
      end
    end

The advantage the gem brings seems to be if you update a view's definition, when writing a new migration you don't have to copy the existing view definition into the ""down"" action of the new migration. My views don't have much churn so it's not really a problem I've ran into.",1543506820.0
BadMinotaur,"Koichi Sasada gave a presentation on Guild at RubyConf this year. I wasn't able to attend that particular talk so I'm not able to give a progress report, but here is a slide deck from another 2018 conference where he presented the progress on Guild as well: [http://www.atdot.net/\~ko1/activities/2018\_RubyElixirConfTaiwan.pdf](http://www.atdot.net/~ko1/activities/2018_RubyElixirConfTaiwan.pdf)",1543484801.0
riffraff,there is a presentation from rubyconf 2018 too http://www.atdot.net/~ko1/activities/2018_rubyconf2018.pdf,1543517278.0
shevegen,"Koichi is still working on it.

As far as I know the feature and functionality itself will make it into ruby 3.0; the name may change, who knows. But guilds won't be for the next upcoming xmas release.",1543836916.0
geraldbauer,See [New to Ruby?](https://github.com/planetruby/quiz#new-to-ruby) @ Ruby Quiz for (recommended) free learning resources. Happy coding with ruby. Cheers. Prost.,1543484413.0
ryanlue,I think the Well-Grounded Rubyist is a great book for not-quite-beginners to understand how ruby does things differently from other languages.,1543487974.0
arthurstavern,"https://www.theodinproject.com - check out the Odin Project. 


Edit: Code Academy is also good for the basics.",1543499663.0
SuccessfulBread3,"It really depends on what kind of development you want to do... 

&#x200B;

Ruby is nice because it's very developer friendly and has a very open and helping community.

If you want to learn better code design in Ruby I'd suggest any book by Sandi Metz",1543580493.0
joshmn,"Instead of just giving you the answer, here's an explanation :) 

When you have `req.body`, it's a string. You can check this by doing `req.body.class` and it will return `String`

`JSON.parse` turns the string into a hash with string-based keys (not `:symbols`). 

When I'm debugging JSON, what I do is this:

    json = JSON.parse(req.body)
    puts json.keys # will return an array of the keys of the current set, so ['accountData']
    puts json['accountData'].keys # returns [""name"", ""stats""]
    puts json['accountData']['stats'].keys # returns [""statdate"", ""sale"", ""refund"", ""cbck""]

and I'm sure you can figure it out from there :) ",1543434271.0
SuccessfulBread3,"It might be worth noting that to make your life easier, there is a gem called 'httparty'

&#x200B;

It allows you to perform get requests, and you can chain call the method 'parsed\_response' on the request and it will convert the response into a hash for you without having to worry about bodies and headers too much.",1543580634.0
vfreefly,"I tried it already and found that it's impossible to install snaps to the user directory, only system-wide. That means we still need use sudo while `gem install` or `bundle install` otherwise it will not work. Not good. I guess I'll stuck to rbenv for production.

UPDATE: Looks like things changed and now all the gems installed to ~/.gem/gems by default.",1543438888.0
shevegen,"It's good that ruby is available on snap too.

Personally, though, and this is a more general comment, I don't understand the need for snaps.

Why not?

Because there are already distributions that showed how multiple versions could be run side by side - be it GoboLinux, NixOS or various others.

The idea such as with snap, comes just about exclusively from ancient distributions that adhere to the awfulness that is the FHS to begin with.
",1543427059.0
ezekg,I was expecting a snap back hat and got excited to see some official gear!,1543456191.0
JakubOboza,Same time you can install docker and have any version on demand on your box anytime or same time. ,1543473508.0
Jdonavan,"Your code works, which is the important first step.  

Rubysist love the acronym ""DRY"" which stands for don't repeat yourself.  If you look at your code there's lots of *near* repetition.  Really the only thing that changes are the values used for multiplication and division so if we had a map containing those values we could simplify things.  Likewise, we don't need those intermediate strings, we can just shovel the next set of characters onto a string we're building.  

With that in mind we could rewrite it something like this:

    ROMAN_VALUES = {
        1000 => ""M"",  
         900 => ""CM"",  
         500 => ""D"",  
         400 => ""CD"",
         100 => ""C"",  
          90 => ""XC"",  
          50 => ""L"",  
          40 => ""XL"",  
          10 => ""X"",  
           9 => ""IX"",  
           5 => ""V"",  
           4 => ""IV"",  
           1 => ""I"",  
      }
    
    def roman_numeral()
      puts 'Please enter number, and i will convert it to old roman Numerals'
      user_num = gets.chomp.to_i
      original = user_num
    
      roman_value = """"
      ROMAN_VALUES.each do |value, str|
        count = user_num / value
        user_num = user_num - count * value
        roman_value << str * count
      end
    
      puts "" The number #{original} in roman numerals is : #{value}""
    end
    
    roman_numeral
        
    
    
  However there's still room for improvement.  Ruby has a [modulo operator](https://en.wikipedia.org/wiki/Modulo_operation) so we can leverage this to reduce the amount of math needed.  That would look something like:


    ROMAN_VALUES = {
        1000 => ""M"",  
         900 => ""CM"",  
         500 => ""D"",  
         400 => ""CD"",
         100 => ""C"",  
          90 => ""XC"",  
          50 => ""L"",  
          40 => ""XL"",  
          10 => ""X"",  
            9 => ""IX"",  
            5 => ""V"",  
            4 => ""IV"",  
            1 => ""I"",  
      }
    
    def roman_numeral()
      puts 'Please enter number, and i will convert it to old roman Numerals'
      user_num = gets.chomp.to_i
      original = user_num
    
      roman_value = """"
      ROMAN_VALUES.each do |value, str|
        roman_value << str * (user_num / value)
        user_num = user_num % value
      end
     
    
      puts "" The number #{original} in roman numerals is : #{roman_value}""
    end
    
    roman_numeral
        
    

",1543420510.0
cutety,"Welcome to Ruby! Hope you're enjoying it. When I first started learning, I loved doing these little programs. First time coming across this one, and I've never had to convert numbers to Roman Numerals in real life code. And reading through the process, it's not an immediately obvious solution either, so it's good job on taking the time to figure it out. As far as feedback goes, you are repeating yourself entirely too much, and Ruby provides a lot of functions to reduce that repetition -- though I wouldn't expect a beginner to be aware of them.

If we look at the basic algorithm for converting arabic to roman:

> Compare given number with base values in the order 1000, 900, 500, 400, 50, 40, 10, 9, 5, 4, 1. Base value which is just smaller or equal to the given number will be the initial base value (largest base value) .Divide the number by its largest base value, the corresponding base symbol will be repeated quotient times, the remainder will then become the number for future division and repetitions.The process will be repeated until the number becomes zero.

[source](https://www.geeksforgeeks.org/converting-decimal-number-lying-between-1-to-3999-to-roman-numerals/)

So first we have a set amount of base values to use to convert a number to roman, which you implemented by writing out each comparison `m = user_num / 1000 # etc...`. However, a better solution so you don't have to write out each base, divide by the number, and store that in a variable, would be to just store all the bases in `Hash` so we can use it to look up the corresponding roman numeral for a given base:

    ROMAN_BASES = {
      1000 => ""M"",
      900 => ""CM"",
      500 => ""D"",
      400 => ""CD"",
      100 => ""C"",
      90 => ""XC"",
      50 => ""L"",
      40 => ""XL"",
      10 => ""X"",
      9 => ""IX"",
      5 => ""V"",
      4 => ""IV"",
      1 => ""I""
    }

Why would we want to do that? If you break down the next part of the algorithm, what needs to happen next is **repeatedly** using those bases to determine which roman numeral to use, so if we have them all in one structure we can just reference the `ROMAN_BASES` hash while using some looping mechanism instead of repeating the same code over and over again. How can you do that?

Well, if you break down the core of the algorithm, what you're doing is taking one value and converting it to another, or in more CS/Math terms you're **reducing a value to another**, and most programming languages support a way to do that using a method called `reduce` that takes an initial value (the arabic number) and using some set of other values (the `ROMAN_BASES`) and reducing them to a new value (this is actually one of the concepts I struggled with when I first started). And ruby `Hash`s have can use that method, however *idiomatic* ruby instead calls the method `inject` (though you can still also use `reduce`). So instead of writing out each comparison on a new line and repeating the same code more-or-less, you can use `inject` to loop over the bases and accumulate the roman numbers with each iteration the number becoming smaller until it's zero, at which point you'll have you're conversion. To achieve that the code would look like:

    ROMAN_BASES = {
      1000 => ""M"",
      900 => ""CM"",
      500 => ""D"",
      400 => ""CD"",
      100 => ""C"",
      90 => ""XC"",
      50 => ""L"",
      40 => ""XL"",
      10 => ""X"",
      9 => ""IX"",
      5 => ""V"",
      4 => ""IV"",
      1 => ""I""
    }

    def to_roman_numeral(arabic)
      roman = """" # intial empty string used to accumlate
                        
      ROMAN_BASES.inject(arabic) do |num, (base, symbol)|
        # num.divmod(base) will divide the arabic number by the roman base
        # and return an array containing the quotient -- number of symbols needed
        # and the remainder which will be used on the next iteration to do the
        # same for the next symbol, for example:
        # 3004.divmod(1000) will return [3, 4] which means we need 3 ""M"" symbols
        # and the remainder will be for, so then on the next iteration it will do
        # 4.divmod(900) and return [0, 4] meaning we need 0 ""CM"" symbols
        # and so on
        symbol_count, remainder = num.divmod(base)
        # then we multiple the symbol by the count to get ""MMM"" and add to 
        # our roman string
        roman << (symbol * symbol_count)
        remainder # and return the remainder for the next iteration
      end

      roman
    end

    to_roman_numeral 3004
  
[Which you can play with here](https://repl.it/repls/HurtfulCompetitiveRar)

I realize this may be a bit confusing, so if you have any questions feel free to ask!
",1543421940.0
Roberttee93,Thank you so much everyone for the helpful replys much appreciated!! I'll have a proper look over them when I get home from work.,1543422204.0
shevegen,"In general a lot of your could could be simplified, but I think you should not worry about this too much. The more you write, the more you can see areas where you can be shorter, without sacrificing readability.

First thing is always ""does the code work"". If yes then this is ok. At a later time you may want to use a class and separate the parts a bit, such as using a separate method for getting user input (I love this) - but this is a lot up due to personal preferences too.",1543427186.0
fedekun,"Efficient? I guess your code is efficient enough, but that might not be what you are looking for. In coding, at least professional programming, the first priority (at least in OOP) should be ""be easy to read"", when it's easy to read, it's easy to change.

Your code is not very easy to read. Methods longer than 5 lines are not easy to read. This is opinionated of course, but I like [Sandi's rules](https://robots.thoughtbot.com/sandi-metz-rules-for-developers).

I wrote a more OOP version [here](https://repl.it/repls/ImpureHumbleDefinitions), similar to what /u/Jdonavan wrote. I use reduce instead of each and pass an accumulator instead, but using each is fine too.

Also, you could apply the [Chain of Responsibility](https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern) pattern, where you'd have several transformation objects (one for 1000, another for 500, another for 100, etc), and one linking to the other (1000 links to 500, 500 to 100, 100 to 50, etc).

I think that one would also fix the error of printing 4's as IIII, although that's actually valid roman numbers, both IV and IIII notations are correct.",1543420788.0
GroceryBagHead,Good podcast with good points. Disappointed that there were no mention about performance implications of using rspec/factories.,1543428181.0
jasdeep13,Amazing! ,1543412394.0
shevegen,"Interesting idea.

I don't think I need it myself (I am actually so stubborn that I simply parse ARGV on my own) but it's good to see fresh perspective on commandline-handling, considering how ... optparse leaves a lot to be desired.",1543341559.0
matheusmoreira,"I like the argument parsing logic:

    private def parse_opts!
      @opts = {}
      @args.delete_if do |arg|
        case arg
        when /\A--(.+)=(.*)\z/
          @opts[$1.to_sym] = $2
        when /\A--(.+)\z/
          @opts[$1.to_sym] = true
        when /\A--no-(.+)\z/
          @opts[$1.to_sym] = false
        else
          next false
        end
        true
      end
    end

Quite simple and functional in my opinion.",1543359794.0
strzibny,Actually a nice idea! Especially for building something quick.,1543400683.0
sugar_ray_sanders,"I think RubyMonk is a good fit for what you're looking for. They have a good amount of reading material available if that's how you learn best. I would also recommend doing Hackerrank problems on your spare time as well, they have a solid base of problems for Ruby Fundamentals.

&#x200B;

I think a universal  best practice for learning any language is repetition solving various problems, so I think if you did all the challenges and finished the RubyMonk tutorials then you'll be a Ruby Developer in no time!",1543335004.0
_ferz,Is it even still working? Pretty sure it's pretty dated now and haven't been updated in a long time.,1543354630.0
geraldbauer,See [New to Ruby?](https://github.com/planetruby/quiz#new-to-ruby) @ Ruby Quiz for (recommended) alternatives. Happy coding with ruby. Cheers. Prost.,1543393831.0
realntl,"It doesn't seem like the issue facing the author (counting by group) has anything to do with the web framework, but rather the database tooling.

I also don't see any substantiation of the claim that Hanami is a ""hipster framework."" To me, Rails is a ""hipster framework,"" but even then, that's just like, my opinion, man. And blaming a web framework for not offering an ORM affordance for composing nontrivial SQL queries (something far better done with a plain old boring SQL query) seems like a particularly hipster stance to take.",1543331732.0
mperham,"Instead of throwing ambiguous shade like `hipster framework`, the author could be more clear and a little less entitled:

""It's a less mature framework than Rails, produced by unpaid volunteers and it turns out they didn't want to spend their free time supporting me""",1543337759.0
jodosha,"Hey, Hanami author here.

""Hipster framework"" a dismissive comment. I don't want even argue about it. You're just throwing shit at other people's work, that committed years of their life to build a OSS (and don't forget, _free_) project to give you the a choice.

Now getting to the technical matter. It would be silly from us to NOT explore other possibilities in software design. If I had to write a Rails clone, that would have been pointless.

Other point. ORMs are hard. We try to do our best. In the spirit of a cooperating community, we would appreciate contributions.

Not just ""hey my question got unanswered"" (I'm sorry for that), but ""hey, it was hard, but I made it! Here's a PR to enhance the code or at least to document the solution"".

We're not your software provider, nor we signed any contract with you.",1543355818.0
janko-m,"What are you comparing Hanami::Model with exactly?

> To be able to fix my problem with this framework, I had to get access to the Sequel::Dataset object and do the call by myself.

That sounds like a proper solution. The count that you were fetching probably wasn't related to any entity in your domain, so it makes sense to fetch the data directly.",1543353501.0
jrochkind,"hanami might be a better architecture in a theoretical way, but it's hard to compete with the years of work that's gone into Rails, including the years of people contributing docs and tutorials and blog posts with examples, etc. 

That's just how it is (maybe; you can disagree that's how it is); it doesn't mean we need to call either one a ""hipster framework"". But I've mostly stuck to Rails predicting that, for these reasons, hanami would end up having a lot more unfinished edges or things needing to be re-invented/discovered. Still nothing wrong with the fact that the hanami folks are trying hanami; I wouldn't shame anyone either way. But Rails is a very mature solution, in a good way, for all it's things that seem non-optimal. Any solution is going ot have non-optimal things. It's hard to compete with that level of maturity though -- there are totally ""rational"" reasons to choose maturity, not just being afraid of new things or whatever. ",1543335839.0
Schrockwell,"I'm going to go against the grain here and recommend Vue.js over React, based purely on my personal experience. I mean you should probably learn React and understand the concepts, and React is fine as long as you don't go too far into the crazy levels of abstraction, but I find myself infinitely more productive with the tooling built around Vue and Nuxt. React made me hate my life, but I genuinely look forward to working in Vue. YMMV.",1543329938.0
nozankyou,"Learn React. It‚Äôs the most popular JavaScript framework for a reason. 

I personally put it off for too long and wish I‚Äôd gotten stuck into it earlier. ",1543308929.0
SuccessfulBread3,"I'd say learn it, but don't lean on it. JS frameworks can be fleeting. It has some pretty cool concepts, although context binding can be an arse.

Its one of those buzzwords that HR teams look for before the interview with people who actually have the ability to assess your skills.",1543321151.0
RandomRocketScience,"I started learning ruby 6 months prior to becoming a professional web dev, and it has not been of much help, apart from the occasional script. wasn't able to find a junior rails position, but there are loads of jobs for js, react in particular. React is in huge demand right now, i highly encourage you to pick it up.

I highly recommend the courses by WesBos, mostly React for Beginners",1543315606.0
sickcodebruh420,"Another vote for React. In all likelihood, most jobs you apply for will appreciate that you have experience with modern JS and a modern front-end library. Even if they‚Äôre using Vue or something else, your experience with React will leave you better prepared for whatever they throw at you.

I worked backend exclusively for years before being forced to take on more of a full stack role. Now, the majority of my time is spent in React. I prefer it to working with Ruby in many ways. ",1543315780.0
editor_of_the_beast,"You should definitely learn React. The mental model you get from it applies to so many other things. It really affects the way you look at software.

Representing the view as a function of state is simply a fantastic idea. You‚Äôll start thinking about state and functions a lot more, which I think improves your code elsewhere.",1543321319.0
unflores,"If you are looking to be a backend dev then you might not care.

 If you are looking to be fullstack then probably. Though you may want to look at what front is used most in your area. Vue is also quite popular with some of my ruby working aquaintances.",1543323105.0
nathanielb,"Learn JavaScript. Then learn about the frameworks and why they exist (what problems are they trying to solve and were trying to solve when they became the Next Big Thing). React is fine. The track record of all JS frameworks is very short, however, so ""learning a framework"" is actually not terribly useful in the mid- to long-term.",1543324694.0
Serializedrequests,"**Absolutely**. I don't know the value of a course, you can easily just install it and start making something to see how it works, but hey if you have it use it! While I had no trouble getting a junior Rails position, React is blowing up at the moment. The popularity of React may be fleeting in the end, but I think its programming model will be around for a *long* time on the web. Understanding React will make you way more hire-able right now, help you to write better UI code in general, and easily work with any of the numerous React-like libraries out there.

If you have any web project that needs more interactivity, React and React-like libraries are a much nicer starting point for progressive enhancement than full-site frameworks like Ember or Angular.

For me personally I ended up going with **Elm** in my Rails projects because I found the JS toolchain to be totally insane and not worth dealing with as a solo developer (the exponential transitive dependencies are absolute hell), but I had a massive leg up because it works a LOT like React, and I still have some React code in my Rails projects here and there. (Though keeping it up to date is annoying compared to Elm.)",1543326888.0
joelbluminator,"Depends on your goal. If you're a junior and just want to get your first job than sure. If you're a senior I don't think it's the best investment of your time, these companies (Google, Facebook) tend to change frameworks quite often...I'd invest my time on backend (get better with python, java, spring) etc. ",1543337782.0
shevegen,"I think if you are aiming for a job, and need that job, then you should focus on that job and whatever means to get that job. So if react fills that then go for it.

I consider JavaScript pretty awful. People could not pay me enough to have to waste my life time in JavaScript-related projects.",1543341627.0
nakilon,React is not related to Ruby in any way.,1543320319.0
Paradox,"Very nicely done.

I'm currently using a python script, instalooter, to follow and scrape some accounts, but may migrate over to this, since I generally prefer ruby gems to python eggs/whatevers",1543252746.0
katafrakt,"Wow, that's neat. I built an app using Instagram API during hackathon some time ago and was very disappointed few years later when I realized the API has been so drastically limited. This brings back the functionality I need!

&#x200B;

Do you know how long the session\_id lives?",1543350832.0
jrochkind,"I don't know the history of motivation, but in fact people have become interested in fibers for high-performance highly-concurrent ""evented"" code (compare to [node.js/javascript's similar concurrency model](https://www.javacodegeeks.com/2013/12/node-js-non-blocking-io-model.html)). 

Actually some googling reveals that people were interested in fibers for this purpose from the start. Here's a piece from 2009 (even before 1.9 dropped with fibers, i think) from Ilya Grigorik, where he highlights the use for evented code: https://www.igvita.com/2009/05/13/fibers-cooperative-scheduling-in-ruby/

It is true that continuations could have been used for same. But they lacked the performance characteristics to make it useful.  At any rate, the interest is not just in ""generators"", but a general-purpose evented concurrency model. That was documented as _one_ of the focuses of interest from the start. And I would say has become the _main_ interest in fibers, whether or not it began that way (it may have).  

Don't get me wrong, personally I am not too interested in node.js-style evented code, for a variety of reasons. But for those who are, fibers are what makes it hypothetically possible with the desired performance characterstics. ",1543241031.0
janko-m,"Yeah, Fibers are pretty dope. All of us use them implicitly whenever we use Enumerators. I also used them explicitly in the [Down](https://github.com/janko-m/down) gem to implement [on-demand streaming download](https://github.com/janko-m/down#streaming).",1543265368.0
sammygadd,This is an interesting read: https://www.codeotaku.com/journal/2018-11/fibers-are-the-right-solution/index,1543256903.0
amerine2,Awesome overview. I remember when Fibers landed and very few people wrote about them as clearly and as succinctly as you. Much appreciated for the new resource to share around. ‚ù§Ô∏è,1543247138.0
shevegen,"Frankly I lost track of thread-related stuff in ruby.

I hope matz radically revamps this in ruby 3.x.

Someone even suggested Thread::Light not so long ago on the issue tracker ... 

Who can remember all of this?",1543341768.0
rolentle,Hey! Glad you are starting your journey on becoming programmer! Something that could be helpful is to copy and paste the code into a gist at gist.github.com that way we could help follow through the code with you locally on our machines.,1543224246.0
sinsiliux,Ok if I understood you correctly you want use to enter name of their account and then perform operations on it. In that case a [hash](http://ruby-doc.org/core-2.5.3/Hash.html) would fit you best: put all your `Account` objects into one hash where name of the account is key and `Account` object is value. You can then choose the right account to operate on with something like `acc = accounts[gets.chomp]`.,1543226254.0
Roberttee93,https://repl.it/@RobertTempleton/BankingApp,1543226281.0
PM_ME_YOUR_HOG_PLZ,Don‚Äôt use a while loop. Just if/else statements. ,1543224254.0
,[deleted],1543223802.0
manys,">And is anyone interested in (yet another) wrapper?

If you do, please call it [""FoiledAgain""](https://www.youtube.com/watch?v=tMrcYFc4btY) :)",1543213895.0
ioquatix,I had problems with that/those gems too. I gave up and used `tty-*` gems. They handle a lot of basic stuff much better.,1543206416.0
matheusmoreira,"If you want to make your own terminal control library, check out [this rather opinionated post]. While not completely portable, it introduces a lot of concepts that I wish I'd known about when I started. [This article] about the terminal system as a whole is very nice too and quite detailed.

[this rather opinionated post]: http://xn--rpa.cc/essays/term
[This article]: https://www.linusakesson.net/programming/tty/",1543408950.0
editor_of_the_beast,"I love making CLI apps using curses. I find that the wrappers out there are fine. I think it‚Äôs fine to make one if you just want to experiment.

What‚Äôs  the problem with the current ones?",1543233773.0
fabulousdonut,"I have recently used ruby curses for writing a small document-tagging tool. I believe that most of the problems I had came from lacklustre documentation rather than the implementation itself. I'm not sure what the typical use case for using this gem is, though.",1543202001.0
shevegen,"> And is anyone interested in (yet another) wrapper? Or is it just me?

I'd love to have a pretty simple API that is also powerful for curses-related
stuff.

But there is a reason it is called curses - this thing is fucking awful. I hate
it. I don't want to use it in the way it is. Often 1:1 mappings from C to 
ruby suck too.

But if someone were to do a good API layer ... that would be nice. I don't
think this will happen, though. People run into curses quickly give up.

There just lies Cthulhu.",1543427342.0
kawsper,"I'm quite interested in Curses, and I think the gem Curses does alright. The only real issue I have been having is compiling it with the right ncurses [(or else all kinds of weird behavior will happen)](https://github.com/ruby/curses/issues/42)

Luckily the solution was simple enough: 

> bundle config build.curses --with-cflags=""-I$(brew --prefix)/opt/ncurses/include"" --with-ldflags=""-L$(brew --prefix)/opt/ncurses/lib""

One thing that could be interesting instead of yet-another-(n)curses-gem would be to have a Ruby Termbox implementation/wrapper: https://github.com/nsf/termbox, it is a very small C library with a small API that is much easier to comprehend and use, unfortunately the author do not seem to like terminals that supports 24-bit colors: https://github.com/nsf/termbox/issues/37 :(",1543543641.0
DoubleJarvis,"[string.scan](https://ruby-doc.org/core-2.2.0/String.html#method-i-scan) should do the trick, returns an array of occurrences.",1543182589.0
manys,string.scan(/word 1/),1543182411.0
faitswulff,"Wow, TIL that `String#count` is remarkably un-ergonomic. Relevant StackOverflow answer:

> This is one of the dorkiest ruby methods, and pretty lousy documentation to boot. Threw me for a loop. I ended up looking at it because it looked like it should give me the count of occurrences of a given string. Nope. Not remotely close.

https://stackoverflow.com/questions/5305638/stringcount-options",1543183716.0
charizzardd,"If the words are split by a space: 

string = ""word1 word1 word2 word2 word1 word3""

You could use split and then work on the array. And then use a loop. If you want all word counts you can use a hash but if you are looking for a single word us .each

user_input = gets.chomp 
word_count = 0
array = string.split("" "")
array.each do |word| 
    if word == user_input
          word_count += 1
    end
end

Word count increments each time an element in the array is equal to the word you are looking for. Don't forget to use .chomp on your gets, otherwise I believe the gets has a new line, the chimp removed that and returns the gets. Or maybe I am thinking backwards and it actually removes the gets and returns what was removed which in effect gives you the user input. Something like that, anyway, I think you need gets.chomp not just gets.",1543276287.0
shevegen,For this using a regex is usually best.,1543993147.0
in0pinatus,"Presumably all you need is a page that'll offer to Do Something via a form, and then (on form post) instantiate the same objects (and send them the same messages) that the CLI front-end would've otherwise. If that's all it is, it'll usually be straightforward.

However, Rails might be Too Much Framework for this and you could easily get bogged down in unnecessary effort, especially if you're coming new to it and unsure of what's relevant to the task at hand and what's not. Take a look at Sinatra as well for a popular and much lighter-weight option.

NB: if your program is long-running then do the work via a background job instead; use a web front-end to place the request and monitor for the result.
",1543183078.0
seainhd,Super easy. Is your CLI in ruby?,1543195561.0
thebritisharecome,Rails is just web isn't it? You can make a ruby program easy enough,1543181930.0
zverok_kha,"> Strong type checking for Ruby

Is not. ""(Slightly) more convenient runtime argument checker"" it is.",1543145356.0
MB_Zeppin,"I‚Äôm confused.

If you wanted to code Ruby with static types then why wouldn‚Äôt you just use a different, statically typed language?

We only have Typescript because we‚Äôre confined to JavaScript on the Web.",1543145862.0
TODO_getLife,"Seems a bit pointless if it's just going to spit out a different runtime error. 

Truth is, if you want static typing, a different language is better. Crystal is exactly that for example.",1543250246.0
fedekun,"This is like adding  types to Smalltalk, a bad idea. I kind of get where this comes from though, when you have a bunch of junior devs pumping shitty code, you NEED a way to be safe, but in that case I'd say Ruby is not a good language for juniors. Sure, it's easy to learn, it can get the job done, but it gives you too much freedom.

In the hands of a developer who can write proper, idiomatic, dynamic OOP code, Ruby is awesome. If you need strong types, you most likely are doing something wrong.",1543160084.0
necrosexual,AW yea I love preconditions,1543148816.0
BurdetteLamar,"I've enjoyed using gem `contracts`:  [https://rubygems.org/gems/contracts](https://rubygems.org/gems/contracts).  It's extremely versatile.

Be sure to see the excellent tutorial at [https://egonschiele.github.io/contracts.ruby](https://egonschiele.github.io/contracts.ruby).",1543189324.0
shevegen,"How utterly useless.

People should do something more productive.",1543993189.0
keymone,wat?,1543070806.0
editor_of_the_beast,"We use this at work, and it is really magical. We‚Äôve used it to shave minutes off of each build. ",1543113325.0
zverok_kha,"What's the exact goal you are trying to achieve?
If it is ""I don't wanna see `(1 undocumented)` because I just don't care"" -- then just don't look at it. Seriously.

Otherwise (if you care about your code and docs), you can understand what is it that RDoc tries to say: that it would render `crc32_ITU_T` method inside some _class_, and that class would be `String`. So, your docs would contain top-level `String` class with one method -- which is OK (documentation reader would most probably understand it means you are extending core `String`). This class' docs would be empty, that's what RDoc is concerned about. Good thing to write there is something akin to ""The library extends `String` with this and that because reasons.""

Alternatively, you can just hide the entire thing from RDoc with `:nodoc:` comment, but that means your code's docs reader will never find out you have provided `String#crc32_ITU_T`.",1543073049.0
sshaw_,Try `rdoc --no-coverage-report`. And see `rdoc --help` for more options on excluding things. ,1543064934.0
GenericCanadian,I think the third method works out best for my apps. I'm a big fan of using the Interactor gem to handle my service objects,1542998776.0
midasgoldentouch,"While I think returning success or failure objects is a valid solution, I also think it hinges on your overall philosophy of service objects. I strive to make mine as functional as possible, including doing any AR transactions outside of the service object if possible. Thus, an approach that relies heavily on dependency injection, like #3, is going to be preferred.",1542978957.0
Enumerable_any,"I went through the same process of finding a solution for the ""make sure the client of my code checks all error cases"" issue a few years ago: https://gist.github.com/timhabermaas/1ac34b7f7ad02a847ee0#emulate-exhaustive-pattern-matching-in-ruby-using-cps--required-keyword-arguments. I ended up with callbacks + required keyword arguments as one solution. It doesn't compose well, though. Chaining calls to service objects would end up in callback hell.",1542995686.0
StartSpring,"I think there is a bug in the `snippet_5.rb`. 

Instance method `call` is called without arguments.
",1542998134.0
v66moroz,"Not sure how are you going to solve exception leak problem with service objects. Either your simply pass Failure from e.g. ActiveRecord up, which is exactly what leak is. Or you map it to another Failure on the way. Not much different from catching exceptions and mapping them.",1543007839.0
iconoclaus,"The author mentions `dry-transaction` at the end.
If you've never seen it, check it out: https://dry-rb.org/gems/dry-transaction/

It's what gets you railway oriented code the way functional languages envision it.",1543024392.0
cavinkwon,"How about this?  i used [monadic](https://github.com/pzol/monadic) gem.

    # controller
    def create
      CreateUser.new(self).run(user, success: ->(user,msg) { .. }, 
                                     failure: ->(user) { .. } )
    end
    
    # service
    class CreateUser
      ..
      def initialize(context)
        @context = context
      end
    
      def run(user, listener)
        @user = repo.new_user(user)
        Either(repo.save_user(@user)).
          >= { listener[:success].call(@user, '...') }.
          or { listener[:failure].call(@user) }
      end
    end",1543025339.0
ioquatix,"Hehe, this gem might help: https://github.com/ioquatix/trenni-markdown",1542968622.0
Varder,"The way I have done it in the past is like this:  


    require 'optparse'
    
    @options = {
        ip_address: '127.0.0.1'
    }
    OptionParser.new do |opts|
      opts.banner = ""Usage: example.rb [options]""
    
     opts.on(""-i"", ""--ipaddress STRING"", String, ""IP Address to test"") do |i|
        @options[:ip_address] = i
     end
    
    end.parse!
    
    p ""the ip address is: #{@options[:ip_address]}""
    
    p @options.inspect

If an IP address is not passed in @options\[:ip\_address\] is equal to '[127.0.0.1](https://127.0.0.1)' else it is what is passed in.

&#x200B;

Hope that helps",1542961370.0
shevegen,"It's good that others already answered the question because I myself stopped using optparse many years ago. It is just too awful, too underdocumented and too unusable - which also explains why there are so many alternatives to it as a gem.
",1543051623.0
ioquatix,That's pretty cool. I like the idea.,1542937976.0
v66moroz,"    x.report( 'xcsv:' )             { n.times do XCSV.open( ""#{data_dir}/finance/MSFT.csv"", &:to_a); end }
    x.report( 'fastest-csv:' )      { n.times do FastestCSV.read( ""#{data_dir}/finance/MSFT.csv"" ); end }

                          user     system      total        real
    std:              3.426003   0.031991   3.457994 (  3.458502)
    split:            0.910320   0.008102   0.918422 (  0.918477)
    lenient:          3.405903   0.031962   3.437865 (  3.438372)
    xcsv:             0.948309   0.020006   0.968315 (  0.968342)
    fastest-csv:      0.568832   0.020016   0.588848 (  0.588900)

1. CSV fields can contain commas, quotes and newlines, none of these is covered by split.
2. FastestCSV requires C, doesn't cover newlines.
3. XCSV requires Rust and in the early stage of development, but can be easily extended (shameless plug: it's my gem).",1542906756.0
Enumerable_any,"This looks promising! Ruby's `require`/module system really needs to be approved upon. The biggest sources of `require` related bugs are IMO the transitive nature of `require` and `require` being almost equivalent to `eval(File.read(x))`.

Once we had different default locales set for `I18n` depending on the load order of files. This was a fun one to track down...

However, I'm reluctant to use any external library for such a core functionality. Hopefully something similar will make it into the language (like the ticket mentioned in the Readme).",1542889982.0
shevegen,"Interesting idea.

I have had tried to come up with suggestions before to expand on ruby's require way; other ruby users also do something similar if you look at the bug tracker, such as the recent discussion:

https://docs.google.com/document/d/1nDScdLanB-6qK3rIG5DWO0j6f1sV4ZFoSCBw5I7AdjQ/pub

autoload_relative

This suggestion will probably not make it into ruby but this is besides the point - the main point is that people are looking for ways to enhance ruby's way how to handle files and dependencies.

""Modulation"" may be too complicated, but I still hope for a non-file based way to require code (e. g. to have an alternative to hardcoded paths to .rb files). 
",1542923921.0
sammygadd,Sounds pretty cool. But I can't shake the feeling that the author really want to write JavaScript.,1542905242.0
vfreefly,"I prefer Capybara, but Watir is a choice as well.",1542887583.0
tomthecool,"That was overall a very good speed-run of several scraping techniques. I particularly liked the angular and iframe examples -- those are more obscure scenarios, so this showcases far more advanced techniques than most similar tutorials.

I do have two issues with the video though:

1. Admittedly this could have been purely for demo purposes, but why scrape google image searches by filling in the browser form? You could just visit the URL: `https://www.google.co.uk/search?q=CHANGEME&tbm=isch` directly.

2. A more significant issue is, why is this a rails application? The video has nothing to do with rails. It would have been much better, in my opinion, to clearly showcase this as an example of using ruby **off** rails! You could run `bundle init` instead of `rails new`, if you still want to add dependencies to a `Gemfile`; or just use `gem install` for the sake of brevity.",1542924624.0
Shmutt,"I only watched the first two minutes but isn't phantom deprecated in favour of chromedriver now, as chromedriver can now evaluate js as well?",1542930211.0
Tinyhousetruckpdx,It sounds like a great project and a helluva undertaking. I've been learning ruby over the past six months and see tons of resources for the fundamental aspects of ruby.  It would be great to see more resources for intermediate to advanced topics covered in a better way.  Gorails.com does a pretty good job. ,1542870622.0
pull_my_finger_AGAIN,"Sounds cool, but can I suggest that instead - you can contribute to an exisiting project in [The Odin Project](https://www.theodinproject.com). It's all opensource at [github](https://github.com/TheOdinProject/).",1542936345.0
miromanyth,"I've been looking into this lately as well. First, it should be noted that some great libraries already exist. Namely gosu https://github.com/gosu/gosu and minigl https://github.com/victords/minigl.
These two resources could take you pretty far. The big hang up for me is cross platform support and distribution. For better or worse c# and unity/monogame seem to make that pretty streamlined.
I would love to see ruby extend itself into this arena as it would be such a delight to develop in ruby. Good luck either way!
",1542850392.0
edendark,"The Android game ""A Dark Room"" was written in Ruby using [RubyMotion](http://www.rubymotion.com). 

Also there's Opal for you to use, write in Ruby and get a JS file, game engine for it here: https://github.com/domgetter/dare",1542860201.0
corysama,"At some point you are going to have to use a lower-level language. I‚Äôm sure it‚Äôs technically possible. But, a *pure* Ruby graphics engine would only be interesting in that it would be so *difficult* to make performant.

What I‚Äôm getting at is that, yes, to achieve your goals, your best route is to make Ruby bindings on top of an engine written in C/C++/Rust.  The actual Ruby in your engine should be thin, minimal and only there for convenience.

I‚Äôd recommend building on top of https://github.com/bkaradzic/bgfx  You don‚Äôt need you expose all of BGFX to Ruby. Make your engine how you want it to be. But, leverage the high-performance code that‚Äôs sitting there as much as possible.
",1542874682.0
proyb2,"If it's not fast enough, you might have a better performance with Crystal programming language.

https://github.com/veelenga/awesome-crystal/blob/master/README.md#game-development",1542857142.0
shevegen,"There have been various efforts in the past; rubygame; there was also a game engine in ruby ... I forgot the name hmmm... godrin ... something
antergos ... nope sorry, I simply forgot the name.

People tend to give up after a while. :\

Happened to me too. I still use ruby for many projects but presently not really actively investing time into creating a game.

I noticed that many people get carried too much away when writing ruby code though.",1542924582.0
GDP10,"I'm the author of [opal-phaser,](https://github.com/orbitalimpact/opal-phaser) a game engine on top of Opal which lets you write HTML5 games in Ruby. It definitely fits the bill of ""little 2D indie games"" and much more. I don't think it could be used for AAA games, but it could be used for quite a lot. It's also quite fast according to my recollection, at least as fast as [Phaser itself](http://phaser.io/) (at the time I was developing it).

I learned a lot by building it and building games with it, so I'd be happy to share my knowledge with you. ",1543009737.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/gameengdev] [Would I be able to make a small game engine in Ruby?](https://www.reddit.com/r/gameengdev/comments/9z9kz3/would_i_be_able_to_make_a_small_game_engine_in/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1542851187.0
rpr1984,"My co-workers wanted me to share my experience in using Mat Views in our application, so I decided to just do a blog post so if anyone else out there is curious what they are and how to use with your Rails project, here it is. Hope it helps my team (and you). ",1542843818.0
clothes_are_optional,"so i feel like you missed one of the most important things i was looking for (aside from impl details) which is, what kind of speed gains did you get here? and are the pros of these gains worth the extra confusion and context required for all devs to understand what and how to deal with mat views along with stored procedures?",1542861474.0
just3ws,Nice explanation of how to wire up the MV.,1542853061.0
stanislavb,"I've been reaching to the help of materialized views from time to time. It definitely can simplify things if used correctly (not overused). The biggest burden is how to efficiently support and maintain them. In that regards, I've always used ""scenic"" gem (https://ruby.libhunt.com/scenic-alternatives), and I'd highly recommend it.",1542875635.0
sickcodebruh420,Very nice explanation! Thank you for putting it together. ,1542863218.0
JakubOboza,"Materialized view is good for something that is refreshed like once a day or even less if you have something like we had which was every 5 minutes by cron it can get into issues. First of all we had a complex materialized view and second we had more than few millions rows to go through and ofc it joined on other tables so it started pretty soon in prod to take longer than 5 minutes to rebuild/refresh. IMHO if the feature works for you it is fine, I don‚Äôt expect you to have as many songs and we had transaction entries but all I can say is that clients don‚Äôt like to learn they can see their transactions statuses update after 1-4 hours from doing them :). ",1542867855.0
midasgoldentouch,Very nice,1542843937.0
yxhuvud,Update cost of refreshing the m.view is to run the query in the first place. It was obviously not very slow in this case. But what happens if it is? Can it be refreshed in a transaction or will the whole model be unavailable during refresh?,1542867130.0
Mallanaga,I‚Äôve seen two companies drop new relic in favor of datadog and sentry.,1542816520.0
ezekg,"I previously used New Relic and was never a huge fan. Too ""enterprisey"" for my taste. I much prefer [Scout](https://scoutapp.com) for Ruby apps. It has a better UI and is focused solely on Ruby/Rails, so transaction traces and debugging tools are actually useful - I actually found the source of multiple issues and was able to fix them. I use [Raygun](https://raygun.com/) for error reporting.",1542815295.0
BumpyBallFan,"> My ideal APM would have NewRelic's feature breadth, Skylight's agent and trace viewer, and Scout's design and customer service.

https://twitter.com/nateberkopec/status/1044285851868549120

:)",1542815961.0
ejs97,"If your servers are essentially undifferentiated, what we have done is installed NR on just a single server. Most of the failures we see affect all servers evenly (say, a database failure or an AWS service performance degradation).

&#x200B;

If one specific server does die, that's hopefully visible via CloudWatch logs. But otherwise the performance differences aren't (shouldn't be) material if all your servers are in the same AZ and instance type.",1542821470.0
kidtaicho,"I'll give a +1 for scout. My team's monitoring needs are fairly minimal and cost was too much for new relic. We use it in coordination with pingdom for uptime monitoring. We have no complaints so far and can get the information we need. 

I also looked at skylight when making the decision and I liked their interface and the company seemed solid so, I'd say they're worth checking out. ",1542838070.0
jb3689,"Really liked Datadog myself. New Relic is nice for getting detailed stack profiles. Right now we have neither though and can't say I'm hurting because of it

> I am not a ruby dev but my team is. We currently use new relic to monitor around 20 servers and 3 apps. However the pricing is getting to be really, really high for the amount of use we get out of it.

> New relic has been very useful, but we're only doing about 5-7 million transactions a month, and new relic is pushing 20-25k a year.

I would really question if you get 20-25k/year of value from it. You ought to be able to look back at the last year's worth of reports and be able to estimate if the value has been worth it",1542845276.0
tinco,"What features are you using? I'm recommending AppSignal to my clients, it's pretty nice though it might not have all features of New Relic.",1542818304.0
pglombardo,"Instana has better pricing and all infrastructure, metrics and traces are all automatically tracked and correlated in a dynamic graph (internally in the back end) for better alerting and more.  Plus when you view a trace you can track it to the exact host and process and see their exact state at that moment.

Plus I built the Ruby support for Instana so you could always ping me for anything ;-)

",1542845037.0
solak,"To answer to your question - I am using AppSignal and I'm quite happy with it, it acts both as performance monitoring and error reporting tool. I do miss some memory-related features I've seen in Scout and Skylight.

Somewhat related question - does anyone have experience with Elastic APM?",1542890621.0
strzibny,"We used [Skylight.io](https://Skylight.io) and I was pretty happy with them, they continue to be better every day. Btw for errors we used Rollbar.",1542900948.0
aantix,"We're launching our Rails-centric APM and Exception monitoring service in the next couple of weeks.  

&#x200B;

Feel free to play around with the live demo here.

[https://baseline.red](https://baseline.red)

&#x200B;

Write me an email if you're interested in trying us out.

[jim@baseline.red](mailto:jim@baseline.red)",1543118388.0
packet_losss,Has anyone really done much with Stackdriver ?  I feel like it's pretty rough,1543257777.0
i_know_sherman,Prometheus is amazing.,1542857087.0
notimel3ft,Awesome gem.  I use this all the time. ,1542816930.0
zverok_kha,"I am not sure what I am looking at.

Big half-screen header says ""A Comprehensive Guideline to Design Clean and Organized Code in Rails"".

Under it, another header of almost the same size but different design says ""How to get clean and maintainable code in Rails with Service Objects?""

Under it, there are several small paragraphs, basically saying ""To get clean architecture, you should use service objects"". Is it the whole ""comprehensive guide""? Or maybe one chapter of it?.. (If it is so, maybe it makes sense to state it in a more clear way.)",1542801031.0
aemadrid,It's good to know that you can be comprehensive in just one page. Please ...,1542818691.0
danboy4,"Amazing resource, thank you! ",1542802937.0
BadMinotaur,"So, disclaimer -- I've never been on a professional development team, so this will probably sound completely naive.

If documentation is such an issue on so many teams, why don't companies hire someone whose role is solely documentation? A programmer who can talk the talk with the back-end engineers, keep up with features and are never behind because it's their duty to keep up with the ever-changing API. Is that unfeasible for some reason?",1542789825.0
gregnavis,"This is another problem that is bravely solved by single-page app developers that is absent from other architectures.

If you have to do this then I think it'd be better to automatically build a JavaScript client based on backend metadata.",1542796024.0
Schrockwell,Don‚Äôt focus on leaning a language. Come up with a small project idea you are personally invested in and can implement in three weeks. Then focus on learning whatever tools you need to get that done.,1542756647.0
shevegen,"Hmm. 3 weeks is a tough timeline.

Obviously I am biased and suggest ruby since it beats the others. However had ... perhaps your use case may be a different one and you could benefit from investing the time into something else? Hard to say for others I think.

To be honest, I think rather than suggesting ruby (even though I do), I think you should pick on something that either is interesting you a lot and focus on that, while having fun with it; or, alternatively or in addition to that, focus on what you may benefit from in the longer run, e. g. 2019 already. Which I think only you can decide. Perhaps you need a faster language?

The list you gave is pretty wild to me. :P

I think rather than going to tell you what to do, even as a suggestion, I can name a very few specific reasons why I think ruby is great:

- Ease of flow on the mind. I adapt ruby to how I want to think (though of course I often have to adapt to ruby, too). I use lots of aliases and top-level methods for modules; I typically use a method called menu + regexes to interface with a specific class. That is really convenient to me since I sort of use linux + bash + kde konsole + ruby as some kind of ""IDE"". It is not really an IDE but I have so much ruby code that solves given tasks and I just end up combining them. For example, ""extract_audio"" to extract ... audio. ""cut_audio"" to ... cut audio. Various helpers ... ""rblanks"" to replace all ' ' with '_' in the current directory (I hate ' ' in filenames, mostly because they are not so convenient as _ instead). And so on.

- Ruby is a LOT of fun to use. I used PHP and perl before and they never were near as much fun as Ruby. Python is acceptable to me but Ruby beats Python in various ways (as far as the language design is concerned).

To improve ruby, just keep on writing ruby scripts that you may use. You may have to find an area that interests you, which will get you going. I am a noob when it comes to javascript but I needed web-scraping and did so via ruby (and some other folks who wrote code that allows web-scraping of javascript-generated sites). I once needed that for university lectures
that are only displayed via javascript ... annoying. :\",1542925188.0
r33beers,"Start with thinking about what options will be most useful for your career. Then, narrow the list by what seems like interesting stuff to spend your free time on. ",1542756678.0
zaphnod,"Welcome to the programming club!  Here's how to get help on the internet (assuming your course allows it!):

Take a shot at the problem.  Google the error messages.  Look around and understand what's not working *first*.  Then, try to get the problem down to the smallest possible sample program, ideally a few lines that don't work how you'd expect them to.

At that point, you're ready to get help.  You can post here, or at Stack Overflow, or other similar forums.  Post what you're trying to do, the code you're using, and what you're getting as output.  Try to be really clear.  At that point, if you've done your work, rando's like me from all over the internet will converge and offer advice and pointers.  :-)

But we need to know what the problem is, and you need to have taken a shot at solving the problem first.  Otherwise, no cookie.  Or code.  Or whatever.",1542750892.0
bartabbed,"Chug a red bull and take a little break from the problem, a solution may come to you. Or you can describe the problem, lol ;)",1542752800.0
andyw8,"If it's a bootcamp, aren't there staff there to help you out?",1542755532.0
Earthling1980,"If you're going to be in this field (IT, development, etc) you need to learn how ask good questions. A problem report needs to contain: what exactly you have already tried, the exact error message, what you expected to happen, what actually happened, and steps to reproduce.",1542759270.0
NeckBeard137,What's the problem?,1542755255.0
Lakon_AspX,Stack overflow! ,1542758208.0
babbagack,"lots of people mentioned it, google, ask on your student channels or a classmate like if you have slack or something there.  of course, if you want to ask here, post your code (google formatting in reddit if you want to do code, you basically need to indent 4 spaces is what I do), and post what you did and which part you are stuck on.  best wishes!  also which boot camp are you in, if you don't mind being asked?",1542761942.0
wjaspers,"the problem itself may be as simple as breaking it apart into paths. 
1) what is the desired outcome? 
2) what is the most direct route to get me there? 
3) what assumptions do i have, if any, about my inputs? 
4) what exceptional cases must i consider for this problem to be handled in a robust way? more importantly, do i even need to take them into consideration? 


but i feel lost, stuck. if simple solutions are often the best, why does this problem feel so hard?
dont worry, all of us have been there. 
let it break; follow your stack trace; google the errors; and heavily utilize the language reference.
fortunately, rubys language reference provides lots of example code.",1542763757.0
_Calvin_Coolidge,"Walk through your code line by line, make sure you really understand what all of it is doing.  Double check your variables, make sure you don't have a 5 in place of an S or something dumb like that.  Make sure everything is closed the way it should be, def has an end, if has and end, etc.  Google the error messages, read the error output also, sometimes it's helpful.  

Last but not least you can post your code here.  Helpful internet tools to learn ruby, Learn Ruby the Hard Way, hackerrank, code academy, and I'm sure there are others, but I've had good experiences with these.",1542764526.0
babbagack,"i recommend this method:
https://medium.com/launch-school/solving-coding-problems-with-pedac-29141331f93f

 tldr, Understand the Problem, figure out your Inputs, Outputs (what data types are these), Examples, Algorithm(how do you thing you can map out solving the problem), then you can Code. 

edit: this sub is great cause its ruby, but feel free to venture into /r/learnprogramming as well.  but you are fine here too. ",1542771959.0
zta6pitt,"No shame in asking questions whatsoever.

BUT I'd like to let you know you should very rarely need to resort to actually posting online. In programming there's almost always someome who's had your problem before, or a similar enough one. That person posted on the internet and got an answer. Now all you need to do is find that post.

Ive said before that if somewhere were good enough at googling things they could do my job without knowing how to program. It's obviously an exaggeration but not as much as you might think.

When you're looking for the answer to something programming related you should almost always include the name of the language in your search. And then you can usually copy and paste the first few words of the error message your getting into your search.

I was just writing some ruby the other day after not touching the language for awhile and I was having some trouble. I was getting nil somewhere I didn't expect it. What helped me was to look at the documentation for the specific methods I was using to see what they return and in what cases they return those values. ",1542767375.0
untouchedburn,"Sorry all, I was away from the computer so I couldn't post the code, also the bootcamp is currently online, in 2 weeks i start at the campus.

I've been working on this problem for a few days now, looked all over for the answers but couldnt find anything that helped me, the advisors there gave me tips on what to do but i still couldnt figure it out, so hopefully you all could give me a hand?",1542768614.0
untouchedburn,"`require 'pry'`

`nasa_data = [`

`""Direct Marketing News"" => {`

`""computed_region_cbhk_fwbd"" => 46,`

`""computed_region_nnqa_25f4"" => 2095,`

`""country"" => ""USA"",`

`""domain"" => ""com"",`

`""email_hosts"" => ""`[`dmnews.com`](https://dmnews.com)`"",`

`""location_1"" =>`

`]`

&#x200B;

`# 1. Create a method called company_name that takes in two arguments, an array and a company name.The method must return the entire hash for the given company.`

`# Your code here`

`def company_name(nasa_data, string)`

  `nasa_data.each do | item |`

`if item.key == string`

`puts item[string]`

`end`

  `end`

`end`

&#x200B;

&#x200B;

&#x200B;

`company_name(nasa_data, ""Garmin International"")`

under '# Your code here' is what i have so far, below is the error code i get when i run it in iTerm

‚ûú  nasa-data ruby code.rb

code.rb:187:in \`key': wrong number of arguments (given 0, expected 1) (ArgumentError)

	from code.rb:187:in \`block in company\_name'

	from code.rb:186:in \`each'

	from code.rb:186:in \`company\_name'

	from code.rb:192:in \`<main>'

‚ûú  nasa-data

&#x200B;",1542768992.0
lafeber,"I'm enjoying all the comments here :) My 2 cents:

    def company_name(nasa_data, string)
      nasa_data.each do |item|
        puts item[string] if item[string]
      end
    end
",1542789921.0
SureLetsDoAnother,">My communication with the clients became robot-like, where the robot is limited to just four verbs

Without a doubt, this is one of the most subtle problems to creep into a project over time. Developers will naturally begin casting all of their ideas into CRUD, partially because Rails makes it feel just a little bit ""icky"" to stray too far from the CRUD path.

When CRUD language ceases to be the natural description for a scenario, sticking to that dialect tends to warp the understanding of the concepts that are being worked on. Over time those concepts will continue to warp in the codebase, and what should be intuitive to a newcomer becomes that embarrassing (and confusing!) piece of the project that no one wants to explain or touch.

Mental gymnastics needs to be performed to understand the concept as it is written in the text of the program, but describing it in plain language is disturbingly straightforward.

And then, inevitably, the whole project turns out the same way.

Of course, that can't all be blamed on CRUD addiction, and large monotholic RoR apps have more problems than an overreliance on CRUD.

But it seems like mature, monolithic RoR apps tend to have a lot of the same problems, and ""communication"" based issues like this are prevalent.
",1542789534.0
jrochkind,"I have lately been intentionally moving away from CRUD in my Rails actions, having come to similar conclusions. 

It _does_ make it more of a pain to do routing, you don't get all that Rails magic routing, including the ""just works"" polymorphic routing. I think it's worth it. 

I actually like Rails quite a bit (can tell you plenty of things I don't like about it too). I've been using Rails since 2.0. Before the ""resourceful routing"" stuff.  I was suspicious of the resourceful routing from the start, but I went with it, as the Rails easy path, and as what all the projects I was working on (including collaborative open source) were doing. 

But I've coming back around to my original suspicions, and tried to retrain my brain to build the controller actions and URLs that actually make sense for the app, and deal with the added explicit work for routing and route path. I think it's worth it over all. (It's probably no coincidence that ""REST"" is held in somewhat more suspicion in web dev in general these days). 

CQRS/Event Sourcing still looks like over-engineered confusingness to me though. :)",1542830812.0
Jdonavan,You‚Äôre trying to use double quotes inside double quotes.   ,1542747093.0
sn1de,"Forget about the technology stack for a minute. The first opportunity sounds like you will be working on a product. The second sounds like you will be working on creating client websites. I suspect this will just be billable client work which, worst case, could turn out to be rote work, potentially constrained to a very narrow set of tasks. Are they cookie cutter sites, or are the clients coming to you for something innovative?

Then, forget about what I just said and ask yourself which group seemed like they would be more enjoyable to work with? Who seems like they are more likely to mentor you vs. just getting some work done? Go with those guys.",1542756872.0
surfordie,I think you'll get much more experience at the first internship. ,1542738539.0
ancientmatingcalls,Do which one sounds more appealing to you! Both of them will provide a solid foundation for applying to full time jobs afterwards.,1542733859.0
nyekks,"it's all the same shit. all those technologies are essentially interchangeable, except perhaps the databases.

choose based on the people/companies and how much you like them.

also $285 is per day, right?",1542737126.0
FalseEconomy,"Hmmm, I'm glad to see alternative graphql clients besides githubs quite poorly documented one, but at least the way wee use graphql, this library encourages some pretty bad antipatterns.

Static queries are good, they allow you to do things like static analysis, query whitelisting, and persisted queries, none of which are possible if your query strings are not stable. 

In addition, some of the reasons that one might want this DSL as pitched in this blog post as already built into the language:

- unlike SQL, gql is already composable thanks to fragments. So there's really no argument here
- with skip and include directives, minor adjustments to queries can be made statically in a way that is still analysable etc

Overall I don't understand who this is for. You're throwing away a lot of great tooling and inventing a novel DSL with little discernible benefit, and many drawbacks. I really reject the notion that this is less cumbersome than using strings, strings which in Vs code and Atom are subscribed highlighted, and with the right extensions can behave just like graphiql, with schema based autocomplete and validation, right on your editor.",1542723885.0
sshaw_,"Fun to see how things are translated. `... TypeFragment` to `___ TypeFragment` is nice. But, overall, if one's going to learn a DSL to learn a DSL then the former DSL should offer more than nuanced differences in syntax. Not sure if being in Ruby is enough...",1542760478.0
neotorama,Why would you need this instead of active record?,1542718581.0
lzap,"Sure it is love! It is shiny and new.

Now add and maintain code in production for 10 years and then let's talk :-)

GraphQL is interesting indeed, honestly I prefer RPC-like approach to REST.",1542738170.0
Enumerable_any,"> The applications written in Ruby will demonstrate the ability to handle a high load, which is particularly useful for the fintech industry ‚Äì the interruption of work may result in a serious loss of money for the app users.

Does he really advertise Ruby as ""performant""/""scalable""?",1542712697.0
Tomarse,How would it handle duplicate fields in the header?,1542707978.0
jamie_ca,"Biggest thing that stands out to me is that your get method is calling `puts` which returns nil, you definitely want to be returning that response array. If you need to debug, use `p` (which returns its argument) or use an intermediate variable.

",1542682421.0
jdickey,"Don't use `puts` for `#get`; just return the data.

```ruby
  def get(path)
    # Also, 200 is the status code; it's a number, not a string.
    [200, {}, [""hello from get #{path}""]]
  end
```

To those wiping coffee off their screens after reading the OP: yes, we *were* all this new once.",1542685336.0
gibberishmuch,"Just be sure that you clean up after yourself, native extensions can't be garbage collected, maybe Rust helps the developer out more here than C?",1542708543.0
MyDreamName,"Doesn't look like you can use a connection string with postgres. You can use URI query params or pass those arguments as a hash

http://sequel.jeremyevans.net/rdoc/files/doc/opening_databases_rdoc.html#label-Using+the+specialized+adapter+method",1542662034.0
GreyHorse,"As already mentioned you can use a URI or, alternatively, you can use a Hash like so...

&#x200B;

`parameters = {user: ""x"", password: ""y"", host: ""localhost"", port: 5432, database: ""z"", adapter: ""postgres""}`

`connection = Sequel.connect(parameters)`

&#x200B;",1542663914.0
janko-m,"The closest you can get is using `:driver_options`, which is passed directly to the `pg` gem. You'll still need to convert the string to a hash, but that's it:

    pg_string = ""host=localhost user=x password=y dbname=z""
    Sequel.postgres(driver_options: pg_string.split.map{|s|s.split(""="")}.to_h) ",1542699793.0
rylanb,Thanks for putting this together! Imma tweet this now. Happy to have my local meetup in Boulder on the list!,1542658742.0
442401,"It appears the RSpec core team advise you quoted:
> For new Rails apps: we don‚Äôt recommend adding the rails-controller-testing gem to your application. The official recommendation of the Rails team and the RSpec core team is to write request specs instead.

... is out of date already.

The [example request specs](https://relishapp.com/rspec/rspec-rails/v/3-8/docs/request-specs/request-spec) given in the RSpec documentation will not work with Rails 5+ without the rails-controller-testing gem, although this is not mentioned in the docs. The only place I see it mentioned is in the [Upgrade Note](https://github.com/rspec/rspec-rails#upgrade-note) of the readme.md in the source (and even there, it implies rails-controller-testing is required only for controller specs. I don't consider it fair to expect users of a fresh install to read the upgrade section and so they would probably miss this. Admittedly, if you run the example tests without rails-controller-testing a helpful error message will prompt you to add it to your Gemfile but, in my opinion, the dependency should be made clear in the documents.

It would appear that both Rails and RSpec are advocating moving away from a three floored testing pyramid and dropping integration tests completely, leaving just the ground-floor unit testing and top-floor feature testing. 

 ",1542658937.0
jrochkind,"Does that mean you use a lot of [""integration tests""](https://guides.rubyonrails.org/testing.html#integration-testing)?

It does seem like that they've made ""request"" tests a lot closer to ""integration"" tests, it's not entirely clear to me why have both at that point. (I do still sometimes want to unit-test my controllers... but Rails seems uninterested in me doing that). ",1542646992.0
palkan,"Good question, Jason)

I‚Äôd like to add one more scenario (#3):
testing something that couldn‚Äôt be covered with feature specs, e.g. permissions/accesses: how to test that a user is not able to perform unauthorized action? The ability of doing so should be hidden in the UI, so we need to test the request itself.

And in this case (authorization tests) I use controller specs, not request, for one reason: performance (or speed).

Controller specs faster than request specs, ‚Äòcause we don‚Äôt need to pass through the whole stack, parse parameters and render views‚Äìand we don‚Äôt need all this stuff for checking the 403 status code.

I use requests specs when I want to test the return value (response body) or some tricky params manipulation‚Äìmostly edge cases. Only the basic scenarios (‚Äúgolden/happy path‚Äù) are covered by feature specs.",1542678469.0
sdn,"Omg! I‚Äôve been trying to do this for a while!

I‚Äôll have to try it out - thanks!",1542650637.0
kblks,"Hey, we have a PDF that we have to parse regularly where the actual data that we need is the *background color* of each table entry. Is there a way to accomplish this with your library? Thanks.

https://i.imgur.com/pq3OZUD.jpg",1542664939.0
442401,"    def non_zero_rand(range)
      begin
        n = rand(range)
      end until n != 0
      n
    end
    
    non_zero_rand -7..7  #=>  <a non-zero random number> ",1542598342.0
rubypastebin,hacked [https://pastebin.com/AF2UmJsC](https://pastebin.com/AF2UmJsC),1542614690.0
Kendos-Kenlen,Good occasion to test serveless! Thank you!,1542628564.0
stanislavb,Looks promising. Could you help me find the pricing page or something please?,1542749315.0
WrinklyTidbits,Thanks for your work! I've been reading into serverless solutions and have been planning on reading more about FaaStRuby,1542594462.0
mariozig,üòç,1542596444.0
ylluminate,What kind of action and integration are we seeing with this and Opal?,1542600545.0
jdickey,"*Seriously* awesome. This is just what I was looking for 6 months ago. I'm going to give a lot of thought to how to start integrating this into our (Hanami) app.

> The idea is to add all Digital Ocean's regions based on demand.

SGP1 would be appreciated; thanks!

",1542600902.0
seainhd,"This is pretty cool, would recommend a one line config option to make the api match a RAILS api.

Make the Params action Params.

Make the render method use rails render methods.

It will help you with adoption from ruby folks so they instantly know how to use the API without much guessing.",1542602713.0
ciesorius,"Delete all unneeded comments at first, it will be much easier for you to find that error yourself",1542525842.0
three18ti,"This is the error that pops up, when?  Rubocop?  RSpec?  Plackup?

I agree with /u/ciesorius, lose all the comments (it is in source control, right?) this appears to be your only actual code:

    Rails.application.routes.draw do
      root 'cars#index'
      resources :cars
    end

So it's highly likely that that the error isn't here...",1542530055.0
BumpyBallFan,"I just tried your file and there is no syntax error (I was thinking about Unicode characters messing up the file).

I think what's in your `config/routes.rb` is not in sync with what's in `/tmp/build_45d3283f2575f3c9051ab0d39512de1d/config/routes.rb`. Can you show the `/tmp/` one?",1542525942.0
wjaspers,blame spring; it probably cached some incomplete file. start rails with DISABLE_SPRING or pull it out of your gemfile,1542553106.0
manys,"You should have asked this in /r/rails, but what version of rails is this?",1542576200.0
r-obert0,"it is available on rubygems as well, gem install pry-auto\_benching.rb",1542468741.0
BumpyBallFan,"So, that first example works but doesn't close the connection.

I don't know much about sockets in ruby but for fun I tried to fix it. So `readline` and `read` are also blocking.

Also, I don't understand why there are two `client.close` in the forking example, I would be very interested to know the reason.

About the fibers examples. The first fiber example is neat, thanks for sharing. Also you are using both the `async` gem and the `async-io` gem.

Anyway, interesting read, `async-postgres` and `async-http-faraday` seems like such obvious ideas now that I think about it. Seems like everybody will benefit a lot from those when they are stabilized.",1542445728.0
bmorearty,"I love this. The fibers solution is spectacular and the async wrappers might be just what I've been looking for. I'm on a large Rails project that needs to make async calls to services over https. I don't want to have to restructure the app or make it thread-safe, since it's huge. (Even in smaller apps I don't like using threads because bugs are so hard to reproduce and fix.)

The main difficulty is we have our own internal HTTP client wrapper that implements a lot of behavior that's useful for service calls, such as configurable retries and circuit-breaking. But it uses an adapter pattern so it might just be a matter of adding an adapter for Async::HTTP.

As a minor aside, I agree with the comments that it would be nice if the code used 2 spaces with soft tabs, not hard tabs configured to look like 2 spaces. The Ruby community has settled on this convention for a long time. But honestly this looks so useful to me that I'd probably use it even if it uses 11 spaces with a few tabs thrown in.",1542610183.0
jrochkind,"> We show that fibers require minimal changes to existing application code and are thus a good approach for retrofitting existing systems.

In my view, this hasn't been the actual experience in ruby.  For a while EventMachine was very trendy to talk about; it no longer is because it turns out that trying to use it for concurrency ended up ""infecting"" your app, requiring that almost all IO operations use ""special"" tools. 

I believe that when EM was trendy, the argument was, sure, but you can just swap out all that IO without changing the _rest_ of your app. But it just didn't work out that way, because the parts of your app that _did_ need to be changed ended up not very well bounded. It caused problems with dependencies that did not use these special tools, and requiring all your dependencies to be on the same page, as it were, with the EM ecosystem, and making it hard to write shared dependencies that would work with ""regular"" or EM code (or yet another different non-EM choice of evented server).   It just ended up being a lot of unsustainable work -- when the existing ruby ecosystem was not based on an evented model, and the ruby stdlib didn't ""bless"" (let alone require) any particular evented implementation to get everyone on the same page.  Which is why we don't hear much about EM anymore.  

This article does not succesfully convince me that anything is different now.",1542467645.0
nullcifer,"I know this is a silly thing to complain about but I thought the indentation looked a little strange in the post and then when I looked at some code examples I saw they're using hard tabs [https://github.com/socketry/falcon/blob/master/examples/beer/config.ru](https://github.com/socketry/falcon/blob/master/examples/beer/config.ru)

&#x200B;

Have you thought about adopting a more idiomatic Ruby style, as in 2-space soft tabs? I know for a lot of Rubyists code like this is pretty off-putting (as in I just showed it to some other Rubyists who agreed)",1542471364.0
shevegen,Elegant example.,1542638312.0
keyslemur,"As this talk is \_super\_ image heavy, I've decided to break it into multiple parts and fill out some of the prose a bit more. Never fear though, I'll be done publishing all the parts this weekend.

Everything will be linked from each article in a table of contents with a bottom navigation to proceed or go back to the last section. I'll also only be posting this link on Reddit so as to not spam things.",1542436376.0
BumpyBallFan,"Annoying pop-up but posted by Matz on Twitter and quite interesting.

https://twitter.com/yukihiro_matz/status/1063543477068165120",1542425619.0
zverok_kha,"It is a bit sad for me to see, what, 3rd article this week to mention the same list of changes (and I am afraid to even start thinking how much of the same ""quality content"" we should expect closer to Christmas and immediately after it), without the slightest attempt to look at something besides the super-obvious. I believe it could've been written without even trying Ruby 2.6 or looking into the ""source material"" (Ruby source/docs/core discussions), just rephrasing previous blog posts of other authors.

I really feel that with this amount of information, it could be done in half-a-page fashion, like this:

> Ruby 2.6 news:
>
> * Endless range: `(1..)`
> * `Enumerable::ArithmethicSequence`: `(1..4).step(5)` gives you a new kind of object, that has `.last` method _(note: that's not the full explanation, but I am just telling what author says)_
> * `Hash#merge` now accepts multiple arguments
> * Number-conversion methods like `Integer()` now have option `exception: false` to not raise on invalid input, just return `nil`
> * `Random.bytes(num)`
> * `Range#%` as an alias for `#step`
> * ....

This ‚Üë is easier to read and provides _exactly_ the same amount of information.

Some examples of what questions can emerge to the reader **immediately**, and have no answers:

* Endless range: what would `Range#end` return? What's the effect of `Range#each`?
* `Enumerable::ArithmethicSequence`: what is it? Kind of Enumerator, or a separate class? Or module? What it is for, only `last` method? Can it be created by my own code, without using `Range#step`?
* `Hash#merge`: behavior on duplicate keys?

...and so on. Links to docs (already [rendered](https://ruby-doc.org/core-2.6.0.preview2/Enumerator/ArithmeticSequence.html) on ruby-doc)? Nope. Links to original discussions on bugs.ruby-lang.org, in order somebody is interested in a justification of features? None. Links to other articles on the same topic? Nada. 

""Let's do it quickly and gather some low-hanging audience fruits, while the topic is hot!""",1542463440.0
PIAJohnM,"I'm disappointed at how slowly ruby is evolving. Even C++ is evolving much, much faster with significant new features with every release, and a new release every 2 years. Javascript also is out of sight with its improvements. Ruby is falling behind -- we don't even have hash destructuring yet, or async/await or a proper `import/export` system. It's getting embarrassing.",1542436229.0
interactionjackson,graphql.org is all you need to start. then find the ruby libs after you understand what‚Äôs going on at the link above ,1542419752.0
sshaw_,"Write a program the sends users notifications if someone comments on one of their GitHub gists or unstars their repository. Use [GitHub's v3 REST API](https://developer.github.com/v3/), then rewrite it using [their GraphQL API](https://developer.github.com/v4/).

Then write a GraphQL implementation of the [Reddit API](https://www.reddit.com/dev/api) for say for subreddits, users and search. 

Then try fixing some bugs with [graphql-ruby](https://github.com/rmosolgo/graphql-ruby/issues). 

",1542424509.0
stanislavb,"Find a way to use it. I forced myself to replace some of the API endpoints of www.saashub.com from REST to GraphQL. Having a specific goal helped a lot. You may need an evening or two to go through the docs. After that everything is smooth.
To me, http://graphql-ruby.org/ guides were useful and enough. (although some parts were outdated compared to the latest version of the gem) ",1542436561.0
codeprimate,"~The first example is inefficient because the compiler can only optimize recursion if the return is a single function call.~

If you rewrite it like this, it is more efficient.

    def fib1(n)
      return 1 if n <= 2
      return fib1(n - 1) + fib1(n - 2)
    end

    def fib2(n)
      return fib2_helper(n,0,1)
    end

    def fib2_helper(n, n1, n2 = nil)
      if n == 0
        return n1
      else
        return fib2_helper(n-1, n2, n1 + n2)
      end
    end

    def fib3(n)
      return 1 if n <= 2
      first = 1
      second = 1
      until n < 3
        fibonacci = first + second
        first = second
        second = fibonacci
        n -= 1
      end
      fibonacci
    end

    puts ""Non-tail-call recursion""
    start_time = Time.now
    print fib1(40)
    puts ""  [#{( ( Time.now - start_time) * 1000.0 ).round(3)}ms]""

    puts ""Tail-call recursion""
    start_time = Time.now
    print fib2(40)
    puts ""  [#{( ( Time.now - start_time) * 1000.0 ).round(3)}ms]""

    puts ""Loop""
    start_time = Time.now
    print fib3(40)
    puts ""  [#{( ( Time.now - start_time) * 1000.0 ).round(3)}ms]""

    Non-tail-call recursion
    102334155  [10974.51ms]
    Tail-call recursion
    102334155  [0.018ms]
    Loop
    102334155  [0.01ms]",1542406946.0
moomaka,"The performance difference has nothing to do with recursion, well, maybe a little to do with recursion but it's in the measurement noise. The real reason is that your recursive example is O(2^n) (google Big O Notation). Basically the number of operations it performs is 2^n where n is the input, for large n, this is a really big number. Intuitively if you walk through the algorithm this should be clear, let's try it with a small number:

                      fib(4)
                    /        \
             fib(2)            fib(3)
            /      \          /      \
       fib(0)     fib(1)  fib(1)     fib(2)

So with an input of 4, we had to perform 7 computations, you can repeat this with bigger numbers and it'll approach somethings like 2^n (I think technically it's like 1.6^n but it's a big number which is all that matters). Basically for each extra n we add a 'base layer' to this pyramid that is twice as wide as the existing one.

Your loop based version is O(n), it just goes through once. Which isn't really worth drawing, there is a loop that starts at n and reduces by 1 each time, it executes about n times.

So for example, if n = 42 then 2^n = 4,398,046,511,104 which should explain the waiting. 

",1542429132.0
kobaltzz,"You can speed up the calculations with using memoization. An example would be this where your `calculate` method is the entry point and you call `run_fibonacci_calculation` within this method. It uses instance variables to ""store"" the previous calculations so they don't need to be recalculated.

```ruby
class Fibonacci
  def calculate(num)
    return 1 if num < 3
    run_fibonacci_calculation(num)
  end

  private

  def run_fibonacci_calculation(num)
    @run_fibonacci_calculation ||= {}
    @run_fibonacci_calculation[num] ||= calculate(num - 1) + calculate(num - 2) 
    @run_fibonacci_calculation[num]
  end
end

fibonacci = Fibonacci.new
puts fibonacci.calculate(40)```",1542459742.0
BurdetteLamar,"Check out my post at [https://dev.to/burdettelamar/the-square-root-of-5-12gk](https://dev.to/burdettelamar/the-square-root-of-5-12gk).

Note especially the very interesting comment by Aleksei Matiushkin.

.",1543189914.0
keyslemur,You may enjoy Binet's formula: https://gist.github.com/topher6345/001d11fdf21b5f2f969e,1542396028.0
non-rhetorical,"Other guys are being a little.. whatever. Ignore.

Yes, you have discovered an instance of two general rules that are useful to know: 

1. Any recursive function can be written non-recursively. 

2. Recursion is slow. Every time you go ‚Äúup the stack,‚Äù you‚Äôre adding yet another layer of memory usage. You don‚Äôt begin discarding layers until you go ‚Äúdown the stack.‚Äù Can you see why, or do you want me to explain? ",1542418999.0
BumpyBallFan,"I see this job ad everywhere, it's basically spam at this point. Also it's not Ruby, it's Elixir. Also this subreddit is not for job ads",1542377846.0
FalseEconomy,Lol what even is this post,1542365171.0
tomthecool,"There was never a ruby version 1.9.8.

There was a version 1.9.3, released in October 2011; then (after a few `1.9.x` patch releases) 2.0.0, released in February 2013. The latest stable ruby release is 2.5.3. Version 2.6.0 will be released in December (2018).

Also, *most* older ruby code is forwards compatible. Lots has been added to the language, but most of what you've learned before still applies.

If you'd like some help, you'll need to be a little more specific than ""ruby doubt; everything changed"" ;)",1542363041.0
telmesweetlittlelies,...when the Fire Nation attacked?,1542365456.0
BumpyBallFan,"So basically multi-threaded brute force I guess.

BTW make sense but `digest` is actually a C extension https://github.com/ruby/digest/blob/master/ext/digest/sha2/sha2.c

BTW I'm at 150k SHA256 a second on a Macbook Pro.",1542357099.0
nateberkopec,"Oh my, hello. This was [created and tweeted](https://twitter.com/nateberkopec/status/1062782741857648640) by me as something of a joke, as I am a video gamer and enjoy tier lists, but also I'm a consultant specializing in Rails performance. 

The tiers are based on my experience as a consultant and seeing 100+ real-world production Rails apps. It's for grading yourself against your peers, C of course being the ""average"" (though I think still on the ""too slow"" side of things).

> Do we accept that <70ms is S Class? Because to me S should be <30ms. Or even preferably 20ms. Which is currently not possible unless it is a Hello World Rails app.

And that's the way it will be until Ruby 3x3 comes to pass (which, judging by the very preliminary work on the JIT, may actually happen). You can't ""write better-er Ruby"" to get to a 30 ms response. A 30 ms response is, more than likely, a toy app, an extremely simple JSON-serving API, or a 404/cors preflight/etc. Consider also that the average database query takes 1-5 ms, and most applications perform 10-20 queries per request. 

And what would be the point of reducing an applications response time from 70ms to 25ms? I [delve into this question quite deeply on my blog](https://www.speedshop.co/2017/07/11/is-ruby-too-slow-for-web-scale.html), but the gist is: all you're doing is reducing your EC2/server costs by a factor of 2. Which, while good, isn't worth the kinds of gymnastics you would have to do as an app developer to get there.


",1542378812.0
midasgoldentouch,What is this measuring? Is it first to paint?,1542355405.0
timlawrenz,Generalizing a set of numbers seems not helpful to me. Is there a framework defining the requirements that I am missing?,1542370006.0
i_dont_like_reddit_6,Source?,1542377981.0
fedekun,What makes this official?,1542378556.0
jacksonmills,"I once worked at a company that had some page response times that were greater than 30s.

What grade is that?",1542385521.0
ksec,"I am wondering how the Rails communities think of this. Do we accept that <70ms is S Class? Because to me S should be <30ms. Or even preferably 20ms. Which is currently not possible unless it is a Hello World Rails app.

&#x200B;

Shouldn't we aim higher?",1542353863.0
BumpyBallFan,"You can pass any valid imagemagick flag to `variant`: http://www.carlosramireziii.com/what-options-can-be-passed-to-the-active-storage-variant-method.html

But those parameters seems pretty complicated: https://stackoverflow.com/questions/41959355/how-can-i-combine-these-commands-to-achieve-circular-crop-in-imagemagick

So why not just use CSS with `border-radius: 50%`?",1542351228.0
janko-m,"As /u/BumpyBallFan said, crop the image in the normal rectangular way, and then round it up with CSS. The circular component can be considered presentation logic; if you ever decide that you want to switch to rectangular avatars, you won't have to reprocess the images.",1542359510.0
keyslemur,"I used the Twitter link on this one so you could check out the hashtags on it and see some of the fun that went down. Somewhere north of 5000 lemur stickers were on the loose, and quite a few found good homes and new friends.",1542352099.0
BumpyBallFan,"Nice illustrations, especially pictures of DHH and Matz. Seems like it was made for Keep Ruby Weird.

Anyway I personally think reduce often makes code harder to understand that it needs to be.",1542378670.0
coldnebo,"format and presentation on mobile aren‚Äôt great.

TL;DR: interesting topic, but way too much cute. Should have led with:

all_true = data.map(predicate).reduce(:&)

",1542360966.0
yorickpeterse,"Looking at the source code this appears to contain nothing more than a tokenizer, and a parser, with no interpreter to be found anywhere.",1542318023.0
BumpyBallFan,"Also interesting, a ruby inspired language in Go: https://github.com/goby-lang/goby",1542378835.0
shevegen,"I would not put too much thought into this.

Why not? Because I think it is like one of those
projects that will be abandoned quickly. Which is
a common situation for many projects hosted on MS GitHub these days.",1542639170.0
realntl,Shameless plug: I wrote an actor library for ruby: (https://github.com/ntl/actor),1542294613.0
aemadrid,"Not sure that will ever be the default but there are plenty of implementations:

* [Ruby::Concurrent](http://ruby-concurrency.github.io/concurrent-ruby/master/Concurrent/Actor.html)
* [Celluloid](https://celluloid.io/)",1542298248.0
,[deleted],1542302762.0
ioquatix,"My experience with actors is that they are not that different from global state, and have similar problems.

Sounds like you might find https://github.com/socketry/async useful. Rather than being object/function based, it's more task/method oriented.",1542323724.0
ahmad_musaffa,I've migrated from Active Record to [rom-rb](https://rom-rb.org/) which uses Sequel in its rom-sql adapter. I'm pretty much happy that I've made the move. Rom-rb enforces clean architectural patterns.,1542330840.0
shevegen,"Here is Takashi's most recent slide:

https://speakerdeck.com/k0kubun/rubyconf-2018?slide=80

The most important thing is this, in my opinion - he wrote that if you experience any slowness due to jit, even more so when you may feel that this should NOT be that way, please do and provide extensive information on the ruby bug tracker at:

https://bugs.ruby-lang.org/projects/ruby-trunk

Ideally by giving as much information as possible. Most importantly if you already may have some benchmarks in use, and the jitted code performs slower.

While I am not as optimistic as Takashi in regards to making this very fast before the xmas release (but I am perfectly fine with improvements in 2019, too), I think the key message really is that people should give feedback on the bug tracker, rather than just do twitter-orgasms without much information how to reproduce ... :P

(Although I understand it partially because twittering is easier than providing lots of useful information in a bug tracker, but if you complain about jit not being fast, yet don't give feedback, how should the ruby core team improve on it?)",1542292681.0
lordmyd,"2.6.0-preview3 with JIT is a lot slower than 2.5.3 at a fairly common task - parsing a log file. To reproduce, create a 19Mb Apache log file and run this script:

`IO.foreach('logs1.txt') {|x| puts x if /\b\w{15}\b/.match? x }`

Factoring out startup time, my `time` benchmarks show Ruby 2.6.0-preview3 to be 60% slower than 2.5.3. Without JIT both Rubies were identical when startup time was factored-out. One contributing factor the the JIT version's poor performance was a very long GC pause.

Like most Ruby fans I would love to see Ruby's performance beefed-up but if, as with JIT, it comes at the price of increased memory usage then it's a Pyrrhic victory considering the typical complaints about Rails memory bloat. Yes, I know Ruby != Rails but still.",1542292654.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/happyface] [\[r\/ruby\] RR 388: RuboCop (and Emacs I guess :-)) with Bozhidar Batsov | Devchat.tv](https://www.reddit.com/r/happyface/comments/9x9mbv/rruby_rr_388_rubocop_and_emacs_i_guess_with/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1542273258.0
PM_ME_RAILS_R34,"Cool writeup, but does anyone know _why_ Draper is leaking memory like this? From an equality call?",1542291199.0
zverok_kha,"Wow, super-cool story. So many parties and ""cultural preferences"" that could be easily blamed, but probably the root of the problems is much deeper than some library's approach to code. The whole mutability thing is doomed :)",1542275247.0
jrochkind,Ugh. Can Draper be fixed somehow? It does not seem good that it effects ActiveRecord code in contexts that are not even using draper decorators at all. ,1542290452.0
hartator,Interesting. We have the same issue to profile memory. It‚Äôs not easy to do. ,1542298835.0
nakilon,"Also the Ruby stdlib CSV module is leaking.

UPD: oh, I forgot the /r/ruby community is retarded. If you downvote me for telling about this bug to you, I won't tell you how to fix it, lol. Suffer.",1542283614.0
abughat,FINALLY enumerable to_h and variadic hash merges fuck yeah,1542257634.0
losangelesvideoguy,"So the modulo operator works on Enumerables now and it still hasn‚Äôt occurred to anyone that `/` should be an alias for `String#split` smh
",1542236531.0
nakilon,"`Hash # to_h` is ugly.  
`Range # %` is absolutely ugly.

Ruby becomes more ugly every year.",1542266719.0
zitrusgrape,https://rubyconferences.org/,1542222905.0
BumpyBallFan,Nice!,1542216457.0
_huydinh,"    Simple Geocoding by IP Address
    Given a User model with known IP address, automatically fetch coordinates and store in lat and lon attributes:

    # app/models/user.rb
    geocoded_by :ip_address, :latitude => :lat, :longitude => :lon
    after_validation :geocode
‚Äî http://www.rubygeocoder.com

That said, I don't think using the IP address to determine someone's (more or less) exact location works well for your use case: The distance between what my home IP address resolves to and my actual location is almost 8 km (5 miles). If I use my phone's IP address, it's 8 km, too, but in the other direction. That's without considering things like proxies, VPNs etc.

If you want the user's location, you really should use client-side `Geolocation`. A super easy way would be to populate input fields (they can be hidden) with JavaScript code that's being run when the document is ready. Something as simple as this (using jQuery for simplicity):

```
navigator.geolocation.getCurrentPosition((position) => {
  $('#latitude').attr('value', position.coords.latitude)
  $('#longitude').attr('value', position.coords.longitude)
})
```

This doesn't consider the client denying access to their location. See [1] for the `Geolocation` documentation.

With latitude and longitude determined through the Geolocation API, when you submit the form, you can just write those values to the database.

/edit: Clarification.

[1] https://developer.mozilla.org/en-US/docs/Web/API/Geolocation",1542216179.0
sshaw_,"Good idea. I've had this problem a lot too. Will be using this!

Having the ability to serve a local image would be nice, often times a product or profile will have a generic, default image. 

Maybe an option to suppress HTTP exceptions..? ",1542204753.0
91juhwang,Nice! Thank you. Any plans for Ethereum?,1542198899.0
ivanraszl,"Do you have this implemented somewhere?

Do you have instructions on how to implement it on ruby on rails site? What are the steps?",1542350546.0
BumpyBallFan,"Neat, BTW most gems like yours automatically defaults to using env variables so no need for `Strike::Client.use_environment_variables`.

> Strike is an easy to use, stripe¬Æ-like API for Lightning.

Yeah, even the API looks the same :D",1542379368.0
senj,"> Does this mean that the actual act of downloading the XML feed content from the internet is untested? Yes. That‚Äôs a downside, but I think it‚Äôs a small one and I prefer that downside over the downside of having non-deterministic tests.

This doesn‚Äôt have to be an either-or thing. In fact, it probably shouldn‚Äôt be. 

This approach lets you test that you can parse the response you expect, but is that *all* you should be testing? The infrastructure code that fetches that XML should not be left untested, and you shouldn‚Äôt ‚Äúlive with that downside‚Äù. 

Unit test your parser. Integration test your download workflow. *Deterministically* missing bugs from a lack of integration testing is not a virtue. ",1542169735.0
jrochkind,"I think that's a perfectly good solution. But this isn't the only alternative to non-deterministic tests, WebMock/VCR etc give you completely deterministic tests! They do give you some more tooling/infrastructure to deal with though. 

But yeah, if you can take the network access out of the responsibility of a certain class, it's almost _always_ a good move. 

I don't think you are always left with _nothing_ that you want to test where WebMock and VCR could come in handy (although in this case I agree there's probably no need to test standard http tools that are already well-tested elsewhere) -- but always good to look for a way to factor the responsibility out before just reaching for VCR/WebMock, it gives you a better design generally not just easier testing. ",1542166567.0
BumpyBallFan,Yeah I would prefer using VCR / Webmock instead of having to change the source code to make testing easier,1542379540.0
PeteMichaud,"Lots of Rubyists in Austin, and I assume Dallas as well. Waco is between those, and the drive is not trivial, but also not so far that you couldn't make it a day trip for a conference or meetup.",1542136538.0
midasgoldentouch,"In Houston, not Waco, but welcome to Texas! It's a bit cold now, but you can get some chili to warm up!",1542133538.0
RailsIsAGhetto,Austin yo.,1542178267.0
ezekg,"Not from Waco, but Rubyist from DFW checking in.",1542325848.0
codePolitics,Sweet! ,1542237856.0
yxhuvud,Block support for `to_h` seems nice.,1542105829.0
pantsu2,"Wow I‚Äôm super hyped! Matz mentioned and thanked me in his opening keynote at Rubyconf LA just an hour ago.

https://imgur.com/a/BLtslTV",1542137629.0
zverok_kha,"Nobody has noticed `Range#===` switched to use `cover?` instead of `include?` :(

Fought for this change for several years!",1542200368.0
jrochkind,"`filter` is popular in other languages, but now we have `filter`, `select` _and_ `find_all` synonyms, and somehow whichever one I get used to will be the one whatever project I am currently working on has a rubocop-enforced styleguide forbidding. 

I still think `then` as an alias to `yield_self` is a bad idea, becuase it does _not_ have the same semantics as promises. Existing ruby promise implementations now become an over-ride of a stdlib `Object` method. Thought it was a bad idea, along with everyone else, the last two times it was discussed on reddit, but I guess Matz disagreed. ",1542125536.0
lzap,"Having a C compiler in a production machine/container is a security no-go. Not sure about MJIT, the rest is cool tho.",1542144736.0
tracychavez,"Very cheerleader. We could use more objective reviews. E.g., I've seen reports of no speed improvements with the JIT. And it's utterly under-documented and difficult to use.

&#x200B;

Apart from that and the not-too-useful infinite ranges, all the ""what's new"" looks like additions to API's: convenience functions and accessors. I.e., no real improvements to the language. Simple convenience synonyms that people have long implemented themselves.

&#x200B;

I wish that there were API deletions, deprecations, and fixes: it's an untended garden that just grows and grows.

&#x200B;

And secondly, that the language itself actually catches up to the modern era with a public roadmap.",1542139269.0
allcentury,Looks great,1542107097.0
sabat,"Good info, but my god that guy needs an editor.",1542142066.0
jdickey,Bad link; try again? 5 tries in 4 browsers; no joy.,1542094220.0
fiveguy,"Fixed your formatting:

    require 'bundler/setup'
    require 'net/http'
    require 'uri'
    require 'twitter'
    
    module GetTweet
      class Error < StandardError; end
    
      def self.catch_tweets
        client = Twitter::REST::Client.new do |config|
          config.consumer_key = ""LULULULULULU""
          config.consumer_secret = ""LULULULULU""
          config.access_token = ""LULULULUL""
          config.access_token_secret = ""LULULULUULU""
        end
    
        # getting all tweets in a hashmap with ""mention"" without retweet in option timeframe
    
        @tweets = client.search(""#mysearchrequest -rt"", since: ""2018-8-27"", until: ""2018-11-7"")
        @sorted_tweets = @tweets.sort_by {|tweet| tweet.created_at}
        @sorted_tweets.uniq.each do |tweet|
          @tweet = tweet
          puts @tweet.full_text
        end
      end
      catch_tweets
    end 
    
and

    require 'net/http'
    require 'uri'
    require_relative 'get_tweet'
    
    INSTANCE_URL = 'https://LULULULULULU.de/posts.json'
    API_USERNAME = 'LULULULULULU'
    API_KEY = 'LULULULULULU'
    
    def self.send_request
      url = URI.parse(INSTANCE_URL)
      request = Net::HTTP::Post.new(url.path)
      request.set_form_data({'api_username' => API_USERNAME, 'api_key' => API_KEY, 'title' => ""Neuer Post"", 'topic_id' => 8, 'raw' => ""#{tweets}""})
      http = Net::HTTP.new(url.host, url.port)
      http.use_ssl = true
      response = http.request(request) 
      puts response.code 
    end
    send_request 
    ",1542056991.0
fiveguy,"You're on the right track. You could store those URLs in an array, check to see if the URL is in the array, and if not, post it to discourse. If you leave this running for very long, that array could get very large, so you probably want to address that.

Also consider that your Twitter api call has a ""since"" param. I'm not going to look up Twitter's docs for you, but if that allows you to send a date time instead of just a date, you could do this:

    @@last_search = nil

    def self.catch_tweets
      ...
      client.search(""#mysearchrequest -rt"", since: last_search, until: ""2018-11-7"")
      @@last_search = DateTime.now
      ...
    end

Assuming that @@last_search gets formatted in the way Twitter wants it (if not, [learn how to format datetimes](https://ruby-doc.org/stdlib-2.3.1/libdoc/date/rdoc/DateTime.html#method-i-strftime)), and assuming you don't care about thread safety.",1542058027.0
BumpyBallFan,"Wouldn't it be easier to use jbuilder to generate the XML files and then use generic encryption on the text file, e.g. using `ActiveSupport::MessageEncryptor`",1542062413.0
zverok_kha,"(Sorry for spamming! Second post in a day could be too much for /r/ruby, but the news are funny.)",1542028141.0
cavinkwon,"in crystal [src](https://github.com/crystal-lang/crystal/blob/c0a6716a343fb50ae3e389edee4e09e550f4df54/spec/compiler/parser/parser_spec.cr#L356)

    [10, 20, 30].map &.modulo(3) #=> [1, 2, 0]
    [1, 20, 300].map &.to_s.size #=> 1, 2, 3
    [[1, -2], [-3, -4]].map(&.map(&.abs)) #=> [[1, 2], [3, 4]]
    [1, 2, 3, 4].map &.**(2) #=> [1, 4, 9, 16]

I hope these are possible in Ruby.",1542077592.0
realntl,"I'm kind of torn. On one hand, I think this is pretty neat. On the other hand, I'm imagining myself buried in unintelligible code that overindulges in ""functional"" tricks.",1542035759.0
coldnebo,"is this the originating issue?

https://bugs.ruby-lang.org/issues/6284

",1542038833.0
matheusmoreira,That's seriously cool.,1542029585.0
Schrockwell,"I have so many questions. Would this support procs with two or greater arguments, and what would the syntax look like? Would it only work for procs, or for anything that responds to #call? Why have both << and >>? Reading right-to-left seems weird. Can the chains be split across multiple lines for readability?",1542034436.0
philpirj,"But do we really need a special operator for this?

    class Array
      def to_proc
         -> (arg) {
           inject(arg) { |arg, proc| proc.call(arg) }
         }
       end
    end

    square = ->(x) { x ** 2 }
    half = ->(x) { x / 2 }

    [3, 30, 300].map(&[square, half])
    => [4, 450, 45000]
    [3, 30, 300].map(&[square, half].reverse)
    => [1, 225, 22500]",1542320419.0
BumpyBallFan,"Ruby bug: https://bugs.ruby-lang.org/issues/6284

So, same, not merged but it's interesting. Though I don't see any usecase I would have.",1542029006.0
aarkerio,Is that similar to the thread macro in clojure?,1542044229.0
jb3689,"Will it work with anything responding to `#to_proc`? For example could I do (assuming these were singleton methods):

    ["" hello "", "" world ""].map(&String.method(:rstrip) >> String.method(:lstrip))

Would also love to see it work across lines similar to Elixir's pipe:

    ["" hello "", "" world ""].map(
      &String.method(:rstrip) 
      >> String.method(:lstrip)
    )",1542045963.0
ksec,Why is it suddenly so have so many pending changes approved? ,1542096377.0
lzap,"Exactly why I am excited about GoLang. They won't bloat it, they said this pretty clear multiple times.

I've been doing Ruby for over 8 years and I still love it.",1542051257.0
drx3brun,"So basically:

    ""data.json""
      .then(&File.:read)
      .then(&JSON.:parse)
      .map(&Product.:new)
      .then(&Product.:import)

",1542051953.0
BumpyBallFan,"Seems like Matz approved but is thinking about the syntax: https://bugs.ruby-lang.org/issues/13581

Also it's basically the same as `File.method(:read)`, and `self.method(:acceptable_event?)` (to map your examples)",1542020164.0
Jonathan_Frias,"I'm not sure if I like that syntax.

Is this gonna be a thing?

    foo = &File.:read
    
    foo.call('bar')
",1542037929.0
menge101,"If it merged today, what version would it be available in?",1542043802.0
shevegen,"The syntax isn't pretty ... I don't have a good alternative though. :(

",1542206442.0
pabuisson,">That places Agoo at about 85 times faster than Sinatra and 1000 times faster than Rails.

I don't get it. Is Agoo supposed to be a HTTP server or a web framework? I don't understand this comparison, makes completely no sense to me.",1542028504.0
cheald,"Static files throughput is a fool's statistic for your app server. Serve those with your reverse proxy, which should be a proper battle-tested webserver.

If the relative speed of your _app server_ is an actual problem in your app, you've gone past the point that Ruby can take you.",1542043439.0
zitrusgrape,"so now we have

- puma
- falcon
- agoo

next move, rack written in c",1542028060.0
coderhs,Not disheartening the gem. But in the README it says to serve static sources at 100k per second. Isn't nginx or Apache better when it comes to static files? ,1542029015.0
iconoclaus,For anyone wondering how to set it up for rack based apps: http://www.ohler.com/agoo/doc/misc/rails_md.html,1542065212.0
mperham,"It's hard to believe that it'll be any faster than puma or passenger for normal Ruby apps.  Most real app performance is 95% app code; there's only so many microseconds to be shaved these days, no?

I like that he is trying Tidelift for sustainability.

https://github.com/ohler55/agoo#support",1542083162.0
knx,"Great claim, any easy way to integrate this in rails and benchmark on heroku? ",1542014388.0
zitrusgrape,so how I can use this with rails/roda/sinatra?,1542044711.0
swrobel,Anyone know about HTTP/2 support?,1542074465.0
senj,"This is *preeeetty* awful. Anyone who POSTs to your endpoint can exert control over what method gets called, in a kind of demented method call version of SQL injection. 

Instead of routing all your webhook calls to some generic `webhook` method, why not....route different endpoints for different services directly to the relevant `handle_` methods directly? Use a simple before filter to abstract out the basic json parsing stuff. Don‚Äôt reinvent the routing wheel. Handle the various event types in a business logic layer, not your controller. ",1541997072.0
this_is_not_nil,"I think the case-statement is much prettier, and it does not use send, but I guess this monstrosity is to be expected from a self-described ""Rockstar/Software Engineer. Web Artisan"".",1542013372.0
i_know_sherman,"This is a use case I far prefer using an event listener pattern, preferably with some middleware to handle plumbing like event persistence/idempotency. This mechanism is easy to test, safe, and easy to debug in my experience.",1541996063.0
jrochkind,"I guess the perceived advantage to making your handler methods _not_ controller action methods is... simpler routing?

Lately, in general not in webhooks context, I'm just accepting having (potentially many) non-""Resource"" routes, and explicit routing. I find it actually leads to simpler, more comprehensible and maintainable code. I think the Rails ""magic"" (ie write very little code) ""Resource Routing"" stuff ends up being more trouble than it's worth beyond CRUD. 

Some people switch to something non-Rails because of stuff like this, but you can also just not use some of the higher-abstraction stuff in Rails, you don't have to use it just because it's there. 

senj rightfully points out that this example as written is a security vulnerability waiting to happen; at least you need a whitelist. ",1542030160.0
drx3brun,"Aside from the merit, why do you put the successful path outside the exception boundaries? Isn't that simpler:

```
def webhook
  event = JSON.parse(request.body.read)
  case event['type']
  when 'invoice.payment_succeeded'
    # handle success invoice event
  when 'invoice.payment_failed'
    # handle failure invoice event
  end
  render :json => {:status => 200}
rescue Exception => ex
  render :json => {:status => 400, :error => ""Webhook failed""} 
end
```",1542096733.0
dekksh,"Both work well with ruby having standard IDE functionality, it's not so much ""best plugin"" as how you customise each to suit how you work. Maybe not the answer you want

Vim is ""just"" an editor whereas emacs can be your only app doing browsing, git & mail from within. It's down to what suits you.

&#x200B;",1541988702.0
ylluminate,"Please see this: https://www.reddit.com/r/ruby/comments/9vxo2l/ask_rruby_how_to_develop_ruby_with_emacs/

You'll notice some excellent tips and you **DON'T HAVE TO CHOOSE BETWEEN EMACS & VI(M)** - since you can use [both](http://spacemacs.org/doc/DOCUMENTATION.html#editing-styles) via Emacs.  

If you DO want to be an Emacs purist, like many of us, then you can use ""[Holy Mode](http://spacemacs.org/doc/DOCUMENTATION.html#emacs)"" in Spacemacs, but you can stick with [Evil](http://spacemacs.org/doc/DOCUMENTATION.html#vim), which many people like. Or just use [Hybrid](http://spacemacs.org/doc/DOCUMENTATION.html#hybrid) mode.

Emacs DEFINITELY has plugins and a much more robust system for extensibility. Take the high road and follow the first link so you can unify your path and effort on the best platform (Emacs).",1541989543.0
beowuff,"Prepare for flame war!!!

Seriously, though, as a vim user, get a good .vimrc setup and you‚Äôre good to go.",1541988580.0
valadil,"I use vim. It seems popular in the ruby community. I think I use the indent guides plugin, tho I leave it off by default. 

Both are decent editors. Try them all and see what sticks. I prefer vim because emacs hurts my wrists and I intend to code professionally for quite a while. ",1541989441.0
jb3689,"I started using vim for no real reason and stuck with it. It's wound up being a good choice for a few reasons. I really like modal editing. Most machines at least have vi. Ruby is well-supported with vim and there are a lot of Rubyists or former Rubyists in the community. You can script vim with Ruby.

I don't have anything against Emacs though and am jealous of things like being able to use lisp instead of vimscript. I'd like to learn more about what Emacs provides",1542049473.0
shevegen,"What a stupid thing to want to have.

Interestingly enough, none of these ""conduct"" jokes is part of any licence.",1542206190.0
tracychavez,The hostile reaction to this is my favorite thing about the Ruby community. Nobody wants moralizing nitwits solving problems we don't have. ,1542219210.0
svchator,"The 'code of conduct' fad is marxist cancer - anti-white, anti-male, anti-meritocratic.",1541967750.0
Nanosleep,Posting this on reddit seems almost like you're asking to be trolled. But for what it's worth: A quick trip to wikipedia suggests that the etymology of the word 'blacklist' is probably not what you think. And since whitelisting is the inverse of blacklisting... I don't see the un-'friendliness' of the word.,1541944554.0
jrochkind,"I honestly don't understand why we should care, or why you want us to. 

I can see some arguments for making the change, including simply that it expresses the intent more clearly to non-first-language-English speakers, as many ruby committers are. I'd have to learn more about the motivations and arguments that led to it to have an opinion on if it was _important_ to make the change or not. 

But even if it wasn't important, it seems pretty inconsequential as far as possible negative affects. If you're looking for people for some reason to be _alarmed_ about the change, to think it would be important to _not_ make the change... I honestly can't think of any at all. I can't think of any ways this would make working on MRI source harder or more inconvenient for anyone, and the typical _users_ of MRI would of course have no idea it even happened. 

Why are you trying to make it controversial?",1541952200.0
phaul21,"the world has clearly gone mad. That's what i think about checkins like this. Or when they changed the name to factory bot. Not that I liked the name factory girl in particular.

Somewhat related thought: unfortunately too many people are into software, and with popularity it has lost its niche, it's not engineering or science any more. It's a controlled typing governed by management. And that being the trend this or similar thing will become more frequent.",1541947636.0
Nanosleep,"It might be a better idea to ask on the dragonfly subreddit and mailing list if you already haven't. I know they maintain rbenv in dports/avalon, so I'd approach it from that angle and ask about ruby-build support in rbenv on dfly.

edit: and if you're building ruby versions yourself and don't care about ruby-build, just look at the dports makefile for ruby and you can see the patches and configure flags they use for building the base ruby package successfully.",1541935471.0
manys,"I've run rails on freebsd for 10 years just fine, though i use rvm. are you forced to use dragonfly? does dragonfly have the ports system?",1541939679.0
shevegen,"I have not seriously tried BSD + ruby, mostly because I am using linux and linux is the better BSD. (I am serious about this comment too; top 500 supercomputers running linux speaks for itself.)

To the topic of rbenv though - I never understood the need. There are distributions such as GoboLinux that show that you can use AppDir versions for programs. And this is what I am doing with ruby too.

For example, right now I have two ruby versions:

    /Programs/Ruby/2.5.3/
    /Programs/Ruby/2.6.0-preview3/

In the past I had more ruby versions but I only use the latest
stable these days. When I need to switch, I set a symlink called
""Current"" through a script that changes the active version. So
this is a bit like a ""version manager"" - except that I can do so for
all programs. (It does not work for all programs since some require
hardcoded paths and assume /usr/ hierarchy embedded in the
binary. But for ruby this approach works 100% and I have been
using it since like 13 years or longer.)

So when you write ""I must use a version manager"", nope, sorry - 
you do not have to do so. You can manage your ruby version 
fine. I do so too and I can change the version at any moment in
time.

As to why BSD fails at rdoc, I think you should file a bug at:

    https://bugs.ruby-lang.org/projects/ruby-trunk

The core team will try to make things work, if you can give a
detailed description. I personally skip rdoc generation anyway
since it takes time and gives me nothing I use (I either use
online search for new information; or look at my local knowledge
base, which I update every now and then. I hate rdoc.)",1541942954.0
SmellsLikePanda,"Hi! To get some inspiration, you can check out the following layers of Spacemacs. Even if you use vanilla Emacs, it can give you an idea of how to put things together.

* [ruby-mode](https://github.com/syl20bnr/spacemacs/tree/develop/layers/+lang/ruby)
* [ruby-on-rails-mode](https://github.com/syl20bnr/spacemacs/tree/develop/layers/%2Bframeworks/ruby-on-rails)",1541884946.0
jhirn,"Try bbatsov‚Äôs prelude. It‚Äôs got company mode for completion, rspec mode for tests, abunch of other Ruby goodness, and tons of other general goodness. 

Spacemacs is also an excellent place to start. I have a colleague who uses it in holy mode (not via bindings) just for all of the sharp edges it rounds off. 
",1541885886.0
sadhu89,I started with Prelude and then moved to my own config after some time. I definitely would recommend Emacs for Ruby Development.,1541914455.0
GDP10,"I use Ruby & Emacs just fine. I'd say it's probably a step or two below RubyMine, but nothing beats RubyMine so Emacs does a pretty good job in my book. Plus, RubyMine lacks all the features and goodness of Emacs ;)

Here are a few packages I recommend:

- [bundler](https://github.com/endofunky/bundler.el)
- [rinari](https://github.com/eschulte/rinari)
- [ruby-hash-syntax](https://github.com/purcell/ruby-hash-syntax)
- [rvm](https://github.com/senny/rvm.el)
- [rsense](https://github.com/m2ym/rsense)
- [robe](https://github.com/dgutov/robe)
- [inf-ruby](https://github.com/nonsequitur/inf-ruby)
- [quickrun](https://github.com/syohex/emacs-quickrun)

There are many more packages I have which makes coding Ruby in Emacs a joy. I also have *many* customizations for these packages which make them *much* more palatable than their default configurations. Honestly, though, if I posted it here there would be hundreds of lines so I'm happy to PM you whatever you want. I've got key bindings, custom functions, settings, and much more.

If you'd like to know something for a specific package like robe, I might be able to post it here. Just let me know. The moral of the story is: coding Ruby in Emacs *is* fun, as long as you have the right packages and the right customizations!",1541966817.0
shevegen,"This is not so much a tip but I have found that one does not really need a whole lot to write ruby code productively. The main functionality I usually want is syntax highlighting in colour but even that is not s important. In the end I use ruby as my whole super ""IDE"". I'd even use ruby as interface to the whole OS but this is not so easy since most of my linux system is C/C++.",1542020355.0
ProfessorSexyTime,[Doom Emacs](https://github.com/hlissner/doom-emacs/tree/develop?files=1) has out-of-box support for Ruby with Vi key movements (or not if you don't want it). ,1541972207.0
,[deleted],1541890330.0
DudeManFoo,"As a VI guy... I can only say... /FlamewarOn!!

",1541961245.0
rpmisms,I‚Äôd use VScode. I couldn‚Äôt find anything for emacs either. ,1541884924.0
waiting4op2deliver,So exec out to vim?,1541918660.0
pa_dvg,"The best way to secure your ruby product is having a good lawyer write the terms of the contract so you can sue them into oblivion if they try and redistribute your product.

GitHub Enterprise is obfuscated but the real security is in the legal terms ",1541863027.0
drsco,"Sell software keys and have it phone home maybe? In my experience, Ruby, Python, et al don't have good distribution stories for end user software.",1541858636.0
omninonsense,"Look into `RubyVM::InstructionSequence.compile_file` and  `RubyVM::InstructionSequence.load_from_binary`, you just eval the result of the latter.

Alternatively, you can look into using `mruby`, and embedding the bytecode within the executable. Haven't used mruby in a while, but I think it supports this out of the box (it will create a `.h` file with an `uint8_t` array that you can import, iirc).

Combine these with some types of license key so it's harder to ""crack,"" but in all honesty, I wouldn't bother too much. If someone's stubborn enough, they'll find a way around the licencing/obfuscation. That will be the minority of your ""users"" anyway.",1541865847.0
Nanosleep,"The one time I felt the need to do that (for a webapp), I was satisfied with building it as a precompiled .war with jruby and warbler. 

edit: Another benefit is that enterprises usually know how2tomcat already, compared to deploying a custom ruby app.. It just makes sense if your code runs without any issues in the jruby ecosystem.",1541868297.0
graywolf_at_work,You can always go with rewriting small (but vital) parts into C and distribute it precompiled.. Dunno of better way (there probably is),1541853390.0
faitswulff,"Can you port it to [Crystal]? It's not foolproof, but then you could distribute it as a binary.

[Crystal]: https://crystal-lang.org/",1541864505.0
cmd-t,You‚Äôll need a license server and a proper contract so when people redistribute they will be breaking the contract and you can civilly sue them. ,1541863356.0
classhero,"Does it need to be their equipment, or just on-premise? Do they need administration access into the equipment? 

Remember that if they really want to, they can remove your license checks; things like GH enterprise are obfuscated mostly to keep prying sys devs away from making ""minor tweaks"" to the code that make support calls hell. ",1541883943.0
Schrockwell,"I‚Äôve used RubyEncoder for years to deploy production code to untrusted computers. The entire application is obfuscated and encrypted (the contents of the files, but not the file names and directories themselves) and it can only run if the computer has a particular MAC address. You can also lock it down by date/time to provide trials. AFAIK, GitHub Enterprise does this for self-hosted GitHub.

The two issues I‚Äôve run into are (1) the RubyEncoder loader, which actually runs your application, needs to support the target CPU architecture (e.g. it took a while for the Raspberry Pi to be supported because of ARMHF), and (2) it takes a while to support the latest Ruby releases, so you‚Äôre usually running at least a point-release behind the latest.",1541865806.0
PhilLikesheet,"Hey guys, I wrote this little gem to make my life a bit easier and thought maybe you guys would like to use it as well. Let me know what you think!",1541815134.0
Petrarch1603,"I'm simple man. I see conf video by Sandi Metz, I upvote",1541810384.0
Mike_Enders,I'd rather see more tech and less psychology in a keynote for a language but I guess.....,1541818606.0
jrochkind,"This is something I've needed to do -- the problem is that the example shown here has some security problems. 

If a user includes `host` or `scheme` in their URL params, then those will end up given to url_for, and change the URLs on your page. In some cases they may able to access/execute things they ought not to be -- url_for isn't necessarily secure against user-submitted input. 

Rails actually made it harder to just re-use `params` because of these security problems.  But then it continued to evolve from there, the error message you got less clear, etc.  And they never clearly delineated how to do it in a _secure_ way -- apparently they aren't concerned about the use case?

Here's some more info: 

https://github.com/rails/rails/issues/26289
https://github.com/rails/rails/pull/20797

At one point I started figuring it out, and there were some not so widely known Rails methods that were helpful, but I never totally got it smooth. 

I was hoping this screencast would have figured it out, but nope. The example here may not be a very good thing to recommend, I believe it has some security issues. ",1541777639.0
Sreyas1997,i installed the gem file but this eror repeats,1541754643.0
bokmann,"Aand congratulations, you‚Äôve succeeded in changing one kind of runtime exception to another.

The point of type checking is validation *at compile time* so you can have a certain level of assurance about your code.  In an interpreted language there is no compilation step (well, not in the same way anyhow), so all this effort amounts to the equivalent of returning a different exception at the same (or similar) runtime point in your code.",1541775559.0
BluePizzaPill,"A alternative I've been using that works on Ruby 2.x:

http://egonschiele.github.io/contracts.ruby/

Has better syntax imho too and allows method overloading:

    Contract Contracts::Num, Contracts::Num => Contracts::Num
    def add(a, b)
      a + b
    end

    Contract Contracts::String, Contracts::String => Contracts::String
    def add(a, b)
      a + "" and "" + b
    end

    add(2, 4) # 6
    add(""2"", ""4"") # 2 and 4
    add(Object.new, Object.new) # Exception",1541757499.0
tomthecool,"Is [this](https://github.com/olegantonyan/typerb/blob/50c748b0638c34cbf9ecf058e24bde5644ef4067/lib/typerb.rb#L19) really the best way to get a variable name, using the AST? :S

    code = File.read(file).lines[line - 1].strip
    node = RubyVM::AST.parse(code)
    var_name = node.children.last.children.first.children.first",1541759317.0
shevegen,"Brilliantly ugly.

I am glad matz won't add type uglification to ruby.

I am not so much opposed to optional typing as such, but, boy - what a mess.

What would be kind of cool would be if we could have two variants of ruby, though. One for the light weight aka the ""scripted"" variant - and one that is compiled, like crystal. The latter variant may then also be partially incompatible to ruby but could be compiled.

Crystal sort of showed that it can be done. Unfortunately crystal is not ruby ... differences to ruby are slowly accruing if you have followed crystal for a while (but admittedly, the crystal team always said that syntax-compatibility is NOT a goal, so that's fair enough).",1542019788.0
4rch3r,"I've always used S3, but I've also heard good things about Google Cloud Storage.  At the end of the day I'd keep things in one place so if you're already using one or the other probably just stick with it.",1541781232.0
Nitrodist,"What is the impact of this on Rails? 

Is this only a problem is I'm de-serializing data using Marshal? ",1541752319.0
wa_shing_ton,"Easy solution in 4 characters, use eval:  

    irb(main):001:0> eval(""311"")  
    => 311
  

If you're really scared of eval for some reason, you can filter the string to only have digits:  

    irb(main):002:0> eval(""evil string 311"".gsub(/[^\d+]/,''))  
    => 311
  

Also if you want to use something more correct and more restrictive (it will raise a ArgumentError if it's not a valid number), you can use Integer:

    irb(main):003:0> Integer(""311"")
    => 311

If you want to do something mindlessly complicated for no good reason, you can also do this:  

    irb(main):004:0> '311'.chars.reverse.map.with_index{|a,i| (a.ord-48)*10**i }.sum
    => 311",1541737702.0
moomaka,"You're dealing with base 10 numbers I presume so after you convert each string digit into a number you need to multiply by 10^position in the number and keep a running total.

Here is my off the cuff implementation, sorry for the screwy formatting but I can't figure out how to get properly formatted code to display inside a spoiler tag:

>!DIGIT_LOOKUP = {""0"" => 0, ""1"" => 1, ""2"" => 2, ""3"" => 3, ""4"" => 4, ""5"" => 5, ""6"" => 6, ""7"" => 7, ""8"" => 8, ""9"" => 9}.freeze
def str_to_int(string)
 string.each_char.reduce(0) do |total, d|
   total * 10 + DIGIT_LOOKUP[d]
 end
end!<
",1541690200.0
imnos,"`[1,2,3].inject{|a,i| a*10 + i}
`

`#=> 123
`",1541690488.0
TechnologyLaggard,"You've mapped, now reduce: multiply your accumulator by the radix and add the value.
Care will be needed if you are supporting points, negatives, or any other numeric notations. ",1541690649.0
4rch3r,"Also if you want to be sneaky as well, instead of a case statement you can use:

    char.ord - '0'.ord

but you'd have to validate that it's a number first.",1541807338.0
Freeky,"Another snippet for the collection:

    def string_to_integer(str_num)
      str_num
        .lstrip
        .bytes
        .map { |b| b - '0'.ord }
        .take_while { |b| (0..9) === b }
        .inject(0) { |acc, num| num + (acc * 10) }
    end

Skips leading whitespace and trailing garbage much like to_i.",1541881501.0
sshaw_,"    ~/code/elisp >ruby
    def str2int(s)
      s.chars.each_with_index.inject(0) { |t, (chr, i)| t + (chr.ord - ""0"".ord) * 10 ** ((s.size - 1 - i)) }
    end

    while s = gets
      puts [i = str2int(s.chomp), i.class]
    end
    ^D
    0
    Fixnum
    999
    999
    Fixnum
    123123
    123123
    Fixnum",1541724913.0
i_know_sherman,üëç we do this as well and it's great. Another cool trick is to define derived meta data and lazy load deps using `when_first_matching_example_defined` to keep the suite running fast for simple specs,1541738227.0
dmke,"The page objects are a neat idea. I've accumulated a bunch of shared examples/contexts (originally thought to be glorified setup blocks), where similar behaviour started to creep in. Time to refactor those out in page objects :-)",1541716684.0
nateberkopec,"I don't understand why people think that benchmarking trivial things like this has any relevance to production use w/a real world app.

Rails is good/fast/low-cost enough for Github, Basecamp, Cookpad, Shopify, Zendesk, Apple, Netflix, Intercom, and more. It's fast enough for any CMS project.

EDIT: I wrote an entire blog post a while back about why using throughput benchmarks w/toy applications is silly: https://www.speedshop.co/2017/07/11/is-ruby-too-slow-for-web-scale.html",1541695118.0
moomaka,"> Puma with 0:16 - 16:16 threads - no difference beyond statistical error

The first digit in that setting just sets the minimum size of the thread pool which is likely to have zero impact on the benchmark you are running. Did you run multiple workers? Try something like `puma -t 8:8 -w 4` and replace `4` with the number of CPU cores on the box. 

Also - Make sure you set the thread pool for ActiveRecord to the size of your puma thread pool. ",1541684297.0
jujubean67,Without seeing the actual configuration files it's a bit to hard to give you any sort of feedback.,1541685026.0
DisneyLegalTeam,"No matter the language I highly recommend using Varnish cache to scale. You can use an edge service like Fastly or Cloudfront. Or roll your own. 

Ive been able to run a Rails app with 10k daily page views on 1 of the cheaper Heroku dynos with Fastly. 

Years ago I had a Rackspace server running a (cough) Wordpress site with Varnish & NGINX that survived 50k _concurrent_ users. 

Edit:
Sorry ~10k page views / hour. We went from 3-5 dynos to 1. ",1541689964.0
thebritisharecome,"PHP is used by the majority of the internet and a lot of performance improvements that have gone into the 7.0 branch have come from or inspired by Facebook. Having a such a unique use case i can imagine some of their additions would have a significant benefit on the interpreter.

Not saying you're not wrong, you might be - but PHP 7 being considerably faster than Ruby makes sense.",1541684149.0
fedekun,"I think Passenger was the fastest Rails server last time I checked, maybe give that one a try?",1541685823.0
conorh,What framework was your PHP code using?,1541728569.0
whalesalad,CMS charity project.... you‚Äôre not gonna be pegging the rev limiter on any of these technologies. Your traffic won‚Äôt get that big. It doesn‚Äôt matter. Optimize for your own developer speed and happiness and the best ecosystem for what you‚Äôre building. ,1541736915.0
mperham,"Complex, parallel job workflows are entirely the point of Sidekiq Pro's Batches.

https://github.com/mperham/sidekiq/wiki/Batches",1541694919.0
jrochkind,"> there seems to be a deadlock on our side

If you are using Rails 5, and you are seeing this only in _development_ (not production) it may be the _really annoying_ improvement to Rails development-mode class reloading and concurrency. 

Although hypothetically if it's in a sidekiq job already, it should be taken care of. Probably. But I'd try turning off development-mode class-reloading too. 

https://guides.rubyonrails.org/threading_and_code_execution.html",1541785086.0
sbellware,"I'm rather biased about the implementation of this kind of thing because my background is in evented systems and service-oriented architecture, and I'm a contributor to the Eventide toolkit, which brings these kinds of architectures to Ruby,

What you're describing sounds more like SOA - ie: an autonomous, evented state machine - than background jobs. 

At the risk of being overtly self-promotional, I would implement something like what you're describing with Eventide. Building an async workflow state machine that's based on reacting to events goes a long to simplifying these kinds of implementations.

That said, this isn't just new technology. It's probably an unfamiliar architecture, which is a bigger challenge than picking up a new background jobs product.

The message store is implemented in Postgres, so no new databases to run. But again, that's probably a lesser issue than becoming habituated to evented services.

You can have a look at some (basic) example code at:  
[https://github.com/eventide-examples/account-basics](https://github.com/eventide-examples/account-basics)

Docs at:  
[http://docs.eventide-project.org/](http://docs.eventide-project.org/)

If any of this is of interest, you can have more questions answered on Eventide's Slack:  
[https://eventide-project-slack.herokuapp.com/](https://eventide-project-slack.herokuapp.com/)

&#x200B;

\-Scott",1541887538.0
mattgrave,"I would say keep it simple.

1. Deadlock issue might be related to wrongly setting up the concurrency. Try to find this out.
2. The workers pipeline approach seems the most straightforward given your knowledge, the thing you will have to take care is that if one of the intermediate processes fails then you have to abort the process or either have a sort of recovery strategy. sidekiq-batch or Rocket Job (http://rocketjob.io/) might be helpful.
3. Another system for this seems to be an overkill, if you don't have experience in another technology then that's going to take way too much time.",1541683533.0
drbrain,"Maybe you have an error in your inputs for multiplying two arrays of floats, like you're trying to multiply a multi-dimensional array instead of an array?

    $ ruby -ve 'a = [1.1 ,2.4, 3.8]; b = [4.7, 5.3, 6.2]; p a.zip(b).map { |x,y| x*y }'
    ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin17]
    [5.170000000000001, 12.719999999999999, 23.56]

For multiplying multi-dimensional arrays use Matrix:

    $ cat t.rb
    require 'matrix'
    
    a = Matrix[[1.1, 2.4, 3.8],
         [4.7, 2.2, 6.5],
         [5.3, 7.4, 8.9]]
    
    b = Matrix[[4.6, 3.7, 2.1],
         [5.3, 8.3, 8.4],
         [1.2, 6.5, 9.2]]
    
    p a * b
    $ ruby -v t.rb
    ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin17]
    Matrix[[22.339999999999996, 48.69, 57.42999999999999], [41.08, 77.9, 88.15], [74.28, 138.88, 155.17000000000002]]
",1541640846.0
cavinkwon,"I don't know what you want. may be this?

    [a, b].map { |arr| arr.transpose.map { |cols| cols.reduce:* } } 
    #=> [[27.401000000000003, 39.072, 219.83], [29.255999999999997, 199.61500000000004, 162.28799999999998]]

or a \* b ?

    a.zip(b).map { |arr| arr.transpose.map { |x,y| x * y } }
    #=> [[5.06, 8.88, 7.9799999999999995], [24.91, 18.26, 54.6], [6.359999999999999, 48.1, 81.88]]

&#x200B;",1541651998.0
midasgoldentouch,"I'll have to check the exact configuration, but I believe 5.2 handles transactional tests in such a way that database cleaner is no longer needed.",1541638372.0
enry_straker,My last project involved working with doorkeeper. I am a rails dev who has been working with ruby and rails for quite a while now. Feel free to PM me at /u/enry_straker,1541685225.0
kherad,"Hi, I have done oauth2 integration before and I would love to help you with this and maybe future contract jobs",1541687518.0
recycledcoder,"A couple of weeks to learn, a lifetime to master.

In a couple of weeks, you can expect to start being able to ""do stuff"". Solve real problems, start being able to move your own learning along. 

Learning to be a ""productive programmer"" will likely take something between 6 months and 2 years - by then you'll be able to tackle pretty much any ""bite-sized"" problem, and have a good chance of solving it.

Learning to be a software engineer... is a lifetime endeavour. A very rewarding one, mind you.",1541639543.0
garrettmickley,"I've played around w/ a lot of languages and I really enjoy Ruby.

I've been learning on the new, free, App Academy course: https://lifehacker.com/learn-web-development-for-free-with-app-academy-1829843012

It teaches full-stack Ruby on Rails w/ some JS and HTML and CSS, which IMHO everyone should know at least the basics of HTML and CSS.",1541689556.0
LuneBlu,"In 2 months you probably can learn it well, apart from the part (gem) Ruby on Rails.",1541635567.0
SagaciousCrumb,"Well, I've been doing it full-time professionally for 7 years, and I wouldn't say I've fully learned it. 

But being able to create useful things in a language does not requite anyone to learn every piece of it. Still, it takes a few months of focused study - multiple hours per day, every day - to get to the point where you can just create something that's usable by other people. Since you haven't worked with code before there is a lot of other things to learn along with the Ruby language (which you'd have to learn with any language). Things like using the command line and including code written by someone else in your project, how to debug and find errors, how to google the right thing to find the code you need. Another tricky part about Ruby is that normally it's used to create web applications, and to do that you also need to understand HTML, CSS and JavaScript.  

I'm sure that sounds daunting, but don't let it. These things are all part of learning to code and you'll learn them as part of that quest. I only mention these things to point out that it takes a while to understand all of them and fit them together into a working piece of code. This is why it takes more than a few weeks to get it, and likely a few years to feel really comfortable. 

I'm happy to answer more questions for you. This is absolutely something you can do.",1541623931.0
shevegen,"> How long would you say it takes like a week or two to fully learn it?

People are different so this is hard to say.

I am a slow learner so I need at the least a full month to really grasp
most concepts of a language - if the language is simple.

I think the only advice I could give is to simply write a LOT of code.
To me this was always the best method by far. Also make your
code available to others - this helps in many ways too. Try to
document or keep notes a bit here and there too; that may help
in the long run as well.

The pickaxe also helped the first time I read it. It was quite simple
to understand.",1541903690.0
jordanaustino,"Honestly, I wouldn't start learning how to program with Ruby. Too many instances where there are multiple ways to do the same thing and one is preferred.

There is a lot of good beginner material out there for python and that is probably where I would start. You should focus on learning programming concepts and not have to worry too much about syntax sugar and which of the many ways to do something is best. Python is fairly easy in that regard and also has much of the readability people like about ruby.",1541624647.0
,[deleted],1541629026.0
jrochkind,"I find out about these from the rubysec.com RSS feed... or actually from rubyland.news (which I run), which includes the rubysec.com RSS feed. 

So it still requires me to look at the feed and notice. 

But github will probably be flagging with security notice shortly too. :)",1541624115.0
BumpyBallFan,Thanks,1541623510.0
4rch3r,"What an awesome, simple user generation script!  

I see you using `/bin/chown -R`, but did you know that Ruby already has a FileUtils for that? https://ruby-doc.org/stdlib-2.0.0/libdoc/fileutils/rdoc/FileUtils.html#method-c-chown_R



The other thing that I see is that the erb template generation is inline in setup_supervisord.  I would recommend pulling the template generation into a separate function to allow for more precise testing of the template generation as opposed to testing the file-system behavior.

Otherwise great work and welcome to the Ruby community!",1541616395.0
witkwski,"> David Heinemeier Hansson created what would later become one of the most used programming languages. 

what?",1541583552.0
zverok_kha,"Dude, I am worried. Do they keep you hostage? Threaten your family? 
Wink if they are forcing you to post this bullshit.

(If somebody persuaded you or your boss that's how you build the company's reputation or identity, they were laughing at you.)",1541586982.0
dmke,"My best guess is (I'm currently on mobile), that the web server has no MIME type configured for `.rhtml` files, and defaults to `application/octet-stream`. The server might also set the `X-Content-Type-Option` to `nosniff`, which inhibits browsers from performing content type detection on their own. You can verify this with cURL (look for the `Content-Type` header):

    $ curl -I http://www.sparknotes.com/testprep/books/sat2/physics/chapter18.rhtml

You basically have two options, if you want these files to be displayed in a browser:

1. setup the MIMW type for `.rhtml` files to `text/html` -- the ""how?"" depends on the server software
2. rename the files to `.html` -- that might break links, though",1541575742.0
SixtyLandmass,Problem solved ,1541651765.0
Hell_Rok,"A bit hacky but I think this works reasonably well

    irb(main):005:0> str = 'this is many words and whatnot'
    => ""this is many words and whatnot""
    irb(main):006:0> str.split.map { |word| word[0] = word[0].upcase; word }.join(' ')
    => ""This Is Many Words And Whatnot""

If you need to maintain whitespace though this will fall apart and the road you're going down looks pretty correct, just add a condition for `i == 0`",1541567955.0
synt4x,How rails does it: [https://github.com/rails/rails/blob/fc5dd0b85189811062c85520fd70de8389b55aeb/activesupport/lib/active\_support/inflector/methods.rb#L175](https://github.com/rails/rails/blob/fc5dd0b85189811062c85520fd70de8389b55aeb/activesupport/lib/active_support/inflector/methods.rb#L175),1541571067.0
martica1974,"`i-1` is fine, but you need to check if `i` is zero.

```
if i == 0 || array[i-1] == "" ""

  array[i].capitalize`

end
```",1541571372.0
the_mighty_skeetadon,"> `if array[i-1] == nil || array[i-1] == "" "" `

So, what if your `i` is zero? Then you'll get array[-1], which gives you the LAST element in the array, that is `[a,b,c][-1]` -> `c`

That means you'll capitalize the first item in your array IF the last item in the array is nil or a space. This is not your intended behavior. You could implement what you want like this, potentially:

    str = 'this is an example string'
    last_char = ' '
    str.each_char do |char|
      if last_char == ' ' 
      	print char.upcase
      else 
      	print char
      end
      last_char = char
    end

That'll print the string correctly, but it's not a good method. For example, having a linebreak instead of a space in your string will ruin your title case.",1541572319.0
rubyrt,"    array.each_cons(2) do |prev, current|
      current.capitalize! if prev.nil? || prev == ' '
    end

One difference to your solution: this one does not wrap, i.e. look at the last `Array` element if `i == 0`.  Other difference is that this changes Strings in place.",1541598960.0
jasdeep13,"Turn this into a re-usable gem please! Until then, I‚Äôm going to borrow these concepts to document our own API. Thanks for sharing, super helpful!",1541566129.0
AdamK117,"Very cool.

Just for some further ideas, I had a similar problem a few weeks back on a Java project, but took a  much more ""hacky"" (multi-language) approach:

- Generated a swagger.json for my project (java reflection)
- Downloaded [swagger-ui-dist](https://www.npmjs.com/package/swagger-ui-dist) from npm
- Copied the swagger.json into the dist
- `sed`ded the default pet shop url for `swagger.json`

See the results [here](https://adamkewley.github.io/jobson/apidocs/index.html#/:). Build [here](https://github.com/adamkewley/jobson/blob/master/jobson-swagger-ui/pom.xml). 

Not saying this is a perfect approach, but it worked well for me. Does require using `npm` or `wget` to get the UI tarball, though.",1541588550.0
shevegen,"> In dynamic typization, type validation is performed during the execution
> of the program, and not during compilation.

I do not think ruby uses ""type validation"". That actually defeats one point
of duck typing - that is, to not have to care about what ""type"" something
is IF it is not necessary. (People often forget the second part and think
that duck typing must apply to everything at all times.)

I mean the whole term ""during compilation"" is wrong to begin with because...
there isn't much you compile in a normal .rb file right? Unless you use some
wrapper to some C/C++ code or something like that. Or perhaps some other
means to compile code - but these cases are less common than just having
code reside in .rb files. Without any compilation.

> Metaprogramming allows you to create software code and libraries that
> other developers can reuse and easily customize according to the needs
> and tasks to solve.

And you can write code that others can reuse and customize without
metaprogramming too.

So that is not a distinguishing characteristic.

> Going into metaprogramming, developers can create DSL‚Ää-
> ‚ÄäDomain-Specific Languages ‚Äã‚Äãfor solving complex tasks within
> specific industries. 

To be honest ... since it depends on a definition ... I use ""meta""
programming sparingly; usually just to autogenerate some 
code; or to add/remove methods to certain objects (a good
example is a config-object that stores configuration, a bit
like struct/openstruct does, where it will feed back what 
configuration is active on the end-user side).

> In the Ruby ecosystem, the standards of writing and
> structuring codeare approved by the global community
> of devs and recorded in the Ruby style guide. (Rails
> style guide is approved as well). 

TOTAL and UTTER ********. Bogus.

Please do not believe whatever any random person writes
on the www.

There is one ultimate authority - and that is the ruby parser.
Everything else is up to whoever wrote the guide(s) at hand.
In the case of the former, I assume that he must refer to
the default guide enforced by rubocop. But rubocop is not
the ruby parser.

> Also, Ruby pays much attention to checking how the code
> conforms to the norms and standards (RuboCop,
> SimpleCov, RubyCritic, Rails_best_practices).

Is that so? I have been using ruby since about ... 15 years
and I never need an arbitrary random ""style guide"" to 
know how to write code. That is not to say that everything
written in a style guide is crap. A lot of it is perfectly fine.
A lot of it is totally bogus too, though.

I guess the only useful part of that article may be the list
of links provided at the bottom ...",1541902905.0
jrochkind,"Hmm, I'm not sure I like this approach, because it _can_ still pass if you have a thread safety bug, I think? It might pass some times and not others. Plus it could be pretty slow. 

But I don't have a better alternative to suggest. the only alternative I know of is thinking really hard and writing complicated tests that confusingly use countdown latches in _just_ the right places and ways to force certain orders of execution that could be buggy. ",1541530290.0
ohboyohboy1234,"You need to read your error messages:

Counting installed Ruby versions: none There aren't any Ruby versions installed under `/home/palash25/.rbenv/versions'. You can install Ruby versions like so: **rbenv install 2.2.4**

",1541529728.0
wiseones,"JIT Ruby seems like it could be a Thing, anybody play around with it yet?",1541533414.0
joltting,"After running a few more benchmarks in its current state; The good news is that it is faster. Both 2.6 with and without JIT enabled are ever so slightly better than v2.5.3.

The down side to v2.6 w/JIT. Is if the code is running any less than 30 seconds at any given time. It actually performs much worse than 2.5.3. Its tough to say how this will affect real world apps and we wont know the full story until they address Rails issue's.

My hope is that we can see better real world results that perform better than ~5%.

https://gist.github.com/GeorgeKaraszi/d83c817038543d7960a7c698733b7306",1541542888.0
gray_-_wolf,"Can someone please help me with

> else without rescue now causes a syntax error. 

? I assume it refers to (at least google search suggest so):

    if
    end
    else
    end

So, it should be

    if
    end
    else rescue
    end

? I guess I wonder what the error message is trying to say. Where should the rescue be for this to be valid, accepted code?",1541602595.0
witkwski,"I don‚Äôt understand what is the purpose of such articles... It‚Äôs actually docs level information which could be found anywhere.  I hate the situations, when you are interested in some topic and searching it you will find tons of useless entry-level texts with the same content. But probably it‚Äôs only my complaint ",1541514720.0
joemi,"Two things kind of bugged me about this:

1. The use of pry instead of irb in the examples... The examples look almost exactly the same if you use irb, and irb is built in and therefore more beginner-friendly (and this article seems aimed at beginners).
2. Referring to the `#+` method as `.+`... That's going against the established convention (which is even reflected in the ruby docs), so I think that too could be confusing for beginners (or really anyone used to the common convention).",1541558188.0
realntl,"This is a pretty huge project (3+ years in the making), and it feels a bit surreal for us to have finally reached this point. For anyone interested in event sourcing or microservices/SOA, I recommend you have a look at Eventide!",1541450783.0
jordanaustino,"As a total aside, are you all using vuepress for the website and docs?",1541453254.0
_jonah,"Congrats on your release.  Looks like a great project.

Two questions:

1. How does it compare with [https://github.com/zilverline/sequent](https://github.com/zilverline/sequent)
2. What is your recommendation for learning CQRS concepts generally (outside of any specific framework)?  Or would you recommend it learning it via eventide?",1541454033.0
ioquatix,"If you don't use Tracepoint, what do you use?",1542457722.0
ethboy2000,"Do you not have a stacktrace telling you on what line the error is occurring and in what file?

The problem is exactly what it says, something is trying to call a method on nil that doesn‚Äôt exist.",1541443297.0
StarStuddedSuperStep,"Did you try running the command from `/opt/bitnami/apps/redmine/` instead of the plugins directory?

Did you already run `bundle install --without development test`?",1541448087.0
TunaFishManwich,"The error is probably happening in the String#unpack method, inside the Base64 gem. You can reproduce the error easily in IRB:

    2.1.5 :001 > require 'base64'
     => true
    2.1.5 :002 > Base64.decode64(nil)
    NoMethodError: undefined method `unpack' for nil:NilClass
    	from /Users/jlauer/.rvm/rubies/ruby-2.1.5/lib/ruby/2.1.0/base64.rb:58:in `decode64'
    	from (irb):2
    	from /Users/jlauer/.rvm/rubies/ruby-2.1.5/bin/irb:11:in `<main>'

I can't speak to a solution, since I don't use Redmine, but the issue appears to be in the guts of redmine, and isn't related to an ""unpack"" gem, that's a red herring. Something is trying to base64 decode nil when it requires a string. I'd find where that happens on line 59 of /opt/bitnami/ruby/lib/ruby/2.3.0/base64.rb and walk backwards through the stack trace from there. Chances are there is a configuration value missing or something like that.  


Good luck!",1541450819.0
shrubbish,"edit:

I appear to have located and installed unpack:

    bitnami@debian:/$ gem install unpack
    Fetching: unpack-0.2.1.gem (100%)
    ERROR:  While executing gem ... (Gem::FilePermissionError)     You don't have write permissions for the /opt/bitnami/ruby/lib/ruby/gems/2.3.0 directory.
    bitnami@debian:/$ sudo gem install unpack
    Successfully installed unpack-0.2.1
    Parsing documentation for unpack-0.2.1
    Done installing documentation for unpack after 0 seconds
    1 gem installed
    bitnami@debian:/$ cd opt/bitnami/apps/redmine/htdocs/
    bitnami@debian:/opt/bitnami/apps/redmine/htdocs$ sudo bundle exec rake  redmine:plugins NAME=redencrypt RAILS_ENV=production
    rake aborted!
    NoMethodError: undefined method `unpack' for nil:NilClass


but still no joy.",1541445882.0
ziptofaf,"> However, Node.js is growing fast and can become the next big thing. The speed and scalability that Node.js provides is one of its biggest advantages

I think that majority of people basing their decision on which language to choose based on it's ""scalability"" has read way too many articles without actually working in the field. Shopify runs on RoR and they handle 80000 requests PER SECOND. Just what kind of application are you planning to build to need more than this? 

At such a scale you also have far more issues than language alone since you will be bottlenecked by your IO, your database, your load balancers and your architecture. Language being just one spice in a dish known as a scalable application. I am not denying the fact that Node can be faster if you do CPU bound operations but frankly I dislike how a language X is said to scale and is capable of building large scale web application whereas Y apparently does not (despite the fact that in reality there are huge projects use it). ",1541575831.0
clbustos,"The $(document).ready stuff needs jquery, but no bootstrap.js, so you can load jquery library on header, and leave bootstrap.js at the end.",1541439417.0
moomaka,"A lot more reasonable than the initial plan for 2.0, though I'll still curious how much stuff they plan to break for no good reason in 3.0. ",1541428964.0
this_is_not_nil,"> We‚Äôve come up with a system that allows everyone to use multiple major versions of Bundler at the same time

So no more 

> ""OMG YOU ARE USING AN OLD, ANTIQUATED, LEGACY VERSION OF BUNDLER, UPGRADE NOW OR THIS COMPUTER WILL EXPLODE, YOUR DOG WILL DIE, AND ALL OF YOUR CREDITCARDS WILL BE POSTED TO 4CHAN (new version: 1.16.3, current version: 1.16.2)""",1541432944.0
lewispb1,"Bundler is a great tool, I just wish I didn't have to _think_ about it so much.",1541446528.0
honeyryderchuck,"So, it is a planned semver major upgrade for the annual non-semver ruby releases. And all so we can have another zigagem bundled into Ruby installed packages... is it really worth it?",1541428647.0
joltting,"Honestly think this is great news. Bundler should have been apart of core Ruby, for a while now.  Just about everyone on nearly every project with dependencies outside of core, is using it.",1541467087.0
neotorama,You can use zapier,1541418015.0
andyw8,WUPFH?,1541435531.0
jrochkind,"I'd just deal with the multiple APIs/gems, myself. I don't think a gem wrapping them is gonna add too much. ",1541452140.0
jasdeep13,"Not sure if something like this exists for Ruby or not, but there is https://github.com/notifme/notifme-sdk for JS. 

Worth checking out. ",1541423454.0
joshmn,"Rolling your own isn't too bad. I've done it for [TinyVoicemail](https://tinyvoicemail.com). Any gem will likely use the respective gems underneath anyway.

",1541431206.0
zen_automate,"You can create such workflows in [Automate.io](https://Automate.io)

With it, you have a lot of integrations possible like - Gmail, MailChimp, Twilio, Slack etc.",1541657148.0
cray4K,Why don‚Äôt you make it a proper gem?,1541348367.0
Grimnur87,"I look forward to trying this one day, I had an API wrapper partly written in Node.js but I seem to recall some annoying detail of their API which required multiple calls to be made just to get some basic details about users and their completed katas.",1541357189.0
strzibny,I like the general idea and I am interested where this project goes :).,1541408739.0
adamluzsi,"I like the idea!

Was there any inspiration taken from [foreman](https://github.com/ddollar/foreman)  perhaps ?",1541401548.0
disasymbol,a good number of up votes at this point with no comments. this subreddit is becoming as much of a popularity contest as javascripts.,1541354160.0
Tomarse,You should probably use something like JSON.,1541317260.0
jamie_ca,"You should be able to set GEM_HOME to somewhere in your homedir, and then install gems there.

Alternately, if Bundler is installed systemwide you can `bundle install --path ./vendor/bundle` to install gems locally for a project.",1541356107.0
Jiggins_,"A couple of things:

-	You are assigning variables in a while loop rather than checking. Use `==` to check if two things are equal.
-	You are comparing into to strings in the second method: `@wheels >= ‚Äú1‚Äù`
-	There are a few variables that can probably be omitted (mostly Boolean variables)
-	Take a look at the Highline gem for cleanly handling stdin questions
-	Take a look at Rubocop to get other suggestions on code quality.",1541323700.0
InCaseOfEmergency,"Probably too late for your assignment, but try using jruby. It has much less accidental thread safety.",1541634340.0
keyslemur,"Noted that I managed to kill one of the channels, so sound is only coming out of one ""ear"". I have that fixed for future streams, feel free to tell me if you notice anything like that while watching!

&#x200B;

This one covers procs, blocks, and lambdas in some basic detail.",1541274659.0
crankprof,I really enjoyed the books by Jesse Storimer on systems programming - they were very insightful: https://www.jstorimer.com/pages/books,1541281045.0
synt4x,"[Ruby Under a Microscope](http://shop.oreilly.com/product/9781593275273.do) is high on the advanced side, but is the best book I've found to completely understand a the language.",1541301693.0
moomaka,I don't believe there is any way to do this without `eval` (or a C extension). ,1541272199.0
TextileWasp,look at [https://ruby-doc.org/core-2.2.0/ObjectSpace.html](https://ruby-doc.org/core-2.2.0/ObjectSpace.html) ,1541269037.0
look_at_the_sun,"Ruby is a language that prioritizes programmer satisfaction. It's designed to make things pleasurable for you as you're completing tasks. It's got a great standard library, clear syntax, and a large community providing libraries for many things that you may want to do.",1541261095.0
Earthling1980,"Since you specifically asked about JavaScript, I'll say that I like Ruby because it doesn't require all kinds of ridiculously un-needed punctuation (parentheses, semicolons, curly braces, etc) nor the rigid typesetting of Python.

In addition, Ruby seems the most consistently object-oriented. For example, in js/py some methods are standalone and some use the object.method paradigm, but it's never clear (to me at least) which to use when.",1541259783.0
jawdirk,"The ruby community is great at adhering to ""convention over configuration."" What that means is you can almost always get things to work with very little code, and then iterate to get the specific behavior you want.

I'll also say that ruby is the least clunky language I've used. It's syntax allows graceful movement between object-oriented and functional styles. You can write gross ruby, but you never have to.

I also think ruby is great at avoiding boilerplate. Another way of saying this, is that it's good at creating Domain Specific Languages.",1541260304.0
covercash2,"looking back over Ruby's lifetime, I'd say it's strength is in quick, effective prototypes. you can build a business quick with Ruby, and once performance becomes an issue you migrate to something closer to metal. a ton of now huge websites started as RoR projects. ",1541265367.0
Jdonavan,"I've been writing code for 30 odd years now.  Starting with BASIC on an Atari 400.  In my professional career I've worked in C, C++, C#, Elixir, Java, Javascript, Pascal, Perl, Python, Ruby, Visual Basic and probably a few more I've forgotten.

Of all the languages I've worked with, Ruby has by FAR allowed me to accomplish more work for a given amount of effort.  It's incredibly flexible and ""elegant"".  

I say elegant because it's less verbose than many other languages and it's syntax and idioms make it easy to read. Things like:

    do_something unless some_condtion

instead of 

      if(!some_condition) do_something();    

The standard library gives you a lot of functionality and the enumerable module makes list comprehension easy.  You can accomplish in one line of Ruby what would take dozens in other languages.

Ruby is NOT a language to learn for high performance applications, mobile apps, or games.  (Though I'm sure someone will chime in to say they do mobile apps and games in ruby)",1541276477.0
pfharlockk,"My favorite two features are that you can implement complex logic with a very small amount of code and that it makes it easy to write elegant code.

It's block syntax is a particular favorite.

I also like it's interactive console which I use all the time.",1541262921.0
JonnyNorCal,"Ruby is, for better or worse, an extremely flexible language. I think it's great for creating DSLs (Domain Specific Languages), because you can write code that is very terse, but does a lot. For example, look at [capistrano](https://capistranorb.com/) or [rake](https://github.com/ruby/rake) or [rspec](http://rspec.info/).

A creative developer can do all sorts of interesting things. Monkey-patch existing classes? Sure! Change the behavior of standard libraries? Why not? Including one file could alter how an entire Rails app behaves? Go for it!

The flip side is that it's possible to write really cryptic code. Not cryptic like dense Perl or obfuscated C. More like staring at a small chunk of code and asking yourself ""How does this do anything?!?""

I've been using Ruby for about 7 years now, and have been programming for over 20 years. I like it a lot, and feel comfortable with it, but I try not to be too ""clever"" with it, if I want anyone else to understand the code that I wrote.

(Oh, and if you have a use case where high performance is really important, it's probably not the best choice.)",1541300891.0
rbuchberger,"Something about ruby just fits my brain, you know?

Here's an example of the 'programmer friendly' philosophy:
    
    ~ $ python
    Python 2.7.15rc1 (default, Apr 15 2018, 21:51:34) 
    [GCC 7.3.0] on linux2
    Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
    >>> exit
    Use exit() or Ctrl-D (i.e. EOF) to exit
    >>> quit
    Use quit() or Ctrl-D (i.e. EOF) to exit
    >>> exit()

    ~ $ node
    > exit
    ReferenceError: exit is not defined
    > quit
    ReferenceError: quit is not defined
    > 
    (To exit, press ^C again or type .exit)
    > .exit

    ~ $ irb
    irb(main):001:0> quit
    ~ $ irb
    irb(main):001:0> exit
    ~ $ 

                                                                                                                                                                                                                                                     
You spend less time sweating the irritating details. 
    ",1541417695.0
CrackCrackPop,"Easy to read code

A lot of examples

Runtime debugging



On the downside I'd like to note

Focus on video explanations

Beginner focus. Less advanced material 

Atrocious documentation
",1541266168.0
uptimefordays,"It depends on what type of programmer you are, as an automation oriented sysadmin, I prefer the broad functionality Ruby offers. Used with Chef I can manage a whole fleet of Unix machines, used locally I can perform a lot of really powerful low level administrative functions, Ruby a much more versatile language than folks give it credit for. As others have pointed out, there are a number of Ruby based DLSs.

Ruby is also easy to read and offers a super simple syntax which is great compared to other object oriented programming languages.",1541272517.0
jb3689,"Extreme productivity. This comes through with being dynamic and concise, having great libraries for everything, having an excellent test story, and being well-supported by many platforms. Ruby is one of the few languages where no matter how fucked up a piece of code is you can unfuck it rather easily because the runtime lets you dynamically change classes and methods",1541273872.0
Jdonavan,"I've been writing code for 30 odd years now.  Starting with BASIC on an Atari 400.  In my professional career I've worked in C, C++, C#, Elixir, Java, Javascript, Pascal, Perl, Python, Ruby, Visual Basic and probably a few more I've forgotten.

Of all the languages I've worked with, Ruby has by FAR allowed me to accomplish more work for a given amount of effort.  It's incredibly flexible and ""elegant"".  

I say elegant because it's less verbose than many other languages and it's syntax and idioms make it easy to read. Things like:

    do_something unless some_condtion

instead of 

      if(!some_condition) do_something();    

The standard library gives you a lot of functionality and the enumerable module makes list comprehension easy.  You can accomplish in one line of Ruby what would take dozens in other languages.

Ruby is NOT a language to learn for high performance applications, mobile apps, or games.  (Though I'm sure someone will chime in to say they do mobile apps and games in ruby)",1541276893.0
Shaper_pmp,"* Expressiveness and programmer happiness are a major priority of language design.  As a programmer (who programming languages are designed to be used by) this is sadly true of far too few languages.

* Because of that expressiveness Ruby is not necessarily the best language for solving any particular problem in, but it's generally *amazing* for writing a DSL in that allows you to solve the problem (and any/all other problems in its class) more elegantly than otherwise.",1541277705.0
Slotos,"Ease of prototyping.

Most other things are overshadowed by other languages with most points of praise coming to personal preference, habit, or simple unwillingness to admit that this one point is extremely important and can make or break a project or business.

It is also the point that tends to lead to increased cost of ownership of ruby projects in later stages. It is simply too easy to bodge together something that fits the bill here and now.

It is a great tool for worse is better approach. It is just one of many otherwise.",1541308791.0
pau1rw,"It's so nice to write. I came from PHP and honeslty wasn't really up to learn it, but my company started using more and more Ruby code and I had no choice. Now, I'd never go back and using Java-esque PHP frameworks makes me feel gross. 

&#x200B;

I would suggest that ruby is more of a prototyping language, or a language that is useful to getting stuff out the door - as an agency, thats exactly what we need to do and it saves a bunch of time, especially when using Rails. 

  
Its also a mature ecosystem, so if you run into problems, then its very likely that they have already been solved on StackOverflow, so you can fix the issue quickly and move on. ",1541263680.0
Tomarse,"Personally I find it's minimal syntax makes it easy to build something quickly. It's openess also makes it easy to monkey patch core classes, which is good for polymorphism.",1541261349.0
igorpreston,I‚Äôd prefer having #from_hash or #from_h as an API.,1541239418.0
NilsLandt,"Personally, I would be surprised if a method called `from_hash` set some kind of internal state. For me, `.from_x` calls the `initialize` (possibly of the appropriate subclass) while turning it's argument into a format that `initialize` understand.

I would call a method that initializes an object and sets internal state `.deserialize`.",1541240024.0
gray_-_wolf,given there is `#to_h` I woul go with `#from_h`,1541243632.0
seainhd,"What other data structure would you use instead?

Why not just Object.set_attributes(yourhash)

",1541244134.0
twinklehood,"I think I'd go for a class method initializing the object from a state. 
`MyThing.from_hash(attributes)`

If you really want to import a state into the instance, I'd say that's starting to smell like the state should be it's own class, which could be intialized with whatever you wanna load the state from.

    state = StateObject.from_x(attributes)
    myInstance.load_state(state)
",1541256245.0
lcowell,"I'm reading `#from_hash` as an instance method, which is a little confusing to me. That says to me that I'm getting a whole new object in exchange for the provided input. I've prefer `#load_from_hash` as an instance method name. It's hard to say without concrete examples.

In general I like to add a class method called `from` to handle type conversion and initialization (I borrowed this pattern from rust). This method can check which methods the input object responds to or what type the input is, and then perform the conversion and initialize the object.",1541256351.0
jrochkind,"I don't think there's a completely standard convention. _Some_ things in stdlib provide a kind of weird Kernel#MyThing() class method. 

    def Kernel.MyThing(arg)
        translate_to_my_thing(arg)
    end

    # then anyone can just call:
    MyThing(foo) #=> a MyThing instance
    # Note that is calling Kernel.MyThing, a completely different method than
    # MyThing.new

But I wouldn't do that! Among other things polluting Kernel seems evil. And it tries to convert from any kind of input at all to MyThing, which is just, yeah. So it might be a convention in the stdlib, but I wouldn't try to emulate it. 

I think the next most common is indeed `MyThing.from_hash(hash)`. Note that's a class method, not an instance method. (When we abbreviate something as `#from_hash` it usually means we're talking about an instance method, but believe you meant a class method all along?  At any rate, I think a class method should work best here). ",1541258195.0
kidtaicho,"I would want some clarification on what you mean by ""objects state"", whether this is from scratch or also supports an update. If its the former, I'd agree with what some others are saying, you wouldn't need or want a from method and rather just have an initialize method that takes that object as its argument, e.g Object.new(hash).

A hash is probably the most complicated object to handle that way since you so commonly have an argument hash for initialize methods.

Alternatively using the builder might be another good way to handle this without complicating initialize on your object. (Builder::ObjectFromHash or ObjectFromHashBuilder) This might be the option I'd go for particularly if your looking for clarity in naming.",1541260441.0
zaphnod,"Shopify for the user experience, with an API integration to push/pull products and orders would be my recommendation.

E-commerce is very, very complex.  It starts simple, then you realize you need coupons, and discounts, and tracking repeat customers, and .... a million small things.

I've done a Shopify integration with Ruby driving, and it was pretty great.  We got our products loading dynamically, could update inventory and pricing, etc, but at the end of the day, the user got a nice UI to shop with, and we could take advantage of Shopify's deep tools and plugin ecosystem.  Best of both worlds.",1541176698.0
jrochkind,"Assume that DIY is going to be 2 to 10x more time-consuming than you expect. This applies to pretty much any software development. 

E-commerce is a lot more complicated than you might think. (Sales tax and shipping calculations alone, oh my. Refunds, oh my times 5. Refund on one item in an order, do you refund partial sales tax? Shipping? Partial shipping?  Refund to their original method of payment? And the credit card is now expired? Oh and the item has changed price since they bought it, make sure you're refunding what they bought it at. This is just a **beginning** of the headaches). ",1541188509.0
seainhd,"If you‚Äôre planning to make a serious eCommerce store, definitely use shopify.

I‚Äôm a senior rails engineer. Have worked on huge eCommerce production apps with hundreds of thousands of checkouts a week. 

You don‚Äôt want to fuck with that stuff yourself. I promise. 

Especially starting out the most important part is marketing and getting customers. ",1541210700.0
rpmisms,"Shopify. I‚Äôm a full-stack developer, and I just won‚Äôt bother. Shopify has already dealt with most of the complexity and edge cases. ",1541219261.0
IroNickName,Definitely Shopify. All the grit of eCommerce is taken care for you. It's also incredibly extendable. I've built integrations with numerous other systems with ease.,1541229658.0
sammygadd,Ok. So everyone agrees on Shopify. That makes it an easy decision üòÅ,1541230158.0
dunrix,Shopify as a ready made and polished paid product or Spreecommerce as a solid starting point allowing customizations beyond all possible bounds while staying in full control and relatively independent.,1541237511.0
ezekg,"I've built multiple ecom sites using Spree, WooCommerce, Magento, vanilla Rack, vanilla Rails, etc. Just use Shopify. Every ecom site I've built has turned into an over-budget nightmare.",1541435243.0
modnar42,"This is a pretty broad question, so I‚Äôm not sure how to help you. In general, if you try to do something and run into problems it‚Äôs easiest to get help if you 1) share the exact code you had a problem with along with 2) the exact text of the error message you received. 

If you still have the code where you tried to add User and got an error, share that code and error and I‚Äôll try to point you in the right direction. ",1541171208.0
bxclnt,"You will need to create your model and then add another migration to create the association in your database. 


```
rails generate model user name:string # this will also create a migration to create the user table
rails generate migration add_user_to_review user:references
```

If you look at your latest migration it should look something like this:

```
  def change
    add_reference :reviews, :users
  end
```

What this does is it adds a `user_id` column to the `reviews` table, where you store the ID of the, well, user the review ""belongs to"" (see below). Now after you run `rails db:migrate` your Database is ready, but you still need to tell your models about the association. 

```
class Review < ApplicationModel
  belongs_to :user
end

class User < ApplicationModel
  has_many :reviews, dependent: :destroy
end
```

You can find more about how associations work here: https://guides.rubyonrails.org/association_basics.html",1541172268.0
rick_and_mortvs,I think it‚Äôs pretty super(),1541194963.0
TheFaithfulStone,"```
def get_average_by_method(time_object_list, method)
  count = 0
  sum = 0
  time_object_list.each do |i|
    count += 1
    sum += i.send(method)
  end

  return sum/count
end
```


Call it with `get_average_by_method(time_object_list, :hour)`  


`send` is a method (on Object) that ""calls a method"" in a string on an object.  


(Technically, Ruby doesn't ""call methods"" so much as ""send messages"", but that's probably a distinction without a difference for your purposes.)

Now - all of that said - this isn't very ""Rubyish"" code - `Enumerable` has a method called `inject` or `reduce` (they're the same) that you should always think about when find your self accumulating into a single value outside of the loop.  `inject` takes the return value of an expression and passes it as the block parameter to the next iteration of the loop - so your function can be simplified into:

```
def get_average_by_method(time_objects, method)
  time_objects.inject(0) { |memo, time| memo += time.send(method) } / time_objects.size
end
```

Ruby implicitly returns the results of the last expression in a block, so you don't need a return.

Note:  I didn't test this and I can never remember the order of arguments to inject.

https://stackoverflow.com/questions/1341271/how-do-i-create-an-average-from-a-ruby-array
",1541120475.0
jrochkind,"All of the code in this thread is hard to read (four space indent makes a code block on reddit, if you want to do that), so someone else may have already said all of this, but! 

The way to do exactly what you're asking, if I understand what you want, is:

    def get_average_by_method(time_object_list, method)
      count = 0
      sum = 0

      time_object_list.each do |i|
          count += 1
          sum += i.send(method)
      end

      return (sum / count)
    end

    get_average_by_method(list, :wday)

A possibly more rubyish and flexible way do it is to use the ""block"" parameter that all methods get, which can be called with `yield`, so the caller can pass in whatever transformation they want (which may not just be a method)

    def get_average_by_method(time_object_list)
      count = 0
      sum = 0

      time_object_list.each do |i|
          count += 1
          sum += yield(i)
      end

      return (sum / count)
    end

    get_average_by_method(list) do |item|
      item.wday
    end

But here's how I'd probably actually write this exact thing, and not even bother putting it in a method, because it's one line:

    avg_wday = time_object_list.map {|v| v.wday }.sum / time_object_list.length
    # or another shortcut:
    avg_wday = time_object_list.map(&:wday).sum / time_object_list.length

Ain't ruby grand?  ""blocks"" are my favorite part of ruby. The built-in `map` method, which takes a block, is a great one. When I'm writing my own code, remembering I can take a block param in a method I write is sometimes a way to turn a mediocre API into a great one. ",1541125851.0
cavinkwon,"    avg_wday = time_object_list.sum(&:wday) / time_object_list.size

so, you can pass method symbol.

    avg_of = ->(times, method_sym) { times.sum(&method_sym) / times.size }
    avg_of.(time_object_list, :wday) # avg of wday
    avg_of.(time_object_list, :hour) # avg of hour",1541150007.0
WhirlyBirdrock,"My Ruby is pretty rusty, so I'm going to apologize up front. It sounds like you are trying to do dynamic dispatch. You may be able to use the public_send method with a string indicating the method signature. I'm not in front of a computer right now, so I can't test it.",1541119642.0
the_jester,"Congratulations, you have just intuited the existence of [higher order functions](https://www.sitepoint.com/functional-programming-techniques-with-ruby-part-ii/)! Not only can you pass function arguments, you can pass function control to them using \`yield\`.

You can also save quite a bit of effort with the Enumerable [reduce](https://ruby-doc.org/core-2.2.0/Enumerable.html#method-i-reduce) method.

&#x200B;

At the risk of approaching obfuscated code, you can do:

`def get_average(time_list, meth)`  
`return time_list.reduce(`[`meth.name`](https://meth.name)`) / time_list.length`  
`end`

However, since you have that down to a single line, I would throw out the method and just put in specific code at the original location:

`avg = time_list.reduce(:hour) / time_list.length`

in one place, and

`avg = time_list.reduce(:wday) / time_list.length`

in the other!

Note, I don't have IRB on this machine, so I did not test the above code.",1541120770.0
rubyrt,"Another way to do this is with a block:

    def get_average_by_field(time_object_list, &method)
      count = sum = 0
    
      time_object_list.each do |o|
        sum += method[o]
        count += 1
      end
    
      sum / count
    end

And then

    avg_hour = get_average_by_field(objects) {|x| x.hour}
    avg_hour = get_average_by_field(objects, &:hour)",1541155072.0
jawdirk,"Ruby doesn't have interfaces, but every major gem/framework relies on the concept of interfaces. Every single use of that programming paradigm, in ruby, is duck typing in real-world code. Duck typing absolutely works. Sometimes it's a hassle to find out that the thing you've been treating like an array for the last three years actually isn't an array and doesn't entirely quack like an array, but sometimes you never become aware of that detail because it simply doesn't matter, and that is the power of duck typing.",1541118200.0
janko-m,"Shrine uses duck typing when uploading files to a storage. The input IO-like object only needs to respond to: `#read(length = nil, outbuf = nil)`, `#eof?`, `#rewind`, and `#close`. That enables it to accept *many* type of objects:

* `File`
* `Tempfile`
* `StringIO`
* `IO` (e.g. an `IO.pipe`)
* `ActionDispatch::Http::UploadedFile`
* any Rack input implementation (`Unicorn::TeeInput`, `Passenger::TeeInput`, `Falcon::Adapters::Input`)
* `Shrine::Plugins::RackFile::UploadedFile` ([rack_file](https://shrinerb.com/rdoc/classes/Shrine/Plugins/RackFile.html) plugin)
* `Shrine::Plugins::DataUri::DataFile` ([data_uri](https://shrinerb.com/rdoc/classes/Shrine/Plugins/DataUri.html) plugin)
* `Zip::InputStream` ([rubyzip](https://github.com/rubyzip/rubyzip#reading-a-zip-file) gem)
* `SymmetricEncryption::Reader` ([symmetric-encryption](https://rocketjob.github.io/symmetric-encryption/#large-file-encryption) gem)
* `Down::ChunkedIO` ([down](https://github.com/janko-m/down#downchunkedio) gem)
* ...

They don't need to include something like a Java interface for Shrine to support them, they just have to implement the required methods, with behaviour specified by the `IO` class.",1541148688.0
AnAge_OldProb,It‚Äôs also worth noting that some duck typing can work statically: it‚Äôs typically called structural typing . Typescript and flow do this for JavaScript (a language that leans on dynamic duck typing heavily) with powerful but unsound type systems. There are [proposals](https://medium.com/byteconf/stripe-is-building-a-ruby-typechecker-d6cd7cee6abf) to bring these sorts of guarantees [and surface syntax to aid them](https://bugs.ruby-lang.org/issues/9999) to ruby. Crystal provides static duck typing and feels a lot like ruby. Go also uses a very weak form of structural typing. ,1541119123.0
honeyryderchuck,"The comments seem to reflect that people either come from a different background and fail to perceive duck typing, or are frustrated because they'd expect and want such things to be caught at compile time, not runtime. The second one can only be solved by the ruby core team, and it's not easy to solve due to ruby's always-dynamic nature.

The first one though, is a developer issue only. As all powerful features, they take some time to be fully understood, and time is rarely a variable in our daily jobs. Hence, the way we perceive it is shaped by our past experience. As most languages taught us to think in terms of types, interfaces, inheritance (and Ruby still kept some of these concepts), this is how we're gonna approach it. On the other hand, the description of the issues with rails params leads me to diagnose it as ""primitive obsession"". @janko-m just gave a great example of how shrine leverages duck typing. Actually, most core-ruby APIs already use duck-typing (keyword arguments, all of the IO methods, Enumerable/Enumerator...). But in the end is always up to us to make it possible. 

Take rack, for example. Its spec remains unchanged for many years, however, and I've seen this too many times in middlewares, people to this day still expects the second value of the response to be an Hash, when the spec only requires it to [respond to #each""](https://www.rubydoc.info/github/rack/rack/file/SPEC#label-The+Headers).",1541156931.0
shevy-ruby,"I myself use a lot of .is_a? more than .respond_to?.

Duck typing means to remain flexible in your implementation. If you do not have to query for a type, and can get away with it, then this is GOOD.

I don't think duck typing is cargo cult programming at all. I would, however had, agree that duck typing is overrated.

> And so when we see an object used in some way,
> we can't know if it's wrong,

That is complet rubbish. The point is that YOU DON'T HAVE TO CARE, if you can get away with it.

> In my Ruby (mostly Rails) coding, I introduce more static typing

Many rails folks are bad at ruby code. Rails in itself is strange. The whole advocay of ""there is only one way"", aka the rails way, is at complete odds to the flexibility introduced via ""there is more than one way"".

What do you even mean with ""static typing""? Where do you see that in ruby?

> I want to know in an instant, without leaving the editor screen, what
> methods I can call on object xyz, and which library it's from.

And you know that how exactly? I don't understand why you need to
know an object responds to .blabla if you never need that.",1541158899.0
realntl,"It's worked wonderfully for me. A few points:

* I seldom check if something ""is a"" class, because I'd rather do without that cyclomatic complexity. A good rule of thumb is that if it isn't obvious what's supposed to be passed in to a method, something is wrong.
* Most of my classes are under 100 lines of code, and their interfaces are small and focused. They can be readily understood.
* I always use namespacing. Sometimes this means a lot of nested namespaces, but I'll take that over not having an organizational taxonomy of classes and modules.
* I would get no benefit from an IDE, because my projects never get so expansive as to benefit from one. If I can't find where a constant is defined within about 5 seconds, something is wrong. I fix it.

I don't work in legacy apps these days, though. I do want to harp on this point:

> But for me in the real world of legacy apps, I constantly want to know, ""what is this object""? What's its type? Because I need to know how to use it; what its methods do, and what they return. A type isn't evil - it's simply the sum of the messages that an object responds to.

In the world of legacy objects, I seldom ask those questions about the essence of a class. The reason for that is that most of the classes will more likely be dumb receptacles for code than intrinsically useful.

The better your code is, the better duck typing works.",1541165625.0
jb3689,"It seems like you're saying ""I want the argument to tell me what I can do it"". Duck-typing flips that. You tell the argument what interface you expect it to implement. These are still types, and you still need to be organized about your type structures - how you enforce the interface is implemented is up to you. If you have any doubts about an object you could always wrap it in a facade

Your Ruby programs should have types but how you enforce and organize them is up to you

In my experience, pretty much every case where this has become an issue has been because of objects that are too big with really wide, confusing interfaces. The correct approach (in my opinion) is to limit scope so that things are easy to reason about - then you don't have this problem any more and interface checking becomes more or less a non-issue

As far as real successes in duck-types, I think it comes down to things that require very small interfaces like \`Enumerable\` which on requires you to implement \`each\`",1541180873.0
sdn,Every time you call .each on a container - do you really know the type of the class? ,1541135561.0
xiongchiamiov,All the time when interacting with third-party code that didn't anticipate me using it the way I am.,1541170817.0
hmaddocks,Rails isn‚Äôt a good environment for determining if duck typing is good or bad. Rails has a TypeMismatch exception FFS,1541197083.0
BadMinotaur,"I wanted to add something else. I'm a casual user of a piece of software called RPG Maker VX Ace -- it's the software that got me into using Ruby, in fact. It's a bit old now, it was released in early 2012, so it uses Ruby 1.9.3.

The way the software works, is it has a ""game player"" built out of native objects (like bitmaps, sprites, display lists, etc) but exposes these objects to the Ruby code that runs the actual game logic. Because of Ruby's duck typing, if I wanted to make another player for the games it creates to add support for Ruby 2.5, gamepads, hardware acceleration and other things, I can. I can redefine what a Bitmap is, or what the Input module detects.

It wouldn't be easy - I'd still need to scour the documentation to see what methods I'd need my new substitutes to respond to, but it's still possible.

I know it's an edge case and not at all typical of what a professional dev would see in their day-to-day, but I thought it was a unique example of when duck typing can give one an unexpected solution to an issue.",1541239113.0
pau1rw,"I love it. I use it for a 'purchasables' paradigm in a shop that has many different types of ""products"" - there is a reliable set of common methods that provide the required functionality for that purchasable. To make it a little more reliable however I added a \`concern\` that includes those methods with \`raise NotImplementedError\`  inside.",1541156471.0
DrRengers,"I'm not a huge fan of duck typing, precisely for the reasons you state. I usually find myself introducing `is_a?`checks to make sure an object is what I expect it to be.

The main problem I run into with duck typing is that I'm never sure a method does what I think it does. Sure, this instance responds to `read`, but do I know for sure what that method does? And how many parameters it has? For class A it might mean something different than for class B.

Basically I feel that I'm always kinda 'guessing' or hoping the devs followed good naming style, which requires you to either implement manual type checking at runtime, or write extensive tests to make sure it works.",1541152787.0
joelbluminator,"Well the title is a bit ridiculous. 

Yes it worked out for a lot of people, most of the web is built on dynamic typed languages (ruby, php, python, javascript). ",1541151541.0
jujubean67,"> Testing is more important than shipping. 

Nah. ",1541097948.0
kmaicher,"I also heard of a practice to keep the order of args the same as mentioned in the function's name, therefore:

Bad:

    def add_month_to_date(date, month)

Good:

    def add_month_to_date(month, date)",1541164211.0
d4be4st,"You know there is already a community ruby style guide? https://github.com/rubocop-hq/ruby-style-guide

Also for rails https://github.com/rubocop-hq/rails-style-guide",1541139828.0
sshaw_,"> Avoid negative conditionals

    # Bad
    if !genres.blank?
      ###
    end
  
I mean this is just silly.

>  Ruby comes with its own testing tool (RSpec) built right in

When did this happen? 




",1541115686.0
sshaw_,"> Use default arguments instead of short circuiting or conditionals
> ... your function will only provide default values for undefined arguments

I think this makes it inferior. 

    def create_micro_brewery(name)
      brewery_name = name || 'Hipster Brew Co.'
      brewery_name.something
    end

    create_micro_brewery(nil) # no error

    def create_micro_brewery(brewery_name = 'Hipster Brew Co.')
      brewery_name.something
    end

    create_micro_brewery(nil) # error

Now without an explicit type check or `respond_to?` they both can fail. But in my experience `nil` is the common case and is why I more or less don't use default arguments.

> Default arguments are often cleaner

Minimizing the chance of runtime errors is the cleanest approach.",1541114814.0
Freeky,"What you're doing there is basically combining multiple datasets together into an expression fragment containing subselects, a bit like:

    (((SELECT ... WHERE ...) AND (SELECT ... WHERE ...)) OR (SELECT ... WHERE ...))

What you want is to chain them to build up a single dataset representing your query:

    def c
      a.b.or(...)
    end

Which is functionally identical to writing:

    Test.where(...).where(...).or(...)

Not sure if there's a nice way of getting the or condition from a scope, short of literally putting the arguments in a constant or so.",1541105080.0
timezone_bot,"5 PM UTC happens when this comment is 5 hours and 23 minutes old.

You can find the live countdown here: https://countle.com/8FPdkKnBK

---

I'm a bot, if you want to send feedback, please comment below or send a PM.",1541072219.0
FooBarWidget,"Hi all, I am one of the Passenger developer, and CTO at Phusion. This session will not only show you how the feature is going to be coded, but I'll also be around to answer questions. So treat this as a **coding session + AMA**.

&#x200B;

The session won't only be about coding. It's accompanied by a presentation that explains Passenger's architecture. The code will also be explained: what does this code do? how does it fit in the architecture? what are caveats to lookout for? what performance characteristics to lookout for? how do these C++ language features compare to other languages like Ruby, JavaScript, Java, etc?

&#x200B;

Looking forward to hear from you all.",1541082491.0
danshep,"Think about problems that you have in your own life - things you want to keep organised, things you want to plan. Find something that you do that currently has some annoying steps.

Then make yourself a little website or script that helps you do that thing easier.

Some personal examples:

My music collection has some duplicates, but when I run the duplicate scanner in Musicbee it tells me about a bunch of tracks that I don't consider duplicates so I can't see the signal for the noise. So I wrote some scripts to scan through and report possible duplicates, letting me mark things as valid so that they don't appear in future reports.

The gig guide has hundreds of shows, but most of them I don't care about, so I made myself a little site that grabs the gig guide, filters out bands I know I don't like and lets me know about shows with only the bands that I like or have never seen before. Then make myself a spotify playlist of bands I've never seen.

I want to see 80+ films at my local film festival, but the film festival website is designed for somebody trying to see only a couple of films - I scraped the website and put all the data in my own database and put an interface on top focused on how I want to browse the guide.",1541040848.0
sshaw_,"Maybe checkout the bug reports and feature requests on the project listed here, in a category that you're interested in: https://awesome-ruby.com/",1541033647.0
trustfundbaby,"You're going to have to find something to apply it to I think. Maybe an open source library that you care about? I was lucky to pick up a legacy project in Rails that nobody had the expertise to work on many years ago then used it to build a project management tool that nobody used. lol. 

But thats how I got hooked on it. Think of something to build that you'd personally use, maybe a command line tool to populate data for one of your desktop apps?",1541036723.0
sparklelipz,"wow, as someone a little more than halfway through the same (awesome) course, i've been wondering the exact same thing 

i feel like once i'm done i'm just gonna try to force feed myself rails before i really try to work on something...seems hard to find something that wants/needs ruby without rails ",1541069914.0
jegodin,http://rubyquiz.com/,1541078069.0
huntersfuntime,"I would say to make a web scraper something fun. I first started with a Instagram Bot. This is also a great tutorial to code along with, it is simple, but shows you how to refactor. Probably one of the best free resources for ruby/rails. [https://www.theodinproject.com/courses/ruby-programming/lessons/event-manager?ref=lnav](https://www.theodinproject.com/courses/ruby-programming/lessons/event-manager?ref=lnav) ",1541091112.0
Hell_Rok,"I recommend strongly against using things like capybara and selenium for this sort of stuff. It's usually a lot more reliable to use the network inspector tab to find the actual api calls they are using.

The benefit of this approach is it's generally already in a json format so parsing is even easier than if you used nokogiri.",1541028646.0
jrochkind,"Loofah is what Rails uses for HTML sanitization (actionpack depends on rails-html-sanitizer which depends on loofah). 

You should update your loofah dependency. ",1541016599.0
olivierlacan,Affects ;-),1541056271.0
this_is_not_nil,It seems like Rails aren't interested in not depending on a vulnerable version: https://github.com/rails/rails-html-sanitizer/pull/73,1541168181.0
jrochkind,"I believe Loofah is what Rails uses under the hood for sanitization, so you'll want to update. ",1541015021.0
MrPopinjay,Outside of Rails the convention I see is to match the class hierarchy. This is my preference as it makes it easy to find which file a class is found in.,1541010723.0
zverok_kha,"I believe rubocop-rspec (and its associated style guide) enforces for each `MyLib::ClassA::ClassB` (which is supposed to be defined in `lib/my_lib/class_a/class_b`) corresponding spec structure as `spec/my_lib/class_a/class_b_spec.rb`, most of the time it is sane enough rule to follow. So top-level spec folder probably looks like this:

```
spec/
  my_lib/ # ‚Üê that's where actual specs go
  spec_helper.rb
  fixtures/
  helpers/ # ‚Üê and/or shared/, and/or lib/, where the code to help defining specs live
```",1541018458.0
tomthecool,"> Where do you recommend putting sample data for tests?

There's no golden rule here -- The data might come from within each file, or within the application, or pulled in from another gem, or generated dynamically as part of the test, ....

But *in general*, I would be inclined to put data in `spec/fixtures/*` -- and you can organise sub-folders in any sensible way there.",1541108081.0
thibaut_barrere,"Via https://twitter.com/k0kubun/status/1057654130867499014.

The JIT & MRI is getting better and better on raw performance, which is great!",1540999852.0
mperham,"Wow, the new JIT bumped performance from ~55fps to ~86fps.  That's a huge step forward.

No idea if this will translate to Rails apps (which are typically more IO-heavy than CPU-heavy) but everything helps.",1541003042.0
ksec,"Both TruffleRuby and MRI JIT are not doing well for Rails at the moment ( slower ), they are looking for a small Application that is Rails like but without the huge complexity to benchmarks / measure and optimise. 

",1541008445.0
nynhex,Thanks for the share.  JIT is looking really promising!,1541111993.0
zverok_kha,Reporting spam.,1540984584.0
zaphnod,"The way I'd do that depends on whether this clamping business is needed repeatedly in a single class:

    [:id, :icon].each do |key|
      attr_reader key
      define_method(""#{key}="") do |val|
        instance_variable_set(""@#{key}"", clamp_unsigned_byte(val))
      end
    end

Or if it's needed in multiple classes across a project:

    class Object
      def self.clamped_attr(*keys)
        keys.each do |key|
          attr_reader(key)
          define_method(""#{key}="") do |val|
            instance_variable_set(""@#{key}"", clamp_unsigned_byte(val))
          end
        end
      end
    end

Which would allow you, in any class, to do:

    class Foo
      clamped_attr :id, :icon
    end

In other words, you're messing with metaprogramming, which is a hoot.",1540980455.0
JohnTheScout,"Check out ruby koans, not exactly problem banks but has lots of good examples of different ruby code. ",1540994465.0
rubikair,codewars.com,1540985615.0
OtavioHenrique,https://exercism.io/tracks/ruby,1540987667.0
keyslemur,"Need to still figure out how to get OBS to behave on audio sync. On another note, I'll likely persist videos over to Youtube later as Twitch only has a 14 or so day VOD storage as a free user.",1540968073.0
TunaFishManwich,"Something to consider - The def keyword does not return a symbol in all rubies. In at least some versions of jruby def returns nil, so you can't use that trick there. You would have to define the method first, then call destructure on a separate line.

Something to keep in mind.",1540995270.0
biocs_nerd,"According to the docs, `String#%` subs in things that look more like `""foo%{bar}"" % {bar: ""123""}`. So, I think you need to mutate ""{var}"" into ""%{var}"" first.

&#x200B;",1540945083.0
chrisgseaton,"Look at the documentation for the method you're trying to use.

http://ruby-doc.org/core-2.5.3/String.html#method-i-25

That tells you to look at `sprintf` for the format of the string.

http://ruby-doc.org/core-2.5.3/Kernel.html#method-i-sprintf

That tells you 'A format sequence consists of a percent sign...' which is the bit you're missing.",1540945298.0
ioquatix,"```ruby
#!/usr/bin/env ruby

substitutions = {
	'var1' => 'Hello',
	'var2' => 'World'
}

string = ""my_string_{var1}_{var2}""

puts string.gsub(/{(.*?)}/){|key| substitutions[$1]}
```",1540957318.0
jrochkind,"I'm curious what the rdbms was. 

Does an update like that always cause a table-level exclusive lock (which I think is what they are describing), or is it system-dependent?",1540936212.0
AdamK117,"One counterpoint is that, while SPAs are more complex to develop than stateless HTML pages, backends for SPAs tend to be *much* cleaner because they can focus entirely on handing structured messages.

Another counterpoint is that the alternative to an SPA isn't going back to HTML rendering in the backend. There's nothing stopping frontend developers from having a bunch of separate HTML documents that independently boot and load different javascript libraries/init scripts. In that case, you can pretty much directly emulate backend rendering by having a HTML page for each ""view"" that does frontend template rendering from a JSON response. That solution lets you keep the clean backend *and* avoid a mega SPA monolith - for the cost of using a javascript template rendering library  (small).",1540918932.0
dameramu,"I‚Äôve been using RoR with Turbolinks and Stimulus for a while and it‚Äôs just such a pleasant experience. Meanwhile the same project requires me to maintain a cross platform Angular/Ionic SPA, so I see the problem from both sides. I much prefer for former. ",1540915923.0
conventionalWisdumb,"There‚Äôs little to argue with here except to say that SPA‚Äôs are a good way to transition from bad backend choices to something better. In two shops I‚Äôve worked at SPA‚Äôs we‚Äôre used as a a way of gradually refactoring away from really bad backend choices while still being able to crank out features. The first was a Java app that relied heavily on JSF and rich faces for the view. It was a really unfortunate choice for what was a really complex UI. I left before they completely removed JSF and turned the backend into a restful api but I hear it‚Äôs much better these days to work in and less buggy. The second shop we took a .Net app and over the course of several years turned into it into an SPA then replaced the backend with Ruby on Rails. Now we‚Äôre talking about what can be moved back to the server. Another project at the same company, we took an overly burdensome ‚Äúenterprise‚Äù Spring app and again moved much of it to the front end and now they are in the process of migrating the backend to Ruby on Rails. ",1540911440.0
flanger001,"Not sure I entirely agree here. These are all good considerations, but I don't think they're all the nail in the SPA coffin, so to speak. Plus, what do you do if you need multiple different consumers of the same backend? REST API + SPA has been the better way to handle this in my experience.

I personally feel like I'd rather have a pure SPA than Rails-style RJS and the ""Pretend SPA"" that Turbolinks gives you.",1540915405.0
rerecurse,"Everything doesn't have to be a SPA, some systems are better if they aren't. 

However, SPAs as an architecture enable apps that require high context interactive changes. Mapping tools, editing tools, and almost any tool that lets you make things instead of reading about them are all domains where SPAs shine.",1540921875.0
StormTAG,"The crux of this article is simply, ""Stop using a screwdriver on nails.""

SPAs are a tool in the tool box. Need obnoxiously slick UI? Need something more akin to a Application on the Web? SPAs are fine. Is your site really just a set of glorified reports and forms? MPAs are better.",1540936046.0
buhrmi,"Nice article. After two years of component-based javascript for client- and server-side rendering (vue), I find myself coming back to Rails with Vue components only the browser-side and good-old remote javascript. I missed ActiveRecord and databases with ACID guarantees so much.",1540914754.0
2called_chaos,"Nice read (although I have to admit I never was a friend of SPAs to begin with). One thing that maybe some frameworks already cover but is apparently too high-tech for Google is history management.

E.g. the new YouTube creator studio is an SPA and if you go to page 2 of your videos it doesn't update the history... at all (no back button, no hotlinking, nothing).",1540910083.0
stanislavb,I'd say the same title could be used for Monoliths vs Micro Services... ,1540938261.0
markrebec,"This article just reads like it was written by someone who has no idea what they're doing in this ""new world,"" is feeling left behind, and just wants to complain about it.

I've been working with ruby for >10 years, PHP for years before that, always using ""standard"" architecture. I'd used turbolinks, etc. and it was fine. I was also skeptical of SPAs and a lot of the new frontend stuff until I decided to give it a fair shot about 3 years ago. I would *never* go back.

It has nothing to do with performance or any of the other common reasons refuted in the article and everything to do with the supposed downsides. Velocity is better, development is simpler and overall more enjoyable, concerns are much more clearly separated... I could go on and on.

And no, this isn't coming from a perspective of ""I build everything in node now, wheeeee!"" I still prefer to build my backend APIs/GraphQL in ruby because I absolutely love the language and prefer it for that type of work. (Side note: if you're working with react graphql *might* be the missing link to understand how great all this can be)

Just because you haven't put in the effort or felt the need to understand and learn something doesn't mean the rest of the world is crazy.",1540918429.0
honeyryderchuck,"Most of the arguments of the article aren't related with SPAs, rather with a lot of bad practices around most SPA-based tutorials (ex: you **can** use session-based authentication with it). It also fails to address the reason why SPAs came to be in the first place, right around when smartphones hit the mainstream:

* we need to target multiple devices (can't send them HTML);
* we don't want to duplicate code (HTML-and-JSON-and-routing logic);

",1540994768.0
tenderlove,"Btw, `rb_str_new2` will copy the string you pass in.  The example in this blog post will leak memory because `string_from_library` calls malloc but the caller never frees the buffer.",1540932639.0
jrochkind,I think maybe you don't realize how sarcastic this sounds. ,1540901693.0
gungholiteral,"Please stop posting this junk to this subreddit.

All the best. Cheers. Prost.",1540911764.0
tjwallace,There is also AnyCable https://github.com/anycable/anycable,1540879908.0
MrPopinjay,A similar article using Elixir -> https://phoenixframework.org/blog/the-road-to-2-million-websocket-connections,1540857012.0
klapply,"What the fuck is this half-baked shit? I cannot even define classes there. Pressing enter without typing it returns an error.

https://imgur.com/a/nDd1ecF",1540909548.0
zaphnod,Looks like great foundational work!  Thanks for sharing your progress.,1540860445.0
nordrasir,Is this an ad?,1540826621.0
mperham,"That's... a very limited customer market.  Having worked at IBM and with DB/2 before, I don't wish them on my worst enemy.",1540828951.0
mperham,"`IBM i` has to be the oddest name for a system ever.

> Marketer 1: ""How can we make this completely invisible to search engines?""

> Marketer 2: ""Name it after the first-person personal pronoun?""

> Marketer 1: ""Genius!""

> Marketer 2: *cashs huge bonus check*
",1540835701.0
ksec,I am actually surprised by this as well. I wish some one could give us some insight. ,1540829472.0
slenfbot,"Eloquent Ruby by Russ Olsen. 

You can skip POODR if you have experience with OOP programming, which I assume you do coming from Java. ",1540851378.0
TextileWasp,"I would start with trying to use Ruby for something like Project Euler - to solve the problems. 

After that go to Learn Ruby The Hard Way: https://learnrubythehardway.org/book/

And do the koans: http://rubykoans.com/

Last step is to look at some open source projects and try to understand how they actually leverage Ruby. ",1540828792.0
sadhu89,The well grounded rubyist is the one I learned from when I did the switch from java.,1540875651.0
Muchaccho,I always recommend [The Well Grounded Rubyist](https://www.manning.com/books/the-well-grounded-rubyist-second-edition).,1540885808.0
fedekun,[POODR](https://www.poodr.com/) is great :),1540828895.0
borringUsername,"Thanks for the suggestions, guys.

Most of them are definitely sources I need to look into more thoroughly. However, ""the hard way"", Chris Pine's tutorial, etc appear to me as though they are geared more for new programmers rather than people who have some experience in other languages.",1540848842.0
danshep,"Coming from Java, I'd strongly recommend going with the Pickaxe (Pragmatic Programmer's guide to ruby) - it's targeted very firmly at java developers looking to explore ruby. 

A very early version is available for free here: http://ruby-doc.com/docs/ProgrammingRuby/ That version is very out of date - It's ruby 1.6 and talks about how to install ruby from CVS - but even then I think it's a really great walk through the guts of ruby. There's some features of 1.9 and 2+ ruby that you won't see but they won't be too surprising after the rest of the fundamentals are covered.

> I definitely am not an expert developer yet but I would rather skip beginner topics (like flow control, loops, OOP, etc)

I think it's worth exploring those topics from scratch within ruby, because a lot of ""the ruby way"" is due to ruby approaching a lot of those fundamentals in a very different fashion than you might be used to in a Java world.",1540857981.0
Bizkitgto,"Start with [Chris Pine's Ruby Tutorial](https://pine.fm/LearnToProgram/) to get up to speed. You could also try Hartl's [Learn Enough Ruby to Be Dangerous](https://www.learnenough.com/ruby-tutorial). [Ruby Monk](https://web.archive.org/web/20170704044407/https://rubymonk.com/learning/books) is another excellent resource that takes you from beginner to advanced. Then try completing [Learn Ruby the Hard Way](https://learnrubythehardway.org/book/) by Zed Shaw. Keep the [Pickaxe Book](http://ruby-doc.com/docs/ProgrammingRuby/) handy as a reference. 

Erik Trautman made a series of posts entitled [Ruby Explained](https://www.eriktrautman.com/writing?tag_filter=Ruby+Explained) that are a good read for a beginner.

The [POODR](https://www.poodr.com/) book by Sandi Metz is a classic in the Ruby space! 

If you want to refresh your Ruby skills down the road, hit up the [Ruby Koans](http://rubykoans.com/)!

Also, you could follow the [Ruby section](https://www.theodinproject.com/courses/ruby-programming) in the [Odin Project](https://www.theodinproject.com/) (the list of resources is worth taking a look at!).",1540831903.0
borringUsername,"Thanks everyone.

I see ***Eloquent Ruby*** and the ***Well Grounded Rubyist*** are recommended more frequently.

I am sure I will benefit from reading both; but given time and financial constraints, I just want to pick one at the moment. What did you benefit most out of either? (Just the pros from your perspective, without necessarily comparing each)",1540903046.0
CodingAdan,"You can definitively try reading this one:

""From Java to Ruby: Things every manager should know"" by Bruce A. Tate

And online:

[https://www.lynda.com/Ruby-training-tutorials/303-0.html](https://www.lynda.com/Ruby-training-tutorials/303-0.html)

[https://www.udemy.com/topic/ruby/](https://www.udemy.com/topic/ruby/)

&#x200B;",1541004504.0
three18ti,"A monad is a monoid in the category of endofunctors.

This is actually pretty cool though!  Not sure I'd want to introduce this into production yet... but definitely worth exploring!",1540832724.0
jrochkind,"Until you try to use it in Rails in development mode. :(

https://github.com/ruby-concurrency/concurrent-ruby/issues/585",1540848373.0
billdueber,"From the article:

> And yes, ruby still has a GIL

...unless you're using JRuby, which you definitely should be if you're trying to multithread stuff. Or just run things quickly. For many workloads, JRuby is crazy-fast.",1540835057.0
lockin_name,"If anyone else stumbles upon same problem, here's the solution:   
Uninstall rbenv, then sudo apt install libssl1.0-dev, then re-install rbenv, fixed the issue. Apparently older versions of Ruby doesn't work with the libssl that was shipped with Ubuntu.",1540877908.0
gray_-_wolf,"Dunno, do you have system ruby installed? If no, you could try that, it will make sure dependencies are satisfied... Also you will see which new packages will be installed so you can then remove ruby and install just those.",1540817559.0
borringUsername,"I had a similar issue when I was starting with Ruby. One think that really helped me to get forward was the error messages themselves. Look for missing dependencies, etc  But still, it was one error after another. Getting up and running was more important for me at this stage so I decided to give up and use the one provided by the system.

You might want to do so unless (or until) you have a particular need to use rbenv.",1540826920.0
Zengolden,'The Well Grounded Rubyist'  by David Black,1540846599.0
geraldbauer,"I've put together a recommended list for [""New to Ruby?"" at the (new) Ruby Quiz website](https://github.com/planetruby/quiz#new-to-ruby), also see the posting in reddit :-).

PS: The New to Ruby? list:

- [Learn Ruby the Hard Way](https://learnrubythehardway.org/book/)  by Zed Shaw - free online book edition includes 50+ exercises (starting with Exercise 1: A Good First Program; Exercise 2: Comments And Pound Characters; and so on.)
- [Learn Enough Ruby to Be Dangerous](https://www.learnenough.com/ruby-tutorial)  by Michael Hartl - free online book edition includes many excercises
- [Ruby Exercises @ Exercism](https://exercism.io/tracks/ruby)  by Katharina Owen et al - free online excercises - all 91 excercises include (automated) tests and many solutions for browsing",1540804771.0
phaul21,"I tried to solve this with the FSM gem I've written. It clearly shows in the diagram that the complexity quickly grows out of hands. Still, one advantage is that you can draw this and reason about this by looking at diagrams.

[gem](https://github.com/phaul/mealy) / shameless plug

[diagram](https://github.com/phaul/mealy#csv-parser)

And the code snippet here:


    class CSV
      include Mealy

      initial_state(:start) { @line = []; @text = '' }

      read(state: :start, on: ""\n"")

      transition(from: :start, to: :comment, on: '#')
      transition(from: :comment, to: :start, on: ""\n"")
      read(state: :comment)


      transition from: [:normal, :start], to: :quote, on: '""'
      transition from: :quote, to: :normal, on: '""'

      transition(from: :start, to: :normal, on: ',') { @line << '' }
      transition(from: :start, to: :normal, on: ' ')
      transition(from: :start, to: :normal) { |c| @text << c }
      transition(from: :normal, to: :start, on: ""\n"") do
        emit @line << @text; @line = []; @text = ''
      end

      read state: :normal, on: ' '
      read(state: :normal, on: ',') {  @line << @text; @text = '' }

      read(state: [ :normal, :quote ]) { |c| @text << c }

      finish { emit @line unless @line.empty? }
    end

    def parse(text)
      CSV.new.run(text.chars).entries
    end
",1540812804.0
geraldbauer,"Hello,

 over at [the new Ruby Quiz website](https://github.com/planetruby/quiz#new-to-ruby) I've put together a list of recommended (free) online books and exercises to get started. Any missing? Any other recommendations? How did you get started in 2018?

PS: The New to Ruby? list:

- [Learn Ruby the Hard Way](https://learnrubythehardway.org/book/)  by Zed Shaw - free online book edition includes 50+ exercises (starting with Exercise 1: A Good First Program; Exercise 2: Comments And Pound Characters; and so on.)
- [Learn Enough Ruby to Be Dangerous](https://www.learnenough.com/ruby-tutorial)  by Michael Hartl - free online book edition includes many excercises
- [Ruby Exercises @ Exercism](https://exercism.io/tracks/ruby)  by Katharina Owen et al - free online excercises - all 91 excercises include (automated) tests and many solutions for browsing 
",1540802012.0
jrochkind,"It didn't occur to me that RuboCop is not 1.0 yet. I wonder what the maintainers thoughts are on when/what pre-requisites are appropriate for 1.0. It's of course already being relied on by a lot of people ""in production"", although ""in production"" for a developer tool isn't quite the same thing. ",1540828421.0
Mancinoz,"Awesome, is VoD enabled?",1540776432.0
jdickey,"# **PAYWALLED &mdash; AVOID**

You get three ""free"" views a month on Medium, including accidental clicks on Tweets and links from other media. To not indicate in any way that this post is paywalled is egregious. More than one subreddit have already banned Medium links for that reason; /r/ruby should as well.

/u/karajie: When you find a less deceptively reader-hostile platform, let me know.",1540784726.0
janko-m,"That's a pretty good load time as far as I'm concerned. The most popular CLI I've used that was written in Ruby is [hub](https://github.com/github/hub). So if you want to speed execution time, I would draw knowledge from there, e.g. you can see the [1.11.0 release notes](https://github.com/github/hub/releases/tag/v1.11.0).

However, the maintainers of hub still weren't happy with the Ruby boot time, so they rewrote hub in Go a few years ago. Maybe that also says something.",1540769970.0
chrisgseaton,"I don't think you're going to get much better than that, I'm afraid. Yes Perl is better, but Ruby is already pretty good.",1540800317.0
lzap,"How many rubygems do you have? The design of rubygems allows multiple versions installed but this makes the loading code utterly slow. Recent versions of Ruby are better (2.4 I think) but it cannot be fixed basically and if you have many gems it will need to walk lots of directories.

Ruby has some bytecode compilation support built in but it does not work transparently yet. It will sometime. This would make startups faster as well. Rails use that already: [https://github.com/Shopify/bootsnap](https://github.com/Shopify/bootsnap)",1540843445.0
Freeky,Are you running ruby via a shim like rbenv?  I see that roughly quadruple the startup overhead of a --disable-all test.,1540822340.0
BumpyBallFan,mruby maybe? [https://github.com/mruby/mruby](https://github.com/mruby/mruby),1540842726.0
DuroSoft,"Use crystal

&#x200B;

Disclaimer: the compiler is slow though.",1540767489.0
strzibny,mruby is pretty niche in usage. It was developed to be used in C programs similar to how Lua is often used.,1540766960.0
fedekun,The official [GitHub repo](https://github.com/mruby/mruby) looks like a good place to start.,1540762475.0
myringotomy,"The people who write mruby seem to have absolutely no interest in getting people to use it. They don't have a mailing list, they don't write blog posts, they don't document anything. 

Shame really. It's an interesting project.

",1540775450.0
in0pinatus,"Store the unshuffled names as a constant, then use a linear feedback shift register to generate a cyclically unique pseudorandom index into the array.

    require 'bundler/inline'
    gemfile do
      source 'https://rubygems.org'
      gem 'lfsr', require: 'lfsr/pure'
    end

    class Robot
      POSSIBLE_NAMES = ('AA000'..'ZZ999').to_a.freeze
      private_constant :POSSIBLE_NAMES

      send def self.forget
        @@lfsr = LFSR.gen(POSSIBLE_NAMES.length-1)
      end

      attr_reader :name

      def initialize
        reset
      end

      def reset
        @name = POSSIBLE_NAMES[@@lfsr.next_i]
      end
    end

The properties of a LFSR ensure that names will not be repeated until they're all used up, at which point the sequence will recur. This recurrence is detectable, should you need to, by comparison against the LFSR seed value.",1540789565.0
GroceryBagHead,"> This crying session only lasted 7 minutes.

Aaaaaahh!

Could've just done `('AA000'..'ZZ999').to_a[random_number]` and just keep track of random number. I'm sure there are better solutions, but this the first thing I could think of.",1540761256.0
moomaka,"> I thought maybe it had to do with ""copy = numbers"" was copying the address like a pointer. 

This, assignment is always by value-reference in Ruby. Certain data types are immutable, so it may not appear as such though. `copy.replace(numbers)` isn't the most straight forward approach though, `copy = numbers.dup` is a little more clear, though there are approaches to this problem that avoid the memory copying. I don't want to ruin your fun so won't offer them unless you ask. ",1540756573.0
jrochkind,"This is good, there are a few more ""tricks"" it's good to know. 

What if you want to look up the version of a currently loaded gem? And you don't know if it's got a constant like `Psych::VERSION`, which is after all only a convention?

    if Gem.loaded_specs[""psych""].version >= Gem::Version.new(""3.0"")

Let's say you want to see if a given version is 3.0.x, _including_ 3.0 pre-releases? Where you don't necessarily know (or want to fix in code) the number of the earliest pre-release, maybe it hasn't come out yet?

The `release` method chops off any build/pre-release components. 

     Gem::Version.new(""3.0.0.rcwhatever1"").release
     => #<Gem::Version ""3.0.0"">

     # Or, this is is actually how semver.org says to do it,
     # although for some reason in ruby we usually don't...
     Gem::Version.new(""3.0.0-beta"").release
     => #<Gem::Version ""3.0.0"">

     Gem::Version.new(""3.0.0.rcwhatever1"").release >= Gem::Version.new(""3.0"")
      # => true

Put em together, let's find out if we have a version of `some_gem` installed, that is at least 3.0.0, but we want pre-releases (beta, rc, whatever) to count as ""at least 3.0.0""?

        if Gem.loaded_specs[""some_gem""].version.release >= Gem::Version.new(""3.0"")

",1540736472.0
sshaw_,"Would be good to know what algorithm is being used for encryption and hashing.

Also see [`ENC(1)`](https://linux.die.net/man/1/enc).",1540683357.0
hehestreamskarma,"This smells bad and desperate on their part.

Any reason why you're still with them? ",1540677213.0
manys,$1500 is their GTFO Tier plan.,1540682973.0
logart,"An upside to this is my app is more portable, its taking advantage of AWS PaaS databases, and its going to be less expensive at Cloud66. But I am out $3k. :(",1540680577.0
murui,"I had the exact same experience. I‚Äôve been paying around $200 per month for around 9 years and then suddenly started getting bills for double that amount. I contacted them and all they offered were for me to pay them an additional $150 per hour for their professional services to rework my ruby app to run on a single instance, which would bring my monthly bill down. I quickly migrated my app to Heroku and cancelled my account.",1540715750.0
strzibny,"I upvoted because I *hate* practices like this. I wish someone from EngineYard would comment though.

Regarding the hosting, you might find interesting the book I am writing about deploying to VPS (https://vpsformakers.com/). Unless your app is something truly complicated managing a single VPS is not such a big deal.",1540767137.0
in0pinatus,"There was a time, some years back, when EngineYard was an easy choice for a Rails PaaS. Those days are long past. EngineYard is now a rip-off. A huge shame because their product was a shoo-in for many users, and I knew some ex-EngineYard folk and they were significant contributors to the Ruby community. I probably learned most of what I know about Rails deployment from writing custom recipes for EY.

Then there was another period when AWS OpsWorks was an easy choice for migrating a Rails app off EngineYard. Those days are also now past. AWS has been neglecting OpsWorks to death. Their latest Ruby is 2.3 and showing no signs of updating.

AFAIK our PaaS or PaaS-like choices today are Heroku, Hatchbox, Cloud66, or DIY (devops-it-yourself).
",1540785058.0
sdn,I guess that's the downside of SaaS :/,1540674529.0
Petrarch1603,"they don't have an option to pay with a credit card? That alone is enough to make me skip a company in search of a competitor. If they do accept credit cards, you're foolish for missing out on lots of points. ",1540686273.0
drbrain,"Here you are back again with a non-apology where you‚Äôre insulting the entire Ruby community.

Please find a different community to ‚Äúcontribute‚Äù to.",1540663929.0
jrochkind,">> CSV maintains a pretty strict definition of CSV taken directly from the RFC [4180]. [...] CSV will parse all valid CSV.

> ...""valid"" means just what the library choose it to mean - neither more nor less.

No, it means just what the RFC describes. Anything else is a bug. (and bugs do happen; when they are found, they are fixed, or if they aren't that's evidence code isn't receiving proper maintenance, which also happens). 

I understand your point (I think?) that the RFC does not accurately describe much (if not most) actually encountered CSV (in your experience and you believe many others'), and thus sticking to the RFC does not adequately meet your and many people's practical needs for a CSV parser.  Due to the fact that not enough actually existing CSV has been created based on the RFC to make a standards-based parser useful. I think this is your point?

But you are not helping things by mischaracterizing the purpose, intentions, or goals of those who in past or present attempted/wanted a standards-compliant parser. And misunderstanding or mischaracterizing the purpose of standards for data formats in the first place. That purpose is pretty much the opposite of ""just what a given implementation implements support for.""  A standards-based parser is _not_ one where correct behavior is defined as whatever the software does; quite the reverse; a standards-based parser is committed to accepting that the standard defines what is correct, not the implementation.  You have mischaracterized it as it's opposite. 

The messiness of the real world of CSV may make an RFC-based CSV parser not a suitable solution. I can be sympathetic to this argument. But you are not demonstrating an understanding of the point/goal of standards-based parsing in the first place, or the problems that it is meant to avoid. If you did, it would put you in a better position to both explain why it is not appropriate here, and in your implementation to try to minimize the usual sorts of problems caused by non-standards-based data parsing.  

The class of problems that standards-based parsing are meant to avoid are in fact _exactly_ that different data will be parsed differently by different libraries, and there is no way to determine which was 'correct' in the absence of standards, correct becomes ""whatever the software does"".  This can lead to a horrible nightmare of data compatibility, with no clear way out (barring a standard).  It may be that the CSV universe is _already_ in this situation, and it's a lost cause. But if you can't even understand the point of standards-based parsing, you are not going to be effective in improving the situation.  You need to understand the ways in which _your_ parser can risk parsing data in ways other than intended -- especially if the data producer _was_ producing standards-compliant data. 

If correct parsing of valid data for your software is _not_ defined by ""just what the library choose[s] it to mean"", and is _not_ defined by any RFC standard... what is it defined by? If your library parses CSV in a way that the is not what the data producer or developer calling your code wanted/intended -- how do you determine if it is a bug or not?  ""Whatever Excel does when importing""? Whatever you geraldbauer decides in any given instance is correct based on your judgement?  ",1540670328.0
allcentury,"Really great project, congrats to the team to getting to 1.0",1540638016.0
kobaltzz,Ran a `--safe --safe-auto-correct` on some of my projects with > 90% coverage and all tests still passing. There were a lot of little changes like `zero?` instead of `== 0` and extra line between guard clauses. Great work!,1540670508.0
three18ti,This is awesome! Now if only I didn't have to rewrite my rules every new rubocop release we'd really be coming with gas. ,1540651871.0
BumpyBallFan,"It should not need `--safe` flags, all cops should be safe by default. Rubocop broke my code a few times and any organization knows not to use auto-correct because it breaks code, giving it a really bad reputation where it could be an amazing tool.",1540663352.0
thebritisharecome,Spam,1540555759.0
chrisgseaton,"V8 is highly tuned for JavaScript (and ASM.js which is similar, and WASM which is very simple) semantics. It would probably be very hard to implement Ruby semantics in V8.

I would imagine in practice that you would have to emit such low-level code that the V8 optimisations you think will work well will actually not be able to be applied. We've seen this before - LLVM is a fantastic optimising compiler, but Rubinius never managed to get it to work well with Ruby because to emit LLVM IR they had to lower and then LLVM's optimisations had no high-level understanding of the code.

Then there is the problem that in order to optimise Ruby really you need to optimise the standard library. How would you implement the standard library in such a way that V8 can optimise through it? Are you going to teach the JIT about all the standard library methods?

I talked about this problem here https://www.youtube.com/watch?v=b1NTaVQPt1E",1540568127.0
TheKidCoder,"This is exactly what is being done with the [GraalVM](https://www.graalvm.org/). While it‚Äôs not V8, it is a polyglot dynamic language runtime. [TruffleRuby](https://github.com/oracle/truffleruby) Is a ruby implementation that runs on the graalvm.",1540556976.0
bascule,"WASM allows VMs like V8 to run arbitrary languages.

That said, you might find https://opalrb.com/ interesting",1540559647.0
francc3sco,"This is a bit of a personal project, I grew tired of going to RubyGems every time I want to gather information about a gem like the downloads or version info, etc. So I made this little tool in Ruby to aid me in that task. Let me know if you like it :)


Here's the GitHub repository: https://github.com/franccesco/tmg

Edit: Had to post it again as the first one wasn't accepted.",1540497434.0
jrochkind,"Awesome. The most common thing I need is to know the recent version releases of a given gem. I keep making little one-off scripts to do that for me via rubygems API, and then losing them. :)  Will this do that?

What does ""tmg"" mean or stand for? Oh, ""track of my gems"".  For me, I most often need it with gems I don't necessarily manage myself. ",1540505833.0
CaptainKabob,"This is what you want: [The Ultimate Guide to Ruby Timeouts](https://github.com/ankane/the-ultimate-guide-to-ruby-timeouts), which lists tons of IO libraries and how to use their built-in timeout configuration rather than wrapping it in a (dangerous) `Timeout`

Edit: I think that's what you want. But if you just want to time-out some of your own completely-Ruby Ruby code (cause you want to break out of some Ruby-only mathy calculation), then just use a `Timeout`. It'll be fine.",1540526018.0
jrochkind,"There is not necessarily a one-size fits all option. 

Why would you need a timeout on random generic Ruby code?  What is potentially going an unpredictable amount of time, why, and why do you want to interupt it?

Usually we mainly need timeouts on IO, including network IO. Because those are timings that are out of our control. Things that don't touch IO are just taking CPU time, _and_ we have complete ruby control over them.  So we can write the code to, say, just periodically check the time and see if it wants to time itself out. 

But timeouts usually come up with IO (disk, network, etc), in which case using timeouts exposed by the underlying library (usually using OS facilities in C) is the right thing to do. Which doesn't mean it's always easy -- libraries can be poorly designed, and, in truth, ruby doesn't give us great tools here. ",1540494937.0
janko-m,You can use [timers](https://github.com/socketry/timers) and check whether the time has expired in some key parts of your code.,1540540627.0
torimus,"There is nothing broken about `Timeout` module, this is a myth. Only documentation may explicitly mention obvious issues.

That is nothing specific to Ruby. Interruption of code which acquires resources or lacks comprehensive handling of all possible exceptions is a general issue in programming languages. For example, in Python there was a similar function deprecated/removed afterwards, because similar misuse and misunderstaning like at ruby folk.
",1540513292.0
sshaw_,"Depends what you're going to do in this generic random Ruby code. Maybe `Timeout`  _is_ okay. 

Otherwise, this comes to mind (untested):

    t = Thread.new { thangz() }
    sleep TIMEOUT
    t.kill if t.alive?


But this too may depend on the generic random Ruby code so... ",1540519402.0
GroceryBagHead,"When can we expect blog post titled ""How I sped up my test suite from 1 hour 30 minutes to just under 1 hour with this weird trick""?",1540485480.0
sshaw_,https://www.youtube.com/watch?v=CmkU2H6h8qg,1540519701.0
seriouslyawesome,"Aren't AR models effectively repositories already?

    class Widget < ActiveRecord::Base
    end

This provides the interface for retrieving and persisting data from/to a `widgets` table. Isn't it everything else you add to this file that pollutes that responsibility? You could extract everything else out to form objects, view-models/decorators/presenters, iterators, query objects, value objects, and whatever other service objects, no? Forgive me if I'm misunderstanding; this is the first I've heard of the repository pattern.",1540504000.0
psuputsopon,"Why we need to duplicate AR logic?. 

I'm don't get a point of article, IMO if we have a different business, it's just create a class method

`def self.method; end`

or a instance method

`def method; end`

or even just

`scope`

The benefit from this point, it's you can test a logic directly from `rails console` , not require to make a request on application",1540520398.0
coldnebo,"Er, Repositories sound like DAO objects?
(or Service objects for that matter)",1540511039.0
,[deleted],1540526882.0
chrisgseaton,What grammar do you want to recognise? You gave an initially simple example and then when people try to help you're listing extra edge cases. What is the complete grammar?,1540499541.0
lafeber,"If the things you'd want returned are always integers, you could use 

    s.scan(/\d/)

In any case, a regular expression is probably the way to go!",1540475400.0
nintendotimewarp,"Regular expressions can definitely solve this. Do a positive look forward on either ‚Äú or ‚Äò, then a second on the same values to end. Ensure you are doing a global (multiple) match and it would get you what you want. Also, it is blazing you faster than string splitting.

If I have time later I‚Äôll write you one.",1540482938.0
4rch3r,"what about something simpler which strips the outer quotes after splitting:


    QUOTES = ""\""'""
    lines = ['  ""1""  ,  ""2"", ""3""', '""1"",  \'2\'    , ""3""', '1,2,3']
    lines.collect do |line|
       line.split(',').collect do |quoted| 
           quoted.gsub(/^[^#{QUOTES}]*[#{QUOTES}]/, '').gsub(/[#{QUOTES}][^#{QUOTES}]*$/, '')
       end
    end
    ",1540499877.0
codeprimate,"    require 'CSV'
    data = '""1"",""2"",""3""'
    CSV.parse(data)[0]
    => [""1"", ""2"", ""3""]
",1540491146.0
janko-m,"The issue is that your endpoint is expecting `PUT` uploads where request body = file content, and with Faraday you're sending file content as a `file` parameter with `Faraday::UploadIO`, which Faraday will probably encode in `multipart/form-data` regardless of the HTTP verb you're using.

You want pass file contents to the request body directly. This should work:

    conn.put(""/next_cloud/url/file_name.png"") do |req|
      req.body = File.binread(""/file_path/1/2/3/original_file_name.png"")
    end",1540468133.0
colby-swandale,"Hey everyone üëã, I'm Colby, core maintainer and the current release manager for Bundler. If you have any questions about this release or anything Bundler related, let me know below.",1540437827.0
sshaw_,"Yay, `bundle remove`!",1540441928.0
midasgoldentouch,"Bundle remove sounds awesome, but I'm concerned about orphaned files. Are you still expected to run an uninstaller if it's available?",1540444287.0
honeyryderchuck,"Nice! Any particular speed improvements that we might not be aware of? Migrating to 1.16.x was one of the best upgrades of all time because of this.

Also, I wasn't aware of plugins, and how exactly libraries interact with. Guess I have some reading to do. ",1540482682.0
danshep,"If you change the name of the variable, you just change the attr_reader into a real method.

If you want to expose an iterator without exposing the underlying collection, you define an each_member method.

Also why all the duping? 

      def each(&block)
        @members.sort_by(&:size).each(&block)
      end

",1540436484.0
cheald,"""If you try to make the stdlib CSV parser parse invalid CSV, it complains that the CSV is invalid"".

Is...this supposed to be the suggestion?

There's an argument to be made that a noncompliant CSV parser has a place, because CSV produced in various toolchains can be noncompliant and needs to be parsed, but it's silly to complain that a parser which refuses to parse noncompliant content is ""broken"". Your example ""breaks"" the quoting by prepending a leading space, which you implicitly assume to be a rejectable part of the field, but RFC4180 (which you even cite!) _explicitly indicates that this isn't valid!_

> Spaces are considered part of a field and should not be ignored.

Yes, it also says to interpret input liberally, but the fact of the matter is that this is _broken CSV_ and the handling of it is going to be undefined. If you're going to interpret ""liberally"" as ""whatever it takes to make the input parse"", then, well, sure, you can do that, but that isn't very useful because instead of the parser conservatively saying ""hold on there cowboy, someone made a mistake putting this together"", your parser just glosses over the issue and applies your own assumptions about what input data should look like. This is the CSV equivalent of `rescue Exception` - sure, it works, but it's going to bite you later.

This is supposedly a problem in Ruby's implementation. Okay, let's look at Python:

    import csv
    from StringIO import StringIO
    s = '1, ""Hamlet says, """"Seems,"""" madam! Nay it is; I know not """"seems.""""""'
    print [row for row in csv.reader(StringIO(s), delimiter=',')]
    [['1', ' ""Hamlet says', ' """"Seems', ' madam! Nay it is; I know not """"seems.""""""']]

Whoops. It parses, but we somehow got 4 fields out of what was intended to be 2. That's going to cause a problem for any file with more than 1 row!

How about Go?

	package main

	import (
		""bytes""
		""encoding/csv""
		""fmt""
	)

	func main() {
		s := `1, ""Hamlet says, """"Seems,"""" madam! Nay it is; I know not """"seems.""""""`
		b := bytes.NewBufferString(s)
		r := csv.NewReader(b)
		record, err := r.Read()
		if err != nil {
			fmt.Println(err)
			return
		}
		fmt.Println(record)
	}

And the results...

	parse error on line 1, column 3: bare "" in non-quoted-field

Huh. What about Javascript, with the `csv` library (the most popular CSV parsing library for nodejs):

    const csv = require(""csv-parse"");
    const parser = csv({delimiter: "",""});
    const input = `1, ""Hamlet says, """"Seems,"""" madam! Nay it is; I know not """"seems.""""""`;
    parser.write(input);
    parser.end();

    parser.on(""readable"", () => {
    let record;
    while ((record = parser.read())) {
        console.log(record);
    }
    });

    parser.on(""error"", err => console.error(err.message));

Which gives us:

    Invalid opening quote at line 1

That's weird. Maybe _all_ the CSV parsers are broken?
    
If you could demonstrate that the stdlib could be used to produce CSV that it then can't parse, you have an issue, but complaining that the stdlib doesn't parse invalid CSV seems particularly pedantic. There's definitely room to provide a more lenient parser which makes some spec-violating assumptions about what to do with invalid data, but making hay out of ""the stdlib is broken"" feels gross.

Would it shock you to find that the JSON library doesn't parse invalid-but-human-readable JSON (which also happens to be valid Javascript)?

    > JSON.parse '{unquoted_key: ""value""}'
    JSON::ParserError: 765: unexpected token at '{unquoted_key: ""value""}'

You've written a parser for things-that-look-like-but-aren't-quite CSV. That's great - it's helpful, and will be needed in some circumstances. Promoting it by spouting nonsense about how the standard parser for things-that-are-actually-CSV is broken because it won't parse not-CSV is unhelpful.",1540421509.0
geraldbauer,"Sometimes repeating helps to highlight the message. Let's rewrite as an example the 
RFC 4180 Memo about Comma-Separated Values (CSV) (see <https://www.ietf.org/rfc/rfc4180.txt>) 
cited above: 

This memo provides information for the internet community.
- **IT DOES NOT SPECIFY AN INTERNET STANDARD OF ANY KIND.** 
- **IT DOES NOT SPECIFY AN INTERNET STANDARD OF ANY KIND.** 
- **IT DOES NOT SPECIFY AN INTERNET STANDARD OF ANY KIND.**

By the way, here are [six more CSV specs / standards](https://github.com/csvspecs) incl. ""strict"" JSON v1.0 encoding. 

What you're missing is - it's about the future - how? Things change. Is CSV frozen forever? Of course, not. See:

This memo provides information for the internet community.
- **IT DOES NOT SPECIFY AN INTERNET STANDARD OF ANY KIND.** 
- **IT DOES NOT SPECIFY AN INTERNET STANDARD OF ANY KIND.** 
- **IT DOES NOT SPECIFY AN INTERNET STANDARD OF ANY KIND.**

One more thing and a little trivia quiz from the [CSV talk](https://github.com/geraldb/talks/blob/master/csv.md):

```
JAHR;GCD;GEM_NAME;BEV_ABSOLUT;BEV_UNTER15;BEV_UEBER65;AUSL_STAATSB;...
2011;10101;Eisenstadt;13.101;13,8;18,2;9,4;...
2011;10201;Rust;1.896;13,8;22,2;4,7;...
2011;10301;Breitenbrunn am Neusiedler See;1.902;12,1;22,4;5,6;...
2011;10302;Donnerskirchen;1.742;12,3;20,2;3,8;...
2011;10303;Gro√üh√∂flein;1.929;12,9;17;3,4;...
...
```

Triva Quiz: Who Invented the Space Character in Writing (and When)?

- [ ] The Greeks in the Golden Age
- [ ] The Romans in the Age of Empire (What have the Romans ever done for us?)
- [ ] The Irish Monks in the Middle Ages 
- [ ] The Frankish Alchemists in the Charlemagne's Age (800-)


Triva Quiz: Who Invented the Space Character in CSV (and When)?

- [ ] [CSV v1.1](https://github.com/csvspecs) in 2018 :-)

Still waiting :-). Yes, you can. Let's make it happen.
Pretty printed version with space (CSV v1.1). Example:

```
JAHR; GCD;   GEM_NAME;                 BEV_ABSOLUT; BEV_UNTER15; BEV_UEBER65; AUSL_STAATSB; ...
2011; 10101; Eisenstadt;                    13.101;        13,8;        18,2;          9,4; ...
2011; 10201; Rust;                           1.896;        13,8;        22,2;          4,7; ...
2011; 10301; Breitenbrunn am Neusiedler See; 1.902;        12,1;        22,4;          5,6; ...
2011; 10302; Donnerskirchen;                 1.742;        12,3;        20,2;          3,8; ...
2011; 10303; Gro√üh√∂flein;                    1.929;        12,9;          17;          3,4; ...
...
```
",1540454254.0
mattgrave,I appreciate the blog post but I hate this kind of unnecessary magic.,1540434205.0
PikachuEXE,"Can anyone think of a valid use case where this will be faster and more useful than just \`array.include?(""string"")\`",1540430928.0
ThaiJohnnyDepp,"I see on the discussion page for the method, Matz chimes in with the question on my mind: https://bugs.ruby-lang.org/issues/14473#note-16",1540423037.0
tomthecool,"I've often wondered whether ruby's ability to define ranges as `Integer..Integer`, or `Float..Float`, or `String..String`, ... is a bit *too* flexible.

On the one hand, it allows all sorts of neat syntax. But on the other hand, it causes tonnes of weird edge cases in the core language - such as how exactly these exotic ranges are defined and compared.

Perhaps it would have made more sense to define something like `IntegerRange`, `StringRange`, etc classes to avoid the mess... I'm not sure. I can hear the faint sound of an angry duck quacking at me.",1540460473.0
keyslemur,"I will give a warning that the subject matter can be a bit heavy in this post.

Over the past half-year I've had several people ask me what's up with all the lemurs, so I decided to finally share that story. I can't say it's a particularly easy one to write, but I hope it's of use to some of you out there.

Amusingly enough the lemurs led me to _why, and through that Ruby.",1540398279.0
keyslemur,"You'll probably enjoy Qo, which implements a lot of the same ideas: https://github.com/baweaver/qo

Aha, you did mention M and Q. Those were fun to write. Qo is basically what happens when they're taken a few steps further. You'll really enjoy the pattern matching segment.",1540397594.0
zverok_kha,"That's a nice excercise!

(I want to warn, though, that your `pipe` method doesn't what you do to move ""towards functional programming"" in Ruby, basically ;)",1540407008.0
BumpyBallFan,"`ARRAY_IT = ->`, `Q = ->`

No, please don't. A constant should not be function.

Also the syntax highlighting color scheme is hardly readable.",1540401263.0
BumpyBallFan,"Pretty terrible article. Also not a very good idea to publish those test and production keys...

BTW Stripe own docs are great and their customer support is the best",1540400978.0
jodosha,"Switch to RSpec, deprecations, minor enhancements, and bug fixes.
New Guides website and new team member.

From now on, our focus will be for 2.0. We'll deeply integrate DRY & ROM.",1540367223.0
heyitsjav,"It's great seeing Hanami grow. I started a side-project recently and still went for my usual Sinatra way because I was in a hurry to release it. But for the next projects I really want to get into this and possibly contribute to the project.

Thank you team.",1540371972.0
i_know_sherman,Really excited about Hanami. My main wish for Hanami is to just remove the abstractions over ROM rb and instead use those resources to improves the pain points on the rom-rb ecosystem. Keep up the great work and excited for 2.0!,1540440615.0
Mancinoz,Frosty?,1540350362.0
hehestreamskarma,"If price is zero issue just go with luminati.io

Asshole of a business model. Great product.",1540419427.0
psuputsopon,"Since, ruby is a blocking-io type of langauage. Why we need async on ruby? 

Can someone tell me about a use case",1540345659.0
janko-m,"I would love an example tha compares a Thread implementation vs the async await implementation. It would make it easier to understand the advantages of async await. For example, in this example I feel like you could have achieved the same thing with a simple Thread#value or a Concurrent::Future.

When reading about new things, I like seeing examples where they provide a clear advantage over the existing alternatives.",1540403681.0
Jdonavan,Thank you for providing an update on your gem without slagging the stdlib CSV.,1540824453.0
tolas,[https://github.com/norman/friendly\_id](https://github.com/norman/friendly_id) makes this very easy/powerful.,1540316056.0
GroceryBagHead,"You can just use 

    def to_param
      ""#{id}-#{whatever}""
    end

Then your `:id` parameter will be that. Find methods will still work because `""123-whatever"".to_i` will be `123`

Low-tech solution.",1540312550.0
remain_calm,"In my experience it's good to add slugs to urls but it's a bad idea to use the slugs to load your resources. A better approach is to add the slugs after the id in the route. 

    my-resource/:id/:slug

The slug still has value for SEO and as an informational UI element, but you are not tying your domain logic to a volatile field (an article title is probably editable, unless you're Reddit)",1540313726.0
jrochkind,"In step 5, I believe there's an error:

>             @post = find_by_slug(params[:slug])

Should probably be:

    @post = Post.find_by_slug(params[:slug])",1540315937.0
graywolf_at_work,I was hoping for details on internal structure of gems... at least based on definition of `innards` https://www.dictionary.com/browse/innards,1540301883.0
GroceryBagHead,"Remember times when you'd google for something and find stuff from people who legitimately wanted to share something they learned/made/etc? Now it's mostly low effort blog spam from companies that want to get better SEO.

Here's a better source of info about ""innards"": https://guides.rubygems.org/make-your-own-gem/",1540304435.0
three18ti,...,1540304246.0
jwmojo,Didn't notice the sub at first and this title got the former waiter in me a little defensive.,1540255636.0
TomahawkChopped,my shame at the existence of 0 tests is proportional to that number,1540239809.0
tracychavez,"What was the end result - baseline time, not parallelized vs. parallelized?",1540342972.0
GroceryBagHead,Evil Martians overtook Thoughtbot as far as ruby open-source technical contributions go. Good stuff.,1540229744.0
jrochkind,"I'm not familiar with Prometheus, and am not certain I understand how it fits in. To get the monitoring UX discussed in this article... is Prometheus a separate server app I need to run? ",1540473219.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/rubylang] [Introducing Yabeda: Modular framework for instrumenting Ruby applications ‚Ä¢ r\/ruby](https://www.reddit.com/r/RubyLang/comments/9yat46/introducing_yabeda_modular_framework_for/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1542582434.0
boonestock,"Is it just me, or is the text on this blog so large that it is barely readable? On chrome, zooming in and out has no effect.",1540227491.0
,[deleted],1540228626.0
BumpyBallFan,`gem pristine --all` should fix it: https://stackoverflow.com/questions/38797458/ignoring-gem-because-its-extensions-are-not-built,1540238450.0
Jdonavan,What happens when you follow the directions and run: gem pristine clocale --version 0.0.3,1540224127.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/rails] [Passenger 6: generic language support (+sign up for the implementation livestream)](https://www.reddit.com/r/rails/comments/9qdina/passenger_6_generic_language_support_sign_up_for/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1540212747.0
jb3689,"I don't really have any examples, but you can get pretty far with shebang scripts just using ARGV, $stdin/etc, env vars, and Open3#popen3

&#x200B;

As a caveat: I'm partial to just using bash these days for automation scripts due to portability. Ruby ain't small",1540228736.0
menge101,why automate bash tasks with ruby scripts?  It seems the direct way would be to write bash scripts.,1540217728.0
SuccessfulBread3,"Hey friend. 

If you're a bit confused about this it probably means you're new to OOP (Object oriented programming) so objects are an instance of a class, when you create an object it can have what's known as state... State is literally just information that the object holds. The initialize method is automatically called when you call `.new` on a class it's what's known as a constructor. You can alter state on an object provided it has setters/getters... I'll let you digest state and constructors first though.

Take the following example of a pet class...


    class Pet


        def initialize (species, age)


            @species = species


            @age = age


        end


    end



Instance variables (state) are marked with ""@"" at the beginning, in the above example the state of an object would be the species and the age.


If I create an instance of pet like this `Pet.new('dog',2)` then what happens behind the scenes is the object is created, the initialize method (constructor) is called with the two arguments I put in. The initialize method I've created stores those arguments as state by creating variables that equal (and subsequently store) the arguments with the ""@"" symbol. So the state for that object would be @species = dog and @age = 2.

I highly suggest looking into OOP as it's what ruby (and a lot of other languages such as python, java, c#) tend to prefer. Happy to answer any questions if you dm me.



Edit: formatting on a phone is hard y'all.",1540125714.0
phaul21,"objects are state + behaviour. Like a truck modelled as an object, has state: being empty, or the load it carries, its driver etc. Essentially data that is associated with the object. In ruby this means instance variables. Behaviour is things an object can do. A truck can load, unload, move etc. In ruby this means instance methods.

In this example a truck class might look like

    class Truck
      attr_reader :load # number of tons loaded
      attr_reader :driver
      attr_reader :location

      def load(mass)
      end

      def unload
      end

      def  move (new_location)
      end
    end

In your system you want to deal with objects that are ready to use. You don't want to expose a truck that is half baked. Ie you don't want a truck that has a driver, but no location. In order to ensure that all our object have all the necessary instance variables - the state set up, you set them in initialize. That code automatically runs when an object is created. ",1540122067.0
r00ster91,"Let's say we want to create a `Rooster` object:

    class Rooster
    end

now we can actually already invoke `Rooster.new` on it and we just got a `Rooster` object.

But what if I want to name my rooster? What if I want to call him ""John""?

I could do this:

    class Rooster
      def initialize(name)
      end
    end

Now `Rooster.new` would result in an error!

    rooster.rb:2:in `initialize': wrong number of arguments (given 0, expected 1) (ArgumentError)
    	from rooster.rb:5:in `new'
    	from rooster.rb:5:in `<main>'

We forgot to pass the most important argument! The name of the rooster. We just replaced the `.new` method for the `Rooster` object with a method which needs an argument.

So now when we give the rooster a name: `Rooster.new(""John"")`, it works and we get a `Rooster` object.

&#x200B;

Now if we want to get the name of the `Rooster` object, we would first need to assign the local variable `name` of the `initialize` to an instance variable (in this case it's just `@name`). An instance variable only exists in the current instance of the object.

      def initialize(name)
        @name = name
      end

and then we create a `name` method which simply returns the value of the `@name` instance variable:

      def name
        @name
      end

now when we create a new rooster with a name: `rooster = Rooster.new(""David"")` and invoke `name` on it, we get ""David""!

&#x200B;

Don't get confused by that you need to call your method ""initialize"" to redefine the `.new` method of the object. That doesn't mean anything.",1540142617.0
stoic_alchemist,"The initialize method is the constructor method of any class, if you need initial values or run other methods when you create an instance of the object before it‚Äôs used",1540121988.0
pedrozath,"a Class is like the plans on how to build something. When you call \`#new\` on it, it's like you materializing it to life.",1540133174.0
it_burns_when_i_php,I‚Äôm a fairly journeyman Ruby dev and I found this post and all the answers very helpful. Thanks for asking it OP!,1540180792.0
shevy-ruby,"I think the pickaxe means to allocate memory for it mostly. The method ""def initialize"" usually calls another method too, called allocate().

To your second question - you can use initialize to do start-up related actions of your newly created object. For example, add methods there that you may want to use for setting up your objects.

I usually define a method called reset() which I call within initialize too; this method sets the object to its default state, e. g. initializes some instance variables and so forth.",1540197096.0
honeyryderchuck,"> It uses one Fiber per request, which yields in the presence of blocking IO.

Shouldn't this claim be followed with ""provided that you use one of our async-patched modules for DB/redis/your-fave-network-reachable-service access?""",1540118367.0
hehestreamskarma,I can't be the only one that doesn't trust a Ruby codebase that uses 4-space tabs.,1540137792.0
three18ti,"Why would I want a pure Ruby web server? E.g.: WEBrick for instance is great for testing, but you wouldn't  (or shouldn't) use it in production.

Looks neat! But I'm wondering what the use case Is and why I'd pick it over something like Puma, Passenger, or Unicorn? Thanks!",1540132613.0
allcentury,Looks really interesting,1540120529.0
patrickmcgranaghan,I like the logo,1540155533.0
DamaxOneDev,Any performance test against Puma or Passenger?,1540200373.0
zitrusgrape,"quite nice, that somehow the ruby comunity has some gems like this. I'm tired of rails.

- async
- shrine
- rom
- sequel
- roda
- falcon

love it!",1541366948.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/rubylang] [Falcon: A modern high-performance web server for Ruby, supporting HTTP\/2 and HTTPS out of the box. ‚Ä¢ r\/ruby](https://www.reddit.com/r/RubyLang/comments/9urdpw/falcon_a_modern_highperformance_web_server_for/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1541531964.0
TunaFishManwich,"The standard for the ruby community is spaces instead of tabs, 2 per indent.",1540151631.0
keyslemur,Documentation in the repo would make it much more likely that you get people to play with it.,1540079775.0
gettalong,Piotr Murach's tty-* collection does this and probably much more - have you looked at it? http://piotrmurach.github.io/tty/,1540103782.0
jemminger,How does this compare to [thor](https://github.com/erikhuda/thor)?,1540096389.0
sshaw_,"Nice to see a new approach to building CLIs. 

Would be good to see an example using a well-known application like `ls` or `grep`. Though really it seems that your approach may be better for installation scripts or those CLIs that target non-technical users or users unaware of a specific domain. 



",1540133882.0
mthspschl,"hey, github is acting up a little bit :D so in some instances you can see that I opened a issue and a pull request :D

&#x200B;

keep it up!",1540218419.0
geraldbauer,"That looks fantastic. Wondering why the tty in the name? It looks like a fantastic ""generic"" config library for everybody (not just the tty-<> gem collection). Cheers. Prost. 

PS: May I also highlight as a ""generic"" example the humble props library with a ""generic"" name ->  https://github.com/rubycoco/props ",1540106656.0
phaul21,"While I wouldn't introduce so many things into the design up front, I think you have a design in mind. It could be the final design, it could change. At this stage I usually code away, as there is always new things to discover in the code that never occurred me while I was just thinking about the design. If parts of this or the whole thing smells later, throw it away, or change it. Only way to know is to try..",1540069929.0
cmd-t,"I think the whole idea of having the worker do all these things themselves is not the right way to go. You are immediately running into subclassing problems from the get go. All these handlers should be their own class and have their own concerns, with the worker delegating work to them. Using dependency injection to then modify the behavior of individual workers. See this awesome talk by Sandi Metz: https://m.youtube.com/watch?v=OMPfEXIlTVE",1540112606.0
jrochkind,"It's possible a higher-level change to the design is called for. But with what you describe specifically, I would try to _avoid_ using inheritance. 

One way to do that is to put the shared logic in a 'helper' class of some kind instead. The 'helper' class can even get a reference to the 'worker' to be able to call methods on it, which some people might say is still not ideal separation, but I think is still better than inheritance.  (PS: Module mix-ins are effectively a form of inheritance, for this purpose, IMO). 

      def prepare_request
          RequestPreparer.new(self).call
      end

Of course, if all the sub-classes are just going to do that, then it would just be in the super-class. I don't understand how your sub-classes differ and what they share, what you are trying to make the shared implementations do.  It's possible _you_ don't yet either, which may mean you don't have enough information yet to design the shared abstraction. 

To begin with, it might make sense to simply copy and paste the code and not worry about ""DRY"" abstraction.  Then you can possibly see _what_ parts should be shared, and pull them out into helper classes (still not inheritance!) to share. [As Sandi Metz says](https://www.sandimetz.com/blog/2016/1/20/the-wrong-abstraction), ""prefer duplication over the wrong abstraction"" -- I think you are currently at a good place to go read that Metz article and see what you think of it. :)

Either way, if you simply find a way to _avoid_ inheritance (or mixins!) as your implementation, you'll be at least on a better path, IMO. 
",1540131356.0
moomaka,"First: Inheritance is a very rudimentary and in most cases a very bad form of code sharing, as you're finding. You should almost never use it. 

Second: This strikes me as a common problem that I can't remember the name of. Basically you have some higher level problem, you've already (for whatever reason) decided to head down some path and are now asking for help along that path when the fundamental issue is why you chose this path in the first place. So, what is it you are trying to achieve that lead you to this place? ",1540073947.0
whalesalad,It would be more helpful to hear about the end goals you‚Äôre trying to accomplish. I can hardly follow this design based on the sheer number of nouns being thrown around. ,1540089849.0
davie668,"I'm not entirely sure but it looks like you're trying to implement the Template Pattern?

This is a good article to explain it https://medium.com/@joshsaintjacque/the-template-method-pattern-558f3e16879f",1540113039.0
Chito4,Head First ruby. Best beginner book out there.,1540052775.0
flanger001,https://pine.fm/LearnToProgram is what I started with and it was great. LRTHW bugs me (sorry Zed).,1540057784.0
WrinklyTidbits,"I learned using RubyKoans, written by the great, late, Jim Weirich: [RubyKoans](http://www.rubykoans.com/)

I thought it was great to learn by doing. ",1540059855.0
ayromo08,I started with The Well Grounded Rubyist. Awesome book for beginners. ,1540052956.0
stympy,Try Why‚Äôs Poignant Guide,1540053016.0
nynhex,Great question.  I started with PickAxe.  It was a bit much for me to consume as I had not much experience with programming but it was valuable.,1540060944.0
OtavioHenrique,"A great Free book: https://i-love-ruby.gitlab.io
But I started with eloquent ruby",1540057122.0
shafrazi,"Head First Ruby, if you need it I can share a link.",1540060555.0
azizy15,Beginning Ruby: From novice to professional by Peter Cooper is the first book I read when I first started learning programming. Very easy to follow. Reads like someone is right there with you and gives a great overview of most concepts. Highly recommend as first introduction to the language and then you can branch off to get a better understanding of more difficult concepts,1540072791.0
jb3689,"I would recommend The Rails Way. I would literally just type all the commands word for word and see what they do. There will be a lot of things that seem magical but it is a way to jump in and get your feet wet and see how to be productive with Ruby and Rails. I would recommend that with any general Ruby book (lots of good recommendations here). The difference is The Rails Way will get you making interesting things fast but not teach you fundamentals - the other books here are the opposite; fundamentals but it takes a lot to start making meaningful programs

EDIT: I take it back - I would recommend TryRuby first. It requires no purchase and is an easy way to color-by-number your way to learning (which I mean in the best possible way) https://ruby.github.io/TryRuby/",1540066947.0
jrochkind,awesome article,1540007296.0
colindean,I really like articles like this. It's a great way to take something that is very simple and turn it into something that is extensible within the idioms of the language of implementation.,1540044581.0
katafrakt,also [http://katafrakt.me/2016/11/05/fizzbuzz-with-pattern-matching/](http://katafrakt.me/2016/11/05/fizzbuzz-with-pattern-matching/),1540020822.0
habanero647,"Thanks for sharing, great quality article and fun",1540056054.0
geraldbauer,FYI: There's also a (free online) book(let) edition titled [FizzBuzz by Example - There's More Than One Way To Do It](https://yukimotopress.github.io/fizzbuzz) and the  [fizzbuzzer gem / library](https://github.com/rubycoco/fizzbuzzer) for easy code (re)use or command line usage. Cheers. Prost.,1540060203.0
Pectojin,"Gave me flashbacks to university. Most of it pretty bad, but I did relish in a couple of functional programming ideas.

I'm very happy I stuck around for the end of the article.",1540040650.0
three18ti,"[Not Enterprisey enough](https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition)...

Seriously though, I just skimmed it, But interesting progression... Will have to reread it when I haven't been at the bar for a couple hours...",1540009879.0
lestopher,Can you post your full script so that we can try to recreate it?,1539978575.0
dunderball,"Trying running in command prompt instead and see if you have success there. Should run fine if you have `ruby` in your path, which the Windows installer does add on its own.",1540003376.0
bazelena,"print ""give me a number: ""

number = gets.chomp.to\_i

&#x200B;

bigger = number \* 100

puts ""A bigger number is #{bigger}.""

&#x200B;

print ""give me another number: ""

another = gets.chomp

number = another.to\_i

&#x200B;

smaller = number / 100

puts ""A smaller number is #{smaller}.""

&#x200B;",1539979032.0
sandox,"Try flushing the stdout buffer after gets.chomp. e.g.

$stdout.flush

or alternatively, set $stdout.sync = true beforehand and you won't need to flush the stdout buffer. ",1540008522.0
phaul21,"I would like to give you some criticism, that I hope you take the right way. 
Being 5x faster is a bold claim. It's great if it's true, but someone who just clicks might find it hard to believe. I think there is an opportunity for you to make yours a popular gem: add benchmark results to your README.md, include shiny charts showing off your 5x faster claim. Explain how you did it, why it's 5x faster, and what are the drawbacks if any.",1540218514.0
geraldbauer,"Hello, 
the talk notes from yesterday's Vienna.rb meetup titled [Mining for Gold Using the World's #1 and Most Popular Data Format (w/ Ruby and CsvReader)](https://github.com/geraldb/talks/blob/master/csv.md). The contents reads:

- Q: The World's Most Popular Data Format?
  - Data Format Timeline / History - Past, Present, Future
  - Data Formats @ Statistics Austria
    - Triva Quiz: Who Invented the Space Character in Writing (and When)?
    - Triva Quiz: Who Invented the Space Character in CSV (and When)?
  - Data Formats @ Open Gov Data Austria
  - Data Formats @ Open Gov Data United States of America (U.S.A.)
  - Data Formats @ DataHub v1
    - Data Formats @ DataHub v2  - (Tabular) Data Packages
  - And the Winner is ... Lies, Damned Lies and Statistics
-  What's Comma-Separated Values (CSV) - One Format? Many Formats?
   - CSV Basics - What about commas in values?
   - CSV Basics - What about quotes in quotes?
   - CSV Basics - Many Formats / Dialects / Variants?
   - CSV Basics - Edge Cases
   - CSV Basics - Type Inference and Data Converters
- CSV Formats / Variants
  - CSV ""The Right Way""  
  - CSV ""Strict""
  - CSV <3 Numeric
  - CSV <3 JSON
  - CSV <3 YAML
  - Database Export
    - PostgreSQL CSV
    - PostgreSQL Text
    - MySQL
- CsvReader Library Usage
  - What about type inference and data converters?
  - What about Enumerable?
  - What about headers?
  - What about symbol keys for hashes?
  - What about (typed) structs?
  - What about tabular data packages with pre-defined types / schemas?
- Triva Quiz - Mining for Gold - What's the country with the biggest gold mining / production per year today?


Happy data wrangling / mining with Ruby. Cheers. Prost. 

PS: The talk slides from the 2nd talk titled [Designing HexaPDF: Iterarative Design, Orthogonality and Other Design Tools](https://talks.gettalong.org/2018-10-viennarb) by Thomas Leitner",1539955228.0
iconoclaus,"It'd be really nice if the title would tell us what Sail is. For anyone else who got this far:

""Sail brings settings to help you navigate your Rails application live""",1539960773.0
pau1rw,"I love a new gem, but i'm still not entirely sure what I would use this for?

The screenshot of the test app on the github page is dummy data, so doesn't add any extra context for me. 

I'm confused. ",1539966061.0
kinnrot,"Looks like a super useful gem, reminds me a bit the built-in fields in WordPress. Most likely, Gonna add it to my current project.",1539970033.0
nynhex,"I'm not going to criticize other folks, but I will say I read your codebase and I think it's a great addition to the ecosystem.  It was clear for me to understand once I pulled apart the codebase.  Definitely suggest more verbosity and perhaps a demo on heroku (free).

&#x200B;

Either way, thanks for sharing!",1540061128.0
Muchaccho,"People who are already working as Ruby developers might not notice this, but it is REALLY difficult to find an entry-level/junior position writing Ruby. Most of the job offers look for senior level developers, some for mid level developers, and it's really rare to see a Ruby position for junior developers. I know this very well, as I've been checking Ruby job offers for around two years.  


As far as I can see, the Ruby community is becoming a community of senior developers. New developers who learned to program with Ruby pivot to JavaScript or PHP because it's much easier to find a junior position there.",1540040093.0
gettalong,"I consider the TIOBE index just as a small indicator because it heavily relies on things done on the Internet (see https://www.tiobe.com/tiobe-index/programming-languages-definition/ for how TIOBE works).

Do you wonder why MATLAB is on place 11 and SQL on 9? I do...

And: If you need to find information on a stdlib Ruby method, do you search for it via a search engine, or do you just use `ri method_name`?

So take the results of TIOBE with a grain of salt...",1539970449.0
ylluminate,"There are 3 things that the Ruby ecosystem needs to do at this point.  

1. Compete directly with JavaScript and its domain (already done, but not marketed enough: [Opal](https://opalrb.com/))  One smart author wrote ""[Pragmatic Opal](https://www.amazon.co.jp/Pragmatic-Opal-Ruby%E3%81%A7%E4%BD%9C%E3%82%8B%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E9%96%8B%E7%99%BA%E3%82%AC%E3%82%A4%E3%83%89-%E6%8A%80%E8%A1%93%E6%9B%B8%E5%85%B8%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA%EF%BC%88NextPublishing%EF%BC%89-%E5%A4%A7%E5%B4%8E-%E7%91%B6-ebook/dp/B07BGW44X1)"", but it's only in Japanese with no intention of the author to translate right now according to his remarks in Opal's Gitter channel.  If some places like Codecademy and Code School would pick up Opal I think it would change the landscape a bit because learners and kids want to do things fast with some actionable results - Opal facilitates this and it's entirely doable. My, several years ago, wrote a Pong game in JavaScript from his Codecademy experience and then upon discovering Ruby/Opal he converted the game to Ruby and it was a fantastic learning experience, but it lacked a lot of documentation and so he had to dig a lot (which helped with learning - BUT most folks don't have a dad who's a software developer and has some resources to help him get over those hurdles).  Remember isomorphism is sexy and JS has taken advantage of this for more than several years now with Node - we can do this with projects like [Hyperstack](https://hyperstack.org/).

2. Get faster at server side ([TruffleRuby](https://github.com/oracle/truffleruby) is working on that). Having [Ruby managers support](https://github.com/oracle/truffleruby/blob/master/doc/user/ruby-managers.md) (`RVM`, `ruby-build & rbenv`, and `ruby-install & chruby`) is helping this now.

3. Jump into the ML (Machine Learning) domain.  It is pretty easy to see what gave Python its (and some other languages') relatively big jump(s) for this month and the last several months. It is absolutely the hot, hot topic of ML.  I'm certain that there are a lot of Ruby folks and others that would prefer to use Ruby for ML that just feel like they don't have any other viable option but to use ""the standard"" Python approach.  I've tried to start some discussion here, but I'm not a huge ML user myself so I can't give any truly authoritative direction: https://github.com/oracle/truffleruby/issues/1424

There are various negative perceptions that plague Ruby and the above items really address most of them generally.  There's no real reason Ruby should be dwindling, but there's a good degree of lacking in the areas that JS and Python have excelled at on the marketing and funding levels.",1539956321.0
leit6Huya6,"Still plenty of work and good pay to be had. Good reminder of practising continuous learning though.

With all that said, if I were to make a new web app today, chances are that Rails would be the fastest way for me to to do.",1539959603.0
joelbluminator,"1. Ruby (and Rails) is probably declining but still has a very sizable job offering and market.. Rails is still one of the most used web frameworks in the world. I wouldn't worry too much, and would try to compare apples to apples: if you are mostly a web developer - why should you care if typescript and python are gaining popularity? or swift or objective c? They are not a direct competition since they are mainly used by front end guys or data science guys or iphone programmers.

I would start to worry if everyone replaced their Rails apps in Go or Node which are more direct competitors but that's not happening in an alarming rate.

&#x200B;

&#x200B;",1540107994.0
lazizxon,I think it's gonna change when RoR 6 drops,1539949264.0
keyslemur,"That's called a splat. It takes a variable number of arguments:

    def var_args(*args) args end
    var_args(1,2,3)
    # => [1, 2, 3]

That also means it converts that list of arguments into an array.

Ruby implicitly returns the last statement in an expression. Since that's `args`, you get back an Array. Since that test is checking if the class of the return is an Array, it's true.",1539922303.0
in0pinatus,‚ù§Ô∏è,1539941146.0
jrochkind,"It depends on what sort of object that is.  It's not something standard in ruby or anything like that. 

You can do `ad.method(:to_gid_param).source_location` to see where it was defined. 

Or you can google `ruby to_gid_param`, which I just did, looks like it's likely part of Rails' GlobalID (if you aren't using Rails, then it's probably not that).  And has no method-level docs. https://github.com/rails/globalid/blob/a9c4e1e1799b6256f15cd72242fedc46e2147a12/lib/global_id/identification.rb But reading the GlobalID gem Readme should give you some ideas. https://github.com/rails/globalid

",1539902881.0
papaya_dog,"Fellow novice here, but maybe one step beyond where you're at. I think this RPG-style thing is a great way to learn some basics. One thing I'd recommend is to really start thinking in an Object Oriented way. For instance, what happens to your game if Ted the Mighty is joined by Eris the Brave? As it stands now, you'll run into problems with your character sheet variables (STR, etc.). This is where object thinking comes into play. Take a look at this: [https://hastebin.com/noqubowida.rb](https://hastebin.com/noqubowida.rb)

In addition to a few minor changes to clean up where you've unnecessarily repeated yourself, I made one huge change: I create a `Character` class that allows you to generate characters for your game. You can see on line 37 where I create Ted the Mighty using his particular stats. To get at his name and stats later in the program, you can use the helper methods created for each attribute (that's what attr\_reader is doing at the beginning). So, after creating Ted the Mighty using `hero = Character.new(""Ted the Mighty"", 8, 6, 5, 2, 7)` you can get at various parts of his character by using `hero.name`, `hero.str`, etc. You can see where I do this on line 40 to get at his name.

Having that `Character` class will allow you to later do something like: `a_new_hero = Character.new(""Eris the Brave"", 3, 4, 5, 6, 5)` and you can access information about her, and have her `fight` or `run` in the same way, but using her unique attributes.

I hope that makes sense. Just wanted to point you toward starting to wrap your mind around the usefulness of Classes and objects!
",1540057374.0
keyslemur,"You should probably take a read through some Ruby syntax, as Ruby doesn't use braces like that.

https://learnxinyminutes.com/docs/ruby/

",1539904530.0
internethostage,"Line 3 and 4 are both generating a different random number. I suppose thats your issue.

You can do something like 

result = rand 10 + 5 

(not sure what you are doing there anyway could just do rand 15...)

Then 


puts result

If result > 6

  ...

else

  ...

end

As a side note keep in mind that rand 15 will give you a number between 0 and 14.

Sorry on mobile so formatting broke.",1539918157.0
OlNav,"This is just amazing. I remember when I just got started with ruby.

It‚Äôs a great resource for beginners and intermediate developers.",1539879959.0
ProgramAllTheThings,"Sweet! My company used to pay for it for me, but once I finished all the tracks it wasn't worth renewing (although I do wish I could have gone back to review tracks...). Really glad to see this move, Thoughtbot's a good company.",1539889422.0
aemadrid,very cool! thx thoughtbot!,1539901187.0
mariozig,"This is awesome.  The quality thoughtbot produces is top notch. Seems like it's across everything they do... code, podcasts, etc
",1539903327.0
nynhex,Thanks for sharing.  I saw this announced the other day.  I had paid for upcase and it was worth it imo.  ,1540061242.0
rio517,Glad they opened it. Going to point a few boot camp grads at it immediately.,1539893406.0
Temik,As much as I‚Äôm glad to hear it this probably means they are sunsetting it :|,1539939628.0
hardwaregeek,For real? We're barely at Ruby 3.0. Kinda seems like we should wait for a Ruby 3.0 release candidate before talking about 4,1539875399.0
thebritisharecome,"This feels like a non-article and self promotion.

The community doesn't ""encourage it"" the community doesn't have a choice.",1539869053.0
briancodes,"Dude your article is wrong.  


>In a statically typed language, variables‚Äô types are static.  
>  
>This means that when you associate a variable to a type then you **cannot** change it anymore.

In static typing, the types is associated with the reference and is assessed at complie time(staticly) what you are describing is strong typing.  


>In a dynamically typed language, variables‚Äô types are dynamic.  
>  
>This means that when you associate a variable to a type then you **can** change it whenever you want.

In dynamic typing, the type is associated with the value and is assessed at runtime(dynamically) what you are describing is weak typing.",1539875399.0
jrochkind,"> Here the a variable responds to map and returns the expected object. So it‚Äôs legitimate to think that the a variable is an Array.

Um, but it _was_ an `Array`. So I'm not sure what this example illustrates. 

This article doesn't tell us much. There are interesting things to say about duck typing, they are not here. ",1539887573.0
Valaramech,"I always recommend that people dig into ActiveSupport generally.  There's lots of good stuff in their that Rails developers use all the time.

There have even been a few methods that started out in ActiveSupport that have since become core language features.",1539826422.0
remain_calm,"Maybe I'm missing something, but what makes this strategy preferable to the following?

    some_string == ""Johny""

",1539835200.0
igorpreston,Nice article! Thanks for sharing it. I never heard about that class and its features. I‚Äôll definitely check more posts on your blog!,1539802468.0
SizzlinSteak,Cool stuff! Thanks!,1539810812.0
Hell_Rok,"If you're just looking to serve a directory you could use the built in webserver

`ruby -run -e httpd . -p 9090`

Otherwise you'll want to loop over all the html files in the directory and programatically generate routes in sinatra which sounds pretty over kill but this is how you'd do it:

    require 'sinatra'
    
    set :bind, '0.0.0.0'
    
    Dir.glob('*.html').each do |file|
      get ""/#{file}"" do
        File.read(file)
      end
    end

&#x200B;",1539753467.0
savetheclocktower,"Not tested at all, but something like this ought to work:

    get '/' do
      File.read('index.html')
    end

    get '/*.html' do
      filename = ""#{params['splat'].first}.html""
      return [404, 'Not found'] unless File.exist?(filename)
      File.read(filename)
    end",1539798666.0
UrusaiNa,"Does it have to be free?   


Sikuli is probably your best bet if that's the case. Otherwise I might recommend EggPlant to your company (full disclosure I'm a manager of that company)",1539791587.0
dunderball,I'm surprised there isn't an open source library yet to diff images and report on a certain % match. That's really too bad ,1539900727.0
sickcodebruh420,"Sidekiq is, without a doubt, one of the absolute best things about working with Ruby, so I find any news about Faktory very exciting. Congratulations on the release!",1539734918.0
ksec,Will Faktory one day replaces Sidekiq? ,1539776477.0
ioquatix,"That's awesome, congratulations.

Since this is not written in Ruby, do you mind explaining how it executes Ruby jobs? Do you just specify a command line to execute?",1539724269.0
Grahar64,Thank you. We use sidekiq on a bunch of ruby projects and I wanted to use factory on our new go projects but no one wanted to maintain a new DB engine. This will make it much easier to get a POC out and maybe get some support. ,1539767989.0
kyleboe,:partyparrot:,1539725468.0
lucisferre,Is there any reason that a SQL database could not have been used or would be a disadvantage to storing the state of jobs/work?,1539785015.0
schneems,"BTW here's my Rails 6 PR for detecting this scenario and erroring https://github.com/rails/rails/pull/33932. 

Here's one for the backport that was reverted https://github.com/rails/rails/pull/34086.",1539787931.0
GroceryBagHead,"This is not something you can override. It's a keyword like `def`, `if`, `class`, etc. You gotta change the ruby interpreter. 

This seems like an important change though and I'm all for it.",1539701938.0
HellzStormer,"Lol, this is insane. Good, I love it. Here is a ""clean"" way that would not require compilation to work on people's computers:

You could write something that rewrites the Ruby code as it gets required. This is the approach [deep-cover](https://github.com/deep-cover/deep-cover) takes to instrument code. It's relatively tricky, but if you only need to support MRI Ruby 2.3+, it's easy. You need to override `InstructionSequence.load_iseq`, similarly to [here in deep-cover](https://github.com/deep-cover/deep-cover/blob/master/core_gem/lib/deep_cover/core_ext/instruction_sequence_load_iseq.rb). You will probably want to filter which files you transform, because `dang` could be used in your gems and you don't want them breaking.

The only downside of using `load_iseq` is that it will conflict with both Bootsnap and DeepCover, since this API isn't very extensible...

Now for the actual transformation. You can either do a `gsub(/\bdang\b/, 'rescue')`. But this would break if you also used dang inside of strings.

Another option for the transformation would be to use the [parser gem](https://github.com/whitequark/parser). You would probably need to monkey-patch it because I don't think it supports customizing the syntax. But basically, but with it, you could parse the ruby code and truly consider `dang` to be a keyword used in the same context as rescue, then you only rewrite those.

",1539705832.0
nielsbuus,"I have no idea. If you don't mind that your exceptions will be gobbled up for the sweetness of the word, you could do something like this:

Client code:

    dang(OpenURI::HTTPError) do
      open(""https://www.reddit.com/this-url-does-not-exist"")
    end

Implementation code:

    module Kernel
      def dang(*exceptions)
        begin
          yield
        rescue *exceptions
          puts ""Dang, I'm sad.""
        end
      end
    end

If you want to actually handle the error, you will need to pass two blocks and then it loses its shine IMHO. Maybe you create a chaining DSL, like

    fingers_crossed do
      open(""http://www.hamsterdance.org/hamsterdance/"")
    end.dang(OpenURI::HTTPError) do
      puts ""This website doesn't exist anymore. Dang...
    end
",1539703055.0
TextileWasp,"You probably want to write a DSL and after that monkey patch all the things. Doable, but why?",1539701744.0
iamgrzegorz,"`rescue` is a keyword, not a method, therefore you cannot just alias it or modify via metaprogramming.

What you can do (be aware, it makes completely no sense, just showing an example here) is to write a method that will wrap all your code, replace ""dang"" with ""rescue"" in that code and run it. For example:

    def dang_wrapper(&blk)
      rewritten_source = blk.source.sub(""dang_wrapper do"", """").sub(/end\z/, """").gsub(""dang"", ""rescue"")
      eval(rewritten_source)
    end
    
    dang_wrapper do
      class MyClass
        def some_method
          raise ""I raised error""
        dang RuntimeError => e
          puts e.message
          puts ""but nothing happened""
        end
      end
    
      MyClass.new.some_method
    end

If you run the code above, the output will be ""I raised error\nbut nothing happened"", which means the error was rescued. Again, it's just a fun snippet to see what you can achieve with Ruby. Please don't ever use it for real applications though.",1539705683.0
laerien,"You can add the following code to [this line here](https://github.com/ruby/ruby/blob/5b72097225797dfb91d4e3cbd4983bedf0eadb26/eval.c#L1913) and recompile:

    rb_define_global_function(""dang"", rb_f_raise, -1);

Keywords aren't very friendly to metaprogramming.",1539703138.0
,"https://www.ruby-lang.org/en/community/ruby-core/

Probably there.",1539701396.0
edendark,I don't think it's possible to alias a keyword in Ruby. ,1539701769.0
drbrain,"I've implemented a parallel exception system in the [return_bang gem](https://rubygems.org/gems/return_bang) which uses block syntax because you need to recompile ruby after editing [defs/keywords](https://github.com/ruby/ruby/blob/4444025d16ae1a586eee6a0ac9bdd09e33833f3c/defs/keywords#L39) (I think) to change a keyword name, and you end up with an incompatible ruby.

Here is the [implementation of return_bang](https://github.com/drbrain/return_bang/blob/master/lib/return_bang.rb#L3)

Allowing both `rescue` and `dang` is a larger exercise which includes also modifying [parse.y](https://github.com/ruby/ruby/blob/trunk/parse.y) to add `keyword_dang` and allow it to be used in addition to `keyword_rescue`.
",1539714638.0
mberube,"You could try using mimemagic ([https://github.com/minad/mimemagic](https://github.com/minad/mimemagic)) or ruby-filemagic ([https://github.com/blackwinter/ruby-filemagic](https://github.com/blackwinter/ruby-filemagic))

&#x200B;

I haven't used these, not sure if one is better",1539699513.0
Shaper_pmp,"Are you trying to *determine the type* of a file on disk that has no file extension, or are you trying to *find* a file on disk (that has an extension), given only its path and filename?

These are totally different issues with totally different solutions, so you need to clarify which you're talking about to get good answers.",1539704114.0
Yuanlairuci,This sounds like good practice for using regex. You want to find the letters that come after the last period in the name.,1539704368.0
Tomarse,"    Dir.entries(path).select { |f| f.include? ""825"" }[0]

That will give you the filename as a string, including any file extension, assuming you only have one file in the directory with ""825"" in th name.",1539714191.0
moomaka,"    path = '4251ad3e7715dea81aaf2b25a67f026c' # it's a jpeg

    valid_extensions = `file -b --extension #{path}`.chomp.split('/')
    => [""jpeg"", ""jpg"", ""jpe"", ""jfif""]

This assumes you're on a linux system with the `file` utility, and be aware it's not 100% accurate. Also be aware that there is no 'right' extension. File extensions are just a hint to the OS as to what program it should use to open it, not the canonical determinate of the 'type' of a file.",1539735937.0
EldritchSundae,"Extensions are merely conventions, since it is otherwise impossible to accurately guess the intended 'type' of every file without guidance. Your best bet would be to read the first few bits of the file for its [magic number](https://en.wikipedia.org/wiki/List_of_file_signatures).",1539750141.0
TextileWasp,"Dir.glob

If you have the path in the path var you would do:
Dir.glob(‚Äú#{path}*‚Äù)

You may get back more than one file (and you‚Äôll get back an array no matter how many elements you get)",1539699674.0
feelosofee,Great! Keep up the awesome work!! :) ‚ô™‚ô´‚ô™‚ô´‚ô™,1539700809.0
coldnebo,"ooh, as a former composition student, I love this. Hope you aren‚Äôt in danger of working so hard on the awesome tool you never finish your compositions!",1539713540.0
zverok_kha,"What's your point? If it is just ""having `#initialize` in documentation is not pretty, because it is called `.new`!"", I'd leave it the current way. Looking at docs, Rubyists are used to look for `#initialize` in order to understand class' constructor call sequence. All other gems typically render `#initialize` docs this way.

But if you really want it, you can, for example, use `@!method` directive like this: 

    # @!method self.new(name)
    #   @param name [String]

",1539684585.0
thibaut_barrere,"I‚Äôm posting this in reaction to [Outside of web development, what is Ruby best suited for?](https://www.reddit.com/r/ruby/comments/9oj6uw/outside_of_web_development_what_is_ruby_best/).

The second half of this talk presents a number of use cases for Ruby in the area of data processing & ETL, namely:

* Micro-batches (e.g. realtime sync)
* Multistep batch processing (e.g. enterprise data aggregation)
* Automation of internal company tasks (e.g accounting, data extraction from PDF)
* Big rewrites & data migrations

I hope this will encourage more people to try out Ruby for such tasks.",1539679010.0
ClikeX,"Looks pretty cool, but I'd say it seems more like python than ruby.

  
What benefit would Imba have over something like [Opal](https://github.com/opal/opal)? (Which is syntactically a lot closer to Ruby)",1539682388.0
mikekreuzer,"Seems Imba's been around for a few years but this is the first I've heard of it, ta. First announcement I can find is on [HN in August 2015](https://news.ycombinator.com/item?id=10091454).

There are a bunch of tutes on [scrimba](https://scrimba.com/search?q=imba) (which is written in Imba).

The secret sauce I needed to get any of those started is some node package/webpack files, that's just a couple of files but it's key, an eg is a [hello world project](https://github.com/somebee/hello-world-imba) I found on github. Might write up a better getting started, that seems to be lacking.",1539689885.0
realntl,This looks very intriguing!,1539699606.0
sshaw_,But does it offer gradual typing..?,1539720304.0
400921FB54442D18,"If you get to the point that you're considering using this, you need to back up, stop using JavaScript, and just use Ruby in the first place.",1539718615.0
moomaka,"It's used in ops (Chef, Puppet, Capistrano), security (Metasploit), Dev tooling (Vagrant, Homebrew), mobile apps (RubyMotion), SASS was originally implemented in Ruby though moving to Dart now, in app embedded scripting (Sketchup), I also use it a lot in place of Bash for general scripting.",1539655496.0
abadabazachary,"Have a flip through the table of contents ... there's lots you can do with ruby: http://shop.oreilly.com/product/9780596523695.do

Personally, I've used ruby for all sorts of scripting tasks.  In fact, I don't use perl for my scripting hardly ever any more.  Everything I could do with perl, I do with ruby.   Unless it's a perl one liner that I'm copy pasting..



I have actually done a lot of financial analysis with Ruby.  There are plenty of financial and statistical libraries for ruby, but occasionally there are shortcomings.  I have found that one can leverage tech like the 'rinruby' gem to use the R language and graphing within ruby.  Sometimes I have needed to use some python as well, but I prefer programming in ruby.
",1539655221.0
jacksonmills,"It's generally good at most tasks that don't require insane performance, particularly when orchestrating already optimized tasks, and acting as a middleman data layer. One of it's chief strengths is it's ability to represent abstract case logic in a very readable manner - i.e. ruby can read a lot like English. This makes it excellent for web development as often it serves a business process purpose, such as ordering a case of paper towels, or dealing with client billing. This ability doesn't arise purely from method semantics, it also has something to do with the fact that everything is an object open to modification, as well as a lot to do with the internal consistency of the language and Rails.

One classic thing you will see in a Rails app is the following:

>\`3.minutes.ago\`

So that gives you a timestamp in local time that was exactly 3 minutes ago. Normally in some languages this would be a huge pain in the ass, especially given how trivial the task is to conceive. But Ruby/Rails makes this easier by defining a few simple functions: ""#minutes"" on any number, and ""#ago"" on any number. #minutes multiplies the number by 60, giving you the total in seconds, and ""#ago"" gives you that many seconds ago as a timestamp. Because we can redefine types in Ruby, Rails can create these convenience methods to better serve web applications. This is Ruby's prime strength; it is extremely mutable, and can be easily modified to serve a particular domain.

It's a general purpose language in the real sense of the word. It's actually pretty bad at being good at any one thing in particular, but it's very good as a ""glue"" that communicates or leverages other applications and technologies.

When not using it for web applications, I use it for asset pipeline stuff with my own video game projects, and I also use it as a drop-in bash script replacement when I know the environment has at least an MRI runtime. Writing system scripts in Ruby is a lot easier than in Bash, and while I do know Bash and have used it a lot, it's much easier in my opinion to maintain a Ruby script.

&#x200B;",1539662486.0
amirrajan,"I build all my mobile games with it. A Dark Room for iOS and Android were both built with Ruby. 3.5M downloads world wide and counting :-)

I‚Äôm currently building the Nintendo Switch port with Ruby too. 

Edit:

Feel free to AMA. I‚Äôll share everything I can that isn‚Äôt under NDA with Nintendo, Google, and Apple. ",1539684813.0
hardwaregeek,"The thing I like about Ruby is that it's a bit of a chameleon. Because of its dynamic features, you can pretty much adapt it to any use fairly easily and create a Domain Specific Language or DSL. The most famous one is, of course, Rails, but the idea is universal. You can do it in [testing](http://rspec.info/), in [automation](https://learn.chef.io/), etc.

",1539661358.0
Jdonavan,I my city Ruby is used more for automated testing than it is for anything else.  Even big .Net based enterprises use Ruby for automated testing.,1539696038.0
TunaFishManwich,"I work on a team that does big data stuff in about 80% ruby, with absolutely no web component. (More to the point, we write ruby that manages clusters and other resources, orchestrates stream processing topologies, produces reports, writes sql/pig queries, manages workers, etc)

Ruby is excellent for ""glue"" code. It isn't fast relative to some other options, but for everything but the heavy lifting, its perfect.",1539700887.0
saturnaelia,Ruby is pretty rad for [interactive command line applications](https://github.com/angela-d/resgen).,1539731661.0
dancesnitch,Wow very impressive! I feel stupid after reading all these comments :( ,1539672456.0
this_is_not_nil,"I use it as a bash replacement, it has a much better syntax and you can inline dependencies with bundler/inline.

I guess this is how people before me used perl.",1539680121.0
realntl,I write back end services in ruby. No web involved whatsoever.,1539699075.0
chakravala,"Here's some Ruby code for solving the Archimedes Cattle Problem in 0.15 seconds (on my workstation). The smallest solutions have over 100000 digits. Ruby has arbitrary precision integers built-in, as well as nice functions for factoring integers and performing exact rational arithmetic.

&#x200B;

[https://github.com/octonion/puzzles/tree/master/chakravala](https://github.com/octonion/puzzles/tree/master/chakravala)

&#x200B;

Ruby also handles matrices and vectors quite nicely. Raising a matrix to the 1000000th power is not a problem.

&#x200B;

[https://github.com/octonion/puzzles/tree/master/keypad](https://github.com/octonion/puzzles/tree/master/keypad)",1539672024.0
it_burns_when_i_php,SCRIPTING omg its so fun.,1539674753.0
_a4z,"Asciidoctor is written in ruby. 
And asciidoctor is great! 
If you don‚Äôt know it, It‚Äôs like markdown but better. 
",1539675152.0
r3d51v3,"I use it a lot where I used to use Perl for systems admin tasks as well as in bash one liners. I do a lot of data analysis in decently large data sets, and the people who use the output of this analysis are technical, but don‚Äôt program. I use one liners (usually in conjunction with the parallel command) to process large datasets. Many times a single machine with awk, sed and/or ruby can easily process a billion or more lines of data into some kind of view our analysts can use. Since the data and the types of outputs are constantly changing, I typically just pipe data through a Ruby one liner instead of writing a more formal application.

I also use it for accessing and processing results from elasticsearch. 

Nothing I do couldn‚Äôt be done in Perl, Python or many other languages, I just prefer Ruby.",1539692667.0
dunderball,"It's awesome for automated testing. The DSLs available for it are awesome, and way friendlier than any Java or python testing frameworks. Rspec is the real deal!",1539900886.0
please_let_me_start,I have my dotfiles' setup in a Rakefile so I can just run `rake` on a stock macOS machine and have it install everything.,1539666152.0
markbrazil,i am using jruby for the last few years. It is ruby that runs on the java jvm and has full access to all java classes. It has allowed our older java gui (swing) application to have ruby code instead of java.  Also using ruby prawn for writing pdf's.,1539685884.0
rakedbdrop,I used ruby to download all the files on google image desktop so i could have them. Navigating to each url would have been time consuming. A quick 7 line script did it for me in seconds. ,1539687618.0
thomcchester,If you are using rails then anything that uses a sql database (mainly Postgres or MySQL),1539657195.0
htom3heb,"This will be unpopular, but in industry, nothing really. Ruby is Rails. Ops is now k8s and Docker. Scripting is python. Homebrew is probably the most ubiquitous program, but it's not significant enough alone to separate Ruby from Rails (and the perception of Ruby being married to Rails).",1539666660.0
hmaddocks,Move the include statement to after the method definitions. ,1539629271.0
ioquatix,Why not use tests/specs? Or have the class provide default implementations?,1539637833.0
_matthewd,"I'd say your least-bad option, to retain the semantics you want, would be to move the assertion to `initialize`.

The disadvantage is that that's pretty strongly on the ""runtime"" end of whatever divide there is in your application.

The advantage is that it allows a lot more probably-reasonable usage variations, from re-opening the class to later add the needed method, to including the module in an abstract superclass while defining the method only in the actually-used subclasses.

-----

The most Ruby-ful approach, though, is to not check it at all and just rely on the method to be there when it's called: for examples of that pattern, see the prototypical examples of includable modules: `Enumerable` (`each`) and `Comparable` (`<=>`).",1539656937.0
stikitodaman,"Have you tried doing the include Module right before you close the class? Like instead of at the top, put it in the bottom? ",1539659103.0
eliavlavi,What do you wish to do once you found some method is indeed defined in the base class?,1539636801.0
tomthecool,"This sounds like the wrong design. You're putting test code into the application code.

You could write tests that assert your classes implement a certain interface. Don't make the classes self-test at runtime.",1539877363.0
jasdeep13,"This effort will make it easier to write ruby programs that are more correct and with fewer errors. But, it won‚Äôt make Ruby faster. 

That‚Äôs why we have projects like: https://crystal-lang.org/ which have best of both worlds. ",1539663838.0
in0pinatus,"_And I felt a great disturbance, as if millions of ducks quacked in terror and were suddenly silenced_",1539625753.0
faitswulff,"Why all the cynicism itt? Gradual typing is becoming more popular in various languages (Typescript, Python) and having options for tooling doesn't seem like a bad thing.",1539627640.0
joelbluminator,"I have mixed feelings over this. On the one hand it's a very nice contribution to Ruby from a huge company. On the other hand - if you truly believe your codebase is going to scale easier and be more maintainable with types, why not start rewriting it in a typed language? Stripe is probably gonna be here in 15 years from now, so that's a long term investment.

&#x200B;",1539617085.0
ksec,Anyone know what time will this be released in Open Source? This year ? Or looking at 2019?,1539680515.0
fedekun,Just use another language. It defeats the purpose of using Ruby. It's like trying to add types to Smalltalk.,1539716088.0
sshaw_,Someone let me know when this trend of adding types to Ruby goes away... ,1539627125.0
JohnBooty,"> Do you use static analysis tools? How do you use them?

At my previous job, we used Rubocop... but mainly for style conventions. 

The Rubocop rules were enforced via a Git commit hook & the test suite itself.

However, we only used a small % of Rubocop's functionality, mostly ""trivial"" style issues. Why? It was a legacy codebase with ~400kloc of Ruby, created long before Rubocop, so we used Rubocop's excellent `--auto-gen-config`option to ""forgive"" past violations and hopefully prevent new ones. This approach precluded using the majority of Rubocop's more ""advanced"" rules. We slowly chipped away at the existing violations when we had a chance to refactor, but it was difficult work due to our horribly slow (3+ hours) test suite.

Maybe more importantly, static analysis for a dynamic language like Ruby *cannot* be very advanced. It is almost laughably primitive to static analysis from tools like Resharper for C#. It's just a tradeoff of using a dynamic language.",1539631002.0
,[deleted],1539616083.0
moomaka,"We use Rubocop and ESlint (standard JS preset). In both cases they are run as part of the CI build and fail the build if they don't pass. 

> in 88% of the projects, they are required only for checking code style conventions.

Glancing at the data it sounds like you would consider Rubocop / ESlint code style only? I don't agree with this, there are a number of checks in both that look for common mistakes that aren't related to code style. ",1539623091.0
Ark_Tane,"Yep, we use Rubocop and enforce its standards by running it as part of the CI suite (Travis) that needs to pass before merging to master. I've also got it running a a pre-commit hook, and as a linter within my editor as well, although other developers on the team have different setups there. We do have a pretty large .rubocop\_todo.yml file though, as historically we weren't using it. For the most part we've got all cops enabled with the default options.

We've also got a few other static analysis tools running as part of code climate. This is still a fairly new venture, and is mainly being used to identify areas for cleanup. I wanted to try and get the comments added to pull requests, but haven't been successful, despite toggling the various options. I did managed to get it running on pull requests like our CI suite, but turned that off again pretty sharpish.

We do also have a few team coding styles, but these aren't tightly enforced. These aren't part of the git repo... perhaps they should be.

I should add, while we're open source, and on Github, pretty much all out contributors are internal. 

I've also got ESLint covering my javascript, but we haven't really come to any team consensus on that yet. 

&#x200B;",1539643623.0
allcentury,"I think you're describing passing in an error handler and then later additional callback handlers.  A design like that can work but it requires you know the internals of a method, which can get complicated fast.  In your example, you'd have to introduce a NOOP error handler for every callback if I didn't want anything.

His approach about logging/raising on errors, is a common pattern.  Methods/Classes are not always responsible for making sure the caller did the right thing, but the caller can ask for errors back if they want or choose to ignore them - you see that in CLI's all the time with \`--silence\` or \`2>/dev/null\`.  

&#x200B;",1539611251.0
yawboakye,Shameless plug but I reel about the same problem here: https://boakye.yiadom.org/bikeshed/funparams/,1539611258.0
in0pinatus,"This ""article"" is basically a cut-down section of Avdi's book, which presents exactly the same iterative improvements of code over pp200-204, only with much better discussion along the way. All the methods given are simply pasted directly from the book.

It's one thing to write notes for yourself as you go through a text, but it's straight-up plagiarism to publish this as your own work and I call on the mods to delete this posting.",1539762264.0
apocapants,I think you need to remove the ‚Äúdo‚Äù on the first line... You also need to make sure that the two variables joke and funny are defined.,1539569517.0
fedekun,"    class FunnyJoke
    end",1539554034.0
nubil,NameError (undefined local variable or method `joke' for main:Object),1539582413.0
ThaiJohnnyDepp,"Inapired by your post I wrote the worst Ruby code I've ever written. Don't ever emulate this style under any circumstances. 

`puts((""Hahaha funny joke!"" if joke.funny? || ""Lame joke, man."")`",1539582795.0
RISCfuture,"`gets` returns nil if there‚Äôs no more data on the socket to fetch. In that case, the clause of the `while` loop is false and the loop terminates.",1539538670.0
astupidnerd,"I think a lot of the confusion is coming from seeing a variable declared/defined inline with the rest of the code. Although this is usually not best practice, it is definitely possible.

When you assign a value to a variable, that expression itself returns the value.

That is why something like this will work:

```
i = (b = 12) / 4
puts i
puts b
```

> 3

> 12

Let's run through your code sample above. We'll assume there are 2 lines being pulled from the socket, ""foo"" and ""bar"".

To make it easy, let's just focus on the while loop part:

```
while line = s.gets
  puts line.chop
end
```

The first time through the loop, the while loop says, ""hey, is my condition truthy?"", so it checks if `line = s.gets` is truthy. This expression sets the value of `line` to the return value of `s.gets`, then returns it. The while loop sees `""foo""`, and decides that's truthy, so it prints ""foo"".

The next iteration through the loop, the while loop says again, ""hey, is my condition truthy?"". It again checks if the expression `line = s.gets` is truthy. This will, again, get the return value of `s.gets` and assign it to the variable `line`, then return that value. This time through it will be ""bar"". The while loop will look at that and say, ""yup, that's truthy"". It will print ""bar"".

The next iteration through, the while loop again says, ""hey, is my condition truthy?"". So, it checks if the expression `line = s.gets` is truthy. This time, however, we have reached the end of the stream; `s.gets` is `nil`, so it assigns `nil` to the variable `line`, and returns it. The while loop says, ""nope, not truthy!"" and it ends the loop.

Hope that helps!


",1539542556.0
jcouball,"As you said, the `while` line creates the `line` variable.  

It is important to understand that `line = s.gets` does two things: it sets `line` to the value returned by `s.gets` AND returns that value. That value is used as the `while` expression.  `s.gets` returns `nil` when there is nothing left to get.  Since `nil` is considered falsey, it will break the `while` loop.

&#x200B;",1539561590.0
scientz,"Sorry to be a dick but no, you don't ""know Ruby pretty well"".based on this. And I say this because to sooner you realize how little you know, the faster your get to proficiency.",1539555846.0
mphoyu,"‚Äòline = s.gets‚Äô is an expression in ruby, one that assign the result of ‚Äòs.gets‚Äô to ‚Äòline‚Äô and as every expression must return something it returns ‚Äòline‚Äô. Just as ‚Äò5+3‚Äô only returns ‚Äò8‚Äô.

Given that i think it is pretty clear how this works.
Hope it helps.
More info [here](http://zetcode.com/lang/rubytutorial/expressions/) .
",1539565770.0
d3oby,"the neat thing about ruby is that everything has a return value:

    # enclose it:
    (5 if true) # => 5
    (5 if false) # => nil
    # result can be assigned
    var = (5 if false) # => var = nil
    # therefore even assignment has a return value
    (line = 'line') # => 'line'
    # even control structures has a return value
    result = if (line = read_line)
      line
    else
      'line was empty'
    end

think (or rather read) about this. for me this is the very reason why ruby code is so expressive. ruby community is diverse and not everybody emphasises this style, but it's there. **take a note though, that assignment inside `while` or `if` condition is regarded as dirty code and is discouraged**. but for an example like this it's ok.",1539613636.0
zenzen_wakarimasen,"And this is why ""assignment in condition"" is a bad idea. The person who wrote it may feel clever by shaving one line of code, but it can be confusing. ",1539547638.0
coldnebo,"heh, that code was written by a C socket programmer I‚Äôll wager.",1539563937.0
_redka,Literally the only thing I wanted to see in that README was an example of it printing some exception - but there isn't one.,1539500239.0
three18ti,"And advertisements in the README. What a time to be alive!

Also I'm with _redka, where's the example in the README? I don't want to go digging through Travis logs...",1539535678.0
scientz,This is some NodeJS leftpad level stuff right here. What in the...,1539559207.0
tomthecool,"* **No explanation/example in the README??!!**
* *Advertisements* in the README??
* [Most of the code](https://github.com/yegor256/backtrace/blob/master/lib/backtrace.rb) is literally comments.
* [The inline documentation](https://github.com/yegor256/backtrace/blob/master/lib/backtrace.rb#L25) just says ""Backtrace as a string"". So... How is this any better than ruby's standard backtrace printing? Where's the side-by-side comparison?
* And on top of all that, [the most interesting test](https://github.com/yegor256/backtrace/blob/3c6f090086a27b7327ec98740c1dc29e0e041766/test/test_backtrace.rb#L33-L39) is unhelpful... What's special about that result? Wouldn't this already be true if you instead captured the standard output from raising an exception?

You need to document this properly, otherwise no one will know why to use it.",1539603719.0
keyslemur,"Let your work speak for itself.

>Anyways, the point is the CSV library is broken, broken, broken and I do NOT blame the author or authors I blame all of you. Yes, YOU, all you free-loaders waiting for a miracle.

This comment is filled with malice and vitriol, and I would encourage you to consider the spirit of Ruby in your writings.",1539497830.0
Jdonavan,"All I can say is that this CSV library better be fucking awesome as much shit talking and self promotion the author has been doing.  If it's broken, fucking fix it, don't keep harping on about how broken it is and how you're going to save us all.

",1539478337.0
joemi,"Two things (in addition to those already mentioned: the author's shameless self promotion and trash talking) bother me about this new csv gem:

- It's at least as confusingly designed as stdlib csv, if not more.

To handle headers, you need to use a different class (CsvHash) than no headers (Csv). To handle tabs (or not skip lines that start with '#', or not skip blank lines, etc), you need to use Csv.strict.parse instead of Csv.parse. Why changing (some of) the defaults counts as ""strict"" is beyond me. The more I look at how to use this, the more odd/confusing design choices I find.

- It's full of opinionated defaults.

The author is building very opinionated defaults into the gem (since it meets his needs), and I think some of the defaults are patently bad ideas. For instance, a '#' indicates a commented-out line in the input CSVs. See also the default to trim leading and trailing spaces. And others, I'm sure. IMO, such things are nice features if they can be enabled easily, but the default should be to take the data straight as it is, don't change the data by default. Changing the data by default is dangerous, especially when those changes are not explicitly stated at the beginning of the documentation. I can't wait for the first company that uses this gem that ends up silently losing records because someone used a '#' that happened to be in the first field of the CSV.
",1539534124.0
guitaronin,"I remember standard lib csv was pretty slow in the old days, and fastercsv was the solution. fastercsv gave me a lot problems with memory bloat.  Since standard csv was improved I've never had a problem with it. What is broken?",1539482293.0
briancodes,Why why why do do do you you you write write write like like like this this this.,1539546346.0
this_is_not_nil,"> Now that the giants have left the building any volunteers on adopting the standard CSV library and making it great again? Why not start with a custom purpose-built parser that handles more edges cases for escaping and quoting rules or more flexible rules / conventions for leading and trailing whitespaces and so on. Anyone? You might be giant.

Maybe list the edge-cases you have discovered yourself, you buffoon? ",1539611261.0
geraldbauer,"Thank you. Thank you. Thank you. Yes, the [new csvreader library](https://github.com/csv11/csvreader) is broken, broken, broken. Please, tell in how many ways.

PS: Bonus points for ideas on how to fix it :-).",1539602398.0
ioquatix,`PStore` in the stdlib is pretty awesome. https://redpanthers.co/pstore-ruby-standard-library/,1539469669.0
garuspl,"While other comments provide answers, I have a question: why do you need configs which update and what values do you intend to store? ",1539448970.0
pa_dvg,"It‚Äôs just a text file, Ruby‚Äôs standard file library can easily handle writing a yaml file back out or whatever.

You don‚Äôt typically see gems handle this because text editors are a perfectly capable interface for updating Config files",1539447420.0
danilobarion,I think that dry-configurable do what you want.,1539447897.0
4rch3r,This sounds fairly similar to SQLite but obviously that has full SQL compatibility in mind,1539459859.0
seainhd,Tell me exactly why you need this? What‚Äôs the use-case other than a ‚Äúneat API‚Äù?,1539470512.0
wflanagan,"Do you ever plan on having the ""config"" be persistent across multiple instances? Do you plan for the config to be updated? If so, you need to store it in the database.  

If not, then you can built it for yourself in about 30 lines of code or less.  Something roughly like this, though this is untested. 

[https://gist.github.com/wflanagan/e134f10f9db33aa3883262a604f219f8](https://gist.github.com/wflanagan/e134f10f9db33aa3883262a604f219f8)

I typically store my custom config in the database, as I want it to work and be accessed across running instances of my code.  

&#x200B;",1539604142.0
riddley,You might want to reconsider your filename. \~/.config is a directory in modern Linux that has all sorts of files in it.,1539480644.0
fedekun,"For something as simple as that, Sinatra would do just fine. Rails is fine too if you are used to it.",1539447498.0
smellyskater,"Using Rails is probably a bad idea. It come with a bag of conventions and components that are great when building a progressive webapplication, not so much for serving a single http call. 
Honestly, you don't need much outside of Openssh and cfn_nag  as long as you have access to a ssh-client on the client side. 
If you, for any reason, do want to wrap it with HTTP instead of SSH you could use any language you prefer.
I'd pick a ruby microframework that I haven't used before. [Sinatra](http://sinatrarb.com/) served me well for doing small stuff like this before.",1539448635.0
moomaka,"I'm not familiar with Manjaro but `.bash_profile` is generally only executed for login shells, e.g. when you SSH into a machine and have to login. `.bashrc` should be executed for every shell opened. Note: MacOS is an exception to this, it executes `.bash_profile` for all shells. 

tl;dr You should put `eval ""$(rbenv init -)""` in `.bashrc` and open a new shell or run `source ~/.bashrc` in already open shells. ",1539437964.0
hardwaregeek,Nice! I've been wondering why Ruby hasn't gotten serverless yet. Serverless Rack seems like a no brainer.,1539398157.0
Nowaker,Are the server and API open source? I'd love to deploy it in our company environment. ,1539414876.0
moomaka,"You probably want to add a helper that looks like this and include it via rspec :

    def session
      last_request.env['rack.session']
    end

Then you should be able to do this:

    expect(session[:user_id]).to be_nil",1539376521.0
dpashk,"This is really neat. I recently jumped into the Ruby ecosystem and has really appreciated the strong testing culture here. Before it would never occur to me to test something like my personal static blog, but it makes sense to me now AND I know where to start.",1539371526.0
EdChute_,Anyone's got any feedback on this podcast? About to start them in my next commute but curious what other people think,1539502277.0
nyekks,"These examples seem to focus on running the selenium server in its own separate docker container, is that really what you want to do? Because that sounds like a recipe for misery. Selenium and docker are both kinda inscrutable on their own, as I'm sure you've found out.

Personally I just build a new image derived from the main one that I use for deployment, exactly the same but with chromium, chromedriver and the testing gems installed in it. I run my tests on that, and it works fine. If you want to see some code PM me as I don't want to dox myself.",1539330186.0
saltvedt,[https://github.com/jfelchner/ruby-progressbar/wiki/Basic-Usage](https://github.com/jfelchner/ruby-progressbar/wiki/Basic-Usage),1539341433.0
jrochkind,"The TTY toolkit does have a progress bar, if that's what you need/are asking for. 

https://github.com/piotrmurach/tty-progressbar",1539620981.0
BadMinotaur,"While I haven't used any myself, [the list at Awesome Ruby](https://github.com/markets/awesome-ruby#cli-builder) might be a good place to start. I'm also interested to hear what others recommend, as I'm going to be releasing a CLI tool somewhat soon too.",1539338883.0
TunaFishManwich,"I would look into the curses gem. It used to be part of the standard library but they pulled it out into a gem awhile ago.

https://github.com/ruby/curses

https://en.wikipedia.org/wiki/Curses_(programming_library)

",1539367211.0
sshaw_,"Sounds like very basic requirements that could be handled by `printf` or `puts` and `String#*`/`String#ljust`, etc... For accepted `printf` args see [`sprintf`](https://ruby-doc.org/core-2.5.1/Kernel.html#method-i-sprintf). ",1539382530.0
pmurach,"The tty is an assortment of components which can be used independently and when combined can potentially help solve your problem. I would probably start by taking a look at [tty-progressbar](https://github.com/piotrmurach/tty-progressbar) and [tty-box](https://github.com/piotrmurach/tty-box) and possibly [strings](https://github.com/piotrmurach/strings) to help you deal with text in terminal.

This would probably get your pretty close to what you need. The scrolling log bit is probably the one thing you will need to be more creative with. However, I'm open to contributions once you get something going.",1539635391.0
xc68030,"This is cool, but can‚Äôt you use JIRA issue collectors for this? They are configurable JS widgets that go in your application which use the JIRA API to post issues. Seems exactly like what you‚Äôre trying to do. ",1539347266.0
psychonautilustrum,Or don't use JIRA.,1539340975.0
sshaw_,Death to JIRA!,1539382777.0
ioquatix,"Strangely enough I did something very similar, but for very different reasons, here: https://github.com/ioquatix/mapping",1539316853.0
solak,"Is this anyhow related to the dry-rb project? If not, then the name is a bit confusing.",1539345873.0
TheSmartnik,Don't really understand the point of it. Ruby has ducktyping/polymorphism out of the box. Protocols look like a fancy case statement,1539354455.0
sshaw_,What the hell... ,1539382877.0
zverok_kha,"Yeah, I am doing Ruby for 15 years, and it still somehow fascinates me that you can imitate almost any feature from other languages pretty closely with our flexible syntax.

Nice exercise, just never use it in production :) ",1539409160.0
keyslemur,"What code have you written so far? What issues are you having? What have you tried and what's still confusing you?

At the moment you've only provided assignment details, which isn't much to go on.",1539302915.0
_Calvin_Coolidge,"Do this. 

https://learnrubythehardway.org/book/

It's not a hard assignment, but it's not super quick either.  Seriously though you need to write some code and post here when you're stuck.  Based on what you've got so far I can't really give you more without just coding it for you.",1539311133.0
iamprimatt,‚ÄúPLEASE DO MY HOMEWORK FOR ME‚Äù ,1539331225.0
postmodern,"You could use [FFI::Buffer](https://www.rubydoc.info/gems/ffi/FFI/Buffer), or the [NArray](https://masa16.github.io/narray/) gem, or use [Array#pack](https://www.rubydoc.info/stdlib/core/Array#pack-instance_method) to convert an Array of Integers to a byte String.",1539315745.0
keyslemur,"Have you looked into any tools like Rails, Sinatra, Sequel, or other libraries yet?",1539302988.0
hucklegary,For now I‚Äôll just use one database thanks for pointing that out,1539440640.0
ac_8,"Have a look at some of the gems for admin interfaces, they might make your life easier for this project if what they provide fits what you need. They tend to get messy if you have to tweak and customize a lot of things, but save a bunch of work otherwise.

- [ActiveAdmin](http://activeadmin.info/)
- [RailsAdmin](https://github.com/sferik/rails_admin)
- [Administrate](https://github.com/thoughtbot/administrate)
- [Trestle](https://www.trestle.io/)

You can see a few more at https://www.ruby-toolbox.com/categories/rails_admin_interfaces

",1539550378.0
,"Honestly, separate it out into two different applications. Easier to manage dependencies, builds, and you may not have to deal with templates in the Sinatra app.",1539289352.0
nyekks,"In these kinds of situations I generally put a `binding.pry` in there and poke around until I resolve things.

If youre not using [pry](http://pryrepl.org/) and [pry-byebug](https://github.com/deivid-rodriguez/pry-byebug) youre missing out.",1539288542.0
moomaka,"There isn't really a way to do this, settings are meta-programmed in: https://github.com/sinatra/sinatra/blob/master/lib/sinatra/base.rb#L1222",1539377373.0
sshaw_,"I would remove the words ""evidently"" and ""apparently"" from this post. ",1539383255.0
moomaka,"That's not really dependency injection, it's also trivial to test the original method...",1539289128.0
hehestreamskarma,Locomotive is neat. I love Comfy. https://github.com/comfy/comfortable-mexican-sofa,1539279873.0
Serializedrequests,"Already answered, but the only thing EXACTLY like that is Locomotive. Other CMS's include Comfy Mexican Sofa, Refinery, Active Admin, and the various static site generators.

In general if you want Drupal (shudder) I would suggest simply using Drupal. There is no need to be fastidious about the language if you are not going to be building the site in it. Being like Drupal is not a particular strength of Rails. Rails is very much a programmer's framework.",1539315403.0
,[deleted],1539301538.0
imnos,Try Refinery - https://github.com/refinery/refinerycms,1539278105.0
skat_in_the_hat,"Not entirely the same as drupal or so. But I moved to flat html site generators. The one I use is written in ruby. Its called jekyll.  
",1539301552.0
Gridario,"Hey, have you checked out locomotive? https://locomotive-v3.readme.io/docs
It's a full engine CMS, based on rails and very powerful for dev yet simple for admins.
It's open sourced and we are working on a new version with a lot of new functionalities.
We provide hosting and support if needed :) ",1539278312.0
aspleenic,"It's not a CMS but if you're willing to work with templates and markup, [Jekyll](https://jekyllrb.com/) is my personal favorite.",1539280645.0
binarygold,Thanks everyone. I will try all. ,1539320570.0
thibaut_barrere,"Kiba ETL v2 officialises a new programmatic API, which helps, for instance, to provide rich feedback out of your ETL jobs.

I‚Äôm detailing how you can do that in this post. Questions are welcome as usual!",1539276214.0
Inityx,"> In Ruby strings are mutable.

https://wyeworks.com/blog/2015/12/1/immutable-strings-in-ruby-2-dot-3",1539280702.0
SureLetsDoAnother,"This is neat! I'm interested to see what you come up with a few months down the line as well.

When I first picked up JavaScript after Ruby, I remember being tripped up because of something I was used to in Ruby. I wonder if the reverse is true.

Hash key lookups will always return a value in Ruby, even if the hash doesn't have they key you looked up. You can specify almost anything, but the default (and certainly most common) return value is `nil`. It's so common that it becomes easy to forget that the returned value for a missing key could easily be truthy, and you end up conflating the truthiness of `foo[:bar]` with the existence of the key.

It might be especially weird coming from JavaScript in a situation where you're counting the occurrences of items in a list, and have set the default value of your `occurrences` hash to `0`.

    if occurrences[:foo] == 0
      puts 'Never occurred'
    else
      puts 'Yes, it occurred!'
    end

Compared to...
  
    if occurrences[:foo]
      puts 'Never occurred!'
    else
      puts 'Yes, it occurred!'
    end

>We won‚Äôt get into the details as the usage of methods in Ruby is pretty straightforward and does not create confusing situations in my experience so far.

Especially looking forward to hearing your opinion on this over time. I think I agree 100%... about 90% of the time. Private class methods (or rather methods that seem impossible to actually make private), and the related discussion about `self` seems to be the most common confusion. Method lookup when including multiple modules and inheriting from a class can occasionally get tricky

But I don't know that it's made any ""worse"" by being used to JavaScript, and isn't too common. ",1539316880.0
TunaFishManwich,"The article says:

>Ruby methods are not first-class citizens: they cannot be used as a value or passed around. They also don‚Äôt create a closure. We won‚Äôt get into the details as the usage of methods in Ruby is pretty straightforward and does not create confusing situations in my experience so far.

This isn't quite true. Ruby methods can be pulled off objects, passed around, called, introspected on, attached to other objects, etc.

    2.1.5 :003 > str = ""foo""    
    => ""foo""
    2.1.5 :004 > length_method = str.method(:length)
    => #<Method: String#length>
    2.1.5 :005 > length_method.call
    => 3",1539281255.0
Dombot9000,"Nothing about the IO model being completely different? One blocks by default, the other is non-blocking by default.",1539291077.0
keyslemur,"On point for most all of it. The frozen string was mentioned elsewhere, so I'll skiff over that one.

Blocks can be made with `{}` as well, but not like `a = { block stuff }`. You _could_ do `a = begin ... end` but that's ugly at best.

Paren-free is both a blessing and a curse for Ruby. There are patches which will make it simpler to write coming in 2.6 (maybe) like this: `JSON.:parse == JSON.method(:parse)`. It won't be exceptionally useful until proc performance is improved.

The entire proc vs block vs lambda vs method is pesky and unnecessary I feel. It complicates matters, especially around learning. I also object to the name ""block"". Function would be clearer and carry across languages more cleanly.

There were arguments in the past for merging Symbols and Strings, but Matz had mentioned it'd break too many things if they did. I still want a native implementation of method-call hashes ( `hash.a, hash.b` )

If there was only one thing I could steal from JS though, it'd be destructuring.",1539295743.0
Abangranga,"I absolutely hate the 'you dont need parens' thing. That has fucked me over so much when i am tired, and it makes everything much less readable.",1539358906.0
isolatrum,"Mutable strings ... Yeah ... But this is so rarely useful in my experience, I dont know if id consider it a significant difference. In fact many people use the frozen string literal: false flag to make their programs faster. It makes strings immutable for the scope of a file.",1539570358.0
postmodern,"While this is a nice-to-have enhancement, it assumes every column has the same type or that the user wants Arrays of individual cells returned. The defacto opinion these days is to support a separate type inference/coercion library that can map each cell however the user wants.",1539316857.0
geraldbauer,"Hello, I've written a new (and fourth) episode on why the CSV standard library is broken, broken, broken (and how to fix it). 

Let's have a look at [numerics a.k.a. auto-magic type inference for strings and numbers](https://github.com/csv11/docs/blob/master/csv-numerics.md).

Here's the challenge for the standard csv library. Let's read data.csv:

    1,2,3
    ""4"",""5"",""6""

Using these popular two rules (bonus for nans - not a numbers).

Rule 1: Use ""un-quoted"" values for float numbers e.g. 1,2,3 or 1.0, 2.0, 3.0 etc.

Rule 2: Use quoted values for ""non-numeric"" strings e.g. ""4"", ""5"", ""6"" or ""Hello, World!"" etc.

In the new csv reader it works like this :-):

    records = Csv.numeric.read( 'data.csv' )  
    pp records
    # => [[1.0, 2.0, 3.0],
    #     [""4"", ""5"", ""6""]]

And with your own not a number constants:

    records = Csv.numeric.parse( 
                '1,2,NAN,#NAN',
                nan: ['NAN', '#NAN'] )
    pp records
    # => [[1.0, 2.0, NaN, NaN]]


And an old quote:
    
> I disagree that it's broken. 
> It's implementing the [strict] RFC [CSV format] and gives you the tools that allow you to be less strict.

Anyone? Show us how you handle the reading of the numerics 
variant and Not a Number with the standard csv library?


Questions and comments welcome. Cheers. Prost. 

**PS: If you want to see other (more) CSV formats / dialects pre-configured 
and supported ""out-of-the-box"" in the new csv reader, please tell.**
",1539274322.0
volgorean,[here](https://gist.github.com/volgorean/a13fbefacb5034ebd49c19ebd4c1bc58). Not sure why the less than or equal signs are inconsistent in your image.,1539275270.0
jamie_ca,"It would be fairly idiomatic to do this as a case statement, using ranges:

    y = case x
    when -Float::INFINITY...-40.0
      3*x+1
    when -20.0...25.0
      x+32
    when 30.0...50.0
      1+x
    else
      5*x-1
    end

A slight gotcha would be that `2..5` would match 2 through 5, but I'm using `2...5` (3 dots) where the upper value is not included. It's the difference between <= 5 and < 5.",1539287694.0
zverok_kha,"IRB is standard Ruby console ([""official"" docs](https://rubyreferences.github.io/rubyref/intro/irb.html)).
Pry is a separate gem providing more rich console experience.",1539263214.0
Freeky,"I wonder why the performance of String allocation trends down a bit from 2.3 to 2.5 - I can reproduce it locally too.

Nice to see 2.6preview2 offers a considerable bump - over 50% faster.",1539300559.0
yawboakye,"Good read. How programming languages implement strings always excite me, mainly because strings are hard. A month or so ago I wrote a little bit about [Go's strings](https://boakye.yiadom.org/go/strings/) but didn't delve into encoding and representation. What caught my eye was the similarities: a Go string is just a byte sequence, UTF-8 by default. Looks like most languages are settling on that. But unlike other languages Ruby's strings are not immutable unless frozen. I hope immutable string literals become the default as well.",1539256242.0
jrochkind,"> Here we can see that in Ruby 2.0, a UTF8 string that we explicitly encode in UTF8 returns the string without replacing the unknown codepoints. So the invalid: :replace operation is omitted.

> In Ruby 2.1, the invalid: :replace operation is processed and the default characters ÔøΩ Replaces each invalid codepoint in the sequence.

I hadn't realized they fixed/improved this! I am pretty sure I filed a bug report on it in 1.9, i think maybe my bug report got closed as ""won't fix"" at that time, but regardless I'm glad it got improved!",1539608737.0
iconoclaus,I guess I don't keep up with your writings.  Where's your blog/articles?,1539226579.0
punitn,"I am from a third world country and my English is not that great. If your target audience is people like me then I would recommend using easier words than syntactic sugar, esoterica, veer, reconcile and blurb. I had to look up these words.
",1539210445.0
nmla5,"It's esoteric because it requires foundational knowledge of meta-programming, lambdas, procs, blocks, using methods as objects, etc.

I think preliminarily touching on the more complex topics in an article filled with them will help readers that don't have a deep understanding of Ruby.",1539242921.0
joelbluminator,"""In an effort to be more inclusive of beginners and build up their skillsets"" , so the obvious thought is maybe you should focus more on simple , skillset building topics , no? I mean the widget you're describing sounds nice but if your target audience is mostly beginners they will quickly go tired of your blog if most of your effort is esoterica.",1539258274.0
coralton,Holy shit I actually wrote the loggers! So nice to see people actually using it! ,1539231008.0
,"I'm pretty sure it has to be compiled to a JAR file. If it were JRuby,  you could just then include it as a dependency library but with just Ruby, I think you would have to run it as a console command.",1539197467.0
cheald,"JRuby loads .class (compiled bytecode) or .jar (archive) files, not .java (source) files.

First you'll need compile the fixture with javac, then you can either wrap it into a jar or include the class file directly: https://github.com/jruby/jruby/wiki/CallingJavaFromJRuby#accessing-and-importing-java-classes",1539200830.0
akito_mashua,".java are source code files, they cannot be executed directly. This .java must be compiled to .class file containing bytecode that the JVM can understand and execute. So yes either include it as a .jar file or execute it with the system's command, something like ""java -jar yourjarhere.jar"" ",1539241248.0
sinsiliux,foo = bar || foo || baz,1539177506.0
,[deleted],1539183441.0
rubyrt,"Frankly, I would not do it.  All the suggested answers are difficult to decipher.  I would probably even write it like this:

    if bar
      foo = bar
    elsif ! foo
      foo = baz
    end

That makes it more explicit.",1539266855.0
osxman,"It's evil according some code style guides, but the nested ternary is a one liner. 

    foo = bar ? bar : (baz ? baz : foo)",1539186886.0
fedekun,"    foo = bar.present? ? bar : (foo || baz)

Note that those many conditionals are a signal something is quite wrong with the code. Try extracting the logic into a few private methods. Ideally you want to use inheritance to take care of complex conditionals.

I'm not sure there's a way to skip the extra assignment, at least not without helper methods.",1539188455.0
Tomarse,`foo = bar ? bar : (foo ? foo : baz)`,1539198175.0
ioutaik,"Not sure what your  a_path is, your struct is not valid. Ignoring it, here is how to do it:

    response = '{ ""b_path"": [ { ""id"": 1, ""name"": ""a"" }, { ""id"": 2, ""name"": ""b"" } ] }'
    parsed = JSON.parse(response)
    parsed['b_path'].each { |h| h.delete('id') }
    parsed # => {""b_path""=>[{""name""=>""a""}, {""name""=>""b""}]}

The delete method returns the deleted element, which is why it returned 1 in your case.  
But the object has indeed been modified",1539167601.0
ioquatix,Merge sort can work efficiently only loading some records from disk.,1539160347.0
moomaka,"You can implement it in Ruby, but I probably wouldn't, I'd shell out to `sort` which already implements parallel merge sort for large input and should be much faster (basically disk speed limited): http://man7.org/linux/man-pages/man1/sort.1.html",1539186128.0
ioutaik,"An other solution would be to use databases
You can use COPY FROM FILE in PSQL to load you file in a db and retrieve it with COPY TO FILE while sorting",1539175606.0
insanelygreat,"To your more general question of how to handle large datasets in Ruby: It depends.

#### Do you really need to keep the whole thing in memory?

For instance, if you're doing something like `Array#inject`, can you instead store the ""memo"" in memory and then read each item from a file, line by line? (See also: Enumerator)

Similarly, can you put the data in a database and then perform the operation on it there?


#### If you really must load the whole thing in memory...

There are a lot of strategies to deal with this, but here are a few:

- Be conscious of references.  If an object still has a reference to it, the garbage collector can't free that memory.  This can be a tricky sometimes.  Profiling tools help.

- Use types that occupy a minimum amount of memory: Strings, integers, floats, and vanilla structs tend to have a small footprint.

- When safe to do so, modify items in place to avoid allocating more objects.  Don't use `#map` on huge objects.

- Only keep the data you need. Parsing a JSON string with a bunch of fields you don't need?  Put the stuff you do need into a Struct and discard the rest.

- It can sometimes be helpful to call `GC.start` after doing something you know generated a ton of garbage.

All of the above should really only be done when you know it's necessary. Going overboard with memory optimization can ruin Ruby's expressiveness.


### Embedded devices

When memory is seriously tight, like in many microcontrollers, it's usually easier to manage it yourself.  So these devices tend not to use GC.

Though, there are exceptions: Java Card, a stripped down Java that runs on things like SIM cards, does usually have a very limited GC available.

It's been years since I've played with an Arduino, but I seem to recall C and C++ being the only languages available -- both require manual management.

It's also worth noting that some devices don't allow dynamic memory allocation at all.",1539186595.0
,Sounds like you need to look into using HDFS or something similar.,1539178266.0
BadMinotaur,I feel like I'm missing some kind of bigger picture. Why is this so downvoted?,1539163821.0
zverok_kha,"I feel seriously uneasy about it (as with several other Performance-department cops). As I am constantly coming into discussions from ""quality of code (as a text)"" point of view, I can't help noticing that some ""performance optimization"" cops are at the same time ""style pessimization"" ones, and refactoring of `.compact.flatten.map` into a set of bang-expressions feels like ""de-Rubyfying code"" to me. 

**Why is it important (to me)?** I believe (as I've expressed in [this](https://github.com/rubocop-hq/ruby-style-guide/pull/730) contrived discussion) that there is a ""responsibility"" which Ruby style guide and Rubocop takes for shaping community's preferences and directions. From this point of view, having a ""knowledge"" that sometimes replacing a chain by a sequence of bangs could be an important performance optimization is a nice thing; while the tool that _forces_ this style (because _sometimes_ it is important to performance) is a pretty questionable one. (And yes, I know it is currently disabled by default, but this doesn't change the whole chain of reasoning.)

For me, an **important things** to think here are:
* probably this kind of suggestions should NOT be produced by static code analyzer, rather by a smart profiler (here is slowdown/unnecessary memory allocation _found_, and probable cause is ...);
* probably more ""Rubyesque"" way of solving such kind of problems is `Enumerator::Lazy` -- which, sadly, doesn't provide neither `flatten` nor `compact` -- which probably is a nice thing to discuss in ruby-core.

Sorry for a long rant!",1539175785.0
astupidnerd,"This looks really cool; it's definitely better than how I'm handling csv files.

I have a question though. How does it handle really large files? I work with a lot of large csv files and a lot of the parsers I've used read the entire file into memory. This really isn't feasible for files that are several gigs. Does this parser have the ability to read files in chunks?

Either way, this looks great, good job!",1539124008.0
zverok_kha,"I am wondering about two things:
1. If the standard library is broken, why not fix it? Or at least make your library a drop-in replacement (with compatible API)?
2. Why not namespace all the things, like most of the mature gems do? Your gem is taking several names (including very short and common `Csv`) which have a high probability of clashing with some gem user's code.",1539176261.0
dGhleSBoYXZlIG5vIHdv,"As someone who uses stdlib CSV all the time for a variety of things (and yet has to consult to docs all the time) I'll def give this a go.  

I see some code could do with a tidy. e.g. `@names = headers ? headers : nil` is a weird ternary use and you could just test for truthiness of `@names` in `#each`, as the only purpose of it is to guard against `headers` being `false` (even then `headers || nil` would do).

https://www.rubydoc.info/gems/csvreader/1.0.0 is 503ing (not your fault I know)",1539199214.0
virtually_bindok,Have you considered adding Capistrano? Makes life really easy after initial setup. ,1539112558.0
RHAINUR,"I gotta say, I've been deploying to Linode/Digital Ocean since I started on Rails, years and years ago, and I'd written some scripts to automate some stuff, but it was still a headache to manage these deployments.

I recently tried out [Hatchbox](https://www.hatchbox.io/) and while I only have toy projects deployed using their service currently, I freaking love it. Super easy setup, and great UI. It does EXACTLY what I need as far as deploying apps goes, and it's integrated with Github webhooks as well. Could not recommend them enough.",1539116514.0
BhishmPitamah,"I think you should write advanced things too.

I know it's too much , and might get you more work, but there are very less resources to turn to when it comes to knowing things about integrationof docker and ssh and email handling and stuff .

Would be good to have a beginner to expert book.",1539112462.0
jujubean67,How would this be different from [Reliably deploying Rails applications](https://leanpub.com/deploying_rails_applications)?,1539114338.0
andygauge,Please include docker as an alternate. This would keep the skills relevant. ,1539110775.0
dancesnitch,This is great! I‚Äôm currently doing DigitalOcean droplet and will move into Ruby on Rails on-click next month. Thanks for this! ,1539109180.0
samort7,Sounds good! Looking forward to it!,1539110026.0
,[deleted],1539110967.0
mojocookie,How about adding modsecurity with fail2ban in the nginx section?,1539124527.0
jdickey,"As people have pointed out, it's already been done, notably [here](https://leanpub.com/deploying_rails_applications) and [here](https://efficientrailsdevops.com/).

What I'd cheerfully kill for (and even more cheerfully pay for), is a book that covers development and deployment workflows for Dockerised Ruby apps (can live with Rails, but Hanami, Roda, or Sinatra should be broadly similar). Particularly end-to-end testing with Capybara or functional equivalent in a multi-container environment. I've been beating my head against this from one angle or another for the last couple of months.

Pointers gratefully appreciated.",1539153938.0
Nrdrsr,"For those who use it, why puma over passenger? ",1539163787.0
bandit11232,"Already been done.

See ""Efficient Rails DevOps"" by Michael Trojanek at [https://efficientrailsdevops.com](https://efficientrailsdevops.com)",1539119076.0
,[deleted],1539089277.0
WrathOfTheSwitchKing,"I tried playing with this on a real-world app, and it wouldn't start:

    ‚ûú  Someapp git:(develop) ‚úó falcon --verbose serve
    D, [2018-10-09T10:43:05.345151 #93656] DEBUG -- Async::IO::Socket: Binding to #<Addrinfo: [::1]:9292 TCP (localhost)>
    D, [2018-10-09T10:43:05.345416 #93656] DEBUG -- Async::IO::Socket: Binding to #<Addrinfo: 127.0.0.1:9292 TCP (localhost)>
    D, [2018-10-09T10:43:05.345547 #93656] DEBUG -- <Async::Reactor:0x3fecd17131a0 stopped=false>: Exiting run-loop because finished.
    Traceback (most recent call last):
        9: from /Users/user/Repos/Someapp/.gems/bin/falcon:23:in `<main>'
        8: from /Users/user/Repos/Someapp/.gems/bin/falcon:23:in `load'
        7: from /Users/user/Repos/Someapp/.gems/gems/falcon-0.18.13/bin/falcon:26:in `<top (required)>'
        6: from /Users/user/Repos/Someapp/.gems/gems/falcon-0.18.13/lib/falcon/command.rb:68:in `invoke'
        5: from /Users/user/Repos/Someapp/.gems/gems/falcon-0.18.13/lib/falcon/command/serve.rb:124:in `invoke'
        4: from /Users/user/Repos/Someapp/.gems/gems/falcon-0.18.13/lib/falcon/command/serve.rb:97:in `run'
        3: from /Users/user/Repos/Someapp/.gems/gems/async-1.6.0/lib/async/reactor.rb:56:in `run'
        2: from /Users/user/Repos/Someapp/.gems/gems/async-1.6.0/lib/async/reactor.rb:201:in `close'
        1: from /Users/user/Repos/Someapp/.gems/gems/async-1.6.0/lib/async/reactor.rb:201:in `close'
    /Users/user/Repos/Someapp/.gems/gems/async-1.6.0/lib/async/reactor.rb:201:in `lock': wrong number of arguments (given 4, expected 0) (ArgumentError)

But that application is really old (originally Rails 2 or 3 maybe?), and currently sits at Rails 5.1.4 and Ruby 2.5.0 so it may just be that my application is  crusty and jank.  Unicorn starts the app fine though.

Anyways, I created a fresh Rails app and was able to start with Falcon there.  When loading the first page, it triggers the prompt that lets users pick a client certificate to present in both Firefox and Chrome.  Clicking cancel to just not present a certificate seems to be sufficient.  Not really sure why this is happening - maybe bad browser behavior related to self-signed server certificate over HTTP2?  It then loads the ""Yay! You're on Rails"" page, but fails to load the image for some reason.  Reloading the page makes it appear, and it doesn't fail to load the image again until I quit the browser (which makes it re-prompt for a client certificate, which may mean the two issues are related).

Falcon is cool.  I'm definitely going to play with this a bit to see if I can work out the kinks and make it work in a real app.",1539099727.0
chrisgseaton,"> It's not a matter of operator precedence since I isolated with parens the code in the second test.

You haven't fully isolated it - the problem is the relative precedence between `=` and `or`.

```
isPast = date < Date.today or (date == Date.today and hour <= Time.now.hour)
puts ""isPast"", isPast # => false

isPast = (date < Date.today or (date == Date.today and hour <= Time.now.hour))
puts ""isPast"", isPast # => true
```

See the documentation https://github.com/ruby/ruby/blob/trunk/doc/syntax/precedence.rdoc whenever you aren't sure about precedence.

You probably want to use `||` instead of `or`, and `&&` instead of `and`, for code like this.
",1539017598.0
jamie_ca,"If you‚Äôre talking about an internal tool (not aiming to be available on public internet) with a handful of pages, definitely Sinatra will be lower overhead. You can still use ActiveRecord and whatever else you need, but replacing controller+router with Sinatra is a pretty quick learning curve and shouldn‚Äôt slow you down much.",1539013470.0
janko-m,"Sequel is superior to ActiveRecord in every way (performance, features, PostgreSQL-specific support, documentation), and is much simpler than ActiveRecord, so I would definitely recommend going with Sequel.

> but it has become difficult to make changes due to Sequel complexity

What were you struggling with? Note that if you find models difficult to work with, you can always drop a level lower and work with hashes (FYI ActiveRecord wouldn't allow you to do that).

    Album.where(released: true).all       # returns model instances
    DB[:albums].where(released: true).all # returns hashes

> and totally custom Sinatra architecture.

Yeah, with Sinatra you need to decide where things will go. If you want a more Rails-like experience, I would look into [Pliny](https://github.com/interagent/pliny), which is Heroku's toolkit for building apps (it says ""APIs"", but I don't think would be a problem to use it for full-stack apps).",1539033303.0
obviousoctopus,"I'd test with a barebones rails app and try to measure the memory footprint for a few queries. I would try to stay with Sequel in Rails if possible -- to minimize memory footprint and rewrites.

Chances are your time is more expensive than a beefier device?

If I was hitting complexity with Sequel, I'd connect with Jeremy evans on the sequel google group -- he's very responsive and has seen it all. ORMs are convenient but not worth it for complex queries sometimes -- drop to sql and get results as a hash?

&#x200B;",1539028527.0
bokmann,"The last commit is a couple of years ago, but if you want a dashboard to display this data, check out dashing.  It‚Äôs Sinatra based, and has a bunch of conventions for doing exactly what you want to do

https://github.com/Shopify/dashing",1539049191.0
shevy-ruby,If you already know rails then go with rails.,1539073742.0
442401,"Be aware that gem 'bootsnap' (bundled with Rails 5.2 by default) doesn't play nice with armv71 (RPI).

https://github.com/Shopify/bootsnap/issues/67 ",1539301433.0
Cr0wsb4h0es,"I know this is a ruby subreddit, but have you considered GO?
It has a much smaller footprint, cross compiles really well so you can create a small executable.
And much easier to demonize a small executable in case of power failures or unexpected restarts.",1539060335.0
this_is_not_nil,"Why would I pay money for that? I can easily create an equally sad experience like that with ActionCable.

I also don't believe in PaaS applications that are free forever after you have bought it, https://planga.io/pricing",1539010489.0
three18ti,"Your site is kind of a mess...

From the docs page:

    The most important thing to remember, is that we've tried to combine the following three features:

     * Simplicity
     * Scalability
     * Security

Those are some good buzz words... but how?  What makes your app secure?

I was going to give more constructive feed back about your service, but after reading this, I just can't take you seriously and there's no way I believe your app is ""secure""...

> For many commong languages and programming environments

Really?  You misspelled ""common""

> Furthermore, the following integrations are being worked on, and will be released soon:

>  that the visitor's browser

> How this encryption works exactly is not important to use Planga: Properly encrypting your configuration and building an HTML/JS snippet from it is what the language integration libraries do for you.

> Planga chat screen: The details to be sent in the

>  (which contains some enbedded JS)

>  window to your liking: Feel free to show/hide

You should really hire a copy writer.  You apparently don't know how to use the colon, apostrophes, or spell check.


> Super-simple integration

How is configuration ""above"" simple?

> Setting up basic chatting will only take a couple of minutes, at most!

With how hard you're selling its ""simplicity"" this makes me think it's not so simple...

> Lovely Documentation
> We take clear documentation very seriously.

Objectively this is not the case...

> We're there for you: The

Seriously with the colons... 

> How planga looks is completely customizable by writing your own CSS, so Planga's chat interface will look completely part of your application.

So I can do web design?...  This isn't a feature of your application.

> Furthermore, who and how talks with one-another

This sentence makes no sense.

Also, this really doesn't have anything to do with Ruby, the linked article is just an Ad.",1539015521.0
toadkicker,"I started my API excited about Active Storage. There were several things I ended up not liking about it:

-	Assumes you are not using API mode
-	Provides no way to perform direct uploads without using rendered templates. You can‚Äôt request an upload token without a ton of hacks. 
-	It is tightly coupled into the asset pipeline
-	requires using a dsl in views, controllers, and models

In turn I went with Shrine. It is way more flexible and performant than Active Storage. It doesn‚Äôt require additional tables, it doesn‚Äôt care about your views, and you don‚Äôt have to do anything special in controllers to use it.

I wrote a similar article but focused on Shrine.
https://itnext.io/happy-users-uploading-files-with-rails-5-shrine-and-vue-js-bbcc470a327f?source=linkShare-f8354741d7e6-1539001033

TLDR; Tried ActiveStorage and rolled it back out in favor of Shrine.",1539001202.0
chicagofan98,"Until you can specify a folder and organize the uploads, ActiveStorage is completely useless to me. I don't want a giant group of uploads sitting unorganized in an s3 bucket.

[GitHub Issue](https://github.com/rails/rails/issues/32790)",1539009129.0
petepete,"I created a project recently and opted for ActiveStorage. I've been impressed with it so far, easy to set up and it's worked just fine since (with Digital Ocean Spaces). I'm glad not to rely on extra requirements and a more complex setup.

If I could work out how to make it play nicely with DO's new CDN, even better.",1539070523.0
obviousoctopus,Thank you for the excellent write up. Also loved the pundit one. ,1539021840.0
editor_of_the_beast,Love the Python thumbnail.,1539008469.0
tomthecool,"This sounds like an [XY problem](https://meta.stackexchange.com/q/66377/369864) to me.

There isn't really a shorter way to write that, but you *shouldn't need to write that in the first place* -- this code looks like you're passing badly defined objects around, which don't define a clear interface.

Can you provide more context as to why this code is needed?",1538996074.0
Schrockwell,"While this is possible using some of the techniques listed, it‚Äôs generally a big stinky code smell. Now I don‚Äôt know the context for this particular use case, but generally you should have some idea about what an object IS or DOES before you try calling methods willy-nilly on it. At the very least, the object should implement the method but have a ‚Äúno-op‚Äù implementation, either in itself or in a parent class/module.",1538994904.0
sshaw_,The smartest way is to be explicit: `obj.respond_to?(x) && obj.x`,1538996472.0
headshota,obj.try(:x),1538993501.0
ezekg,"That is the smartest and most explicit way, though it's formatted oddly (more JavaScript looking than Ruby).

I'd format it like this:

    obj.x if obj.respond_to? :x

But an alternative? Maybe `rescue` but it's dirty since you swallow errs:

    obj.x rescue nil",1539010040.0
tehdiplomat,"A coworker of mine started using http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/ recently, but I'm not a fan of the syntax

Edit: ignore me.. shouldn't be posting first thing in the morning",1538998233.0
,[deleted],1539021823.0
in0pinatus,"There's a lot awry in this article here, and I'd advise anyone reading to take it with a huge grain of salt.

> In the absence of lightweight, named data structures to pass to our functions

Ruby has named parameters. It calls them [keyword arguments](https://robots.thoughtbot.com/ruby-2-keyword-arguments). They are not hashes, but they are congruent to hashes via destructuring and the splat operator.

> Now, I said lightweight types because I want to exclude classes like we get in Ruby, Python, Java, etc. They are not lightweight, either to create or to chug along. An empty Ruby class is already bogged down by about 60 methods and attributes

This kind of statement is what leads people to write non-OO code (by which I mean, terrible Ruby). Extracting value types is _good_ Ruby style. Refusing to do so for some specious premature optimisation seems like cutting off your nose.

> Initialize empty, build later

Although it's not actually a completely terrible creational pattern for some circumstances, it's inconsistent to speak glowingly of functional languages and then demonstrate chained methods that explicitly mutate the receiver, or to reject value types for not being ""lightweight"" and then burn through memory on multiple intermediate representations of the recipient.

Aside from boning up on Ruby syntax and good OO design, the author would probably have their thinking most significantly clarified by Jim Weirich's classic talk [The Grand Unified Theory of Software Design](https://www.youtube.com/watch?v=NLT7Qcn_PmI), particularly its discussion of connascence.
",1538945403.0
Mohkale77,"Hear elucidation... think elucidator, man I wish SAO was real (‚úø‚ó†‚Äø‚ó†) ",1538860418.0
PracticalData,That article is unreadable: the author barely knows English.,1538855391.0
metalhe4der,This reminds me of crappy low effort articles from those ezine or squidoo pages from 2006. ,1538864302.0
ecstasyx,#seo,1538878727.0
keyslemur,"As it seems they've deleted their last account and reposted it, here was the original reply I'd written:

This article is a bit rambly, and doesn't really get to why Rails is used.

Let's break down some of the points:

>Nowadays ROR is most trending and most popular development tools in the market

Not really. It's popular, sure, but I would not qualify it as the most popular. PHP likely still has that title. That said, popularity is a mostly irrelevant metric, I would care far more about stability and maturity.

>Mostly use of ROR to make Chat application

It's actually really bad for that, even with ActionCable. That's mostly due to how Ruby handles asynchronous code, GIL, and general parallelism.

>If you are asking most IT professionals what you should use for develop your app chances are the answer will be ROR

You're much more likely to get an answer of ""It depends"" than anything.

1. **Less Coding is benefits of it**

>Ruby on rails is about writing less code that does more.Representational State Transfer (REST) is biggest advantage and compare to other language, it is too good.

REST is a generic standard that's not specific to Rails.

>Some ROR principal like CRUD (Create, Read, Update, Delete), KISAP (keep it simple as possible), and COC (convention over configuration)

These are not exclusive to Rails either. There's an advantage to using them, sure, but you want to highlight that rather than just using the buzzwords.

2. **It can reduce your time of coding**

>One other reason is ruby on rails is really simple to use and very less time consuming takes for a developer to create a solution using the language

A consistent theme in this article is you're failing to elaborate exactly why or how it achieves this.

3. **It's used in biggest websites**

>You know biggest advantage of ruby on rails is code of ror interpreted without need any compilation

It's an advantage but also potentially a crippling weakness. Interpreted languages are around an order of magnitude slower in terms of execution speed. What that affords you though is flexibility and speed of coding.

4. **Rails is based on Agile Development Principles**

>Same method you can use in ruby on rails because it‚Äôs based on agile development

Agile is a generic term, not a Rails one, and also inaccurate. Rails does not actively encourage agile, but you could use agile methodologies to develop in it.

5. **Really Easy to¬†test**

Also not unique, and other languages all have automated testing systems.

6. **Very large number of free help¬†desk.**

Other languages have this as well, but simply calling them help desks can be taken as offensive as it demeans those in the community who dedicate a lot of time to helping new people.

7. **Main thing it is free**

So are a lot of other languages and frameworks. .NET is about one of the only major exceptions.

&#x200B;

\------

&#x200B;

The short version of this comment is focus on what makes Rails unique and give qualified examples of it. Without that it just seems like hand-waving and jargon.

&#x200B;",1538884906.0
bassneck,It's possible that you need to (re)install xcode command line tools: `xcode-select --install`,1538956638.0
JoshtheFireStarter,I've been getting the same error and haven't found a solution yet.,1542114467.0
Lars34,"Did you manage to fix this? I'm getting it on every command, and I'm starting to get sick of it",1544108615.0
GeneReddit123,"Your form workflow is normal, with the caveat that 401 is not a redirect, and thus your /sessions/create page should be using `render` rather than `redirect`, where you can use flash to display an error message (or an appropriate JSON response if you return JSON).

HTTP basic is simpler to set up, but doesn't give you the flexibility of form-based authentication, which can include things like password recovery links, two-factor authentication, CAPTCHA protection, etc. An additional concern is that the HTTP basic browser dialog is an eyesore, and whether deserved or not, creates the impression of a quick hack rather than a professional web app.

In general, we use HTTP basic only for inter-service authentication between microservices, and even then as a second-layer defence, in addition to OAuth/JWT tokens and/or network-level security.

Of course, it goes without saying that your form needs to be using SSL (nowadays, the advice is becoming as obsolete as the ""no smoking"" sign in airplane lavatories, because the entire plane is non-smoking, and your entire website should be using SSL.)",1538786760.0
tom_dalling,"Most of the time, when you want to spawn a process, a shell is unnecessary. So I would say that you're right‚Äîmost of the time we should be passing ARGV, which doesn't need escaping.

Occasionally, you do want a shell. For example, I have implemented something like this:

    bmcapture --lots --of --args | ffmpeg --lots --of --args

For which you'd have code like:

    bmcapture = Shellwords.join(['bmcapture'] + capture_args)
    ffmpeg = Shellwords.join(['ffmpeg'] + transcoding_args)
    system(""#{bmcapture} | #{ffmpeg}"")

The shell process makes the pipes, spawns the subprocesses, and can send signals (like SIGTERM) to the subprocesses too.",1538786032.0
ioquatix,The only place where I found a use for it was passing a command to `rsync -e` and sometimes if you need to write a command with arguments into `ENV`.,1538817668.0
shevy-ruby,"I have been wondering the same.

I never needed it so far. I always refer to ARGV.",1538814523.0
ioquatix,"Oh it‚Äôs more like if you need to inject commands with arguments into ENV, e.g. CC",1538856297.0
keyslemur,"This article is a bit rambly, and doesn't really get to why Rails is used.

Let's break down some of the points:

>Nowadays ROR is most trending and most popular development tools in the market

Not really. It's popular, sure, but I would not qualify it as the most popular. PHP likely still has that title. That said, popularity is a mostly irrelevant metric, I would care far more about stability and maturity.

>Mostly use of ROR to make Chat application

It's actually really bad for that, even with ActionCable. That's mostly due to how Ruby handles asynchronous code, GIL, and general parallelism.

>If you are asking most IT professionals what you should use for develop your app chances are the answer will be ROR

You're much more likely to get an answer of ""It depends"" than anything.

1. **Less Coding is benefits of it**

>Ruby on rails is about writing less code that does more.Representational State Transfer (REST) is biggest advantage and compare to other language, it is too good.

REST is a generic standard that's not specific to Rails.

>Some ROR principal like CRUD (Create, Read, Update, Delete), KISAP (keep it simple as possible), and COC (convention over configuration)

These are not exclusive to Rails either. There's an advantage to using them, sure, but you want to highlight that rather than just using the buzzwords.

2. **It can reduce your time of coding**

>One other reason is ruby on rails is really simple to use and very less time consuming takes for a developer to create a solution using the language

A consistent theme in this article is you're failing to elaborate exactly why or how it achieves this.

3. **It's used in biggest websites**

>You know biggest advantage of ruby on rails is code of ror interpreted without need any compilation

It's an advantage but also potentially a crippling weakness. Interpreted languages are around an order of magnitude slower in terms of execution speed. What that affords you though is flexibility and speed of coding.

4. **Rails is based on Agile Development Principles**

>Same method you can use in ruby on rails because it‚Äôs based on agile development

Agile is a generic term, not a Rails one, and also inaccurate. Rails does not actively encourage agile, but you could use agile methodologies to develop in it.

5. **Really Easy to¬†test**

Also not unique, and other languages all have automated testing systems.

6. **Very large number of free help¬†desk.**

Other languages have this as well, but simply calling them help desks can be taken as offensive as it demeans those in the community who dedicate a lot of time to helping new people.

7. **Main thing it is free**

So are a lot of other languages and frameworks. .NET is about one of the only major exceptions.

&#x200B;

\------

&#x200B;

The short version of this comment is focus on what makes Rails unique and give qualified examples of it. Without that it just seems like hand-waving and jargon.

&#x200B;",1538785935.0
GroceryBagHead,Direct link: https://www.sandimetz.com/blog/2017/9/13/breaking-up-the-behemoth,1538782110.0
cmd-t,"File loading is here: [https://github.com/tmm1/emoji-extractor/blob/5d7add70893ed35be1bad198be78119d97067a16/emoji\_extractor.rb#L49](https://github.com/tmm1/emoji-extractor/blob/5d7add70893ed35be1bad198be78119d97067a16/emoji_extractor.rb#L49)

When you call a ruby script from a shell, you can access the arguments you pass to that script using `ARGV`. You could change line 50 to something like

    @ttf = File.new(ARGV.shift,""rb"")

and it would open the file you specified as an argument from the shell.",1538751609.0
keyslemur,"Another dive through a crazy experiment which ended up with something fun. Hope you all enjoy!

&#x200B;

(Oi, why the article right after the preview!? Well, plans tonight got postponed so I just finished the article right quick)",1538711626.0
zverok_kha,Niiice. Wicked yet nice,1538717920.0
mach_kernel,"Unrelated, but `method()` is very powerful. I've often used it in map-reduce style jobs where I have to apply a bunch of transformations to a collection, define a method to do the mapping (or several), then have a few `collection.map(&method(:some_map_func))`. Super useful.",1538749834.0
three18ti,"Somebody got some JavaScript on my Ruby!

Seriously though, this is pretty cool.  One of the things I really love (and sometimes get myself into trouble with) about Ruby is the meta-programming.  I come from a Perl background and having access to the symbol table is something I seriously miss in other languages.",1538753035.0
idi0tf0wl,"Very interesting. On a facile note, what code editor is that?",1538761283.0
keyslemur,This is a short version of an article I'm writing up on later for jollies about destructuring. ,1538703883.0
doncuomo,I might be a bit of a dick here but this seems more like an ad than a legit tutorial. All you are doing is hooking your App up to an API. There is barely any Ruby involved in anything you have to do yourself.,1538722393.0
Vodka_Vodka,Too much features,1538685535.0
elr0nd_hubbard,I've ripped the head off of enough Rails CMS to be a little lukewarm about this idea,1538699616.0
joltting,"Great, rip the feature that I despise the most in base camp... 

I have to agree this doesn't seem like it belongs in the Rails core directive. This seems like a cool gem and all for those that need it. So it'd make much more sense to keep it external.",1538866921.0
GroceryBagHead,I think it'a a nice thing to have. ,1538958333.0
kwhittington,"We use Dry Schemas at work, not for everything, they‚Äôre super quick. I‚Äôve enjoyed using it. ",1538674795.0
dprvig,Corrected link: https://weblog.rubyonrails.org/2018/10/3/introducing-action-text-for-rails-6/,1538660881.0
deedubaya,"I want to voice that I'm on the Rails5 + Turbolinks (w/Turbolinks-iOS & Trubolinks-Android for mobile) + Stimulus.js + Trix.js train right now with multiple apps. It's fucking great. The less effort I need to set this up in the future, or maintain, is a huge win for me.

I realize that combo isn't for every app, but when it is for your app, the magic just works with minimal work. The equivalent work required without this ecosystem would have easily taken 10x the time for me.

Rails is an ecosystem for quick starts and batteries included productivity without the gatekeeping. I bet it's because of that ethos that how many of us got into ruby programming.  If that isn't your thing (ever or anymore), no problem, but don't hate on DHH for keeping rails on the track he laid (pun intended?).",1538666275.0
scytherswings,"I guess I'm in the minority here when I say that I'm very excited for this change. A year ago I was tasked with making a comment system and I failed to find any lightweight simple gems to add that functionality within the limits imposed by the existing setup. 

Now I'm not saying there are no good comment system gems for Rails, I just didn't find any that worked for me. If you have suggestions I'm all ears.

Overall this change means I'll be able to add file attachment to my comments using activestorage and I will get all of that glue code taken care of for me as well as better JavaScript and all that junk sorted out  Maybe it doesn't belong in Rails core, I don't really know. But my initial impression was excitement.",1538658703.0
honeyryderchuck,`rails new --without-sprockets --without-action-cable --without-action-text --without-turbolinks --without-opinions microservice-poc`,1538641612.0
hehestreamskarma,"On one hand, I get it. DHH is proud of the WYSIWYG framework they made.

On the other, I don't understand what this has to do with Rails core.

",1538622399.0
kobaltzz,"I understand a lot of people's hesitation with this change and I definitely think that it is valid. However, keep in mind that many WYSIWYG editors are prone to XSS and this can be very troublesome for your app. 

I do feel bad for new developers coming in to learn Ruby on Rails in 2018/19. 

Back in 1.X & 2.X, there weren't too many moving parts. You could jump in and start programming right away. 

3.X introduced a lot of different approaches which many you relearn a lot of things, but this was adaptable. They did UJS, changed the query interface, etc.

4.X introduced ActiveJobs, secrets, Spring, Turbolinks, etc. 

5.X introduced ActionCable, Rails API, Yarn, Credentials, ActiveStorage, etc.

In each of these steps, we have had the luxury to slowly adopt and learn the new enhancements. However, as someone just starting out, it would be completely overwhelming. ",1538626180.0
fiveguy,Funny - Basecamp's rich text editor is my least favorite feature of Basecamp. Editing formatted content breaks 90% of the time I use it.  I really hope it's improved on its way into Rails.,1538620600.0
sshaw_,When is CoffeeScript support being dropped..?,1538684078.0
hardwaregeek,"Meh, I get that Rails is trying to stay relevant on the front end, but trying to inject webpacker and now Action Text into front end development just feels like a bad idea. Leave front end alone and let Rails handle the back end. ",1538620862.0
mellett68,I'll reserve judgement until I've tried it.,1538643649.0
atipugin,Hope DHH someday will stop sharing his private Basecamp-specific libs with us.,1538650182.0
Gnascher,"The classic first exercise is to build a blog.

Another useful exercise would be to build a simple product catalog and shopping cart.

Then, anything that requires login and separation of user data, etc...

These kinds of projects should expose you to some ""real world"" programming problems.",1538610932.0
OtavioHenrique,"I like the idea of code data structures like binary tree, double linked list, and etc.. Other good project is to build frequently asked interview questions like Mars Rovers, CLI or maybe a crawler.",1538614878.0
phaul21,"codewars.com. Ruby section. you can select exercises from tiny code snippets, to more involved tasks that would probably take a day or few days to crack",1538665945.0
uptimefordays,"I suppose it depends on your end goal. I'm a sysadmin who uses Ruby for automation so I started with text processing scripts, webserver log analyzer is a great starting script!",1538748948.0
shevy-ruby,"The Chris Pine was very nice. It's a bit outdated but still a good intro.

Don't know about the Ruby Cookbook ...

Anyway, the most important thing is to start writing ruby code, no matter how ""bad"" it is. I also recommend you to structure it like a gem very early on - perhaps not for the first small projects, but the sooner, the better. And publish it too, even if you think nobody will use it - you will learn a lot that way.

To your question as for projects ... I think that depends on your own interests. Just pick anything that interests you or some problem that you face. This is usually the best motivation. You can learn as you go, e. g. all the tasks that may be important can come here:

- creating files, deleting them, populating them with content
- open a remote website, read its content via open-uri, apply regexes to extract important data

And so on and so forth.

If you still can not pick a project (and it really does not matter that much), pick something that you may have a problem or an interest right now - this can be a hobby too, sports, movies, audio and video conversion and so on.

I can assure you that once you get into the habit of writing code, a todo-list fills almost ""automatically"".

I even wrote a small project for ""magic the gathering"" mostly because I wanted to sell some old cards (while I still play, my heydays here are over) and wanted to see where I could make the most profit margin, to some extent etc...

",1538767149.0
how_do_i_land,"Most of these are common sense though I am surprised they didn't include Kickstarter's `Rack::Attack` for rate limiting brute force attempts at the application/cluster level and something like Cloudflare's Rate Limiting to limit rate limits across geolocation zones.

Another I would add is to never roll your own password hashing/storage but to use BCrypt in `Devise` and `ActiveModel::SecurePassword` and make sure it does constant time comparisons of the stored password hash. 

[Also their recommendation to add a password complexity field I feel is flawed](https://diogomonica.com/2014/10/11/password-security-why-the-horse-battery-staple-is-not-correct/), especially when it has no mention or recommendation to use a password manager to generate and securely store the secure, generated and random password.",1538601344.0
honeyryderchuck,"If you're into security for authentication, you should consider using Rodauth http://rodauth.jeremyevans.net/why.html , which goes up an extra-level and allows you to secure your database authentication data and ships with a lot of security-oriented plugins, like a built-in TOTP plugin. ",1538647146.0
MrStickmanPro1,"Unless your app doesn‚Äôt allow users to sign up, number 3 is pretty much impossible to mitigate.

At least in the signup form you need **some** sort of validation, which, of course, should provide checks for duplicate email addresses.

**Edit:**
Actually you can mitigate this: provide only a field for the email address on sign up and send a link for the further signup process to that address. If a user already exists for that address, simply send them an email telling them so.",1538607872.0
jrochkind,"> Anybody who would gain an access to the session cookie can easily extend the timestamp by modifying the cookie.

Isn't this stored in a rails cookie which is cryptographically signed as well as encrypted? Is there some reason I'm unaware of that one should worry about client-side tampering despite this? If so, it would be good to mention it. Otherwise just leaves me wondering if the author knows what's what. ",1538625028.0
ezekg,"A max length of 70 chars on passwords? That is a terrible idea and portrays to the end-user that you're not hashing the password. A password that is 500 chars will result in a hash of the same length as a 3 char password, so there's absolutely no reason to put such a low upper limit on password length.",1538680201.0
andyw8,"3000 lines of code, but not a single test? That would make me a little wary of adopting this.",1538598351.0
jaryl,"Not ruby but check out Gatsby.js, works pretty well with GitHub Pages too. ",1538646820.0
netmute,"I have done something like this years ago.  
The repo is still on Github: https://github.com/netmute/little_rpg  
Please bear in mind that the code is 7 years old and quite terrible.",1538576817.0
BadMinotaur,"You may want to look into some techniques and libraries that roguelikes use. Even if you‚Äôre not making a roguelike per se, they still are mostly text-based RPG-esque adventures. ",1538577061.0
djh3315,I'm the developer of r/https://talibri.com. Feel free to send me any questions you may have! Obviously mine is a web based game but its been really fun to build! Best of luck!,1538580815.0
three18ti,"Zork! See also: http://www.mudconnect.com/

I will say, writing games is hard. Even text based ones. While I wouldn't recommend writing a game for someone with no game-writing experience as a first project in a new language (any new language, not just Ruby) because then you're trying to learn two new things (wow that sentence is a mouthful), that's not to say it can't be done.  What I would suggest is doing some reading on how to make games, and come up with a plan, (it doesnt have to be 100% fleshed out but the more complete picture you have the more headaches you'll save yourself) before ever writing a line of code! (I also recommend writing tests before writing functions... but that's just the TDDer in me).

Good luck!",1538577636.0
fantasticoranges,"Build a game in Ruby that's already been done, for example start really simple, Tic tac toe, then minesweeper, then chess.

That way you can breakdown building a game out from designing a game, and you'll be super prepared for your text rpg version",1538599036.0
gaffneyc,"You can‚Äôt pass the headers as part of the initializer for the request. You can find the API for managing headers here: https://ruby-doc.org/stdlib-2.4.1/libdoc/net/http/rdoc/Net/HTTPHeader.html

For an example API client that sets a custom User-Agent, take a look at the Snitcher gem (https://github.com/deadmanssnitch/snitcher/blob/84bd2c0e10b1ea6c53e110ddd5eed703d485c671/lib/snitcher/api/client.rb)",1538563738.0
hoppedupbrewer,"[curl-to-ruby](https://jhawthorn.github.io/curl-to-ruby) is a big help when working with the Net::HTTP module.

    require 'net/http'
    require 'uri'
    
    uri = URI.parse(""http://www.google.com/"")
    request = Net::HTTP::Get.new(uri)
    request[""User-Agent""] = ""Mozilla/5.0""
    
    response = Net::HTTP.start(uri.hostname, uri.port) do |http|
      http.request(request)
    end",1538595089.0
jamie_ca,"Also consider the http gem, it‚Äôs really user friendly.

https://github.com/httprb/http/wiki/Headers",1538605256.0
firstpantsthenshoes,Nice work! To be honest I didn‚Äôt know the ‚Äúcorrect‚Äù way either lol Will start using tomorrow,1538535196.0
SlainTownsman,"I really like the API.

Thank you for the good work and congratulations on releasing it. ",1538559769.0
mperham,"Really nice API, zero dependencies would make it perfect.",1538597511.0
rabidferret,"Rust's `std::time::{Instant, Duration}` in Ruby? Love it!",1538600694.0
Freeky,"0.4.0 pushed with more maths, more tests, more docs, and convenience methods for sleeping.",1539040018.0
Dudesivoro,Good article : thumbsup,1538539300.0
kmaicher,I would just mension that `#squish` is not Ruby - it's Rails.,1538569244.0
tolas,"Algorithmic Complexity - Try to parse through it. Understand what inputs it takes in and what outputs it produces.  Try to understand the goal of the algorithm. Look up any operations you don't understand. Ask for help.  Try to write a simplified version of the algorithm. Most of the complexity could be from edge case handling and things like that.  Check any tests if there are any.

Structural Complexity - The key here is isolation. In a rails app, just try to follow a request through from controller to page to partials to javascript and css.  In a ruby script/app just try to follow the process. See what does what. Everything has a flow of sorts. Follow that flow.  Figure out where the ""jumping around"" occurs and you'll start to get a sense of the structure and how it was built.",1538488552.0
jrochkind,"Are you familiar with how to use a debugger like byebug?

I usually pick some particular path through the code (like, ""what happens when you do X""), and then follow it all the way through with a debugger.  Taking notes on what the code is doing (sometimes drawing boxes and lines of the different parts that call each other), as well as another set of notes on additional questions that I have.  Then the additional questions I take one at a time (not necessarily all of them), and try to answer them each with the debugging technique too. 

If there are docs, I have the docs there too, and look back and forth at them to see how they correspond to what I'm observing. It's a very ""scientific"" process of observation. Some of the ""questions"" can be ""hypotheses"" I'm testing too. You are building a mental model of the code, and then testing it against the code to see if it's accurate. 

It can be useful to make a 'test case' using rspec, that I can run over and over again so I know the same thing is happening each time, in case I get lost in the debugger and want to start over (which always happens), or run the same thing putting the debugger interupt(s) in different places (also always happens).  

Note, I'm NOT talking about ""following all the way through the code"" just by reading it, but by actually running it and interupting it with a debugger, stepping through parts of it or just looking at state or _if_ a certain part of it is reached at all, for a given 'test case'. 

I am currently in the middle of doing this with ActiveStorage, because i want to know more about some of it's implementation details. ",1538493899.0
i_dont_like_reddit_6,"So, first try to determine if the code is ""too complex"" or ""poorly architected."" That's a subtle distinction, and it requires some self confidence (which is not evenly distributed in our field) and a bit of judgement. If code is complex, but well architected, you should be able to understand it building block by building block. First, start high level and try to understand conceptually what the program does, how data flows into it, what it does with that data, how it interacts with the user, and how it produces outputs. Then, once you have a rough conceptual model of how the app works zoom in on a class by class basis and try and understand what the parts do. Over time you'll see how things fit together and that, combined with your high level model, should allow you to start to understand. From there playing with some classes in an interactive debugger can really help.

However, if the code isn't so much complex as it is poorly architected, well, you're going to have to wing it. If there are well architected parts try and understand those first. Then when you have that chunk in your head try and understand what interfaces with it. However, in the worse case, if it is a complete mess all you can really do is do your best to understand it as required on a case by case basis, and then try to make sure that when you have to work with the code you always try to leave it a little better than you found it.

Good luck!",1538503997.0
valadil,"Git history. Knowing the context in which something was written helps understand the choices that were made. Alternatively, seeing that a simple thing grew complex over time tells you that what you‚Äôre looking at wasn‚Äôt designed to be a cohesive whole. ",1538524245.0
LuneBlu,"Break it down, and understand the parts. Divide and conquer.",1538500202.0
hardwaregeek,"Take notes. There‚Äôs only so much you can keep in your head. Org mode with hyperlinks is a great combo

Try to break the code into abstractions. You can either do this top down or bottom up. This means either start at an entry point and trace the code downwards, or start with a function with no children and go upwards.

Use tools. IDEs if you can. I use ripgrep and fd but grep and find are great too. 

Print statements can work, but they do come with mental overhead.",1538521719.0
iconoclaus,Sandi Metz does a fantastic job talking about to unroll complex code through refactoring steps: https://m.youtube.com/watch?v=8bZh5LMaSmE,1538569401.0
swerveone,You sit there and read it for longer periods of time. ,1538853485.0
hardwaregeek,"I decided to do some research, cause I've devoted a lot of time to figuring out Ripper and I'd be pretty annoyed to find out that it's being replaced. [Turns out this is a feature purely for internal MRI development](https://bugs.ruby-lang.org/issues/14844). There's no promise of compatibility or maintenance. Basically, don't use this if you want your tool to work in the long haul.",1538489248.0
virtually_bindok,"Nice writeup OP. Look forward to playing with this.

> parse¬†method takes file name

Looks like you meant parse_file here.
",1538502325.0
TechnoEchoes,AST is one of the coolest features of Elixir. I'm very happy to see it finally come to Ruby. ,1538523896.0
Mancinoz,"Blog posts like this damage the community, please stop.",1538536008.0
InCaseOfEmergency,I don't think I've ever seen `for` used in real Ruby code.,1538440799.0
tadrinth,"N.times is much more idiomatic. Use of for loops is generally discouraged in ruby. If you're iterating over an array, the each method is most idiomatic.

Edit to add:

There's also upto:

    1.upto(10) do |n|
      puts n
    end

Edited again to add: You can also use ranges to iterate over parts of an array:  


    arr = [1,2,3,4,5,6]
    arr[2..4].each{|n| puts n}

&#x200B;",1538439814.0
hmaddocks,Don't ask Zed.,1538448876.0
shevy-ruby,"n_times would be more idiomatic.

However had, there are times when a for loop is useful. Matrices and initializing them for example.",1538465877.0
TextileWasp,"for is almost never used in ruby. 
n.times is also pretty rare, buy does show up sometimes.",1538444967.0
realntl,"If your code is good, it won't matter which you pick, I promise people will be able to read it all the same.",1538491282.0
jjyr,"`loop`, `break`, `while` are used to instead `for` in ruby, I thought the reason to use those keywords is it can read like English sentences, like:

```
while i > 10
end

# while i greater than 10, do something...

loop do
  break if i > 4
  i+=1
end

# break if i greater than 4
```
",1538445714.0
RagnorThormass,"I'm a complete novice but I believe it's for repeating sections of code. i.e. 3.times(puts""Hi"")
Would print ""Hi"" 3 times. Hope this helps ",1538464073.0
realntl,This seems like extremely valuable functionality. I wonder if the underlying implementation can be abstracted away from RSpec so that it could be used in other test frameworks (or even contexts that don't involve an automated test framework altogether).,1538489986.0
isjhe,Broken link ,1538486179.0
codeprimate,"[RbNaCl::Random](https://download.libsodium.org/doc/generating_random_data)  uses /dev/urandom 

[SecureRandom](https://ruby-doc.org/stdlib-2.3.0/libdoc/securerandom/rdoc/SecureRandom.html) uses /dev/urandom

I would recommend Ruby's SecureRandom to avoid an additional dependency.",1538440846.0
garuspl,What is your use case? ,1538429994.0
HardLuckLabs,"Yes. RbNaCL is a fantastic package for crypto primitives, and the authors of this gem know what they're doing. The real question is how random is the entropy on the host machine. An inexpensive USB hardware RNG can be had for \~ 50 euro. If you don't have one of those (and a secure way to ensure that it's being used, like an internal USB port), I'd recommend installing rng-tools to increase the host's entropy.  

edit: if you're running in a VM environment, you should read this thread: [https://security.stackexchange.com/questions/34523/is-it-appropriate-to-use-haveged-as-a-source-of-entropy-on-virtual-machines](https://security.stackexchange.com/questions/34523/is-it-appropriate-to-use-haveged-as-a-source-of-entropy-on-virtual-machines)  


Finally I would second the advice above to scrypt. ",1538736344.0
iisno1uno,Any good?,1538429678.0
sshaw_,"I don't know about `yard`, but with RDoc you can try:

    gem install --rdoc -i install-directory  --ignore-dependencies gem-source-directory/*.gem
    gem server --norc --dir install-directory

I added `--rdoc` and `--norc` to be explicit and ignore other environment based settings but by default they should not be required. 

The `--dir` options appends `install-directory` to the path that gems are found (`GEM_PATH`) so, if you have other libs installed, their docs will be displayed. There may be a way around this, but `GEM_PATH= gem server ...` is not it. 



",1538469013.0
geraldbauer,"Hello, I've written a new (and third) episode on why the CSV standard library is broken (and how to fix it). Let's have a look at [how to handle csv records - How about returning an array? hash? struct? row? etc.](https://github.com/csv11/docs/blob/master/csv-array-hash-struct.md)  Or how about adding new ""low-level"" parsers for supporting more dialects and formats or for faster code with c-extensions? 

Questions and comments welcome. Cheers. Prost. 

**PS: If you want to see other (more) CSV formats / dialects pre-configured and supported ""out-of-the-box"" in the new (alternative) csv reader, please tell.** 

PPS: Why care about CSV? Did you know - data is the new gold :-) and CSV is the world's most popular (No. 1) data format.",1538405130.0
lucisferre,"Just want to say, as someone who was aware the standard parser (and most alternative parsers) was broken for a while, thanks for tackling this.",1538419742.0
honeyryderchuck,"""Ruby is slow. Here's a random benchmark I just found in google. Lower is better. Above is below.""",1538416323.0
jrochkind,"Interesting topic, no useful content. 

For instance, okay, how does one set up ""master-master replication"" with postgres in Rails? I literally don't know, I have a lot of experience in some areas, but I've never needed to do database replication. This article doesn't tell me, or link me to resources, doesn't even leave me confident it's possible, or even that ""master-master replication in postgres"" is even the right term.  (Initial googling suggests ""master-master replication in postgres"" is not, in fact, a thing). ",1538421726.0
BluePizzaPill,"I use this currently for methods were I want to guarantee type safety:

http://egonschiele.github.io/contracts.ruby/

It also allows to overload methods with different parameter types, the correct method will be called for the arguments.",1538353758.0
jrochkind,very interesting!,1538355413.0
,[deleted],1538380565.0
heyitsjav,"So I'm just wondering... this looks really interesting in their case, since they have a huge codebase.
But for anyone else, when starting a new project, if they want to have everything typed, as they state on one of those slides, why won't they just switch to Java, for instance?",1538386529.0
sjakobi,Background: https://hacktoberfest.digitalocean.com/,1538333934.0
rooood,"This is a nice article that is almost generic to all web development, not only Ruby. Could easily be adapted and posted to other audiences. Solid tips as well",1538338173.0
realntl,"In my experience, it's also valuable to distinguish between ""principal"" and ""agent."" The agent is the user currently logged in, and the principal is the person or party that the user currently logged in is acting on behalf of. Whenever actions are taken by the user, both the principal and agent ought to be recorded.

Separating principals from agents in this manner meets the criteria of enabling your support staff to take action on behalf of users, but because it's generic it can also go much further than that. Imagine an HR system for allowing managers to review and approve employee's vacation requests. Now imagine that a manager wants to go on vacation for a few weeks, and wants to ""deputize"" a peer as the one who reviews those requests during the vacation. This isn't some elaborate future proofing abstraction that ends up being overkill, it's just designing a user role model that better reflects real world use cases.

If you combine the separation of principals and agents with _also_ separating roles from users, your authorization model is now rich enough to handle a _ton_ of real world use cases, without needing to be hacked in with conditional glue. Now, I don't hold any of this as an absolute, because there are contexts where such a rich (read: more complex) system is just plain overkill. But I recommend everyone understand how they might implement it, so that the decision is based on equal confidence in both approaches (versus automatically picking the one that's already familiar).

(I should also note that none of this that I've just typed is new; it's pretty ancient actually. If you are implementing role based authorization, or user impersonation, it's worth studying the existing materials out there that a quick google search will turn up)",1538413828.0
ecstasyx,"    ""#{common_name || first_name} #{last_name}""",1538299248.0
twinklehood,"Guard clauses (example 3) is by far the most readable to me. The last few companies i worked in heavily preferred this style. It makes branches of execution a lot more obvious, and prevent you from doing some of the most bug-inducing things, like conditional re-assignment. 

On a side-note, stick with the string interpolations either way.

    def short_name
      return ""#{common_name} #{last_name}"" if common_name.present?
      ""#{first_name} #{last_name}""
    end",1538299383.0
joemi,"I think the third example is the best form too, and second that you should use string interpolation. But I wanted to mention that I think you forgot the 'end' for your if-else clause in the first example.  :)",1538319883.0
spinlock,"I prefer one method with early ejection (i.e. the third option you originally posted). It's easier for the next person to understand who comes along to maintain the code.

Advi whatshisname had a great lecture on structuring functions. Basically, you want to validate your data as soon as possible (i.e. eject early if you have a condition to do so) and then get to the heart of the function once you have ""good"" data to work with.",1538336647.0
moneroallin,"I would even refactor the second option, and leave it like:

```
def short_name
  first_or_common_name + ' ' + last_name
end

def first_or_common_name
  common_name.present? ? common_name : first_name
end
```

or 
```
def short_name
 ""#{first_or_common_name} #{last_name}""
end
```",1538299611.0
shevy-ruby,"I prefer the first if/else check. However had, you can shorten it too, e. g.:

  def foobar
    return foo if condition_is_true
    bar
  end

The 

    common_name.presence || first_name

is not a real improvement because your brain still has to find out what happens.

One of my rules is to never let my brain do any work, so simple a code ought to be.",1538375073.0
this_is_not_nil,"No ifs, no ternary operators, no strange interpolation or string appending:

    def short_name
      first_or_common_name = [first_name, common_name].compact.first
      [first_or_common_name, last_name].join("" "")
    end",1538320535.0
Tomarse,"> \# Ruby without Rails version

`blank?` is not core Ruby. It is a monkey patch by Rails.",1538339070.0
nathanielb,"Where ever you are defining the application is where you define the name. For example, with nginx, in the server configuration, you'd do something like:

**passenger_app_group_name my_special_app_name;**

However, what you're referring to is the name of the Passenger instance which is running. I believe those are randomly assigned. If you ever restart nginx (in your case), Passenger will spin up a new Passenger instance (watchdog, spawner, etc.) with a new unique identifier. It'll then send requests over to that one and spin down the old. That random number is how it separates active processes from decommissioning processes.

Also, I'm guessing you must have an errant process running. Normally, you wouldn't have multiple running outside of the spin up/spin down cycle, which normally only lasts a few seconds.

I'm guessing you need to manually kill one of them. Determine which one is older by listing the processes and then manually kill the old one.",1538249914.0
Dee_Jiensai,"> why _why so beloved in ruby community' or maybe your direct opinion ?

His work brought me to ruby, and besides that, its just refreshing to see a computer language treated with something other than cold logic.",1538205322.0
nathanielb,"_why was very important and valuable to the Ruby community. His approach was light and silly and fun, and engaging, and surprisingly educational.

As a side note: I worked on tryruby.org (with several others at Envy Labs and Code School). At the time we built Try Ruby, _why had already left the community. He was already missed and many of us cared a lot about him and had a strong desire to preserve both his privacy and teaching approach. We tried to be very true to him.

I'm happy to hear that it was useful and attractive to you and I hope that we helped you learn (and maybe even enjoy!) Ruby programming.",1538250581.0
yespunintended,"> 2) I can't find 'Steve Klabnik's compilation of _why's latest work'. Anyone had a link to it ?

Ping /u/steveklabnik1",1538281933.0
nateberkopec,"> Steve Klabnik's compilation of _why's latest work

It's the CLOSURE repo you linked to. That ""happening"" was ""_why's latest work"", as in the sense of ""artwork"".",1538313658.0
keyslemur,"The thing about \_why is in the end, he said something quite interesting: We're all \_why.

There are those of us in the community who still very much try and continue that legacy of whimsy and fun, and will continue to.",1538341094.0
azzamsa,"Addition
- https://words.steveklabnik.com/why-is-a-role-not-a-person",1538800685.0
shevy-ruby,"A comment to (3).

I can't speak for anyone else, but _why was a very creative and productive mind. He wanted to separate reallife from most of his work related ""online"" so when that was no longer possible he retired his online-presence. His choice and decision.

It's always bad to lose a productive individual.

I remember Zed Shaw whining about _why removing his code in repositories - the very same Zed who kept on pissing on ruby folks (""rails is a ghetto"", even though it was specifically aimed at rails, he equated the ruby community with the rails community which is wrong) while having abandoned ruby already years ago (and writing non-idiomatic code tutorials e.g. learn python the hard way and other such nonsense).",1538297092.0
ezekg,"I use [Bullet](https://github.com/flyerhzm/bullet) for detecting n+1 queries, which is likely the case for your index routes if associations aren‚Äôt preloaded. I enable it in my dev env, as well as my test env (throws in test env).",1538190959.0
zenzen_wakarimasen,"Great! The fact that Github caught up with Rails means that they will be pushing PRs to Rails more often.

Edit: words. ",1538163894.0
JohnTheScout,"Fantastic article. This is the second time I've seen the advice of setting up your app to run on multiple versions of rails simultaneously. At first I was skeptical, but the more I think about it the more it seems like good advice. Especially if Github is doing it, that makes it much more attractive. I also learned about activerecord enums from this article, which I'll definitely be using in the future. ",1538171699.0
dphase,Sequel + TinyTDS. Worked well for me going on seven years. ,1538104326.0
moderately-extremist,Just curious what your reason is for migrating to sinatra/ruby?  More familiar with the language? like the language more? better performance?,1538102280.0
jemminger,https://docs.microsoft.com/en-us/sql/connect/ruby/ruby-driver-for-sql-server?view=sql-server-2017,1538106554.0
ejstembler,I‚Äôve been using [tiny\_tds](https://github.com/rails-sqlserver/tiny_tds) with [ActiveRecord](https://guides.rubyonrails.org/active_record_basics.html) for a long time. You could also use Ruby [DBI](https://github.com/erikh/ruby-dbi) with [ODBC](http://www.ch-werner.de/rubyodbc/).,1538176083.0
GroceryBagHead,"You don't need DatabaseCleaner. Rails runs tests in transactions by default. You should be running tests in transactions. Rails system tests (Selenium/Capybara) also run in transactions out of the box. Minitest comes as a default and is easier to work with compared to RSpec. Don't make test suites complicated for no reason.

Catch ya later in the next blog post about slow-ass tests!",1538064947.0
SagaciousCrumb,"run `rails db:migrate:status` to find out which migrations it thinks have been run, and which haven't.

&#x200B;

Then, you can look at the migrations and figure out if they really need to be run, or if you need it to skip some.

&#x200B;

There are two ways to have it skip:

1. Open the migration file and comment out the body of the `up` or `change` method, then `rails db:migrate`
2. Add the migration's timestamp to the `schema_migrations` table in the database",1538013444.0
GroceryBagHead,Table `schema_migrations` should specify all migrations that were run before. Also you can nuke all old migration files and not worry about them. That's why you got `rake db:schema:load` assuming that `schema.rb` was committed in the first place.,1538064607.0
seainhd,Ruby is fuckin tight,1538016743.0
duschendestroyer,"I can see situations where 
`a if b unless c` looks nicer than `a if not c and b `",1538054427.0
northrupthebandgeek,"Take that, Python!",1538025970.0
toadkicker,And yet I still got fired,1538036889.0
Jboogy,Nice,1538030910.0
symbioticremnant,This is something that can be checked for in RuboCop by [Style/NestedModifier](https://github.com/rubocop-hq/rubocop/blob/master/manual/cops_style.md#stylenestedmodifier) and [Style/IfUnlessModifierOfIfUnless](https://github.com/rubocop-hq/rubocop/blob/master/manual/cops_style.md#styleifunlessmodifierofifunless).,1538410634.0
timezone_bot,"12:30PM EDT happens when this comment is 59 minutes old.

You can find the live countdown here: https://countle.com/OcTW1c9Uj

---

I'm a bot, if you want to send feedback, please comment below or send a PM.",1537975814.0
internethostage,"Great article, quality content. Thanks for sharing.",1538028721.0
DrVladimir,Just a quick bit of feedback... a quick sentence at the top explaining what the gem does might be helpful. (Many-to-many via postgres arrays right?),1537984500.0
moomaka,"I don't find there are many situations where a join table is a good idea anyway, you're almost always better off naming the relationship and giving in a normal table as you'll almost always find more information down the road to attach to the relationship. This also doesn't seem to offer anything you couldn't do with a normal relationship model.",1537998402.0
fedekun,"So if you remove a tag, you have to update the tag sets table? This seems to be fast on read but slow on insert. I guess it's a cool alternative to have.

Yet another alternative is just use caching in a serialized column, and maintain it with proper hooks, then wrap all that logic into a concern or something, but yeah, like everything, it has it's advantages and disadvantages :p",1538007544.0
in0pinatus,"Back in my day we did this kind of optimisation with bit vectors, for n:m where |m| < 4‚Üë‚Üë2.",1538023621.0
psychonautilustrum,Interesting. I will check it out.,1537977568.0
SuccessfulBread3,"Forgive my ignorance, I'm asking purely to learn. But why would you opt for this over trying to normalise your database tables?",1537997434.0
sshaw_,I never like Rails' default behavior here. Will look into using this. Thanks!,1537994432.0
geraldbauer,"I've updated the [ruby conferences & camps in 2018](http://planetruby.github.io/calendar/2018) calendar. What's upcoming?

October 

- Sat 6 (1d)         Ruby Russia       @ Moscow, Russia
- Thu+Fri 25+26 (2d) RubyConf Malaysia @ Kuala Lumpur, Malaysia

November

-  Fri 9 (1d)   Keep Ruby Weird  @ Austin, Texas, United States 
-  Tue-Thu 13-15 (3d) RubyConf   @ Los Angeles, California, United States

**Any others? Please tell / update.** Cheers. Prost.

PS: For 2019, see the [ruby conferences & camps in 2019](http://planetruby.github.io/calendar/2019) calendar page. ",1537969907.0
JohnTheScout,"Filled it out. Though I will say that I found some of the questions to be leading, not great research questions. For example, 

""How do you qualify such updates? (same update across multiple documentations)¬†*

*annoying  
*error prone  
*difficult""  

These are practically synonyms, and doesn't leave room for the person answering to have a positive experience without trying to fight your survey. Though, it's pretty clear you're doing this because you either have such a tool already, or believe you can build one. 
",1538251037.0
nielsbuus,"The freezing can be somewhat deceiving for (nested) data structures though. So don't let your guard down just because you have a freezing convention. For example, if you freeze an array of strings, the strings are still mutable.

https://bugs.ruby-lang.org/issues/2509

Ignoring the problems with implementation, it would feel chillingly cool to invoke `deep_freeze!` on arbitrary objects. A real sense of power.",1537977705.0
_jonah,"This larger lesson is: ""Never mutate when you don't have to.""",1537968874.0
sshaw_,"Things become more problematic with nested structures. 

I had considered it a good idea to use [ice_nice](https://github.com/dkubb/ice_nine) by default. But, never did... ",1537994596.0
three18ti,"So constants are mutable then?  Doesn't that make them... not constant?

    ruby -e '
    > MY_CONST=""foo""
    > puts MY_CONST
    > MY_CONST.concat(""bar"")
    > puts MY_CONST
    > MY_CONST=""baz""'
    foo
    foobar
    -e:6: warning: already initialized constant MY_CONST
    -e:2: warning: previous definition of MY_CONST was here

I don't understand, why do some methods mutate a constant while others don't?  I thought by the very nature of constants they couldn't be mutated?

What am I not getting?",1537977289.0
klowny,"It says efficient, but are there numbers to back that claim? ",1537917320.0
losangelesvideoguy,"Yeah, so, I'm not quite seeing the advantage here? Ruby already has built-in lazy enumerators, so why do you need a gem for this? The example given is:

    File.open(""my_100_mb_file.txt"") do |file|
      file.map(&:chomp).map(&:downcase).map(&:reverse).take(10)
    end

Which it's claimed takes a long time to execute, and that's true‚Ä¶ but this code:

    File.open(""my_100_mb_file.txt"") do |file|
      file.lazy.map(&:chomp).map(&:downcase).map(&:reverse).take(10).to_a
    end

is nearly instantaneous.

Some of the data structures seem interesting and potentially useful, but I'm not sure why you need a gem to accomplish something that Ruby already provides.",1537948651.0
zverok_kha,"Am I understanding correctly it is a set of collections that do exactly the same that core Ruby collections can, but have incompatible API? It also adds new `List` concept, which is like `Array` but not like Array because it is like in functional languages...

So, I will probably need Hamster when ... Hm.",1537958259.0
realntl,"""Don't communicate by sharing memory; share memory by communicating."" -- R. Pike
",1538242983.0
imnos,"I was in this exact position 6 months ago.  The mistake I made was trying to get to know our codebase and figure things out like that, without properly finishing any rails tutorials.

So, I'd recommend finishing Michael Hartl's rails tutorial here - https://www.railstutorial.org/book which gives you a good overview of rails and some great tips and tricks. You basically just work through it an build a basic rails app.  Personally, I took notes of the things I learned whilst working through it.

I'd also read this section of Rails Guides - https://guides.rubyonrails.org/getting_started.html and use that site as a reference guide.

Lastly - I'd use stackoverflow and the Rails slack group at rubyonrails-link.slack.com if you're looking for any help or advice.",1537900368.0
mavikutu,"After a few years I realised that I can only learn when I am doing real work. Especially bug fixes is the one of the best learning way for me. Because when there is a bug, you need to understand the code and figure out what causes to this bug and then you have to find a way to fix it. When you go through this process you learn a lot of thing about your app‚Äôs code base. You don‚Äôt need to learn Ruby or Rails for that because they are so simple and when you look at the code you will figure out automatically.

Just ask them to give you a bug task. Probably you are gonna spend a lot of time but the end of the journey, you will learn a lot of things.",1537897640.0
Holek,"* Do not panic when you see stacktraces.
* Read the source code of used libraries (gems).
* If you only start now, get RubyMine and set it up to work with debuggers step-by-step. You'll understand what's going on in your methods and how it's all connected.
",1537906609.0
codeprimate,"Don't underestimate the importance of `rails console` Use it to interact with the code as a sandbox. Learn about Pry and how you can use it to inject breakpoints in your code and open an interactive console. You can list variables and method names, display source code of your current context (`whereami`), and even interact with values and methods inside classes during execution.

One of the first things you need to learn from your colleagues is how they debug and what tools they use. Then, how they write tests.

I use vim-wiki to record notes, but mostly depend on web resources like https://api.rubyonrails.org/, https://guides.rubyonrails.org/, and plain old Google.

As for wiki entries, always include a date (like 25 September 2018) and describe a problem and solution in plain language in addition to code snippets and URL references. It will make your notes much more searchable. 

",1537902323.0
hardwaregeek,"Learn Ruby well. Don't just depend on Rails to do everything for you. Writing Rails without knowing Ruby is like trying to write a book in Spanish without knowing Spanish. 

Learn OOP. You should have a good understanding of objects, how composition vs inheritance works, maybe a couple design patterns, etc.

Learn MVC at a high level, i.e. the purpose of the model, the view and the controller. Keep in mind MVC is a lot more than just web apps. It's fundamentally just a pattern for a certain type of architecture.

Then learn Rails. I actually found the default tutorial the most helpful. Make sure to actually do it though. Type out all the code and make sure it runs.",1537903039.0
Serializedrequests,"Well, figuring stuff out for the job will get you up to speed in a hurry. I was in the exact same position as you. The mistake I made was thinking that the company's existing codebase represented anything resembling good practices, or the best way of doing things. I tried so hard to learn it and I thought the author was a genius, until I eventually got enough experience to realize it just sucked and was over-complicated and badly-named at every turn, and he made no effort to follow the Rails guides.

The best thing you can do is read the Rails guides, and make a site from scratch following them. You will learn the simplest most obvious and expected way of doing things in Rails. You will gain experience solving the basic stuff that goes with a Rails site, and you will learn to recognize when you, or someone else, deviates inappropriately from the guide.

What Rails provides no answers for is true complexity, and bizarrely has terrible ""form object"" support. Most complex features require orchestrating multiple models and form objects. Everyone recommends ""service"" objects without saying what that means. If you don't have a preferential pattern from past jobs, I recommend checking out [https://dry-rb.org/gems/dry-transaction/](https://dry-rb.org/gems/dry-transaction/) or [http://trailblazer.to/gems/operation/2.0/index.html](http://trailblazer.to/gems/operation/2.0/index.html) ONLY WHEN THINGS GET HAIRY. Forget about these for now, just remember that there are tools out there for when a controller action goes beyond a single model.",1537915507.0
,[deleted],1537909014.0
jmoses,"I always recommend Pine's ""Learn To Program"" for new rubyists.  Even if you already know how to program. It's a good intro to how ruby does things. Idk how up to date it is, though. ",1537915884.0
chunk2k3,"The best thing I can say is dont be intimidated. There are a lot of gems and a lot of ways to do things. 

Turn panic into curiosity. Go through the Gemfile and find out what the gems are and what they do. 

Also, the API for Rails is easy to learn but there are a lot of nuances. Don't panic when something does not work right away, ask questions. I guarantee your not the first person to run into that problem.

Building side projects and looking at open source code will help you establish good object oriented design as well.

Good luck and congratulations. ",1537916103.0
Onumis,Read this book https://www.goodreads.com/book/show/45.Agile_Web_Development_with_Rails and you'll be good enough for most tasks in a few days. (There might be a more up to date version),1537928642.0
Gman513,"If you've never written any rails code before, I highly recommend not getting attached to your initial code. When I was in your position I was given a side project to work on and I spent the first week working hard on it, but then threw the whole thing out and started over in the second week. 

Reason being Rails is full of conventions and stuff that will help you be very productive, but if you don't know what they are, why they are there and how to work with them, you'll probably do what 50% of all people that try rails do: Code something in the opposite way to the convention, and then cry bitterly about how opinionated rails is when it doesn't work and forces you to now go and configure everything rails could have figured out automatically had you followed convention.

Some coming examples of this:
Partials are named with an underscore to denote their partiality
Models are always singular, but their respective crud controllers are usually expected to be plural
Avoid using keywords relating to rails functionality for model names. (Named a model Post once. Rails page helpers don't deal with that well at all.)

There's many of these little case, but they all become natural with experience, so just be prepared to throw away what you write before you've come into contact with the most common ones. :)

While we're here though, I also recommend reading up about using Trello and git or other similar software if you're very new to software development, as well as REST, CRUD and MVC. Those last 3 are some of the architectures rails is conceptually built around, and well help you to understand what is going on when you make a request to the application.

Finally: Binding.pry
This thing is amazing. You'll see why. 

Good luck with the new job!",1537929666.0
eserpoyraz,Try this: [https://rubyme.org/](https://rubyme.org/),1537951532.0
der_christoph,"Of course you are only able to learn it by doing it... I've learned some good basic knowledge with TryRuby ( [https://ruby.github.io/TryRuby/](https://ruby.github.io/TryRuby/) ) and ""Rails for Zombies"" on CodeSchool ( [https://www.pluralsight.com/courses/code-school-rails-for-zombies](https://www.pluralsight.com/courses/code-school-rails-for-zombies) ). 

But with all that ""how to make a blog"" examples/tutorials, it's really the best way to create something with a real goal or use... that's the best advice :)

Google, Stack Overflow and the rails/ruby docs are your best friend.  
Also a good advice is to ask the ""maybe there is  a method for it!?""-question very often, because there are methods for nearly everything... ",1537955955.0
wasabigeek,Do you have the chance to pair with another dev on a few of their tasks? That should accelerate your learning.,1537978163.0
rob_old,"This was me circa 12 months ago. The single most helpful thing when learning Rails is to get a feel for the 'Rails Way' of doing things, so that you work with the Rails magic and not against it. 

There's a great deal of criticism of the Rails Way, much of it well-informed and reasonable, but none of it will mean anything until you understand what the Rails way is and why it is like that. I'd start off by watching the presentation that popularised Rails in the first place: [https://www.youtube.com/watch?v=Gzj723LkRJY&feature=youtu.be](https://www.youtube.com/watch?v=Gzj723LkRJY&feature=youtu.be) 

Some of the commands have changed a bit in the 10 intervening years, but don't sweat the details too much - just try and get a feel for the big picture. Then work through building the modern version using the 'Getting started' guide at [https://guides.rubyonrails.org/](https://guides.rubyonrails.org/). The Rails guides are excellent in general, and it's probably a good idea to use them first as you're trying to get to grips with the details of Models (including the ActiveRecord pattern, validations, callbacks), controllers and views. After the first few Rails guides, the Hartl tutorial is great.  
",1538396794.0
saturnflyer,"Writing notes with pen and paper will help.
""Students who used longhand remembered more and had a deeper understanding of the material"" - https://www.scientificamerican.com/article/a-learning-secret-don-t-take-notes-with-a-laptop/

But I'd recommend that when you solve a problem, stash it in git, and solve it again. Repetition is the mother of learning.
You'll be faster and understand more the second time and it will increase your exposure to the code.",1537899276.0
jrochkind,Learn ruby first. Then learn some Rails. Then look at your local codebase. ,1537909557.0
japhillips87,rubykoans.com,1537909877.0
defkathy,"Hi! Check out The Well-Grounded Rubyist! I've found it really helpful for learning Ruby. I'm also organizing this webinar about the Well-Grounded Rubyist, 3rd edition today- check that out! You can ask Joe Leo, the author, any questions you have about Ruby- he'll definitely be able to give you good advice since he's like the Ruby expert. [You can RSVP here for the webinar on Ruby!](https://www.eventbrite.com/e/qa-with-the-co-author-of-the-well-grounded-rubyist-3rd-edition-tickets-50453369386)",1537970906.0
rangeroob,Hey I tested ruby packer out as well but and a big but is that it has issues with dependencies outside of the standard library and native C libraries like sqlite. Which I noticed the author didn't rely on. ,1537974189.0
sshaw_,How big are the executables? (I would try but OS X binary release requires 10.12). ,1537994828.0
geraldbauer,"Hello, I've written a follow-up  on why the CSV standard library is broken, broken, broken (and how to fix it).
Let's have a look at the [wonders of CSV formats / dialects](https://github.com/csv11/docs/blob/master/csv-formats.md) such as MYSQL CSV export or PostgreSQL CSV or TEXT export. 

In a nutshell - the standard CSV parser is a (simplistic) kludge 
using `string.split()` and, thus, needs to get replaced with a ""real"" parser that can handle more ""edge"" cases and formats. 

Questions and comments welcome. Cheers. Prost. 

**PS: If want to see other (more) CSV formats pre-configured and supported ""out-of-the-box""  in the new csv reader, please tell.**",1537886324.0
ejstembler,"I originally wrote the code back in 2014 (Ruby 1.9.3-p545), but just now got around to blogging about it and putting the code in a repo.  Better late than never I guess.",1537880573.0
fatkodima,"Zero-value article. There are millions of similar ""top N rails gems"" articles on the internet. ",1537878580.0
Rinakles,This sub-Reddit seems to have gone from 'discussion and news' to 'clickbaiting and blog advertising'..,1537883573.0
Serializedrequests,"I didn't know about letter opener, but this is a terribly written article.",1538135909.0
joelbluminator,Nice,1537867266.0
ksec,"\>I stopped using Ruby as my primary language about 3 years ago (at Moz we switched to [Elixir](https://elixir-lang.org/) and my team at Square is using Java)

Sigh.",1537885439.0
MrPopinjay,HTTP url: https://rspec.info/blog/2018/09/jon-rowe-and-sam-phippen-are-rspecs-new-leads/,1537874397.0
hmaddocks,"# 
	#require 'open3'
	
	describe ""Securitah!"" do
	  it ""Brakeman passes"" do
	    stdout, stderr, status = Open3.capture3 'bundle exec brakeman -z -w1'
	    expect(status.success?).to eq(true), stdout
	  end
	
	  it ""Bundler Audit passes"" do
	    stdout, stderr, status = Open3.capture3 'bundler-audit check --update --quiet'
	    expect(status.success?).to eq(true), stdout
	  end
	end",1537868807.0
thibaut_barrere,"A nice trick is to ensure your CI has a daily or weekly build which occurs no matter no commit have landed, to ensure bundle audit in particular will be run again.

On CircleCI which I'm using for all my projects, you can trigger a scheduled job [this way](https://circleci.com/docs/2.0/triggers/#scheduled-builds).",1537877264.0
techannonfolder,"https://jsfiddle.net/mnb65fwk/

These are my bookmarks for rspec. I used them to learn.",1537849674.0
MrPopinjay,"With the exception of one these are regular Ruby repos, not Ruby on Rails repos.",1537832296.0
lafeber,nice list!,1537862260.0
Spam_Detector_Bot,"*Beep boop*

I am a bot that sniffs out spammers, and this smells like spam.

At least 61.0% out of the 100 submissions from /u/cynthiaGG appear to be for courses, coupons, and things like affiliate marketing links.

Don't let spam take over Reddit! Throw it out!

*Bee bop*",1537798750.0
akito_mashua,"The watir gem is the only way to go these days with that topic. I often avoid the term ""web scraping"" as it makes people uncomfortable for a reason. The watir gem is the ruby implementation of the wonderful technology called selenium. Don't try anything else as you will just waste your time.",1537806639.0
redcodefinal,"Literally forgot about the most useful web scraping tool in ruby, [selenium](https://github.com/SeleniumHQ/selenium/wiki/Ruby-Bindings)",1537795445.0
rubyrt,Mechanize is not mentioned - but should be.,1537801878.0
ylluminate,Use this: https://github.com/vifreefly/kimuraframework,1537795330.0
polarpress,Selenium would be a better choice to use as it uses a real browser and you can execute JavaScript when needed. And if you need headless chrome can do that too.  And don‚Äôt forget about pop up windows ,1537796876.0
joemi,"I've used Nokogiri a lot, never used Pry. What does Pry do in this case?",1537840567.0
weedisallIlike,">but I am running into an issue where the seller can continuously keep uploading files. 

What do mean by that? Your users can upload more than one file per request?  

>I would like for when the file is uploaded, they can't upload another file and can only edit/update.

Being able to just upload one file per model should be set in the the model themself. 

I'm not sure if I understood your problem and solution, but it seems to me that the later is a little hacky. There should be a better solution.
",1537750692.0
442401,"It sounds like you might want to research a token based authentication.

Essentially, once a sale is complete, a token will be issued to the seller (via email or session cookie). After the seller has succesfully uploaded the file (your upload action will check for the token) the token can be expired. You may want to now issue a similar token to the buyer that will allow access to the purchased file and the purchased file only.",1537800526.0
mastermindxs,What sort of need do you have for version managers in your Jenkins pipelines?,1537728060.0
Pollosp,Mmm docker? ,1537732664.0
442401,"It seems like your Controller might be doing too much.

Possible alternative - In your module/concern add a callback
      
      included do
        after_save -> { do_something }
      end

*edit: use a callback*",1537632720.0
bramley,"Perhaps the details lie in the simplification necessary to make an example to post about, but... why aren't you just calling `do_something` for the things that need it? What's generic here? Your `FooController` calls `do_something` on a `Foo` because it knows it's dealing with a `Foo` and it knows what methods it can call.

Nothing you've described here indicates that `FooController` might be loading a `Bar` or a `Baz` that may or may not have `do_something` defined.

Is the request of ""I want to make this code as generic as possible"" that you want a module to include in each controller? If that's the case, I suggest you don't.

For one: This scenario (existing differences). There are differences and unless you have a good way to handle them, it just gets awkward.

For two: Future changes. If any of these actions changes in a way that diverges from the others, you'll either have to add more conditionals and make the module and maybe every single module more complicated, or back out of the module for that one controller and then you have to justify to yourself why your module is worth the hassle.

The benefit of not using the module is that you can see all of what every controller does, right there, without another file being involved. You can change the actions as necessary. It's not even a very custom action right now, so you don't have to worry about it being too complicated for someone to read.

The drawback is that there's more code. It's important to note that simply repeating code isn't enough to consider it ""duplicate"" because these are all different bits of knowledge -- they all handle different cases that can change for different reasons, even if they appear similar. Duplication and DRY only matters when it's the same bit of knowledge -- for example, how to generate a user's full name from first/last name -- only one place should have the code that knows how to do that.

Now that said, if you're determined to continue down this path, what I would do is extract the similarities and allow the differences to be specified with blocks. For example:

    def basic_create_stuff(&block)
      foo = Foo.new(foo_params)
      if foo.save
        log_activity(foo)
        block.call(foo) if block
      end
      # finish rendering etc.
    end
    
And then in your controller you have

    class FooController
      basic_create_stuff do |saved_foo|
        foo.do_something
      end
    end

or if it doesn't have `do_something`

    class FooController
      basic_create_stuff
    end

(certainly not working code, but that should get the idea across)",1537670555.0
in0pinatus,"> I have considered adding a module that implements the Null Object pattern but seems like an overkill.

It isn't. It's a common fallacy that adding a new class is ""overkill"" or ""heavyweight"" when actually it should be amongst the first refactoring strategies you reach for. Ruby's OO capabilities are one of the language's superpowers - use them. c.f. Sandi Metz's classic talk [Nothing is Something](https://www.youtube.com/watch?v=29MAL8pJImQ)
",1537688921.0
slendermann29,"i think by using something like #respond\_to your code makes it clearer that only  somde models have and use that method, while if you're always calling it and define in each model class, in some with implementation and in other as a no-op handler you always think that something should happen there when debugging, thinking that something is wrong, just do discover in the end that it was one of those models that had the no-op handler, and that the code is working fine.   
Anyway since the difference of implementation is at model level(e.g. some need to do something and other not) the best way to tackle this is in the models themselves, with a lifecycle hook like `after_create :do_something` , and eliminate the need to call that method from the controller.  
",1537641914.0
jrochkind,"If it was _really_ `record.do_something if record.can_do_something?` (notice you are asking the same record you are telling), the obvious step to consider would be embedding the ""can"" in the method. On the record:

    def do_something
       return false unless can_do_something?
       # other stuff
     end

or even a new method

     def do_something_when_possible
          do_something if can_do_something?
     end

I suspect this isn't answering your true question, but just because sometimes obvious things escape us it's worth pointing out. ",1537649928.0
captain_haywood,"This sounds like a good opportunity to take advantage of the [decorator pattern](http://www.rubyguides.com/2018/04/decorator-pattern-in-ruby/). Something like 

    class FooController
      def create
        foo = Foo.new(foo_params).extend(DoSomethingModule)
        if foo.save
          log_activity(foo)
          foo.do_something
        end
        # finish rendering etc.
      end
    end

would give you the explicitness you're looking for in the controller (or wherever else you might use it). It would also help you avoid using callbacks in the model, which IMO should be avoided since they can create nightmares for testing and often break the ""principle of least surprise"". ",1537665754.0
realntl,"Consider the source of the symmetry between controller actions. What makes controller actions often appear similar to one another is not what the _model_ is trying to do, it's what the _controller_ is trying to do, i.e. respond to a web request.

Keep web request concerns out of your models. My recommendation is to ignore the apparent symmetry, but if you insist on introducing any sort of abstraction, it'll belong in the controller layer, not the model layer.

(And, eventually, these ""layers"" will stop mattering, but it might be more beneficial to progress one step at a time)",1537796931.0
LarsP,"You may have made your code so generic in order to ask the question that it's impossible to answer. Usually the reason to do something one way or the other depends on the specific details...

Anyway, your options, within *this* design are (1) ask if the object has a `do_something()` method, or (2) implement a `do_something()` method on all objects, that does nothing on some of them. Or possibly use an `after_save` callback, if it's that generic.",1537656167.0
saturnflyer,"You mentioned ""tell don't ask"" in your title but then don't seem to say anything about it in your comments.
If you want to do that, I would expect to see code like

    foo = Foo.new(foo_params)
    foo.do_something

You'd be telling the `foo` instance to perform something and not asking for things.
Sounds like implementing Null Object is exactly what you want here.
You want to _assume_ that `do_something` will either work or silently do nothing if it doesn't apply.

If you don't want to do that, you could invert the relationship so that the module itself is the manager of performing the action with something like

    module DoSomething
      def self.with(object)
        if object.is_a?(self)
          object.do_something
        end
      end

      def do_something
        # the thing
      end
    end 

Then you'd just use `DoSomething.with(foo)` and if `foo` includes that module, then it'll work, if it doesn't it will do nothing.
This all depends on what you want to see in your controller. Is it ok to reference the module that implements behavior? Or do you want all objects to respond to `do_something`?",1537901320.0
japhillips87,"Did you try http? If not, you may be able to click a link on the page and proceed anyway",1537560943.0
slendermann29,"they had only issues for the last two years. I remember doing their courses back in 2015 when it worked smooth, the content is great, but they changed their hosting provider and that caused having their site down for a year or so. Also at the beginning of the year i noticed it was back up, but kept having other issues, like CSS not being loaded, and it was responding really slow. Too bad they haven't figured it out yet, it's really the best place to learn ruby imo",1537619645.0
keyslemur,"Starting a ""Let's Read!"" series over Ruby books new and old. To start I'm going with one of my personal favorites, Eloquent Ruby. Now the original was released in 2011 around Ruby 1.9.2 and some things have changed, so this includes a lot of notes on how development has changed and evolved since then.

Noted that I'll only submit this first chapter directly to reddit. The remaining ones will only be mentioned on Twitter as I get through them.",1537550003.0
keyslemur,"Do note Ch 2 is out now: [https://medium.com/@baweaver/lets-read-eloquent-ruby-ch-2-6e17a84bd8c2](https://medium.com/@baweaver/lets-read-eloquent-ruby-ch-2-6e17a84bd8c2)

&#x200B;

I'll likely post back here every 2-3 chapters done so as to not spam too much, and then an index page once it's finished up.",1537776302.0
dotobird,"How frequent are you gonna do this?

Also, is the book available in its entirety for free somewhere?",1537594802.0
defkathy,"The Well-Grounded Rubyist! The third edition is coming out next month. It's co-authored by David Black and Joe Leo. Check out this webinar today that Joe is doing- you can ask him any questions about Ruby, or the book! [RSVP here](https://www.eventbrite.com/e/qa-with-the-co-author-of-the-well-grounded-rubyist-3rd-edition-tickets-50453369386)",1537972100.0
shevy-ruby,"> Ideally the names of classes, variables, and
> methods can be used to give clarity to the intent
> of the code so such comments are unnecessary.

No.

I also don't understand this ""hey we don't have to
use comments - the code is self-documenting!!!"".

No it is not. You were just too lazy to document what
you did.

Comments do not cause harm. They don't kill kittens.

If you don't want to read comments, filter them out
before you read .rb files. You can easily use ruby 
to do so, too - just detect all # which covers most
comments (excluding the other comment style
which is very rare).

I feel that the real reason why comments are sparse
is because people are very, very lazy. So they come
up with excuses to not document their own code.

In all the years reading ruby code by other people, 
using comments and documenting the code is 
ALWAYS better than undocumented meta-shit 
nobody really understands (and has bugs on 
top of it). I very happily discard any code that does
not come with proper comments; the more the better.
Otherwise it would be a huge waste of my time to
sift through awful code - and even though ruby is
the prettiest language, people can do real atrocities
with it syntax-wise. Lots of the code out there is AWFUL.
Some of it is brilliant, though.",1537605836.0
keyslemur,"""Utilising the rarely-seen %= operator""

Ah, always fun to see those ones thrown around. It works with all operators, though I've yet to find any particularly fun uses of it outside of the normal ones like `||=`.

Nice article, always fun to see classic problems explained in a bit of detail. You might enjoy ""To Mock a Mockingbird"" if you haven't read it yet.",1537550810.0
tomthecool,"How did you end up with that odd array in the first place? Let's fix the cause of the problem, not the symptom.

Here is how you *could* convert that first array to the second -- but as I say, I think it's extremely likely that the ""correct"" answer lies further up in the code.

    array.first.split(',')",1537521055.0
erluti,"It is bizarre data, but I like more abstract approaches...

`array.collect{|stringed| stringed.split(',')}.flatten`

then you could have [""a,b,c"",""d,e"",""f""] and get [""a"",""b"",""c"",""d"",""e"",""f""]",1537545203.0
MarkoPoli,"Thanks gents! End up with .first.split(',')",1537528225.0
shevy-ruby,"First access it via [0]; then apply .split().

    array =  [""foo,bar,bor""].first.split(',')",1537521543.0
jrochkind,"Probably not. If you've never built a server-side application, and depending on your grasp of how the web works in general, you have more to learn than just the language or framework. 

But it's difficult to decide where to draw the line to cross as to ""have learned ruby and rails"". 

But even if someone was an experienced, say, python web developer, I'd say two weeks would be barely enough to have a basic grasp of whats' going on. ",1537534497.0
my_toesies,"To do what? Build a simple app? Get a job?

2 weeks is enough time to build a shitty to do list example app",1537487177.0
theamazingrand0,"I‚Äôve been a Ruby/Rails developer for 13 years (since 0.11), and I‚Äôm still learning. Do you want to write your own personal blog? It‚Äôll take a weekend if you already have programming experience. Working on a team with other developers on a large app with lots of customers and changing business requirements? I‚Äôll let you know when I find out.",1537497109.0
notromda,"There's a great mind map of the many competencies required to be a strong Rails programmer.   https://www.codefellows.org/blog/this-is-why-learning-rails-is-hard/

This isn't limited to just Rails, I'm sure many other languages and frameworks have a similar density.   You have a strong grasp on Javascript? Congrats, you can check off one little leaf node in that tree.

I've had people ask me to teach them how to do like I do.   I can't figure out how people expect to learn in a few weeks what I have spent a decade mastering.

Just keep working, keep learning.   Be inquisitive, and persistent.  Experience takes time.",1537544881.0
Nebs987,Learning ruby on rails is not hard if you have solid understanding of programming and the mvc pattern. Rails follows the mvc pattern very closely so if you already understand mvc then just doing the rails getting started tutorial was all I needed to learn ruby on rails at a basic level.,1537530818.0
shevy-ruby,"This is hard to answer because people are different.

I think two weeks is a too short period though; sounds more as if someone lacks time.

I'd say that for an intermediary level (aka someone who knows another ""scripting"" language very well), with a reasonable daily time allotment, I'd give a range of 2-3 months for ruby; and 2-3 more months of rails.

That should be reasonable but again, it depends a lot on the individual.

Two weeks seems way too short though, even for geniuses who can memorize everything.",1537797634.0
Mancinoz,"Here's the only flawless code ever written:

```

```",1537487305.0
selador135,https://github.com/mame/trance-book/blob/8c97dbdfb996e52f4e166530c1c5844c71c92f40/1-4-2/tic-tac-toe.rb,1537520549.0
slendermann29,"Well devs are opinionated on code style and paradigms and so i might like some metaprogramming code, but a more experienced dev would consider that an overhead and prefer the simple static self explainatory code. But codeclimate has a good metric for maintainable code, in terms of compexity, structure and style. Whenever i see a gem that has the codeclimate badge with A on github i start looking at the code and i see some really good examples there. One such gem is [https://github.com/rubocop-hq/rubocop-rspec](https://github.com/rubocop-hq/rubocop-rspec) , have a look if you're interested.",1537477992.0
442401,"I think this encapsulates what Ruby is. It was designed to bring pleasure and achieves that aim by being all things to all coders.

As /u/slendermann29 says, ""devs are opinionated"". Ruby allows each dev to have their own opinion and associated chills. Find a style that you appreciate the texture of and let your spirit free.",1537483544.0
shevy-ruby,"> Like you're looking at something that has kind of captured or described the universe

Yeah - I get that after smoking weed.

Perhaps you do too.

More seriously - simple code is good. But no code is ever perfect.",1537684636.0
tinco,"Whenever I get to build a small Ruby project from scratch after long bouts of JavaScript front-end work, I feel like everything I do is the cleanest most perfect code ever.",1537533897.0
dzuc,[https://github.com/camping/camping/blob/master/lib/camping.rb](https://github.com/camping/camping/blob/master/lib/camping.rb),1537495096.0
bemend,"https://github.com/socketry/async-websocket

It doesn't seem really popular yet but look at his other projects https://github.com/socketry to get an idea of his pedigree.",1537475219.0
WJWH,"As far as I know, eventmachine is your best bet, possibly combined with a background worker library like resque or sqewer to do the other work you mention.",1537473974.0
FooBarWidget,"What's everybody's verdict on OpenWhisk? If you're a serverless enthousiast, would you use it?",1537472839.0
nakilon,"Just a note: you don't have to push your gems to Rubygems.org -- you can bundle them from a git repo.  
Instead of those ""4 files"" and tokens you just make a .gemspec file and configure folders properly.  
Also, you don't even need a repo -- bundler can take gems from a private gist at gist.github.com, even multiple files gist (it won't have tagging, branches, etc. though). Did Sparrow author know that? ..D",1537467870.0
iconoclaus,i‚Äôm curious: why did you write a utility for ruby and python.. in perl?,1538842986.0
edendark,"Remember that `result` is a hash, and you can do two main actions with it, read and write. 

If the hash is `result = { ""foo"" => ""bar"" }`, you'd read the value for the `""foo""` key by doing `result[""foo""]`. 

Similarly, to write a new value for the `""foo""` key, you'd do: `result[""foo""] = ""baz""`, which would turn your hash into `{ ""foo"" => ""baz"" }`. Hope this helps. ",1537465775.0
Eshakez_,"Your understanding is mostly correct.
A few things that might help:

`result` will return the entire hash - all keys and values

`result[letter]` will return the _value_ assigned to `letter` within the hash. You can combine this with the assignment operator (`=`) to set or update the value of the hash

---
Examples usually help me understand better.

Here's an example of what you will get if you open an `irb` session in a terminal. My input is prefaced with `>>` and the output (return value) is prefaced with `=>`:

    >> result = {}
    => {}
    >> result['A']
    => nil
    >> result['A'] = 1
    => 1
    >> result['A']
    => 1
    >> result
    => {""A""=>1}
    >> result['A'] = result['A'] + 1
    => 2
    >> result['A']
    => 2
    >> result
    => {""A""=>2}

Notice that if you query for a key that does not exist then you will get `nil`. After assigning a value, you will instead get whatever value is associated with the key that you pass into the hash accessor argument.",1537471515.0
StefanMajonez,"Iterating over every letter of the alphabet and then scanning the statement each time isn't really efficient. This problem can instead be solved like this:

    result = Hash.new(0)

Passing any object into the `new` method will make it the default value of the hash elements. Now you can simply:

&#x200B;

    statement.split('').each do |character|
      result[character] += 1
    end

`split('')` will create an array of individual characters, which we can iterate over. Then we `result[character] += 1` \- if result\[character\] hasn't been accessed yet, it will take on its default value which is 0, and then immediately get increased by one.

`result` will include spaces. If you don't want them, you can do this:

&#x200B;

    statement.delete(' ').split('').each do |character|
      result[character] += 1
    end

&#x200B;

That `delete(' ')` will delete all spaces from the statement.S

&#x200B;

EDIT: This actually includes numbers and symbols, which the original problem omitted. So:

    statement.gsub(/[^a-zA-Z]/, '').split('').each do |character|
      result[character] += 1
    end

gsub - global substitution - takes in two arguments - a 'pattern' `/[^a-zA-Z]/` and a 'replacement' `''`. Whenever any part of the input string matches the pattern, the matching part of the string gets replaced.

Let's look at `/[^a-zA-Z]/`. **/**`[^a-zA-Z]`**/** denote that it's a [regular expression](https://en.wikipedia.org/wiki/Regular_expression). `/`\[`^a-zA-Z` \]`/` mean 'match one item from this list'. `/[`\^`a-zA-Z]/` means 'not' and `/[^`a-zA-Z`]/` are ranges of characters. So basically, match one item that's not an alphabetic character.",1537481720.0
systemnate,"I'm not saying this is the easiest / best way to do this, but here is a one-liner solution:

`""The Star Wars Movies Rock"".split('').group_by(&:itself).transform_values(&:size)`

The split converts the string into an array of individual characters, group_by(&:itself) groups the characters by ""itself"" (e.g. `{""T""=>[""T""], ""h""=>[""h""], ""e""=>[""e"", ""e""]...`) and `transform_values(&:size)` transforms the values based on the size (e.g. `""e""=>[""e"", ""e""] becomes ""e"" => 2).",1537472463.0
slendermann29,"`result[letter]` might be updated multiple times through all the iterations, e.g. for multiple occurences of a letter in a string. However this is a little unclear with the given solution. I would write the block like this `{ |letter| result[letter] = (result[letter] || 0) + 1 }`, meaning if the result doesn't contain the key for the current letter initialize it with 0(so hash now contains the pair letter => 0) otherwise use the current value, and then just increment it with one unit, since each iteration denotes one occurence of that letter.Hope i was clear",1537471222.0
Nebs987,If the client ever wants to update the version they are using they will need to update the entire project for all instances of the classes they use. I think instead you should have one single class for each endpoint that accepts an argument for the version to use. This can be set as a global during initialization. This way the code will be cleaner with all class names having nothing to do with the version being used.,1537454797.0
multiplegeorges,"Take a look at how the AWS S3 SDK works: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html

It's Javascript, but the idea holds.

> var s3 = new AWS.S3({apiVersion: '2006-03-01'});
",1537459056.0
sshaw_,"If you're writing a lot of classes like this: 

    class Bar
      attr_accessor :name, :description

      # instance methods
      def initialize(params)
        @name = params[:name]
        @description = params[:description]
      end
    end

    # ...

    bars = JSON.parse(response.body)
    bars.map { |attributes| new(attributes) }

I suggest you checkout [class2](https://github.com/sshaw/class2) (author here). It can save you some time by generating some of these classes from JSON and dealing with `camelCase`/underscore property names and serialization ‚Äìamongst other things:  

    require ""class2/autoload""  # builds classes from below JSON
    require ""pp""

    commit = Commit.new(:author => { :name => ""luser1"" })
    p commit.author.name
    pp commit.to_h

    __END__
    {
      ""response"":  {
        ""sha"": ""f52f1ed9144e1f73346176ab79a61af78df1b6bd"",
        ""commit"": {
          ""author"": {
            ""name"": ""sshaw"",
            ""email"": ""skye.shaw@example.com"",
            ""date"": ""2016-06-30T03:51:00Z""
          }
        },
        ""comment_count"": 0
      }
    }

Also see: https://github.com/ScreenStaring/recharge-api/blob/3eaf7723bf9c7d6689051e92cab5b572b009afcc/lib/recharge/classes.rb#L5-L207
",1537499963.0
fzf,"I think you missed a big point here, there are different versions of the API. I think you want to focus on creating different versions of your gem that correspond to the different versions of the API. Is there a reason why the gem needs to consume all different versions at a given version?",1537505042.0
case_O_The_Mondays,Any chance you‚Äôve checked out the swagger code gen tool? That might help with writing for different versions. ,1537579053.0
badg35,"Here's the resulting implementation:

    module Api
      
      class FooClientFactory
    
        def self.create_client(version = :v2)
          case version
          when :v2
            Two::FooClient.new()
          when :v1
            One::FooClient.new()
          else
            raise ArgumentError, ""'#{version.inspect}' is not a valid version symbol.  Valid: [:v1|:v2].""
          end
        end
    
      end # /FooClientFactory
    
      # Api::Restful
      module Restful
        def get
          # get JSON
        end
        def post
          # POST JSON
        end
      end
    
      # Api::Utility
      module Utility
        include Api::Restful
    
        def bar
          puts ""BASE_URL: #{self.class::BASE_URL}""
          url = ""#{self.class::BASE_URL}/bar""
          response = post url ...
          response.body
        end
    
        def baz
          puts ""BASE_URL: #{self.class::BASE_URL}""
          url = ""#{self.class::BASE_URL}/baz""
          response = get url ...
          response.body
        end
    
      end
    
      module One
        # Api::Utility::One::FooClient
        class FooClient
          include Api::Utility
    
          BASE_URL = 'https://domain.tld/api/v1'
          
          def initialize()
            puts ""Creating #{self.class.name}""
          end
    
        end # /FooClient
      end # One
    
      module Two
        # Api::Utility::Two::FooClient
        class FooClient
          include Api::Utility
    
          BASE_URL = 'https://domain.tld/api/v2'
    
          def initialize()
            puts ""Creating #{self.class.name}""
          end
    
        end # /FooClient
      end # /Two
    
    end # /module
    
    v1 = Api::FooClientFactory.create_client(:v1)
    v1.bar
    
    v2 = Api::FooClientFactory.create_client(:v2)
    v2.bar

&#x200B;",1538172959.0
cmd-t,You need to read the documentation of the gems you use before asking trivial questions here. I feel you haven‚Äôt even tried anything at all. ,1537421979.0
world_on_wheels,Stackoverflow and Google is your friend.,1537423650.0
sammygadd,That Gary Bernhardt¬†video is hilarious. But I don't understand the authors point in how it shows design flaws in ruby. The weirdness is all JavaScript.,1537386710.0
shevy-ruby,"> I never liked scripted languages as I highly appreciate the work done
> by a compiler to detect typos and data type errors

Wait a moment ... so he hates ""scripting"" languages.

And now he is using ... JavaScript.

Am I missing some steps in between here?????

> Despite the great advantages of using Rails in a new project, there
> was an area where Ruby was not able to penetrate, and not even
> Rails was a good ambassador. I'm talking about the corporate world

And so what?

There are lots of shitty languages used in the corporate world. The
people are zombies there - remove the brain and become a worker
drone.

Of course there is one reason I can not disagree with and that is
speed. I am not referring to JavaScript, although I assume it is
faster than Ruby; but I refer to C, C++, Java etc...

> And in my view, the JavaScript ecosystem is mature enough to
> deliver all the good things that Ruby and Rails have brought us

Yeah ... JavaScript works perfectly well.

I mean, there is like nobody to left pad a string ever and make that
a popular add on ......

> Our findings go in the direction that there is a replacement for
> almost every Rails feature or Ruby gem.

Hardly. :)

> Unlike Ruby, JavaScript dominates the web front-end, and with
> Node.js it became famous on the back-end. It's easy to
> understand why JavaScript is more popular, 

No.

It's not why JavaScript is more popular.

Even PHP is now slightly below JavaScript.

The reason why JavaScript got big is because it is a
de-facto monopoly on the www. And the www is by
far the biggest catalyst that we have.

I actually wrote that years ago too where I suggested
that core-ruby should focus on the www too, well aside
from rails. But I think the problem is that there are not
that many great and active C hackers that may decide
to use ruby rather than ... python.

Perl has it even worse now than Ruby.

> I also think that the community is going through a ""cool""
> phase, similar to what happened to Rails in the early day

There ever was a ""cool"" phase of rails???

> But I also suspect that we will see some consolidation in
> the upcoming years with libraries and frameworks being
> left to die. 

Great!

So people learn something, invest time and in 2 years it is
all outdated.

Poor JavaScript folks.

> Going back to what I said in the beginning of this article, my bet
> was that JavaScript would have a painful death. I couldn't be
> more wrong. 

We gotta remember that the next time you predict the future.

> I still think there are big problems with the language, but then again,
> Rails became famous and Ruby also suffers from some design flaws.

> I don't think anyone was able to highlight this better than Gary
> Bernhardt on his incredible lightning talk on CodeMash 2012.

WHAT THE FUDGE?

That talk makes fun of JavaScript. I think ruby is mentioned only
once in the beginning before turning to JavaScript.

Did you even watch the video?!?!?!

It's a great video. But nope, it's not a ""design flaw"" in ruby.

By the way - if you mention ""design flaws"" BUT ARE NOT
SPECIFIC, how should anyone know what you are talking
about?

This dude is strange...

> The fact is, you can now release a complex web and mobile
> project without the need to use several languages

Not using HTML? CSS? Never any of the SQL?

Hmm. Guess the guy found ONE LANGUAGE TO RULE THEM
ALL.

I am so glad to not have to write JavaScript myself.

> All things considered, for us, JavaScript is fit for purpose and
> context. We've officially stopped recommending Ruby on
> Rails for new projects and will opt for a JavaScript based
> architecture by default. 

That's great.

I officially recommend to find some other company than
Imaginary Cloud since it is a company run by noobs.

> Nevertheless, we will support existing Rails projects, as I
> think that the technology is mature, ready for production
> and it won't die anytime soon because of its mature and
> stable community.

Nah. You abandoned ruby already so don't try to wing it.

Your future is now set to JavaScript - good luck riding that
boat. Heroic worker drones will come to work for free soon
enough. :)",1537401450.0
zitrusgrape,"I will leave it here:
he never likes scripted languages, but he choose javascript.",1537455009.0
rubyrt,"A few random thoughts

* the guy appears like someone who spent a hell lot of money buying something new and now needs to convince himself that it was a good deal and the new thing is much better than the old one.
* Besides ""awesome"" the word ""innovation"" begins to get on my hotlist of most hated words.  Tiago argues that that the JS community is more active and there are more innovations to be expected. This might well be because so many people jump on JS and need things which are simply not there.  A mature alternative product might have all these already.
* He is basically following the herd instinct (""both startups and corporates are willing to bet their future stack on"", ""Startups and corporates love JavaScript."").",1537477766.0
drx3brun,"I got the impression that lots of the statements are this lame for purpose. Almost like he‚Äôs trying to start a flame war hoping to get viral, because bad press is still press...",1538697715.0
joemi,"I'm kind of unclear why doing lots of this:

    let(:header) { ""column1, column2, column3"" }
    let(:row2) { ""value1, value2, value3"" }
    let(:row3) { ""value1, value2, value3"" }
    let(:rows) { [header, row2, row3] }

...is easier to update when you add a column than fixtures?",1537406543.0
djcp,"If you use [Tempfile](https://ruby-doc.org/stdlib-2.5.0/libdoc/tempfile/rdoc/Tempfile.html) you get non-clashing unique names and no need to clean up the file afterwards as it happens automatically.

You might also consider using [FakeFS](https://github.com/fakefs/fakefs) to abstract away disk churn altogether for faster tests, though I'm not sure how Tempfile would interface with it.",1537446652.0
isjhe,"I don't wish to be too unkind, but I wouldn't give this PR a thumbs-up in my codebase.

- You're not actually testing CSV imports if you're making the CSVs in ruby yourself. This test structure is going to miss on all the interesting edge cases that make CSVs so, so fun. How are you going to use Ruby to generate a CSV with bad BOM? Intermixed delimiters? If you're using integer IDs, off-by-one row errors can still point to valid foreign keys, and can be a real bitch to debug. A CSV named CSV that's actually XML underneath? A CSV generated from MS Excel, in the different variations that Excel will poop out? LibreOffice? Google Office? Run-on rows because someone tweaked it by hand before uploading? CSV isn't a fixed standard, they all do things just a little bit different.

- What's with the main objection to doing things the bulletproof way being ""but I have to add a column to like, 12 files"". So what? It's going to take you like 5 minutes to add a new column to those files, and then you'll still be testing _real_ CSVs. This system & blog post took how long? How many columns could you have added over how many months instead of burning time doing this? Maybe if you had 1200 files, but then let's talk, but at that point I would have so, so many questions.

- Fixtures are super convenient with CSVs because your unit test code can also be a bug-fix regression test code. I like to take every file that makes my processors die, and add a regression test to the processor for that file. Take exactly what blew up and assert it no longer blows up.

- I'm worried that you're solving the wrong problem here, what with all the mentions about your CSVs needing to contain exactly correct foreign keys. Your use-case sounds like it is ill fitted towards CSV imports. You probably need a web interface specifically designed for speed usage. Or maybe you could go all corporate and add some extensions to MS Excel so users can do lookups for IDs right within the sheet. Anything but trusting that someone won't fat-finger a critical column. That's just begging for a big ""Oopsie, that wasn't the name I wanted, can someone roll back my CSV import?"" internal support request. And yes, it's practically guaranteed to be the CSV from last week whose content is now referenced by thousands of other rows.


Your last couple of paragraphs address the real root of the problem. You have one uploader, and 1 class doing way, way too much. Fix _that_ problem. Don't create more problems by architecture-astronauting, and _especially_ don't astronaut your tests. If you abstract away too much of the pain of testing, you can sometimes abstract away that still small voice that says ""wtf am I doing I need a new class.""

Break apart your uploaders. Separate your CSV parsing process from your ingest process, then you can test parsing with real CSVs and the ingest process with unit tests. Don't fail an import if rows are wrong, fail the row and let employees fix it on the fly (super easy with workers per row). Give your employees tools that make their lives easier, don't give them footguns. Your employees should never even be able to add something with invalid foreign keys, that's just not fair to them.
",1537472450.0
sshaw_,"    rows = [""a,b,c""]
    rows.each do |row|
      csv << row.split("","")
    end

Better to just keep rows as arrays: 

    rows = [%w[a b c]]
    rows.each do |row|
      csv << row 
    end

Or even better:

    rows = [%w[a b c]]
    File.write(file_path, rows.map(&:to_csv).join(""""))
   ",1537498956.0
jsquirrelz,"Concise and informative, good post üëç",1537436951.0
irishsultan,"`proc` and `lambda` create reified blocks, while `Thread.new` creates a thread which executes code, those aren't really comparable.

For enumerable it makes even less sense, `Kernel::map` over what values would it iterate?",1537365971.0
bjmiller,"An optimized syntax will reserve short notations for things that are (1) common (2) simple and (3) safe. Threads usually aren't considered safe or simple. I also don't see that many threads in practice.

You could certainly add it, of course.

    def thread(*args, &block)
      raise unless block
      Thread.new(*args, &block)
    end",1537371537.0
janko-m,"Awesome that someone still watches Buffy, it was one of my favourite childhood TV series :)",1537370561.0
Dee_Jiensai,Thank you :),1537392552.0
endlessknot080,"Great podcast - Jason is extremely interesting to listen to. If you like him, you should also checkout his other stuff!",1537450597.0
andyw8,"* http://rubykoans.com/
* https://exercism.io/",1537360187.0
capn_krunk,"Someone beat me to it, but they didn't mention  [code wars](https://codewars.com), you might check that out too.",1537360454.0
ASIC_SP,"apart from other sites already mentioned,

I have a few [basic to intermediate level exercises](https://github.com/learnbyexample/Ruby_Scripting/blob/master/chapters/Exercises.md) - you could either use the files provided in that github repo and solve them locally or use [repl.it](https://repl.it/community/classrooms/53963) to solve using a browser

",1537361436.0
BadMinotaur,"There‚Äôs also r/dailyprogrammer, which has three challenges a week to solve. It‚Äôs a good way to flex your Ruby muscles while learning to logically break down a problem into its constituent parts. ",1537369806.0
000000Swan,https://www.hackerrank.com,1537371605.0
CarlJibbs,"Seconded for code wars. They can be a little slow/buggy at times, but have a lot of great challenges from super beginner to advanced.",1537373981.0
moepstaronx,"Project Euler comes to mind...

https://projecteuler.net",1537374602.0
fedekun,"Tutorials/challenges are good for starting but they will never get you anywhere near decent level. If you want to really learn you have to build something.

Given you want to learn Ruby, maybe build a Rails app, like a Twitter clone or something, it doesn't really matter what you build as long as you actually build something.",1537377878.0
Yuanlairuci,Codesignal.com!,1537366737.0
xamut,https://www.codingame.com,1537367939.0
NativityInBlack666,Sololearn for sure,1537428703.0
leemurjames,I'm a fan of building basic games in the terminal. blackjack or paper rock scissors are both fun and doable. I still do this when I'm picking up a new language.,1537463363.0
how_do_i_land,"Personally instead of a template heavy system you could just write your own DSL to express these things. When you start trying to make templates to express other templates you run into issues of how to interpret and convey intent while providing customizability and speed.

Within ruby I would approach this by just making a custom DSL and have classes for each client that implements what they need from just 1 parent template. You don't want to start running dependency resolution by trying to have many templates share from each other. And that would make reading the code more difficult where here all you need is succinct, straightforward and readable output.

The danger about going the sub-template route comes down to version handling, if client A agreed to process b.1 then you update process to b.2 but client A didn't agree to that, how is it stored?

Versus a DSL where you outline each process and it's requirements, more verbose and not DRY, but you don't have to worry about coupling between each client.

It was a wall of text to read and I don't quite get how this will be implemented but these are just a couple thoughts I had while reading it.",1537336477.0
Hell_Rok,"This seems like an absolute nightmare just because of the mis-matching braces, what's the reason you can't change the way the data is given to you? Is this human generated or computer generated?

To answer your question though, I would look into building a parser which goes character by character and produces an AST, regexes are going to quickly become a nightmare to maintain.

This will allow you to discard extra `}` fairly easily but your hash output won't match what you expect.",1537322919.0
capn_krunk,"You might check out [treetop](https://github.com/nathansobo/treetop). That may be helpful. [Here](http://thingsaaronmade.com/blog/a-quick-intro-to-writing-a-parser-using-treetop.html) is a quick overview/getting started tutorial to get you on your feet.

It may be tough getting around missing end quotes or end brackets / general lack of consistency in formatting. I'm not sure, but you can probably figure out a way to do it somehow, using treetop.

I'd take a stab at it myself but don't have my desktop and won't for a few weeks.

Good luck!",1537319587.0
AbeDrinkin,"If this data isn't human generated, the program that builds it must be intentionally sadistic and randomly generated. Is the data set at least static? I mean come on, nine open brackets and ten close brackets, the single quotation on Seattle... Are you trolling?",1537329126.0
expatjake,"Are the mismatched braces present in the real data too? That would seem to be the biggest hurdle. 

Also, how much data is there to process?",1537318832.0
losangelesvideoguy,"It seems like you're basically looking at a variant of the [shunting-yard algorithm](https://en.wikipedia.org/wiki/Shunting-yard_algorithm). In this case, you have essentially one operator which is `=`. You don't have to deal with any functions, so that simplifies things. The only thing you have to deal with is handling mismatched parentheses (braces in your case). You're just gonna have to come up with a rule for that. For this set of data, one potential rule is to simply discard a right brace when the operator stack is empty, but you'll probably have to be a bit more clever than that if your dataset is truly as awful as you describe. Though there does come a certain point where you have no choice but to throw your hands up and simply declare that that's what the data says, and if they don't agree, then it's the data that's wrong‚Ä¶

Anyway, the first step is to convert this into a meaningful array of RPN statements, which you can then go through and easily convert to a hash.

As for quotation marks, I would simply strip them out. Unless you're dealing with multiline strings, in which case you're probably hosed.",1537333954.0
another_josh,Do you know what program this is coming out of? Getting the documentation of the originating system will be worth a lot of time and effort as it will help you narrow down exactly what your parser needs to do. ,1537339984.0
faitswulff,Whitespace doesn't seem to be that difficult - you can just strip it out. But it really looks to me like you need a parser.,1537318672.0
tom_dalling,"It looks like you‚Äôll be writing a parser, my friend. I wouldn‚Äôt expect there to be _too_ many edge cases, but I don‚Äôt have the whole data set, so I can‚Äôt know for sure.

I would stick to a simple recursive descent parser, and avoid regexps as much as possible. ",1537335996.0
multiplegeorges,"Whatever you do, please come back and post your solution if you're allowed to by your job.

I think it'd be cool to see and would generate good discussion.",1537360362.0
prozaker,What happens when you do a JSON.load ?,1537318793.0
GroceryBagHead,"Yet another blog post about ""Our test suite is taking so long so we made it even more complicated to work with. Oh, and forget about running tests locally, it's all on CI now"". 

Would be interesting to read how they got to that state in the first place. Is the codebase super massive monolith that's impossible to split into multiple apps/engines? Or tons of system(feature) tests that just take forever to run? Overly complicated test setups with factories?

> ""spec/models/user_spec.rb"": 318.7685122489929

Over five minutes to run one file? What's happening there? How big is that thing? Maybe some stuff could be mocked/stubbed? Almost like every test there is re-encoding video files or something. So many questions.

Parallel testing is great though. Used https://github.com/grosser/parallel_tests with some success and it seems that something similar will be part of Rails 6.",1537319320.0
sshaw_,58 min 33 sec. I've seen worse. ,1537320763.0
ethboy2000,So you‚Äôre screwed if you‚Äôre a white male junior developer then? You don‚Äôt deserve any help because other white men became developers before you. ,1537344289.0
tastycakeman,"Saw this on http://ruby.social, figured I'd share here too.",1537300974.0
GroceryBagHead,"> Do you identify as being part of a marginalized or underrepresented group, whether based on your race, ethnicity, religion, gender/gender identity, or inclusion on the LGBTQ spectrum?

If you choose ""no"" don't even bother hitting that submit button. It's like the reverse ""do you have a criminal record?""

I think it's a great idea though. Funded by RubyTogether, it seems. Do they have the capacity to carry this though considering that they themselves exists due to donations and recently 37signals withdrew their support?",1537320790.0
bdemers,Every time I see Ruby think of this: https://www.youtube.com/watch?v=qObzgUfCl28&feature=youtu.be&t=50,1537363447.0
dameyawn,Sorting the array beforehand may help in large test cases. Then you're always removing the first and last elements and then inserting the difference in sorted order. I'd think that'd help if I understand correctly. ,1537288896.0
4rch3r,"I would approach this problem by trying to minimize the big-O of your algorithm.  I would research and understand http://bigocheatsheet.com/ for understanding the performance of specific data structures.

The main trick that I see here is that you can sort the list to utilize Array#bsearch. 

.





    def reducer(unsorted_arr)
      # sort one time to use bsearch
      arr = unsorted_arr.sort

      while arr.length > 1
        large, small = arr.pop, arr.pop
        diff = large - small
        next unless diff > 0

        # find index where it should be inserted to preserve sorted order
        at_index = arr.bsearch_index{|v| v > diff} || arr.length 
        arr.insert(at_index, diff)
      end

      arr.first
    end
    ",1537291709.0
rubyrt,"Is there a typo? You write ""subtracts the larger from the smaller"" and then ""If the difference is greater than 0"". This can never happen if you subtract the larger from the smaller.",1537460430.0
Yuanlairuci,You can get both numbers in one pass by just iterating through the array and updating the values as you find larger ones. Then you perform the subtraction logic and call the method again on that new array. Recursion is your friend for things like this.,1537302287.0
Freeky,"> I am not sure if synchronize is needed for a method which does not change the state such as notify‚Ä¶

Yup.  You may not be changing state, but you're depending on it: other threads can add or remove elements from the array while you're iterating over it.  You can end up visiting the same element more than once, or skipping elements entirely.

Mutexes also add memory barriers, which are needed to guarantee you actually see values changed in other threads.  Consider what the VM sees when you have:

    i += 1 while @running

Nothing changes the value of @running, so this is just an infinite adding loop.  You changed it in another thread with a mutex?  Great.  There's no mutex in this thread, so nothing to tell the hardware or the VM that the value can change: it could optimise out the check completely, cache it in a register or on the stack, or the CPU might keep it in L2 and never revalidate from memory.

The worst bit is it might well actually *seem* to work just fine, but it will only be doing so by accident, and might well stop doing so if the environment changes.",1537290656.0
shevy-ruby,"What a horrible, awful suggestion.

Please don't listen to these suggestions.

Instance variables are most definitely never a problem. It is even more nonsense what he refers to because you can manipulate instance variables at all times via setters and getters (instance_variable_set for example).
And ad-hoc remove them via remove_instance_variable.

What he rather means is access control by default - and that REALLY has nothing to do with ""not using instance variable"" if people properly designed their classes from the get go.",1537346357.0
mperham,"That's a pretty impressive support timeline.  My experience has been that Ruby 2.0+ is much easier to support.  If you're going to drop 1.8, you might consider ripping off the band-aid and drop 1.9 also.",1537289442.0
bugant,Go ahead! If someone want to use the old versions and find them to download is pretty fair.,1537295707.0
tubbo,"I'm surprised you folks at Phusion are still supporting 1.8, but either way, thank you for all your Passenger work over the years!",1537312505.0
mikegee,"It seems fine to me, but I feel like keeping up with news in this space would tend to correlate with keeping your software up to date. So, the folks seeing this, your blog post, or the Github issue are unlikely to be the same people that have a vocal opinion against the change.

Best of luck to you and thanks for all your contributions!",1537313783.0
classhero,"My suspicion is that a lot of enterprise has already moved off of 1.8 (given security EOL), so yeah. RHEL and friends are a different matter. ",1537327552.0
shevy-ruby,"I would have dropped support for ruby 1.8.x sooner.

It's cool on the one hand to be able to support old versions for a long time - but on the other hand, it also shows that the people who are using ruby, yet DO NOT UPDATE, are no longer actively using it (since they stay on an old version; anyone who is active can easily port ruby to newer versions. I know myself because I did so back in the day.).",1537346133.0
sshaw_,"Not too surprising 1.8 and 1.9.3 are still supported. Passenger came out in the 1.8 days when the app server options were limited and RHEL, Fedora, Debian are popular distros that ship or have shipped with old rubies. 


",1537402918.0
sdn,Have you considered Rust?,1537292725.0
muzfuz,"Given that many Ruby devs seem to also be picking up Go, this would seem to naturally make sense.

I have great experiences writing Go personally.  The only issue for me is the vendoring / modules ecosystem is still kind of broken, but there are fixes for that on the horizon.",1537341765.0
jeremywoertink,"Since passenger was geared towards ruby, it would be awesome if it could be redone in Crystal. However,  I also understand that Crystal isn't at the level needed for this kind of scale. Especially with the enterprise level of passeneger.

But as a ""pipe-dream"", having you guys contribute to crystal making it a viable option would be pretty exciting stuff. ",1537316315.0
MakeItEnd14,"No point in spending an eternity choosing a language especially in an already existing and successfull project.

Pick some small parts and do a rewrite in a few languages and and see how things progress.
Try Rust, Go etc... (Never did serious Rust but god are those compiler errors nice) Try the options that you considered in the blog post.",1537338319.0
zitrusgrape,"gralvm with native?
they already have:

- java
- llvm
- ruby
- python
- js
- java 

and they say is fast. faster than ruby/js/python.  I guess a java-rack is already there, as done by jruby guys :)",1537304116.0
,[deleted],1537282447.0
chrisgseaton,"I try to write down a question for every talk I watch, and then find the speaker afterward and ask them it. This means I've got a purpose during the breaks and a reason to find people and connect with them. Speakers really appreciate questions about their talks as well.",1537268255.0
ignurant,"The other attendees are unusually friendly. The social aspect of it is important, as it creates many interesting, thoughtful conversations and connections. Prepare to be inspired.",1537276656.0
elevenbooks,First time attendee as well (also not as an opportunity scholar). DM me if you want an expo hall buddy or something.,1537280650.0
2called_chaos,"A missed opportunity to demonstrate how return behaves in cases like this (implicit and explicit) or the general flow (e.g. add puts before each return to see what I mean):

    def foo
      raise if Time.now.to_i.equal?
      return ""foo""
    rescue
      return ""ouch""
    else
      return ""else""
    ensure
      return ""am I sure?""
    end

But a good article nevertheless :)",1537280221.0
sammygadd,"The example in ""return and assignment methods"" is not really correct. The method x= is not called and a local variable x is assigned instead. If you instead use send(:x=, 3) you will see that the return value is not ignored.
Otherwise, thanks for a nice article!",1537283213.0
tom_dalling,"Hi Andrzej,

Thanks for doing this Q&A.

If you're implementing a new feature, and it needs to process a lot of previous events, how is that implemented? Do you just query the event database whenever necessary? 

What if this new feature doesn't have access to the event database (e.g. a separate microservice)? Do you have to request the other service to replay its events across a bus, or something like that?",1537262602.0
NilsLandt,"A few years ago, I wrote an application with heavy use of event sourcing for a customer.  
Some months ago, I made it GDPR-compliant. Some events were unaffected, but some heavily, and I can't reconstruct state from the event log any more.  
I still see value in doing event sourcing (a censored log being much more useful than no log at all), but we lost the big benefit of being able to say ""show me the state on July 12th at 09:34"".

I don't really have a specific question, more ""what has been your experience with event sourcing in a GDPR world?"".",1537291538.0
tubbo,"i have a question: what the hell is ""event sourcing""?",1537312171.0
sancarn,"So I've been making a Ruby [Console](https://github.com/sancarn/RubyConsole) and recently I wanted a better way to display objects and symbols, because originally I was using JSON to transfer data between the REPL and the client... So all symbols were being converted to strings, completely confusing a lot of things unless you had prior knowledge of the function... Making the console kinda useless...

I made this library to give me an actual 1-to-1 representation of a Ruby object in JavaScript, as I spent a few hours googling and couldn't find anything else that would work.

Currently all objects are supported apart from recursive objects. That's next on the todo list! Then will come serialisation on the javascript end and (hacky) deserialisation on the ruby end

Anyway, thought it may be useful to others.",1537225992.0
pedrozath,"I wrote a music theory library [https://github.com/pedrozath/coltrane](https://github.com/pedrozath/coltrane). Ruby is a fantastic language to write anything! (except for native desktop applications or real-time games)

Think about someone's problem that you could help. Or maybe one of your own!",1537238650.0
shevy-ruby,"I think you need to find some area that you personally have an interest.

My projects in ruby, say, ""top six"", are these, roughly sorted by the amount of time I have invested into them:

- A project to compile/install programs called ""rbt"" (ruby build tools)
- All my smaller tidbits and pieces of code about ruby things called ""roebe""
- A bioinformatics-related project called bioroebe (ironically it is supposed to be my primary project, but both rbt and roebe sort of are more ""active"", due to various reasons)
- A fake-wannabe ""web-framework"" called cyberweb
- A project for studies/exams called ""studium""
- A shell that once tried to be usable like bash, called ""diamond shell""

Anyway. The details about these projects are not that important. The more 
important part is ... these were created because I needed this or that functionality,
and collected them when fitting. Not all of them are a lot of fun ... and fun is 
very important, otherwise you may quickly give up.

The project I am investing most of my time presently, and since quite some time,
is rbt though, since I use it to compile literally everything on my linux machine.
I track about 3500 projects so far, roughly. It's still a fun project.

I think you should focus on some area that you find interesting or fun, and go there.

Work some code, think about how you can write code that solves some problems,
add to the project regularly (can be over many different days) and so forth. You'll
learn a lot by just keeping on using and re-using and extending the project.

Once you wrote quite some code, I recommend putting it into a gem. Even if you
think nobody else will use it, being able to publish code quality-wise for other
people to use will be a step ""up"" in many ways, so it should be done eventually.",1537229459.0
hodgesprog,"Some ideas, some of which I've written for personal use:

* Write a scraper - maybe curl and [nokogiri](http://www.nokogiri.org/). Scrapers can be a lot of fun.
* Slack bot (or another chat client, using [botkit](https://github.com/fnando/botkit))
* System maintenance - i.e. i backup a lot of my dotfiles more frequently than I backup my whole system
* Twitter or Reddit bot
* Reddit API stuff - I wrote a reddit client formatted to look like my text editor...",1537229519.0
zverok_kha,https://github.com/zverok/lmsa Here is my personal list of projects (existing ones and ideas) that I (15+ years of Ruby programming) would like to help/mentor less experienced Rubyists to work on.,1537265847.0
mhink,"Look into the FUSE bindings for Ruby! I‚Äôve been meaning to mess around with them for awhile now- if you‚Äôre on a Unix-based system, you can literally write Ruby programs which respond to file operations (think `ls`, `cd`, and `cat`) as input. Cool stuff, especially when it‚Äôs just for fun.",1537239585.0
three18ti,Learn Chef and automate something!,1537249355.0
ralampay,You can probably play with the thor gem and write a stock monitoring app for the console.,1537254844.0
stiggz,Write a roguelike,1537239022.0
Saithir,"To not duplicate ideas that already have been posted...

- Write a [transpiler for another language](https://github.com/marcinruszkiewicz/kaiser-ruby)
- Or maybe [a game](https://www.libgosu.org)? 

Basically finding something that is interesting for you is the way.",1537255544.0
strzibny,"Vagrant.

You can either contribute directly to Vagrant, to many of the plugins or create new plugin for it.",1537291171.0
binarygold,Write code that archives tweets from a given twitter account into a google sheet. If you want to take it up a notch archive the images on the tweets into a google drive folder as well and name them after the tweet id. ,1537275557.0
jjyr,"Two suggestion for you:

1. Find an interesting project and try to contribute to it.
2. Try to implement some RFC or specification you personally interest.

BTW, I am working on a blockchain implementation [https://github.com/ciri-ethereum/ciri](https://github.com/ciri-ethereum/ciri) , is fun to use Ruby to build some foundation libraries.",1537281615.0
HelloAnnyong,"I would advise you against using any of the solutions offered in this thread. They're confusing and not idiomatic.

You could conceivably use `yield_self` (introduced in a recent version of Ruby) like so,

    a = 5.yield_self do |b|
      b * 2
    end

At least that's built into the language.

But I would just suck it up and either extract a function or have an extra local variable.",1537222803.0
olbrich,"you can do this..

    a = ->() { 
      b = 5
      b * 2
    }.call
    
    # => 10
    
    defined? b
    # => nil",1537219301.0
how_do_i_land,"If you don't mind me asking, what is your use case?",1537220917.0
moomaka,"    module Kernel
      def block
        yield
      end
    end

    a = block do
      b = 5
      b * 2
    end
    # => 10

    defined? b
    # => nil",1537220000.0
morphemass,"Surprised no one broke out `a = instance_eval do` rather than `a = begin` (see class_eval and module_eval too since these are the tools to manage scope gating) but as others have said, don't try and transpose language concepts; scope management is different in Ruby (and you'll seldom need to worry about the GC) and it affects how you write code (usually one would just `def b` in an appropriate module or class if the scope is an issue). If you are *really* interested there is a local variable construct (`|;var_name|`) to specify local scope but I've never had reason to touch it. 
",1537226635.0
WhoTookPlasticJesus,"FWIW I work around this language limitation by prefixing all block variable with `_`, e.g.

```",1537232451.0
phaul21,"I think it's worth mentioning that `begin; end` does not introduce a a lexical scope to which local variables are bound to the same way as `do; end` does. That is the main reason why b is defined? after the begin; end block and why yield_self or any other solution with do/end blocks like instance_eval work with some caveats in the sense that b is not leaked out of the block.

The main caveat with the do/end block is that if the parent (in the sense of containing) lexical scope defines the local variable, the block will use the outside variable instead of defining a new one. There are some really bizarre behaviour related to blocks and local variables, for instance:

    a = 1 if false
    1.times { a = 2 }
    a # => 2

however

    1.times { a = 2 } # !> assigned but unused variable - a
    a # => 
    # ~> -:2:in `<main>': undefined local variable or method `a' for main:Object (NameError)
",1537276724.0
rubyrt,What do you need that for? If you have so many variables and your scope is so large that you risk getting confused or making mistakes chances are that you better refactor the code into smaller chunks anyway.,1537252453.0
Croustiboy,"Hello,

One thing that I think is :

    a = instance_eval do 
      b = 5
      b * 2
    end

In ruby, blocks (`do ... end`, `{ ... }` ) are closures : variables declared within blocks are not visible outside of them.

\`instance\_eval\` is an easy way to have a block immediately executed (whithin the context of you current object).

You can achieve the same result with lambda too :

    a = lambda { 
      b = 5
      b*2
    }.call

You'll notice here that `call` is immediately called so that the lambda is immediately executed.",1537347998.0
yeuxwbbw,"Like, can I just ""goto"" view-source:[https://www.energy.ca.gov/almanac/transportation\_data/gasoline/retail\_gasoline\_prices2.html](https://www.energy.ca.gov/almanac/transportation_data/gasoline/retail_gasoline_prices2.html) for example?",1537209182.0
guitaronin,"Try using the [mechanize](http://docs.seattlerb.org/mechanize/) gem.  It won't handle javascript, but I don't think you need that for this particular webpage. And it will be MUCH faster than automating a browser.",1537212358.0
yeuxwbbw,If you want to use the program just install watir-webdriver and download chromedriver (mv to path).,1537209429.0
shevy-ruby,"There are lots of small things you could do. The speed-gain may be quite small though.

For example:

    if ( response =~ /yes/ )

If you only check for the substring 'yes', use:

    response.include? 'yes'

instead. The regex engine is great but it is a bit slower
than .include?

For batch-fetching, I assume javascript may have to be used.
Perhaps someone else has some idea for better caching. You
can also try to use only a subset of watir, like by ... writing your
own minified variant. :D",1537229086.0
menge101,"As for your code, the first thing I would do, is to separate the interface from the actual logic.

Then I would write classes for interfacing with  your data sources.

And most importantly, i'd write tests.

",1537211838.0
seainhd,You can also cache the gasoline prices per day...,1537334592.0
mattgrave,Impossible to read on mobile due to a popup that is bigger than the screen. ,1537187090.0
ClemDev,You're a tech company that creates a website impossible to read on mobile? Genius!,1537207238.0
HomemadeBananas,Self promoting for your site that you can‚Äôt even use on mobile? I‚Äôm better off just reading the docs...,1537207919.0
jasdeep13,Article is pretty poorly worded as well. Appreciate the effort though. ,1537215737.0
zverok_kha,"It is funny (but in a sad way) how much authors of new ""functional libraries"" for Ruby hate the language, its ways, and idioms. 

But probably we deserve this.",1537176224.0
plainly_stated,"Looks like you lost the @ in front of order. It should be @order, to refer to what you set up in the controller.",1537158382.0
jrochkind,"Woah, how did I not know about capybara `live_debug` method?

Except I can't find any docs for it, and the string `live_debug` does not show up in capybara source.... https://github.com/teamcapybara/capybara/search?q=live_debug

Where is this coming from? A particular capybara driver? Some third-party thing? Only things I can find googling for it are gitlab related, is this something gitlab has added?

Looks like yes, and looks like it's fairly simple: https://github.com/gitlabhq/gitlabhq/blob/7d3bbeeb31731907456e8c4d5640e52e58a921fb/spec/support/helpers/live_debugger.rb

Woah, if this actually works, this will change my debugging life. ",1537154082.0
bikemowman,"Yes.

The `if` statement will be evaluated based on the truthiness of the return value from `@user.update`.",1537145772.0
DoubleJarvis,"People in this thread already answered original question, but as a side note: be careful when using this technique, and always think about return value of performed operation. While `@user.update` returns `true` when operation is successful and `false` when its not, there are some operations in ruby that always return `nil` (falsey value), an example being `puts`. Therefore code like

    if puts ""something""
      p 'i printed something'
    else
      p 'i havent printed anything'
    end

will always mislead you and do pretty much the opposite

    something
    ""i havent printed anything""
    ",1537181569.0
jeremywoertink,Can you give an example of some syntax that confuses you? Maybe something you saw that you just didn't understand? Or maybe explain what about ruby confuses you? ,1537137547.0
hiffy,">(I really don‚Äôt consider this true web development as it‚Äôs so batteries included).

If you get a working website at the end, it's true development - no matter what you work in.",1537143523.0
chris_software,"Maybe it‚Äôs blocks. Have you tried reading a book? Not sure if they‚Äôve finished this particular tutorial, but this site is great for starters: https://www.learnenough.com/ruby-tutorial",1537138693.0
blueajna,Try Codecademy‚Äôs Ruby path. It helped me a bunch! (Free),1537139328.0
BadMinotaur,"The great thing *and* bad thing about Ruby is that it lets you code how you want. It can be bad because as elegant as Ruby is, it‚Äôs way too easy to write clever code for the sake of being clever; which means if you‚Äôre reading someone else‚Äôs code, they might have some truly esoteric constructs in there. ",1537144628.0
ignurant,"I don't remember where I stumbled upon this PDF, but I saved it about a year ago as a ""helpful to new rubyists from other languages"" document: 

https://courses.edx.org/c4x/BerkeleyX/CS-169.1x/asset/handouts_slides_04_ruby_continued.pdf

The thing that's great about it is that it does a quick overview of the mindset of what you are looking at when reading Ruby code. There are a few concepts that are very important to understand that are unique to Ruby, and used absolutely everywhere.

I hope you find the document useful... I wish I could find the source page I originally found it.",1537145532.0
coldnebo,"Ruby‚Äôs syntax isn‚Äôt that different from Python. This might help you go back and forth:

https://www.differencebetween.com/difference-between-ruby-and-vs-python/
",1537146581.0
jrochkind,"I was going to ask if you've done any object-oriented programming before, because that was something that was hard for me in my first OO language... but you say you're pretty experienced with Django, which is python... which I haven't done too much of, but I think of python as pretty similar to ruby, and OO. 

So... what have you tried doing to learn ruby? And what part(s) confuse you?

You could try: https://www.techotopia.com/index.php/Ruby_Essentials",1537151380.0
to_thy_macintosh,I got a lot out of [Ruby Koans](http://www.rubykoans.com/).,1537170693.0
bumpingtrolleydemons,"You should read Why‚Äôs Poignant Guide to Ruby. It is both entertaining and educational. I cannot recommend it highly enough, and it will help you get familiar with ruby‚Äôs syntax. 

Best of all its free online: https://poignant.guide/book/chapter-1.html",1537145777.0
Mike_Enders,if you are a video learner there are many free  series on youtube. If you have grasped Django with Python you can get the hang of Ruby and rails. They are of course very different but the learning curve is near the same in my experience. There are  ways in which Python seems more intuitive and ways  in which eventually Ruby will seem more intuitive.,1537146354.0
zverok_kha,"Let me try :) 

First, have you read through any of Ruby references/tutorials, anyways? Or you just try to jump into the code hoping ""it will just come by itself""? (It MAY come, at some point, but probably spending just, like, half of the day on skipping through any of the knowledge structuring material may save a lot of time?) There are many online (including a [terse checklist](https://www.ruby-lang.org/en/documentation/ruby-from-other-languages/to-ruby-from-python/) ""how Ruby is different for Pythonists""), but I'd shamelessly suggest a reference, compiled by yours truly from official docs in docbook-alike format: https://rubyreferences.github.io/rubyref/).

Second, just as a wild guess, what _may_ break the understanding for somebody coming from Python, is probably two things:

1) Ruby is in some sense ""more object-oriented"": when in Python you'll typically have ""data type + free library functions to process it"", in Ruby you'll typically have ""data type has methods for any processing in this data type"", so standard types reference is where the _most_ of language functionality should be found. Small example:

```python
    # python
    a = [1, 2, 3]
    map(lambda x: x*x, a) # Python: mapping an array is a free library function
```

```ruby
    # ruby
    a = [1, 2, 3]
    a.map { |x| x*x } # Ruby: it is Array#map method
```

2) Concept of code blocks (this `{ |x| x * x }` thing above). They are a bit like Python's `lambda`, but a) much more powerful (can contain any amounts of code), b) is a separate data type Proc, not just anonymous method like in Python and c) heavily used to organize code, this is typical for Ruby:

    some_array.map { some block}
      .select { other block } # it is like Python's filter, but ""chained"" to previous result
      .group_by { even other block }

And third, could you post some examples of syntax you don't understand? I am a long-time Ruby mentor, and maybe I'll have enough knowledge and patience to explain :)",1537159004.0
shevy-ruby,"If you know python, why would the syntax of ruby be confusing to you?

I started with ruby but I also know python and the syntax in python has never been confusing to me; neither the syntax in ruby. The major difference is that ruby's syntax is more flexible due to the parser being less strict. No need for mandatory () in most cases for example. But you can use literally the same syntax that you use in python, and use it in ruby - so I don't understand why this part can be confusing.

I assume you refer to code written by someone else. Well here you have to keep in mind that people can write shitty code. So I assume you refer to others writing ruby code.

What I myself usually do is transform code written by someone else into my own personal style. This may be hard if you e. g. have to work on shopify code but it helps me personally a lot to  use my own style - since my style is very simple and very easy to understand (for example, I also use  () in method definitions if there is at the least one argument; others omit the () which I can understand but I hate that)",1537168925.0
nakilon,Excellent example what happens to people when they code in Python for too long.,1537148644.0
greymalik,You should read [this article](https://schwad.github.io/ruby/rails/community/2018/09/06/how-i-got-my-first-pull-request-merged-on-rails-core.html) and check out [Code Triage](https://www.codetriage.com/).,1537103992.0
intentions_are_high,"I know large OS projects are intimidating but a lot of them lack some documentation. Have you considered learning the codebase a bit more and starting by contributing documentation? I know it‚Äôs not glamorous but is truly helpful do the maintainers and community of users. Plus, you‚Äôd be surprised how much you learn about ruby and the codebase that you‚Äôll be able to contribute as issues are found. ",1537102909.0
shevy-ruby,"I myself don't - not because I could not need help, but my projects are mostly hobby-based, so I can't really commit more time to them, compared to other activities (most of which have nothing to do with computers at all).

Having said that, though, in the long run I would advice to look into areas where you yourself, for whatever the reason, have an interest in improving something - be it the code, documentation, getting people to know a given project ... you name it.

If most issues seem to be too complex, again, look at where your own interest (and thus motivation) may be best and start improving there. Often things emerge out of this where you can make improvements.",1537124153.0
jb3689,I'd love help with [spy_rb](https://github.com/jbodah/spy_rb). I use it regularly in testing at work and have a few features I'd love to see. I'm really interested in how we can use it to do things beyond testing (e.g. can we add/validate YARD type annotations to our code just by running our test suite?). It goes a bit deep into Ruby but the project is pretty small and has a lot of tests and examples. I'd be happy to coach you on features - the biggest issue for me has just been time,1537105042.0
jrgns,"I working on a couple of opensource projects and would love to get some help. In order of size:

* sequel-elasticsearch : Automatically replicate your RDBMS data to Elasticsearch. The project os fairly complete, but I want to add more tests, and a couple of features, specifically making the syncing asynchronous. https://github.com/jrgns/sequel-elasticsearch 
* Ditty : An opinionated Web Framework built on Sinatra and Sequel. I'm busy building out the authentication features (using Omniauth), and there's a couple of other cleanups, fixes and extensions that need attention. https://github.com/EagerELK/ditty 
* ProxES : An Elasticsearch management and monitoring tool built on top of Ditty / Rack / Sinatra. There's a couple of tests and features that needs attention. https://github.com/EagerELK/proxes 

As mentioned elsewhere, like a lot of OS projects, all three will benefit from more documentation, as well as howto guides. Some of them already have issues you can look at on Github, otherwise feel free to chat to me about what you can do to contribute. ",1537109033.0
jeepers101,"Sweet, thanks for the replies everyone, I'll look into them.",1537111713.0
lzap,Well ours might be a challenge but www.theforeman.org,1537166775.0
editor_of_the_beast,No one in that thread knows how to read.,1537099604.0
technicalpickles,"For some context, eileencodes is working on multiple database support for Rails 6. Her Railsconf talk earlier this year goes into more detail  https://youtu.be/DQMxvGYyu6Q (database part around 17 min mark)",1537110901.0
jb3689,"We have around 10-12 databases we connect to (maybe more considering locale-specific and read-only slaves as well as some env-specific databases). We have it all specified in YAML and have wrappers around AR::B for connecting models to those. We have a ""common"" YAML config which specifies all the base connections and hosts.

The biggest pains we have (keep in mind the team had little Rails experience and things just grew - I just joined):

1. Having a flat YAML file for all of this gets complicated really quickly

2. Our team doesn't check-in `db/schema.yml`. This kind of makes sense considering we don't own all of our databases and we have multiple databases we connect to

3. Migrations are only setup to run against one or two databases. We only own one or two; we use branches to specify which database and connect explicitly

Overall it's kind of a mess. I recently reworked our testing and made the following changes for our test setup:

1. MySQL dump the schema/seed data (we had tests relying directly on data; don't ask) of each database we need for tests

2. Bootstrap a single dockerized MySQL host with each of the required databases; restore the dumps into that host. Specify all the config in a `database.yml` (which again has everything living on one host - not true for prod setup). Prior to this everyone's test were hitting RDS instances (again, don't ask)

3. Run any pending migrations and apply `db/seeds`

So the biggest issue we're having is managing the configs for databases on multiple hosts. In terms of specific YAML keys we do something like `#{db_name}_#{env}#{maybe_slave}#{maybe_locale}`. We use tons of YAML inheritance and the config is flat (i.e. no nesting databases in our config)",1537104849.0
westonganger,"I wrote a small article about this a back in 2015, [https://solidfoundationwebdev.com/blog/posts/connecting-models-to-different-databases-in-rails](https://solidfoundationwebdev.com/blog/posts/connecting-models-to-different-databases-in-rails)",1537112046.0
honeyryderchuck,Will it be done for active job configuration stuff? Redis sharding? If the users ask mucho?,1537118197.0
ioquatix,"How do you even use YAML to do this? In the end, I gave up and created https://github.com/ioquatix/activerecord-configurations",1537098426.0
Gluaisrothar,"Surely a microservice pattern or SOA would be better.

Multiple databases in a single app has a bit of code smell, you've separated your data, but you still have a monolith.",1537115564.0
garuspl,What exactly is she expecting to see? Rails has no structure inside database.yml for handling multiple databases in one environment.,1537100719.0
toadkicker,I too would like my unicorns covered in dark chocolate,1537101465.0
pikopuyo,"I guess you're lost, this sub is for the Ruby programming language",1537038153.0
realntl,I can't understand why the expressiveness of assertion failure messages matters to people so much.,1537048817.0
polarpress,You can use passenger nginx ,1537029794.0
isjhe,"They'll both fire up a web server,  but they're pretty different. You should deploy with puma or similar. What's your deploy target?",1537028089.0
tk425,"Bundle exec is just a way to run a command with your Ruby environment all set up correctly. To know the difference you'd need to just Google ""what is Ruby rack"" and ""what is Ruby puma""",1537048621.0
knappj,"Bundler and rubygems makes all our work infinitely better, consider donating to keep development alive! 

https://rubytogether.org

Edit: I'm not associated with rubytogether.  I just dig the work they do. :)",1537058872.0
electrostat,Can you see the network request going through when you load the page in the network tab of the browser's debugging tools?,1537020853.0
moomaka,"Have you checked the ajax request in the browser? That it's firing, succeeding and returning the correct data?",1537021140.0
badg35,"It appears that I was using the jQuery distribution (""slim"") that did NOT include Ajax functionality:

    <script src=""https://code.jquery.com/jquery-3.2.1.slim.min.js"" integrity=""sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"" crossorigin=""anonymous""></script>

When I switched to the implementation with Ajax, things worked as expected:

    <script src=""https://code.jquery.com/jquery-3.2.1.min.js"" integrity=""sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="" crossorigin=""anonymous""></script>",1537193101.0
isjhe,"When you initialize select2 with data inline, you're giving the `data` property an array of data. When you're fetching it remotely, you're giving `data` an object with a key of `results` that is holding your array of data. Try changing your response structure or look if select2 has an option to preprocess retrieved data.",1537025523.0
world_on_wheels,"Just curious, why not stackoverflow?",1537026088.0
omerraker,"If you have never worked with ruby, learn ruby properly: [Ruby Programming Language - Full Course](https://www.youtube.com/watch?v=t_ispmWmdjY). Afterwards, you should check this videos: [Ruby On Rails In 60 Minutes](https://www.youtube.com/watch?v=pPy0GQJLZUM) and [Ruby on Rails Tutorial](https://www.youtube.com/watch?v=GY7Ps8fqGdc).",1537000193.0
world_on_wheels,That‚Äôs something I was looking for! Thanks :),1537017723.0
hodgesprog,"Nice - and starred! I appreciate that you included something as simple as storing regex in a variable. Using variables (with a good name) helps readability - though with complex regex I find a comment is still needed. In that spirit, I might submit a PR with some guidelines around that.",1537278239.0
sshaw_,You should use [`public_send`](https://ruby-doc.org/core-2.5.0/Object.html#method-i-public_send) instead of `send`.,1537013970.0
TextileWasp,"You use send on your object
https://ruby-doc.org/core-2.5.1/Object.html#method-i-send


yourObj.send(‚Äúzoo‚Äù)
is the same as
yourObj.zoo",1536974554.0
Shaper_pmp,"There are ways to do this, but it smells badly like an antipattern, like asking us ""how to sharpen a screwdriver"".

Can you explain what problem you think this is the solution to, rather than presenting us with a solution and asking how to implement it?",1537006891.0
rob_old,"The straightforward way to turn a string into code: [eval](https://ruby-doc.org/core-2.5.1/Kernel.html#method-i-eval). Not to be touched if there's a whiff of user input anywhere near it, and generally considered harmful.

&#x200B;

I'd try and treat it as two distinct problems- turn a string into an object, and turn a string into a method invocation. The latter can be accomplished with [send](https://ruby-doc.org/core-2.5.1/Object.html#method-i-send). The former is actually a bit trickier. I know you can get a class name with [const\_get](https://stackoverflow.com/questions/3163641/get-a-class-by-name-in-ruby), and obviously call .new if you don't care about the specific instance. But to get a specific instance of that object from a string without using eval... that I don't know how to do.",1536976360.0
SureLetsDoAnother,"Are you using this to solve a real problem, because it seems strange from the outside.

As others have mentioned, you can use [Object#send](https://ruby-doc.org/core-2.5.1/Object.html#method-i-send) to dynamically send messages to objects. But that means you need to know the receiver, the method name, and the arguments.

The least complicated scenario is one where you only handle class methods that accepts no arguments.

Otherwise you're handling cases where you're finding an object using it's `object_id` (assuming that's possible in your environment) and hoping it's still around, or you're attempting to instantiate an instance using the class name. Or maybe something else that I'm not thinking of at the moment.

Regardless, it seems like there'd be a lot of complications for a real world solution.

But if it is the right way to go, I'd be really interested in hearing what the problem is.",1536991382.0
toadkicker,I think the way to approach this safely is to delegate it to method missing. Ruby can match a string or do whatever crazy thing you want then with your method names.  https://www.leighhalliday.com/ruby-metaprogramming-method-missing,1536991624.0
shevy-ruby,"Ruby is an OOP language.

.send() your message on the target object.",1537003081.0
unflores,"The real answer is ""very carefully"".",1537022471.0
Slimy_Hog,"Do you want to know ruby? Then learn it.

I don't really get the question ",1536962369.0
recycledcoder,"From my point of view, Ruby is a powerful, expressive language. 

The objective of ""software"" is usually to solve a business problem. Ruby is as capable as any other language of doing so. 

The objective of ""source code"", however, is to communicate with other people. This is where Ruby shines. Its expressiveness, and tendency towards DSL-building makes it a better-than-most tool (best of breed?) to effectively, transparently, fluently model business domains.

Beyond the technical and ""literary"" merits of the language, there are also two crucial areas in which Ruby excels:

* The culture. Ruby has a vibrant culture that strongly favours good software engineering. This has an ""osmosis"" effect on new practitioners. Its TDD/BDD environment is best-of-breed
* The ecosystem. Very strong toolset, rich gem environment, plentiful frameworks, very much a ""batteries included"" kind of approach, with integrations for most IaaS / PaaS / SaaS ready to rock out of the box

It also has a low barrier to entry, which means you can ""kick the tires and light the fires"" and get a learning journey / project off the ground quickly and delivering value.

I could not think of a better language to learn in 2018.",1536963466.0
joshmn,"> Dear /r/android : is there any reason to get an Android device in 2018?

It really depends on what you want to do. 

Programming languages are just languages. They all do the same thing ‚Äî convey meaning and provide dialog. Some do things better than others. Some are more enjoyable to speak (write) than others. Some are more expressive by default, and some are more verbose by default. 

Ruby allows for great creativity out of the box while being clean and elegant. It does what you tell it to do. And despite what many non-rubyists will tell you, it's still very widely used.

""It's slow"" is a common knock, and while it's not an invalid statement, you could argue it's a nearsighted one. For the 99% of us that will never hit scale on any of our projects, Ruby is fast enough, and what it loses in sheer iterations per second it makes up for in myriads of other ways.

It's not necessarily impressive to know Ruby anymore, if it ever was. It's not cool. It's not hip. It's not what makes the front page of HN anymore. 

But it is an absolute joy to write in, and I'll forever be hard-pressed to find another home anywhere that I'm as productive in.",1536967402.0
keyslemur,"The issue always present in these type of questions is I'm hard pressed not to assume someone's just trolling. I would encourage you to use the search feature, as this is a common question and likely to only net you a lot of downvotes.",1536964567.0
kwerle,"Grab the 7 languages book (https://pragprog.com/book/btlang/seven-languages-in-seven-weeks).

Learn a bunch of stuff.  Including some ruby (and why ruby is awesome).",1536969233.0
proyb2,"You can probably learn Ruby and Crystal languages side by side: for productive and for performance.

Then offload intensive works that usually demand big amount of resources to Crystal.

I have always see no reason to pickup Ruby until I learnt some Crystal code often faster than Go.",1536980857.0
jonnyman9,It's just another tool in the toolbox.,1536960770.0
OverflowingSarcasm,"What's your favourite language, or the one you have the most experience in?",1536972242.0
shevy-ruby,"Sure - why would the year matter? Do you make your choices based on what others do? :>

Ruby is an awesome language. Obviously whether you need it depends on your use case and that is something only you can answer.

I use ruby for - literally - everything that has to (or can) be done on the computer, including www-related tasks. And I don't even use rails.",1537003854.0
takaci,I have a more specific question. Is there are reason to learn ruby if you don't do any web dev?,1537184054.0
Vangoghbothears,"I get weekly emails from Ruby Weekly, and I learn so much cool stuff from them. There‚Äôs a good balance of content each week, and usually enough that it doesn‚Äôt feel like I have to read the articles I‚Äôm not interested in. 

Look up some Ruby/Rails conferences. A lot of times, once one passes, several of the talks will be published online for the public to see. 

Also, there are several good channels I use on YouTube to learn new implementations and other skills. I could post if you‚Äôre interested. Just on mobile at the moment. ",1536929090.0
RepSchwaderer,https://schwad.github.io/favorite_resources/,1536934176.0
jrochkind,"I run a news/blog aggregator that you may be interested in. http://rubyland.news

As I see what's at the top now, there are a bunch of podcasts, for better or worse. Not actually my favorite, but there are several pretty decent ruby podcasts these days. ",1536941335.0
knappj,"For what's new: https://github.com/rails/rails/commits/master

For more context on what's new: https://weblog.rubyonrails.org


*Edit*. The same goes for Ruby.",1536924864.0
sickcodebruh420,I look at release notes for new versions and still don‚Äôt upgrade unless I see something extremely compelling. ,1536928806.0
mphoyu,"Take a look at this: http://watir.com.
It seems to be just what you want and is powered by Selenium.",1536928561.0
RockMeetHardPlaces,What is AHK?,1536926552.0
shevy-ruby,"First, I applaude you for the good documentation.

I do have one specific suggestion for improvement - and that would be to provide a test file such as in the example used:

    f = File.open(""SPELLS.BIN"", ""rb"")

I am not referring to that particular file, but any example file that may be small.

The reason why I suggest it is primarily so that it can help other people new
to the field ""up and started"" to see what is going on, including how the gem
works.

So TL;DR - please consider also providing a small (binary) example file. (In
the long run perhaps also add a sample/ or test/ directory or so but this can
be added at any later time when you feel that there should be some tests
that is; I assume right now ByteInterpreter is very small, so not sure if it is
worth to make it somewhat larger if your aim is to keep it super small).",1536909585.0
three18ti,"> I was curious about what it takes to build a serverless platform.

> Server specs

\#@!$%#&@%!&$%*@^!

Kidding aside though, this is really cool! One of my biggest problems with other self hosted FaaS solutions is that they're overly complex requiring obscene amounts of infrastructure to ""just run a function"". This seems super straightforward and easy to configure/manage.",1536875266.0
JacSmash,That‚Äôs pretty cool,1536872878.0
Hell_Rok,"This seems really cool but I have a couple of quick questions:

1. It looks like all functions will be hosted on your server, any chance of releasing the server code?
2. Do you plan to monetise this down the road?
3. If not, how do you plan to maintain this project if it gains traction?
4. Do you do any fancy stuff to hold the method in memory or is it a fresh ruby process every request? From the looks of the response time I'm guessing it's the latter",1536885285.0
LemonAndroid,"The idea is good, just needs to be more convenient. 

Have a look over at what the StdLib people are doing with code.xyz.",1536924510.0
aemadrid,very interesting. need to spend some time playing with this,1536876491.0
seainhd,That‚Äôs super cool.,1536885108.0
phone_radio_tv,"Casual, simple and fun ",1536892816.0
jxub,Is the code open-sourced somewhere? Would be interesting af to see the implementation.,1536925776.0
FooBarWidget,"I'm curious: why is everybody in this thread interested in serverless/FaaS? What's the benefit over, say, Heroku? Is anybody using serverless in production, and if so what is your experience?",1536926381.0
excid3,Great to have you on the podcast /u/schneems!,1536881897.0
freakyDaz,"A game like hangman will differ from random number guessing in a few ways but off the top of my head you have...

State. A random guessing game requires a random number be selected and then the user is promoted and the answer is compared. Hangman requires an initial word be stored and the user gets multiple attempts. You can think of it like a non random letter game. Each letter of the chosen word acts much like the random number in the previous game.

As you said the word can be split into a vector/array of characters so instead of a single right answer now we have multiple. This time however getting 1 right doesn't end the game, you need them all.

Edge cases. Now in hangman you guess letters but words can have multiples of the same letter so having your code understand that the word ""hello"" requires only 4 unique but correct guesses as opposed to 5.

Programming is always tough to start with. There are a lot of concepts and patterns to learn. It takes time. Don't be disheartened. Once the patterns and principals have been practised enough the rest falls into place easier and extending that understanding becomes easier too.

Good luck. Keep it up!",1536867799.0
chrisgseaton,">I understand that words can be vectors and they can be split

I'm not sure what this mean. There isn't really the concept of a 'vector' in Ruby. What more specifically do you mean?

>Does Real Life Projects Have The Classes, Attributes, Methods Documented?  
 
Being realistic, no, not always.

Try to ask some more specific questions about your code and we may be able to answer.",1536862842.0
surfmeh,"If you are talking about how strings can be split and you can ask for a character at particular incidences, you should checkout [the string class](https://ruby-doc.org/core-2.4.0/String.html). He probably was using methods from here.",1536867803.0
alquilateesta,"Your teacher may have mentioned that almost everything in Ruby is an object. Any string is an instance of the String class, and this String class ([https://ruby-doc.org/core-2.4.0/String.html](https://ruby-doc.org/core-2.4.0/String.html)) has methods implemented which can make it behave like an array, so if you run for example \`""hello world"".chars\`, you'll get an array with every character the string has, basically splitting the string per character. 

&#x200B;

If I understand what you mean by ""not seeing the class logic"", reading the Ruby doc pages for String or Array may help making it more clear. So when you enter \`hello\_world = ""hello world""\` for example in an IRB session, you're initializing a string object from the String class, assigning it to the \`hello\_world\` variable, and this object will have all of the String instance methods available.",1536867672.0
Papapalomitas,"`class SortearPalavra`

	`def self sortear` 

		`v = []`

		[`File.open`](https://File.open)`(File.extend_path)('../../palavras.txt'. __FILE__),'r')do |arq|`

		`while line arq.gets`

		`v.push(line.to_s)`

		`end`

	`v.sample`

	`end` 

`end`

&#x200B;

This class is meant to get a random word from my palavras.txt file.

&#x200B;

`class Inicializacao`

	`def self.inicializando` 

`system ('clear')`

		`print ""Inicializando.""`

		`5.times do |i|`

		`sleep 1`	

		`print "".""`

		`end`

		`puts "".""`

	`system ('clear')`

	`end`

`end`

&#x200B;

This is a kind of loading screen that I made.

&#x200B;

Now I'm lost in what I need.",1536932916.0
shevy-ruby,"You should not (want to) overcomplicate things.

Ruby at its very core is very consistent, symmetrical and actually simple. An OOP model that I think best fits to ruby is the one similar to smalltalk.

If you know the data structure(s) then the simplest way is to just write (accessor) code over that structure. So what is the core of hangman? Well, first - build up the string that has to be guessed.

Next, implement code that handles the logic per cycle e. g. ""make a guess"". Once you have that, add another class that can draw the hangman in a step-by-step fashion.

You can start in a procedural way first and change this into a more OOP-centric way lateron without a problem.

In my opinion, the most important thing is to get the thing to work. Lateron you can always optimize the code there and make it cleaner, better, shorter etc...

Questions such as whether someone is fit for programming are very bad, even more so if these are based on the very first (!) example code that has to be written. There are no wonder-geniuses that could instantly program - they had to write code too. And nobody is able to avoid bugs either.

You can use ruby without RoR so I don't get this teacher.",1537023774.0
cheeeeeese,we need more indirection,1536849464.0
techannonfolder,"LanguageClient neovim + solargraph gem + completion plugin (deoplete/ncm2)

ALE for linting",1536825683.0
jrochkind,"By ""prioritize"" in this case you mean put in an order (sort) according to prioritization rules? Hmm, I think so. 

Okay, possibly stupid question. is:

     Priora.prioritize(unprioritized_array, by: [:like_count, :is_sponsored])

actually just the same thing as:

    unprioritized_array.sort_by {|obj| [obj.like_count, obj.is_sponsored] }.reverse!

?

Ah, I see, I guess not, cause one of the things you want to sort on are _booleans_. And it turns out ruby stdlib doesn't make booleans sortable.  So this basically just makes booleans sortable, with true sorting before false?
",1536855865.0
sshaw_,"I would expect a library that prioritized things to use a heap or one of its variants.
",1536806041.0
sshaw_,"> Now the controller finally looks like something that would pass code review! 

If only one controller needed the service and that controller only had one method this would not pass my code review:

    rescue_from ArgumentError, with: :argument_error

    # snip create()

    def argument_error
      render json: { error: 'Bad arguments' }, status: :bad_request
    end

    def lock_service_class
      @lock_service_class ||= ServiceProvider.get(:lock_service)
    end

    def lock_service
      @lock_service ||= lock_service_class.new(user_id: user_id, item_id: item_id)
    end

    def user_id
      @user_id ||= params[:user_id]
    end

    def item_id
      @item_id ||= params[:item_id]
    end",1536806575.0
Schaulustiger,"I think it's difficult to give a definitive answer. A good sign for 'knowledge' in my opinion would be that you're able to create a moderately-sized application without much handholding while being aware of the advantages and trade-offs of the stack you're using (and choose it accordingly, if able).
Looking at Ruby in particular I'd say you have good knowledge when you have a clear mental model of everything you're doing in regards to your code. Ruby has some of its famous magic hide away implementation details where it's extremely useful to know what's happening behind the scenes. If you can explain that, I'd say you're knowledgeable. ",1536748647.0
equivalent8,To know a language is a trip not a destination,1536758595.0
JustinCampbell,"Imagine a blank sheet of paper. You know nothing about Ruby (or any other learnable thing).

You start learning parts of Ruby, these become dots on the page. You now see a lot of dots, but you don‚Äôt know how they relate to each other. You‚Äôre also not sure why you would use one dot over another.

As you keep learning, you discover how things relate to each other. Now there are lines drawn between some of the dots.

You realize that some dots are better than others for solving a problem, and you make those dots bigger. You still see the smaller dots and they cloud your thinking, but you are getting better at choosing the bigger dots.

Eventually you develop an intuition about how to solve a problem. Most of the less useful smaller dots fade away, and now you only really see the ‚Äúgood‚Äù solutions.",1536766487.0
joelbluminator,"I think it depends on who we're talking about. If you're a senior developer, several months of getting your hands dirty are probably enough for any new language.  Also, it's quite hard to separate the language from the platform. If you platform is the web, then you probably need to learn Rails and javascript as well. If you platform is Android, you need to learn Android... there's a whole bag of additional knowledge you need to actually be productive.",1536756421.0
petercooper,"I think the key is knowing as many of the *concepts* of the language and ecosystem as possible but not necessarily the details. That is, you should have a good idea what the best tool or concept in a situation is but if you have to look up the particulars of how to actually do/use it, that's OK.

For example, I know pretty well why, when and where something like Rack is used, but if you wanted me to write a Hello World example, I'm looking up the structure of something like this every time:

    def call(env)
      [200, {""Content-Type"" => ""text/html""}, [""Hello World!""]]
    end

The same goes for Rake. I've used it for 10+ years but I always have to look back at examples or other code I've written to remember all of the details. But that's OK, at least I know it exists, why, what it's for, and when I would and wouldn't use it.

So, to me, ""knowing"" Ruby is knowing how you would approach a particular problem or task and what you'd use to do it.",1536757211.0
keyslemur,"The answer throughout software engineering and programming, that you're almost always going to hear no matter where you end up: It depends.

#### The best?

As an example: What's the best language? Well it depends, what are you doing? Best for X, for Y, for Z? There are so many variables to consider that it would almost be a disservice to treat it as a simple and clear cut answer.

#### Imposter!

Much the same for knowledge of Ruby, or other languages. One of the most useful terms to learn is the Dunning-Kruger effect. The gist of it is that those who know little of a subject presume themselves to know much, and those who know much presume themselves to know very little. It could likely tie into imposter syndrome as well.

In my case, I had joined a new team at work and had one of the managers a few levels above me start by saying ""So I hear you're the Ruby expert."" The first thought through my head was of people like tenderlove, schneems, and others who are leagues ahead of me in terms of knowledge, so for someone to say that of me was quite unsettling.

#### There's still more to learn

I mentioned it to one of the more senior engineers at the company who chided me on it a bit. By their definition I was, but to me I still felt like that was a title well beyond my current skill set. Still do, truth be told. I don't know about custom http servers, c extensions, ffi, ruby core, rails source, or a ton of things. There's far more code and concepts that I don't have a clue about than parts that I do.

#### ...and that's ok

Here's the trick though: that's what makes it so danged exciting. There's always more to learn out there no matter how much you ""know"" a language. The danger is when you stop because you already ""know"" enough and become complacent, resting on your laurels.

#### The Senior Trap

Now then, because I've noticed you described yourself as a Junior, there's another subject which would be valuable to mention: Becoming a Senior.

Many will consider it to be a factor of ""knowing"" a language in, out, upside, downside, and every which way. Turns out that's not entirely true. Make sure to focus on your people skills (I still refuse to call them ""soft"" because there's nothing soft or easy about them).

That means negotiation, requirements, conversations, and a whole dose of empathy. If you get stuck in focusing on purely technical concerns you're missing the forest for the trees, and eventually that catches up to you.

You can build the most amazing thing in the world, with Ruby code that would make people weep tears of joy to read, but if it's not what your clients and stakeholders want you've goofed. No amount of special meta-programming and tricks will save you from failing to understand a problem scope

#### Ranty Rant

Anyways, I've gotten a bit carried away on this one. The short of it is: it really depends, but remember that language knowledge isn't everything.
",1536787643.0
dekksh,"Never, programming languages are never static.",1536760785.0
KevinTheImperialist,"I think truly knowing a language is understanding how the language works in memory and is interpreted/compiled. If you can take a concept, build it into code and refactor it ~optimally because you understand what it is going on (not just because ‚Äúthats how you do it‚Äù), you can go to your limits in it.

Edit: that isnt to say you have to know all that to know what you are doing and make great stuff. However, measuring ‚Äúdo I know what Im doing?‚Äù is much more subjective and scope specific. If you are generally comfortable doing something, you can generally say you know what you are doing.",1536759022.0
tibbon,"I felt I knew Ruby when I was able to read the underlying source code and at least be able to mostly understand it (let's be real, there's probably parts that Matz doesn't grok fully), and also look at nearly any well written Ruby code and almost instantly understand what's happening. 

Also; when I was teaching Ruby professionally I actually learned Ruby. ",1536766096.0
friendliestcomputer,"Probably after ""hello world"" and before contributing to the development of said  language.

No that's a bad joke. My take is when you can do whatever ""job"" you set out to do with the language.  

Think about  natural languages. When do you know these languages? When you can go to Greece and order a meal on the street with Greek, or going dealing  with German business partners? 

It's a personal question probably has a personal answer too.

A strong follow up question might be asking when so I know how to do a particualr conceptual job rather then lexicography.",1536772327.0
cheeeeeese,"i was lucky and was paid to learn ruby. a few months to do some damage, 2 years now i feel pretty confident providing code review feedback",1536756659.0
classhero,"When you feel comfortable working in it, and find yourself effective with it. Can you effectively work on a team with a <language here> codebase? Congrats, you know <language here>!",1536768592.0
Zengolden,"When you can go into an interview and answer their questions in said language.

If you can't whiteboard solutions, or at least describe them verbally, then you will get a lot of push back on your programming skills.

This isn't to say that you have to answer everyone correctly, it's just that you need to be able to demonstrate how you would use that language to solve the logical problems presented to you.",1536770420.0
how_do_i_land,"I approach this as being able to read the change notes and instantly understand how you can refactor old code with the new standard library/language features, as well as understanding the ramifications of what deprecations will do to your codebase.

I've been programming in Ruby for 6.5 years and I'm comfortable with but in no means a master. Another mental milestone I have for ""knowing"" a language is being able to change your understanding & perspective to match the language designers, being able to know what you don't know and know how to search/look up whatever you need to. This is analogous to getting your google-fu to the point where you know how to construct what you are looking for and being able to read through the Stdlibrary and comprehend most of it.",1536777674.0
nanenj,"I consider this to be when you personally feel comfortable saying you know it.  


You know you, and what you know, far better than anyone else.  


I don't care how you do your work, as  long as you're getting it done in a timely manner and can communicate expectations about when and how it'll be done.  


I use Google for 90% of my work, even at the level of development I'm at.  I've been in the industry for more than 15 years.   Research and documentation is simply part of the job.  I worry less about knowing a language than I do about optimizing my workflow and how I find information.  


Having documentation open, and writing documentation so that the next engineer doesn't have to think that much seems like the better way to do things than bother memorizing the everything.  
",1536778611.0
DuroSoft,When you are using other languages and you miss something from that language. For me this is always a clear sign that I am familiar with that language.,1536782284.0
mellett68,"In my opinion once you understand programming concepts, as long as the syntax isn't totally different (haskell was an interesting one to look at) then it's relatively easy to pick up a new language.

Learning the *idioms* of a particular language can take a bit longer and knowing the pitfalls is important to being productive. Essentially though, you don't learn much 'new' stuff between them in my experience.

I try to keep a few languages up to that standard, which I loosely define as ""I can solve reasonable-difficulty problems without having to look up syntax"" - I don't shy away from poring over stdlib docs though, they can be a minefield if you start guessing things in a dynamic language. It's fun to be a polyglot even if everyone just ends up wanting PHP because 'the hosting is cheap'",1536837594.0
jxpx777,"I usually tell people you know a language when you think in the language as you‚Äôre using it. Knowing a language is about being able to express yourself. This applies to way more than programming languages. This is a longer post than I might otherwise write but I‚Äôm home sick today so you benefit from my convalescing.

I am bilingual and when I speak Spanish, I think in Spanish, not in English and then translate to Spanish. There are constructs in the way you express certain things in Spanish that absolutely do not translate syntactically from English. In an effort to reduce waste, we recently bought a couple of reusable to-go containers to take to the taqueria. When I explained to the guy, he said, ‚ÄúYou want me to put them [the tacos] in here?‚Äù except in Spanish, where the closest literal translation to English would be ‚ÄúYou want that I should put them in here?‚Äù If someone whose first language was not English made this translation, it wouldn‚Äôt be *wrong*, but it would be obvious that they weren‚Äôt thinking in English. Likewise, if I were in the same situation and I translated the same sentence to Spanish literally, word-by-word rather than understanding how to express the *concept*, it wouldn‚Äôt actually be all that correct even though the compiler/interpreter accepted the input as technically valid. In learning Spanish, this manifests as understanding what the subjunctive is as, when to use it, etc, but that‚Äôs all academic and it‚Äôs only when that thought process becomes more automatic and natural that you really *know* Spanish.

Another example: I‚Äôm an amateur tuba player and I play in a community band. When I‚Äôm playing music, I‚Äôm thinking in the language of music (scales and key signature, harmony/chord structure, dynamics, my relation to the other members of the ensemble) and not in terms of trying to maintain some translation layer in between the music and my brain.

Now, finally, back to programming. When I‚Äôm writing Ruby, I am pretty comfortable that I understand what makes for idiomatic Ruby and I think in terms of those things. I know where Ruby is more or less expressive and leverage those strengths. I don‚Äôt think in PHP or Perl or Python and try to translate the syntax to make the Ruby interpreter happy. Those languages have their own peculiar strengths and weaknesses and their own characteristics and trade offs that make for expressive code in their context that will read very much like a poor translation if used in Ruby or Go or wherever.

Here are just a few examples of things that *I* like about Ruby that I think make it fairly uniquely expressive: (Others will disagree and I‚Äôm not here for a religious discussion about whether these are good or not. I use them. You might not. It‚Äôs OK.)

* Blocks, Procs, and Lambdas! Other languages have callbacks and some have blocks but these are pretty core to how Ruby expresses itself. Code that uses blocks can be written without them of course but when your brain flips the switch to thinking about moving that code into a block construct, the Ruby-ness of your code increases.
* Every expression has a result so you can use them to assign variables to the results of `case` statements and conditionals.

```
stringFoo = case foo
when String
foo
else
‚Äú#{foo}‚Äù
end
```

* The `unless` keyword
* `!` and `?` allowed in method names
* Mixin modules such as Enumerable. Implement a small amount of functionality and mixin Enumerable and you get a host of methods ‚Äúfor free‚Äù. From here you can see how this would be useful for writing your own.
* Conditional setting with `||=`

So, that‚Äôs my super long-winded answer to say when you know a language. Sometimes you‚Äôll have to look up syntax or delve into the intervals of which hashing algorithm Ruby Hashes use, but knowing those things alone would not bring you closer to actually expressing yourself and communicating effectively with other ‚Äúspeakers‚Äù of that language. Spending time reading and writing the language will make you more and more familiar with what makes it beautiful and will teach you how to effectively express yourself in your code.

",1536763506.0
,[removed],1536768232.0
chrisgseaton,"Writing a new book about the Ruby object model is extremely courageous! I'll buy a copy when it's done though.

This is the current definitive resource on the Ruby object model http://www.atalon.cz/rb-om/ruby-object-model/ and nobody I know is even entirely sure if some of that is a practical joke or not.",1536672545.0
pau1rw,I've backed this. I hope it gets funded.,1536687329.0
kulehandluke,Created this to help someone at work - thought it might be useful to others so posted here too.,1536658966.0
XDLMA0,"This is awesome! I understand it much better now.

I wish parameters weren't optional in ruby. I understand it makes it nicer for DSLs (is that the main reason?) but it makes it unclear that parameters are being passed into a method. ",1537027482.0
sshaw_,"I was going to [extract this code](https://github.com/sshaw/class2/blob/46c2029fefc58a921277bd5ab6c3ad790a65bc5a/lib/class2.rb#L159) into a ""to hash"" gem. Maybe you can add it to yours?

I'd love for someone to show me that turning something into a ""usable"" hash doesn't have to be that difficult...",1536698504.0
keyslemur,"Mostly playing around for now, might add some hash diffing tools in there later. ",1536655945.0
tuxracer04,"I like the fact you're testing the database rules/constraints.

The only thing that confuses me is the acceptance tests where you're re-creating the functions? Aren't they already defined in the Rails migrations?

Couldn't you just test like this:

    it { expect(ApplicationRecord.connection.execute(""SELECT companies_subdomain_lowercase_on_insert('CamelCase')"").column_values(0).first).to eq('camelcase') }


",1536678118.0
klowny,"Probably just comes down to GC differences. Python has RC in addition to a 3-generation M&S where Ruby only has a 2-generation M&S. 

Both languages represent bignums as an array<long>. For `a+b`, the language internally allocates a new array<long> `z` onto the heap that's one `long` bigger than the larger of `a` and `b`, and a long `carry` on the stack. So for every loop, `a` becomes garbage and is replaced by `z`. 

Python's RC will notice that `a`'s ref count is 0 at the end of the loop and immediately GC it, which frees the memory for use in the next iteration of the loop. 

Ruby doesn't have a RC, so it waits for the M&S to kick in. The default max size of the heap before GC is triggered is somewhere around 32MB (new generation) + 128MB (old generation). 

Playing around with Ruby's GC parameters, I got memory use down to 38.5MB just by turning off the generational GC (`RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR=0.9`). Smallest I got memory use down to was ~28MB by setting `RUBY_GC_MALLOC_LIMIT=8388608` (default/2) and `RUBY_GC_MALLOC_LIMIT_MAX=8388608` (default/4). 

All of this is measured using `/usr/bin/time --verbose` ",1536654718.0
three18ti,"How are you measuring memory usage?  I don't know of a tool that measures RAM usage in mebibyte... (thought I don't know every tool!)

I _think_ it's because every `a+b` creates a new object and while assigning a new `b = a+ b` overwrites the pointer to the old `b` object, that object still exists in memory since the object is still technically in scope, thus it won't be garbage collected.

I _think_...  I just skimmed it, but [this post](https://blog.codeship.com/visualizing-garbage-collection-ruby-python/) I think explains why the Ref Count vs M&S uses more memory...

For most similar Rubyish way to count to the Nth number, I'd probably use an array:

    def fib(n)
      n.times.each_with_object([0,1]) do |num, acc|
        acc.push acc[-2] + acc[-1]
      end.last
    end
    fib(100)

Again, not sure how you tested memory consumption, but looking at it, I _think_ it'll probably use the same amount of memory.  (although, I have to admit you've piqued my interest)

However, I feel like this is a really bad example because I'd never do that in the real world, if for some reason I actually needed the nth Fibonacci number, I'd use a matrix, which is much faster:

    require 'matrix'

    m = Matrix[[1,1],[1,0]]
    def fib(n)
      (m**(n-1))[0,0]
    end

Because personally, I'm more concerned about speed than memory usage.  Although, really, [just us magic numbers!](http://www.maths.surrey.ac.uk/hosted-sites/R.Knott/Fibonacci/phi.html#section5)


    def fib(n)
      PHI = 1.6180339887498959
      TAU = 0.5004471413430931
      (PHI**n + TAU).to_i
    end

Neither of which are really Ruby specific (well, I know python supports Matrices, but I'm not sure how that would be implemented)...

 What is it that brought you to comparing the memory usage of the two languages for a fib function?",1536647710.0
Smallpaul,"I‚Äôm not an expert on Ruby but I can say that the Python behaviour is predictable. Memory is freed immediately on variable reference being freed and unless the allocator is weird it should be reused.

Garbage collection is more subtle and implementation dependent.",1536638910.0
proyb2,"While on Crystal with a bit similar in syntax uses far less memory than Ruby and Python, if it‚Äôs feasible to use GMP in Crystal too now that a contributor manage to tune as fast as Rust",1536653040.0
virnovus,"Obviously, Ruby wasn't designed for this sort of use-case.  You can manually call garbage collection if you feel like you absolutely have to:

https://ruby-doc.org/core-2.2.0/GC.html",1536644678.0
laerien,"For fun, [here's a Ruby fib(n) with Matrix](https://gist.github.com/havenwood/02cf291b809327d96a3f). As a one-liner:

    require 'matrix'; (Matrix[[0, 1], [1, 1]] ** n.pred)[1, 1].to_i",1536704705.0
Jdonavan,"Ruby is not a great language where memory consumption is a concern.  Using the standard json library to decode a 36MB json file can consume of 2G of memory (Which sucks if your process gets killed if it goes over 2G, let me tell ya). 

There's a couple things going on here:

By using ""-> #{ObjectSpace.count_objects[:T_OBJECT]}"" you are interpolating strings and allocating new objects.  Measuring the memory usage outside of Ruby, shows that removing the memory reporting has an impact of 10s of MB.  It's still not great mind you, but there's a significant chunk eaten by the strings.

As /u/three18ti mentioned, there are better ways to do this in ruby.  However, due to the huge number used for ""n"" your options are limited.  Recursion is out the window for example.  His matrix version has flat memory usage and VASTLY outperforms your version.  The magic number variant produces a value of ""Infinity"" given your value for ""n"".",1536678329.0
faitswulff,Anyone know if DHH is still [avoiding](https://twitter.com/dhh/status/908001928625364992?lang=en) Ruby Together?,1536633463.0
mperham,"They got tons of negative energy and drama for one critical blog post.  Now nothing positive.  This is why non-profit/OSS work is so draining.

Thank you, Andre and board, for doing the hard work to fix the problems over the last few months.  This is why I'm happy to support RubyTogether.",1536683392.0
jrochkind,"> Starting this month, we‚Äôre retiring our existing position of CEO, and replacing it with an Executive Director position. While it includes many of the previous responsibilities of the CEO, the ED position comes with a new job description, new criteria for success, and direct oversight by the board of directors.

> The Executive Director will not be a member of the Board of Directors, and will not determine budgets or spending. Instead, they will be responsible for running Ruby Together on a day to day basis, implementing the strategy and plans decided on by the board.

> The Executive Director will be paid for administrative and corporate work. They will not be paid for any open source work. This will allow them to focus their efforts on fundraising and collaboration with the Ruby community. Our first Executive Director will be Andr√© Arko.",1536620931.0
andyw8,"Ruby hasn't changed too much. You could probably catch up fairly quickly by skimming the release notes for each point release, e.g.

* https://www.ruby-lang.org/en/news/2015/12/25/ruby-2-3-0-released/
* https://www.ruby-lang.org/en/news/2016/12/25/ruby-2-4-0-released/
* https://www.ruby-lang.org/en/news/2017/12/25/ruby-2-5-0-released/
* etc.",1536612285.0
abadabazachary,http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/,1536611695.0
shevy-ruby,"Although you have asked for books, I personally recommend to look for many blogs in the last ~5 years.

Several of them have a lot of great information. I was more following blogs than anything else.

Also the ruby news entries are always useful:

https://github.com/ruby/ruby/blob/trunk/NEWS

Last but not least, just keep writing ruby; I am sure you'll find better idioms since there have been quite some improvements in general.",1536656599.0
Xenepa,Wow. Been programming in mainly Ruby for like 5-6 years and never even heard of this. Madness. Great to know now,1536600663.0
PikachuEXE,"Although I know this keyword a long time ago

I find that it's rare to have a chance to use it

&#x200B;",1536629619.0
keyslemur,"It should be noted, as stated both in the header and footer of the article, that this is a translation of another article:

https://medium.com/@roman01la/understanding-transducers-in-javascript-3500d3bd9624

@roman01la had given me permission to translate it into Ruby.

This is the article which helped me start to grok what transducers did, so I figured it'd be nice to translate it into some more familiar parlance for the people here :)

Enjoy!",1536547568.0
Trevoke,"Besides this being the canonical way to do transducers, why can't we do list.iter.lazy.map.filter.reduce ?",1536580041.0
Morozzzko,"That's a great article, thank you!

That makes me wonder: we have a `Transproc` gem which we could use to describe data transformations. I wonder if we could introduce transducers to the library without changing much of the DSL.",1536570942.0
zverok_kha,"I like the depth you've dove. Yet I should say that akin to /u/Trevoke I always like to not only review how other language ideas could be imitated in Ruby with DSL (they obviously could), but also what minimal changes / explorations of Ruby's lesser known feature can produce a closer result. 

I believe that ""transducers"" is rather a useful mental model / term that is useful in discussing things, than thing that should be reimplemented literally as close to other languages as humanly possible.

In other words, I strongly believe that `Enumerable` IS an exact equivalent of ""transducers"", method chaining IS an exact equivalent of transducers combination, and `Enumerable#lazy` IS the exact equivalent of ""applying transducers without producing intermediate collections"".

(In next series: same about monads :trollface:)

",1536608463.0
Valaramech,"So, I learn best with examples:

    class Foo
      def talk
        puts 'foo'
      end
    end
    
    class Bar < Foo
      def talk
        super
        puts 'bar'
      end
    end
    
    b = Bar.new
    b.talk
    # 'foo'   -- from the puts in Foo
    # 'bar'   -- from the puts in Bar
    #=> nil   -- return value of the function

Like /u/trumant et al. said, `super` calls a method with the same name in a parent class.  This can be used to add additional functionality without completely removing the original functionality.

To give a slightly less contrived example:

    class Rectangle
      attr_reader :height, :width
    
      def initialize(height, width)
        @height = height
        @width = width
      end
    
      def area
        @height * @width
      end
    end
    
    class Square < Rectangle
      def initialize(side)
        # since Square's initializer has a different number
        # of arguments, we have to specify the arguments
        # to super.  If they were the same, we wouldn't have to!
        super(side, side)
      end
    end
    
    s = Square.new(2)
    s.area   #=> 4
    s.height #=> 2
    s.width  #=> 2

Since a square is just a special case of a rectangle with all sides equal in length, we probably wouldn't need any special methods that aren't already on `Rectangle`.  We just need a special initializer to get everything set up.",1536554018.0
trumant,Super calls the initialize method in the parent class in this example,1536532204.0
shevy-ruby,"It is not good to use Zed Shaw's ressource - he does not write in idiomatic ruby.

As for super(), simply remember it by invoking the parent method in a class/subclass hierarchy - for the most part that is what it does.",1536574180.0
keyslemur,"Right and Left identity are essentially ways to say that you can compose to the left or the right with any value and still get back the same result.

I've found it helps to think of identity as an empty variant of a Monadic (or really Monoidal) type.

Consider a few simpler types:

|Empty (Identity)|Reduce (Join, or Binary Operation)|
|:-|:-|
|0|\+|
|1|\*|
|\[\]|push|

For the first item, the left identity would be that `0 + 1 == 1`. The right would be that `1 + 0 == 0`. It would also follow that `0 + 1 == 1 + 0 == 1`.

This is a pretty great series on understanding Monoids: [https://fsharpforfunandprofit.com/series/understanding-monoids.html](https://fsharpforfunandprofit.com/series/understanding-monoids.html)

I'd go through a lot of his stuff, especially Railway Oriented Programming, if you haven't yet.

**TL;DR** \- If you want to understand identities, Monoids are an easier place to start.",1536555512.0
drbrain,"If you don‚Äôt know C Ruby is great for IO parallelism and terrible for CPU parallelism you could expect a speed up that can‚Äôt be realized

Furthermore, how do you know the library you‚Äôre using is thread-safe?",1536500436.0
chrisgseaton,"Because standard Ruby doesn't allow Ruby code to run in parallel, so these methods only really allow for concurrency.",1536514269.0
l1beration,Nothing strange about it,1536488106.0
shevy-ruby,It is most likely not in standard ruby (library) by default because it is a very specialized gem.,1536571610.0
tk425,This is kinda silly,1536530224.0
jrochkind,"When I see a post like this, i wanna see the code! Don't post until you've got the code for us, IMO. ",1536465208.0
Deoxal,"I'm new, I've heard of them before but I don't understand them. Can someone explain please (;",1536439966.0
tomthecool,"In my opinion, the ""pretty"" output is already good enough; I think a more verbose version would just add more noise and make the error unclear. (I'd expect to see the raw data in the error, not buried inside some extra hash.)

But then, I'd say the exact same thing about your [`debug_helper`](https://github.com/BurdetteLamar/debug_helper) library -- ruby already has `pp` (""pretty print"") in its standard library, which provides all the data I typically want to see (unless I'm being very explicit about ""show the size"", ""show the encoding"", etc).

...In fact, that's already precisely how [`make_my_diffs_pretty!`](https://stackoverflow.com/a/50677303/1954610) works: By utilising ruby's `pp` library.

So if you want *super-verbose* output, you could even just try doing this:

    module MiniTest
      class Test < Runnable
        def self.super_verbose_diffs!
          require 'debug_helper'
    
          define_method :mu_pp, DebugHelper.method(:show)
        end
      end
    end

As I say, I doubt I'd use such super-verbose output myself, but it may be a fun thing to experiment with.",1536600166.0
realntl,"I've spent the last two years with nothing more than `Assertion Failed` as my assertion failure message. Honestly, in my experience it's not really a big deal. If you need to see the values compared, just print them out. For me, assertion messaging offers no measurable impact on anything.",1536465698.0
cheald,"Where will it be called in your main thread? You can't just jump from wherever you happen to be in your main thread into this new method.

Typically you'd call @workerthread.join in your main thread to wait on the background thread to finish executing, then continue executing wherever you want.

The callback style of asynchronous programming requires an event reactor model, rather than a threaded approach.",1536428144.0
mperham,"If the main thread can just wait, you can use `Thread#join` to wait for the bg thread to finish.  Otherwise you'll need to use a Mutex/Monitor/ConditionVariable as appropriate for your needs.",1536597147.0
hhunaid,Isn‚Äôt it like illegal or something?,1536396067.0
jdalbert,Next project: collect weak wifi passwords in Ruby :),1536433452.0
t3s73r,Please provide me with feedback if there are any problems. :),1536397177.0
estebu,How does it work?,1536423379.0
_matthewd,"Poking individual authors about their PR is potentially helpful -- but caution is needed, particularly when interacting with regular contributors, to avoid coming off as a self-appointed project manager who's trying to direct how others spend *their* scarce free time.

&#x200B;

>while still working full time at a job with no allotted ""OSS-time""

Any small contribution is absolutely valuable, and each individual has their own set of life circumstances and priorities, but given this phrasing, I do feel the need to note that even most of the heaviest contributors to the largest projects are also doing so *while still working full time at a job with no allotted ""OSS-time""*.",1536377714.0
rylanb,"Eloquent Ruby
and
http://www.poodr.com/
",1536333821.0
ASIC_SP,this previous discussion thread here had nice recommendations: https://www.reddit.com/r/ruby/comments/86yvcy/where_can_i_learn_actual_ruby_programming_not/,1536333902.0
bulldog_in_the_dream,"Thanks everybody! I read Why's Poignant Guide for the first time years ago and value it a lot. That kind of a programming guide tells you a bit about Ruby and its community.

So far I've started looking at Eloquent Ruby, looks good. Will have a look at rubykoans, to begin with I've started the Ruby track at https://exercism.io/. It's a pretty neat project, and I think it is created by a Rubyist, Katrina Owen.",1536352774.0
mindaslab,I Love Ruby [https://mindaslab.github.io/I-Love-Ruby/](https://mindaslab.github.io/I-Love-Ruby/),1536343149.0
tatersnakes,I really liked Design Patterns in Ruby https://www.amazon.com/Design-Patterns-Ruby-Russ-Olsen/dp/0321490452,1536344898.0
schneems,"If you want something fun that shows off the magic of ruby though might not totally be that useful in a day-to-day sense I recommend Metaprogramming Ruby.

Other than that I recommend having a goal to build a thing or do a thing and finding a book that helps you accomplish that. Most devs come to ruby for rails. For that Agile Web Development With Rails or the Rails Tutorial (free on the web) is the best place to start. If you're looking to get ruby integrated with your other languages or company then testing is a great foot in the door. A book on rspec would be a good place to start. Good luck and welcome to the community!",1536374874.0
three18ti,http://poignant.guide,1536331915.0
japhillips87,I suggest the ruby koans. http://rubykoans.com. You learn ruby by fixing broken tests.,1536339713.0
pr0misc,Eloquent Ruby and Confident Ruby are the two single books that will make you become the rubyist you wish to be.,1536356673.0
Croustiboy,"I liked *Metaprogramming  Ruby 2* :[https://pragprog.com/book/ppmetr2/metaprogramming-ruby-2](https://pragprog.com/book/ppmetr2/metaprogramming-ruby-2)

Smooth learning curve and it  really helped me to actually understand the ruby object model",1536580102.0
xire28,"What it the benefit of using this gem instead of the native rails ""delegate methods, to: :object, prefix: true, allow_nil: true"" and ""inverse_of"" on the reverse association to avoid making extra sql queries ?

The DSL with the ""=="" with method overloading is strange to say the least, ""=="" checks equality it does not define equality like ""="". This is looks more like a c++ than a ruby DSL synthax.

Performance wise it uses method_missing so is significantly slower than delegate_to which define  the method dynamically at class loading time (call, eager loading and copy-on-write).

Adding an extra gem for features already provided by rails and with an extra overhead does not seem like a smart move.

May have missed the selling point, care to explain a bit more what problem this gem is solving ?",1536265678.0
sshaw_,"This seems useful. Denormalizing is a legitimate solution for performance issues. But I wonder, if you're still keeping *the normalized* column around, does it make sense for ActiveRecord to do/know about this instead of doing it at the DB level via triggers?

`branch.company.name == :branch_company_name` is silly. I would prefer a less cutesy-blog-post-meta-bullshit-twitter-me API, especially for something that is not supposed to be a toy module. [These decisions can affect adaptation](https://www.reddit.com/r/node/comments/9ddpy9/sqorn_a_modern_javascript_sql_query_builder_that/). 

I would also change the name to something that developers can find and identify: denormalize, denormalize columns, denormalized columns, anti normalization, ... 

The current API is also redundant. `branch.company.name` can easily be converted to `:branch_company_name`. Why not do this: 

    denormalize ""branch.company.name"", ""branch.company.id""
    denormalize ""branch.company.name"", ""branch.company.id"" => ""id_deeez"" 

?

Also note that your dist is broken: 

    /tmp >gem install quickery
    Fetching: quickery-0.1.1.gem (100%)
    Successfully installed quickery-0.1.1
    1 gem installed
    /tmp >ruby -r quickery/active_record_extensions/dsl -e'1'
    /Users/sshaw/.rvm/rubies/ruby-2.3.7/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:120:in `require': cannot load such file -- byebug (LoadError)
            from /Users/sshaw/.rvm/rubies/ruby-2.3.7/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:120:in `require'
            from /Users/sshaw/.rvm/gems/ruby-2.3.7/gems/quickery-0.1.1/lib/quickery/active_record_extensions/dsl.rb:1:in `<top (required)>'
            from /Users/sshaw/.rvm/rubies/ruby-2.3.7/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:133:in `require'
            from /Users/sshaw/.rvm/rubies/ruby-2.3.7/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:133:in `rescue in require'
            from /Users/sshaw/.rvm/rubies/ruby-2.3.7/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:39:in `require'



",1536296800.0
jrochkind,"This _is_ already listed in the [rubysec](https://rubysec.com/) advisory db, so it will be flagged by `bundle audit` -- if you remember to update your local advisory db with `bundle audit update` first! 

Hooray for rubysec. ",1536252084.0
lfv89,"Interesting examples, thanks for sharing.",1536258991.0
fuzzy_nate,Can we make some sort of rule that all blog posts from now on are required to have mouth watering pastries as examples please ,1536258802.0
sshaw_,Imagine what else is lurking out there in: *The Manual*. ,1536294430.0
rick_and_mortvs,"‚Äòto_sentence‚Äô was a new one for me. I‚Äôve just always done ‚Äòjoin(‚Äú, ‚Äú)‚Äô.",1536335940.0
jrochkind,"I actually like posts like this, even if you've read a bazillion docs and even if you've seen many/most/all of these methods before, a refresher is still good. There are so many methods in ruby stdlib/ActiveSupport, nobody remembers all of them. Reading articles like this, even if I still don't remember the exact method name or signature, is often enough so I remember ""wait, I think there's a method that does what I want here, let's look for it"". ",1536329171.0
antbahascw,"Lol what

Most of these methods are super standard - and why is on rails in brackets?",1536252036.0
cheeeeeese,ive only been doing ruby for 2 yrs and i knew all those,1536260270.0
shevy-ruby,"Well, these are ruby core methods really. So the title confuses
me (""[...] Ruby (on Rails) methods"").",1536268998.0
JakubOboza,Most of the things presented are super basic knowledge probably all besides ‚Äúwrap‚Äù because that one is close to being useless.,1536299085.0
Morozzzko,"Actually, expected to see Shrine here. It's a great gem, and it comes with support for pre-signed uploads to aws. 
Good to see the ""under the hood"" parts of those things, though ",1536158078.0
gitn00b,Are there any other more in-depth articles on this subject someone could send me a link to? It would be much appreciated. (Book recommendations encourages as well),1536170831.0
mperham,"As an aside, your lewinski remark is off-topic and unprofessional.",1536179203.0
realntl,"> The ruby office is one guy, he's real nice, a gentlemen, his name's Nigel (always a good name) and he gives you one paper. ""Once you read through that, I'll come back with another and your favorite tea. Also my secretary does the office-ly blowjobs if you're into Lewinskis.

Was the edgy water cooler joke necessary?",1536162226.0
jrochkind,Lots of people don't like Rails. But try to build a web application with something _other_ than Rails and then come back before you set your opinion in stone. :),1536190044.0
Gnascher,"Slow down and read the documentation.

The file structure of Rails is a well known entity.

The sooner you stop fighting Rails and do things ""The Rails Way"", the easier it gets.

Convention over configuration.

If what you are doing is ""hard"", you're probably doing it wrong. Step back, rethink, read some docs, try a new approach.

That's not to say that you won't tackle tough programming problems building Rails apps, but if it's Rails itself making it hard, your probably doing it wrong.",1536134714.0
leemurjames,"I had a very similar experience moving from non framework Ruby to Rails. I think a large portion of what you are experiencing is the complexity of web frameworks, but a small portion is related to Rails magic and convention. If you're learning Ruby for fun, you could consider starting with a micro framework. This lets you start small and see how the pieces fit together. When/If you move back to a full framework, you'll have a better idea of what is going on under the hood. If you want to stick with learning Rails, do some research on how it works internally and like others have stated, get intimate with the documentation. Once you get the hang of it, it feels more ruby-ish.",1536164345.0
jdickey,"We moved to [Hanami](https://hanamirb.org/) months ago and haven't looked back. We've been Rails-free for almost two years now; before Hanami, we spent a year-plus doing [Roda](https://roda.jeremyevans.net/), which is still a viable choice for API apps and will be familiar to those coming from [Sinatra](http://sinatrarb.com/).

Rails, to quote /u/apotonick in his (excellent) [Trailblazer book](https://www.reddit.com/user/apotonick) (which you should read as well), put it well:

> For every Rails project, there is exactly two outcomes. Either someone in the team‚Äôs an experienced architect and leads the software to an advanced design with service layer, view components, maybe forms, and so on. Or, and that‚Äôs the classic way, the project strictly follows the Rails Way and will end up as a code disaster.
>
> Explaining why a conventional Rails architecture fails is simple: There is no architecture.
>
The fatal delusion that three abstraction layers, called ‚ÄúMVC‚Äù, are sufficient for implementing
complex applications is failure by design.

I _love_ Ruby; I've been using it as my primary language for over 8 years now, out of a 39-year career. But for the last two of the five years we had Rails code in production, when people asked what I did for a living, I said I ""mitigated Rails"". That is as accurate a statement as I can think of.

*¬°Sal si puedes!*",1536137418.0
shevy-ruby,"This has been similar to my use case; although I don't hate rails. I am mostly neutral about it, there are pros and cons about that part.

My biggest problem with rails is how boring it was - and is. I never managed to overcome that.

I never had this problem with ruby. Ruby itself is awesome, though not 100% of ruby is great. You gotta pick what is great and ignore the rest.

As for the other part:

> Can I set up a website with just Ruby and the HTML family?

You can give things a try. Try out .cgi too, even if it is outdated - I don't mean the ruby-cgi part but to use dynamic generation of HTML. I do that still up today.

I used PHP before I switched to ruby.

When you feel fine with .cgi, just move to something like sinatra + padrino.

I doubt you need the whole stack of rails really.

I used ruby + www from day 0 when I switched to ruby and I haven't really used rails (aside from the intro-tutorial and building that webshop which was so boring that I stopped with rails).",1536174077.0
office_boy,"Depending on the scale of your application and whether you want to create a dynamic or static website, you might want to consider frameworks that are a bit more lightweight than Rails.

I suggest trying out Sinatra. It's probably one of the easier smaller frameworks to start with, cause it's pretty barebones and abstracts a lot away from the underlying Rack configurations.

Although Sinatra is a lot smaller and easier to start with, you'll have to set up and configure a lot of stuff yourself. You'll eventually find that a lot of this stuff is offered by Rails out of the box, and that's one of the big things that makes the bigger frameworks more useful.

You can find templates, skeletons and generators for Sinatra applications with a quick search though. Additionally, there are frameworks like Padrino that are built on top of Sinatra.",1536135280.0
wfxyz,"If your expectations are just simple console commands, calculations then yes stick with ruby. However there‚Äôs actually a lot of components to take care in a production web app. You might want to try to build all that stuff from scratch if you think rails is overwhelming. But soon enough you will just stumble upon problems that rails have already solved for years. And your own solution probably ended up giving more problem to you then it solves.

If you‚Äôre ready to delve, I suggest you try with scaffold command and see what it generate for you. These are basic convention that rails provide for a quick start.",1536146112.0
jeeperbleeper,Check out dry-rb ,1536147832.0
fiveguy,"The frustration you describe happens in all languages. My first semester of CS101 was constantly wondering if something was a function, keyword, and where they all came from (in that case, they were from header files).

Fortunately Ruby allows you to see where any method is defined using `source_location`. For instance, where is `destroy` defined?

      > method = User.new.method(:destroy)
     => #<Method: User(ActiveRecord::Transactions)#destroy>
      > method.source_location
     => [""/Users/fiveguy/.rbenv/versions/2.4.4/lib/ruby/gems/2.4.0/gems/activerecord-4.2.8/lib/active_record/transactions.rb"", 280]

Or, the ""red"" method in the colorize gem:

     > puts ""1"".red
    => 1 # trust me, it's red on my machine :)
     > ""1"".method(:red).source_location
    => [""/Users/fiveguy/.rbenv/versions/2.4.4/lib/ruby/gems/2.4.0/gems/colorize-0.8.1/lib/colorize/class_methods.rb"", 97]

If that method isn't defined in your project (like above), then use bundler to view the source of the gem: `bundle open colorize` from terminal. Or, just view it on Github if you prefer.

And, no, you don't need to use gems, but a lot of times they do make life easier. ",1536148156.0
ethboy2000,"Not sure what you‚Äôre finding so difficult with Rails. The Rails documentation is very good and there are countless tutorials out there.

Are you building something from scratch or trying to get to grips with an existing app built by someone else?",1536133804.0
aspleenic,"I give talks on this all the time - there are so many framework options that aren't Rails out there. My fave is Sinatra by far, but if you need something more fully fleshed out, go with Hanami.",1536150028.0
rob_old,"So I found it difficult to get to grips with Rails at first too. Once I got it, I came to really like it; your code knows if you add a field to a database without you doing a thing, whilst we have a Java project that would require editing code in four different places (and 2 xml files) for the exact same change. Now I've cooled on it somewhat, but it's still a valuable tool.

&#x200B;

My advice: start off by watching [the demo that started it all](https://www.youtube.com/watch?v=Gzj723LkRJY). This is good for a high-level overview. It also gives you the context necessary to appreciate the following point: *Rails is designed to solve a particular problem, which is building CRUD web applications with a minimum of boilerplate.* Namely, it assumes that your users have data they want to store in your database, and they want to retrieve it and edit it when necessary. You can make a real-time chat app with it, [but I wouldn't](https://hashrocket.com/blog/posts/websocket-shootout). Everything in Rails is set up in service of this goal.

&#x200B;

 Then read the Rails [getting started guide](https://guides.rubyonrails.org/getting_started.html) that walks you through building essentially the same app. Nothing important lies outside the app/ folder. Try and focus on how 

1. The Models implement the Active Record pattern (they're how your code talks to the database), 
2. The controller actions relate to the CRUD concepts
3. Views are just html pages, but which you can fill with custom content through Rails magically setting @instance variables to be those found in the controller.

Once you grok the basic pattern, it's downhill from there. To really understand Rails models, it's helpful if you know SQL and how relational databases work. Read the rest of the Rails introductory guides, then Hartl's tutorial as others have recommended. 

&#x200B;

>Maybe there's something else I can use Ruby for, because like I said, it's so enjoyable.

Ruby's flexibility lends itself well to writing DSL-based tools, so it's seen a lot of use for things like test or server configuration automation (see e.g. Chef, Capybara, Capistrano). Also, other web frameworks are available.

&#x200B;

>Can I set up a website with just Ruby and the HTML family? Or do I need these gems pretty badly to be checking for networks information and whatnot.

At its most basic, you don't need Ruby at all to make a website, just a server and some HTML. Of course, this changes when you want dynamic page content. ERB (like Rails views) is part of Ruby's standard library, so the bare minimum you need is a **routing library** like [Sinatra](http://sinatrarb.com) or [Roda](http://roda.jeremyevans.net) which takes a takes a url and decides what code to run to build the final html which it returns. But at some point, you'll likely need a database to store information. And then you'll probably want to think about security. And then you'll find you have slow DB queries you want to spawn a background process for, and you'll need a way of doing that (like the one mperham wrote). And you'll gradually start to find you need the features that Rails offers.",1536277422.0
seainhd,"Your expectations were not properly established.

Ruby is a language.

Rails is a framework for building dynamic web servers.

Those things are radically different.",1536158662.0
MonkeeSage,"I'm not sure where in your stack the error is being hit but the problem appears to be the space in the path at ""Rails Installer"" - space is not a valid character in posix paths, which is why bash complained about ""D:/Programming/Rails: bad interpreter: No such file"". You can normally just escape the space like ""Rails\\ Installer"" when calling something directly but I'm not sure where you would do that with your setup.",1536130098.0
gnuchu,"Think it‚Äôs related to this. 

https://stackoverflow.com/questions/35545361/rails-the-system-cannot-find-the-path-specified

Had same issue with rails installer before. ",1536136691.0
TGAlda,Did you set the PATH properly?,1536159960.0
gettalong,Note that block passing has been optimized in Ruby 2.5 (see https://talks.gettalong.org/2018-08-viennarb/talk.html#/5) and block invocation will be optimized with Ruby 2.6 (see https://talks.gettalong.org/2018-08-viennarb/talk.html#/10).,1536132201.0
jrochkind,"I'd be curious about a benchmark on changing a callable into a proc/block:

   method_that_takes_block &callable_instance.method(:call)

On the one hand, there's a lot going on there, so I wouldn't guess it would be great for performance. On the other, what makes an actual proc slightly slower maybe that it's a closure, which is avoided here. ",1536153868.0
mphoyu,"I think you should use gsub with blocks approach. It is ideal because it let you operate on the match, and subsequent capture groups, that is what you want to be able to.

Quoting the oficial documentation:
> In the block form, the current match string is passed in as a parameter, and variables such as $1, $2, $`, $&, and $' will be set appropriately. The value returned by the block will be substituted for the match on each call.


E.g.
""hello"".gsub(/./) {|s| s.ord.to_s + ' '} 

If you are capturing groups you can access them as $1,$2, etc.
",1536106358.0
rolandHD,"Another tip: For more complex regular expressions, I tend to split them into named parts, recompose them, and also use named captures instead of group indices:

    CHAPTER_RX  = /(?<chapter>\d+)/
    ANCHOR_RX   = /(?<anchor>s\d+(\.\d+|))/
    LINKTEXT_RX = /(?<linktext>([.\w\-]+|))/
    FORMAT_RX   = /#{CHAPTER_RX}:#{ANCHOR_RX};#{LINKTEXT_RX}/

and then:

    line.gsub( FORMAT_RX ) do |_|
      chapter  = ChapList[$~[:chapter]]
      anchor   = $~[:anchor]
      linktext = $~[:linktext]
      %Q{<a href=""./#{chapter}##{anchor}"">#{linktext}</a>}
    end
",1536124361.0
pikopuyo,"TL;DR: backreferences won't work. You can use something else, like block form as others suggested.


I see where the confusion might come from, though, so I'll try to explain. It's kind of a timing issue: you can't manipulate the match values with the backreferences (like do math, or use them as array indices) because at the moment of calling `gsub`, they haven't been replaced by the matches yet, they are just the literal `'\1'`, `'\2'`... strings.


Let's say you have this simplified version: 

`line.gsub(/(\d)/, ""link to #{array['\1']}"")`

(By the way, your code was not actually trying to read the array, it was just writing its name inside the string. To interpolate a variable in a string you need the enclosing `#{}`.)


Before actually calling `gsub`, Ruby needs to resolve the parameters, so it evaluates `array['\1']`. When evaluating this, this `'\1'` means nothing special to Ruby; it's just a normal string. Therefore, Ruby throws an error because you can't use a string as an array index.

If you decide to turn it into an integer by doing something like `array['\1'.to_i]`, Ruby is first going to do the integer conversion. But again, at this point, `'\1'` is just a normal string, and is also not a number, so Ruby will return 0, and this is always going to result in the first element of the array.

Even if you tried to use the globals `$1`, `$2`, etc, it wouldn't work, because at the moment that they are evaluated, the regular expression was not matched yet. That's why you need to use `gsub`'s block form or some other approach, for instance matching first and then building the result:

```
/(?<a>\d+):s(?<b>\d+\.\d+);(?<c>[.\w\-]+)/ =~ input
'<a href=""./' + ChapList[a.to_i] + ""##{b}\"">#{c}</a>""
```",1536136280.0
Transocialist,"Try ""#{ChapList[1]}"", this should allow for correct string interpolation, if I'm reading things correctly.",1536118557.0
toadkicker,Sinatra is good but it leaves a lot up to you to implement. Rails is still king and I often use it for building api's only. `rails new --api --skip-active-storage --skip-action-cable -d postgresql .` is a good starting point in Rails.,1536106105.0
sshaw_,Don't forget about [Grape](https://github.com/ruby-grape/grape)!,1536111400.0
,"- do you want framework batteries included use Rails
- do you like to implement some functionality use Sinatra
- do you want speed and implement a lot of functionality use [Roda](https://github.com/jeremyevans/roda)",1536110690.0
bugant,You should also have a look to Hanami: r/http://hanamirb.org/,1536136680.0
Prime09,Sinatra is a good place to start. ,1536104853.0
sammygadd,If you mean REST then check out https://github.com/sammyhenningsson/shaf. But if you just mean an HTTP API (or want the implement the hypermedia part yourself) then I think roda is a good choice.,1536125296.0
equivalent8,"https://blog.eq8.eu/article/rspec-json-api-testing.html

You don't need any gem. Just `{id:123}.to_json` or in Rails `render json: {id:123}`
",1536128158.0
nicoinwonderland,"    class A
      def method
        puts ""!""
      end
    end
    
    class B
    end
    
    b = B.new(b.method)

Is this what your code is supposed to look like?

`b` does not have a method to it -- it's an empty class.

What are you trying to achieve?",1536075614.0
MonkeeSage,"If you want B to have the same general behavior and state as A you can make it a *subclass* of A and then specialize it as needed.

    class A
        def methodA
            puts ""Inherited from A""
        end
    end

    class B < A
        def methodB
            puts ""Defined in B""
        end
    end

    b = B.new
    b.methodA # => ""Inherited from A""
    b.methodB # => ""Defined in B""",1536120175.0
shevy-ruby,"Just remember to use ""def self."" for class methods.",1536269734.0
pachkovsky,"Just use rescue\_from on a controller [https://api.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html](https://api.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html)

You can put it either on MoviesController or ApplicationController to make it work globally. Should look like this:

    class MoviesController < ApplicationController
      rescue_from ActionController::ParameterMissing do |exception|     
        json_response({ message: error }, :unprocessable_entity)
      end
      ...
    end",1536091781.0
world_on_wheels,"My first thought is that rendering json response in params method is not the best idea. I believe that it should be controller‚Äôs action responsibility. Also this return in code looks tricky and makes code hard to follow. Honestly, I would stick to rails scaffold in that case. If you really need params validation, maybe that would be good to introduce some separate class to take care about that and later use it in your controller action. It shouldn‚Äôt do anything with json response though,  just single responsibility - validation.",1536070989.0
zZwestonZz,"You should validate the presence of attributes on the model [https://guides.rubyonrails.org/active\_record\_validations.html](https://guides.rubyonrails.org/active_record_validations.html) 

&#x200B;

Also, your movie params should look something like this.

`def movie_params`

  `params.require(:movie).permit(:title, :other)`  

`end`

&#x200B;

No need to permit id since that most likely isn't going to be updated.",1536071215.0
jrochkind,"> The key thing in the scaffolding is to name your attachment data with the _data suffix and that its type is string. I mistakenly set it as JSON at first and then Shrine was trying to parse a hash and throwing an exception.

Hmm, it ought to work (and possibly work better) with json/jsonb.  And it usually does. json/jsonb is probaby recommended, file an issue on shrine if it's not working?",1536466131.0
nordrasir,"Looks interesting and it‚Äôs always good to have simple solutions to problems like this.

Documentation wise, could be useful to have short paragraphs about the problem (even if it‚Äôs a quote from Wikipedia) and also a more detailed description of what the inputs are in your examples. 

I‚Äôve got something that I‚Äôm going to try this out in, I‚Äôll give you some more detailed feedback when I do!",1536042415.0
lifeismusic434,"Looks pretty cool, this sounds like a [constraint satisfaction problem](https://en.wikipedia.org/wiki/Constraint_satisfaction_problem). I've sometimes wished for a Ruby library for solving them, but they're quite difficult. Dependency resolution is an example of a CSP, I think the problems you mentioned are also examples of CSPs.",1536060093.0
world_on_wheels,"params are nested structure and in your case params[:article] keeps hash of article‚Äôs attributes, like name etc.

In second case, that would be puts { name: ‚Äúreddit‚Äù } but as I remember braces can be omitted when it‚Äôs the last argument. 

Hope it helps, if no feel free to ask.

PS. Sorry for code formatting, I‚Äôm on mobile.",1536041921.0
MyDogLikesTottenham,"plain is a method, and so is puts. They each take an argument and they‚Äôre both converting that argument before passing it. You‚Äôre passing a kind of ‚Äúshorthand‚Äù version of a hash",1536041721.0
leemurjames,"I don't think the gem does any of the things you are needing. The syntax highlighting, while not quite as good for Ruby, is automatic in VS Code. As far as the other needs, do you have a tool in another editor/ IDE that does these things? If so, I'd continue to use it. I handle most of these activities from the command line. The actions the gem does perform linting, intellisense, etc. are reasonably reliable, but not perfect.",1536065039.0
lzap,"Given the question, I'd recommend learning Vim or Emacs. These are stunning editors. (Vim is better, but shhhhh).",1536084407.0
zitrusgrape,https://www.reddit.com/r/ruby/comments/9b66zw/vscode_versus_rubymine_2018/,1536009022.0
pitosalas,"Thanks. Following up: I use VSCode and not an IDE because that's what I prefer. I don't like RubyMine, have tried it again several times. I definitely don't want to learn emacs or Vim. I really like VSCode. 

**Let me dial back my question: I just want to execute a screen full of Ruby. What's the lightest weight plugin for VSCode that is reliable?** ",1536155574.0
jrochkind,"I also posted this two hours earlier at: https://www.reddit.com/r/ruby/comments/9cmigj/episode_149_rails_presenters/

reddit didn't notice it as a dup since you included all the utm stuff here. 

Yours somehow has more votes, nice trick. :)",1536017081.0
ylluminate,"I'm hearing that `pg` and `mysql` now work, so that's great news. Sequel + Roda may be possible now...",1535996178.0
janko-m,Very exciting! Once it's released on rbenv I'll start testing it with my gems.,1536014527.0
gettalong,"If some gem is not working, provide them with an issue report - they are *very* welcoming to such issues. My gem ""hexapdf"" didn't work at all with RC5 but works quite fine now with RC6 :)",1536043622.0
jrochkind,"i like that they're showing presenters with a simple DIY ruby object approach, as opposed to the popular draper. Nothing wrong with draper, but good to know the simplest approach that could work. 

Useful to ask, what does draper provide that this approach doesn't? (Several useful things in fact). How did draper implement them? (Look at draper source code, open source!).  Are those things worth the dependency to me? (Quite possibly!)

Even for beginners, remember that you're just writing ruby; if you're using a dependency because they figured out something clever or tedious to redo and maintain yourself, or it's a useful re-usable building block -- those dependency authors were still just writing ruby too. ",1535989620.0
adm7373,"> Founded in 2008, GitHub became a platform following the introduction of its Developer Program in 2014. The program, which is to say the associated API, allows developers to build applications that integrate with GitHub. It has turned GitHub, which now has something like 28 million users, into a lynchpin for automated code deployment.

This sounds like someone fed 10,000 articles about GitHub into a machine learning algorithm and then had the machine write an article.",1535985216.0
brianmario,"Hello everyone!

I just wanted to let everyone know that Ruby and Rails isn't going anywhere anytime soon at GitHub. The ""monolith"" - as its referred to internally - is exactly what it sounds like: a massive Rails application that has barnacles and rust (the stuff that gives you tetanus, not the language) all over it. As you can imagine, any 10 year old codebase will accumulate. As such we're working hard to make sure we can continue to scale the platform for at least another 10 years. But, we also plan to upstream (almost?) all of the patches and hacks we've built over the years to scale our codebase to the bounds of which hopefully most of you use nearly every day. @eileencodes' and @tenderlove's talks at RailsConf this year were a glimpse of that direction. And while I can't say Ruby and Rails‚Äô future is secured (forever) here, I can say at the very least that we have plenty of years left of working with the community to help make Ruby and Rails scale to the size GitHub has become.

Everything Sam is quoted saying in this article is accurate. I just wanted to add some clarity to any GitHub Ruby and Rails FUD that came up as a result.

There's no way around it, we owe our success to the Ruby and Rails communities ‚ù§Ô∏è",1536036790.0
RubberRoad,Sensationalized headline üòê,1535984591.0
equivalent8,So get prepared for Guthub glitches. ,1535984978.0
javakaiser,[gitlab](https://gitlab.com) FTW,1535996115.0
joelbluminator,"If you have a huge development team,  really care about performance, static types and micros services than Rails/Ruby don't make that much sense. But neither do Python, DJango or PHP.

That's A LOT of ifs, I wouldn't make a big deal out of this.",1536048305.0
shevy-ruby,"I am so glad I removed my account soon after MS assimilated github.

It is now in the process of being fully assimilated, similar to the BORG in Star Trek - just that Microsoft does not have as much style as the BORG did.

It is also the first sign HOW Microsoft plans to change github - I pity the poor worker drones at github for having become useless MS nodders. They have to happily nod their heads to empower their new master.

It's time to help support other platforms anyway.

Bye bye MS GitHub!",1536016277.0
fedekun,"I hope this project does well, Ruby deserves a decently fast execution environment. It's such a nice language.",1536019001.0
moomaka,"Do they actually work or is it just `bundle install` that doesn't fail now? The table seems to indicate it's unclear, has anyone ran the respective test suites?",1535996995.0
ylluminate,Has anyone tried Roda + Sequel yet atop this release?,1536009712.0
Mike_Enders,Not sure I understand the 1.0.  Does this now work with rails with activerecord etc? I would think so with a 1.0 designation but not sure since the readme still indicates no.,1536038666.0
,[deleted],1535914334.0
sshaw_,"https://ruby-doc.org/core-2.5.0/String.html#method-i-gsub: 

> If replacement is a String it will be substituted for the matched text. It may contain back-references to the pattern's capture groups of the form \\d, where d is a group number, or \\k<n>, where n is a group name. If it is a double-quoted string, both back-references must be preceded by an additional backslash.
",1535914480.0
jemminger,I'd file an issue in the github repo https://github.com/davetron5000/methadone/issues,1535904314.0
BadMinotaur,"That's a nice primer on the sometimes-mysterious `Symbol` class, but I'm surprised the article didn't mention one of the main reasons to use Symbols -- because each Symbol is unique and has a consistent `object_id`, Ruby uses integer comparison to compare two Symbols, instead of the much-slower String, which makes it great for naming objects, keys, etc.",1535878990.0
allcentury,"Interesting, I didn't know they weren't garbage collected.  Seems like JSON.parse(body, symbolize_names: true) has some tradeoffs.",1535884770.0
Peg-leg,"I don't think using symbols in your lookup method (ex. `Symbol.all_symbols.include?(:dummy_symbol)` is a good way to exemplify the behavior you want. The moment you use a symbol it will get added to the table, so this example will return true in a fresh irb instance `Symbol.all_symbols.include?(:DummyClass) # => true` even if the class was not defined. I think the grep method should be used.",1535920086.0
jrochkind,"> But the main difference between them relies on the fact that a new String object is created for each called string ‚Äî even if they‚Äôre identical

The other difference worth noting is that Strings are _mutable_, Symbols are not. (Which is in fact why there's a need for each String to be a new object, but symbols not, that's the reason for it). 

Something else interesting but not really worth noting is that the idea of Symbols comes from smalltalk. 

> Smalltalk has a class of character sequence objects called Symbol. Symbols are guaranteed to be unique‚Äîthere can be no two equal symbols which are different objects. Because of that, symbols are very cheap to compare and are often used for language artifacts such as message selectors (see below).

https://en.wikipedia.org/wiki/Smalltalk",1535917104.0
whalesalad,I‚Äôd get the book Eloquent Ruby and start there. ,1535874128.0
recycledcoder,"Some of the beauty of Ruby is that you can learn it without having previously mastered any advanced topics. Ruby will scale to your degree of sophistication, and encourage you to develop.",1535874614.0
akito_mashua,"Advanced topics can be considered the following ones:

* multi thread applications
* mutual exclusion
* semaphores
* interprocces communication
* protocols implementations
* socket or serial programming

But for now don't turn your attention on somehow ""formally"" learning that stuff. Focus on picking a good book for your favorite programming language (ruby) and grasp a solid understanding of the language itself. As you build your experience as a programmer through time, you will unavoidably cope with them. Building strong foundations on programming and how programming languages works from a cpu perspective (thread states, preemption and context switches ) is also very important. ",1535890699.0
,[deleted],1535943291.0
meagar,"Modules are a method of code reuse in Ruby. Ruby classes may add modules to their inheritance chain by `include`ing them, allowing objects of that class to receive the methods defined in the module.

Modules are often used to implement ""behaves like"" relationships, while inheritance denotes a more traditional OOP ""is a"" relationship. A class can inherit from at most one parent class, but it can include any number of modules.

For example:
    
    class User
      def can_moderate?
        false
      end
    end
    
    class Admin < User
      def can_moderate?
        true
      end
    end

If we wanted to include an additional behavior in our `Admin` class, we could not do so via inheritance, because the class already inherits from `User`. Imagine we wanted to provide uniform email validation for many types of objects in the system we could define a `HasEmail` module that provides this functionality, and include this module in `Admin` without chaning the class from which `Admin` inherits:

    module HasEmail
      def email=(value)
       @email = value
      end
    
      def valid_email?
        @email&.match(/\A.+@.+\..+\z/)
      end
    end
    
    class Admin < User
      include HasEmail
    end

Now, `Admin` responds to all the methods defined in `User`, *and* all the methods defined in `HasEmail`.
",1535850864.0
MonkeeSage,There's an excellent talk called [Ruby Internals](https://www.youtube.com/watch?v=NlPxvRSUVQI) by Patrick Farley that goes into the actual C data structures used in the ruby object model if you want a further peek under the hood.,1535855404.0
SureLetsDoAnother,"A lot of good information here about how modules are used for code reuse.

Modules are also important for namespacing, allowing you to keep names and variables separate.

This is a weird example, but here goes...

    module Golf
      Class Club
      end
    end

    module School
      class Club
      end
    end

    Class Student
      def initialize
        @academic_club = School::Club.new
        @golf_club = Golf::Club.new
      end
    end


Without the namespacing provided by the modules you'd start running into some weird situations when trying to figure out exactly which thing you're trying to reference.

",1535859250.0
shevy-ruby,"The documentation can be confusing.

I think code examples are best:

    module Foobar
      def self.hi
        puts 'hi!'
      end
    end
    Foobar.hi

Here you invoke hi() on the toplevel module Foobar.

Without the ""self."" part, it would be a method that would
not be accessible within the toplevel module Foobar
name, but you could include it into other classes and
modules (or use .extend, too).

I personally really ""micro-manage"" methods without much
""magic"". That means I usually define toplevel methods,
if I want to call them like that: Foobar.hi  and then I also
may manually add a method that has the very same name
but does not have the ""self."" part. For some reason I
found this approach to be much easier (and I subclass
quite a bit too; usually all classes I have in a given ""namespace""
I subclass from class Base defined in that project too).",1535882633.0
vhodges,"Modules are a way of having code that is to be reused be used in more than one class.  They can be included into a class , the effect is that the code in the module is inserted into the class as if you'd typed it in, so any methods defined in the module become methods on the class.  They're an alternative to using a base class.  

Ruby calls them Mixins but it's really a form of Composition (as opposed to Inheritance)  [https://en.wikipedia.org/wiki/Composition\_over\_inheritance](https://en.wikipedia.org/wiki/Composition_over_inheritance) (note I didn't read this article, but it probably does a better job than I can).

This seems to cover things well.  [https://www.tutorialspoint.com/ruby/ruby\_modules.htm](https://www.tutorialspoint.com/ruby/ruby_modules.htm)",1535851534.0
three18ti,"First, ruby 2.2.0 is pretty old. Use current docs: https://ruby-doc.org/core-2.5.0/Module.html (though in this case the difference is negligible)

Second, you also need the supporting docs for class: https://ruby-doc.org/core-2.5.0/Class.html

Third, this post really helped me understand the difference between classes and modules: https://stackoverflow.com/questions/151505/difference-between-a-class-and-a-module I particularly like the line ""Classes are about objects; modules are about functions.""

So if I were creating an ""animals"" program, I might have a module with functions like ""run"", ""play"", ""eat"", and I would include that module in my Cat and Dog classes so when I instantiate Cat, I'll have those methods available.


    module AnimalThings
      def eat
        # eat food
      end
    end

    class Cat
      include AnimalThings
    end

    mr_whiskers = Cat.new()
    mr_whiskers.eat()


Now, because you can't instantiate a module, you can't:

    AnimalThings.new

But you could:

    AnimalThings.eat

So to summarize, you have to call `.new()` on an object before you can use its class methods, you can't call `.new()` on a module and can call the methods just by including the module in your code.

Does that help?",1535851695.0
LemonAndroid,"You will get better help in a chat room like #rails or  #rubyonrails irc or [gitter.im/rails/rails](https://gitter.im/rails/rails) or the Ruby on Rails Slack.

&#x200B;

[https://www.reddit.com/r/rails/comments/5qyjdd/is\_there\_a\_discord\_community\_or\_any\_sort\_online/](https://www.reddit.com/r/rails/comments/5qyjdd/is_there_a_discord_community_or_any_sort_online/)",1535805533.0
sammygadd,Sounds like you should get your input in a `while` loop. Or if  your are reading from a file then `IO.readlines` might be good to check out.,1535791457.0
shevy-ruby,"> if I should just submit the solution in a language
> that can accommodate their input requirements easier

Sounds more as if Kattis is giving you some problem rather than ruby.

I think the best way would be to design it through OOP, that is a proper class + methods. However had, leaving that aside, even without a class, I'd arrange through a method, and work on a per-line basis.

You can design it so that your code handles both input via methods, and input via a loop properly, e. g.:

    def obtain_user_input
      loop {
        user_input = gets.chomp
        break if user_input == 'q' # Just to show one example for a break condition here
       puts shift_left(user_input)
      }
    end

By the way, it's strange that your code has unit tests - but it does not work. :)

I'd start with making the code work before even jumping to writing any tests.

If Kattis is using weird file layout, you can always split a large line into newlines via:

    File.read('path_to_file_here').split(""\n"")

and then feed that into the method.

You can design the method in a way so that it either is fed with input; and if no input is given, default to using gets.chomp instead.

That way you retain the flexibility to be able to handle this both via a method, and with user input.

The problem is very simple, don't over-complicate it. Even everything in a single line should be dead-simple (but I do wonder why Kattis is making such a strange task ... perhaps it is an awful platform).",1535799090.0
hmans,I don't get interest-specific Mastodon instances. I have several different interests and I sure as hell don't want several different Mastodon accounts.,1535793397.0
ignurant,That's massivetadon ;) hoooo yeaaahhhh,1535768413.0
RepSchwaderer,This is so cool. Joining in today,1535804616.0
bradendouglass,Community over there really is super cool. Glad that it has taken off,1535815252.0
banister,i give it a week before the ruby SJWs join up and start raging on it.,1535941246.0
nakilon,This platform is useless.,1535832685.0
moomaka,"The `Gemfile` doesn't define dependencies for gems, the `gemspec` file does (https://guides.rubygems.org/specification-reference/). You also can't use git repos in `gemspec`. ",1535745481.0
seainhd,You should just post the actual gems with what you‚Äôre actually trying to do and access.,1535816518.0
sshaw_,"Yes, Bundler only downloads git dependencies in apple's `Gemfile`. It will not download git dependencies in apple's dependencies' `Gemfile`s. 

For this you'll have to make gems: 
https://guides.rubygems.org/make-your-own-gem/

For hosting private gems, see https://github.com/zendesk/geminastrongbox",1535751211.0
zta6pitt,"Sidenote: seems like you were a little upset about this - (""barely started and already in a pickle""). You should know that programming consists of being wrong/stuck VERY often, so don't sweat stuff like this. It happens to literally every programmer ever, and it happens all the time. This is kinda the beauty of programming, it doesn't really matter if you're wrong. In the majority of programming situations, especially when you're starting out, there's almost NO negative effects of being wrong. It's a computer, just stop the program, fix it and start it again. No harm done. ",1535734573.0
Schrockwell,"irb is an interactive Ruby prompt, i.e. you write actual Ruby code in it, one line at a time. If you want to run a script that‚Äôs already in a file, just go to the regular Windows command line and do ‚Äúruby [path to .rb file]‚Äù.",1535726946.0
aytch,"You would need to create the Greeter class first, which is shown near the bottom on [Page 2](https://www.ruby-lang.org/en/documentation/quickstart/2/).

    irb(main):001:0> greeter = Greeter.new(""Pat"")
    NameError: uninitialized constant Greeter
    	from (irb):1
    	from /Users/aytch/ruby/bin/irb:11:in `<main>'
    irb(main):002:0> class Greeter
    irb(main):003:1>   def initialize(name = ""World"")
    irb(main):004:2>     @name = name
    irb(main):005:2>   end
    irb(main):006:1>   def say_hi
    irb(main):007:2>     puts ""Hi #{@name}!""
    irb(main):008:2>   end
    irb(main):009:1>   def say_bye
    irb(main):010:2>     puts ""Bye #{@name}, come back soon.""
    irb(main):011:2>   end
    irb(main):012:1> end
    => :say_bye
    irb(main):013:0> greeter = Greeter.new(""Pat"")
    => #<Greeter:0x00007fa7f8203210 @name=""Pat"">
    irb(main):014:0> greeter.say_hi
    Hi Pat!
    => nil

‚Äã

Either way, I'd honestly recommend working through something like [CodeAcademy's Ruby class](https://www.codecademy.com/learn/learn-ruby) first.",1535727397.0
akito_mashua,"Follow the advise given by the previous comments and try getting a book or a course. If you cannot spent money at this time, check this:  https://mindaslab.github.io/I-Love-Ruby/  . It's a very decent effort to teach ruby.",1535750132.0
felondejure,Just get a udemy course or something first. You need someone to explain stuff to you at the beginning well especially if you dont know anything about programming. Will make your life easier,1535745150.0
youngdestroyers,Nice!,1535829107.0
ezekg,TIL about `bundler/inline`.,1535745407.0
i542,"Hey OP, thanks for the great article. I‚Äôve been transitioning to Ruby over the past few months and it is really useful to see concepts like these explained. I have a question, though: is this idiomatic Ruby code? I haven‚Äôt really seen almost any dependency injection in the Ruby and Rails code I have encountered so far. The code in the article is very straight forward and makes a lot of sense coming from PHP or Java, but I got the impression that Rubyists slightly frown upon techniques like that. Thanks for explaining!",1535750544.0
DissonantGuile,"Good article, few things:

* In practice, tests/specs should be made before writing the implementation.
* Dependency injection is very common in Ruby (why wouldn't it be?)
* The 'My Little Pony' references and gifs are cringe worthy.
",1535751000.0
world_on_wheels,"Great post!

&#x200B;

I really like DI. Recently I have done good refractor using DI. Never to late :)

By the way, Imho it's little not intuitive in Ruby that there is no protection from changing the value in the constant, without freeze.

&#x200B;",1535795055.0
ignurant,"I'm always pleased with its general utility. Recently I planted a binstub in one of my paths that essentially wraps the slack-notifier gem. Now I can pipe terminal output to push notifications on my phone for free, such as:

`$ do_this_really_long_thing_like_a_scraping_task.sh && slack ""that thing is done""`

Or to save a little snippet for later 

`$ cat the_thing | slack`


It's not really an exotic example, but the simplicity and utility brings me much joy. I'm crafting ""binaries"" out of nothin' over here. I'm going to work on creating a pleasant CLI tool with persistent config and stuff.",1535716994.0
FrontierPsycho,"I wrote a Diplomacy adjudicator in Ruby. It's called ruby-diplomacy and you can find it on Github. Unfortunately I never truly finished it, because I found somebody else who had written a better one in go. But it was so much fun! ",1535716554.0
chmarus,I did scraper that was pulling match results of my favorite esport team from some website. Then I wrote same script using NodeJS ,1535717773.0
DerNalia,"I always hated the default file layout. So I made my own, based off ember's new layout: 
https://github.com/NullVoxPopuli/drawers",1535738027.0
andygauge,"Prayer lexer-- recommends a Bible verse based on the context of a prayer.  

This fits nicely with praybook-- prayer tracking social network.",1535734782.0
rorykoehler,"http://mapbeet.bibimapp.com/

2.5 days to build. Another 2 weeks to polish.",1535718816.0
robertross,Ive been building https://firehydrant.io with Rails 5.2 and I fell back in love with Rails because of it. ,1535724881.0
akito_mashua,A code generation utility. You describe graphs and transitions between the nodes in a .tex file. Then the ruby takes over by parsing that file and produces C code for you implementing your graph. It is usefull for implementing protocols. It can be found here: https://github.com/mashua/poc-fsm . I plan to add support for graphviz because .tex file can be a little messy and you don't have automatic layout of your graphs. ,1535749678.0
djh3315,I built the game Talibri (r/https://talibri.com) in Rails. Started out as a side project to check out rails 5 and grew into something much larger/more enjoyable! I've arguably learned more building this than i have in college and my career combined (albeit my career is now .NET focused). ,1535722013.0
rolandHD,"A 6502 emulator (plus assembler and disassembler) that can run C64 basic in a shell, but does not emulate most of the c64 hardware (screenshot [1](http://u.cubeupload.com/rolandHD/c64term2.jpg), [2](http://u.cubeupload.com/rolandHD/c64term.jpg)).",1535724899.0
rgirard59,"Its uses rails for some of the web front end, but I have been working on (slowly) an open source app monitoring tool, similar to NewRelic or ScoutApp and others, [https://github.com/randy-girard/app\_perf](https://github.com/randy-girard/app_perf)",1535724998.0
2called_chaos,"I made a tool with way too much threads and status displays (my first curses experiment) to selectively pull MySQL tables from a remote host, intended for development and debugging with production data but without the need to pull the whole database (well and with more status for the impatient like me).

https://github.com/2called-chaos/db_sucker

The intended functionality might be questionable (got some shit from mainly Postgresql users) but we love it in development.

I made a few tools but this one made my brain hurt the most. I spend 90% of the time figuring out deadlocks and logical softlocks but a fun project nevertheless.

EDIT: Maybe also a worthy mention because I still use this tool daily: [DLE - Directory List Edit ‚Äì Edit file structures in your favorite editor](https://github.com/2called-chaos/dle) but it's a rather simple tool",1535725599.0
jrochkind,http://rubyland.news,1535727741.0
Draglung,www.theclosingdocs.com makes me passive income every month,1535729065.0
joshmn,Visual voicemail and voicemail API. Keep your own phone number.,1535744515.0
sshaw_,https://github.com/sshaw?utf8=%E2%9C%93&tab=repositories&q=&type=&language=ruby,1535750880.0
DevopsYo,"Pretty much any small web application I need I do with Sinatra or Cuba. I tend to make any of my slide decks with one of those and some Markdown js rendering.

I also do a lot of shell scripting with Ruby, since it's the language I'm most comfortable in and the tooling around that stuff is really good.

I also tend to reach for Chef for configuration management, and it's a Ruby DSL.

I also wrote a bill tracker for my getting email updates on bills in my state legislature in Rails back when I was trying to get into the tech industry.",1535756348.0
shevy-ruby,"I'll confine to my ... top three or so, I think.

(1) Cookbooks and RBT (ruby build tools). I am presently rewriting both and merging them together. The idea behind the code in these projects was (and still is) to compile/install programs, usually from source. Additionally to build up a LFS/BLFS system (Linux from scratch), and support for AppDirs (similar to GoboLinux). It also is supposed to be a ""build tool"" and thus should help with more things ... generating packages for distributions (similar to ruby fpm does), generating other files, snapcraft etc... etc...

It's sort of a meta-project really. It also became fairly big which has the ... negative aspect that it takes too much time away.

(2) BioRoebe - a project that focuses on bioinformatics, similar to ""bio"" (BioRuby) but still differently, coming more from a molecular biology point of view than a
pure maths-driven bioinformatics point of view.

(3) Roebe - this is mostly just for a different mixture of ruby files that I use a lot and have bundled together. Mostly for my own personal use but perhaps others may also want to use this or that code, so they can have a look.

My biggest problem right now, by far, is lack of time. I can't easily invest more time into any of these projects (and there are many more) so I had to cut back on some of them.",1535799969.0
strzibny,"Few things over the years, they are kind of gone now...

I am still running https://www.gettandem.com/ for language exchange. It's a classic Rails + PostgreSQL/PostGIS for geo things.",1535980666.0
Jdonavan,Post your code...,1535720706.0
dennismp,Remove the `(` ? Depends on what you want it to match.,1535714633.0
midasgoldentouch,Find or create by is your friend here,1535689664.0
inebriated_me,"@midasgoldentouch is correct, but I want to go a little further here for the sake of instruction:

&#x200B;

Yes, definitely check out some of the helper methods in ActiveRecord (AR) for this kind of stuff: \`#find\_or\_create\_by\` is a good one to use allll the time.  The other thing you're going to want to do is consider how you might perform the same kind of check before creation \_without\_ AR: what simpler queries could you string together in a method to do the same thing instead of just leveraging the helper?",1535690689.0
sdn,"You need to use something called a Join Table. A Join Table is a model which contains a reference to two other models. In this situation you have a 'User' model and a 'State' model. A Join Table would have two columns: user_id and state_id. Typically the join tables are named after both tables (ie: StatesUser)

So you would do the following:

1) Create all your 50 states in the database
2) Create users as needed
3) Create a StatesUser object as needed to represent a visitation of a user to a state.",1535690520.0
dandiemer,As a fun aside http://rubular.com is a great tool for messing with the perfect Regex,1535679018.0
losangelesvideoguy,"Whassamatta here, ain't nobody ever heard of look-ahead and look-behind? I swear, sometimes I wonder about you people.

Anyway, the *correct* answer is:

    str.match? /(?<=^.)[^\@]*(?=.$)/

Breaking this down:

    (?<=^.)

This is a look-behind, as indicated by the pseudo-capture group `(?<=XXX)` at the beginning of the regex. It matches, but does not include, the sub-regex XXX. So the entire regex will only match if it occurs immediately following a substring that matches the look-behind. In this case, because the look-behind includes the anchor token `^` followed by a `.` which matches any single character, it only looks for matches starting at the second character of the string.

    [^\@]*

This is pretty standard, we take the negated character class consisting of the single character `@` (which we have to escape using a backslash) and match it zero or more times. So any string will match true *unless* it has an `@` character somewhere in it.

    (?=.$)

This is a look-ahead, the inverse complement of the look-behind. It appears at the end of the regex, and the entire regex matches only if the main part matches immediately before a look-ahead, but the resulting match does not include the look-ahead itself. And since we use a `.` to match any character and a `$` to anchor the look-ahead to the end of the string, we effectively only are examining the part of the string excluding the last character.

So this regex will only match true if the characters in the second through second-to-last position do not contain an `@` character.

Yes, there are plenty of other ways to do this with Ruby code, but if you want to do this with just a regex, this is how you go about that.",1535704378.0
Inityx,"    target = '@'
    string = 'Ablah@blah@blahZ'

    # standard library
    !string[1..-2].include?(target)

    # hybrid
    !/^.(.*).$/.match(string)[1].include?(target)

    # Regex
    !/^.[^#{target}]*.$/.match(string).nil?",1535675889.0
riddley,"Looks like homework.

Lotta complicated solutions... isn't /\\A.(.\*).\\Z/ sufficient?

Also matching that it doesn't contain @ is just /\[\^@\]/ right?",1535679189.0
headykain,I assumed that the OP‚Äôs requirements of between the first and last char might require some array manipulation like removing first/last elements. But yea can do String#include? as well.,1535676530.0
headykain,"`!""Ablah@blah@blahZ"".chars.include?('@')`",1535671935.0
my_sfw_alt,"I can't find a gem, but you could make some shell calls to something like this: [https://github.com/beschulz/wav2png](https://github.com/beschulz/wav2png)",1535656723.0
joemi,"If you want to do it in a non-hacky way, you need to learn how to process binary files (read the wav, generate a graphic file) and how to do some DSP (find the db levels).

DSP also comes into play for converting to MP3 if you really want to do that (not sure how it fits in with the goal of ""create images based on relative db levels""), though the MP3 conversion is going to be significantly harder than the rest of your project, so you might as well find an existing solution, be it a gem or just making some shell calls to a wav-to-mp3 converter.",1535853958.0
meagar,"From your book:

> Poly means many, and morphis means forms. I think its either in Greek or Latin, who cares? In
programming language you can use one thing to do many things, lets see a few examples. Lets take
the humble plus sign. When we take ‚ÄúHello ‚Äù and ‚ÄúWorld!‚Äù and put a plus sign in between, the
output is ‚ÄúHello World!‚Äù. In technical talk we call this concatenation (joining together). Why there
are so many difficult words to learn when you want to be programmer? Who knows? Possibly
speaking some non-understandable blah blah might make you look intelligent, possibly fetch higher
pay

I think you should leave technical writing to people who know what they're talking about, and can communicate complicated concepts clearly, rather than glossing over them because you do not understand them.


We had this [same conversation a year ago](https://www.reddit.com/r/ruby/comments/6z30no/fund_i_love_ruby_for_the_year_2018/).",1535680992.0
faitswulff,"Spoilers: They don't actually use ActiveRecord to solve this

> The idea was to bypass `ActiveRecord` and use the underlying MySQL client which was providing the [stream](https://github.com/brianmario/mysql2#streaming) option. I‚Äôm sure there are similar options for [other databases](https://deveiate.org/code/pg/PG/Result.html#method-i-stream_each_row).

",1535654594.0
nyekks,"I would use [sequel](https://github.com/jeremyevans/sequel) for this.

(i use it for everything tbf)

i guess its another dependency compared to just using the mysql adapter directly if youre already using activerecord.",1535663004.0
ksec,"Anyone one knows why this is being rejected? I cant quite understand what is going on. I don't see any drawbacks, but offer lots more flexibility. Am I missing something?",1535644207.0
firstpantsthenshoes,"I sympathise. This is frustrating. We just upgraded to 5.2 to have a look at AS and also decided not to jump in.
Long story short, we got an issue with Paperclip saving files publicly to S3 even though our config said private. We‚Äôll be implementing our own little service it seems.",1535688645.0
Why_is_that,I am not an expert on this but DHH and rails maintainers have never imo had a high bar for provide features that follow any kind of logical progression towards advancing the framework (or what I would say is the prefessional standard). Updates are primarily sugar and many of the contributors are unwilling to adapt. Rails is nice to get webdev jump started but it seems like it won't keep up simple because of the attitude of those who write comits. Forking is probably the best long term solutions I suspect. Get someone who isn't fickle leading rails.,1535732772.0
realntl,"Shrine seems to have done the best job at refusing to impose arbitrary constraints. In the unlikely event that I find myself needing to introduce a file uploader to a web server, I don't see myself ever using active storage at this point.",1535738675.0
LivingAnywhere,"We still use rails daily but with grapqhl and react. But we also have a lot of non react pages, so there action view falls into place there too. I usually start with super small rails framework (you can pick whats loaded in application.rb) and then gradually add more stuff. We wrap it all up in our containers up to our k8s cluster. It works like a charm.",1535635452.0
lafeber,"I feel like this needs to be said... Rails is absolutely unbeatable in generic, boring backend applications. In terms of code cleanliness and development speed, it's just a joy to work with. You spend very little time worrying about the frontend. It's just not holding you back.

However, I also see its limitations. I've worked with spree / solidus for a webshop in Rails. When going through a purchase-flow, looking at the Rails logs just makes you very uncomfortable. Every step is a new request with new queries for the tax zones and currencies, to name a few.
The same is  for [wrts](https://wrts.nl/), where you need to fetch a list of words and their translations once and practice their spelling for a while. Millions of users means that you really want to minimise the amount of requests.

I also see that jQuery is on its way out, and I'm not yet sure what to replace it with. Vue seems nice but I don't want:

* to run an extra node server
* to duplicate business logic
* to replace frontend functionality I never needed to worry about (awesomeness of simple_form) with vue
",1535630014.0
ksec,"\>Benchmarking one server serving our Rails front page leads to \~50 RPS. ""That‚Äôs so slow"" I hear you say. And yes, it is. But: No one cares. If we had 50 requests per second for any time other than me testing we would spend enough money on this issue to just make it go away (scaling out is possible for us in the current situation). 50 requests/second means 3,000 requests/minute, 180,000 requests/hour or \~4.3 million hits per day. Even with mediocre conversion rates a few of those people would hopefully subscribe to our service and start paying money that could immediately be thrown at more hardware or motivate us to implement a caching strategy, rewrite parts of the service or maybe just optimize the database queries.

&#x200B;

I wonder what Hardware was it using. 50RPS is indeed very low.

80% of the traffics comes in 20% of the time, which means you cant reach that 4.3 million calculation figures. 

&#x200B;

&#x200B;",1535622403.0
Mike_Enders,"Love Ruby but this ignores two very common realities. 

1. Apps where data processing is required - we had to temporarily Pass over to the dark side (node) for a csv processing app.

2. The many startups that rely on being free for the first few years.  I use Ruby because few apps go viral but mass appeal apps that look to leverage userbases for future monetization need performance per server.",1535661584.0
Mancinoz,https://i.imgur.com/rmzIxxP.jpg,1535687774.0
shevy-ruby,"I don't think this is a good criterium.

Ruby is awesome.

Rails is indeed boring. And that made me quit reading a book about rails. I tried to use rails a few times afterwards but never felt that it was interesting to me or how I WANT to think about the www. I really don't want all these awful DSL-like constructs that rails uses.

I never really went back into rails and I don't think I will try again either. When something is too boring, I will move to something that is more interesting and fun (but still simple).",1535801637.0
molayab_,Cool. Thanks üëç,1535604401.0
rousseau_alexandre,Great article. Thank you son much.,1535623745.0
picandocodigo,"This is a great tutorial, thanks!",1535633093.0
gray_-_wolf,"Any reason to prefer `rb_str_new(x, strlen(x))` over `rb_str_new2(x)`? I don't think there is...",1535638527.0
Freeky,"For something as simple as this example I'd suggest using [ffi](https://github.com/ffi/ffi).  Quite a bit easier, and portable to alternative Ruby implementations like JRuby.",1535656483.0
plasticide,Good on you for figuring out what's important to you and making it happen. It's difficult to recognize the opportunity cost of doing things you love doing - what you're giving up in return. I hope these changes in your life bring you joy!,1535587236.0
janko-m,"Thank you for sharing /u/solnic, it's very valuable to be able to learn from experiences of open source developers.

I would be very curious to hear more about the improvements you've made to rom-rb (or dry-rb) to lower the barrier for new contributors, as I would like to do the same :)",1535622262.0
realntl,"Sorry to hear about all that burnout. When I read the bit about being tempted to write a static site generator to replace middleman, only to force yourself to just use wordpress... yeah I could, uh, relate to that, you might say. :)",1535636703.0
naveedx983,Would love to hear more thoughts from you on Elixir.  ,1535661184.0
bugant,"/u/solnic it would be good to have email alerts for new posts, if you plan to write posts more regularly :) Thank you for all your hard work!",1535700931.0
zverok_kha,"From Hash [docs](https://ruby-doc.org/core-2.5.0/Hash.html#method-c-new):

> If a block is specified, it will be called with the hash object and the key, and should return the default value. **It is the block's responsibility to store the value in the hash if required.**

    devs1 = Hash.new{ |h, k| h[k] = Set.new}
    devs1[""non_existent_key""].add(""new value"")
    p devs1
    # => {""non_existent_key""=>#<Set: {""new value""}>}",1535568588.0
TheSmartnik,"One more alias üòë One more reason for code to be inconsistent. Enough with \`map\`/\`collect\` and \`find\`/\`detect\`, now I have to think which one suits better in context \`filter\` or \`select\`. Feel like too many aliases ain't a good thing.",1535550814.0
tvcgrid,"I like this particular change. It's almost always called `filter` in other active languages, and making things comfortable for new adopters is not a bad move for Ruby.

Aliases are aliases are aliases. I don't mind them, if they achieve some positive value. If the question is about good documentation, that might be one thing, but eliminating them without regard to other factors and with only a hyper focus on some surface level notion of consistency doesn't make much sense.",1535571978.0
faitswulff,"I personally hate this method name in javascript, since I can never remember whether I'm filtering out (`#reject`) or filtering _for_ (`#select`), but more choices the better, I suppose.",1535546757.0
jrochkind,Don't forget that the `find_all` alias already existed too...,1535555926.0
sickcodebruh420,I screw this up every time I write Ruby now. ,1535572039.0
waffle_ss,Cool hopefully they make Ruby 3 just a symlink to Python,1535558005.0
jrochkind,"The most recent [weekly Rails update](https://weblog.rubyonrails.org/2018/8/26/this-week-in-rails-action-cable-testing-utilities-bugfixes-and-more/) happened to mention an improvement in Rails master to [""Omit BEGIN/COMMIT statements for empty transactions""](https://github.com/rails/rails/pull/32647), and the discussion of that PR happens to [include a comment](https://github.com/rails/rails/pull/32647#issuecomment-410760654) from @matthewd that touches upon the issue of nested transactions. 

Apparently the current implementation is partly there for performance reasons, but matthewd has some hopes that it can change in the future without performance problems, as a result of other (very non-trivial) architectural changes. 

I think everyone agrees it's confusing (and difficult to use to meet your actual needs) how it is now, it's there for historical and somewhat complicated reasons.

(The things you learn reading the weekly Rails update and the PRs it links to, eh? I never had any idea why AR nested transactions were so weird either, have a bit more idea after reading that PR discussion)",1535545694.0
penguinbert,"This is definitely confusing behavior but if you look closely at the docs, the behavior is very specific to ActiveRecord::Rollback, because 'transaction' specifically swallows that exception - if you were to raise a separate exception, nothing would be persisted.  

Now, it's super weird that the models in the inner block are still persisted, but if you think about how a transaction works in the underlying SQL layer, it's a little bit less strange...  Keep in mind, to create a transaction in SQL, you just write ""BEGIN"", followed by your sql statements, and then ""COMMIT"".  The transaction isn't finalized until you send the word ""COMMIT"" through to your database.  (You can try this out in your database console)

So in rails, every time you run a '.create' or '.save' method, it's actually writing SQL to your database connection, and that is hanging out in an uncommitted state until Rails issues a ""COMMIT"" on the database layer to actually have that persisted.  For example (assuming we're not inside of another txn block):

    User.transaction do # Sends BEGIN to db connection
      User.create(username: 'Kotori') # writes corresponding INSERT to db connection
    end # Sends COMMIT to db connection

So then, given the behavior described in the docs, how nested transaction blocks join the parent, the underlying sql for the example provided above will look something like this:

```
User.transaction do # BEGIN
  User.create(username: 'Kotori') # INSERT
  User.transaction do # nested txns are essentially a no-op
    User.create(username: 'Nemu') # INSERT
    raise ActiveRecord::Rollback # This gets caught and swallowed - how could we reverse the one INSERT already written to the db conn?  Savepoints is one solution, but since we're not using that here, the commit will insert both records.
  end
end # COMMIT
```

That all explains how it works, but not why it works that way.  For that, I'm guessing that the rails team decided to make nested transaction blocks join their parent transaction possibly because of historical reasons relating to db connection adapters not having support for savepoints or other nested transaction workarounds.  The current syntax seems a bit like a leaky abstraction - using ruby blocks to represent transactions feels really nice for the non-nested case, but there's the edge case where you can nest ruby blocks inside one another, which doesn't really reflect the reality of transactions in RDBMSes themselves; so you have weird, unexpected behavior when you do that.  

Maybe savepoints is a great way to emulate what we're trying to do with nested transaction blocks all the time in rails, but now we have this legacy syntax that needs to be supported, and hence the complicated documentation?  Also I don't know if you'd be adding a bunch of overhead as well.

In any case, great question!  Fun to dig through the code there and see some of the lesser visited parts of ActiveRecord :)",1535555182.0
moomaka,"I guess there are two answers:

1) It's mostly a side effect of how `ActiveRecord::Rollback` is handled, it's the one exception that is swallowed by `transaction` blocks and this behavior is intentional. Basically, don't use `ActiveRecord::Rollback` unless this is what you want (and it almost never is).

2) There are two options for how a `transaction` block inside another `transaction` block could behave by default, one is to 'join' the existing transaction, the other is to create a sub transaction. The overwhelming majority of the time joining the existing transaction is what you want, so it's the default. There aren't many good use cases for 'real' nested transactions.",1535551645.0
tbuehlmann,"PragTob wrote about it [here](https://pragtob.wordpress.com/2017/12/12/surprises-with-nested-transactions-rollbacks-and-activerecord/), not sure it answers your question, though.",1535545221.0
bugant,"Thank you for sharing! I did not notice this thing  in many years! Just tought it'd worked in the expected way, i.e., only create the outermost user.",1535548148.0
equivalent8,if anyone find this useful. (I keep on forgetting the steps so I just wrote it down),1535528980.0
internethostage,"Thanks for sharing! Same as you, every time I need to do this I have to read and search a ton as I forget the steps.",1535686062.0
sickcodebruh420,"I‚Äôve tried to make the switch a few times and always go right back to RubyMine. Maybe it‚Äôs just familiarity, but I prefer the test runner and debugger, DB tools, refactoring, find window, and click-to-source behavior. Most of my work has me writing TypeScript, so I‚Äôm usually in VS Code and very happy with that, but I prefer JetBrains IDEs for everything else.",1535526024.0
caudatecoder,"I actively use both. 
IMHO RubyMine is much more suitable for big projects development. Especially if you rely on a bunch of gems. ""Go to definition"" in VSCode doesn't allow you dive into gems (if you know how to do it ‚Äî please share your knowledge) and RubyMine does. Also ""go to test"", run a single spec you focused on with a single shortcut, the debugger make difference for me.
Though for pet projects or fast prototyping I usually use VSCode.",1535531108.0
leemurjames,"I use VS Code for everything I do, JS, Python, and Ruby and am a fan. The ruby plugins aren't quite as good as the Python and JS ones, but they are quite serviceable.  The Solargraph gem for intellisense is excellent, but a little picky. I can only get it to work if I open VS Code from the command line inside the project folder, but that may have to do with my ruby versioning setup. Also, I've got a large number of plugins in VS Code to handle multiple languages, and have yet to suffer any slowdown, which I find impressive.",1535543677.0
RockMeetHardPlaces,"I just recently made the switch.  There's some things that Rubymine does better (some of the standard IDEA features, git, perforce, etc integrations), but all-in-all, I think I prefer VSCode.  It feels ""lighter"".  I had issues with Rubymine where it seemed like active development had ceased long ago and things like Rubocop integration was more of a hindrance than a help.  YMMV",1535518374.0
ccb621,"I've used RubyMine daily for the last 8 months, and PyCharm on a weekly basis. I tried switching to VSCode for about a week due to RubyMine's quirks‚Äîslow indexing, unexpectedly changing Ruby versions‚Äîbut switched back once the indexing issue was resolved.

I don't care as much about the icons because I rarely use them. I imagine there is a theme you can download to revert them.

VSCode feels ""lighter"" and faster, as another poster mentioned; however, I couldn't get past muscle memory developed over the past decade of using JetBrains IDEs. There is a plugin that tries to mimic the keyboard commands, but it isn't quite right.

You might try the RubyMine EAP to see if that resolves your issues. Also, file bug tickets (https://www.jetbrains.com/youtrack/) to make sure JetBrains is aware of the issues.",1535520641.0
llN3M3515ll,For those using VS is is possible to leverage debugging in container through the vs code ide?,1535550523.0
coffeejumper,"I used VSCode for a short amount of time on a Windows system where I installed the complete Ruby / Rails stack inside the Linux subsystem. It was probably the best choice, because I didn't install anything on the windows system, and therefore the great IntelliSense stuff of RubyMine would have been useless. But I really enjoyed coming back to RubyMine on a new Mac a few weeks ago, having the IntelliSense, the database explorer, starting the docker compose dev stack with one click and so on.",1535557251.0
shunchu,"I‚Äôve tried switching to VSC full time a few times, but there‚Äôs always something holding me back. The biggest win for JetBrains products is its diffing tools. It‚Äôs by far the superior choice when diffing and editing said diffs. But the most noticeable strength is the merge conflict resolution tool. It‚Äôs very clear to see where the diffs are on both ends (local vs from server) plus the ‚Äúautomerge‚Äù pane in the center. Then it‚Äôs extremely easy to pick and choose what you‚Äôd like the end result to be by either clicking on the arrows to move highlighted/conflicted  code block or manually edit the center pane to your heart‚Äôs desire. If there‚Äôs a similar flow and view in VSC, I‚Äôd switch in a heartbeat. Given how actively the VSC team has been improving the tool, I think it‚Äôs only a matter of time before they finally get it right. But I‚Äôm not holding my breath. I‚Äôll clinch to my RubyMine until then.",1535566960.0
blackcomb-pc,Isn‚Äôt this kinda apples vs oranges?,1536163528.0
linusan,"I‚Äôve tried to switch a couple of times from RubyMine to VSCode. There actually weren‚Äôt much problems but enough to make me come back again. Those things are goto definition (in a Rails project in RubyMine I can cmd click on a model‚Äôs relation and get to the related Model or database entry in schema.rb), I can run the command ‚Äúcopy path‚Äù in a .yml i18n file and get the full en.this.is.the.key. I haven‚Äôt found any VSCode plugin which can do that. One big point is ‚Äúshow usage‚Äù of partials (files), which VSCode can‚Äôt do as well. This saves me so much time every day. I‚Äôd have to search the project for ‚Äúrender ‚Äòpartialname‚Äô‚Äù in up to four different spellings to be sure to find the file‚Äôs usage. Then of course I can‚Äôt open gems in VSCode. I actually wouldn‚Äôt need that every day but with the other things missing...",1539662905.0
vfreefly,Sublime text is one love.,1535524708.0
RepSchwaderer,"Tried VSCode, not a fan, made the switch full time from Sublime Text to Atom a year and a half and haven‚Äôt looked back",1535527826.0
,[deleted],1535513229.0
h-i-l-o,"How does meth get dirty in the first place? I‚Äôm assuming the person has already tried dish soap/laundry detergent. I‚Äôd be all out of ideas at that point too. 

Again, I‚Äôm so confused as to what this would have to do with OOP, or MVC.  But I haven‚Äôt been programming that long, I don‚Äôt want to miss something obvious.
",1535509857.0
rorykoehler,We use it at my startup so we can crush 100hr weeks. Pretty normal /s,1535515445.0
equivalent8,I'm in the wrong Rubby-ing business. ,1535529187.0
sshaw_,What site is that? ,1535513713.0
Mallanaga,I can imagine a person by the name of Ruby using meth...,1535553242.0
tweettranscriberbot,"^The¬†linked¬†tweet¬†was¬†tweeted¬†by¬†[@keystonelemur](https://twitter.com/keystonelemur)¬†on¬†Aug¬†27,¬†2018¬†18:03:48¬†UTC¬†(0¬†Retweets¬†|¬†2¬†Favorites)

-------------------------------------------------

The lemurs have their next vacation in mind! They're headed to LA for RubyConf!



[http://rubyconf.org/program](http://rubyconf.org/program) 

[Attached photo](https://pbs.twimg.com/media/DloASgZU8AU9KgC.jpg:orig) | [imgur Mirror](https://i.imgur.com/G3St2lV.jpg)

-------------------------------------------------

^^‚Ä¢¬†Beep¬†boop¬†I'm¬†a¬†bot¬†‚Ä¢¬†Find¬†out¬†more¬†about¬†me¬†at¬†/r/tweettranscriberbot/¬†‚Ä¢",1535394237.0
keyslemur,"Alo alo! If you've been seeing lemurs cropping up every now and then from other posts and liked them, good news! They're all headed to RubyConf where we'll learn about Red the Lemur and his adventures in Reducing Enumerable!

&#x200B;

This article will give you some insight into some of the madness that went into it: [https://medium.com/@baweaver/creating-reducing-enumerable-an-illustrated-adventure-c6adfcc30d5b](https://medium.com/@baweaver/creating-reducing-enumerable-an-illustrated-adventure-c6adfcc30d5b)

&#x200B;

...but the secret is, I'm not quite done yet. There are more tricks to come, and an even more grand adventure on the way :)",1535394336.0
astupidnerd,The grammar in that article was painful. ,1535378356.0
thewebaffect,So is Rails still relevant in 2018??? Asking for the people who don‚Äôt have time to read through the book that was suppose to be a blog.,1535379327.0
skool_101,Nice relevant memes youve got there.,1535538939.0
romeo_pentium,"1. https://github.com/rubysec/bundler-audit
2. https://github.com/presidentbeef/brakeman",1535401004.0
2called_chaos,"> Cookies: they are 100% editable by the user

With signed/encrypted cookies they are still technically editable but with no effect. Unless you really want to read a cookie via JS there's no reason to not at least sign them all.

Also a recommended read for any Rails user: https://guides.rubyonrails.org/security.html

Edit: Especially the part about regular expression, I see a lot of examples that don't take those quirks into account.",1535403687.0
henrebotha,"    [x.foo, y.bar].any? { |element| element.to_s.downcase.include?(global_variable) }

This doesn't do what you think it does. It checks whether any _word_ in the array contains _the entire_ `global_variable`. In other words, it checks whether `x.foo` contains `['one','two','three']`. The whole thing. Not `'one'` or `'two'` or `'three'` individually.

> My question is how to print out word that was included in array?

Get the word that was included, then print it with `puts`.

---

Here's how you could do it (untested):

    global_variable = ['one','two','three']
    
    matches = [x.foo, y.bar].map do |outer|
      match = global_variable.find { |inner| outer == inner }
                             .tap { |match| puts match }
    end.compact

    return unless matches",1535376929.0
electrostat,"As another comment pointed out, your code currently checks inclusion of the full array `global_variable` in the downcased version of each element in `[x.foo, y.bar]`. I think what you want is this to check inclusion:

    return unless [x.foo, y.bar].any? do |element|
      if global_variable.include?(element.to_s.downcase)
        puts element
        true
      else
        false
      end
    end

Another way could be to use intersection:

`intersection = [x.foo, y.bar].map { |e| e.to_s.downcase } & global_variable`

This does an intersection of the two arrays and gives you what was found in both of them. You could call `intersection.any?` on the resultant array to see if there were any items common to both. This has the disadvantage that this will `downcase` and check inclusion of every array element of `[x.foo, y.bar]` regardless of if we already found one match (`any?` quits as soon as one is found iirc).",1535379549.0
Tomarse,"`globals = ['one', 'two', 'three']`

`values = ['two']`

`globals - (globals - values)`

`['two']`",1535405588.0
lchandrakala,"You can get the intersection of both the arrays and print the intersection, like so  


word = ""two""  
puts global\_variable & \[word\].flatten",1535429823.0
Freeky,"I kind of wrote this on a whim, thinking it might be interesting to other Ruby programmers to have a small real-world example of Rust alongside the more-or-less equivalent Ruby, just to get a taste of it.

I've tried to explain anything that might be confusing and provided plenty of references for people who want to dive in deeper without getting too waffly.  Whether I've succeeded or not, you be the judge.",1535375650.0
turboladen,"> I've been doing a fair bit of Rust lately. Honestly, I haven't been so smitten with a language since I started writing Ruby back in 1999.

Same here, although I‚Äôd only been Rubying since 2007.  Rust is the first language I‚Äôve been as excited about as I was when learning Ruby.

I‚Äôve used [ruru](https://github.com/d-unseductable/ruru) quite a bit‚Äîgonna have to check out rutie!",1535437886.0
slendermann29,"This was really useful, thanks !",1535483520.0
SminkyBazzA,"If you don't want an array of values, what do you want to get? Either give each checkbox a unique name, or use the array of selected state names you were getting. If you need some kind of ID for each state, turn make sure you're setting the value of each checkbox to something other than the name of the State.

I don't know how you are generating the checkboxes, but you may want to try passing `checked: true` to the ones that have a value that is included in an array of previously selected values. 

",1535365510.0
garuspl,What do you mean when you say you want each value separately? Adding [] is the way to solve it. ,1535383287.0
chrisgseaton,"`object_id` never varies for any object. If you're seeing that then that's a bug in Ruby.

What is happening is when you write `Object.new` you're getting a new object each time. When you write `:symbol`, you're not getting a new `Symbol` object - you're getting the same object each time in the same way as when you write `14` you're not getting a new `Integer` object each time.

However... you may get a new `Symbol` object if you all references to the old `Symbol` with the same name were deleted.",1535304076.0
Dombot9000,You should do some reading - that's the point of symbols.,1535303797.0
lfv89,"Just published some of the Rails Console techniques that I use myself to increase productivity.

I hope you can get something new out of it, and I'm always open to constructive criticism.

Enjoy!",1535302563.0
bottomfragger99,Extremely useful!,1535307311.0
prognos,This is super useful. Thank you for sharing. Looking forward to seeing what you post next.,1535325851.0
sshaw_,For possibly more tricks see: https://github.com/sshaw/dotfiles/blob/master/irbrc,1535347351.0
astupidnerd,"This is great, thanks for sharing! ",1535377425.0
slendermann29,"Great article , thanks !",1535483490.0
jeremywoertink,"Since moving to crystal, I have a better sense of my deployed code being a lot more stable. The nice things in ruby are: there's usually a gem that does what you need, upgrading to the next ruby almost never has huge consequences, code moves quick.

The nice things about crystal are: code feels more stable, forces you to focus on writing better code for type safety, performance boost by 4x or more from what I've seen. 

You do end up writing more code, but it's still really readable, and fun to write. The toughest part is a new version of crystal comes out and nothing works for several days while you're waiting on PRs and such. It's going to get better, but takes some time.",1535308398.0
akito_mashua,"Is crystal considered stable enough to be a solid choice for ""real world project"". Forgive me the quotes, last time I checked it looked experimental enough. I love the static typing though.",1535367264.0
coldnebo,"nice writeup. 

I‚Äôve found VCR to be useful in my case because we interface with several complex business APIs that are somewhat orchestrated by our app. 

The APIs are far too complex to write normal fixtures, furthermore we only care about a small ripple of relations above the surface, so mocks aren‚Äôt good in this situation.  Why so complex? Well, having heavily bought into SOA, there are over 14 of them owned by different groups written in different styles, from REST to REST-RPC to SOAP, etc. It‚Äôs brutal. 

Likewise, creating a mock server would involve a huge amount of reverse engineering to match behavior, so no. 

Instead VCR has been useful as a quick and dirty method to capture ‚Äúknown good‚Äù behavior.  Here‚Äôs how we use it: 

‚Äòrake integration‚Äô clears all the vcr fixtures and runs the specs against real services, recapturing new cassettes in the process. ‚Äòrake spec‚Äô then runs against the cassettes essentially as unit tests. As an added convenience we place the VCR code in an ‚Äòaround‚Äô filter in the RSpec config, so every spec automatically gets wrapped by VCR. 

Normally, people would use fixtures to say ‚Äúthis is right‚Äù ‚Äî we merely use it to say ‚Äúthis was how it worked when we submitted our code‚Äù, so the lifetime is considerably shorter and less predictable. 

",1535288164.0
ioquatix,You might like https://github.com/ioquatix/rack-test-body,1535292808.0
sshaw_,"After writing 10s (100s?) of API clients with and without stubbing my conclusion is this: whenever possible, write tests using real requests. 

1. You will make an error in your stubbed response and code for that case, assuming it's correct
2. The API docs that you're using to craft your response will be wrong
3. Important headers will be missing from your stubbed request/response cycle 

VCR is nice, but for large tests suites it can lead to 10s or 100s of random YAML diffs, conflicts, etc... which becomes a pain. 

  

 ",1535346703.0
jrochkind,"Good overview. 

I'm really excited about shrine. I worry that it's not going to catch on, because it _is_ a bit harder to _get started_ with. Especially now that Rails has a ""built-in"" solution. But once you get past the 'happy path' use cases, if you need to do some fancy or complex stuff -- shrine will rarely get in your way. ",1535211362.0
DerekB52,"I'm interested in Shrine, but, I am using CkEditor, with carrierwave as a backend for it. Can Shrine do that too? Because I don't want to have carrierwave and shrine at the same time.",1535213971.0
petepete,"I wrote my first Rails app in years recently and ActiveStorage was great. It just did what I thought and hoped it would, and did it well. It was *too easy*, and I enjoyed it.

As usual, the only thing that doesn't feel right is the lack of foreign keys in the database because of the polymorphic key. Luckily my app isn't really dealing with *important* data at a high scale, but I'd feel that something was missing if I was.",1535273828.0
ahmad_musaffa,I'm a big fan of Shrine. It has made file uploading in ruby/rails a work of art.,1536319340.0
eGGshke,"This is rail uploaded, not ruby üòî",1535206187.0
,[deleted],1535182771.0
sendtojapan,I have no idea what that title means. ,1535186986.0
ksec,"Tesal = Tesla, 

&#x200B;

And basically some part of the car system uses RoR, I don't see where the ActiveRecord bit was coming from.",1535195628.0
disclosure5,"Even if you believe the original story, what it's saying is your car sends telemetry back to a server running ruby on rails.

I don't understand how everyone is blowing that out of proportion.",1535245333.0
joshmn,ActiveRecord is merely a pattern. I'd like to think the Ruby implementation is quite good.,1535298920.0
sshaw_,Tesla is still in business..?,1535426880.0
leemurjames,"Keep it up! Writing about your language of choice is a rapid way to improve. The article is pretty simple; I'd try to find some unusual edge cases or beneficial uses of a language feature to keep the audience interested. I'd try to choose topics that push the edge of my knowledge. If this is the current edge of your knowledge, that's fine, if not you might want to dive into more challenging content.",1535195056.0
WhoTookPlasticJesus,"This is such shit. It takes a lot for me to comment here, let alone downvote. But this is so fucking stupid, a shit take on of all things \#slice? GFY.",1535177452.0
Grimnur87,"I gather the exact same data but using manual means. I did use a TMDb script back in the day. My logging is with Criticker and Excel. My % of women has never exceeded more than 7-8%, even when I'm trying hard (over a year) to focus on those directors. Good luck with your goal of 1/3, I'd bet money that you never reach it!",1535187716.0
gatman02,"You seem to be a very experienced dev (I've used some of your gems in the past), so I'm curious to know where you draw the line between creating a monkey patch gem like this and just doing things the way they were intended in the framework. To me, it seems if you have the presence of mind to use this gem you could simply just review your code for usages of ActiveRecord::Relation#present? and update accordingly and save yourself from adding yet another dependency. ",1535138033.0
fiveguy,"I personally wouldn't install the gem - I appreciate and rely on the subtle difference between .present? and .exists?. That said, as you know, it's a super common mistake in the wild and I can appreciate why a team would use the gem.

I personally cringe a little bit when i see two SQL queries in a row in the logs - an exists followed by a select *. Of course, it's a smell, so you can track down where it's called and fix that instance.

If this change were committed to Rails, it would be interesting to see another gem undo the change and track its popularity :)
",1535166119.0
kobaltzz,"Love your content, but I am a little confused about the real need for this gem. Perhaps my brain isn't thinking clearly as my 2 year old woke me up at 5am, but wouldn't `exists?` be a better option?

```
[1] pry(main)> User.where(username: 'kobaltz').present?

  User Load (2.0ms)  SELECT `users`.* FROM `users` WHERE `users`.`username` = 'kobaltz'
=> true


[2] pry(main)> User.where(username: 'kobaltz').exists?

  User Exists (0.3ms)  SELECT  1 AS one FROM `users` WHERE `users`.`username` = 'kobaltz' LIMIT 1
=> true
```

This way you still reduce the size of your query without adding an extra dependency into the app.",1535198630.0
jrochkind,"While this change would make a lot of sense to me in Rails, I also think it's not a huge deal. 

No matter what Rails does, the developer _has_ to be constantly thinking about (or instrumenting/watching) what lines of code hit the database when and how, and if that's the right way for the job. With or without this in Rails default, developers need that message. 

Don't get me wrong, I actually kind of love active_record (I know, I know, it's uncool to say).  But it does not get you out of having to understand SQL and rdbms, or having to think about when queries happen. 

So in the end, even if this change improves things in more cases in real world code than it makes things worse (which I think it will) for people just doing what comes naturally and not considering the db implications of every method on your models -- it doesn't get you out of having to consider the db implications of every method on your models. ",1535154519.0
Nrdrsr,"Unrelated question on AR

If I have an eager loaded relation and I call a model method on one of the objects from an eager loaded association, the method is unaware of the eager loading, and proceeds to reload everything again.

E.g. 

    post.comments.first.is_highest_rated? 

will reload all the comments for the post again, despite them being loaded already.  

In these cases do I pass the eager loaded relation to a method and perform my logic there? It seems to work but feels unconventional. 

E.g. 

    is_highest_rated?(post.comments,post.comments.first)",1535192985.0
geraldbauer,"Hello, for you convenience all recorded talks from day #1 and #2. Enjoy. Cheers. Prost. Greetings from Vienna.

Day 1:

- Yukihiro Matsumoto - Keynote https://www.youtube.com/watch?v=cs0s5lZAUwc
- Chris Salzberg - Metaprogramming for generalists https://www.youtube.com/watch?v=1fIlcnrJHxs
- Joannah Nanjekye - Ruby in containers https://www.youtube.com/watch?v=qPNkOPvjecs
- Damir Zekiƒá - Tool belt of a seasoned bug hunter 
https://www.youtube.com/watch?v=ObB0dzX_rBs
- Igor Morozov - Ducks and monads: wonders of Ruby types https://www.youtube.com/watch?v=v-H9nK8hqfE
- Brad Urani - Rails anti-patterns: how not to design your database https://www.youtube.com/watch?v=zo3iRBPzscU
- Coraline Ada Ehmke - The broken promise of Open Source https://www.youtube.com/watch?v=5ByUPh_uPqQ
- Louisa Barrett - Ruby not red: color theory for the rest of us https://www.youtube.com/watch?v=OgO1EIFDgPU

Day 2:

- Nadia Odunayo - The case of the missing method ‚Äî a Ruby mystery story https://www.youtube.com/watch?v=wkz-B1w2GVM
- Ana Mar√≠a Mart√≠nez G√≥mez - Let‚Äôs refactor some Ruby code https://www.youtube.com/watch?v=jUc8InwoA-E
- Pan Thomakos - Debugging adventures in Rack-land https://www.youtube.com/watch?v=5o4krwjJbOI
- Lightning talks https://www.youtube.com/watch?v=zSeaNPjwnnA
- Kerstin Puschke - Scaling a monolith isn't scaling microservices https://www.youtube.com/watch?v=tA8gGd_Rl7E
- Amr Abdelwahab - An empathy exercise: contextualising the question of privilege https://www.youtube.com/watch?v=6CqmGYvFwAQ
- Pitch the next EuRuKo's location https://www.youtube.com/watch?v=YXe9OoQW8lc
- Wrap up & announcing the next EuRuKo's location https://www.youtube.com/watch?v=wMggsShGTzk

See you next year at the European Ruby Konference (EuRuKo) 2019 in ...

Rotterdam, the Netherlands! Congrats.

",1535139852.0
Morozzzko,"Hey everyone!

Speaker here. Published the slide deck for Ducks and Monads [there](https://www.morozov.is/slides/euruko-2018). Feel free to use it (CC-BY-SA 4.0).",1535398039.0
ethboy2000,https://medium.com/@tiagoparreira/powering-your-ruby-rails-development-with-pry-3d5dbd2a8b80?source=linkShare-4af34845749e-1535095692,1535095698.0
leemurjames,"I wrote an article on Pry recently. I didn't go into multi-threading which you mentioned needing, but it outlines setup with plugins and useful commands in non-Rails Ruby code. [https://www.leejroberts.com/pry-ruby/](https://www.leejroberts.com/pry-ruby/). Hope it helps.",1535129953.0
SuccessfulBread3,Well putting binding.pry just puts a pause in your code and in your terminal opens a repl for you. I'm not sure what kind of tutorial you need?,1535098656.0
joshmn,"You can pull it down locally and change your gemfile to use the local version.

`gem 'yard-cucumber', path: '/path/to/yard-cucumber'`",1535083622.0
flashbck,What exactly is your question? Are you asking how to debug in ruby? How to use your forked version of the gem instead of the rubygems version?,1535072194.0
ddollarsign,STURF-time,1535054788.0
postmodern,We C programmers pronounce the `str` as stir and `f` as eff.,1535059174.0
cicloid,String Format Time,1535057592.0
blaine_freelance,sterf time,1535051872.0
how_do_i_land,`s-t-r-f-time`,1535059474.0
jrochkind,"i believe you should never say the word aloud, at risk of summoning a punctuation-obsessed demon. ",1535059983.0
kwhittington,`striff-time` is what I say.,1535056241.0
jardeon,`stir`-`eff`-`time`,1535057680.0
surfordie,I say strafe time like i'm Neo dodging bullets in slo-mo. ,1535052131.0
Mistifyed,*Shuffle-TRuFfle Time!*,1535050090.0
capn_sanjuro,"I add some stuff in to make sense to me.

'We should use the stringify-time method.'",1535059246.0
pedrozath,I pronounce it: Stringify Time,1535062919.0
mastermindxs,S T R F Time,1535072013.0
meep185,rhymes with Smurf-time,1535073267.0
nyekks,struh fuh time,1535097464.0
losangelesvideoguy,"Who cares about that, I wanna know when it's strptime!",1535103581.0
briang_,"struff time  

I'm unique!",1535104116.0
SuccessfulBread3,I say stringy-fy time. However I'm 100% aware that isn't strictly cannon,1535110922.0
gwhilts,String format time,1535218550.0
uokesita,Ese-te-ere-efe-ti-me,1535065487.0
sshaw_,"S. T. R. F. T. I. M. E. 

And while we're at it: 

S. Q. L. 

W. S. D. L. 

",1535056237.0
rabidferret,string from time,1535070237.0
spitlets,"1.	I realized I never have said this out loud
2.	I would have said ‚Äústring eff time‚Äù
3.	thank you for saving me the embarrassment ",1535079291.0
moomaka,"I'd probably do this:

    def find_dog
      return dogs.find(params[:dog_id]) if params[:dog_id].present?

      # Put !user_is_dog_lover && !user_is_cat_hater in the User class and give it a name
      current_user.dogs.last if current_user.name_this_conditional 
    end

    private

    def dogs
      current_user.is_system_admin? ? Dog.all : current_user.dogs
    end",1535052723.0
Freeky,"All three seem quite smelly.  Why is the same action being called whether or not a dog_id is provided?  Can't that concern be pushed off to the routing layer?  Shouldn't concepts like ""system admins can see any dog"" be encoded in the model layer?  What concept is the final conditional modelling, can't that be better named?

But, eh, if I had to write it like this, probably something like:

    dog_id = params[:dog_id]
    dog_finder = current_user.is_system_admin? ? Dog : current_user.dogs

    if dog_id.present?
      dog_finder.find(dog_id)
    elsif !(user_is_dog_lover || user_is_cat_hater)
      current_user.dogs.last
    end

Digging into a hash repeatedly with the same key is error-prone and longwinded.  Misspelling a local variable name is more likely to result in a meaningful error than misspelling a hash key.

Selecting the target for the `find` call separately keeps the two concerns&mdash;how you select which dataset to use, and what you do with that dataset&mdash;distinct, and avoids having you repeat yourself.

""NOT foo AND NOT bar"" is more clearly spelled ""NOT (foo OR bar)"".",1535053094.0
r00ster91,"Option 1

The other options are just unnecessarily complex in my opinion.",1535046328.0
flashbck,"Code is for humans to read, the compiler will usually take care of making it better for the computer to read. So you should pick the solution that clearly demonstrates what the intent of the method is and the solution that provides flexibility for future modification.

&#x200B;

I'm guessing that Option #2 meets my criteria the best. The method will take one set of actions if the dog\_id parameter is present otherwise another set of actions will be taken. Options #1 and #3 will need to be refactored if you want to make a distinction between dog\_admins and cat\_admins.

&#x200B;",1535050883.0
VeryGoodGoodGood,"Option 1,
I like to minimize the use of the ‚Äúif‚Äù keyword, and while I love ternary operators, they look worse as the Conditions get longer",1535048128.0
ashmaroli,"I like to use local variables when there are multiple method calls and prefer using guard clauses over `if..elsif..end` blocks

    dog_id        = params[:dog_id]
    curr_usr_dogs = current_user.dogs
    
    return curr_usr_dogs.last unless (user_is_dog_lover || user_is_cat_hater)
    return unless dog_id.present?
    return Dog.find(dog_id) if current_user.is_system_admin?
    curr_usr_dogs.find(dog_id)",1535049476.0
capn_sanjuro,"This is an authorization problem, you are wanting to change behavior based on the user attributes. Use a policy object to keep the intent clear without leaking user details back into your dog model.

Something like Pundit works great for this. But a Poro solution might look like:

    def find_dog
      @dog = DogScope.new(current_user).scope.find_by(id: params[:dog_id])
    
      @dog ||= default_dog
    end
    
    def default_dog
      return false if user_is_cat_hater && user_is_dog_lover
    
      current_user.dogs.last
    end

    class DogScope
      def initialize(user)
        @user = user
      end

      def scope
        return Dog.all if @user.is_system_admin?
        @user.dogs
      end
    end


It is a few more lines of code, but separating out the parameter logic, the user roles, and the policy scopes makes the gaps in the logic very clear and easy to debug.",1535061271.0
laerien,"I don't love this, but here's another option:

    if dog_id = params[:dog_id].presence
      available_dogs = current_user.is_system_admin? ? Dog : current_user.dogs
      available_dogs.find dog_id
    elsif ",1535051801.0
Hell_Rok,"At this point I'd definitely either write a `find_dog` method like others have suggested or set up CanCanCan and use `load_resource`

But my biggest question is, why are you returning a dog when the person loves cats and hates dogs? Should it not be `current_user.cats.last`?",1535075458.0
3vol,"Lol these are all really great replies. I didn't intend for this to be a breakdown of permissions or authorization, the specifics of what it's doing was not the exercise more the question was ""which is the easiest to quickly parse and understand"", I should have made that more clear. Really it was a breakdown of 3 ways to represent a moderately complex conditional and I was curious how people felt one way or the other.  ",1535075823.0
jrochkind,"I think option 1 is clearly preferable out of those three, and probably good enough.

Here's yet another one:

    if params[:dog_id].present?
       base_scope = current_user.is_system_admin? ? Dog : current_user.dogs
       base_scope.find(params[:dog_id])
    elseif !user_is_dog_lover && !user_is_cat_hater
       current_user.dogs.last
    end

Better yet, extract the `current_user.is_system_admin? ? Dog : current_user.dogs` into another method, whether in the model or controller. 
",1535167696.0
zapattavilla,PM me. ,1535017579.0
etcook,I can offer some guidance as well. PM.,1535035286.0
mperham,"Global state is always painful to manage in a test suite.  Minitest has been pretty aggressive on pushing its users to get better and write better test suites.  Over the last decade:

1. test/unit runs tests serially in a deterministic order
2. minitest 1.0 runs tests serially in a random order
3. last I heard, minitest 6.0 will use parallel testing by default, tests are run concurrently.

All of this is meant to push users to write more functional, isolated testcases and explicitly disable parallelization to allow global state usage where necessary.  I think this is a great example of a library helping its ecosystem improve over time.",1535038168.0
laerien,I wrote [an article about this too](https://medium.com/square-corner-blog/new-class-naming-rules-in-ruby-bb3b45150c37) a few months ago that checks out the new characters.,1535125902.0
skool_101,Nice.rb,1535538991.0
,[deleted],1535046713.0
seainhd,"My cheat sheet for this is much shorter

Just don‚Äôt do it.

The cleverness is rarely helpful in the long-run.

Be expressive with your code so that it reads easily.",1535032800.0
Mintcore,I do not believe harassing dhh on twitter will make him consider doing it. A github issue would in my opinion be the proper channel.,1535005525.0
_matthewd,https://guides.rubyonrails.org/contributing_to_ruby_on_rails.html,1535014963.0
moomaka,"Why do you think it's acceptable behavior to publicly harass an open source maintainer on social media to get your way? This just drips of entitlement. Close twitter, open your editor, write some code and open a PR.",1535037384.0
equivalent8,"Graph QL is awesome, webpack is awesome, but you kind of missed the point of the long-term Rails vision and mission 

please listen to this interview to fully understand what I mean

* https://player.fm/series/all-ruby-podcasts-by-devchattv/rr-342-rails-development-and-more-with-david-heinemeier-hansson

or this talk by DHH:

* https://www.youtube.com/watch?v=9LfmrkyP81M",1535107914.0
lzap,Please don't. Stupid idea in Rails context. Turbolinks and ERB is what Rails builds on. That is what Rails encourage devs to work with. ,1535045159.0
phaedryx,I think it is best as a separate gem for now.,1535138512.0
Jdonavan,If you're a rails developer you can write code.  Scratch your own damn itch.,1535039504.0
honeyryderchuck,"While you're at it, ask for native gRPC support. And some French fries for table 3! Yes, I don't care if they're Belgian! I heard he's Danish, he don't give a!",1535046189.0
realntl,"This would make Rails less attractive to me as a web framework. Rails may be opinionated about things that Rails uses, but it shouldn't be opinionated about the world outside your rails app.",1535222614.0
mperham,"Argh, I predate the cool ruby.social instance.  I'm here, fellow tooters! https://mastodon.xyz/@mperham

Since Twitter has pulled the plug on useful 3rd party clients, many of us are moving to Mastodon, which happens to be built on Rails, Puma and Sidekiq.",1534973428.0
otakugrey,"I'm on Diaspora already, I feel like I really only need to be on one federated social network. But maybe I'll do this.


What happened with the ostatus network being like, branded by the Ruby implementation though? There's been ostatus servers written in PHP, Haskell, Python, Java, but then a Ruby ostatus server named mastodon comes along amd suddenly the whole network is named after it. How'd that happen?",1534970592.0
three18ti,"I don't get it. It's ""distributed like email"" but hosted on this one domain/server? And it's a facebook/twitter/slack/instagram/? clone?

I like the shirt! Cool shirt. But what am I getting myself into?",1534971137.0
nmirandag_hn,"Did it man, I introduced myself and mentioned joshuap@mastodon.xyz.

Best regards.",1534996728.0
postmodern,"OK, I'll give Mastodon another try. I have been hoping for more topic specific mastodon instances, as the main ones are far too noisy. I'm curious, does anyone else know about or use the unofficial [#ruby Riot channel](https://riot.im/app/#/room/#ruby:matrix.org)?",1535059359.0
jdalbert,"Hello there! I also predate the ruby.social instance and my handle is https://mastodon.social/@jeromedalbert.

To start off, I set up https://crossposter.masto.donte.com.br to post all my tweets as toots. If things get serious one day, I may remove this crutch and exclusively use Mastodon.",1535184062.0
otakugrey,Okay. You've convinced me. I'll do it sometime later.,1535355833.0
keyslemur,I'm over at [@baweaver@ruby.social](https://ruby.social/web/accounts/6173),1535482553.0
WhiteHorseSoft,You can always just return string values from the route. It will display in your browser. Great way to debug and get a handle on what url parameters the route is dealing with. ,1534963682.0
slendermann29,do you have the erb template at the expected path ? (`app/views/user/show.erb`),1534964731.0
edendark,"There are unbalanced quotes in your input, so the terminal is waiting for you to finish entering the command. 

One way to solve is to just cd to the ""ruby-poo"" directory, and execute `ruby ola_mundo.rb` from there. ",1534961040.0
Papapalomitas,"I Managed to put it to work, just accessed the directory where the file is. ",1534961039.0
sshaw_,"> CSV.parse( %{1, ""2""})
> CSV.parse( %{""3"" , 4})

Error message is confusing, but the problem here is not the quote, it's the space before/after the comma:

    irb [2.5.0] (sshaw)$ CSV.parse( %{1,""2""})
    => [[""1"", ""2""]]
    irb [2.5.0] (sshaw)$ CSV.parse( %{""3"",4})
    => [[""3"", ""4""]]",1534980474.0
geraldbauer,"Try it yourself. Example:


    require 'csv'
    require 'pp'

    begin
      CSV.parse( %{1, ""2""})
    rescue CSV::MalformedCSVError => ex
      pp ex
    end
    # => #<CSV::MalformedCSVError: Illegal quoting in line 1.>
    
    begin
	CSV.parse( %{""3"" , 4})
    rescue CSV::MalformedCSVError => ex
      pp ex
    end
    # => #<CSV::MalformedCSVError: Unclosed quoted field on line 1.>
    
    pp CSV.parse( %{"""","""",,} )
    # => ["""", """", nil, nil]

Is that what you expected?",1534954603.0
jrochkind,"I'm not sure this is broken. The CSV spec (such as it is? Does it even have a spec) would probably say leading and trailing whitespace are part of the value -- I don't know if it should be stripped by default.

Are comments even part of the CSV spec either? Stripping them means a value can't start with a comment, which might not be to spec.

I'm not sure any of these things should be default, but they could be easier non-defualt options, like a strip_whitespace config instead of having to supply the regexp yourself.",1535043455.0
schneems,"FWIW Don't use OpenStruct anywhere that might be performance sensitive. It is really slow. Alternatives are to use a hash, or make a small PORO. 

I wrote about this a long time ago ÔªøÔªøÔªøhttps://www.schneems.com/2014/12/15/hashie-considered-harmful.html#using-openstructs

They're still useful for prototyping and mucking around, just be careful before you commit to using one in a library or your app code.",1534949408.0
,[deleted],1534964924.0
vfreefly,"Yes, OpenStruct is nice, here is an example how to implement configuration block for a Ruby gem in six lines using it [https://medium.com/@vfreefly/the-most-simple-configuration-block-implementation-for-a-ruby-gem-815fe1dad5dc](https://medium.com/@vfreefly/the-most-simple-configuration-block-implementation-for-a-ruby-gem-815fe1dad5dc)",1535001887.0
Mallanaga,"I have. If you‚Äôre married to ruby, it‚Äôs a great option. 1.8 (iirc) has some substantial changes so careful while checking examples.

As for a client, I recommend Apollo. It‚Äôs more faithful to the graphQL spec.",1534916570.0
LivingAnywhere,I am for multiple projects out experience has been great so far! We are using it all the time and now for over 8 projects! Hit me up if you got questions!,1534929950.0
LivingAnywhere,"All our API‚Äô s are internal. We use apollo. If you wamt to see some public apis take a look at github, shopify or hackerone. They all use the gem too.",1535013512.0
phaedryx,I've been working on a graphql API for my company for the last 4 months. The API has been really nice for our clients so far (nothing public).,1534992536.0
Freeky,[Qo](https://github.com/baweaver/qo) may be of interest.,1534898677.0
keyslemur,"You may enjoy my article on creating Qo and some of the thinking behind it:

‚ÄúFor want of Pattern Matching in Ruby ‚Äî The Creation of Qo‚Äù @keystonelemur
 https://medium.com/@baweaver/for-want-of-pattern-matching-in-ruby-the-creation-of-qo-c3b267109b25

Mind, I tend to go by either some variant of Lemur or baweaver more commonly now. Depends on how old the account is :P",1534924246.0
pedrozath,"I think this is really pretty, but I truely wonder in which real life situations do we desperately need this",1534904147.0
wycleffsean,"There was a proposal to add something like this to the language.  Matz likes the idea, but is looking is seeking better syntax

[https://bugs.ruby-lang.org/issues/14709#note-9](https://bugs.ruby-lang.org/issues/14709#note-9)",1534924584.0
nakilon,"Your co-worker is lame.  
You don't do anything unobvious. You explicitly wrap it with `Pattern()` instead of, for example, patching `Array#===` like someone would do.",1534901009.0
aemadrid,Looks interestng. You might find [Qo](https://github.com/baweaver/qo) interesting too.,1535042389.0
PikachuEXE,"That's really confusing

What's the point having that?",1534900893.0
whalesalad,"For your specific request, Rails is overkill. I‚Äôd suggest something like Sinatra. You don‚Äôt need a datastore really... but it depends on how you‚Äôre gonna model your dictionary. If you‚Äôre new to this sort of thing I‚Äôd definitely avoid heavy duty frameworks and database systems. 

Start simple: Sinatra or a similar basic http server toolkit. Start inefficient: If your flat file or statically coded dictionary is slow, that‚Äôs fine. Learn about that and use that knowledge to inform your decision in a database engine. ",1534878935.0
BrickedMuhPC,"`rails new api_name --api`  
  
This will give you all the boilerplate you need plus some more, for a simple REST API. You can further google some articles on creating REST APIs with Rails.",1534878492.0
wickedbloodfart,"I‚Äôve used [Grape](https://github.com/ruby-grape/grape) in the past, and it‚Äôs worked perfectly.

Rails is overkill in this situation.",1534895689.0
slendermann29,"Depends on what do you need to store. If you upload json data/files and want to get it back later, then a sinatra app with s3 storage is the way to go, no rails + database overhead needed",1534878925.0
parthmodi54,Use a framework such as Rails or sinatra for such web application. ,1534874552.0
Randy_Watson,"    #!/bin/bash

    ## Setup directory structure
    mkdir api &&
    cd api &&
    touch server.rb Gemfile Gemfile.lock seeds.rb mongoid.config Procfile.dev &&

    # Add Sinatra Server Requirements
    echo ""require 'sinatra'
    require 'sinatra/namespace'
    require 'mongoid'
    require 'shotgun'
    Mongoid.load! 'mongoid.config'
    "" >> server.rb &&

    ## Add Required Gems
    echo ""source 'https://rubygems.org'
    gem 'sinatra'
    gem 'mongoid'  
    gem 'sinatra-contrib'
    gem 'foreman'
    gem 'faker'
    "" >> Gemfile &&
    echo ""
    development:
      clients:
        default:
          database: contacts_dev
          hosts:
            - localhost:27017
    "" >> mongoid.config &&

    # Add DB Seed File Info (optional)
    echo ""
    require './server'
    require 'faker'
    if Contact.all == nil || []
      Contact.create_indexes
      10.times do 
        Contact.create({first_name: Faker::Name.first_name, 
                    last_name: Faker::Name.last_name, 
                    email: Faker::Internet.email, 
                    phone: Faker::PhoneNumber.phone_number})
      end
    end
    "" >> seeds.rb &&
    bundle install &&
    echo ""
    class Contact
      include Mongoid::Document
      field :first_name, type: String
      field :last_name, type: String
      field :phone, type: String
      field :email, type: String
      validates :first_name, presence: true
      validates :last_name, presence: true
    end
    get '/' do
      'Welcome to the Contacts App'
    end
    namespace '/api/v1' do
  
      before do
        content_type 'application/json'
      end
      get 'contacts' do
      end
    end
    "" >> server.rb &&
    ruby seeds.rb &&
    cd .. &&
    # Add React Using Create React App or your own file
    create-react-app client &&
    cd client &&
    yarn add reactstrap axios

Here's a shell script I created when I was messing around with Sinatra and React. It will build a new sinatra app for you. It was built to make a contacts api. Just alter it to fit your needs.",1534874910.0
Job_man,I can give you pointers on how to do it in Rails if you want ,1534880597.0
KingPretzel,Are you interviewing at Ibotta by any chance? üßê,1534891763.0
OtavioHenrique,"For this kind of application I recommend use something more simple like [sinatra](https://github.com/sinatra/sinatra) or [grape](https://github.com/ruby-grape/grape) at both you'll have satisfactory results, but if you really want rails, I pretty recommend use rails [API-only](https://edgeguides.rubyonrails.org/api_app.html), to start using it just type `rails new my\_api --api` and rails will create a start environment for you, just start coding :)

If you want, here's a nice list of rails api tutorials:

[Rails official guide](https://edgeguides.rubyonrails.org/api_app.html)

https://sourcey.com/building-the-prefect-rails-5-api-only-app/",1534906972.0
jdickey,"You want [Roda](http://roda.jeremyevans.net/) for that; you'll find it more efficient than Sinatra and far more appropriately-scoped than Rails for API work. We've built several Roda apps that in production use everything from PostgreSQL to several cloud API-based stores. We've used Redis as the storage layer for a cache, but not as primary storage; our understanding is that that's not what it's for and that there are several limitations that will bite you when trying to use it that way.

You'll need a server _app_ running; if all you'll be using it for is local development and experimentation without making it available to the outside world, then running entirely on `localhost` is fine. You *may* eventually want to learn the basics of Docker, at which point it won't *matter* (from your app's perspective) where it's running, but that's a figure-it-out-later item.

",1534928133.0
tomthecool,"    last_name.match? /\A[a-zA-Z'-]*\z/

This is a [regular expression](https://ruby-doc.org/core/Regexp.html).

* `\A` means ""start of string"".
* `\z` means ""end of string"".
* `[...]` defines a *character set*. Inside, you can either state literal characters (e.g. `'`), or ranges of characters (e.g. `a-z`). (You can also do some more advanced things, but I'll skip that for now.)
* `*` means ""zero or more"" of the previous pattern. (If you want to force a minimum/maximum required length, you could also do that here - e.g. replace `*` with `{2,20}` to specify a length of ""between 2 and 20"".)

Putting this all together, the pattern will match if, and only if, the string contains only these 'whitelisted' characters.

Note that if this is a ruby on rails application, there is a built-in way to apply regex format checks against a model attribute. For example:

    validates :last_name, presence: true, format: { with: /\A[a-zA-Z'-]*\z/ }",1534864837.0
herp_de_derp,Since tomthecool already did the regex I thought I would add that there is a great site for practicing regex basics. [This is a regex crossword](https://regexcrossword.com/) that is a great place to get started. ,1534866164.0
Mancinoz,"I wouldn't bother running format validation on names, just validate that it isn't blank and let them set it to `TABLE ""users""; #--` if they want.",1534981642.0
ArcaneRain,"of course mate, https://docs.ruby-lang.org/en/2.5.0/Hash.html#method-i-key",1534866205.0
pacMakaveli,Use find index. That‚Äôs your clue,1534868522.0
astupidnerd,"It probably makes more sense to use the letters as keys, since they are unique. 

To get all matching keys by a value, you can do something like this: https://stackoverflow.com/a/38418570

Or, if you only want one key, use the Hash#key method. ",1534869151.0
deeceever,"    module Scrabble
      extend self
    
      POINTS = {
        1 => Regexp.union(%w[E A I O N R T L S U]),
        2 => Regexp.union(%w[D G]),
        3 => Regexp.union(%w[B C M P]),
        4 => Regexp.union(%w[F H V W Y]),
        5 => /\AK\z/,
        8 => Regexp.union(%w[J X]),
        10 => Regexp.union(%w[Q Z])
      }
    
      def play
        print_header
        loop do
          word = get_input.upcase
          exit_on_request(word)
          score = word.chars.sum(&method(:calc_score))
          puts ""Your score: #{score}""
        end
      end
    
      private
    
      def print_header
        print ""\033[2J""    # clears the screen
        print ""\033[1;1H""  # move to row 1 col 1
        puts
        puts ""~~~ Welcome to Scrabble! ~~~"".center(80)
        puts
        puts ""Enter a word to determine your score. For blank tiles, insert a""
        puts ""space, e.g. 'foo bar'. To exit, enter 'q'.""
      end
    
      def get_input
        loop do
          puts
          print ""Enter a word: > ""
          input = gets.delete('^A-z')
          break input unless input.empty?
        end
      end
    
      def calc_score(char)
        POINTS.invert.each do |regex, value|
          return value if regex.match?(char)
        end
        0
      end
    
      def exit_on_request(str)
        return unless str.casecmp?('Q')
        puts ""\n** Exiting...""
        exit(0)
      end
    end
    
    Scrabble.play
",1534872186.0
joemi,"Not intending this as a criticism, just curious: If there are bugs with Ruby's CSV class, why did you choose to make a gem instead of fix the problems at the source?",1534867875.0
geraldbauer,"I've started to put together a new library / gem, that is, csvreader - that lets you read tabular data in the comma-separated values (csv) format 
the right way :-), that is, uses best practices such as

- stripping / trimming leading and trailing spaces,
- skipping comments and blank lines,
- ""fixes"" quote errors and more 

all out-of-the-box with zero-configuration. And, thus, fixes some major bugs in the (old) standard csv library with a [purpose-built parser](https://github.com/csv11/csvreader/blob/master/lib/csvreader/parser.rb) (instead of a supposed ""faster"" [`split("","") kludge`](https://github.com/ruby/csv/blob/master/lib/csv.rb#L1248)).


Happy data wrangling with ruby. Cheers. Prost.  

PS: Usage sample in Ruby code:

    line = ""1,2,3""
    values = CsvReader.parse_line( line )
    pp values
    # => [""1"",""2"",""3""]

or use the convenience helpers:

    txt <<=TXT
    1,2,3
    4,5,6
    TXT
    
    records = CsvReader.parse( txt )
    pp records
    # => [[""1"",""2"",""3""],
    #     [""5"",""6"",""7""]]
",1534861783.0
Shaper_pmp,"Does it [correctly un-escape double quotes](https://tools.ietf.org/html/rfc4180#section-2) in double-quoted values in files?

`""Double quotes """"are escaped like this"""" in CSV format""` should evaluate to `Double quotes ""are escaped like this"" in CSV format`.

Likewise, backslashes are *not* used for escaping in CSVs, so a literal `""Test \n"" value""` in the CSV should be imported as `Test \\n value` in ruby, not `Test \n value`.",1534866109.0
potatoheadedm,"Nice! Last week I was working with a csv file in utf-16 and needed to covert it to utf-8 to perform a find in string and save to the dB. This was in php and I used a build in method to convert the encoding.

I see that your always using utf-8 when reading a file, is this ok for a file with other encoding like a utf-16 encoded csv?",1534873313.0
slendermann29,"kind of overengineered, but it's nice that it looks highly reusable",1534877852.0
hmaddocks,Add Active Model and some form fields in your view and you‚Äôve got yourself a User filter. ,1534878913.0
4rch3r,"Be very careful calling `.all` on tables with millions of entries! 

Interesting approach to pagination though.",1534873226.0
SizzlinSteak,"This method supports multiple nested subcategories and is my go-to almost every time:

    class Category < ApplicationRecord    
      belongs_to :parent, class_name: 'Category', optional: true
      has_many :subcategories, class_name: 'Category', foreign_key: :parent_id, dependent: :destroy
    
      scope :main, -> { where(parent_id: nil) }
    end",1534839322.0
Hell_Rok,"If you're using rails I think what you want is something like this on category `has_many :posts, through: :sub_categories` and on sub-categories have `has_many :posts`",1534835550.0
PikachuEXE,"I don't quite understand

""each subcategory displays posts, as well as categories themselves""

Do you mean: 

""a subcategory page shows links to associated post pages AND links to associated category pages""

or

""a category page shows links to associated post pages AND links to associated subcategory pages""",1534836563.0
petepete,"I did something like this recently, here's my models and relationships.

The `AdvertSubcategory` relationships are set to `optional: true` because of the saving order of objects when creating records, you can see that the `validates_associated` line (which contradicts the optional one) ensures that there are no invalid links.

Slightly confusing, there may be a better way but this *does work*.

    class Advert < ApplicationRecord
      belongs_to :category
      has_many :advert_subcategories, inverse_of: :advert
      has_many :subcategories, through: :advert_subcategories
    end

    class Category < ApplicationRecord
      has_many :adverts
      has_many :subcategories
    end

    class Subcategory < ApplicationRecord
      belongs_to :category
      has_many :advert_subcategories
      has_many :adverts, through: :advert_subcategories
    end

    class AdvertSubcategory < ApplicationRecord
      belongs_to :advert, inverse_of: :advert_subcategories, optional: true
      belongs_to :subcategory, inverse_of: :advert_subcategories, optional: true

      validates_associated :advert, :subcategory
    end",1534836323.0
mphoyu,"I think this could help you if umderstood your question.

https://en.m.wikipedia.org/wiki/Composite_pattern",1534848207.0
ptrboro,"~~Who taught you this sorcery with defining routes inside controller? Do you use any gem for this? What rails version do you use? Using rails for 2 years and I have never seen such syntax.~~ Ahhhh, its sinatra.

Back to your question: @state.update(:state\_name => params\[:state\_name\]) will update record only if validations pass, other way it will return false so you can move user back to the edit page when @state cannot be updated:

    patch '/states/:id' do
      @state = State.find(params[:id]) # using find so it will return 404 when error does not exist
      if params[:state_name] != """" && @state.update(:state_name => params[:state_name])
        redirect to ""/states/#{@state.id}""
      else
        redirect to ""/states/#{@state.id}/edit""
      end
    end

Normally you would also want to set some flash message with validation errors. If you want to know what specific errors you get just run binding.pry after if-else statement and puts @state.errors",1534835917.0
systemnate,"I'd just post your question here.  It sounds like what you're doing may require some JavaScript.  Something similar to this: [https://codepen.io/systemnate/pen/oPNoox?editors=1011](https://codepen.io/systemnate/pen/oPNoox?editors=1011), but you will have to put the JavaScript inside slim.  You could either do it in its own .js file or in the view like:

```
javascript:

  document.addEventListener('DOMContentLoaded', function() {

  ...

});
```",1534799717.0
andygauge,"If you don't already have javascript dependencies to lean on, here's a simple jquery solution: [https://stackoverflow.com/a/27076903/5586783](https://stackoverflow.com/a/27076903/5586783)",1534803646.0
ThetaGone,[https://ruby-doc.org/core-2.2.2/Marshal.html](https://ruby-doc.org/core-2.2.2/Marshal.html) will do the job.,1534788097.0
jrochkind,"Yes, Marshall, but for some reason(s) it's not used much in ruby, I'm not sure why. ",1534788892.0
jemminger,I must be missing something here... Middleman is a static site generator.  How is it consuming memory on your server?  ,1534803425.0
varnima,I needed this so much. Thank you!,1534781089.0
Rogem002,"> Why the repository was removed
> removed by a claim from a company where I worked as a freelancer through Upwork ~ half a year ago

Eak! Glad to see the developer was able to workout a way to get the project back :D",1534784678.0
vfreefly,u/ksec Thanks for the post! New 1.0.0 version available at [https://github.com/vifreefly/kimuraframework](https://github.com/vifreefly/kimuraframework),1535026600.0
fuzzyinterval,"Hooray!  
Glad you found a workable solution.",1534786537.0
Nowaker,"What is Kimurai? Not a single word on it in the readme. All it says is it'll be back soon, and it's Ruby. Edit: uh, these sections expand on click. Good to know.",1534828394.0
moomaka,That is a really badly written article filled with buzzwords and marketing FUD. ,1534802176.0
null-undefined,Look at log/unicorn.stderr.log,1534766020.0
prh8,"Your `State` model doesn't have a `user_id` column, which is why you can't assign it.

What you (likely) want to do is

```
@state.users << current_user
```

This assumes you have set up your associations correctly. Also, you'll have to have some error handling around this. If the user is already connected with that state, it will throw an error.",1534723500.0
tomthecool,"    @state.user_id = current_user.id

Each `state` has and belongs to many `users`. It would therefore not make any sense for a `state` to have a `user_id`; that would only work if the `state` belonged to **one** `user`.

Now, your database *might* be modelled incorrectly... Is it really possible for a user to have many states? (If not, then there should be a `users.state_id` column.) Is it really possible for multiple users to share the same state? (If not, then there should be a `states.user_id` column.) But if both of those things *are* possible, then the database model is correct.

Assuming the database is correct, you need to do something like `@state.users << current_user` - which will add a new record to the `user_states` JOIN table.",1534759601.0
realntl,"I wasn't able to follow the article at this point:

> Of course, DelayedJob could no longer handle its queue, since it wasn‚Äôt able to write to a read replica database.

Why were you not able to connect DelayedJob to a master database, while simultaneously ensuring that the jobs are querying data from the replica? Are you unable to control the connection used by DelayedJob? Or is it the jobs themselves?",1534775881.0
Mallanaga,Wat...,1534694924.0
mkaito,I... What?,1534698688.0
jemminger,"What would be awesome is if you could write the whole app in Ruby, then just compile it all down into Go for production speed.",1534702954.0
ozkarmg,Speechless.,1534707175.0
GibletHead2000,That would be *0.3.1*,1534714711.0
BananaKick,I don't get it.,1534717111.0
b1nj0y,Here's why Go on Rails is developed: [https://github.com/railstack/Awesome-Railstack](https://github.com/railstack/Awesome-Railstack),1534903655.0
syndbg,but... why,1534709193.0
_ferz,"People are truly bored these days. Most ex-Rails people I know went to pure Go without anything complicated or fancy like ""Go on Rails"".",1534711678.0
sshaw_,"I would hate to have to develop a web app in Go. Not fun.

",1534721326.0
an0ma133,"Follow the SOLID principles for one. Rubocop is a decent tool for guidance, but that‚Äôs just about it. Learn TDD and you will get better at creating better ‚Äúclean‚Äù code.",1534710223.0
iconoclaus,"Rubocop aside, I'd also suggest using flog/flay on your code. These are more focused on finding complex and redundant code.",1534733920.0
Z0neNp,"A decent advice!
I wish the team I have joined had used it in the past. Now, there is so much code, no one will edit it to meet some standard :D",1534681176.0
taw,"There are two problems with this:

* the very idea of code style guide is really dumb considering the world we live in, where every project uses 5+ different programming languages (for small rails app out of the box: ruby, coffeescript, haml, scss, sql, or some other combination - not counting sublanguages like rspec), and everyone's expected to move between them fluently
* rubocop default settings are completely retarded. For example traditional ruby style (and style in most languages) is to use `""""` consistently everywhere (unless string is already quoted inside), that nonsense of mixing `""""` and `''` depending on if you use interpolation or not is just someone not getting how ruby works. And there's a lot other such cases with end of line commas on multiline literals (should be mandatory, but rubycop hates them) etc. If they can't even get _reasonable_ style settings, and are actively making code worse, that sort of proves the point.
",1534707482.0
aiux,It should be <% end %> and not <%= end %>,1534669275.0
jgaskins,What‚Äôs the url path?,1534636647.0
tomthecool,"From a gem architecture perspective, I'd advise defining all your custom classes within a module (`TestValues`?), to avoid polluting the global namespace.

For example, you could have `TestValues::String`, `TestValues::Integer`, etc.

I see this library as a fun little experiment, but I wonder whether you actually built it to solve a real problem in another project?? For instance, I'm not sure why would I bother using e.g. `StringValues.string_of_length(5)` when I could literally just define `'xxxxx'` directly? This library isn't doing anything *random* at all; each method returns a well-defined string, so it would be quite easy to just define that string myself.

But assuming this is just made for a bit of fun, it's a nice little project :)

On a related note, I actually wrote a much more generic random string generation library a few years back: [`regexp-examples`](https://github.com/tom-lord/regexp-examples). Since strings are generated based on *arbitrary regular expressions*, there's no need to define lots of different methods for each use case. For example:

    # Your library:
    StringValues.strings_in_length_range((4..6))

    # My library:
    /.{4,6}/.random_example

(The behaviour is not exactly the same, but you get the idea). Just thought I'd share!",1534756316.0
garuspl,"1. Naming the variable inside the block 'array' is confusing, since it's not an array but its element.
2. the easiest way would be element.to_s.downcase.include?(word) - to_s converts nils to empty strings 
3. an alternative would be running 'compact' before 'any?'  - to reject any nil values ",1534613973.0
andyw8,"I think there's a small mistake the first code example in ""Tests for other phone cases"" ‚Äì it should say `it 'is valid'` rather `it 'is not valid'`?",1534629723.0
updog,"Neat! Haven't tried it, but I'm liking the simplicity. One short source file? Always peaks my interest.",1534721799.0
PM_ME_YOUR_HOG_PLZ,"The mods are asleep, post pictures of precious rubies. ",1534579943.0
RepSchwaderer,Corundum.new(<your_corundum>).value,1534582572.0
so_just,How can I upgrade from Ruby 2.5 to this version?,1534596167.0
Frizkie,/r/lostredditors ,1534575723.0
equivalent8,"We are different kind of Ruby enthusiasts, but still will give you an upvote :)",1534593954.0
jaryl,"I thought I was quite the expert at ruby, but I thought wrong!",1534599684.0
zitrusgrape,"do you have any tests for this?
either rspec or minitest are ok",1534601083.0
EliteMind49,Im not sure 100% if they're Anhedral or Euhedral.  ,1534574992.0
rjm13,This is great; it‚Äôs like arborists that post to r/trees. ,1534608696.0
EliteMind49,"For what its worth they ended up maybe not being rubies...If you ever want to know if your Corundum is valuable or real i heard to do a check under a uv light and they should fluoresce.

Meh.. Mine didn't glow.

They're Just garnets maybe. Still really cool, but they're sure not rubies if they dont glow?",1534625363.0
bacon_without_cause,Hi I've been programming in Ruby for 10+ years. It looks like your compiler is broken.,1534610326.0
zta6pitt,Maybe try r/gemstones? ,1534594256.0
garykubiaksbrother,hahaha this is great!,1534608312.0
Ronald-Ray-Gun,"Is it bad my first thought was to run a daily job to ping r/geology, gather OP‚Äôs latest 5 posts, and somehow calculate average worth? 

I bet literal ruby enthusiasts end up on stackoverflow all too often... ",1534622742.0
ClickableLinkBot,"##r/geology
---------------------------------------------
^(For mobile and non-RES users) ^| 
[^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| 
^(-1 to Remove) ^| 
[^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/853qg2/ignore_list/)",1534576073.0
HydriXRe,hmmmmmm,1534608086.0
tk425,This is wonderful,1534630094.0
EliteMind49,"Do you make good money as a coder or do you just do coding for fun? Please keep in mind i know NOTHING about ruby coding! üòÇ but if i could make some bankroll doing it ,,,i can learn quick if there's a job opening hahahaha",1534636671.0
EliteMind49,2k views.. 165 upvotes. In 14 hours. üòÇ I don't comprehend it. People must really look at this ruby coding page a lot. Anyone care to tell me how ruby coding is used in the world and if it could help benefit me by knowing about it?,1534628277.0
SpiderGears,Does this support current Rails version or I should wait for next release?,1535601682.0
lebowen,That's really disappointing. I spent quite a lot of my time replacing a much worse solution with this over the last few days and now I'm not sure what to do. ,1534598057.0
easylifeforme,That sucks,1534573585.0
zenzen_wakarimasen,Mirror? ,1534581154.0
fuzzyinterval,"*""many lines are copied from private proprietary code""* 

and

*""other 10% can't be written differently if you're going to code Scrapy-like framework using Ruby with Capybara/Nokogiri""*

IANAL but I don't think *private proprietary code* can be applied to apps written in Ruby and those other stacks.

In any event, shitty news. I was looking forward to sitting down and messing with Kimurai.",1534574826.0
kwhittington,My work was using `will_paginate` but we recently found [`kaminari`](https://github.com/kaminari/kaminari) and we're in the process of switching to it. It's been pretty nice.,1534510220.0
d4be4st,"Depending on what you actually need.
If you need to go to page 100+ with a 200 records per page, neither will_paginate, kaminary nor pagy will help you. 
You need to use keyset pagination technique. There is a gem that uses that technique for pagination: https://github.com/glebm/order_query


But we are using kaminari because its views are easier to change than will_paginate.",1534513559.0
kayakyakr,"I recommend Kaminari. But you aren't expecting users to tab through 43k records to get to the value they want, are you? UI-wise, you should be providing some manner of filtering.",1534526716.0
RepSchwaderer,"Exclusively use kaminari on all apps with no problem, pretty large datasets here",1534543967.0
Nebs987,"Have you actually read your article yet? There are multiple occasions where you swapped your do and don't code sections which is an easy thing to see if you actually proofread your content.

The article also contains many grammatical mistakes and poorly formatted sentences that make reading it quickly a challenge.

Lastly, the content of the article is fairly straight forward and things that most people using ruby for more than a month already know.",1534506917.0
disclosure5,">Dont's
>hash = { one: ""one"", two: ""two"", three: ""three"" }
>hash[:one] -> one\

Aside from that backslash that doesn't make sense, I do this all the time and I don't intend on changing. There's nothing wrong with this.",1534507356.0
noteflakes,"FWIW I've been working for the last few weeks on a solution for this problem, in the form of a gem for better module dependencies, which actually implements some of the proposed solutions in the OP. You can have a look here:

[https://github.com/ciconia/modulation](https://github.com/ciconia/modulation)",1534656770.0
solak,"In my opinon this functionality reinforces bad, mutable code. I'm dissapointed DHH supported it.

Using #partition, as ArcaneRain pointed out, is much cleaner and idiomatic.",1534510448.0
ArcaneRain,"Did I get it right that you decided not to use standard lib


    numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    odd_numbers, numbers = numbers.partition { |number| number.odd? } # => [[1, 3, 5, 7, 9], [0, 2, 4, 6, 8]]

just because it looks ""a bit complicated"" and instead created a pull request with +107 lines to have the same functionality written in a different way?

    numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    odd_numbers = numbers.extract! { |number| number.odd? } # => [1, 3, 5, 7, 9]
    numbers # => [0, 2, 4, 6, 8]

Not only it's harder to read because your original array would change, while the name stays the same(i.e if your original array is `numbers`, after `extract!` it actually should be `even_numbers`), but also it's 1 array being mutated and 1 being produced, which is very confusing, while `#partition` gives an advantage of immutability.

Indeed, I would never understand people trying to get into rails/rails contributor list just to proudly add this info into the CV. ",1534505645.0
Slotos,The whole read I was thinking one thing: that‚Äôs exactly what `#select` does.,1534499637.0
prh8,Stuff like this reminds us that there are Ruby devs and there are Rails devs and they are not the same.,1534529174.0
moomaka,"AFAIK it only supports symbol keys, see the docs on sprintf which is the underlying implementation: https://ruby-doc.org/core-2.5.1/Kernel.html#method-i-sprintf 

That said, percent formatting is very rarely used in Ruby, your example is more idiomatically handled with string interpolation.",1534566265.0
crazymykl,"String formatting is a part of Ruby, not Rails. Also, generally Ruby will prefer symbols over strings internally, because strings are mutable and slower to compare.

Hashes not treating strings and symbols as equivalent is very useful, storing `'foo'` and `:foo` as distinct keys in the same hash come up more often than you'd think.",1534512247.0
Freeky,"Bit of a shame it calls internal Hash functions, instead of just calling `fetch`.  You can't even pass it a HashWithIndifferentAccess, because it bypasses the overrides.",1534777572.0
sbellware,"Dependency injection is valuable. But it should be evaluated outside of going to the extent os using IoC ""containers"" or dependency injection ""frameworks"".

Making dependencies substitutable without having to use monkey patching makes the design more expressive of its intended use.

The challenge is not taking it to far. For example, initializers shouldn't be required to receive dependencies in order to simply instantiate an object. Setters with default values or default null objects is more appropriate than using a class's initializer.

The use of an external ""container"" for a system's dependencies disencapsulates a class's construction from the class itself. Containers themselves are low-cohesion and thus are invalid from a design principles and metrics perspective.

A class is responsible for the knowledge of how to construct itself. While containers are interesting tech, they're a detrimental influence on overall design.

Here's an example of a class having its own responsibility and knowledge over its own construction:
https://github.com/eventide-project/useful-objects/blob/master/README.md#an-example
",1534530297.0
in0pinatus,"There is no ‚Äúhard coded‚Äù in Ruby.

Why do people feel the need to implement a dynamic lookup context when the entire language runtime is itself a dynamic lookup context? That is, extra scaffolding or framework to inject dependencies to your collaborators is not merely unnecessary in Ruby, it‚Äôs downright counterproductive.   I think there‚Äôs a classic case of [inner-platform effect](https://en.m.wikipedia.org/wiki/Inner-platform_effect) here. 
",1534498502.0
TheFaithfulStone,The delay in ‚ÄúRuby knows about the message‚Äù until ‚Äúalert visible‚Äù is going to be dwarfed by the latency of an HTTP GET so I wouldn‚Äôt worry about that.   I‚Äôm not familiar with the Messagebox gem (or windows in general really - but if you can pass it a string you can almost certainly customize the message at run time.   Maybe show some code?,1534469545.0
TheFaithfulStone,"I am not sure what you mean, but if it‚Äôs that performance critical maybe consider a different language.  Ruby is plenty fast - but there a limit to how much performance a dynamic, garbage collected, interpreted language can give you. ",1534468410.0
sshaw_,This is all very confusing...,1534477147.0
joesb,Why is gmail related to this alert thing?,1534477289.0
geeko55,"I'm also having this exact issue, so any help would also be greatly, greatly appreciated.",1534777162.0
three18ti,"This is pretty bad ass.

It would be awesome to have some kind of API that I could feed it a gem list and get back any relevant CVEs.  Maybe even gem and version?  Like, Sinatra has one, but if I'm using 2.0.3 that CVE seems to be fixed.  So if I say have `sinatra-2.0.2` I'd get a link to the [CVE](https://cves.octotrack.com/advisory/sinatra/CVE-2018-11627.pdf) but using `sinatra-2.0.3` there's no vulnerability so get a ""no vulnerability found in public databases"" kind of message.

EDIT: ooh! Then let's integrate it into RSpec or RuboCop or something!",1534454677.0
Bl4ckGryph0n,"Very interesting, how do you see this against something like RubyAudit and BundlerAudit? I use those in my pipeline for automated and integrated testing to get uptodate information and automated checks. Then add brakeman to it as well and you get a pretty good suite of both self induced issues and those by others.

[https://github.com/civisanalytics/ruby\_audit](https://github.com/civisanalytics/ruby_audit)",1534460142.0
bryanalves,How does this compare to gemsurance?,1534476867.0
SkyPuncher,"Great idea, but I don't like that I'm forced to download a PDF (at least in Chrome).

I just want to read a web page.",1534520126.0
this_is_not_nil,"This is a default since Rails 5:

    if ENV[""RAILS_LOG_TO_STDOUT""].present?
      config.logger = ActiveSupport::TaggedLogging.new(Logger.new(STDOUT))
    end


Not that it would you help you, but I thought it was worth a mention in your article.",1534433812.0
trustfundbaby,"Annoyed it took this long to fix. This ""feature"" took down an app of ours 6 years ago when we were still running Ruby 1.9.x, all the server processes for our app had tried to connect to an unresponsive service and hung, one by one, essentially DDos'ing ourselves. 

Very embarrassing. especially when we figured out what had gone wrong.",1534393449.0
byroot,"Lol. That's my patch :)

Edit: nevermind, Naruse ended up fixing the issue in a different way. Still cool though.",1534418522.0
IM_OK_AMA,"As cool as this is, I'd caution against leaning on it heavily. `awk` and `sed` are intimidating to be sure, but they're also everywhere. Once you know them you can be instantly productive on any server you SSH to.",1534370426.0
sshaw_,Isn't this what `ARGF` and `ruby`'s `-pnale0` options are for?,1534378063.0
Jdonavan,Why one earth would I want to replace highly optimized C apps with interpreted ruby?  Especially for processing text at the command line?,1534373917.0
JohnBooty,"My former employer hired Ombu Labs to help incrementally migrate an absolutely massive Rails app (something like 600kloc of Ruby+JS, hundreds of models, etc) from 3.x all the way up to 5.x.

Mauro and the rest of the team did a great job... they *definitely* know Rails upgrades.

(I'm not affiliated with them in any way, other than the fact that my former employer was their client)",1534352802.0
waffle_ss,"Also check the official 5.1 -> 5.2 upgrade notes for a couple more things (bootsnap and change to cookies):

https://guides.rubyonrails.org/upgrading_ruby_on_rails.html#upgrading-from-rails-5-1-to-rails-5-2",1534357133.0
innou,"Worth noting that ActiveStorage isn't a replacement for gems like Paperclip if you're using public images.  ActiveStorage is for serving up private files via temporary references for cases when you want to control access to the underlying file.  If you're serving up public images in a CMS type setting then you're better off sticking with Paperclip which allows for direct, cachable, image urls.",1534361045.0
LemonAndroid,[https://GitHub.com/railslove/fight\_csv](https://GitHub.com/railslove/fight_csv),1534354715.0
burenstam,https://github.com/buren/honey_format,1534359148.0
fiveguy,"It kinds depends on whether or not you're doing TDD, and the state of your models.

* From your #1, if you have business logic in your models, test it. (I tend to put this code elsewhere - outside of Rails MVC - but it's still common to have in models)
* If your validations are custom, or complex, test it. (i tend to use form objects instead of model validations - complicated validations are code smell for me)

Also take some time to read [betterspecs.org](http://www.betterspecs.org). It doesn't directly answer your question, but if you're new, it's well worth reading.

I'm interested in others answers to your question, though, as I hear a lot of people arguing to not test a lot of what you're proposing. It all makes sense to test, from certain points of view.",1534291376.0
techn1cs,"tl;dr imho, if you see a line of logic/code, test it. If it is using another method,  trust that behind the scenes implementation, and stub it's return/response as needed.

Unabridged: Personally, I follow the ""test what you see"" philosophy for model/unit tests. Trust that the code your model relies on outside of itself is properly covered and behaving as expected. Mock/Stub those dependencies as needed, construct the scenario for each test case to match the environment you expect/want for that situation. Point being, don't test ActiveRecord methods themselves, but rather stub them and set them up to deliver what you want for a given test case. Assert that your attrs are properly using AR validations? Yes! Send in specific examples of data to check whether the AR (built-in) validation is doing what it says it does? Nope. 

If you see a method in your file, test it. If its using a method with an implementation elsewhere (AR, another class, a helper module, etc), just test it is being called properly -- trust that those guts are working as intended and the associated tests for that entity exist on their own. 

Best of luck! ",1534292736.0
_matthewd,"\#2 is really testing your factory definition. Whether that's useful is up to you... it's unlikely to ever be your only failing test, but it might give a clearer pointer to what's wrong.

The edge cases that matter are those that affect your code: if you have a condition that checks `if age >= 21`, then 20 and 21 are your edge cases. If your code is going to behave identically for age 50 and age 99999, then the latter isn't much of an edge case, despite being a more extreme value. (This is obviously white box testing; if you're writing tests that assume you don't know what the implementation looks like, then you can derive some edge cases from business rules, but otherwise might be more likely to cover a wider range of arbitrary values, even where the expected behaviour is consistent throughout.)

Personally, I don't bother testing simple validations at all. If it's a one-liner ""validates presence"" in the model, no future developer is going to accidentally introduce a logic error: if they delete it, they meant to (regardless of whether they should / that's a good idea), and will just delete any related spec too. (A format validation with a regex, OTOH, would be worth testing: you're not testing _that_ the validation is there; you're testing that the regex does/doesn't match the things you need it to.)",1534320783.0
BluePizzaPill,"For column and validation specs I use [shoulda-matchers](https://github.com/thoughtbot/shoulda-matchers) a lot. They help with the boilerplate:

    RSpec.describe Foo, type: :model do
        it { is_expected.to have_db_column(:content).of_type :text }
        it { is_expected.to validate_presence_of :content }
    end",1534410564.0
jasonswett,"Let me try to address your points one-by-one.

Before I do, I want to say that there are certain things the answers will depend on. For example, are we assuming you're writing tests for existing code or new code? If existing code, is it simple stuff you recently wrote yourself, or a huge, messy legacy project? I'll assume we're talking about new code you're writing yourself.

1. I would for the most part agree that you'd want to have at least one test per method in your class. I actually often don't though. My workflow tends to go like this. Let's say I'm developing a new class and I don't have any code yet. I'll write a failing test, then I'll write the code that makes the test pass. I'll repeat this maybe 7 or 8 times for a single method. Inevitably, I'll look at the method and imagine ways it could be refactored to be more understandable. After the refactoring my 1 method might end up as 4 methods instead. (The methods I write are often just one line long.) Because I followed the rule when writing the original method of only writing enough code to make the tests pass, I know that all my functionality is covered by tests, so I can feel free to refactor as wildly as I please without having to worry that I'm breaking anything. So even though only 1 of my 4 methods is covered by tests that explicitly address that method, I know that all my execution paths are covered one way or another. This is good enough for me.
2. I don't test that the model can successfully be created. Pretty much all my tests will start with creating the model, so if my model can't be created, a lot of my tests will fail. So a test that just tests if the model can be created doesn't add any value, in my mind. I do test that the model is valid. If I have a model that has, say, 3 required attributes, I'd write tests that basically say, ""If X, Y or Z is missing, I expect this model to be invalid. If all those attributes are present, I expect it to be valid.""
3. Yes, this is generally a good idea. I usually don't go too nuts with the edge cases. Usually I find a simple ""if this value is missing, I expect the model to be invalid"" kind of test sufficient. The use case dictates what makes sense. If it's an admin panel that's only used by 4 internal people who I know to be tech-savvy and meticulous, I'm not going to bother testing a whole bunch of crazy edge cases. If it's a public form with tons of traffic, testing edge cases becomes more valuable. The ""seriousness"" of the feature also matters. I'm going to test edge cases for a checkout page a lot more than for an ""update my profile"" page because the consequences of a bug are a lot more serious in the former case than the latter.
4. Yes, this is a good idea.
5. Yes.
6. Yes.

You say you've always heard not to test ActiveRecord's actual validations. The idea is that you want to test your application, not Rails, which we can safely assume to already be tested. This doesn't mean you shouldn't write tests that ensure your model is invalid when the conditions of your validations are not met. You want some protection against the case where someone deletes or changes a validation of yours in such a way that introduces a bug.

Would I recommend doing edge cases for each attribute? It depends on some of the conditions I described above. Usually I don't. When I do, my edge cases often include things like empty strings, strings consisting of just spaces, and valid strings with leading or trailing spaces. This is pretty uncommon for me though. I usually don't find it called for.

Hope that helps.

**Edit:** You inspired me to write a blog post about how I write model tests. [Here it is.](https://www.codewithjason.com/write-model-tests/)",1534604013.0
Schrockwell,"Missed opportunity to name it ttpie

Also, link is a 404",1534294335.0
_matthewd,"Noah makes a good point about the guide being focused on returning JSON, instead of rendered HTML. We should really fix that: server-side rendering is definitely the Railsy approach. And we do have an API to make that easy; the fact this article gets distracted with how ugly it is to roll your own shows we need to do a better job of highlighting that, too.

Until then, the best option to see the Official Rails Way interpretation of  Action Cable is probably the last few minutes of the tour video on https://rubyonrails.org/

The only thing I really disagree with in this article is that ""A Rails API [tends to have] excellent documentation"": it grows over time -- so the more established components have great contributed guides, for example -- but I think our track record on initial documentation for new features is pretty consistently not-so-fabulous.",1534259818.0
jrochkind,"For what it's worth, I noticed this to post here, because rubyland.news, the rss/atom feed aggregator I run, includes the RSS feed from `https://aws.amazon.com/blogs/developer/category/programing-language/ruby/feed/`. 

Shameless plug for http://rubyland.news. 

Also cause lately I was wondering if there was any point to rubyland.news after all, was I actually finding anything useful there that wasn't on here on the subreddit already anyway? Turns out, yes, at least sometimes. :)",1534284751.0
janko-m,"The Shrine test suite initially used actual S3 calls, and I was reborn when I found out aws-sdk stubs and rewrote the test suite. I was happy I didn‚Äôt have to resort to VCR or WebMock, the aws-sdk stubs were so much easier to use.

The new API call recording looks very exciting. I had to use assertions inside the dynamic procs to test everything, and it‚Äôs not great, because some tests will pass even if that API call was never made (and thus the Proc never called). I look forward to using API call records instead.",1534278225.0
_matthewd,"Personally I'd go with option #0: don't. Allow blocks as a convenient shorthand, but by their nature, adding them is a one-way street; if people want to be able to remove it afterwards, they have to use a lambda [which they can store] instead, as you've shown.

(This is how ActiveSupport callbacks work, for example: you can skip a callback you can refer to, but if it was defined as a bare block, you're out of luck.)

If that really doesn't work (e.g. callers ~always need to remove it later), then I'd go with #2. (Noting the thing you return can actually be the block-as-proc.. no need for a separate identifier.)",1534261923.0
jrochkind,"number 2 seems about right. I don't even understand how #1 could work. 

Ah, I'd make add and remove (and I'd call it `remove` not `rem`, this is ruby) less parallel. 

    observer_id = o.add { |t| listener_code }
    o.remove(observer_id)

You could also make the id an optional second arg to the block, in case the observer itself wants to store it's ID somewhere to share with someone else, or to remove itself. 

    o.add { |t, observer_id| whatever }

I agree with you that if you pass in an object instead of an anonymous block, you can and should support remove with the object itself as an arg.  Up to you and your intended use patterns whether you want to _only_ support explicit objects (not anonymous blocks) for this or other reasons; or only blocks; or both.  If you do both, you could still return an internal id to be used for removal, even with an explicit object, for consistency. 

I would definitely spend some time looking at existing observer and similar libraries in ruby, even if just to see how their APIs work to get ideas and make sure you're not missing anything you could consider. ",1534253320.0
realntl,"I don't love ruby's built in `Observable` API, but it might be a good place to start. It will show you one approach for how removing listeners might work.

See: https://ruby-doc.org/stdlib-2.5.0/libdoc/observer/rdoc/Observable.html",1534255854.0
2called_chaos,"I kinda liked the [Signals](https://photonstorm.github.io/phaser-ce/Phaser.Signal.html) (and [SignalBindings](https://photonstorm.github.io/phaser-ce/Phaser.SignalBinding_.html)) from the Phaser game framework (JS) but tbh I never had a use case to apply it to Ruby.

The essentially did #3 except that you don't reference the block itself but the add method (on a ""Signal"") returns a new ""SignalBinding"" object with some methods like removing it from the signal or just conditionally activate/deactivate them.",1534257660.0
tomthecool,"> Ruby 2.6.0 was recently released.

Erm... `2.6.0.preview2` was recently released. Not `2.6.0`.

Ruby `2.6.0` will, in all likehood, be released on 25th December 2018.

Everything in this blog is about the *preview*, not the final release, and is still subject to change.",1534252339.0
toadkicker,"Congrats on taking control of your platform! This is not only a great adventure for you, but also makes the internet a better place. I get excited when I hear these great stories.

I totally get your point about how its more expensive, both time and financially to host your own app. There are a lot of great hosts out there, and I don't want to really come off like I'm plugging any. But there are great $10/mo private hosting solutions out there that give you a full shell access, public IP address, and great support.

When you feel comfortable sharing your code it will help you not only reduce the amount of time you spend bug fixing things yourself, but allow other people interested in a similar solution to contribute to improving it. I hope you post it on Github, Bitbucket, or similar service.",1534253145.0
djcp,"Your blog could probably fit into the heroku free tier, depending on your database usage.",1534305303.0
edendark,"You can use backticks like:

    2.5.0 :001 > result = `host google.com`
    => ""google.com has address 172.217.30.238\ngoogle.com has IPv6 address 2800:3f0:4002:808::200e\ngoogle.com mail is handled by 20 alt1.aspmx.l.google.com.\ngoogle.com mail is handled by 30 alt2.aspmx.l.google.com.\ngoogle.com mail is handled by 40 alt3.aspmx.l.google.com.\ngoogle.com mail is handled by 50 alt4.aspmx.l.google.com.\ngoogle.com mail is handled by 10 aspmx.l.google.com.\n""

To make system calls and capture output and then parse the result. If you need to do more complex things like capturing process ID or exit status, take a look at [Open3](https://ruby-doc.org/stdlib-2.5.0/libdoc/open3/rdoc/Open3.html)",1534183899.0
this_is_not_nil,"At $dayjob I have rewritten loads of Bash scripts to Ruby.

Recently I have also used bundler inline to make my scripts self-contained by inlining their dependencies:

    require 'bundler/inline'

    gemfile(true) do
      source 'https://rubygems.org'
      gem 'net-ping', '~> 2.0.4'
    end

    # Do stuff",1534291176.0
crova,"BTW, the script tests IPs/Domains against a handful of blacklists.  
Original project is here: [https://github.com/IntellexApps/blcheck](https://github.com/IntellexApps/blcheck)",1534192497.0
caeruleusblu,"With a recent program I made, I was able to incorporate shell commands... Maybe it can help you https://github.com/FadiniGIT/BackupScript-2.0",1534246986.0
rafaltrojanowski,Pertect! Thanks for share.,1534171751.0
realntl,"Why, oh why, is anyone trying to tell the rails cache to store `nil`?",1534298428.0
cutety,"Since you‚Äôre a DBA, you could look into using the [scenic gem](https://github.com/thoughtbot/scenic), which would allow you to create a db view, so you could use raw SQL that I imagine you‚Äôre pretty comfortable with to define a view that contains all the columns across the joined tables you want to export, and this view is used to back a (read only obviously) active record model, allowing you to use the same active record object methods, without having to try to force activerecord to build a complex query. Then you can just do `FooReport.all.to_json`.

If you can‚Äôt add dependencies or modify code, another option you could look into dropping down into [arel](https://www.rubydoc.info/github/rails/arel) to compose the query and select all the columns across the tables. However, this method is not as clean as using scenic, it‚Äôs still a powerful tool that comes with rails and works (mostly) seamlessly with activerecord. I really like using Arel actually, and as a DBA you might find it a bit more pleasant to work with for building complex queries than using activerecord‚Äôs api.",1534053763.0
seainhd,"Associations are free with rails.

https://apidock.com/rails/ActiveModel/Serializers/JSON/as_json

You can do:

Foo::Bar.all.to_json(include: :otherstuff)

If you provide exact models/methods I can tell you exact methods",1534080647.0
GDP10,Nice!,1534049119.0
FigmentGiNation,"I feel like one of the overlooked considerations is that it‚Äôs highly highly flexible, which is a double edge sword, but it gives the developer a lot more choices and I personally like that.",1534013392.0
manys,"Not going to click on a ONE WEIRD TRICK title like this, anybody wanna tl;dr?",1534012644.0
an0ma133,Lots of great books and videos out there!,1534066336.0
joelbluminator,"I like the Rails doctrine in answering why Rails is different and worth picking up (granted, it's about Rails and not Ruby but still relevant to the discussion). [https://rubyonrails.org/doctrine/](https://rubyonrails.org/doctrine/)",1534091660.0
banister,"The whole ""friendly"" thing is bs in my opinion. I've met people just as friendly in the Rust and C++ and Javascript communities. There's friendly people everywhere (as well as douchebags). Should really stop going on about it is as if it's unique to rubyists, it's not, and it's getting cringey. ",1534011753.0
gettalong,Note that the CFP has been extended until August 17th!,1533964498.0
FlockOnFire,"You shouldn't format queries directly, instead use something like the following instead:

`logs.execute(""SELECT * FROM ? WHERE user = ?"", [channelName, specifiedUser])`. This prevents SQL injections and might prevent the mess up in syntax too.

See this for more info: http://zetcode.com/db/sqliteruby/bind/",1533896229.0
ryantriangles,"Think about the string interpolation. If `channelName` is ""foo"" and `specifiedUser` is `""Rebecca""` then after interpolation your query becomes `select * from foo where user = Rebecca`. There should be quote marks around `Rebecca` because it's a value, SQLite sees `Rebecca` as a column name.

But you should avoid using string interpolation at all here. Use a parameterised query instead, eg `execute(""select * from foo where user = ?"", specifiedUser)`. Using string interpolation opens you up to [an injection attack](https://en.wikipedia.org/wiki/SQL_injection).",1533896414.0
joesb,"Try to separate output from logic. 

There‚Äôs no gem or library when your ‚Äúgem‚Äù is still outputing to console both the result and CLI Text. ",1533908276.0
geraldbauer,"Hello, I've put together csvutils - a new library / gem that collects tools 'n' scripts for working with comma-separated values (csv) datafiles - the world's most popular tabular data interchange format in text :-). Command-line tools include: `csvhead`, `csvheader`, `csvstat`, `csvsplit`, `csvcut` and more. It's just a start. 

Happy data / text wrangling with ruby. Cheers. Prost. 

PS: For some getting started .csv datafiles, see the [/football.csv collection](https://github.com/footballcsv) (incl. English Premier League, Bundesliga, Seria A, Ligue 1, European Cup, etc.).",1533894159.0
realntl,"This product seems like a countermeasure for flawed deployment processes, in particular non-reproducible builds masquerading as reproducible.

For instance, if you expect Gemfile.lock all by itself to make your build reproducible, you're exposed to all the problems that this kind of product is meant to solve. Specifically, if a gem referenced by Gemfile.lock is pulled from rubygems.org, you would never be able to reproduce whatever build wrote out that Gemfile.lock in the first place.

A far, far cheaper alternative to piling on more tooling is to simply store the `.gem` files of all your dependencies with each build.

Okay, rant time (you've been warned): traditional package managers technically solved this problem years ago with source packages. I keep hoping the web development world will one day realize that there are solutions in the broader software development landscape that they can benefit from, but so far it's not looking good, sadly. With the rise of native-web-development tools like Electron, web development is having far more of a negative influence on software development than vice-a-versa.",1533909242.0
DarkWiiPlayer,"You could easily solve this problem using [sets](https://ruby-doc.org/stdlib-2.3.1/libdoc/set/rdoc/Set.html#method-i-proper_subset-3F):

    require 'set'
    keys = Set [ *your_hash.keys ]
    if keys == Set[ :key_a, :key_b, :key_c ] # Hash has exactly these keys
    if keys <= Set[ :key_a, :key_b, :key_c ] # Hash has any combination of these keys (including none)
    if keys <= Set[ :key_a, :key_b, :key_c ] and keys.length == 2 # Hash has any two of these keys
    # In all of the above, the hash can only have keys that are in the provided set (no :key_d, for example)",1533897643.0
danshep,"I've frequently written a guard condition like this when I'm trying to figure out where extra hash keys are coming from:

```
bad_keys = hash.keys - [:city, :state]
raise bad_keys.inspect unless bad_keys.empty?
```

For your specific case, I might do something like:

    sorted_keys = hash.keys.sort
    if sorted_keys == [:zip]
    elsif sorted_keys == [:city] or sorted_keys == [:state]
    elsif sorted_keys == [:street]
    else
      raise ""Expected only one of zip, city, state or street""
    end

I sorted the keys because I'm guessing you're going to have an if in there that wants more than one key, but if you only want one key, I'd probably be guarding on the hash size first and then just reading the single key to if on.

But that's pretty ugly too. I'd probably stop using a hash pretty soon and turn that bad boy into an object that I can define my own methods.",1533863235.0
in0pinatus,"Here's hoping that [Hash#=== proposal](https://bugs.ruby-lang.org/issues/14869) gets traction.
",1534080300.0
samwise-perez1,"Checking a single key: 

    if your_hash.keys == [:key_you_want]
      # do stuff

Checking for multiple keys:

    if [:city, :state].any? { |k| your_hash.key?(k) }
      # do stuff

Can put that logic in separate methods so it's not as gross looking.
    ",1533858029.0
skyksandr,"One thing - you can live without database cleaner in RoR 5.2, just enable transactional tests. ",1534023488.0
andyw8,"> FactoryBot is a rewrite of older gem with the name FactoryGirl 

It's not a re-write, it was just renamed.

https://robots.thoughtbot.com/factory_bot",1534080979.0
equivalent8,"wrote this for a friend who is just learning Rails, Posting here so that maybe someone will  finds this useful too ;) ",1533847273.0
seugorilla,"Just one tip, you can use rails instead rake in Rails 5. I myself dont even use rake anymore",1534045995.0
schneems,"If you're doing lots of calculations it's worth understanding how ""floating point"" numbers work http://fabiensanglard.net/floating_point_visually_explained/.

You can use BigDecimal to help solve some of the precision issues https://floating-point-gui.de/languages/ruby/.
",1533841554.0
midasgoldentouch,"You can, it'll preform the calculation correctly.",1533836803.0
derrickcope,Seems like it would be faster to just use a calculator though. It's just foil multiplication.,1534378514.0
adm7373,Cool! Love that it works with JS-rendered sites.,1533846148.0
xenilko,Could I use this to take screenshots of websites or its a bit out of the scope?,1533856770.0
ignurant,Hey! Thanks for sharing! I'm looking forward to contributing to this. I've been writing a lot of our own framework internally and have been thinking about this a lot. Recently I was forced to pick up Python because the full Scrapy framework was too compelling to pass on. I've been miserable!!!,1533857143.0
polarpress,Why not just use selenium webdriver with headless chrome ?  It takes care of JavaScript and it's using real browser. It can do all the scraping you need.  ,1533879121.0
waffle_ss,"Looks great - definitely the first serious Ruby scraping framework I've seen that can even hold a candle to scrapy.

I see you mentioned scrapy several times in the docs - was there a reason you created this instead of just using scrapy?",1533867340.0
PM_ME_YOUR_HOG_PLZ,Awesome. Thank you!,1533850063.0
ignurant,What is the name inspired from?,1533857542.0
moodyano,It was very weird having a great scripting language like ruby without its scraping framework . Great effort ,1533930699.0
honeyryderchuck,"Nice! There's also [https://github.com/cchandler/certificate\_authority](https://github.com/cchandler/certificate_authority) , which I've been using for the same goal, even if I'm running master branch, as a new version has been long overdue...",1533824638.0
Sqeaky,"I think this article misses some stuff.

In a more statically typed language, like Java, DI containers or hard-coded constants are the only real choices. In Ruby it's trivial to just pass a class in, because everything is dynamically dispatched.",1533816627.0
samrapdev,"As someone new to Ruby, what is the most common practice you see in production code? Coming from PHP (Laravel/Symfony), I find it hard to imagine a scenario where dependency injection is not used frequently in a code base. Indeed, the very core of OO software design relies on concepts like dependency injection/object composition. Is it really considered good practice in Ruby to ditch these concepts for the sake of less boilerplate? If so, why?",1533835384.0
realntl,"A useful introduction to the concept, particularly for rubyists who haven't been exposed to dependency inversion.

Eventide uses an approach similar to the ""hybrid"" approach discussed in the article: http://docs.eventide-project.org/user-guide/useful-objects.html

We have enjoyed all the benefits of being able to control dependencies, without needing a container object to instantiate classes.",1533820288.0
kmaicher,Perfect!,1533823604.0
LLIyriK,"What happen if you try to

`expect(page.has_css?(""input"")).to be == true`

If this length return, looks like ""which one, cuz i see 3"" - it' s ok

then you can

`expect(page.has_css?('#id1')).to be== true`",1533811654.0
RightWinger,"The element has to be visible for set() to work. Does clicking the Span label set the button? If yes, then try clicking the label. 

Can you actually see the button in the browser? The opacity in the style is set tp 0% on all radio buttons.

You can also ask on the Google group - https://groups.google.com/forum/m/#!forum/watir-general",1533890838.0
Blimey85,People will downvote anything. ,1533922065.0
isis_detection_dog,"Nice try, ISIS.",1533813889.0
ioquatix,"You need to share the full code example, but it looks like you are defining your methods `human` and `ai` as instance methods, but your loop is at the class scope.",1533773254.0
keyslemur,"The types of things I can do with this, especially for later versions of Qo, will be amazing. Get ready for some fun in v0.6.0 once I stabilize the idea!",1533769616.0
faitswulff,"Neat trick! At first I wasn't impressed because I mixed up `Procs` and `Structs` - specifically, I thought that you could just call `#to_h` on a `Proc` like you can with a `Struct`. Then I realized I was an idiot and it's far too early in my timezone to be programming.

That said, my ruby tip is that I recently learned that structs are a lot like hashes, and hashes can be treated as procs. So `#destructure` could be:

    def destructure(target, &fn)
      values = fn.parameters.map { |param| target[param.last] }
      fn.call(*values)
    end

You can also use structs like procs by converting them to hashes with `#to_h`, and hashes respond to `#to_proc` (_I knew there was some sort of connection!_) so `#destructure` could be:

    def destructure(target, &fn)
      values = fn.parameters.map(:last).map(&target.to_h)
      fn.call(*values)
    end

As one wise person once said:

> You can't fool me! It's typecasting all the way down!

Anyway, sorry for the tangent, and good tip!",1533814378.0
terrcin,"That's awesome, thanks!

Glad I now know about [Qo](https://github.com/baweaver/qo) and also after following links in that repo the [ruby version](https://github.com/lazebny/ramda-ruby) of [Ramda.JS](https://ramdajs.com/docs/#)",1533791948.0
adr_20,do you need to know this kind of stuff to get job as ruby developer?,1533845652.0
andyw8,"It might be ‚Äì but you shouldn't worry about it. Write whatever results in clearer, more maintainable code.

As the famous quote from Donald Knuth says, ""premature optimization is the root of all evil"". http://wiki.c2.com/?PrematureOptimization",1533768648.0
moomaka,"In C / C++ a switch statement can often times be compiled to a branchless jump table which _usually_ has performance benefits. 

Ruby's switch statement is much more advanced, I'd be really surprised if there was any performance benefit at all. I guess in theory a JIT could optimize _some_ switch statements into jump tables but I'd bet it's rare. 
 ",1533768899.0
moomaka,"> However, if there was a service out there that I could upload our data and the data model to and it would build an interactive backend (somehow) for accessing that data, that might also be a good solution -- this solution only needs to be read only.

That exists, it's called a Business Intelligence tool. In general they either kinda suck to work with (BIRT, Jasper, Pentaho) or are expensive (Looker). 

Given that you probably have little data, I'd just build a few CSV/XLS spreadsheets each night and save them on S3. Give your partner links to these files somehow so he can download them and use Excel to get to the data he needs. You can try the google doc approach but I've found their API pretty flaky when sending anything more than a trivial amount of data. ",1533770833.0
owensdev,"Blazer might work for you. It's solid.

[https://github.com/ankane/blazer](https://github.com/ankane/blazer)",1533806762.0
Draglung,What about a real bare bones web ui?,1533768573.0
intentions_are_high,You can check out Redash. It‚Äôs a nice tool that lets you write SQL queries and save them and then you run them daily or on demand. You can also visualize data as well. I believe you can export. ,1533783607.0
mperham,"There are lots of business analysts in the world who can't write a line of ""code"" but have taught themselves SQL.  I've been amazed at how quickly a non-technical person can teach themselves if they have access to the data.

https://www.sequelpro.com/",1533832149.0
manlymatt83,"I was able to find this which will work well:

https://tabler.github.io

Now I'm trying to decide how to best implement. I'm thinking of using jekyll locally, with a bootstrap script that:

 * Downloads generated JSON files from s3 and places them in the _data directory
 * Runs jekyll serve

This way, the data never leaves my business partner's laptop, and I don't have to worry about (web) security and/or automation. I'd like to avoid querying the database directory, as I have models within Ruby to work with that already structure the data well. Lots of .to_json will work just fine.

Thoughts on this?",1534030115.0
akira410,"Oh, wow, It has probably been 10-12 years since I've thought about Tk. ",1533777094.0
ylluminate,"You know, something that could be interesting is [integrating Ruby support](https://github.com/stepan-mitkin/drakon_editor/issues/26) into the [DRAKON Editor (src)](https://github.com/stepan-mitkin/drakon_editor): http://drakon-editor.sourceforge.net/",1533841236.0
rb_me,"There are Ruby Gems that can read and write to Excel files. Examples:   roo-xls  and  Spreadsheet\_Architect

There are many others.

[https://rubygems.org/search?utf8=%E2%9C%93&query=xls](https://rubygems.org/search?utf8=%E2%9C%93&query=xls)",1533749038.0
LemonAndroid,Cloudxls (saas),1533756831.0
idiabetic,"My advice is use Python with the Pandas library. 

It's built exactly for these kinds of things and will make your life so much easier. And if you don't know python you get to learn something new!",1533757808.0
slendermann29,"Have look [here](https://spin.atomicobject.com/2017/03/22/parsing-excel-files-ruby/) for options. It sort of seems that is impossible to use one gem that can operate on xls/xslx files. Not that i strongly reccomend it, but where i work we used  the one called spreadsheet on multiple projects, and it was quite easy.",1533762152.0
VeryGoodGoodGood,"I use rubyXL for all excel sheet processing in tiny, you could try it out. ",1533762872.0
augustaugust,HTH: https://en.wikipedia.org/wiki/Packing_problems,1533745181.0
slendermann29,"[Here](https://gist.github.com/remuspoienar/35dd7341f3990fab8305f0de37b2b3c6) is how i did it. Of course i tried to make it as clear as possible, this is not very performant(for now). Also algorithms is not something that i master. Let me know if there's anything unclear",1533761423.0
jmcharnes,Congrats! I'm excited to see how 2.0 shapes up.,1533742318.0
jodosha,"Switch to RSpec, deprecations, minor enhancements, and bug fixes. This will be the final minor version before 2.0.",1533734201.0
pinkyabuse,"> because we want to offer what we thing it's the best experience

I think ""thing it's"" should be ""think is"". ",1533765546.0
tomthecool,"> Is it bad to code without using classes?

For small and simple scripts, it may be fine.

But for anything non-trivial, I imagine this would get very messy, very quickly.

> Is it bad that I don't use classes and don't even know what a class is?

That depends what you mean by ""bad"", and the context of what the code is for.

If you're just writing a few little scripts for personal use, then - while I would still *strongly recommend* learning about classes - it may be OK not to bother.

If the code is slightly bigger, it will get messy and confusing to not build it with a clean structure (e.g. with classes) - so it's ""bad"" in the sense that you're wasting your own time, spending far longer trying to build/maintain the code than you need to be.

And if this code is being used by *other people* (especially if you're getting paid to write it), then it's even more ""bad"" to do a sloppy job with the code structure.

So to summarise, I would say:

* It's bad for your own education/knowledge to not learn all the language fundamentals.
* It's bad for your own productivity to write poorly structured code (but I cannot really comment on how good your code is without seeing it!)
* It's bad for your career if you're getting paid to write sloppy code (but I don't know if you're a professional, and don't know how sloppy the code is without seeing it!)",1533732530.0
bigfig,"Is it bad?  I'll put it this way, it is likely that your code could be easier to understand and maintain if prudent use were made of of classes.  Object oriented thinking is more top down than functional thinking.

Okay, a conceptual exercise that I liked more than the old example of class Animal, subclass dog, method bark etc.  Lets say you were writing CAD software and you wanted to model the lighting.  You could have a function that takes a parameter of efficiency, that returns Lumens when fed a certain current (as another parameter), *or* you could model that using a Light class, which becomes a certain type of light when you create it, this light class could contain an entire spectrum curve defined with in it so it mimics an incandescent or an LED of a certain color temperature when you turn it on or hook it up to a dimmer.  Classes make that type of stuff a lot easier.
",1533782072.0
Mistr25,Well IMO it would show that you dont know that much about programming.. Do you use at least modules?,1533728844.0
leaning7,Well it would depend on what you‚Äôre coding. I think for small scripts that‚Äôs fine.,1533732044.0
Tomarse,"There is a style of programming, called functional programming, that is pretty much classless. But ruby is possibly the most object oriented language there is, so it would seem a bit strange to write something other than OOP.

Classes really aren't that complicated, and are super useful. I would just take the leap and try them out.",1533816350.0
derrickcope,"If your script is under a couple hundred loc, then you don't need OO but it is something that you might want to practice.",1534163036.0
sshaw_,"> Is it bad to code without using classes?

No!

Is it bad to write _Ruby_ code without classes? Possibly. 

Classes are one of the key features of the language. If you're doing stuff like this in large quantities: 

    def user_disable(user)
    end

    def user_unfriend(user, friend)
    end
 
Then I'd look into classes. 
",1533764556.0
skulifh,"Yes, we are using it on production and transitioned from Carrierwave. It has been a smooth transition overall. We connect it to Amazon S3 so all of our images and files are now stored there. The biggest advantage compared to Carrierwave, other than being really easy to host on other server for example Amazon, is that you don't need to define smaller or cropped images beforehand, just do it whenever you need a smaller image or whatever and Active Storage will just generate a new thumbnail when the first request for a particular image is received. There are of course many other advantages to it that I'm simply forgetting right now.

The biggest disappointment with Active Storage is that the documentation is not that great, however that may have been fixed since we were scratching our heads a few months back.

The biggest difficulty really was just migrating data. We were hosting all the files on the same server as the rails server so our file management was very poor overall. Active Storage really made us just overhaul our entire file management and we couldn't be happier with the results :) 

Another one was the generated links. Active Storage generates links on the fly for the images/files since they are hosted on Amazon or wherever and figuring out how that works was a small headache. But after we figured it out we haven't had a major problem.",1533725877.0
ralampay,We have a 2 year old apo that we just migrated from paperclip to activestorage connected to s3. Pretty simple procedure. 1 day effort. ,1533725348.0
atipugin,I don‚Äôt see any reason to migrate from carrierwave. ,1533741752.0
stanislavb,"Personally, I think I will stick around Paperclip for a bit more.",1533773434.0
manys,Is anybody converting the changelogs into a form that's a bit more accessible (less clicky)?,1533752508.0
Nemya_Nation,Does anyone pay people to keep updating Rails or is it just through donations?,1533730403.0
geraldbauer,"Hello, I've updated the [csvpack (*) library / gem](https://github.com/csv11/csvpack) that let's you work with tabular data packages in ruby. Download comma-separated values (CSV) datafiles in text - also known as tabular datafiles and read into any sql database (e.g. SQLite, PostgreSQL, ...), query w/ ActiveRecord and more. Cheers. Prost.  

PS: You can find 100+ (starter) tabular data packages at the [/datasets github org](https://github.com/datasets) (thanks to the DataHub.io folks). 

(*): formerly known as datapak",1533716870.0
slendermann29,"you could also use the Object#to\_b method from the **wannabe\_bool** gem, e.g you're not in a Rails project",1533762794.0
simon_jester_jr,"you can also use the excellent string extension from [coderwall](https://coderwall.com/p/atyfyq/ruby-string-to-boolean)

    class String
      def to_bool
        return true if self == true || self =~ (/(true|t|yes|on|y|1)$/i)
        return false if self == false || self.blank? || self =~ (/(false|f|no|off|n|0)$/i)
        raise ArgumentError.new(""invalid value for Boolean: \""#{self}\"""") .   
      end
    end",1533792428.0
max_hogan,"I agree that InheritedResource was a nice idea in concept but it always rubbed me the wrong way in practice. Seeing controller actions defined, even though they were the same, sent me a signal that specific actions were implemented at the controller level. Heck, most of the code should have been scaffolded anyways, right? It was just a little bit to much obfuscated magic for me. I would rather just see the functions implemented. Overall, I think it was trying to solve a problem with good intensions but other options solved it better (scaffolding).

Ransack... is a great. I've worked in a few production environments that have used it. Some have used it in a responsible way and some have abused it (thus, painting ourselves in a few corners at times). But you can get a lot of milage out of Ransack.",1533650589.0
banister,`obj.singleton_class.include(M)` is equivalent to `object.extend(M)`,1533661333.0
sshaw_,"Also see the anti-pattern, [Call super](https://en.wikipedia.org/wiki/Call_super). ",1533679611.0
toadkicker,Ok,1533641001.0
GroceryBagHead,And here I was trying to figure out how to do a `INNER JOIN` for 2 different REST endpoints. Thanks guy!,1533645225.0
ioutaik,You obviously never worked with salesforce ,1533659895.0
DerNalia,JSONAPI.org provides everything graphql does (except for type checking) :),1533646751.0
llN3M3515ll,"Well shoot, you mean all I had to do this whole time was use a database for a datastore and not a REST API?",1533648612.0
schneems,"Please don‚Äôt use ‚Äúguys‚Äù to refer to a mixed gender group.

I‚Äôm aware you meant no offense, I know that you know women who do it, and I get that you were told it is okay.  If I asked you to ‚Äúname five famous guys‚Äù, how many of them would be women?
",1533645688.0
samrapdev,"PHP developer for 4 years learning Ruby/Rails for the last couple of months. I'm only a couple pages into this, but it's seriously amazing work. Your description of the PHP ecosystem and objective approach to comparing the two are seriously refreshing. Really excited to dive into this. Thanks for your hard work!",1533754852.0
joelbluminator,"Nice initiative, well done mate",1533813122.0
dcarrasay,"Nice article. LOVE all comparisons between anonymous functions, lambdas etc.",1533826973.0
nicoinwonderland,"Currently working on a rails app to handle bill splitting with my friends. I've been doing it via spreadsheets for a few years now. 

To help you understand what I want from this, my spreadsheets look something like this right now

https://imgur.com/a/vO57ceR

Names were removed.

I'd like to be able to do something to this effect with this app.",1533590319.0
Sys_man,"Making a script which navigates to some web pages, downloads some csvs (which are all in different formats) and then inputs the data from those csvs in to a MySql table. 

Saving the users quite a bit of time in doing so, so that's good. 
",1533595495.0
das-412,"Getting ready to launch an app extension that handles employee time off requests, with admin mgmt of requests, hours accounting, and Google Calendar API tie-in. ",1533595797.0
k_pizzle,I am working on a maintenance tracker app for a local ride share company so they can log and track repairs and issues with their vehicles. My first project as a dev after graduating from a bootcamp 2 months ago! ,1533598313.0
rb_me,Learning Ruby on Codecademy,1533664888.0
derrickcope,I am in the planning phase for a Project Euler style RoR website in Chinese.,1533618471.0
BadMinotaur,"I will echo my support of this idea, I really like a place to talk about what we're up to.

I was recently part of a game jam that focused on using RPG Maker engines. So I'm taking a small break from my never-ending quest to embed Ruby in a Windows EXE to write a few tools I can use for rapid development with RPG Maker VX Ace, which uses Ruby 1.9.3. The pie-in-the-sky hope is that I'll be able to release it to help other game jammers, but for now I'll settle with just making my own development easier.",1533628748.0
lafeber,"* Final month of developing in Spree, it's being replaced by Demandware. Not my choice, I suggested Shopify but the Demandware salespeople were really nice apparently :-)
* Huge backend application for hiring and planning candidates
* Small Trello-like Rails backend with react frontend",1533635259.0
Mistr25,Right now updating cucumber for fedora to support cucumber-expressions for my jekyll plugin that I wrote for fedora dev portal which I will also work on this month,1533645633.0
jamatthews,At work (ChartMogul) Priority Queue/Subqueue extension to Sidekiq which is likely to be open sourced,1533646883.0
strzibny,"At work I am working on Elasticsearch-based search, now trying to index all documents we have on production (customer after customer). It takes some time since the first index also OCR's document files with Tesseract.

At home I am converting my side project for language tandems (www.gettandem.com) to Bulma. There is still some work to do and I hope to improve on the design part too. I never used Bulma before and I though I should give it a go on something real!",1533653523.0
jjyr,"I'm working on a blockchain project, trying to implement Ethereum in Ruby, get passed the Ethereum tests yesterday. https://github.com/ciri-ethereum/ciri
Does anyone have interesting in this idea?",1533707701.0
rabidferret,"> A lot of the issues come from the fact that the ActiveRecord API is very messy and inconsistent at times. For example, size, length and count are functionally all equivalent in that they retrieve the number of elements in a set of records. However, their implementation and therefore performance characteristics are very different.

That's rather the point, and doesn't really mean that they're bloat. It means they're meant to be used in different circumstances. `size` is probably what you want most of the time. `length` is useful when you know that you're going to be loading the records later (e.g. `Displaying N results` as a header above the list). `count` is probably the most niche, but especially when dealing with associations there are cases where you know the records in the database differ from what you have in memory, and `.reload.size` is wasteful. `count` is also used to do queries *other* than `count(*)`.

I'm not sure how 3 methods which give the same result but are for vastly different purposes constitutes bloat.",1533645052.0
this_is_not_nil,I feel like this should be a Rails standard and also be a configurable.,1533666014.0
pdabrowski,Github repo: [https://github.com/rubyhero/rubyflow](https://github.com/rubyhero/rubyflow),1533543978.0
hornet2359,Can‚Äôt wait to try this out!,1533602641.0
Enumerable_any,"Good call on replacing `:*` with `Any`, this probably prevents some corner-cases. Personally I would prevent values with special meaning altogether and provide a catch-all function which simply wraps `-> (_) { true }`. `Any` is good enough, though.

    Qo.m(Any) # Identity function, catch-all

This isn't really an identity function, because its type is roughly `a -> Bool` and not `a -> a`. [Tautology](https://en.wikipedia.org/wiki/Tautology_(logic\)) seems to be a better name.",1533557963.0
keyslemur,"Qo v0.4.0 released!

Changes:

* Wildcard replaced with the Any gem: https://github.com/baweaver/any
* New logo

Example:

    Qo[:*, :*] === [1, 1]
    Qo[name: :*] === {id: 1, name: 'foo'}

now becomes

    Qo[Any, Any] === [1, 1]
    Qo[name: Any] === {id: 1, name: 'foo'}

Going to attempt to reconcile against the Array and Hash === proposals in core at the moment:

    [Any, Any] === [1, 1]
    {name: Any} === {id: 1, name: 'foo'}

Expect more releases in the near future as we approach a solid v1 api. I will try and emulate the path of 2.6 as much as possible depending on future releases.

- baweaver",1533532386.0
ksec,Um... What are the chances this get adopted officially into Ruby? ,1533547807.0
stanislavb,"Good job, mate! I hope it gets adopted. It opens the door for even more elegant code.",1533723100.0
andyw8,"`let` is typically used to remove duplication in a spec file. It can hold a value so you don't need to repeatedly define it across multiple examples.

Based on your code above, you *could* do something like this:

    describe Fruit do
      let(:banana) { Fruit.new(""banana"", ""yellow"") }
      
      describe ""#fruit_info"" do
        it ""returns info about the fruit's name"" do
          expect(banana.fruit_info).to include(""This fruit is called an banana"")
        end

        it ""returns info about the fruit's color"" do
          expect(banana.fruit_info).to include(""the color is yellow"")
        end
      end
    end


However, over-using `let` can also make your tests less readable. Here's a couple of posts which advocate against it:

* https://robots.thoughtbot.com/my-issues-with-let
* https://robots.thoughtbot.com/lets-not",1533512485.0
ezekielriva,"Hi there, \`let\` statement in RSpec tests is a way to assign values to a variable and share it across the context/description block. Avoiding some issues in your code and removing the \`puts\` keyword you could write a test like this: 

    describe Fruit do
        let(:name) { 'Orange' }
        let(:color) { 'Orange' }
    
        it 'returns fruit info' do
            fruit = described_class.new(name, color) # You can use name and color here!
            expect(fruit.fruit_info(name)).to eql ""This fruit is called an Orange and the color is Orange!""
        end
    
        it 'returns wrong fruit info' do
            fruit = described_class.new('Apple', color) # you also can use color here!
        end
    end",1533512992.0
willnguyen_,"Hi there,

Below comment, they explained to you. \`let\` is for sharing variables. But why? Because the variables declared by \`let\` just have values if we \`use them\` in the context. It's like lazy loading. Hence, with \`let\` we can share the context but still save memory.",1533525276.0
willnguyen_,"Hi there,

Inheritance vs Composition. We can use class and module to refer. Inheritance is for sharing the assets from the parent. We should know the main idea from this design. That is **decoupling code**. Looking at the application, design is nothing except so many messages that classes are the visible presentations. Each class will have the knowledge of the other classes. We call it dependencies. It's easy to see that if these classes have too much knowledges of the others, it means each one has a ton of dependencies - connections. That makes it difficult for devs to maintain and evolve the system. A well-design will embrace the changes, making the less cost for changes. Hence, we try to decouple classes, modules, methods. Inheritance and Composition appear to solve this matter. Now, when you design a new class, if you can, separate the code you think that it will be changed regularly from another which is certain, less change. So, you recognised them, where do we put the changeable code? The less changeable code should be at the parent - Inheritance. If you think that several methods don't actually depend on the instance of class and they can be used for other instance of other class as well, you can put them to modules to share code. You will get DRY in design pattern.",1533526817.0
_jonah,I can give you a better answer if you flesh out your example a bit.  What methods does the Fruit class have?  What methods do the subclasses have?  How are they using their parent's methods?,1533618256.0
nfilzi,"Hi there,  
I'd recommend you to watch [this talk](https://www.youtube.com/watch?v=9lv2lBq6x4A) Sandi gave at BathRuby in 2015.   
There is a crystal-clear explanation, in the code, of how she see composition, and how to use it to decouple classes from implementation details.  


Cheers!",1534503024.0
jrochkind,"If you are talking about using modules as mix-ins with `include` (or `extend`) -- no, that's still inheritance. 

I think the ""fruit"" example may not be a great one; it's not particularly realistic (we don't generally model fruit), and to the extent it is an analogy to something we do, it actually might be a good use for inheritance. 

What I've seen Metz say is not actually to avoid inheritance, but to use inheritance only in the limited circumstance it is appropriate. 

Usually in this discussion (from Metz or other places), inheritance is contrasted with ""composition"".  Rather than ""a functional approach.""  Does Metz actually discuss inheritance as opposed to ""a functional approach""?  I'd be curious to read that myself, can you tell me where so I can review it?

Where did you see Metz say this?  Does she provide examples and guidance herself there?   I think you might be best served by going back to POODR, as you say. ",1533643937.0
keyslemur,"Why? Well because pattern matching is gaining a ton of traction, and we need a good solid wildcard. This solves the issue cleanly by giving a short clear term for it, ala Scala.

Credit due to Soffes for being willing to transfer over the gem name as well, this is a huge win!

In the README, with 2.6+ assuming the two `Hash#===` and `Array#===` branches get merged, we could do this:

    case ['Foo', 25]
    when [/^F/, Any] then true
    else false
    end
    # => true
    
    case {id: 1, name: 'foo', age: 42}
    when {id: Any, name: /^f/, age: Any} then true
    else false
    end
    # => true
    
    case {id: 1, name: 'foo'}
    when {id: Any, name: /^f/, age: Any} then true
    else false
    end
    # => false

...and that's pretty danged slick. For now, Qo will let us do (most) of the same:

    require 'qo' # gem install qo @ v0.3.0
    
    case ['Foo', 25]
    when Qo[/^F/, Any] then true
    else false
    end
    # => true
    
    case {id: 1, name: 'foo', age: 42}
    when Qo[id: Any, name: /^f/, age: Any] then true
    else false
    end
    # => true
    
    case {id: 1, name: 'foo'}
    when Qo[id: Any, name: /^f/, age: Any] then true
    else false
    end
    # => false

( Also black magic is back in season folks, brace yourselves :D )",1533510379.0
Slimy_Hog,"A command line application that reads a yaml file, opens applications and positions them on the screen based on the values in the yaml file. ",1533512964.0
tk425,Do you play DND?,1533523216.0
,"Create an application which allows you to draw pictures, write notes and use various colors to flesh out ideas for projects, kind of like an online white board. ",1533526431.0
zverok_kha,"I have made this list of potential projects once, maybe could be useful: https://github.com/zverok/lmsa",1533547199.0
petercooper,"> You can learn how to build a Rubyflow.com clone. Because of that, I may not be mentioned in the Ruby Weekly anymore if Peter Cooper will not like it but the show must go on!

Haha, no problem, keep up the good work :-)",1533502060.0
tortoise888,Just a small criticism.  The looping gifs are really distracting when trying to read the text content.,1533511812.0
CaptainKabob,I love it! Does your blog have an RSS feed? ,1533530928.0
manys,"I'm sorry, but what does this have to do with Ruby programming?",1533499158.0
raubarede,"sum in one line ? :

   sum=\[n, s, e, o, n+1, n-1, s-1, s+1\].reduce(0) {|sum,index| sum+=board\[index\]||0 }",1533490907.0
d4be4st,Hatchbox is not 15$/m because you have to pay for your own servers...,1533460680.0
ksec,"Hatchbox helps, but it still isn't anywhere close to Heroko. I have been wondering why Heroko is so expensive at the mid to higher end. Its strategy seems to be free to try, very inexpensive at the starting point, but charges you lots of money ones you start to grow.

DO Pricing with Heroku ease of use would be the ideal solution. ",1533467954.0
joshmn,"Article doesn't mention Cloud66, which is also very fun to play with and is similar to Hatchbox. It's not as inexpensive as Hatchbox, but it also does quite a bit more. Not to say that Hatchbox is bad (I love it); Cloud66 is merely a very mature, venture-backed product.",1533491142.0
jdickey,"As with most Medium links in this sub, unfortunately, this is an advert (for Hatchbox, in this case).

Part of my job is to evaluate hosting/VPS providers twice a year (at least a half-dozen the last three times), to see what our options are as we grow and as our then-current provider's platform evolves over time. I'd never heard of Hatchbox before this and, regardless of their technical merits, this post gives me little motivation to even investigate them further.",1533531195.0
keyslemur,"Alo alo. Gave a conference talk today, and had a lot of people ask what my process was for creating an illustrated presentation.

I hope to have a video of the talk soon, but in the mean time I've put several preview images from the talk in the article to give you a sneak peak.

Enjoy!",1533356574.0
internethostage,Excellent!,1533429531.0
laerien,"Consider trying to DRY it up. A little metaprogramming might help.

    method_and_arg = case @sort
    when 'count'
      [:order, 'cells_count DESC']
    when 'hot'
      [:order_by_hot]
    when 'views'
      [:order, 'views_count DESC']
    when 'rating'
      [:order, 'wilson_lower_bound DESC']
    else
      [:order, 'created_at DESC']
    end

    query.public_send *method_and_arg

You could simplify it further if you can change :order_by_hot to be :order with args as well.",1533339164.0
in0pinatus,"I'd usually do this more compositionally, e.g.
 
    module Ordering
      extend ActiveSupport::Concern

      included do
        class_attribute :orderings, instance_predicate: false, instance_accessor: false, default: {}

        def self.register_ordering key, ordering
          self.orderings = orderings.merge key => ordering
        end

        scope :ordering, -> order {
          case predicate = orderings[order.to_sym]
          when String; order predicate
          when Symbol; merge send predicate
          when Proc; merge predicate
          else ordering :DEFAULT
          end
        }

        register_ordering :rating, 'rating DESC'
        register_ordering :count, 'cells_count DESC'
        register_ordering :views, -> { order 'views_count DESC' }
        register_ordering :DEFAULT, -> { order arel_table[:created_at].desc }
      end
    end

    class MyThing < ApplicationRecord
      include Ordering
      register_ordering :hot, :order_by_hot

      def self.order_by_hot
        order 'name_hot ASC'
      end

Then you write `MyThing.ordering(:rating)`, and `MyThing.where(...whatever...).ordering(""hot"")` also works; includers of `Ordering` can register their own class-specific extras (which get inherited) and can even override `:DEFAULT` if you like.

",1533385283.0
editor_of_the_beast,"I think you‚Äôre playing too much code golf here. Repeating query multiple times has no practical disadvantage, and anything you do is going to make the code less clear. Think about readability first, that leads to the best code.",1533399787.0
laerien,"If it wasn't for the ""order_by_hot"" edgecase, you extract a constant:

    SORT_QUERIES = {'count' => 'cells_count DESC', 'views' => 'views_count DESC', 'rating' => 'wilson_lower_bound DESC'}

Then pass the appropriate argument to the #order method:

    query.public_send :order, SORT_QUERIES[@sort]",1533339486.0
yorickpeterse,"I'm on my phone, but I would probably do this:

1. Define a method for every sort order, on the query object
2. Define a list of methods allowed to be called
3. Use the sort order directly as the method to call, making sure it is in the whitelist from step 2",1533388166.0
blaked84,"Hello! 

I am used to keeping a record of the Ruby tips I learn or I discover on a daily basis on the internet.

Now I want to give back and I created a twitter account where I share everyday a ruby tip. I try to only write simple examples in less than 20 lines, for beginners and experienced developers. 

And it is also a way to force me to keep learning.

I am opened to the suggestions and the contributions üôÇ",1533311289.0
brettu,"Nice. I did this everyday for a year 2013-2014. It was an awesome learning experience.

Softwarehabit.com

Tips: keep it simply, prepare ahead for days off (vacations), chain tips together to make mini-projects, commit to a timeframe (i.e. 100 days). 365 days was a bit much imo.

It would be great to see the tips on Reddit. Then we can vote on and favorite them. 

Good luck and have fun.",1533346033.0
Ronald-Ray-Gun,Followed! I‚Äôm a sucker for random cool features that don‚Äôt need too much setup. It makes it easy to grasp a single tip‚Äôs usefulness. ,1533345182.0
smokiebacon,"Dude, this is awesome! I'm just picking up Ruby and am really enjoying it. Not sure what to make, but I have a question on what Ruby/Rails can do.

You seem like a profficient Rubyist, is the following possible: completely automate printing shipping labels with Ruby? In my day job, I sometimes process shipping labels as an e-commerce assistant and some tasks are extremely repetitive and tedious. Specifically, splitting up orders to be shipped from multiple warehouses.

  


The company I work for uses Shipstation as the shipping software. We've got 4 warehouses in America: California, Texas, New Jersey, and Florida. Sometimes a customers order would need to be split, one shipping from Cali, another from Texas, and the other from Flrodia, for example. I have to create manually create orders by hand, which would take around 2-3 minutes for one order. Now, there might be about 15-50 orders needing to be split everyday. I want to automate the hell out of it! So I imagine ruby would need to interact with Shipstation's API somehow? 

  


Is this possible? Thanks! Meanwhile, I'm going to continue learning Ruby!",1533467607.0
pytyper,"tap is great, basically you can add block syntax to any object.",1533479418.0
brettu,"Maybe every tip shouldn‚Äôt end up in /r/ruby. Maybe your best tip of the week.

Look forward to reading. ",1534118467.0
Morozzzko,"There are a few things I really don't like about this kind of design:

The first one is `self.call`. Why write a stateless service if you still have to instantiate it before every call? I mean, that stuff is pointless.

The second one, validations. We only need to validate data that comes from the outside world. Domain service is not the right place for that",1533332208.0
janko-m,"What a beautiful, gentle introduction to dry-rb. Thank you!",1533328806.0
moomaka,"> Extracting services is one way to keep classes lean and separate business logic from framework code.

    class SendEmail
      extend Dry::Initializer
      option :to
      option :body
      option :emailer, default: -> { MyMailer }
  
      Schema = Dry::Validation.Schema do
        required(:to).value(format?: URI::MailTo::EMAIL_REGEXP)
        required(:body).filled
      end
  
      def self.call(**args)    
        return false unless Schema.call(args).success?
    
        new(**args).call
      end
  
      def call
        emailer.send(to, body)
      end
    end

""We decided our code was too coupled to a framework so we created another framework to couple our code to instead"" (‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ‚îª‚îÅ‚îª ",1533317819.0
Freeky,"Wouldn't stuff like `emailer` and `notifier` be better off `dry-configurable` or `dry-auto_injected` or so?  They don't belong in the same place you send user-provided params.

Having the class and instance level `call` methods is highly dubious IMO.  Saying they provide ""the same interface"" is misleading because only the class-level one does data validation.  It makes much more sense to me to keep the initializer purely for setting up what the service needs to function, and leave `call` just for actually driving it once it's set up.",1533398726.0
janko-m,"`File.open` is the standard initializer for a `File` instance, internally it calls the kernel to create a new file descriptor.

In order to check whether the file exists, or to calculate the basename and extname of a path, or to do all the other functions defined on the `File` class, you don't need to actually open the file. That's probably why there are no `File` instance methods.

Also, note that a path on the disk doesn't necessarily have to be a file, it can also be a UNIX socket, for which you'd have to use the `Socket` class.

However, Ruby has a class that should answer your prayers ‚Äì `Pathname`. It allows you to initialize the object with a path, and provides instance methods that delegate to `File` or `FileUtils` methods.

    require ""pathname""

    pathname = Pathname.new(""/path/to/file.ext"")

    pathname.open # retruns an opened `File` instance
    pathname.exists? #=> true
    pathname.basename #=> ""file.ext""
    pathname.extname #=> "".ext""
    pathname.size #=> 4813",1533292324.0
sepp2k,"You're supposed to call `File.exist?` with a file name, not a file object.

The fact that `File.exists?(file)` even works in your code is more or less an accident (`File.exist?` uses `rb_stat`, which works with both file names and file handles). Using `File.exists?` with a file object will never return false, so it is not a useful check.

If you open a non-existing file in read mode, you get an exception (so the call to `File.exist?` won't even execute). If you open it in write mode, the file will be created (so `File.exist?` still returns true).

In consequence, `File#exists?` does not exist because a method that only ever returns true would not be useful.",1533297875.0
skinsinc,"Which is really annoying when you're trying to google about using those annotations in html code.
",1533287673.0
moomaka,"In case anyone was wondering, this isn't connected to the name of the programming language. It was named after Perl (also a gemstone) as Ruby was targeted at being the successor to Perl. Ruby was also the birthstone of one of Matz' colleague's. The Ruby the programming language is much older than Ruby markup in HTML, though I think the use of 'Ruby' in typography is much older. ",1533299571.0
derrickcope,"Interesting. I wonder why they called it Ruby. Also, the examples were for Japan and Taiwan but there was no example for pinyin for mainland China.",1533288012.0
JohnBooty,"Haha yeah. I remember my heart racing years ago when I read that Firefox was ""adding ruby support.""

I thought Ruby was about to become a first-class language on the web! Oh, the disappointment. =)",1533308736.0
kidtaicho,"To highlight some aspects from the Japanese perspective, those characters are generally referred to as furigana and the word ruby („É´„Éì„Éº) would more likely be associated with the gemstone as it is in English. ",1533306512.0
postmodern,"In Ruby you typically avoid `get_` / `set_` names, and instead use `attr_accessor :foo` (where `foo` is usually a noun), which defines `foo` and `foo=` methods. When you are working with data inside your class, you can either directly access the instance variables (`@foo` and `@foo = ...`) or use the methods (`self.foo` and `self.foo = ...`). You can even manually define the ""reader"" (ex: `def foo`) / ""writer"" (ex: `def foo=(new_foo)`) methods if you need to add custom logic to them.",1533260350.0
,[deleted],1533258855.0
jawdirk,"I've been professionally developing ruby for a long time, and here are my recommendations, for the cleanest classes:

1. Use attr_readers only most of the time. Don't use setters on a class; pass everything that you need for the class in through def initialize.
2. Don't use instance variables anywhere in a class except in def initialize, unless you have a value that is truly private to the class and nobody should care about it externally. Even then, it's a code smell. Instead, use your own attr_readers.
3. Avoid imperative programming as much as possible. For example:

Instead of:

    def build_widget4
      @widget1 = build_widget1
      @widget2 = build_widget2
      @widget3 = build_widget3(@widget1, @widget2)
      @widget4 = wrap_in_a_bow(@widget3)
    end

Code it like this:

    def widget4
      @widget4 ||= wrap_in_a_bow(widget3)
    end
    
    def widget3
      @widget3 ||= widget1.combine_with(widget2)
    end

You never know when you'll want to replace an instance variable with a method. Methods should not be messing with instance variables that affect other methods unless it's unavoidable. Even worse than that, is letting other classes mess with instance variables that affect your methods using its accessors.",1533263526.0
jdickey,"The problem with getters and setters is that they lead to procedural, spaghetti-like code. [_Tell, Don't Ask_](https://www.martinfowler.com/bliki/TellDontAsk.html), along with [SOLID](https://en.wikipedia.org/wiki/SOLID), _will_ save your bacon if you adapt your thinking and use them well.

In our shop, `attr_writer`s and `attr_accessor`s now cause a Git commit to fail, and publicly visible `attr_reader`s are seen as a code smell; not a bug _per se_, but likely to lead to code that's harder to understand and maintain than it needs to be. Objects should _do_ something, and return data from the method called to do whatever it is that object does. (Yes, that implies that minimising the number of public methods on an object that does something, as opposed to records something (e.g., a data transfer object) is also a Good Thing.)

Read up on Clean Architecture after you've grokked POODR a bit more. 

To the point of your toy project: I'd probably encourage a junior I had working through an exercise like that to read the CSV data into a Hash-like data structure that is used as a _read-only_ [data transfer object](https://martinfowler.com/eaaCatalog/dataTransferObject.html) (marked and thought of as private to your API, and allowable because it's both immutable and logic-less), with your query class exposing methods for `count`, `find` (to query a single type of fruit), `fruits` (returning a list of the available fruits), and so on. This would let you write client code like 

    Fruity.new('fruits.yml').find('apple').count

to find how many apples you have, or

    fruity = Fruity.new('fruits.yml')
    fruity.find('grape').map(&:color).uniq

to find a list of all the colors of grapes you have.

Does this make sense? It's a _lot_ for a new dev to take in; don't be discouraged! Just take it a step at a time and see where you get. Your first question: ""what is a 'fruit'?"" üòÄ

Good luck!",1533269675.0
Inityx,https://mixandgo.com/learn/ruby_attr_accessor_attr_reader_attr_writer,1533258800.0
lordmyd,Yes. They're not necessary.,1533413818.0
mphoyu,"Ruby is a fully (really fully as you will soon find out) object oriented language.
So wether accessors are bad practice or not is more a question for OOP design more than ruby itself.

If you wish to read about this here are useful links:

https://www.yegor256.com/2014/09/16/getters-and-setters-are-evil.amp.html

https://www.javaworld.com/article/2073723/core-java/why-getter-and-setter-methods-are-evil.amp.html

But don‚Äôt let them scare you, they are a legal part of the OOP design. Just use them wisely.",1533260283.0
editor_of_the_beast,They pretty much are bad yea. It‚Äôs a way to get around true OO. Avoid them.,1533297349.0
Scamify,"Keith, I see you have no intention of replying or refunding the proceeds from your illegal actively so I'll ask you again. You have time to work on this particular project, but not on the countless of others you have taken money for and either not completed or started at all. 

At what stage will you drop the act and openly admit you are nothing more than a common criminal?",1533640830.0
isjhe,"Wtf is going on in this article? Why would you do _any_ of these things? .touch is a leaky abstraction? The author doesn‚Äôt know how to get an ID off of a created model? He is worried about swapping storage engines for some unknown reason? Of course it‚Äôs going to be a big deal to go fro Postgres to Mongo, totally different use cases, different tools. 

This reads like the author does not have experience with running rails apps larger than a toy project. ",1533234573.0
unsignedotter,There is only one [SQL on Rails](https://www.youtube.com/watch?v=0_PK1eDQyVg),1533235622.0
fedekun,So this guy is complaining that he manually inserts database-specific SQL code to his AR models and he then can't just swap databases?,1533237103.0
janko-m,"It seems that the OP should probably be using Sequel instead of ActiveRecord, as it already has the mentioned features.

For the safe updating of the `#updated_at` column via triggers there already exists the [sequel_postgres_triggers](https://github.com/jeremyevans/sequel_postgresql_triggers) gem, so you can create the tigger with just:

    DB.pgt_updated_at(:table_name, :updated_at)

The gem also has a trigger template for creating a counter cache, as mentioned in the post.

About the `RETURNING`, Sequel already automatically adds `RETURNING *` when creating records, which retrieves all column values that were set on insert, which includes default column values on the database level or values set by triggers.

Sequel actually encourages you to use the database (e.g. it has many Postgres-specific functionality), but still allows you not to if you don't want to. So you have the best of both worlds.",1533248763.0
pwim,"Some questions that come to me. Don't feel like you need to answer them, but they might help with thinking through your challenges.

* Are you tracking the success rate of your postings? 
* Are the companies that post to the board hiring people through it? 
* How many candidates do they get? 
* Have you figured out why companies don't renew their posting? 
* Do you renew postings automatically, or do people need to go through the process manually to renew it?
* Do you have the contact information for companies that have posted in the past?
* Have you tried contacting companies who are posting on other job boards? Companies you have a personal connection with?
* Why do you think you need to change the product (e.g. make it more community)?",1533198684.0
virnovus,"https://angel.co

I haven't updated my profile there in a long time, due to an ongoing legal dispute with a former business partner, but the site overall is really good.  Most programmers have experience with multiple languages, so it doesn't make a ton of sense to go to a Ruby-only website.",1533220093.0
joelbluminator,This is mainly for remote and freelance ruby jobs if I understand correctly? ,1533198561.0
ryanlue,"I'm a junior Rails developer (~1yr. formal experience). In the job hunt for my current position, I applied to a lot of of listings on boards like angellist, stackoverflow jobs, remoteok, weworkremotely, whoishiring, jobs.ruby.tw (I'm located in Taiwan), and the like. I put a lot of effort into a relatively small number of high-quality applications, and didn't get a lot of responses. (FWIW, I had never heard of toprubyjobs, though I'm not sure my chances would have been better there, either.) In the end, I wound up finding my current position through someone else's post on /r/rails.

If I had to do it again, I'd probably skip job boards entirely. As a junior developer looking for a remote position, my experience on job boards was time-consuming and mostly fruitless ‚Äî though I'm not sure I'm the kind of candidate that's going to bring companies flocking to your site anyway ;)",1533220137.0
cheeeeeese,hn,1533224488.0
deedubaya,"weworkremotely.com used to be _the_ place to look for a remote ruby job. Since Basecamp sold it, the quality of the jobs there has dropped significantly. There is room in the market there, I think.

I think there is also a niche for a job board which is exclusive to select, verified candidates. Promote quality of applicants instead of quantity. Verifying the quality would be the hardest part, maybe through open source contributions or a coding test? Connection vouching? Idk.

Hiring is broken from both the applicant and employer end. Connecting good employees with good employers is as hard as ever, especially if you're remote.",1533247020.0
remote4me,"Well, I hope non-Rubists are allowed to comment )  
Take look at   
  [https://remote4me.com/remote-ruby-jobs](https://remote4me.com/remote-ruby-jobs)  
This site is an aggregator for remote jobs. There are separate pages for each popular programming language. Some non-tech professions are covered too.  


(yes, I'm the author... blame me... or ask for new features ))

&#x200B;",1541519939.0
Mancinoz,"That's not going to work, assuming you're using the [structured query parser](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/searching-compound-queries.html), Cloudsearch only supports search within bounds.

That's not the reason what you're doing won't work though, the `near` method is a scope on an `ActiveRecord::Relation` added by the `geocoder` gem, and the `search` method is added by `nazrin` to act as a kind of `ActiveRecord::Relation` for Cloudsearch queries, so you're essentially scoping the SQL relation then discarding it and switching to a Cloudsearch relation.

To query within bounds in Cloudsearch you'd need to compose a structured query and pass it to the `query` method chained onto the `nazrin relation`, something like `location_field:['north_lat,west_lng','south_lat,east_lng']` (yes, Cloudsearch uses `NW,SE` bounds, which is weird), i.e. `location:['90,-180','-89.999,179.999']`, I'd suggest using something like the [csquery](https://github.com/marcy/csquery) gem to build the search term you pass to nazrin's `query` method.

P.S. I hate Cloudsearch and don't envy you, good luck!",1533191844.0
cutety,"You'd need to actually include the actual `require` line that's throwing the error (you've only included the traceback) to get a more accurate answer.

But if I had to guess you need to `require ""fileutils""` and not `require ""FileUtils""`. stdlib modules like `FileUtils` are defined in files that named in all lowercase, and require is looking for a filename and not a class name, so you need to use the lowercase version (file name) and not the class name (e.g. `require ""json"" #=> JSON` or `require ""securerandom"" #=> SecureRandom`).

    irb(main):001:0> require ""FileUtils""
    Traceback (most recent call last):
            4: from /usr/local/bin/irb:11:in `<main>'
            3: from (irb):1
            2: from /usr/local/lib/ruby/site_ruby/2.5.0/rubygems/core_ext/kernel_require.rb:59:in `require'
            1: from /usr/local/lib/ruby/site_ruby/2.5.0/rubygems/core_ext/kernel_require.rb:59:in `require'
    LoadError (cannot load such file -- FileUtils)
    irb(main):002:0> require ""fileutils""
    => true",1533155607.0
three18ti,"So what is it? Autocomplete/IDE extensions for ruby? [This is the only thing](https://code.visualstudio.com/docs/extensions/example-language-server) that seemed related when I googled ""language server"".",1533164814.0
number5,"Is the name `Orbacle` mocking Oracle?

(sorry, can't help)",1533186296.0
maratamerov,"Is it possible interact with rails runtime like robe-mode for emacs?
robe-mode can autocomplete and go to definition methods that defined in booting. Under the hood it uses pry-doc and show-source from pry gem.",1533205595.0
Nebs987,If you are using a database like postgres you can do this filtering and sorting inside the database call which is way faster than doing it in ruby.,1533133423.0
parthmodi54,Use postgis if you are using postgres. Making geospatial queries is fast and super easy. Have been using it in production to sort results by nearby place's along with distance in meters and it has been great. ,1533144899.0
fiveguy,"This gem computes the distance between two latitudes/longitudes using the Haversine formula: https://github.com/kristianmandrup/haversine . The gem is old, but so is the formula so I would expect the gem to work...

If I were querying a database for results sorted by distance, one approach would be to would scope the query based on an initial distance from the ""nearby location"" - basically, a box of X miles across/tall which I want results from. Then sort those results by Haversine in Ruby. (Edit: there are gems which do calculations - or at least scoping - in SQL - you might search for those if that interests you)",1533130583.0
hesowcharov,You can use 'geocoder' gem to easily integrate with ActiveRecord ('reverse_geocoded_by' macro method),1533154773.0
Freeky,"Poor benchmark - surely the more interesting question is whether it's any quicker for the success case.  Are you really that limited by how fast you can fail to parse Integers?

             rescue FAIL    275.332k (¬± 0.7%) i/s -      1.386M in   5.033049s
              kwarg FAIL      1.034M (¬± 0.2%) i/s -      5.180M in   5.008666s
    
    Comparison:
              kwarg FAIL:  1034190.2 i/s
             rescue FAIL:   275331.9 i/s - 3.76x  slower

               rescue OK      4.249M (¬± 1.1%) i/s -     21.278M in   5.009007s
                kwarg OK    988.686k (¬± 0.2%) i/s -      5.002M in   5.058963s
    
    Comparison:
               rescue OK:  4248553.6 i/s
                kwarg OK:   988686.2 i/s - 4.30x  slower

It makes the happy-path slower more than it makes the exceptional case faster.",1533127143.0
this_is_not_nil,Are you sharing links like this now to get around some sort of spam filter?,1533126917.0
tinyjacky,"If you mean ""finding positive number closest to zero & negative number closest to zero"":
```
x.select(&:positive?).min
x.select(&:negative?).max
```
(requires ruby 2.3.0 or above)",1533118614.0
pachkovsky,"`x.min { |a, b| a.abs <=> b.abs }`

OR

`x.min_by(&:abs)`",1533119812.0
zitrusgrape,"you can use select, partitition, or even a map",1533115114.0
Scriverry,"    [-6, -2, -1, 3, 5, 7, 12].each_with_object(Hash.new(0)) { |val, hash| hash[val.positive? ? 'positive' : 'negative'] += 1 }
    => {""negative""=>3, ""positive""=>4}

Or quick and dirty

    [-6, -2, -1, 3, 5, 7, 12].group_by(&:positive?)
    => {false=>[-6, -2, -1], true=>[3, 5, 7, 12]}",1533116895.0
grosser,"FYI https://github.com/grosser/single_cov seems very similar ... does not have the fancy inline-code print-out, but seems to overall do the same.",1533141125.0
mperham,Another useful coverage tool is Dan Mayer's Coverband [https://github.com/danmayer/coverband](https://github.com/danmayer/coverband),1533147971.0
ioquatix,This is pretty awesome and I think that it's great to make coverage an actual actionable issue w.r.t. specs/testing.,1533119461.0
mperham,"There's literally decades of existing work on this subject, don't roll your own.

I would suggest you use Digest::SHA256.  It's optimized in C, allows you to stream in data so it's memory efficient and available everywhere.

[https://stackoverflow.com/questions/4233113/what-checksum-algorithm-should-i-use](https://stackoverflow.com/questions/4233113/what-checksum-algorithm-should-i-use)",1533152869.0
hmaddocks,"    string.hash
",1533068939.0
Jdonavan,"You can take advantage of sum in the enumerable module to eliminate intermediary variables

    def generate_hash(string)
      sum = string.unpack('U*').sum { |x| (x**2000) * ((x + 2)**21) - ((x + 5)**3) }
      (sum % 65_536).to_s(16)
    end",1533081715.0
jawdirk,"I think you should be able to take advantage of the fact that

    (x+y) % 65_536 == (x % 65_536) + (y % 65_536)

So there might be more efficient versions of

    (x**2000) * ((x + 2)**21)

and

    ((x + 5)**3)

that ignore the most significant digits, because you only care about the least significant digits which impact % 65_536.",1533098689.0
FigmentGiNation,Why no mention of SecureRandom?,1533041454.0
NativityInBlack666,rand(rand(rand(rand(rand(rand(rand(rand()))))))),1533042172.0
StuffedWithNails,Aside from not talking about the security aspects of RNG... What does this blog post cover that has not been covered ad nauseam for years? I didn't think the Internet needed another Ruby RNG for Dummies article. Guess AppSignal's marketing folks needed fluff for their blog.,1533048941.0
appsignal,"Good points being made here on not covering `SecureRandom`, we'll update the article to include it.",1533057067.0
elomatreb,"This is downright irresponsible, `rand` does not deliver cryptographically secure results and is thus unfit for use in encryption, despite them claiming it.

Use `SecureRandom`, which uses the cryptographically secure random number generator provided by the operating system to generate sufficiently unpredictable numbers.",1533043808.0
cdbchi,\`SecureRandom.random\_number\` is all you'll ever need.,1533066062.0
Slimy_Hog,Why would you want to do this?,1533040908.0
drbrain,"You can't because erb uses `eval` and eval doesn't understand `__END__`:

    $ cat t.rb
    eval <<-EVAL
    puts DATA.read
    __END__
    stuff
    EVAL
    __END__
    other

When you run this ruby ignores the `__END__` inside the eval string and uses the one at the end of the file:

    $ ruby t.rb
    other
",1533080121.0
sshaw_,"Only the data section defined in `$0` (the file passed to `ruby`) can be accessed:  

    /tmp >cat a.rb
    class A
    end
    puts ""A: #{DATA.read}""
    __END__
    class A

    /tmp >cat b.rb
    require ""./a""
    __END__
    MAIN

    /tmp >ruby b.rb
    A: MAIN",1533093136.0
waiting4op2deliver,"Fuck, I'm only on 4.2 and that was a Herculean effort",1533018613.0
mperham,"Seems like recently Ruby's gotten a bad case of the ""pass a bunch of flags"" rather than being opinionated in their APIs.  It makes me uneasy.",1533058546.0
ioquatix,"I'm sort of glad they did something, but ugh, this just seems like a total mess. Why not `Exception#print(io)`. Less string allocations required, automatic tty detection, etc.",1533012804.0
paneq,"What a mess, handling things on completely wrong layer...",1533118906.0
sshaw_,"The first programming language shipping with ANSI encoded stack traces..?
",1533091078.0
jawdirk,"Rather than duplicating the identical tables for model 1-5, maybe have 5 sequential tables, and make expanding a Model 1 trigger the reveal the other four tables?
",1532981952.0
Mike_Enders,Great stuff and love playing with Truffleruby.  Anyone know how close we are to rails support? Thats the big thing I and a lot of people are waiting on.,1532987522.0
moomaka,Awesome! Will this provide M:N scheduling of fibers or are they bound to a single thread as with MRI?,1532985668.0
fedekun,"Forgive my ignorance, but is a fiber like a thread? Do you have to worry about shared data/race conditions?",1533005455.0
AnalphaBestie,"What is this supposed to be? Just a frontend scraper for tbp?
",1532986613.0
ksec,"There is also a related proposal

Proposal to add Array#===  - [https://bugs.ruby-lang.org/issues/14916](https://bugs.ruby-lang.org/issues/14916)",1532952531.0
joltting,"Yea, I don't think this is a good idea. One of JS's worst traits is due to its triple equal operator, causing so much confusion on when and were to use it. I don't think Ruby needs this level on confusion introduced into it.",1532957600.0
this_is_not_nil,Great start coughing into the microphone :D ,1533127205.0
Mancinoz,"There's also an `install` argument that you can pass to the `gemfile` method, when set to `true` it will install any specified gems that aren't already available on your system. 

https://github.com/bundler/bundler/blob/master/lib/bundler/inline.rb#L13

## Example

```ruby
require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'nap'
end

# Fetching gem metadata from https://rubygems.org/.
# Resolving dependencies...
# Using bundler 1.16.1
# Fetching nap 1.1.0
# Installing nap 1.1.0
# => [<Bundler::Dependency type=:runtime name=""nap"" requirements="">= 0"">]
```",1532927732.0
stumptowncampground,This is the most useful thing I have seen this week.,1532948701.0
nakilon,"This looks like a cool hack, but:  

1. the `bundle update <specific_gem>` might not work  
2. sometimes you want to be sure you resolved dependencies before you run the program so you'll have to put some ""press any key to continue"" and think how to deal with it when there is no user terminal, etc.",1532985156.0
kidbrax,"is there a way to set options? for example, the install path? so we don't have to enter our password?",1539877070.0
PCmag1c,r/burstingout ,1532977773.0
jamie_ca,"And then random scripts start polluting my global gem installation... at least Isolate did it right with this functionality a decade ago, installing to a local subdue.",1532928395.0
TiuTalk,I did it on iTerm using multiple profiles (with different background colors) and automatically switching them based on the user+hostname of each server (a feature of iTerm itself) ,1532922300.0
jabawack81,I know is what you asked for but to get something similar in my app I use pry and this initializer: https://gist.github.com/jabawack81/1b111022f1720ae71745b7589dd315c0 it will add the rails environment to the pry prompt.,1532928661.0
merongivian,"This is a small project i've been working on. Uses Ruby for the code and is mostly inspired by Sonic Pi and Tidal Cycles, you can try it here: http://www.negasonic.org/

",1532889758.0
SLUisahellmouth,Tight,1532899610.0
PikachuEXE,Make me think of those very old RPG games,1532917656.0
MrPopinjay,"If you wanted to use a curly brace language what would be the reason to use this language and compile to Ruby or Crystal, rather than using an existing popular curly brace language such as C, C++, C#, D, Java, Scala, Javascript, Dart, or Go?",1532887413.0
c0m3tx,I don't get it. ,1532864747.0
castille,"First off, you have a lot of context we don't.

 We have a screenshot with a non greyed out accept and have to come to some really terse comments from you about how we should know a lot of things from a single screenshot. We didn't know you tried multiple versions or that you're unable to click the radio button. In fact, we don't know anything except that you cannot accept. Given the msi installer, we think it's windows, but it could easily be a skinned Linux with an emulator to use msi. Or virtual box, etc. So, how about some detail?

OS Revision? Downloaded from...? Specific installer name would be beneficial, too. What have you tried? ",1532866195.0
moomaka,"Try checking the box that says ""I accept the License"" :)",1532864367.0
Sqeaky,"Please learn to describe your problems. We can't read your mind and as far as we can tell it looks like you can't click the ""I accept"" button.",1532884736.0
Tomarse,"Can you install from the terminal?

    sudo apt-get install ruby-full",1532865943.0
Blimey85,Gain additional entries by spamming your friends. Nah. ,1532732105.0
franzunix,awesome,1532730321.0
BadMinotaur,This is exactly how I started learning Ruby. VX Ace can be a mess in some areas but overall it‚Äôs a great place to dive in. ,1532757790.0
TomBergewrong,That‚Äôs awesome. Can you tell us more about it?,1532737950.0
NativityInBlack666,Hey I use monokai with ruby too :),1532785604.0
fiveguy,"I'm not going to ask why, or go into possible security issues. That said:

If the file on your server contains Ruby, this should execute that code:

    > curl -fsSL https://blah.com/foo.rb | ruby

If you want the file to be protected, you could use basic HTTP auth on the server, and add the username/password using curl:

    > curl -fsSL https://username:pass@blah.com/foo | ruby

edit: i didn't look up the curl flags you're using, but I assume they're right? Also I haven't used HTTP auth in years - and implementation would depend on your server",1532720152.0
sac_boy,"You shouldn‚Äôt do this, probably. If you have scripts you want to run, upload them to your server and run them. If you have five different scripts you want to trigger on demand, upload them to your server and have an authenticated endpoint you can call with 1-5 as part of the query string to choose a script to run. You want the absolute minimum amount of genericism, you want any parameters totally locked down.

Imagine, for example, if you lost control of the domain hosting this script‚Äîsomeone could replace it, execute their own script, and trivially take control of your server.",1532725310.0
JustinCampbell,"Why Boo? Python is great in some areas and Ruby is better in others.

EDIT: If Python replaces Java as the first language people learn in school/enterprise settings, it's a win for everybody.",1532722835.0
DefMech,This title was really confusing at first since Boo is a sorta dialect of Python.,1532720846.0
modnar42,I'm curious if [Guido resigning](https://lwn.net/Articles/759654/) will have any long term effect on Python's popularity.,1532719048.0
editor_of_the_beast,Why would you post this on this subreddit? Rubyists don‚Äôt care about popularity. We care about using a language we enjoy. ,1532743532.0
blaine_freelance,Paywall :(,1532720021.0
altrux,"This is a poorly researched article. search engine searches don't mean that one language is more popular than the other, it means the devs leveraging that language need to google stuff more.

look at githubs yearly summary, that's a much better source.",1532730523.0
rb_me,Seems that the Python Package index is what's making Python most popular. It has a ton of packages covering a broad range. Much like CPAN did for Perl. Makes it compelling when needing to start a project.  ,1532720793.0
Randy_Watson,"Data science is one of the fastest growing and most in demand professions. Also, one of the two primary languages used in it is becoming even more popular than it already was. This is truly groundbreaking journalism. ",1532748831.0
bigfig,I think 80% of the cause is Google's embrace of Python.,1532718045.0
joelbluminator,"If anything this is good for Ruby (and all dynamic languages). The more enterprisey organisations see dynamic languages can be good for their development teams the more open they will be to Rails, Ruby, Nodejs etc. Because right now the ""dynamic languages can't scale to big projects"" mindset is hurting us.",1532801338.0
ksec,"If we just count the Python PEPs, and their core contributors, as well as big companies  behind compared to Ruby. 

It wouldn't be surprised that Ruby is behind. I am hoping with the acquisition of Github, someone could invest some money into it. Since Github should no longer have as much pressure financial wise.",1532941430.0
waiting4op2deliver,"I really don't see a significant difference between Python and Ruby as programming languages. In my opinion it comes down two particular Library usage. Having set up a million python virtual environments, I must say I'm not a fan. I laugh every time someone replaces their system Python and bricks their server.",1532762400.0
Flopsey,"Honestly, none of this matters. The future is Javascript and Node.

Browsers are in JS. The future of programming is in the browser. Because of this when they start teaching programming in elementary or high schools they will choose JS. Once there's millions of kids learning JS programming ecosystem will shift entirely to JS. JS will just get faster and faster and other scripting languages wont be able to keep up. And native to JS frameworks will get more popular and thus better to the point that super cheap JS programmers writing for native will be the norm.

Yes, Real Programmers^(tm) will still know other languages (those frameworks wont write themselves). And this is still a few decades off. But that, my friends, is the future.

(FTR I'm ambivalent about JS. I know some people hate it. I don't. But I would have trouble understanding if someone loved it. Although, yes, since ES6 it's gotten much nicer.)",1532723489.0
nakilon,"Python is the language created for educational purposes. For noobs in programming. Software engineers and computer scientists are supposed to learn multiple languages during their education and this one is supposed to be starting, not the ending. The fact that it gets popular just means everyone can start learning computing but not many can advance and learn further. Where I live people in small towns still stuck around Delphi -- not because it's right decision to stuck with it but because it was the language they were taught in the first semester before they dropped from the universities.  
UPD: truth always makes you butthurt, ahah.",1532727669.0
Glittering_Avocado,Bad takes- bad takes everywhere.,1532737158.0
Resquid,why's (poignant) Guide to Ruby https://g.co/kgs/X6k6nY ,1532714533.0
three18ti,"In addition to Why's guide (really, such a great book!), you can try asking questions and ""rubber ducking"" (i.e. explain what you think you know and ask for corrections) here as everyone I've interacted with is very friendly and helpful.",1532719844.0
edendark,"Your code is correct, you're just missing a `puts` call. By calling `holiday_item` you're just inspecting the value of `holiday_item`. 

`puts holiday_item` will show your expected output correctly. ",1532649949.0
Freeky,"Newlines aside, some review:

1. The season is being printed multiple times instead of just once.
2. You need a space after your joining comma.
3. `capitalize` is insufficient to turn :fourth_of_july into ""Fourth Of July"".  Hint: `split`, `map`, `join`.
4. `+=` makes a new object; consider appending to the existing one with `<<`.
5. Maybe `holiday_item` would be best as an `Array`, so you can add newlines in one place at the end; either by using `join` or just passing directly to `puts`.
6. If it's an `Array` then perhaps instead of building it up with `each` and explicitly appending to it, you might use `flat_map` and `map`.",1532651302.0
ummmmmmm,"Key word in the prompt you're missing looks like ""print"". If you throw in a ""puts holiday\_item"" at the end there you'll get a sense for where you're at.",1532650036.0
4rch3r,"you can specify the sort order by adding a block to sort! which would probably be the most clear and fastest way like:

    [1, 2, 3, 4].sort! { |a, z| z <=> a }    

which would sort greatest to smallest",1532637345.0
equivalent8,...took me a while to figure it out ,1532610358.0
FooBarWidget,"I feel conflicted about the new encrypted credentials system. Yes it is important to encrypt credentials. But the way it is setup now means that using the \*same\* credentials between development and staging and production, is now encouraged. I used to have totally different sets of credentials (and associated resources) for each environment. For example development only has access to the foo\_dev AWS bucket, production only has access to the foo\_prod AWS bucket, etc.

Suppose I want to separate credentials by environment. How do I do something as simple as making a new encrypted file config/credentials-prod.yml.enc with its own encryption password? rails credentials:edit does not allow me to specify the filename.",1532627057.0
harsh183,What does the i18n gem support that this does not?,1532597229.0
sshaw_,"> swappable backends  

Can you elaborate? I18n supports different backends. ",1532638065.0
jodosha,May I ask you the reason of designing it as a singleton class instead of an object? Thanks.,1532853698.0
Blimey85,"So this presents several options with no clear winner. That‚Äôs the good and bad of Rails. Lots of ways to do something and you‚Äôll often spend more time testing and choosing which way you want to go then implementing what you decide on.

My issue with emails is more along the lines of wanting something that looks professional, a bit like my site so it looks familiar when someone opens an email, and having no idea how to actually design an email. What I have now isn‚Äôt bad and works fine but at some point I want to spiff then up a bit. ",1532565267.0
manys,Making Ruby Mine And Nobody Else's: Reducing maintainability with idiosyncrasies.,1532546573.0
HelloAnnyong,"For the map-with-args example, I prefer

    module Enumerable
      def map_by(method_name, *args)
        map{ |x| x.public_send(method_name, *args) }
      end
    end

    [1.2345, 2.34567].map_by(:round, 2)
    # => [1.23, 2.35]

",1532549242.0
GroceryBagHead,"Blog spam in image form? That's new.

Also this is like a copy-pasta from other ""Top 5(10)"" lists that you get by googling. And for fucks sake, Radiant is dead for years now. It was relevant 10 years ago.",1532528888.0
moomaka,"That is kind of a crazy approach. 

If you break out the `bundle install` bit to a separate step and copy the Gemfile / Gemfile.lock into the container separately, then you can skip it all together most of the time as docker will use the layer cache. i.e. docker would only even run the `bundle install` if the gemfile changed.

As for asset compilation, we don't serve the assets from the containers so they are pre-compiled externally, usually 'normal' CI caching mechanisms and only the manifest needs to be copied into the container (the assets themselves are copied to a CDN). Though even if you need the assets in the container you can compile them externally and `ADD` them to the container, if the assets are unchanged this would again use the docker layer cache to entirely skip the build step for this.

Also the general ordering of this docker file makes no sense, the things that change often should at the bottom, things that don't change should be at the top. Once a step is hit that is uncachable, all steps after it will be executed. So with it's current arrangement any time any code is changed the bundle and asset precompilation layer will be rebuilt instead of using the layer cache.  

4.5min for asset compilation is kinda crazy, I'd try to fix that as well.

In order to gain access to cached docker layers, pull the latest container from your registry and use the `--from-cache` option to `docker build`.",1532518124.0
crazedgremlin,"The general concept you're describing is ""taint analysis"".",1532490276.0
tinco,"Ruby does not track where variables are set, nor is it lazily evaluated so there are no thunks to look at. Rails is not that complicated, you have to get used a little bit to how they do things, but I definitely recommend just reading all the code.  Just throw a \`raise\` in there, and then look at the files that show up in your backtrace.

Also, you could also just ask here or on slack or SO if someone knows where a particular Rails value comes from, someone might know :)",1532507877.0
cmd-t,Easier way would be to use a debugger to step through your application. I‚Äôm not too familiar with static analysis tools / taint tracing for ruby. ,1532507965.0
Slimy_Hog,You can use `caller` to find a sorta stack-trace of what calls your method. That might help?,1532493175.0
rubyrt,There is also `set_trace_func` which can be used to trace program execution.,1532545690.0
fiveguy,"If you use rspec, check out http://www.betterspecs.org/ if you haven't already ",1532475088.0
jrochkind,">     expect(actual).to eq(expected)

Seems absolutely insane to me. ",1532471634.0
andyw8,"The RSpec authors recommend against using an implicit subject:

https://relishapp.com/rspec/rspec-core/docs/subject/explicit-subject",1532484346.0
edendark,Huge thanks to /u/schneems for creating the gem.,1532442037.0
tf2ftw,I like Pundit but for being so opinionated it sure leaves policy_scope up for interpretation. ,1532485362.0
niborg,"Anyone tried [action_policy](https://github.com/palkan/action_policy)?

We are in the process of switching over from cancancan to pundit, and found a pattern or two in the pundit API that we really didn't like (eg the implementation for a headless policy seemed hacky). Action policy has a very similar approach, great docs, and actively worked on. Might give it a go instead.",1532492630.0
stanislavb,Pundit is a great choice for authorization in general. Regardless of the framework. I integrated it in a Rails app recently and everything was easy and clean in the end.,1532476748.0
dan_alyst,Yeah. As I mentioned it's framework agnostic. I've only used it in Sinatra so far but I think ill make the switch in my rails app going forward. The interface feels much cleaner than cancan.,1532478924.0
gurgeli,"Wow. That website has a whole lot of things slapping you in the face once it loads, doesn‚Äòt it?",1532433121.0
stanislavb,"It seems like this is one of those guys who's always complaining and doesn't have much experience in general. I might be wrong, of course. 

For example, he never mentions an alternative framework that would have worked better. Yes, he might had some frustration, but that doesn't mean Rails is bad inherently. Neither it says in any way that he would had better experience building an MVP in a different framework. 

p.s. don't waste your time reading the article",1532465775.0
raen79,"I don't really understand the point of the article, that Rails is too hard? What is simpler? I never had more ease of development in another framework for my use cases so far. Is rails hacked together? Maybe in the past, but I don't get the feeling now, in fact I get it more when using *place any node.js framework here* (which I have the feeling is where the author is comparing rails to).",1532469454.0
rubyonrays,Don‚Äôt use `text-align: justify` it makes your mobile site difficult to read. ,1532484373.0
BaconGlock,i like how the first half of this article is this guy realizing he‚Äôs trying to go against the rails default workings and then him crying about how he had to implement a ‚Äúworkaround‚Äù that is a rails standard thing in place for people that need to do those particular things. 3/5 comedy article,1532732321.0
pytyper,"I don't get the gripe with 'action'. every language/dsl has reserved words that if used will result in wonky behavior, after you experience a bug of this type it become second nature to verify the variable or function name used is not part of this list.",1533341658.0
realntl,Pretty much sums up what my experience is like when I use Rails. Well written.,1532454673.0
,"I'm not sure what your goal is here, is it something like this?
   
    print ""hi""
    a = 12
    print ""12"" if a == 12",1532413037.0
recycledcoder,"Oh man... sweet flashback of days gone by with Turbo Pascal 3.2 and ensuing :)

It may still very much be a perfectly viable UI for many tasks, so rock on!",1532417163.0
ioquatix,Yes - but is it MVC :),1532424271.0
jemminger,Isn't avoiding running your whole suite a code smell?,1532380473.0
stanislavb,I so much love how the tooling around Ruby is improving all the time.,1532416023.0
stanislavb,Has anyone had the time to try this out?,1532483560.0
andyw8,"If you have a `DummyClass`defined in the test like that, there's a risk of the name colliding with another `DummyClass` declared in a different test, leading to confusing or buggy behaviour.

It would be safer to declare it within the example, e.g.:

    it do
      dummy = Class.new
      # etc
    end

if you need it to inherit from something else you can write:

    dummy = Class.new(ParentClass)",1532378923.0
keeganspeck,"Gotta say, pundit is maybe my favorite gem. It's simple, lightweight, very well designed, and basically just a better-structured version of the pattern I would have otherwise implemented myself. Thanks for picking up the maintenance, I'd hate to see such an elegant lib wither away.",1532392097.0
zaphnod,"Can I just say, it would be *fabulous* if the gem maintainers who publish in this sub would give a one sentence summary of what their gem *does* in these types of release/update notes.  Bonus points if that sentence pitches why their gem is better than the other gems in the space.

Linking to the release tag and changelog is even worse - now I have to click *twice* to see that pundit is an authorization library, and therefor a problem I have solved, and therefor not of interest to me.",1532344247.0
obviousoctopus,/u/Linupe thank you for maintaining this wonderful gem and for the new release!,1532451854.0
in0pinatus,"It's neither broken nor surprising, at least not ""surprising"" in the sense of ""inconsistent"".  You're not calling `Struct#===` here, you're calling `klass::===` and `Struct::===` which is not Object#===, it is the [instance-type test inherited from `Module#===`](https://ruby-doc.org/core-2.5.1/Module.html#method-i-3D-3D-3D) via the `Class` class. Hence:

    klass = Struct.new(:foo)  #=> #<Class:0x00007fe7d5164120>
    bar = klass.new           #=> #<struct foo=nil>
    klass === bar             #=> true

and `klass === klass` is `false` because `klass` is not an instance of itself, it is an instance of `Class`. As is `Struct`, and as is every new class type manufactured by Struct. Hence:

    klass === klass            #=> false
    Class === klass            #=> true
    Class === Struct           #=> true
    Class === Struct.new(:baz) #=> true

In general, === is not an equality operator in Ruby the way it is in, say, Javascript. It is the `case` test operator and gets invoked directly when you write things like:

    def ticket_class(age)
      case age
      when nil; ""Unknown""
      when /‚àû/; ""Cthulhu""
      when String; ticket_class(age.to_i)
      when 100; ""Centenarian""
      when 18..21; ""Young adult""
      when ->(age) { age < 18 }; ""Junior""
      when ->(age) { age >= 65 }; ""Senior""
      else ""Regular""
      end
    end

In the third `when` above, it's a check of whether `age` is an instance of `String`, not whether it is the `String` class itself, and the code executed for the test will be equivalent to `String.send(:===, age)`.

If you actually want to test identity equality of two classes, then use ==, and if you want to test ancestor chains for classes, try `>` and `>=`, thus:

    Struct > Struct   #=> false
    Struct > klass    #=> true
    klass > klass     #=> false
    Struct >= Struct  #=> true
    Struct >= klass   #=> true
    klass >= klass    #=> true
",1532322607.0
bfoz,"Thanks to all for the detailed responses. I knew there would be a perfectly rational reason for it. 

Now that I understand how it works under the hood, I can see where I went wrong. But, with that said, I still find it surprising from a POLA perspective. If you're using the equal-sign for an operator (even 3 equal signs), it seems reasonable to expect said operator to embody some notion of equality. That it occasionally doesn't, can be surprising. And the fact that ""comparing something to itself"" is one of the times that equality isn't equality is doubly (triply?) surprising. At least, it is for me. 

And, I still think this should work:

    case klass
        when klass  # Do the thing!
    end

But I guess it's just me. Oh well.

FWIW, I'm trying to use [Qo](https://github.com/baweaver/qo) in a project and that mechanism is rather heavily dependent on the === operator, so I can't easily switch to using == as someone recommended. Unless someone has a better idea, it looks like I'm stuck either monkeypatching Struct, or writing a custom version of Qo. 

Thanks for explanations.",1532469156.0
iconoclaus,"\[iRuby Notebooks\]([https://github.com/SciRuby/iruby](https://github.com/SciRuby/iruby)) or \[RMarkdown Notebooks\]([https://support.rstudio.com/hc/en-us/articles/233066128-Do-Notebooks-support-other-languages-](https://support.rstudio.com/hc/en-us/articles/233066128-Do-Notebooks-support-other-languages-)) might useful solutions here.  I believe that submitting an R package to CRAN, for example, will require generating your working documentation on the repository side.  Might be a nice practice for other repositories as well, though managing langauge versions will be challenge.",1532312457.0
tom_dalling,"I really like this approach. I have a [gem](https://github.com/tomdalling/jekyll-include_snippet) for this purpose too, but it only works with Jekyll.",1532320188.0
rolandHD,"`ruby-mode` can be configured to indent like you suggested:

    (setq ruby-align-chained-calls t)
",1532269931.0
akito_mashua,I'm pretty satisfied with the default auto indentation of emacs when loading .rb files. Entering spaces on your own will be overwriten by emacs if you press a Ctlr-x-h and then a tab. So its a waste of time and nerves.,1532267397.0
jacobherrington,"Hi! I'd recommend starting with a site like codewars. I learned a lot about Ruby's syntax and quirks by solving little puzzles that I could also solve in other languages for comparison.

What are you planning to use Ruby for?",1532264850.0
hypnopoo,[Learn to Program](https://pine.fm/LearnToProgram/) by Chris Pine is an excellent starting point.,1532274761.0
anontheanon1,Thanks,1532265630.0
toadkicker,"Just focus on what you love and try to master them. No one requires you to do front and back end development, especially for ML. Ruby and Rails do not decide your career path, you do.",1532213266.0
nofxsnap,"I think you have some misconceptions here. I have worked as a pure back-end Rails dev and using Rails as an API, which it is pretty awesome at. Our front-end devs would consume the API with angular. So, you can definitely be a back-end engineer with Ruby on Rails. 

I have done alot of full stack development too with Rails and Ember, Angular, and React. Pick a JavaScript framework to learn on top of any back-end framework that can create an API, and you're full stack. I am not a big fan of monolith Rails applications using .erb pages and the asset pipeline either.

I have about six years experience in RoR and various JavaScript frameworks and I have zero issues getting job interviews. It may not be the hottest language out there, but there are still a ton of Ruby jobs available, and I just love writing in Ruby. 

I also have a decade of experience prior doing C# and .Net. I guess what I'm trying to say is that it probably doesn't matter which language you have some experience in now. If I'm hiring a junior dev, I am not expecting them to be amazing at our tech stack. I just want someone who is smart, willing to learn, and be a team player. I've worked with Python, Java, Node, and .Net devs that all picked up Ruby without much of an issue. After all, there are parallels in all of these languages and their web frameworks.

I don't see using a language that you already know as hurting you. If you're doing lots of ML though, you're probably not using Ruby for that. Also, if working in ML is the goal, knowing web frameworks seems like a bonus over a core skill that you need for a career in that field. Maybe start learning Python or other more ML languages as well.",1532225950.0
Ronald-Ray-Gun,"Always choose the right tool for the job. It doesn‚Äôt matter if Ruby isn‚Äôt making headlines ‚Äî it‚Äôs proven again and again to be the right choice for web applications and more. If you‚Äôre looking for a career building web apps (you mentioned a junior web dev full stack position, so I‚Äôm assuming here), ruby (& rails) is a great language to know in that space. 

If you‚Äôre going for machine learning or database design, choose the tools that fit those technologies best (probably not ruby). 

In the end it comes down to what you‚Äôre trying to build, or where you‚Äôre trying to work, and which tool will get you there. 

Best of luck!",1532214511.0
RockMeetHardPlaces,"Ruby isn't near as popular these days for sure.  But the language you code in is a lot less important than getting experience solving hard problems.  Learning Rails with Ruby will teach you Struts2 with Java.  Are they the same?  Not by a long shot; however, the concepts for web dev are generally interchangeable between language and framework.  There's a few ""newer"" paradigms that are very popular right now which you might want to look at.  Js + Angular/React/Vue (whether coupled with Java/Ruby/Javascript on the backend)  - that's all the rage with the cool kids these days.  Tomorrow it'll be something else.  In the meantime, just solve problems and get experience.  ",1532214284.0
gettalong,"Python is making headway in many areas because, I think, of its use in academic circles. All the numeric and symbolic libraries that are available for Python have made it easier (and sometime even worthwhile) switching from a closed-source product like Matlab, Mathematica and Maple.

Now that Python has its footing there, many students need to learn it for their studies (e.g. mathematics or astronomy). This brings more people to using Python, some of them becoming professional academics who then go on teaching Python again. And some of those people get hired by the industry or research and promote Python there because that's what they know.

* Is Python ""better"" or ""more flexible"" than Ruby? Certainly not.
* Is it easier to code with? I don't think so. All the whitespace stuff and the tacked-on OO makes me nervous. Your mileage may vary.
* Is it faster than Ruby? Ruby and Python are relatively equal in this regard. However, there are explicit and very visible statements for Ruby that it should get much faster in the future (e.g. Ruby 3x3, alternative implementations like TruffleRuby).
* Can you do things with Python that you cannot with Ruby? No - but both have their fields where they are strongest.

My recommendation: Learn Python, do some small projects with it and see how it feels. Maybe you like, maybe you don't.

And finally: If you can choose your place of work, choose so that you can use the programming language that feels good for you. If not, use that programming language for open source purposes in your spare time and build up your expertise in this way; this make it easier to change jobs later.",1532238504.0
,Do you like it?,1532224104.0
plastashite,"I see the dilemma you are having.  Something similar that I had to realize occurred as well, though couple of decades back.  I took CS at Uof Toronto in 98, before CS had their own building.  I was really only taught C,Shell and perl for programming.  That in 98 got me a job putting up dynamic webpages and perl made much of it possible.  Though it was also about the time PHP and mysql became part of mainstream Linux distros

From school , I was left with a curiosity of functional languages and AI!  And never really got to work on such a project in the web development field.  --- This is where I see you facing a similar dilemma ... You're actually interested in Machine Learning and Big Data ... and for that the languages and approach of programming is done by a variety of different languages like Python, Lua , Lisp... and Octave/Matlab etc etc ... it's more like going back to C, and Assembly to program the machine.  So a new set of considerations and approaches must be considered for you to include the lucrative field of Machine learning!  -good luck",1532219057.0
Blimey85,"I think it‚Äôs all personal preference. I‚Äôve never cared much about what was making headlines. I started with Perl, moved to PHP, then eventually Ruby mainly because of Rails.

I use Rails because it makes me very efficient. I recently needed to throw together a fairly simple crud app and with Rails and it was quick and painless. Had Google maps, used Selectize and Bootstrap, looked like it took me far longer than it did.

Is Rails the best thing ever? Of course not. There‚Äôs no single solution to every problem. Rails is a great solution for a lot of problems though. Especially these days with so much work going into speed of both Ruby itself and Rails. It works great as an API for Vue, React, or whatever you want up front.

But at the end of the day, the best advice I can give is use what you enjoy using. I dislike PHP, mainly because for years I was stuck working on shitty code bases, rather than issues with the language itself, but I kept at it. That was dumb. I would have been far happier changing jobs and I wish I had. Now I‚Äôm working with Rails and enjoy coding again. ",1532241241.0
Tomarse,"I think you should focus on core concepts, patterns, and algorithms. The language you use to implement those things is somewhat secondary to that.",1532249556.0
easylifeforme,What did you think of the udacity degree? ,1532226740.0
r3d51v3,"I think it‚Äôs best to get really good in at least one language. If you really master at least one language you‚Äôll have a lot of understanding about more advanced concepts in that language, many of which would also be transferable to other similar languages. However, if you don‚Äôt stick with it and you keep starting to learn new languages, you might never reach the expert level in anything, since you‚Äôll be focusing on the new languages basic features without exploring higher level concepts. I think at that point it will be a lot easier to learn another language, like python, so you can use it in situations where it is a better tool than ruby.

Also, i think Ruby is useful to know anyway, because it take the place of Perl in many shell and devops type roles. I know one can use python  for this too, but I find Ruby to be so much better suited for use alongside shell commands on the command line. While I do a lot of ML and traditional big data processing using industry tools, I will say I spend a lot of time processing data with bash one liners using parallel and Ruby.",1532264016.0
Witless-One,"I hope you understand that the answers here will be very biased :) Honestly, there's not a lot of downside if you switch your focus to another language, such as Python. It's a more popular language today since it has better libraries built for it and the backing of the scientific community.

 If nothing else, it opens up new doors. You can always decide you like Ruby better. Just not until you've actually tried to broaden your experience.

Have fun!",1532276320.0
Dinos_12345,"Thanks for all your comments and the attention, I value your help and will seriously consider your advice. You all agree on the same thing though, it's not the tools, it's the problem and how you choose to approach it. ",1532282676.0
feitico,JavaScript is the best programming language nowadays ,1532564011.0
nictrix36,"You may want to look at some cookbooks to get an idea, since you mentioned Chef.

https://github.com/sous-chefs/mysql
https://github.com/sous-chefs/apache2
https://github.com/sous-chefs/line-cookbook

To do used input you'll need to make a cookbook, pulling all those in our pass in an attribute during the chef client run.",1532154233.0
moomaka,"I think you need to spend some time reading about Chef and it's design / architecture. All of the things you've asked about doing should be done via Chef 'Resources' and should not be done via raw Ruby nor shelling out with `execute`, doing so would bypass much of the point of using Chef. 

For some examples: 

Creating a file: https://docs.chef.io/resource_file.html

Note: Modifying a single line in a file is generally not something you want to do, Chef maintains a 'checksum' on the resources it modifies and uses this to detect changes and decide what to do, e.g. determine if it should send a SIGHUP to a web server after modifying it's config files. For your specific use case, Chef should manage the entire VirtualHosts file via a template: https://docs.chef.io/resource_template.html . But, for something like apache, there are already libraries out there which should give you all the things you need: https://supermarket.chef.io/cookbooks/apache2

Installing yum packages: https://docs.chef.io/resource_package.html. (though to answer your specific question, look at the CLI options `yum` provides: http://man7.org/linux/man-pages/man8/yum.8.html, note `-y`). 

MySQL Setup, probably easiest for you to use a library: https://supermarket.chef.io/cookbooks/mysql

In general, while Chef allows you to write any Ruby code you want, you'll spend most of your time working within it's DSL and abstractions so in practice you don't write all that much 'plain ruby'. ",1532182564.0
Koh_Phi_Phi,"I'm primarily a programmer and prefer to do as little devops as possible. I went down the Chef route a while back and while it was certainly an improvement over custom scripts, if you can use Docker/Kubernetes I would recommend it highly since you can cache multiple steps and avoid getting into weird states where a recipe doesn't work for some reason or another.

Just my two cents, depending on your use case of course.",1532161908.0
bokmann,"I used to use a tool called Sprinkle for this.  It has similarities to rake and Capistrano, but is tailored for provisioning servers.

https://github.com/sprinkle-tool/sprinkle

Other tools seems to have won this battle though... Chef and Ansible being two of the biggest.",1532205170.0
akito_mashua,You may spent some time and check Capistrano. It's specifically for server deployment tasks. https://capistranorb.com/documentation/overview/what-is-capistrano/,1532157118.0
sshaw_,I mean you may as well mention `Fixnum`. More apps are running rubies with it than without it! ,1532185235.0
dearshrewdwit,Lots of really cool things here!,1532267188.0
desperado_avocado,"I think we should not discourage contributions of any kind. If you see something that doesn't interest you or you deem not worthy of your time you can always downvote, scroll past it or just ignore it completely.

Another option is to change the viewing options to ""top"" instead of hot. That way you only see the most popular stories within a specific timeframe.

Let the people post.",1532160410.0
geraldbauer,"Hello, 
I've written-up a hands-on getting started guide for the new
sportdb text library / gem. Let's build the standings table for the English Premier League (EPL) 
for the 2017/18 season from all 380 matches in the comma-separated values (.csv) format.

Full article titled ""[Working with CSV Files](https://github.com/sportdb/docs/blob/master/working-with-csv-files.md)"". Enjoy the beautiful game with ruby.",1532104595.0
sprayAtMeBro,"Great post. 

The aside on how MRI essentially inlines default argument initialization to the method body reminded me of Function::Parameters in Perl.",1532099271.0
sshaw_,"Regex `o` option, global vars, multi heredoc, ... are from Perl:

    /tmp >perl -E'say qr/$_/ for 1..5'
    (?^u:1)
    (?^u:2)
    (?^u:3)
    (?^u:4)
    (?^u:5)
    /tmp >perl -E'say qr/$_/o for 1..5'
    (?^u:1)
    (?^u:1)
    (?^u:1)
    (?^u:1)
    (?^u:1)


    /tmp >perl
    print <<ARG1, <<ARG2;
      Arg 1
    ARG1
      Arg 2
    ARG2

      Arg 1
      Arg 2  
",1532110314.0
d_impious,"Nice one. I agree with most of it. :)

### ",1532104409.0
sshaw_,"Here's another good one:  

    /tmp >ruby
    def foo
      def bar
        Time.now.to_i
      end
    end

    p foo.bar
    p foo
    p foo
    ^D
    1532131291
    :bar
    :bar",1532131346.0
lordmyd,"Just for comparison, how does Python compare for rough edges? It seems all languages have a few rough edges, even the better-designed languages. The question is how likely are you to meet them in production code?",1532646680.0
jdickey,"All those PHP refugees who came to Ruby because ""it doesn't have anything close to the same level of fail and weirdness"" are going to be sad.

OTOH, one of the reasons that each of these misfeatures have lived so long has to be that someone thought it would be cool/fun to implement and nobody ever tried to use it in revenue-producing software where 'cool/fun' translates as 'expensive/career-limiting'. üòú",1532150095.0
creepywizard,"I did a workshop using the Eventide project a while back. [https://eventide-project.org/](https://eventide-project.org/)

Last I checked their documentation was *extremely* lacking, though.",1532044574.0
moomaka,"I haven't use any gems for it, but have used event sourcing as a design pattern. I think the general way to think of event sourcing is that you're moving business logic from the write side to the read side which has advantages but also pain points, mostly dealing with concurrency issues on the write side and performance issues on the read side.  

It works really well when used for things that match it's model, e.g. if you have an order processing system where there of tons of different 'things' that can happen to the order through it's lifecycle, tracking all the 'things' separately as events rather than mutating order state in response to each of them works _really_ well. However, I would never build an entire application this way, it adds a lot of complexity for no benefit. 
",1532276242.0
morallybass,What's the problem you're trying to solve?,1532054175.0
chrisgseaton,"If you are interested in efforts to type Ruby, there's a large number of efforts (ten papers!) on http://rubybib.org/",1532024690.0
kirizt,Stripe has a fully functioning (not publicly released) static typechecker for ruby. [sorbet.run](http://sorbet.run) ,1532067735.0
moomaka,"I'm curious what the impetus is for adding static typing to Ruby. I work on several fairly large Ruby code bases, some rails, some just plan old Ruby and the bugs I run into (and create) are only very rarely related to passing the wrong type to something. I wouldn't even put it in the top ten causes of bugs.",1532037765.0
MagicalVagina,"Problem is static typing is conflicting with the idea of duck typing. Imho that's an anti pattern to check for a type in ruby, should check for method presence instead.",1532088973.0
sshaw_,"If static typing is what you want and you don't mind new syntax you may as well just learn Groovy.

",1532059724.0
realntl,"While I don't want to negate your genuine enthusiasm for your project, can you please take a moment to imagine what this subreddit would be like if every library author such as yourself promoted their gem to the same degree?",1532019057.0
moomaka,"A couple tips on `ENV`:

* Access is pretty slow, most implementations do a linear search for the string so it gets slower with more env variables set. Even though it looks like a hash, it doesn't have hash like performance. In most cases this probably doesn't matter but I have seen ENV access in a tight loops be a problem. 

* On MRI you are likely protected by the GIL but writing to it isn't thread safe in a lot of implementations, e.g. glibc. 

Take those two issues, and add in general clarity of code, and my recommendation is to never write to the ENV if you can avoid it, or at least only do so doing application startup. Also only read from ENV on app startup, e.g. use it to set a value in a configuration object, then use the configuration object in your code rather than accessing ENV directly where you need it.",1532116244.0
sshaw_,For tests that use `ENV`: https://github.com/thoughtbot/climate_control,1532058211.0
,[deleted],1531988974.0
rurounijones,https://brakemanpro.com/blog/jrubyfx/2015/09/05/what-is-jrubyfx,1531986916.0
tinco,"Have you checked out RubyMotion? There's an example of a popular iOS game here: [http://www.rubymotion.com/references/success-stories/a-dark-room/](http://www.rubymotion.com/references/success-stories/a-dark-room/) made in Ruby, and apparently all these companies have some sort of Ruby on iOS going on: [http://www.rubymotion.com/references/customers/](http://www.rubymotion.com/references/customers/)",1531999375.0
realntl,"By ""backend,"" do you mean using ruby to build a web server?

I write services in ruby that have nothing to do with web servers all the time. It's a very solid general purpose programming language.",1532007130.0
jujubean67,"The ecosystem around Ruby is specialized for web development and other related areas. This is just how it is. There are other uses for it of course, but it's not a general purpose language in the sense that Python is. 

This can make you sad or it can motivate you to learn another language. For me it has the later effect. ",1531993680.0
meagar,"No language is good at everything, so you shouldn't get overly attached to one language. The real job is designing and building software, the specific language you're using will change many times over the course of your career.",1532033697.0
,Look at mruby.  Maybe you'll have fun with that.,1532009783.0
moomaka,"I know a number of companies that have used RubyMotion for their mobile apps.

You really only have a few real 'realms' of applications for the most part, web, infrastructure, desktop and mobile. I see Ruby used all the time for web (rails), infrastructure (chef, puppet) and mobile (RubyMotion). I don't see it used for desktop apps very often but I honestly don't use that many desktop applications, they are kinda dying outside a few niches. A lot of them that may have been in the Gosu wheelhouse are built with electron now (slack, spotify).",1532010889.0
xiongchiamiov,"> I feel the same demotivation that I feel when I use an obscure or old language, like D or Pascal. I feel that my skills are useless, that if I would use, for example, C# for GUI project, my app will be more valuable for some reason - not because it will be faster, or smoother, but because other people use this technology alongside me.

Well, it's pretty simple: don't get a job doing desktop app development.

If you stay working in web dev then there's no reason to be programming not web dev, and you have a much better chance of it making sense for you to use this tool you love.",1532012120.0
jrgns,"Not really sure if this counts, but we use ruby to do provisioning and monitoring on fibre networks. It's basically low level integrations through protocols like SNMP and TL1 to the network gear. We use Sinatra to provide API access, and Sidekiq for the background processing. ",1532020450.0
skryking,Most of my ruby applications do real work in the background like automating nmap and nessus scans.  I leave the gui parts to web interfaces.  Being a polyglot is where the fun is.,1532054578.0
Elw00t,"Might not be exactly what your looking for, but in those dark nights wondering rspec darkness, this has brought me some light. http://www.betterspecs.org",1531970978.0
Zengolden,"How are you running your ruby script?

Here's an example of how to run it:

rspec use_case_spec.rb -f documentation
",1532016629.0
Zengolden,"also, I use:

require 'rspec'
require 'rspec/expectations'
",1532016856.0
into_lexicons,"this is the first time i've encountered this pattern, and i've been writing ruby for a long time. i can understand why it's confusing. looks like a hacky way of early returning `self` when the method is called with no arguments. i don't understand why someone would write this over the following:
```
def clone(opts = nil)
  return self if opts.nil?
  ...
end
```

there might be something i'm missing, but from messing around with it for a minute or two in irb, i can't tell a practical difference.",1531951495.0
chrisgseaton,It returns `self` if no argument is given for `opts`.,1531955086.0
ummmmmmm,"First time I've seen that pattern as well. Does look like a slightly confusing guard clause. Can't say I'll ever use it, but I'd be interested to hear Jeremy Evan's opinion on using it in that spot ([https://github.com/jeremyevans/sequel/commit/c597dea7541ab2ed3a17cb3bfb844422f128587f](https://github.com/jeremyevans/sequel/commit/c597dea7541ab2ed3a17cb3bfb844422f128587f))",1531957209.0
Freeky,"> [Add comment explaining use of control flow in default method argument](https://github.com/jeremyevans/sequel/commit/ab156c35eb0dd29c245f3c83beed229a2413e903)

           def clone(opts = (return self; nil))
    +        # return self used above because clone is called by almost all
    +        # other query methods, and it is the fastest approach
             c = super(:freeze=>false)",1532014976.0
bramley,"So as others have said, it returns `self` when called with no args, but the way it does it is by exploiting two things. One, that default argument values can be code (so you can write things like `def whatever(thing = Thing.first)`). And two, that code to provide a default argument only gets executed when it needs to kick in because the argument wasn't provided.

The reason it's two statements is that `return self` isn't actually providing a value. The interpreter will complain unless the expression has a value.

This is just way too clever in all the bad senses of the word. Who thinks putting flow control into the method definition itself is a good idea?",1531968108.0
counterplex,Might make it a compile-time effect instead of a runtime effect.  It‚Äôs too clever for me though.,1531958111.0
sshaw_,Also see https://gitignore.io,1531956908.0
jamie_ca,"    bool = false
    bools.each do |bool|
      if func(bool) == 42
        bool = true
      end
    end
    bool

Ignore the stupid logic, but this illustrates what the warning is about. Line 4 makes an assignment, which will overwrite the loop local variable, when the intent (as I wrote it) would be to update the method-scoped variable.

The warning in particular is simply encouraging less variable name reuse, as it helps to avoid any confusion about ambiguous situations.
      ",1531946451.0
Linupe,The issue is that it may not be obvious which variable you actually want to access. There is a risk that you accidentally shadowed the outer variable. ,1531935366.0
JustinCampbell,"It's confusing for someone to read, because they have to keep the context of what the variable means both inside and outside the scope. This increases chance for human error (bugs), especially when moving code between the scopes.",1531940418.0
jrochkind,"Someone thought it was a good idea, because maybe the login service could then be used by multiple apps?

I think you're not wrong. ",1531927596.0
joshmn,https://segment.com/blog/goodbye-microservices/ good read on the whole microservice architecture thing.,1531932297.0
whalesalad,"If many services exist and need to share login capabilities in an SSO type of fashion... makes sense. If this is two services for the sake of micro services when they could just be one codebase... yeah it‚Äôs a bad idea. 

Hard for anyone here to say 100% without more info. ",1531972998.0
,"So, like an identity provider?",1532227953.0
hartator,Shouldn‚Äôt be 5.2 now?,1531937587.0
moomaka,"> So, nil acts more like a keyword than an instance. As it is just a way to express the ‚Äúnot an object‚Äù notion.

`nil` is very much an object instance. It's really a 'special' constant that you won't find by looking at `Object.constants`, `Kernel.constants`, etc. `nil`, along with a few others are defined here: https://github.com/ruby/ruby/blob/trunk/include/ruby/ruby.h#L410

Other than the special definition, the `nil` acts very much like a normal instance and `NilClass` as a normal singleton class, e.g. you can add methods to `NilClass` and call them from nil:

     ‚ùØ pry
    [1] pry(main)> class NilClass
    [1] pry(main)*   def derp
    [1] pry(main)*     puts 'hi'
    [1] pry(main)*   end
    [1] pry(main)* end
    => :derp
    [2] pry(main)> nil.derp
    hi",1531923935.0
moomaka,"This will likely point you in the right direction: https://github.com/gosu/gosu/tree/master/dependencies/msvcrt-ruby

Also - depending on what your end game is you may want to consider using mruby instead of MRI, its purpose built for embedding whilst embedding of MRI is supported but not really a prime use case. ",1531915023.0
Schrockwell,"What you're looking for is string concatenation or interpolation.

Interpolation is usually the easiest to see what's going on. If you use a string with double quotes it will permit string interpolation using the `#{expression}` syntax.

```
street = doc.css('.address').children[0].text
city = doc.css('.address').children[2].text
address = ""#{street} #{city}""
```",1531889022.0
sshaw_,"It seems a bit strange to get 3 values from `@certification_application` just to pass them back to `@certification_application` via its `#make_payment` method. 

While I would definitely not put anything related to network calls to 3rd party services in my model, this method can be reduced to `@certification_application.make_payment(token)`. 

Really, I would do something like this:

    class Payment
      def initialize(token)
        # ...
      end

      def charge(price, quantity, description)
        # check for not nil, > 0, etc...    
      end
    end

    payment = Payment.new(card_token)
    payment.charge(@certification_application.certification_level.price.to_i, ...)

But I'm the type of guy that does not want my payment related code to have dependencies on things like `CertificationApplication#individuals`, `CertificationApplication#certification_level#price`, etc...

",1531891069.0
HwanZike,You can use named arguments: https://robots.thoughtbot.com/ruby-2-keyword-arguments,1531886553.0
jemminger,"Do NOT pass secret tokens in params.  You want ENV variables, e.g. https://github.com/bkeepers/dotenv",1531886169.0
,[deleted],1531915491.0
colindean,What does this do that [`git branch --merged | grep -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d`](https://github.com/colindean/hejmo/blob/master/dotfiles/gitconfig#L11) mapped as an alias cannot?,1531884833.0
sshaw_,"Very nice. 

Why Ruby (>= 2.1) instead of Bash though? Thinking that the latter would allow folks to adopt more easily. ",1531957128.0
jemminger,Because copy/paste is so hard?,1531883460.0
joshmn,"Aside: Any support here for a once or twice-a-month ""what you published""? I'd love to see what everyone else is working on.",1531865617.0
waffle_ss,"Rust's enums are what you'd call more generally algebraic data types in other typed FP languages - if you google ""ruby algebraic data types"" you'll get more results.

I don't quite follow what the gem is doing that you aren't getting from simple class inheritance (`module Colors; class Red; def rgb` etc.) but it's cool that it's working well for you and you're bringing back lessons from Rust",1531859926.0
midasgoldentouch,"Hmm, are you not able to do that with the enumerated_type gem? I thought you could",1531858586.0
zaphnod,"Just to toss my own hat in the ring, a different take here: [iron-enum gem](https://github.com/irongaze/iron-enum)",1531861935.0
in0pinatus,"I've used a few enum libraries and they always turn out to be frameworks for value objects. Most often I end up factoring them out as simply redundant syntax for things Ruby already does. I want to write `Red = Color[""#ff0000""]` where `Color::[]` is a factory, so these days you'd have a hard time convincing me not to start with POROs. 
",1531867245.0
sshaw_,"    ~/code/cti >gem inst smart_enum
    ERROR:  Error installing smart_enum:
         smart_enum requires Ruby version >= 2.4.0.

Why require 2.4?

Also taking the example in the README:

    ~/code/cti >ruby -rsmart_enum
    module Colors
      extend SmartEnum

      variant :Red do
        def rgb
          [255, 0, 0]
        end
      end

      variant :Blue do
        def rgb
          [0, 0, 255]
        end
      end
    end

    p Colors::Red.rgb # => [255, 0, 0]
    p Colors::Blue.rgb # => [0, 0, 255]
    Traceback (most recent call last):
            2: from -:1:in `<main>'
            1: from -:2:in `<module:Colors>'
    -:2:in `extend': wrong argument type Class (expected Module) (TypeError)

",1531890044.0
carlbrasic,Interesting coincidence!  We published [https://github.com/ShippingEasy/smart\_enum](https://github.com/ShippingEasy/smart_enum) a few weeks ago which was extracted from our production codebase to tackle a similar issue.,1532014124.0
PeteMichaud,"One I used to use: https://github.com/beerlington/classy_enum

It hasn't really been updated, but I liked how it worked, and I think it stills works on the latest Rails.",1531874307.0
amadman114,"So the CLI will capture it as a string.
Indexes take an integer.

So firstly, you'll need to call `to_i` on the input.

```
index = input.to_i
```

Then, you can do as you suggested -

```
store_info = Store.all[index]
```

Since you say it returns a hash, you can then treat this like any normal hash; getting the values out by using square brackets `[]` and passing the key you want the value for.
```
puts ""The hours of #{store_info[:name]} are #{store_info[:hours]}.""
```",1531827934.0
jstad,TIL. Thanks for this post,1531840837.0
jrochkind,"Woah, I did know about Rake::DSL!

I started out reading the article thinking ""I wonder if Rake should have a way to make it behave more like the rspec example, since so many devs seem to want that.""

Turns out it does! Although it's not nearly as neat as I'd like, I _really_ wish I could just drop a `dsl: true` into a `namespace` and get that for me. 

I will definitely be using this.  You don't want to put _too_ much stuff in private methods, and service/helper classes are great, but sometimes a few private methods can really make things more readable and concise. (with or without supplementary helping classes, sometimes it's nice to have a re-usable-between-tasks private method to instantiate em)",1531848268.0
ProgramAllTheThings,"Cool, good to know.",1531850658.0
razum2um,"Actually, any method defined outside of module/class will be defined as private on Object: [https://ideone.com/qA6luO](https://ideone.com/qA6luO) on load. Rake just does \`load\` on Rafefile/\*rake",1531915090.0
nyekks,"I like https://github.com/httprb/http

It's fast while still being pure ruby.",1531817475.0
tbuehlmann,[https://github.com/httprb/http](https://github.com/httprb/http) all the way.,1531828489.0
editor_of_the_beast,Net::HTTP will do the job.,1531821279.0
saygun,"I personally choose `Faraday`
[Github](https://github.com/lostisland/faraday)",1531825811.0
jrochkind,"I think you ask a good question. A good question because there isn't a clear answer. 

The built-in net-http is really too low-level API to be convenient. Although if it works for you, feel free to use it! (you say you want few features and simple and lightweight... it does technically qualify, and it _is_ very popular, if you were to count popularity by number of times it gets used in open source code, since it's included in ruby! Many find it's API to be very verbose and inconvenient, too low-level.)

* [httparty](https://github.com/jnunemaker/httparty) has been quite popular, but frankly it baffles me as to _why_.  I really don't like it. It's API is very inconvenient for anything but it's happy path use cases (talking to a REST-ish API, not needing to do anything unusual), and it's performance is pretty terrible. It baffles me why it's been so popular. If it's working for you, that's fine, if it ain't broke no need to fix it, but I really don't reccommend people use it without a specific reason to.

* I have been using [HTTPClient](https://github.com/nahi/httpclient) for a while for a reasonably flexible and simple API, (part of my requirements were pure-ruby, no C extensions) -- but I'm a bit dissapointed that it doesn't get a whole lot of maintenance, bugs and feature requests are pretty slow to be fixed.  And docs aren't great and aren't really getting any better (I think there's probably an English language barrier effecting that one, alas). 

It is kind of surprising that there is no standard high-quality higher-level consensus  library for HTTP client in ruby, since so many of us do so much with HTTP. 

* faraday isn't really an HTTP library itself, it's a _wrapper_ that aims to give a consistent API on top of various other underlying ""driver"" HTTP libraries. It's kind of a _symptom_ of us not having a legit consensus HTTP library, heh. Personally, I don't totally understand it's draw, I think it's more abstraction without a lot of benefit (I guess it gives you the benefit of thinking you don't need to choose an HTTP library, since it'll theoretically let you write code that'll work with any of em...)

* Some people decided, gee, there really _should_ be a standard, just enough features, flexible API HTTP client written in pure ruby... and tried to do that with [http-rb](https://github.com/httprb/http). 

On the one hand, it's [XCKD 927](https://xkcd.com/927/), but on the other... they've done a pretty good job. I think http-rb is what I will be using in the future. 

There are a variety of other options if you want C http libraries with ruby gateways, which some people do to really maximize performance (especially with parallel requests), but I say... meh. ",1531838671.0
thibaut_barrere,"I'm now using httprb.

See https://twin.github.io/httprb-is-great/ for some good reasons (including memory use).",1531846590.0
honeyryderchuck,[https://gitlab.com/honeyryderchuck/httpx/wikis/Make-Requests](https://gitlab.com/honeyryderchuck/httpx/wikis/Make-Requests) it does simple just fine. ,1531853396.0
ejs97,I have used https://github.com/jnunemaker/httparty successfully since 2010,1531831931.0
Sqeaky,"I am sure this is a super useful feature, but the example in this post looks more elegant without it. It also claims to be a performance optimization, by using less memory, but has no measurements.

Is there a way to accomplish something like the example in the article without needing a temporary or pre-constructing the empty array?",1531807811.0
joltting,"I think I'm with everyone on this. The split block doesn't seem like a place where you'd iterate through each element.

Unless you're splitting a multi-megabyte string. I figure the performance gains for memory consumption would appear to be minimum since its most likely still creating an array that is returned regardless.


EDIT:

It would be interesting if it could be told to return an enum variation that can be chained with `inject`, `reduce`, `select` or any other number of iteration methods.",1531837893.0
intellitech,"This bothers me, as I feel #split should still return an array? Maybe should have named this version with block something else.",1531884256.0
PercyLives,"I sort of get it, but it seems inelegant.

If you want the bits one at a time, why not

  str.split(sep).lazy.select {...}

That seems to be the correct Ruby way to me.",1531814138.0
,[deleted],1531787404.0
Linupe,Your certificate expired 38 days ago...,1531752428.0
samrapdev,"Aside from the expired cert I don't see why this got downvoted so hard :(

As a newcomer to Ruby and RSpec I learned about the `on_potential_false_positives` configuration option which happened to be useful to me. Thanks for sharing",1531785535.0
,[deleted],1531756273.0
editor_of_the_beast,"If the parent `set_defaults` method is expecting a single hash argument, you should use `merge.` There's no reason to play code golf, nor is there a better way to accomplish what you're talking about anyway. This:

`super(defaults.merge(position: [-1, 1], speed: 0))`

is as minimal as it gets. You generally want to avoid accepting a single options has as an argument though, because it's too flexible. It's better to use keyword arguments and provide a name to all of the possible arguments that can be passed in.

If you modify the parent `set_defaults` method to accept keyword arguments, you can then use the double-splat operator, i.e.

`super(**defaults, position: [-1, -1], speed: 0)`

That does have the benefit of not needing any `merge` calls.

EDIT: had a really bad time with code formatting",1531744385.0
janko-m,"> Using merge doesn't seem elegant to me and it forces me to use at least one additional key in the first line which again doesn't seem elegant..

I'm not sure I understand the downside. Would either

    def set_defaults(defaults = {})
      super({position: [-1, -1], speed: 0}.merge(defaults))
    end

or 

    def set_defaults(defaults = {})
      super defaults.merge(position: [-1, -1], speed: 0)
    end

do the trick? I'm guessing that you want `defaults` to be able to override hardcoded `:position` and `:speed`. Nowadays I prefer to use keyword arguments for any option management, that way you can remove `Hash#merge` and make it more readable:

    def set_defaults(**defaults)
      super(position: [-1, -1], speed: 0, **defaults)
    end

",1531738710.0
DamaxOneDev,"Great post, didn't know/remember that",1531744755.0
mauazua,Very nice post - I've learned something new from it. :) Did you ever used `def_delegator` passing a more complicated message for it to forward than `:first` showed in the example?,1531764300.0
udzura,"Hi, I am an author of Haconiwa.

We use Haconiwa for web hosting, so-called PaaS: [mc.lolipop.jp](https://mc.lolipop.jp) (This site provides only Japanese content...)

Haconiwa is very good at resource control and event-driven hooks, so we use it for web hosting basis that requires fine resource control.

I believe Haconiwa is also suitable for general web development.

I am creating a small orchestration tool [https://github.com/udzura/marfusha](https://github.com/udzura/marfusha) but it is still under development :(

I want to know about demands use cases!",1531886845.0
paneq,"I used to use vagrant-lxc https://github.com/fgrehm/vagrant-lxc which sounds quite similar. These DSLs look nice at the beginning, but when you want to tweak something you can easily find a LXC tutorial on how to achieve it, and then you need to map from low-level commands and setting names to this high-level DSL anyway. My usecase was to isolate app/services. I used vagrant to define all of them and they would communicate with each other. Nowadays I use docker-compose.",1531726692.0
andyw8,The README is a bit overwhelming ‚Äì have you considered it maybe has too many 'features' already?,1531603258.0
turboladen,"No intent on slamming you here, but your post would be more interesting if you gave a quick blurb about your gem along with the release announcement. For my part, I‚Äôve never heard of the gem so my first inclination is to move on to another post. If you gave a quick description, I‚Äôd be more inclined to check out what you made.

Again, I don‚Äôt mean to disrespect or discourage‚Äîkudos for sharing with the community.",1531718833.0
wingtask,"For me it's about the syntax. Ruby syntax allows me to mold and shape the code like a sculptor and that gives me a satisfying emotional feeling. With ruby I spend more time thinking about what it is I want to do and much less time thinking about the constructs of the language. 

I love the philosophy of more than one way to do things (which I know is vehemently opposed my some) because it helps me write code that tells stories. It's poetic and I know it sounds like woowoo but that's how I feel about it. I know a few devs who hate ruby because they hate the syntax and when I hear people say that I think they are good developers because I think hating the syntax is a valid reason to hate ruby, it's the most interesting part of the language and for people to hate it means that at least noticed it. 

In the end I think it's more important that everyone has a language they prefer and I can respect and understand it if their choice iisn't ruby, what I sometimes have a hard time understanding are the vast hordes that have no preferred language and will program whatever is popular on stack overflow, what I don't like about it is that I believe there's a preferred programming language for everyone and finding it means getting over the indifference of seeing a programming language as a means to an end. I started programming ruby because I wanted freedom from types, I stayed programming ruby because it offers so much freedom in creativity.",1531586555.0
zverok_kha,"My short answer would be ""integrity"". Not the size of ""bag of features"" (it is easy to imagine huger ""bag"" with everything thrown on top of the top), but how consistent they play together, and how minimal is the core allowing it all (Lisp guys, don't look), and how ""stretchable"" are common idioms and ways of doing things.
I don't want to follow the uncanny ""X vs Y"" way (or ""...but have you tried Z?"" way), but in most of other languages I've worked or played with, I missed either richness of feature set, or the sense of integrity and of this ""huge possibilities from a small core"".",1531567894.0
caiocaio,"Compared to Lua? Big Number accuracy. I used to have to do a lot of number crunching and Lua was right out. When I first looked at it, there was not mature package management system, either.   

When I started programming, people were wacky about Object Orientation. It wasn't just popular, it was some kind of Jonestown-style religion. ""It's more object oriented"" was considered a perfectly good reason to do something, even if made the code more obscure/broken/unmaintainable. I could go on about how horrible it was back then. Anyway, when I first saw Ruby, it was fully and unabashedly object oriented in a way no other language was, but in a way that also encouraged eloquent, readable code. Using Ruby was a way of keeping the fashion obsessives happy while still not hating programming.  

Generally, though, I think Ruby is really tasteful, and I find it the easiest to think through problems in Ruby.",1531572739.0
Shaper_pmp,"> Overall I can see a lot of the reasons why people like ruby, but I still don't fully understand why so many love the language as much as they do.

Programmers tend to like two things - solving problems elegantly and building powerful, flexible tools.

Ruby is so expressive it's not really optimised for solving any given problem so much as it's optimised for *writing your own domain-specific language to solve those kinds of problem in*.

That means that if you're writing Ruby idiomatically and well, the first thing you do is to create a bunch of powerful, flexible tools to model your problem space, and then you use them to solve your actual problem.

This way of working tends to make programmers happy, compared to languages where you more just use core language features to define the ""nouns and verbs"" of your problem and then use more core language features to express your solution.

Plus Ruby has a nice combination of strong but dynamic typing that gets a lot of the benefits and fewer of the drawbacks of dynamic but weakly-typed languages like Javascript and strongly-typed but static/inflexible languages like Java.",1531573110.0
combuchan,"Because it's mind bogglingly expressive.  It is a joy to write with because there are so many ways to implement its syntax and you get to pick the best way for what's immediately relevant.  This makes you a much better programmer than you would with other languages.  Moreover, everything's an object and the global namespace isn't polluted with garbage.  

Doing what I have to do in Python feels like I'm trying to build a Technic racecar out of Duplo.  Or like trying to write the great american novel with a young child's vocabulary.  ",1531591297.0
bigfig,"I like the syntax, it's reasonably fast, and it's popular enough that if I use it at work I can be confident that the core and the standard libraries will be updated.  Also JRuby lets me use JDBC.

Need it be the best?  Should we care if there *is* such a thing as a best language?  ",1531574434.0
jeremywoertink,"With most other languages that you're not too familiar in, you'll write a line of code with how you think it should look, run it, and it fails. With ruby, you write code how you think it should look, run it, and it just magically works more often than not. You spend less time looking up docs when things are written intuitively vs programmatically. ",1531593398.0
shioyama,"> comparing the complicated object-oriented ruby to the simplicity of Lua (My personal language of choice), I think ruby is at a disadvantage, no matter how you look at it.

I'm a Rubyist, and I like Ruby a lot, but I've recently been looking to Lua as an alternative for its absolute simplicity, both of syntax and of implementation. I'll play the devil's advocate here and say: yes, Lua is *simpler* than Ruby, counter to what some have said here. But on the other hand, simplicity of implementation does not necessarily mean that the code you write in that language is going to be simpler.

My biggest issue with Ruby is that I personally love simple, elegant, minimalist things, and as much as I like writing it, Ruby is not such a thing. To get the ""human-like"" language it supports, it has a very complex internal implementation (compared to e.g. Python or Lua).",1531629071.0
ncsupheo,"I think you missed the mark on ruby's disadvantages. It's slow. It's very resource intensive, and single-threaded. That's okay though, because computers are fast, and you can write efficient code.

You said ""the complicated object-oriented ruby"", but being strongly OOPy is kind of ruby's selling point. [Everything](https://ruby-doc.org/core-2.5.1/Integer.html) [in](https://ruby-doc.org/core-2.5.1/Symbol.html) [ruby](https://ruby-doc.org/core-2.5.1/RubyVM.html) [is](https://ruby-doc.org/core-2.5.1/TrueClass.html) [an](https://ruby-doc.org/core-2.5.1/Proc.html) [object](https://ruby-doc.org/core-2.5.1/Object.html)! I think it's also an interesting disadvantage. The language exposes the [core of it's runtime](https://ruby-doc.org/core-2.5.1/Kernel.html) to you, which means you can do zaney crap like monkey-patch core methods.",1531589867.0
Nrdrsr,"As a consulting/agency business owner, it is my go-to language because it is ""good enough"" in a multitude of ways - ecosystem, idiomatic syntax, community/support. I can build my solution using a combination of smaller solved problems in a way that emphasizes convention over configuration. In my domain of work, that approach is helpful.

Of late though I've been transitioning to Elixir, which I think is fantastic",1531597280.0
NativityInBlack666,Probably the amount of gems there are,1531608416.0
davidpdrsn,"I highly recommend this talk https://www.youtube.com/watch?v=tbzPeLaqp10

It goes into a lot of the story behind Ruby and why the people who use it, love it so much.",1531732402.0
,[deleted],1531582229.0
dmke,"It probably won't affect the usage in Rails at all. The implementation of SASS is just a detail, you don't need to worry about, because the `sass-rails` gem will abstract that detail away for you.

Here's what's likely going to happen: The `sass-rails` gem will be updated and bundle either the Dart version of SASS (plus depend on a dart compiler) or the Dart-to-JS compiles version of SASS (plus depend on a JS runtime). From there, it will hook into the asset pipeline and work just as it always has.",1531553637.0
moomaka,"You can use `sassc-rails` today as well [https://github.com/sass/sassc-rails] which uses `libsass` instead of the Ruby implementation of sass, it's a _lot_ faster. ",1531683339.0
mperham,"I use it to serve static files and execute CGI scripts written in Ruby.

1. It comes with every Linux distro.
2. It's more stable than nginx (i.e. changes less).
3. Documentation is better for using CGI with Apache.",1531775386.0
DarkWiiPlayer,"I used apache a long time ago, and switched to nginx because openresty (and there was no easy way to write websites in lua using apache). I haven't missed apache once since then, and I really wonder if there is any good reason other than not wanting to change a running system (a perfectly valid reason, in my opinion) to use apache over nginx these days. I don't really see how that would have much to do with ruby though, it just seems like a combination of two unrelated decisions, apache vs. not apache and ruby vs. any other scripting language, I just don't see why those two decisions would influence one another.",1531564891.0
sshaw_,This guy is: https://www.reddit.com/r/ruby/comments/8pi3ja/configure_rails_app_with_apache_and_passenger_on/,1531701865.0
,[deleted],1531537137.0
fuzzyinterval,"Repost, not even two weeks. [https://www.reddit.com/r/ruby/comments/8wa71o/writing\_ruby\_like\_its\_2018\_ruby\_programming/](https://www.reddit.com/r/ruby/comments/8wa71o/writing_ruby_like_its_2018_ruby_programming/)",1531508820.0
jeremywoertink,"I use both on separate apps. Puma has memory leaks from time to time. I started using it back in 2013 and it was awesome then I found it was leaking memory. Later that was fixed and even later it broke again. I ended up moving to passenger 5+ and it lowered the amount of memory needed, plus I gained some speed.

However, I have a really large app running puma, and it's solid. I moved it to passenger, and it all went to hell so I went back to puma. 

Both apps are on different versions of rails running different stacks on different hosts. 

On the front side though, I use caddy in place of nginx. Way faster, easier to config, and free SSL out of the box.  ",1531530789.0
FooBarWidget,"Passenger author here. I am surprised that so many people here have issues with Passenger. This is not my experience based on support requests and Github issues, as well as our own infrastructures. I would appreciate it if people tell me what kind of issues they ran into or what they think should be improved in Passenger.",1531657091.0
hartator,"Specially I feel was never satisfied with the Passenger experience, it seems to a be always a weak point of our infrastructure, and every-time, we need to install it again, it seems so painful.",1531502514.0
dmke,"I'm currently running Apache/Passenger in production, and that experience is not optimal:

- When changing the site's config, usually you need to restart/reload Apache, which kills all Passenger processes. This might be fine for single-app hosts, but on some machines I'm managing a dozen Rails apps, which then *all* are restarted. The life-time of app should not be coupled to that of your reverse proxy...
- In the past I regularly forgot to modify the sudoers file, when setting up a new app (with a separate user). This was an issue up to the second deployment, when Capistrano issued a ""passenger-status: permission denied"" because the app user didn't have the rights to invoke `passenger-restart` (that might have been a problem on Ubuntu only, though). Today, I'm preparing new app deployments with Ansible.

Besides that, I have no problem running Passenger - once it runs, it runs.

However, I'm planning on replacing the current setup with

- Caddy for SSL termination plus auto-Let's-Encrypt-certificates, and as a reverse proxy to my apps (substituting `acmetool` and unwanted server restarts)
- Systemd units, because socket activation is a nice thing to have if your apps don't need to run all the time
- either Puma or Unicorn as application server (I'm not decided yet)

At a later point, I might place the app in a docker container and let `dockerd` instead of `systemd` manage the running state. This also would eliminate the need for a separate user, but I guess my coworkers need a lot of persuading to adapt a new workflow.

So far, I have a setup a single machine/app like this (for prototyping the Ansible configuration), and albeit the app runs in a small VM, it doesn't feel sluggish. I did not run benchmarks yet, mostly because we don't deal with high volume traffic (most apps are for internal use only). Once I scale this up to production machines, I will add proper instrumentation.",1531552942.0
mperham,"Obvious question and the elephant in the room then: why not pay for the Threads feature?  If you are a business making money through your software stack, doesn't it make sense to pay for good tools and support?",1531775619.0
this_is_not_nil,"> Specially now I am working on a project with lots of IO and slow clients.

Is this a problem with Nginx in front of your app-servers?

",1531745972.0
hartator,"Thanks for the great work on Passenger. 

I think the main issue is we have spawn more passenger processes to handle slow clients. Our app can process HTTP things for up to 10 minutes. But Passenger seems to assign new queries to already busy processes on a regular basis. Being able to have a lots of Threads that are allowed in Puma should alleviate our issues. Better queue management might be a fix that won‚Äôt imply to OSS threads I suppose?",1531751717.0
,[deleted],1531512530.0
jrochkind,I think both puma and passenger will serve you well.,1531851173.0
MyDreamName,Have you looked at HTTP/2 and Server Sent Events? That seems like the simplest method of achieving what you are trying to do.,1531508451.0
moomaka,"> I'm developing a SOAP webservice

Thats unfortunate, lets all give throw out an `F` in commiseration. ",1531537243.0
sshaw_,Long live SOAP. ,1531701718.0
ylluminate,"After seeing OptCarrot running at nearly 200 FPS (170-180+) in /u/eregontp's [RubyKaigi 2018 demo (Parallel and Thread-Safe Ruby at High-Speed with TruffleRuby)](https://youtu.be/mRKjWrNJ8DI?t=2m7s), I couldn't pick my jaw off the floor for about an hour.

Some people are saying ""Oh I hate that warmup time"", but a coworker told me the other day, ""You know, hearing people complain about this warmup is like complaining that it takes my car a few seconds to get up to 300 miles per hour.""  That really stuck with me.",1531502576.0
mperham,"This is great news but there's still a long way to go.  First thing I did was run `gem install bundler` and that took about one minute, about 50x slower than MRI.  Nevertheless I will try to get the Sidekiq test suite and benchmarks running to compare.

The native startup time is awesome.  A huge improvement over JRuby.

Benchmark results, see [sidekiqload](https://github.com/mperham/sidekiq/blob/master/bin/sidekiqload):

* MRI 2.4.2 performs 100,000 Sidekiq jobs in 25 seconds (~4000 jobs/sec) with 50MB of RSS.
* Truffle 1.0.0.rc3 uses about 600-800MB of RSS and performs ~200 jobs/sec.

Like I said, still a long way to go.",1531751778.0
gettalong,"Truffle Ruby is nice, I just hope it will be fully compatible with MRI. Alas, it has yet to run any of my test suites without errors.",1531552413.0
cvjcvj2,There are a Windows version in roadmap?,1531570938.0
Slimy_Hog,"I disagree with the first sentence of this post:

> Here‚Äôs an incomplete list of things you have to be familiar with in order to be a competent Rails tester: Capybara, Cucumber, Database Cleaner, factory_bot, Faker, MiniTest, RSpec, system tests, Test::Unit, acceptance tests, end-to-end-tests, mocks, stubs, unit tests and TDD.

",1531494148.0
gnuchuatwork,"add

    gem 'react-rails' 

to your Gemfile. It'll be in the root dir of the rails project. Then run 

    bundle

from the command line. 

Edit: remember to run bundler.",1531476133.0
jaryl,"If you are running out of memory, it seems to me that either you are loading all of the CSV into memory at one time, or you are trying to create a batch insert of too many rows, or perhaps both.

You can start by streaming your CSV file and do the insert one row at a time, which is easier if you need to run your ActiveRecord validations. Track the memory that you are using, which should not go over a few MBs in this base case.

Once you got that working then you can start batching them up if there is a need. You may only find that this is necessary to batch/optimize if there are many users uploading large files and your import jobs get backlogged.",1531478926.0
SagaciousCrumb,"It sounds like your concurrency situation isn't set up correctly. Either run multiple sidekiq processes (using sidekiqctl ) or mulitple threads. The latter is less memory intensive, but not thread-safe.

the 'concurrency' setting in sidekiq.yml determines number of threads, if that's 1, then only one job will process at a time. Setting that to 5 will do 5 jobs at once, but use 4-5x more memory.",1531497412.0
jamatthews,Use Sidekiq batches and enqueue a new job for every few thousand rows.,1531469496.0
sshaw_,"    my_var.not_nil?
    my_var.true?

üôÑ

`[].forty_two`
",1531519612.0
berkes,"- have scripts or workflows in place, tested, to revoke keys.
- make a greater effort for signed packages. E.g. start a step-by-step process to completely disallow unsigned packages in future.
- require ( not allow, but require) 2fa for pushing.

Be bold. Be daring. Break stuff if that makes rubygems the most secure package-manager.",1531463827.0
jemminger,2FA?,1531442853.0
Morozzzko,"As far as I understand, there's also a way to sign and verify gems during install. 

I wonder if it would prevent bad things from happening in a similar situation.",1531463372.0
jrochkind,"With rubytogether paying for work on rubygems, I'd really like to see a prioritized focus on security. it's just a question of ""when"" not ""whether"" we get bitten. Why not be proactive?  That might mean hiring consultants with security expertise with some of that money. ",1531485863.0
sshaw_,"https://www.reddit.com/r/ruby/comments/1upzq0/nobody_cares_about_signed_gems/
https://www.reddit.com/r/ruby/comments/1a3izs/sign_your_gems_with_pgp/
https://www.reddit.com/r/ruby/comments/17pb9h/lets_figure_out_a_way_to_start_signing_rubygems/
",1531513220.0
timepad,"You probably don't need `self` as the first argument (this isn't python). Try this:

    @background_image = Gosu::Image.new(""C:/Users/Staff/Documents/flappybird.png"", :tileable => true)",1531419093.0
TextileWasp,Path separators might be wrong it‚Äôs \ on windows as opposed to / on *nix,1531409501.0
Godd2,"Try a relative path to the file. I suggest putting the image file in the same folder as your game file.  (Then later organize and put all images in a subfolder).

    Gosu::Image.new(""flappybird.png"", :tileable => true)

should work after that.  If not, make double sure the filename is spelled correctly. ",1531428322.0
posixpascal,"Is it really a png? Like did you download it from the web? Do you have show file extensions on in windows? Maybe it‚Äòs .png.jpg. Can you scan the directory it is in using the shell (eg. the `dir` cmd command?). Since in your example your username is staff, is this the username you execute ruby with? Or does it belong to a different user (eg a Permission problem?). 
Does your folder or any folder in between have whitespace in it‚Äòs name?
Is your ruby script on the same drive?(eg C: not D:)?",1531428498.0
HonestAshhole,"I just downloaded the gem and the following worked for me (based on the tutorial [here](https://github.com/gosu/gosu/wiki/Ruby-Tutorial)):

    require 'gosu'
    
    class Tutorial < Gosu::Window
      def initialize
        super 640, 480
        self.caption = ""Tutorial Game""
    
        # @background_image = Gosu::Image.new(self, ""F:/media/background.png"", :tileable => true)
        @background_image = Gosu::Image.new(self, ""C:/Users/Staff/Documents/background.png"", :tileable => true)
      end
    
      def update
      end
    
      def draw
        @background_image.draw(0, 0, 0)
      end
    end
    
    Tutorial.new.show

Is this on a work machine? There could be some weird behavior because of that. IT departments can be pretty strict about what happens on company machines.

\[Edit\] If I remove 'self' I get 'The system cannot find the path specified'",1531428339.0
burenstam,"Wow - thats kinda aggressive.. Especially for something thats provided to you for free. PDF is complicated to say the least and there is a reason there are so many commercial products out there for handling PDFs.

The post includes some explanation as to why the PDF format is complicated.

> PDF is an ancient format, as old as the Web. It was introduced in 1993, though at the time it was proprietary to Adobe and not really open or popular. It became an open standard in 2008 when Adobe relinquished control, but it took till 2017 to release a standard that does not reference any patented or proprietary technology. [..]

The post recommends a library, `weasyprint`, written in Python, but barely mentions why thats better. I'd much rather read a post that explained the benefits/trade-offs of other libraries in more detail, than just bashing `wkhtmltopdf`.

I've used `wkhtmltopdf`, while not perfect, it certainly got the job done. ",1531407132.0
classhero,"I wish bloggers would give up on that terrible title meme. Makes me cringe every time I see it, complete turn off",1531408822.0
xiongchiamiov,"Meh. When I was last using it, sure it was less than ideal, but everything else just straight up didn't work or was impossible to debug and get producing something reasonable-looking. Maybe that's changed now with that new library, that would be great. But calling it ""harmful"" is a drastic overstatement.",1531405105.0
basically_asleep,I love how they admit at the end that they are using wkhtmltopdf anyway. So clearly for all the bad points it is still the best option available.,1531415373.0
JoyousTourist,"Yea it's not a great experience but it's the \_best\_ option out there as far as I know. I have heard of some people using a javascript type of library.  


[https://parall.ax/products/jspdf](https://parall.ax/products/jspdf)  


I haven't used it myself but I just know of it.",1531418846.0
pro547,Someone needs to create a generic library / service that can accept an universal AST to render a PDF out.  Then we wouldn't be locked into these libraries.  I'm looking at Prawn and JSPDF as examples.,1531482907.0
in0pinatus,"I love SeeingIsBelieving.

My full installed list is A File Icon, DashDoc, Git, GitGutter, Ruby Slim, SeeingIsBelieving, SidebarEnhancements, Better CoffeeScript, HTML-CSS-JS Prettify, Pug, Sass, Vue Syntax Highlight. Obviously not a Ruby specific selection, but all in use with my Rails projects.

You might want to consider a different font as well. I fell for [Go Mono](https://blog.golang.org/go-fonts) when it came out, haven't looked back.
",1531366788.0
notmymiddlename,"I don't use many, currently I have the  following installed:

* Emmet - Helper for writing HTML.
* Fold Comments - Collapses comments with a single key binding.
* TrailingSpaces - Highlights trailing whitespace.",1531370329.0
nujaud,"Some I can't live without:

- [Git](https://packagecontrol.io/packages/Git)
- [GitGutter](https://packagecontrol.io/packages/GitGutter)
- [Git Conflict Resolver](https://packagecontrol.io/packages/Git%20Conflict%20Resolver)
- [GitSavvy](https://packagecontrol.io/packages/GitSavvy)
- [DiffView](https://packagecontrol.io/packages/DiffView)
- [FileBrowser](https://packagecontrol.io/packages/FileBrowser)
- [AdvancedNewFile](https://packagecontrol.io/packages/AdvancedNewFile)
- [Click To Partial](https://packagecontrol.io/packages/Click%20To%20Partial)
- [Rails Latest Migration](https://packagecontrol.io/packages/Rails%20Latest%20Migration)
- [Rails Migration List](https://packagecontrol.io/packages/Rails%20Migrations%20List)
- [RuboCop](https://packagecontrol.io/packages/RuboCop)
- [SublimeLinter](https://packagecontrol.io/packages/SublimeLinter)
- [TrailingSpaces](https://packagecontrol.io/packages/TrailingSpaces)
- [Emmet](https://packagecontrol.io/packages/Emmet)

And as a theme:

- [Boxy](https://packagecontrol.io/packages/Boxy%20Theme)",1531426888.0
Saithir,"GitGutter and GitSavvy.

The second one adds UI for managing branches and commits from within Sublime, if your workflow requires a ton of branches like mine, it's pretty useful. It also has resets, reflogs, blames, diffs, stashes, whatever else. The rebase UI is a bit weird, but I don't use it anyway so whatever.

Also ColorHighlighter and Indent XML (I use to have to work with random XML files sometimes so it's useful to be able to read them like a human)",1531419830.0
400921FB54442D18,"Personal favorites include:

* SideBarEnhancements
* StringUtilities
* GitGutter
* BracketHighlighter
* Alignment
* AlignTab",1531432232.0
jrochkind,"> Rails magic, which I personally hate (hello to ROM and all dry-rb stack), begins in clear_attribute_changes, which removes changed comments_count from Dirty attributes

You hate dirty-tracking until you need it, and then you're really glad it's there! 

If you really don't want dirty-tracking, and the ensuing overhead (performance or conceptual)... I am not sure if there's a way to disable it in AR. Would definitely make sense to let you disable it.  (This would obviously also disable Rails partial updates feature, which depends upon it. (SQL update statement that only includes changed columns, on in Rails by default, great for avoiding certain concurrency problems you didn't even realize you were avoiding). 

But you're going to miss it. :)",1531350954.0
boonestock,"Cheers. I think Ruby is a wonderfully expressive language. For me, that is what makes it fun to program in.",1531357690.0
eRetArDeD,"I KNOW RIGHT?! 

I never knew I could feel love for a programming language, but here we are. ",1531361364.0
bxclnt,"And the community! Matz is nice, so we are nice. ",1531375791.0
jb3689,Quick scripting is one of Ruby's best uses. It has a lot of great useful shell'isms,1531361248.0
fobiasmog,"I started career as a Perl developer, and for me Ruby is like Perl, but more expressive and with OOP. I like both of them :)",1531387042.0
DuroSoft,"If you like ruby, you should definitely try crystal. All of those benefits, plus static typing and C/C++ runtime speeds",1531367650.0
rlafranchi,+10 NIM u/NimiqTipbot ,1531415184.0
DarkWiiPlayer,"Coming from Lua, I have somewhat of a love-hate relationship with ruby. Sometimes I just love how easy it is tu use, other times I hate how object oriented is. Usually it comes down to this: if the scope is large enough to do some preparations for your code, there are better choices. If, however, you just want to get down to busyness logic without having to think about anything else, Ruby is certainly the way to go.",1531482847.0
NativityInBlack666,"Ruby is my favourite at the moment, I mean implementations like this are just pure pornography:

0..10.each{|i| puts i if i>5}",1531393026.0
lordmyd,"For me there are only 2 languages which feel like they have been really well designed - Ruby and Clojure. Both have a charismatic leader whose design principles had a large aesthetic component unlike, say, PHP, Python and Java where pragmatic compromises are the driving force.",1531794477.0
akito_mashua,"I was totally unaware of this. Thanks, looks great, I'm going to give it a try.
",1532243539.0
gordonisadog,Or you can just use Sequel for a much more elegant API.,1531348263.0
Linupe,One should note that Arel is considered private API by the Rails core team.,1531341870.0
hmaddocks,Good article. I learnt a couple of things. ,1531337274.0
honeyryderchuck,"Use \[sequel\]([http://sequel.jeremyevans.net/documentation.html](http://sequel.jeremyevans.net/documentation.html)).

Really, if you want to have all the ORM conveniences while also having an efficient, powerful and compliant query builder, you should be using it. 

Since the article is only talking about the query builder capabilities, I'll only talk about those. AR's query builder DSL catches up slowly. They've  only recently added the #or or #left\_outer\_joins options (rails 5 only), while sequel has had support for it for +5 years.  Still waiting on ""greater than"" or ""lower than"", multi-insert or even upsert support (again, sequel supports this). 

For the ""you have ARel for that"" camp, I'll just repeat what has already been said in the thread: it's not a rails first class citizen (it's private API). Also, it's excruciatingly hard to write a complex query in ARel compared to writing it in pure SQL, with no gains in performance (too many objects to generate a SQL string). In fact, I'd argue that it's better to install sequel \*\*with\*\* AR, generate the SQL with sequel and pass it to AR's \`find\_by\_sql\` (I've done it once for multi-insert). 

For the ""AR comes with Rails, so it's convenient"", I'll leave you with a guide that helped me install sequel on rails some time ago (it was for a rails 4.2 application, but it should be fairly similar to adapt to rails 5): [https://gitlab.com/honeyryderchuck/templates/blob/master/rails/how-to-load-sequel-in-rails.md](https://gitlab.com/honeyryderchuck/templates/blob/master/rails/how-to-load-sequel-in-rails.md) hopefully it lowers the barrier for the interested.

I'll also recommend you to \[read Sam Saffron's blog entry about AR\]([https://samsaffron.com/archive/2018/06/01/an-analysis-of-memory-bloat-in-active-record-5-2](https://samsaffron.com/archive/2018/06/01/an-analysis-of-memory-bloat-in-active-record-5-2)), where AR's memory bloat is discussed. The Discourse team has been solving performance bottlenecks by replacing AR's ""convenience"" with handmade SQL statements.",1531391192.0
janko-m,"I was once excited about Arel as well, but switching to Sequel made me realize how much it would be easier to use if AR had virtual row blocks ([Squeel](https://github.com/activerecord-hackery/squeel) was an attempt to bring it to AR, but was never merged). To illustrate, with virtual row blocks you can rewrite

    Country.joins(:people).where(Country.arel_table[:gdp].gt(100).or(Person.arel_table[:birth_date].gt(Time.now - 10.years)))

into

    Country.joins(:people).where{(countries[:gdp] > 100) | (people[:birth_date] > Time.now - 10.years)}

I now find Arel far too verbose to be considered useful, as /u/honeyryderchuck already said.",1531418102.0
edendark,">In Rails 5.x, there is no static .uniq method for ActiveRecord::Base class.

You can still use the method `.distinct` though to achieve the same result in 5.x.",1531314471.0
jim_tech,"My Favorite:  
[http://api.rubyonrails.org/classes/ActiveRecord/Batches.html](http://api.rubyonrails.org/classes/ActiveRecord/Batches.html)",1531314486.0
akira410,"Hey Op, if you're the author of this, in the Sum section the article uses an Order model as an example with Client model SQL as the result. That sudden object switch might confuse people. Mostly because the Order example uses a :total column and the generated SQL uses an :id column.
",1531334646.0
noitems,"JavaFX seems to be dead even for Java devs, I'd be surprised if this gets any responses here. ",1531342648.0
InCaseOfEmergency,"[Brakeman Pro Desktop](https://brakemanpro.com/features#dt) is written with JRubyFX.

Unfortunately there is no good, easy, cross-platform GUI toolkit for Ruby. I'm not sure that exists for any language, actually. JRubyFX is _decent_, but largely undocumented and not well-maintained at this point. I think you will have to use Java 8 to have it work, and read lots of JavaFX documentation.",1531536381.0
NaiveExplanation,"Man I really enjoy Rails but this is like repeating yourself ""everything is fine"" in loop",1531305415.0
ihaveaninja,Very eloquent way of putting what I was thinking while reading the other article :),1531302314.0
menge101,"Your problem is with how Windows manages files and reports disk space, not with Ruby.

If you are very low on disk space, depending on how your virtual memory is managed, it could just be that your system is using all empty space as swap space.

Run disk cleanup and defragment your drive, perhaps. ",1531250348.0
Pr0ducer,Empty the recycle bin?,1531272136.0
jrochkind,See also https://github.com/dry-rb/dry-initializer,1531278681.0
sshaw_,"Who will be the first to write a C extension for this? 

[class2](https://github.com/sshaw/class2) and FTW!",1531264190.0
Enumerable_any,Do you have an explanation for why the handwritten initializer is not the fastest one?,1531316017.0
davidpdrsn,"Yes. It uses keywords and my code generates an initializer that takes a Hash of options. Turns out keywords args are a bit slower then hashes. However I figure most people would use keyword args. So that‚Äôs why I benchmark it against that style.

You can see exact benchmark code in the repo. ",1531322347.0
indenturedsmile,Why would anyone use `else` within a begin/rescue? Serious question because I've never heard of that even being a thing. ,1531266574.0
BadMinotaur,"I apologize if I‚Äôm out of line by saying so, but why is there such a proliferation of articles on this sub trying to convince users to go to other languages like Crystal and Elixir? 

I‚Äôm here for Ruby discussion, tips, and projects. I want to use Ruby, not Elixir. ",1531232998.0
aspleenic,"Just had a big talk with an Elixir dev about how adoption of Elixir and Phoenix in businesses and startups has already waned. Many startups are still using Ruby and Rails.

There are plenty of these articles and Elixir can do a lot. What it can't do is help people get jobs.",1531244485.0
realntl,"IMO the Elixir community missed a big opportunity by making Phoenix the centerpiece of their marketing efforts. It led organizations to make a Rails vs. Phoenix decision, but unfortunately, most Rails shops have invested _so much_ in their Rails monolith that a rewrite is off the table. This is a problem for _anyone_ endorsing tooling for the Rails (and by extension Ruby) community. Ultimately, Rails shops are not worth wooing, they're generally long past the point where they can consider other languages or architectural styles.

I've heard the same thing from so many people at different companies: ""we dabbled in Elixir, we liked it a lot, our auth service is actually written in Phoenix, but it hasn't really caught on beyond that."" (substitute ""auth service"" for any other smallish peripheral concern)",1531255301.0
ioquatix,Calling File.write in a loop is a bit silly. Won‚Äôt it be opening writing closing the file each iteration?,1531258866.0
andyw8,"I agree that Cucumber is very often misused. But this article misses the point.

It's wrong to think of Cucumber as a testing tool ‚Äì it's more of a collaboration tool. The aim should be to write examples that illustrate requirements in a way that can be understood and discussed with people who aren't developers.

There's very little value to a scenario which says ""Then I should see those details on my profile page"". That might catch an exception in the code, but it doesn't help to explain any of the domain rules. It's far too abstract.

[https://cucumber.io/blog/2014/03/03/the-worlds-most-misunderstood-collaboration-tool](https://cucumber.io/blog/2014/03/03/the-worlds-most-misunderstood-collaboration-tool)",1531184271.0
northrupthebandgeek,"I'm not sure if I prefer the Capybara versions of the proposed Cucumber specs.  To me, it feels like an attempt to make Ruby look too much like English.  Compare with Minitest, which seems to do a better job of actually feeling like, you know, Ruby; your expectations are just methods on the things you're testing.  Maybe I just don't like Capybara, or I'm more familiar/comfortable with Minitest.

Regardless, though, I agree with the gist of the article.  Even when Cucumber is used as intended, I feel like one would be better off keeping the English specification and its Ruby implementation separate (see also: README-driven development).",1531195816.0
realntl,"I am not a fan of cucumber, but it's worth learning and understanding BDD before dismissing it.",1531242599.0
ecco256,"The problem described in the article is what is known as imperative versus declarative tests. Developers seem to have a tendency to make tests imperative, ie describe -how- they are achieving something, not -what- they are trying to achieve. Cucumber can be a great tool to describe your domain knowledge/business logic. These can be read, understood and even verified by your domain experts. It also helps new developers get up to speed with the domain and its complexity without being overwhelmed by the ‚Äòaccidental complexity‚Äô of infrastructure and implementation choices.

There are a lot of good heuristics for useful cucumber scenarios: when they mention stuff that deals with an api choice, or buttons, or data structures etc then you are describing implementation choices, not your domain.

When your cucumbers only use domain language  and describe the ‚Äòessential complexity‚Äô of your domain then they can be hugely beneficial, in my experience anyway",1531233947.0
janko-m,"Based on the examples you provided in the blog post, I would definitely agree with you that Cucumber doesn't seem like a useful layer over just using Capybara directly.

However, things get different when you're testing an HTTP API. I maintain [tus-ruby-server](https://github.com/janko-m/tus-ruby-server), an implementation of the HTTP protocol for resumable uploads. The [original acceptance tests](https://github.com/janko-m/tus-ruby-server/blob/f8869faae28f8b13891d2863c1b6dc8592799ac6/test/server_test.rb) were using a library similar to rack-test for making Rack requests. It was difficult to read, I didn't really know which test is testing what.

So, I decided to [rewrite](https://github.com/janko-m/tus-ruby-server/commit/66c9d2ed9eeefb0942fd7e54eb766fe9a9d2006c) the test suite in Cucumber. That was a clear win for me, I was able to organize my scenarios much better and could easily tell what's happening. Even though I'm a developer, English is still the easiest for me to read. And the Gherkin language felt like it was made for testing HTTP APIs, see this scenario for example:

    Scenario: Correct Upload-Checksum
      Given I've created a file
        """"""
        Upload-Length: 11
        """"""
      When I make a PATCH request to the created file
        """"""
        Tus-Resumable: 1.0.0
        Upload-Offset: 0
        Content-Type: application/offset+octet-stream
        Upload-Checksum: sha1 Kq5sNclPz7QV2+lfQIuc6R7oRu0=

        hello world
        """"""
      Then I should see response status ""204 No Content""
      And I should see response headers
        """"""
        Upload-Offset: 11
        """"""

Yeah, you could argue that I could have organized my Minitest tests better, in a similar fashion than the Cucumber scenario above. But there was nothing in Minitest (or RSpec) to show me the way. Having to categorize tests into `Feature`/`Scenario` and actions into `Given`/`When`/`Then` really helped shape my acceptance tests into something nice.",1531221197.0
Jdonavan,"Let's make those steps look like a real test framework.

    Given /^I am signed in$/ do 
      visit(SignInPage).login_from_fixture
    end
     
    And /^I provide my name and age details$/ do
      visit(EditUserPage).populate_and_save
    end
     
    Then /^I should see those details on my profile page$/ do
      visit(ProfilePage) do |page
        expected = data_for 'profile_page'
        expect(page.full_name).to eq(expected['full_name'])
        expect(page.age).to eq(expected['age'])
       end        
    end
    ",1531232521.0
planetmcd,/u/jasonswett I've condensed my counter argument here: https://www.reddit.com/r/ruby/comments/8xsbyu/the_real_value_of_cucumber/,1531250272.0
classhero,"Depends what you're trying to do. If your goal is to write your own graphics library, you'd probably want to study GL/DirectX (and you *could* do this in Ruby, search for ""opengl ruby bindings""). But if graphics programming is your only goal, there's no time like the present to diversify your language choices and widen your toolbox :). 

On the other hand, for learning the foundations like data structures, Ruby can really help you out - for example, being able to [drop a REPL into the middle of an algorithm](http://pryrepl.org/) and experiment, or [drawing a graph of your data structure's state](https://github.com/glejeune/Ruby-Graphviz), are both hugely valuable learning tools. ",1531152373.0
jeremywoertink,Ruby2d or gosu are the easiest to roll with. There's a few others that are more complex and do more things though.,1531164671.0
MuCowNow,"I like a clear left to right reading.

    number > 0 and do_something

or this ...

    number > 0 and region == 'west' or begin
       multiple_actions()
       without_having_to()
       do_an()
       if_end_block()
    end
",1531162560.0
moomaka,"There are some really weird lines of code in there...

`true if number > 0` why would you even write that? Why would you not just write `number > 0`?

> `return true unless true || flase` Do you find that easy to read and figure out? I know I don‚Äôt.

I don't find it easy to read because it's insane code, not due to the `unless`. 

",1531135593.0
aspleenic,"I find this article more confusing than anything else. The use cases are pretty straightforward for both if and unless.

That said, by all means, do what you are comfortable UNLESS it makes the code less readable/usable to the next person looking at it.",1531145614.0
ProgByPractise,I was fine with if vs unless till now and I think the article may have confused my understanding.,1531195476.0
OneNeptune,"This article actually highlights one of the weaknesses of AMS; nested object serialization. Using a jsonapi.org compliant serializer will save you a lot of headaches down the line. I recommend Netflix‚Äôs fastjson_api. 

At the very least use the oj gem to improve the speed the serializer produces json. ",1531143566.0
pjdavis,"Echoing the support for fastjson_api or Jsonapi-rb, but if you're unable to go that route for right now, [simple_serializer](https://github.com/wmakley/simple_serializer) is a better replacement for AMS, until you can work your way toward a jsonapi.org compliant serializer",1531157062.0
Serializedrequests,"I don't recommend adopting AMS right now. The README even says not to use it, and I encountered numerous issues with it that forced me to write an API-compatible replacement after investing heavily in it. https://github.com/wmakley/simple_serializer

(Although somebody else already did this and used the same gem name. I need to rename mine before I can release it on rubygems.)",1531160868.0
Hell_Rok,"If you mean hundreds per request I'd strongly suggest a background worker like Sidekiq.

If you mean one per request then I don't think the web server itself makes much difference, it'd be the imaging library you use (rmagick, minimagick, etc) that would cause performance issues.",1531112853.0
janko-m,"You might want take a look at [imgproxy](https://github.com/DarthSim/imgproxy) for on-demand processing. It's written in Go and uses libvips under the hood.

I don't know if you want on-demand processing or processing on upload via a background worker. If you want to implement processing in Ruby, you might want to use the [ImageProcessing](https://github.com/janko-m/image_processing) gem which is a high-level wrapper around ruby-vips (I'm the author :)).

To answer your question, I also don't think that the choice of the web server would make a difference here. What's important is that you use a CDN when serving the images.",1531161291.0
sprayAtMeBro,"If you can do it in the background, use an MQ. If you have to do it in real time then most likely you shouldn‚Äôt use ruby for it *unless calling out to something faster. ",1531119752.0
rocco88,Sidekiq for background processing and mini\_magick for image processing(inside Sidekiq job). ,1531127504.0
paneq,"I don't know if you are building an app which primary goal would be to do image processing but if not. If you are building something else and you don't need any special features for image processing, consider using [https://www.imgix.com/](https://www.imgix.com/) instead of doing it yourself in your servers. We've been using them in a few apps and we've been pretty happy about the results. It's nice to no longer need to deal with resizing, cropping, transforming images etc. ",1531128230.0
cheald,"Just use [thumbor](https://github.com/thumbor/thumbor) if you need realtime image resizing. It's mature, battle-tested, fast, scales easily, and is quite robust.",1531158941.0
moomaka,"> A similar inefficient updating issue occurs when N queries are issued to update N records separately, instead of using update_all.

That one isn't so simple. `update_all` may be more efficient on the query side, but it bypasses validation / callbacks. Use it with caution.",1531140486.0
JanDintel,"Very interesting article! I like how the performance issues where split up per inefficiency cause.
From my experience it's also good to keep your Rails logs open during development to spot some of these issues early one.",1531086465.0
scytherswings,"Thanks for sharing this, very interesting read. Has anyone played with their docker image yet? I'm curious to see if it's worth setting up.",1531158694.0
manys,"Yes, for some reason a lot of posters seem to think that Ruby people who are interested in Rails are too dumb to find /r/rubyonrails and /r/rails, and if you say something about that they say ""just tryna be helpful, GOSH,"" but I think you're pissing into the wind.",1531076948.0
jrochkind,"I guess that post in your screenshot got highly voted? I don't know why. Looks like it's got 74 votes. Obviously the reddit 'best' algorithm takes votes into account. 

What are you looking for as a response?",1531141890.0
Anjin,"Not mentioned on that blog post is that if you are a true beginner, the author of the Ruby on Rails Tutorial Michael Hartl, has a whole series of beginner tutorials that teach you all the basics that you need to know to get started as a web developer. Things like the command line, git, HTML / CSS, etc, and like the Rails Tutorial all the beginner tutorials are online for free. If you want the screencasts for everything, including the Rails Tutorial, there is a $29 /mo subscription plan - much cheaper than buying the Rails Tutorial screencasts. ",1531078766.0
TelosMayCry,"As a current student, i'm doing [The Odin Project ](https://www.theodinproject.com/) which is an open source full stack web curriculum going over the ruby, rails, html, css, javascript, etc. It is entirely free and work at your own pace and i am in love with it. ",1531091890.0
Muchaccho,"No mention to the most comprehensive free resource to learn Ruby and Rails, [The Odin Project](https://www.theodinproject.com/).",1531132536.0
etagwerker,"Unfortunately [tryruby.org](https://tryruby.org) now redirects to [pluralsight.com](https://pluralsight.com), to something completely different. 

I'm not sure if they plan to bring it back or it's dead. :( ",1531141324.0
moomaka,"jemalloc isn't a bad recommendation but you should probably also look at your thread pool sizing. High thread counts is what really causes jemalloc to have the effect it does. Running more than ~2x cpu cores threads is likely not helping your app at all and if you aren't running an intermediary connection pooling system for your database (pgbouncer, etc) then you're probably hurting your database performance as well. In other words, Sidekiq's default thread pool size isn't a great idea. ",1531069786.0
gaffneyc,"We‚Äôve had really good luck using the jemalloc buildpack (http://github.com/gaffneyc/heroku-buildpack-jemalloc/) when we deploy to Heroku. We did a big push four or five months ago where we set it up for several of our ([Collective Idea](https://collectiveidea.com)) client‚Äôs sites most saw some big wins. One had been fighting memory leaks for months with 2x dynos, just switching to jemalloc dropped their memory usage by half for web dynos.",1531106615.0
DevMunchies,whats your goal? rails had a lot of learning upfront by enforcing its opinions but its supposed to help once you've learned it. If you are just getting started I might even try with something simpler like sinatra and then move over to Rails once you've learned more and why you'd need it.,1531028626.0
ch3wmanf00,"it was hard for me at first as well.  I don't think I could have learned it without Bates' Railscasts.  Check 'em out.  They're old, but great.",1531033301.0
holyjeff,Just take it slowly. You wont master or understand everything at once.,1531041851.0
crawling949,"It was a step learning curve at first. But once I got over that initial hump, it got easy and beautiful. But with rails and conventions you have to juggle a few things that have to work. But once it clicks, it‚Äôs glorious ",1531028067.0
jacobherrington,"It's definitely not just you! Everyone has to learn this stuff at some point. 

Feel free to PM me with questions. ",1531071049.0
TylerP3358,"Like most things in programming, what seems to be hard at first eventually opens itself up organically to understanding.

That is, if you take the time and effort to learn, implement with a bit of rinse and repeat, things usually start to click.  At least, that is how it is for me.  I am in the first 10 months of my programming adventure (a very long and immersive bootcamp) and that is how my learning process seems to trend.  Learn new stuff, get excited, get frustrated, keep plowing, and said frustrating stuff becomes easy.

Rails is beautiful but it has a lot to it.  A lot of ""magic"", as we like to say :D ",1531152973.0
ScootsMcGootz,"It's a common wall that people hit because while doing basic tutorials like Codecademy are a great starting point, far too many people make the mistake of thinking ""completed JS course"" == ""I know JS"". These tutorials are great at teaching the basics of syntax, but they don't dive into higher level abstractions and concepts like those you listed above, which are necessary to work on serious software projects.

Keep at it, ask questions, and don't be afraid of the difficulty. Everyone started from zero.",1531256297.0
Z0neNp,"You might wanna go for a paid bootcamp at Udemy / edTx / Coursera. Sites like Codeacademy are great for introducing yourself to a certain programming language.
However, what you're talking about (especially, Ruby on Rails) has a couple of concepts, design and conventions involved.
You certainly might find out about them by yourself, but a paid course will make the process much faster (3-6 months) depending on amount of free time",1531028506.0
,"Well, it's only been two days, it takes a while to get everything and depends on your source base.  Before I did any coding at all I did a lot of database work (Filemaker Pro, MySQL, SQL Server) so I came in with a good basis Database design, query design, etc...and still active query drives me nuts.

It takes a lot of time and practice, and also you have to decide what matters to you (does knoing how the server works matter in the beginning?  Not really, and even when you're ready to deploy there are many services that will help)",1531067965.0
ASIC_SP,"assuming you asked in a ruby subreddit by mistake, are you looking for something like this: http://newcoder.io/tutorials/ ?

those projects are in python 2, learning and converting them to python 3 would sure be a good portfolio I feel.. ",1530965044.0
Randy_Watson,Hartl Rails is probably the most common recommendation.,1530961425.0
hornet2359,"Checkout Udemy courses, that‚Äôs how I learned and now have a job as a RoR programmer. ",1530970424.0
justalever,"Not sure if this is what you are after but I have a YouTube channel/blog where I build with ruby on rails to learn while doing so. My focus is actually building apps rather than single concepts. The end result may not be 100% portfolio worthy but it could lead you on a path to creating something as such. 

Check out:
YouTube.com/c/webcrunch or web-crunch.com ",1530994343.0
kab0b87,"Here's what I did : I knew what I wanted to build so I started with hartl to get an idea on the basics. Setting up what I needed etc.  From there I just kinda started building and googling what I needed to figure out.  

I wrote a lot of code to how I thought it would work and then googled the error and figured out what I did wrong and how to fix it that way.  
The downside to this way is I probably broke a lot of convention.   But everything functions exactly the way I wanted so I guess that's a bonus. ",1530982968.0
notromda,wow.  I didn't know about reduce being the same as inject... but as a word it makes much more sense than inject!,1531147169.0
jawdirk,"Yes. The ruby internals have a complex and efficient sorting algorithm that pragmatically minimizes the number of calls to the block. The block's responsibility is purely to provide the comparison information, and it will be called on actual elements in the sorted object as needed. There is no guarantee about which elements will be passed to the block, or the order. That is completely up to the sorting algorithm, and could change between ruby versions.

",1530911845.0
LuneBlu,It's called the spaceship operator.,1530917548.0
jrochkind,"Looks like at least in 2009 MRI used a ""quick sort"" algorithm. (This is the name of a specific sort algorithm, not just describing a sort as quick :) ).  You don't really need to know what algorithm is being used under the hood to use it, and shouldn't rely on any particular algorithm. Yes, there is a sort algorithm implemented under the hood. https://www.igvita.com/2009/03/26/ruby-algorithms-sorting-trie-heaps/

If you haven't read/learned about sort algorithms, there's lots of reading you can do on it, it doesn't need to be ruby specific. There have been decades of computer science research into sorting algorithms, how to sort a list of things as efficiently as possible. ",1530913271.0
cheald,"That's what shared examples are for.

    shared_examples_for ""a monitored website"" do |args|
      describe args[:name] do
        context 'the website' do
          it 'should be online' do
            expect(args[:domain]).to be_up
          end
        end
      end
    end

    it_behaves_like ""a monitored website"", name: 'Oregon Laws', domain: 'www.oregonlaws.org'
    it_behaves_like ""a monitored website"", name: 'Public.Law', domain: 'www.public.law'
    it_behaves_like ""a monitored website"", name: 'Dog Snog Dot Blog', domain: 'dogsnog.blog'

Or:

    shared_examples_for ""a monitored website"" do
      context 'the website' do
        it 'should be online' do
          expect(domain).to be_up
        end
      end
    end

    context ""Oregon Laws"" do
      let(:domain) { 'www.oregonlaws.org' }
      it_behaves_like ""a monitored website""
    end

    context ""Public.Law"" do
      let(:domain) { 'www.public.law' }
      it_behaves_like ""a monitored website""
    end

    context ""Dog Snog Dot Blog"" do
      let(:domain) { 'dogsnog.blog' }
      it_behaves_like ""a monitored website""
    end

Doing it this way lets you abstract your common tests to shared (and optionally parameterized) behaviors, or you can rely on `let` values set within your context, rather than having to pass everything in. This also means that you get an accurate line number for your failing specs - `it_behaves_like` call site shows up in the stack trace, which makes tracking down the test much easier.

There is a place for dynamically-generated tests, but too many of them lead to an inscrutable test suite.",1530911745.0
nooobdy,"Pry is awesome, every ruby dev should know aobut it. Especially with show-doc/source even working for c-methods.

A while ago I held a talk about pry. You may find find some more things in the slides (navigate with down/right arrows)

[https://tessenow.org/talks/pry/](https://tessenow.org/talks/pry/#/)",1530899519.0
tortoise888,Doing python development now at work and holy heck do I miss pry so much.  IPython just doesn't hold a candle to it.,1530923208.0
pornflocos,"Woow such an incredible guide to power up my development with Pry!! 

Thanks mate! ",1530896641.0
pjdavis,"In your second example, you don't need to include Enumerable to get sort on `me.emails`.
When you assign the array to the `emails` accessor, its just assigning an array which already has the sort method in it. 

    class Person
      attr_accessor :emails
    end
    
    me = Person.new
    me.emails = [""home@gmail.com"", ""work@gmail.com"", ""newsletters@gmail.com""]
    me.emails.sort
    # => [""home@gmail.com"", ""newsletters@gmail.com"", ""work@gmail.com""]

works exactly the same.",1530902981.0
moomaka,In practice `Kernel#enum_for` or `Kernel#to_enum` are a _lot_ more useful. ,1530907825.0
zverok_kha,"I am just wondering, what's the point of republishing content into your own YouTube channel? (I see content's license allows that, and you provided the link to original, but still?)

BTW, for Confreaks-authored videos, they typically provide very convenient [page](http://confreaks.tv/events/rubyhack2018) with talk abstracts, author names and links to previous-year conferences.

I don't think republishing (if license allows that) is some kind of ""sin"", but I suppose it is somehow more ""fair"" to NOT do it unless you have something to add (like remixing videos for some specific topics, making exceprts to stress out some points and so on). Just ""republish the whole conference in different channel ot split out audience/likes"" is somewhat questionable.",1530880700.0
,[deleted],1530874703.0
se767,Why don't you show post #2 and #3?,1530882757.0
-TURBOMAN-,"Great article.

>There are scenarios where SPA makes more sense. If you need to offer a high level of interactivity, have to manage a lot of state, execute complex client-side logic, etc. an SPA framework will make your life easier.

I see this argument a lot.  It would be really helpful for me if someone could quantify, and give examples of  *""high level of interactivity""* and, *""a lot of state""* apps.",1530836716.0
ksec,">Turbolinks is heavily inspired by [pjax](https://github.com/defunkt/jquery-pjax) and has gone through [several revisions](https://github.com/turbolinks/turbolinks/wiki/Turbolinks-5-FAQ).

Why hasn't Github adopted Turbolinks and stayed on pjax? Just wondering.

I have always always been on the HTML side of things. Speed from Turbolinks is great. It gets a little slower if you are far from the Origin. And for most, I have yet seen a JS frontend implementation that feels\* fast. 

[Dev.to](https://Dev.to)  was the first one that I thought, wow.... this is fast and feels very pure HTML, when in fact it is based on preact.js. And [Dev.to](https://Dev.to) is built on Rails as well.

I think the SPA rabbit hole example, has nothing to do with TurboLinks, SPA, Server Rendered, or any other tech or ideology. It has to do with the fact, no one, not a single one in those camp, saw the bigger picture , the complexity. Most of them saw a new toy, new tech to play with, and decided newer is better. Reinventing the wheel, or as Alan Kay put it, reinventing the flat tire. It happens in both hardware and software. The wisdom that went into some of these older pieces of software were ignored and pointed the finger where old = worst. new = better.

In Silicon Valley where you get hipster under the age of 30 dancing around new tech every generation, while older people finally saw the cycle repeating itself. ",1530874760.0
SerKnight,"I really enjoyed this. It affirmed how I feel about a lot of modern web development work I've done over the past few years, while giving legit context about every choice. I ask this question to the community though.. How do I bring back simplicity to the workplace, without sounding like I want to 'regress' with technology tools. My company wants to API everything with rails, and build these react / redux / recompose that totally complicates every feature. There is no reason in my mind to create these additional codebases to maintain when the 95&#37; of the feature could be handled beautifully with simple html, css, and *dare I say* jQuery! So to reiterate the question, how can I bring back simplicity without sounding like I don't want to learn the 'new best practice' tools?",1530913391.0
,"I'm almost sure this is the same interactive content:

https://ruby.github.io/TryRuby/",1530831723.0
polyglotpurdy,Awhile back Code School was acquired by pluralsight. Looks like they've completely scrapped the Code School content and redirected everything to pluralsight. ¬Ø\\\_(„ÉÑ)\_/¬Ø,1530841287.0
headius,"This is very sad, since the old one was JRuby and had a very high level of compatibility. Plus \_why's artwork and tutorial was in there :-(",1543851880.0
horrofan,i guess i meant to ask ... is it possible?,1530817743.0
,[deleted],1530819334.0
sshaw_,"Easy with `String#gsub`: 

    irb [2.5.0] (class2)$ removed = []
    => []
    irb [2.5.0] (class2)$ str1.gsub(/[#{Regexp.quote(str2)}]+/) { |s| removed << s; """" }
    => ""2""
    irb [2.5.0] (class2)$ removed
    => [""abc"", ""e""]
",1530844168.0
luckygerbils,"If you really want to use delete you could just run delete on each character in turn and get only the letters that the delete set expression matches:

    str1.chars.chunk{|c| c.delete(str2).empty?}.select(&:first).map{|c| c[1].join}
    => [""abc"", ""e""]

It would be more efficient to just rewrite the delete expression as a regex and scan though:

    str1.scan(/[abc1e]+/)
    => [""abc"", ""e""]

Edit: Are you actually interested in getting the semantics of [delete](https://ruby-doc.org/core-2.3.0/String.html#method-i-delete), i.e. remove all characters that are in the set specified by the argument, where ""a-d"" means a, b, c, d and ""\^a"" means ""anything not the character a""? Or are you interested in the positional intersection of `str1` and `str2`, i.e. what parts have the same characters at the same positions in the other string and what don't?

If the latter then something like this might be what you want:

    str1.chars.zip(str2.chars).chunk{|a,b| a == b}.select(&:first).map{|_,c| c.map(&:first).join}
    => [""abc"", ""e""]",1530850821.0
three18ti," Why wouldn't you post the original source? 

https://www.youtube.com/watch?v=VjR3GU0-vpc",1530802901.0
RumbuncTheRadiant,"A somewhat dismayingly content free talk.

A TL;DW; don't watch the video, follow these links...

* https://celluloid.io/ (although I'd argue instead of this one, try https://github.com/socketry/async)
* http://trailblazer.to/
* http://rom-rb.org/
* http://dry-rb.org/
* https://sorbet.run/

ps: Avoid the Python 3 tragicomedy,   Enable frozen string literals in your code *now* and start updating _all_ your gems to do so.



",1530846689.0
jrochkind,"Can someone expand on what he means by ""higher-order functions""?  Just methods or procs that return procs, is that all that means? ",1530809249.0
ohyeahbonertime,I went from Java to Ruby and I will never go back. ,1530830342.0
moomaka,"It's rather interesting to watch this 'modern' movement using techniques from decades ago. DI containers, static typing, 'service objects'... None of these are 'new'. None of them are 'modern'. None of them are even particularly interesting topics. In many cases Ruby / Rails or Python / Django explicitly made choices to avoid them e.g. DI containers are fucking _awful_ to work with. It mostly just seems like people rediscovering shit no one liked working with yet they think it's the best thing since sliced bread. I'd be so much nicer if folks would skip the trends and just write easy to understand code.",1530886207.0
sshaw_,"> Better Practices 
> Write code against boundaries 
> Isolate...
> Dependency Injection

These are good programming practices that have been around long before 2007. My takeaway from this is: what many in the community may have told you about application design was wrong. Sorry.  

> Kernel#then, Method#curry, etc...

Has anyone here done functional programming in Java? 

> sorbet.run

The Browser is The Platform of the 21st Century ‚Ñ¢Ô∏è; JavaScript is quirky and has dynamic, weak typing. I can understand the need for type safety/transpiling. 

> sig(foo: Integer).returns(String)
> def bar(foo)
>   foo.to_s
> end

Do people really want to write Ruby like _that_?

If your problem benefits from types  ‚Äìor you just want them, just choose a type safe language (I'd recommend [Groovy](http://www.groovy-lang.org/)).

For the web, if I had to choose between writing web apps in Java with DB mapping and HTTP mapping annotations vs writing web apps in Ruby with sorbet style type safety I think I'm going with Java. 


",1530841955.0
criveros,"We are switching from Ruby to Java where I work. I enjoy writing Ruby for sure, but it doesn‚Äôt scale that well.",1530806885.0
keyslemur,"Honestly I kinda wish they'd just call blocks functions. It'd be more intuitive.

Consider a map implementation:

    def map(collection, &function)
      new_collection = []

      collection.each do |item|
        new_collection.push(function.call(item))
      end

      new_collection
    end

Now granted these could be abbreviated more, but I'm being verbose explicitly here. Admittedly I tend to abbreviate it as `&fn`, though I almost prefer to use `call` over `.()` and `[]` for teaching as it very explicitly delineates what's a function versus what's not.

Any time I teach Enumerable methods, block has always been a stumbling block (ehehehe, puns). The name isn't intuitive, and causes confusion.

You might want to mention what happens when you call map directly on a hash, as the coercion to an Array can really trip people up.

Also, don't go and scare the newbies with Functors quite yet :)",1530823445.0
Enumerable_any,"> this looks kludgy and wasteful to me

It is. It's procedural programming using objects for whatever reason. If `FooClass` is not a value/domain object, but some kind of dependency, gateway, service object or another abstraction you also lose all benefits of coding against an interface (DI, testability) by mixing instantiation and usage.",1530782612.0
iesartia,"It depends, but if you are not assigning to any variable `FooClass.new` then I prefer to declare `method_a` as class method for `FooClass` and call directly `FooClass.method_a`.",1530780391.0
moomaka,It's not particularly common and you are correct that it is a bad idea.,1530793537.0
jrochkind,"In what way do you think do you think avoiding a temporary local variable is _wasteful_? 

Not sure what you mean by ""converted to a singleton"". 

I'd say it's not unusual.  

I think you're saying both that you find it confusing to read, and that you're worried about performance. (And maybe other things too?).  Which are all kinda separate things. 

I dont' find it confusing to read, any more than any other method-chaining on invocation (say `string.collect(:lowercase).split(' ')`. But ""easy to read"" is of course subjective, I guess whatever you are or become used to is easy to read or not. 

I can't see any way it would even possibly be less performant in any way than:

     foo = FooClass.new
     foo.method_a

At best, _that's_ the one that has to be optimized by the compiler to be no less performant than `FooClass.new.method_a`, no?  But really I feel relatively confident that any difference between the two is undetectable. ",1530795634.0
BLITZCRUNK123,"> it feels like it should at least be assigned to a variable

i mean, _maybe_ it makes sense to assign the `FooClass` instance to a (temporary) variable first and then call `method_x` on it. but that's purely a matter of aesthetics. there's nothing more or less performant about doing it either way (at least not in a way that will make a practical difference)

> or converted to a singleton if possible

if the singleton pattern makes sense, then go for it, but that's a decision you make when you design `FooClass`.

all we know from the snippet being studied is that `FooClass` has a method called `method_x`, and that at _one_ callsite, we don't care about keeping a reference to the instance of `FooClass` around beyond the `method_x` call.

a singleton may indeed be the right design decision, but just because you see `FooClass.new.method` a lot is not an indication of that",1530798521.0
keyslemur,"Most of the time it's done to abstract certain logic into a class, especially that which ""belongs"" to something else.

That said, I find that it's exceptionally rare that you need more than one or two methods on an interface that retain enough context to necessitate a class.

If your constructor needs no arguments, it does not need to be a class in most cases. Just use singleton methods and maybe `module_function`. It'd literally be a container of functions meant to model a certain domain.

    module Math
      module_function
      
      def add(a, b) a + b end
      def subtract(a, b) a - b end
      def multiply(a, b) a * b end
    end

    Math.add(1,2)

We'll ignore the immediate practical usage of this Math module as that's not the point.

In this case it would make no sense whatsoever to make a Math class. All of the functions have no context dependency, nor do they rely on context from other functions.

I would argue in cases where you _do_ need to save context, you're making a bit more of a mess and creating a maze of mini objects to follow to find where a certain amount of state is being hidden. That may be a bit of a functional bias that I've picked up over time as well.",1530824214.0
banister,"I would usually memoize the object like so:

    def foo
      @foo ||= FooClass.new
    end

And then invoke the methods like:

    foo.method_a

And

    foo.method_b
",1531588658.0
hmaddocks,"It‚Äôs a pretty common pattern for method objects like service or query objects. 

I prefer 

    FooClass.new.()

:)
",1530779234.0
jrochkind,"While I'd love more non-Rails ruby-focused stuff here, I don't think the reason we don't got it is because there's too much Rails stuff (Rails is of course still ruby). 

I don't think an attempt to split the traffic we do got between two subreddits is gonna help increase any kind of content or discussion you'd like to see more of, whether or not you are successful in doing that. It's not like /r/ruby is all that high-traffic. 

I'm just happy if /r/ruby doesn't turn nearly exclusively into a beginner-help-if-you-don't-like-stack-overflow forum, like /r/rails has become. It's definitely been moving there. 

PS, there is also already /r/learnruby/ (which seems to be even lower traffic, it's barely alive).  I'd be thrilled if the SO-like content moved there from here, but it is what it is.",1530807274.0
nakilon,If anyone is interested he may make a subreddit icon or propose something for sidebar so I won't just copypaste/edit the sidebar from here.,1530766157.0
nakilon,"> 0 points (38% upvoted)

Downvoting already 0 points post just for the fact I started a subreddit? This clearly shows toxicity of the audience that wants /r/ruby to be about Rails since they mostly don't even realise the difference.",1530776137.0
jrochkind,"For some code I was working on for a gem, I wanted to encapsulate something in a class for single-responsibility/separation-of-concerns (ie, to keep my code tidy), and I realized a 'private' class would be useful. So nobody would be tempted to think this class is public API in any way. 

So I googled how to do it and found this post. 

The `private_constant` method is not obvious, I don't think I've ever seen it before. 

So I re-posted the OP I found on google, even though this has been posted to /r/ruby before, 2 years ago. ",1530763463.0
morphemass,"I like private classes since if you stick to ""1 responsibility per class"" they allow for some very clean code. If you combine with common accessors for return type (to_s, to_i, to_json, etc) its possible to end up with something that documents the internal type system (I avoid the term 'self-documenting').

The problem I've found is that most people are unfamiliar with it as a clean code technique and I've found it hard to encourage adoption and had opinions given that its 'not worth the effort' or 'that we should use modules instead'; somewhat missing the point but meh.",1530774492.0
valadil,"Ty for posting!  This is a concept I‚Äôve tried to reach for, but never found. ",1530793090.0
iconoclaus,so what do folks here think?  should all controllers delegate to operation/service/query objects? Should your services folder read like a full list of all responsibilities and capabilities of your app?,1530717496.0
sshaw_,"Unless you're using the chain or responsibility or command pattern or designing some sort of ""plugin"" system I'd recommend that you wipe from your brain the idea of creating a ""Service Object"" with a single `#call` method. ",1530838599.0
jrochkind,">       sender = ApiSender.new
>       sender.call(data)

Or even: `ApiSender.new.call(data)`",1530758638.0
deedubaya,"This post doesn't mention single-responsibility, but I think it's very, very important when writing *good* service objects.",1530810489.0
ZaWertun,"There is error in the example:

`""A STRING"".upcase # => ""a string""`",1530709578.0
joshminnich,"This is a fantastic write up. I‚Äôve been looking for something like this to share with some of the newer Ruby devs at work.

Thank you!",1530717656.0
sshaw_,"

> when it comes to strings with spaces in them, the conversion is not straight forwards...
> ""First Last Name"".gsub(/\s+/, ""_"").downcase.to_sym # => :first_last_name

What's wrong with `""First Last Name"".to_sym`? 


> "" abc "".strip # => ""abc""

This only works for ASCII whitespace

    irb [2.5.0] (class2)$ s = "" abc\xc2\xa0""
    => "" abc¬†""
    irb [2.5.0] (class2)$ s.strip
    => ""abc¬†""
    irb [2.5.0] (class2)$ s.gsub /[[:space:]]+/, """"
    => ""abc""",1530846524.0
dbalatero,This might be one way: [https://gist.github.com/dbalatero/9eae3aeddc493f29c80cc2d52d456809](https://gist.github.com/dbalatero/9eae3aeddc493f29c80cc2d52d456809),1530747962.0
jrochkind,"I don't understand what's going on there. But what determines what's listed in the case for each `linestoshow`?  How did you know what lines to write there in each case? I bet it's actually determinable mechanically from the `linestoshow`.  That's how you fix that code, don't hard-code the text positions for each linestoshow, write a method that _calculates_ them and creates them based on `linestoshow`. ",1530810006.0
mbs348,Ankane gets my vote for ruby hero this year. Guy has tons of awesome ruby libs to his name. ,1530726411.0
iconoclaus,"Keep 'em coming ‚Äî the more analytic projects for Ruby, the better.  Anyone used SciRuby for matrix math yet?",1530699501.0
kalpatris,"Great stuff!

Devs often complain about Java being boring and old-school, but it never ceases to amaze me how cool Java and Java-related techs are (JDK, JVM, GC etc.)!

Literally, state of the art, almost alien technology. And it seems that more cool stuff is coming.",1530720556.0
three18ti,"Can I use this to compile my jruby app to native? That... would be cool... 

Really interesting writeup.  I find it interesting that you see better performance the CRuby. Would love to know more details about your benchmarking methods/environment.

I've always wondered, why JRuby? Aren't you basically using a JIT to JIT? Wouldn't that cause _worse_ performance?!?! Lol. 

So, thanks! I'm totally intrigued by JRuby now.",1530684626.0
jrochkind,It's just bundler-audit hosted on the web? OK I guess. ,1530730902.0
joshmn,Shopify-ers: What's the analytics stack like?,1530645171.0
byroot,Shopifier here. I'd be happy to answer questions people might have. Especially if they are about CI & CD since it's my specialty.,1530652307.0
ksec,">Over the years, we moved from shards to the concept of ""pods"". A pod is a **fully isolated instance of Shopify** with its own datastores like MySQL, Redis, memcached.

Am I correct to say ""80K requests per second at peak"" are all these pods combined?  Do the ""600K merchants"" get a pod of its own? Or likely many small merchants share one pod and large merchants gets its own pod?",1530661288.0
RebornOrDontCry,Great work,1530617179.0
keyslemur,"`each_with_object` may be a good thing to mention as well, but then you risk turning it into an entire Enumerable post. `reduce` tends to be a confusing subject for a lot of newbies, so it may be a good idea to expand upon that in a later post.

Enumerable itself is a goldmine worth of topics to talk on.",1530824447.0
jrochkind,"It is good to remember that `Enumerator` exists. 

It is not clear to me how this is better than simply putting a rescue inside the `each`.  I guess, as the OP says, it does let you ""handle it on the console"", and do other things interactively in a repl more easily. ",1530623191.0
iesartia,"this is [source](http://blog.bitwrangler.com/2018/03/11/resumable-iterators.html) 

P.S. next time remove twitter link : )",1530623388.0
stanislavb,Spam?,1530661528.0
deedubaya,"Turbolinks of versions past wasn't that great.

The latest version, along with turbolinks-ios and turbolinks-android, are easy to implement and work great.

If you still think turbolinks is junk but haven't tried the latest version, you're missing out.",1530642135.0
toadkicker,"Things i do with turbolinks:

Delete it.",1530591251.0
Blimey85,"I‚Äôve tried VSC and while it‚Äôs not bad, I don‚Äôt think it‚Äôs all that great. I‚Äôm a big fan of RubyMine and Sublime Text. Atom is also really good. I think it‚Äôs all just personal preference. It‚Äôs nice we have so many choices for quality editors.

Speaking of editors, do any of the currently popular ones have the autocomplete the way TextMate did it? It was simple and a lot of completions were included. I have Emmet in RubyMine but it‚Äôs just HTML stuff I think. ",1530587066.0
kobaltzz,The Ruby Solargraph extension provides some of the Ruby auto completion. It is helpful but not always on target. I think RubyMine still wins in this area.,1530594391.0
cheald,"Not in the Ruby sense. Collections tend to hold multiple Ruby objects. Ruby strings are one object.

That said, Ruby strings do have methods such as `#each_char` which give you an Enumerable interface to the string. You can iterate through them, index specific bytes or characters out of them, etc. You can transform any enumerable into an Array, which would be a collection. For example:

    > ""foobar"".each_char.to_a
      => [""f"", ""o"", ""o"", ""b"", ""a"", ""r""]",1530563091.0
moomaka,"Ruby doesn't have 'collections', I'm guessing you're coming from Java given the terminology?

In Ruby, `[]` is just a method, they can be implemented by any class (even your own) and can do whatever you want it to. e.g it provides index access in `String` and element access in `Hash`. An object that can be iterated, which is probably as close to a Java collection as you'll find in Ruby is an `Enumerable`, anything that implements an `each` method can be turned into an `Enumerable` trivially in Ruby.
",1530564675.0
4rch3r,"It depends on what you mean by collection... Its parent object is Object and it does extend Enumerable.  You can explore the entire class definition here and see that #[] is implemented in String:

https://ruby-doc.org/core-2.4.0/String.html#method-i-5B-5D",1530563110.0
jrochkind,"I'm not sure if there's any specified definition of ""collection type"", in what context are you asking, for what purposes?

It may be a ""collection type"" in some scenarios and not in others. I don't think this is a technical term in ruby. ",1530570349.0
hmaddocks,POODR. Not specifically about testing but can change the way you think about testing Ruby. ,1530560227.0
sshaw_,Not specific to Ruby but worth checking out: http://xunitpatterns.com/,1530758546.0
Atagor,"I like this article. It's not about testing in Ruby but about testing in general: http://blog.codepipes.com/testing/software-testing-antipatterns.html. 
I strongly believe that every self-respecting developer should be aware of the topics highlighted in the article.",1530567943.0
,How is the pragmatic programming rspec book - i have it but haven't had time to get into it,1530578237.0
anhkind,TDD book by Kent Beck is worth a look. ,1530619709.0
yevgenko,"GOOS are the best :)

* POODR
* 99bottles of OOP
* Test Driven Development in Ruby: A Practical Introduction to TDD Using Problem and Solution Domain Analysis",1532475665.0
mperham,"Side question: why put the license at the top of each file?  Just wondering if there's some motivation I'm not aware of.  Most people seem to add a LICENSE file and `spec.license = ""MIT""` to the gemspec.",1530556137.0
nateberkopec,"I'm a simple man. I see /u/ioquatix, I upvote.",1530538481.0
TheMoonMaster,"Very cool, but went to dive into the code and it's super hard to read with those tabs unfortuantely.",1530540140.0
x1a4,your code is using `add_resource` as a singular. Try the plural.,1530576246.0
andyw8,"According to the @rubymonk Twitter profile, the company behind it (C42 Engineering) was acquired by @gojektech. You could try asking them.",1530499729.0
DifferentialSoul,"Yes, it's such a fantastic site. I'm going through it right now and honestly it's one of the best experiences I've had learning any language. Hopefully someone can get a hold of them.",1530496199.0
ioquatix,"Let me know if I can help host it, could put it on Heroku?",1530515170.0
x1a4,"(unrelated note: `subsets_helper(power_set=[], nums, temp_nums=[], 0)`  probably isn't doing what you think. This looks more like a Python call than Ruby. Ruby keyword arguments [have a different syntax](https://ruby-doc.org/core-2.5.1/doc/syntax/methods_rdoc.html#label-Keyword+Arguments))

You're passing object references around as arguments, and then mutating them.
This isn't a pattern you want to be using in Ruby if you can help it.

For example, when you do `temp_nums.pop` in your `else`, that pop also mutates the `power_set` array, as `temp_nums` has been inserted into it. This is probably not what you want, and is probably at root of the problem you're talking about.

Here are a couple of other ways to approach this:

    # Iterative
    arr = [1, 2, 3, 4, 5, 6]
    iterative_result = arr.each.with_object([arr]).with_index do |num_acc, idx|
      num, accumulator = num_acc
      accumulator.concat(arr.combination(idx).to_a)
    end
 
    puts ""Iterative result: #{iterative_result.sort}""
 

    # Recursive
    def subsets(nums)
      result = []
 
      result << nums
 
      nums.each.with_index do |num, idx|
        trimmed = nums.reject.with_index { |num, trim_idx| trim_idx == idx } # do not mutate nums
        result.concat subsets(trimmed)
      end
 
      # uniq because subpieces can boil down to duplicate results.
      # We could also just convert to a Set instead.
      result.uniq
    end
 
    recursive_result = subsets(arr)
    puts ""Recursive result: #{recursive_result.sort}""
 
    pp ""difference of iterative and recursive sets: #{iterative_result - recursive_result}""

",1530466785.0
,[deleted],1530455729.0
442401,"No, that's not Ruby.",1530471660.0
wldcordeiro,So aliases and git hooks but in a Ruby program? ,1530467813.0
stanislavb,I've been using `git_remote_branch` for quite some time. It seems git-god could be a similar tool but more customizable :),1530506769.0
NelsonBelmont,"""I'll make my own GIT interface with ruby and hookers.""",1530633471.0
bemend,"I've tried to write idiomatic go code and ended up with nearly 20% of my code on 2000 lines being a variant of

    if err != nil {
        return nil, err
    }

because I *had* to pass errors between components instead of ""dealing"" with them on the spot (it seems for most go users to mean to log it). Not to mention all the ways in which the code is harder to follow because you can't easily create abstractions with types while keeping the static type-checking. I've also ended up with an architecture very similar to what you'd do with erlang but without the benefits of the OTP framework.

Never again but for simple command line tools and simple daemons without much logic in them. I've learned ruby after learning go and it's much nicer for building abstractions and managing exceptions.",1530433301.0
stanislavb,"In fact, this example is so discouraging. I just can't imagine writing golang after Ruby's beauty and expressiveness :|",1530441196.0
x1a4,"not enough information. what state is required? is thread safety an issue?

My tendancy is that anything that requires reading or writing state should be at the instance level. If a method is just a function applied to its arguments, I will consider a class method, but if one of those arguments is an instance of the class, then it should just be an instance method.",1530381680.0
jrochkind,"In general, I'd prefer class method. Because it's clear at the call-site where it comes from, and because it can't possibly effect or be effected by the state of the instance where the call happens if called as a class method (well, unless you pass the instance in as an arg, which this example isn't doing. I would not write a class method where an instance is passed in as an arg).  So you know it's not coupled to anything else except it's args (in this case no args, great). 

I'd save module mix-in for places that really need it -- that use instance state, or call other instance methods.  Module mix-in is essentially a form of multiple inheritance. Which can actually be great sometimes (Enumerable being the class example of something everybody likes), but should be used sparingly, because can also lead to a mess of inter-coupled code.  If a method can easily be provided as a class ""utility"" method instead, I'd do so.",1530533852.0
janko-m,"Great article. I often use the 

    cook_dinner() or raise(RuntimeError, ""Not in the mood."")

idiom, as it emphasizes `cook_dinner()` to the reader and puts the `raise` as a secondary thing, and I still get to keep both on the same line.

The [And/Or RubyTapas](https://www.rubytapas.com/2013/08/15/episode-125-and-or/) first introduced to me the use cases in which `and`/`or` are a better fit, and since then I learned to embrace both.",1530382120.0
VeryGoodGoodGood,"Overall good article and explanation. 

Kind of just confirms I have no reason to every use AND and OR. The neat tricks above are less intuitive and harder to read than a begin rescue block, and the ‚Äúand next‚Äù doesn‚Äôt read as well as ‚Äúnext if‚Äù. ",1530361457.0
javawag,"Shoes is the standard one, but like many of the GUIs I found, it requires JRuby as it uses the JDK to render platform-agnostic UI. If you don't use JRuby there's something called Flammarion, which is a gem that uses Chrome to render GUIs in HTML (but exposes a ""nice"" API). 

Anyway, /u/tony-sunny's list is a great starting point and contains links to Shoes and Flammarion.

Personally, I couldn't find a really ""good"" Ruby GUI, so I've started writing my own in C++ (using something called Dear ImGui), and using sockets to ""talk"" between Ruby and the ""UI Server"". It works pretty well (and you can write a library in any language that supports sockets to talk to it), but it wouldn't be ready to release to the wild quite yet unfortunately.",1530345621.0
Rinakles,"Depends on what kind of GUI you need, but I've found [FXRuby](https://www.ruby-toolbox.com/projects/fxruby) to be suitable for most projects. 

Not a fan of Shoes. It might be popular, but I wouldn't consider using it for anything but simplest of GUIs.",1530346141.0
OtavioHenrique,Have you tried GTK? [https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby.html](https://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby.html),1530470657.0
tony-sunny,http://shoesrb.com - I haven't tried it but heard good things about it. Also there is a nice list here - https://www.ruby-toolbox.com/categories/GUI_Frameworks,1530344480.0
otakugrey,"GTK?

Or Green Shoes? 
https://github.com/ashbb/green_shoes
https://rubygems.org/gems/green_shoes/versions/1.1.374",1530358075.0
colby-swandale,Hi! RubyGems maintainer here. You want to checkout our [SSL troubleshooting guide](https://bundler.io/v1.16/guides/rubygems\_tls\_ssl\_troubleshooting\_guide.html) which will help solve your problem.,1530312291.0
BuilderHarm,"For a quick and dirty fix you can change the https to http in your gemfile,  if i remember correctly. 

There is a better solution, I'll see if i can find it once I'm on a pc.",1530305498.0
hartfordhobo13,"1) Antipatterns in Rails (Ruby ON Rails.. Still Ruby though)

2) Refactoring Ruby

3) Ruby Science (Thoughtbot)",1530406647.0
OtavioHenrique,I pretty much recommend Practical Object Oriented Design in Ruby - Sandi Metz,1530471189.0
Tomarse,"Practical Object Oriented Design in Ruby - Sandi Metz

Design Patterns: Elements of Reusable Object Oriented Software - Kevin Zhang (not Ruby specific, but worth a read)

Rails, novice to ninja - Goodrich and Lenz",1530346916.0
nakilon,"Useless and harmful thing. There were years before this guide, years when Rubyists cared about risks of starting using bad practices -- everyone had patience and respect but then some kid said ""hey, let me tell you how to write every single character of your code"" and the hell began among unexperienced masses who did not realise how much the guide sucked. So much unnecessary work were added and so many bugs were made during years after people started using this ""guide"" that was compiled from random rules that were not carefully tested. All the rules were rewritten to opposite, then back, now every rule is ""you can write A, also you can write B, also C, whatever"" that has no point at all. If you want a good style, use the one Seattle guys use -- I came up with the same one independently and then was happy to discover their code and that the world is not all that stupid to use bbatsov's guide.",1530407672.0
D1ceWard,"What's the difference with :

    config.active_job.queue_adapter = :sidekiq

In your application.rb ?",1530520834.0
modnar42,"I would consider adding some ‚Äúwhy‚Äù to the start of your README. Particularly, I look for 

 - why did the author make this?
 - who is the intended audience?
 - when is it intended to be used vs. other tools in the space (e.g. pry, byebug)?

This kind of information makes it easy to figure out how it‚Äôs supposed to fit into my tool chain. ",1530290481.0
palkan,"Like the ideaüëç 

One thing that came into my mind: it would be great to have a shorter syntax. For example:

```
putd obj, ‚Äúdebug msg‚Äù
```

So, it‚Äôs just like `puts`. Yes, monkey-patching, but in this case it seems reasonable. And it‚Äôs always possible to make this syntax optional.",1530352066.0
jrochkind,"> this means we‚Äôre going to have to type out this monstrosity every time we work with it in our code:

>      ‚Äú/students/#{@student.id}/grades‚Äù

> The whole point of Rails is to have code magically be written for you. 

Eh, I don't know if I'd say that's the whole point (or even any point at all) of Rails. 

In this case, the point is actually not saving you keystrokes, the point is if you _change_ the route, but leave the path helper the same, all your code is still good and doing the right thing, you don't have the exact URL hard-coded all over your code, because it's subject to change. 

Which is still a good point. ",1530294845.0
DoubleJarvis,"I think you should use `case` statement here:

    input = gets.chomp
    
    puts case input
         # 'i' flag makes regex case insensitive
         when /y/i then ""confirmed""
         when /n/i then ""cancelled""
         else ""invalid input, enter yes or no""
         end 

this will match any variation of Y/y/yes/Yes/yEs and similar with No   ",1530262405.0
n00bintraining,"Thanks for the fast explanations everyone.

I've edited my regular expressions a little to make sure there will be no undesired results (thanks for pointing that out /u/DoubleJarvis)

I hope you all will have an excellent weekend!",1530268781.0
in4mer,"Reading a picture of text is pretty hard, maybe cut & paste next time",1530245249.0
overmotion,Update your gems. bundle update ,1530247540.0
albertDadoyan,When i start rails server i get warnings...but all work fine...,1530244203.0
Mallanaga,You‚Äôre setting some constants multiple times. Search for them. Make sure they‚Äôre only instantiated once.,1530248647.0
albertDadoyan,"The problem in fileutils version...
sudo gem uninstall fileutils (version 1.1.0)
sudo gem install fileutils -v 1.0.2 

",1530250779.0
albertDadoyan,Thx all :),1530253472.0
HellzStormer,"The `==` method means are those 2 objects equal (usually as in, the same value).

The default implementation that is in Object doesn't try to do any guessing and just says it's the same value if they are the same object.

You can see that
```
Object.new == Object.new #=> false
```

Most classes then override the `==` method to give the the ""same value"" kind of behavior. In the case of Hash, it's about every key/value pair being `==` from one hash to the other. The doc you read was simply for `Object`'s method.

Note, if you want to actually check for trully being the same object, you are looking for `equal?`, which is the same as `==` on `Object`, but the doc specifically says shouldn't be overriden. Yeah, the doc could have been clearer by explaining...",1530236200.0
x1a4,"1) If you're mounting any volumes into the container, you should at least consider running under a different UID. It's a best practice, but can be a pain in the ass, which is why it's skipped in the first place.

2) I have a convention of containerizing any and every app to `/src`",1530214219.0
drbrain,"If you weren't told by your instructor to use C to complete this chapter of the textbook use Ruby's Matrix and Vector classes as /u/x1a4 said.

Unless you already know C and have implemented linear algebra in C, a C extension to do this is going to take you a lot, lot longer than the small amount of extra waiting you're might do using the Ruby classes.",1530213241.0
jrochkind,"For purposes of your textbook, I'd just do it in ruby, is it just a learning exersize or does performance actually matter?

But, coincidentally, there was recently a reddit post about a new library to make this a lot lot easier. This is _not_ the way people normally do this up to now, it's a new thing, may not be mature, but:

https://www.reddit.com/r/ruby/comments/8o9e0h/a_rubylike_language_for_writing_ruby_c_extensions/

If you're asking about how to create something in C entirely unrelated to ruby that does not need to inter-operate with ruby... you're in the wrong subreddit. :)  (And I have no idea. I used C in school 20 years ago for some classes, but haven't written in it since). ",1530220146.0
x1a4,"It's possible, but I would suggest using the Ruby [Vector](http://ruby-doc.org/stdlib-2.5.1/libdoc/matrix/rdoc/Vector.html) and [Matrix](http://ruby-doc.org/stdlib-2.5.1/libdoc/matrix/rdoc/Matrix.html) classes to prototype what you're working on first. I think trying to do this out of the gate in C is very much premature optimization.

If you really have your heart on a C extension, maybe start with [Rubygems' Guide](https://guides.rubygems.org/gems-with-extensions/). The bottom links to other sources of information on how to do this.",1530210041.0
hartfordhobo13,"And I would not reinvent the wheel unless you need to, and judging from this question, there are a lot more technical questions you probably want to figure out before proceeding. It sounds like you are just trying to iterate over each row in the database until you find an exact or partial match - and I think you may be approaching this the wrong way. If you are using a SQL database, you can look at the LIKE operator ([https://www.w3schools.com/sql/sql\_like.asp](https://www.w3schools.com/sql/sql_like.asp)) - but you wouldn't iterate over anything. Now if you're trying to build your own database search algorithm / search-engine from scratch, that is very different, but you would be reinventing the wheel and this wheel has indeed been invented MANY times over.",1530210095.0
cheeeeeese,elasticsearch my dude,1530237145.0
jrochkind,"There's no good way to do what you are trying to do. 

If you really want to re-invent a database index though, you want to look at [""inverted indexes""](https://en.wikipedia.org/wiki/Inverted_index), you certainly could implement one in ruby, I don't know if there are any existing re-usable implementations. 

If you want to do it without any persistent index structures like that to make it perform well... it doesn't really matter, whatever works works, what you're describing will work. There's no ""best"" way to do it under those constraints, cause there's no good way to do it like that. :)

I suppose as a learning exersize (not actually a good idea for real code) you could use ruby Hash's to implement an ""inverted index"" all in memory. That might be an interesting exersize. ",1530217599.0
,"if you use PostgreSQL it has full-text search integrated, look into the implementation of this gem for ActiveRecord https://github.com/Casecommons/pg_search",1530212095.0
smellyskater,"As long as you are aware that it will yield a suboptimal solution to the problem its a great project to undertake. 
Databases are fun pieces of software to work on.
Without understanding the structure of your data its hard to give you concrete advice. 

I'me assuming you are using hashes/arrays or other enumerable data structures. Otherwise my advice would be to and include the [Enumerable mixin](https://ruby-doc.org/core-2.5.1/Enumerable.html) in the representation of your table(s)/tree(s)/string(s). 

It ought to teach you a lot about powerful features in like enumeration, blocks, objects. 
I think ""String#match?"" and ""enumerable#select"" will be handy. 
you might also want to read a bit about [indexes](https://en.wikipedia.org/wiki/Database_index)",1530214891.0
menge101,"The solution you are looking for has nothing to do with Ruby specifically.

You are operating in the realm of pure algorithms at this point.  Implementing it in Ruby will be the easy part, designing a well thought out algorithm and accounting for edge case behavior is a tough challenge sometimes.

The things you are going to need to design are replications of how databases work under the hood.

The solution you mention above will work, but not at any kind of scale.

I would store my quote as a refrencible object, maybe a frozen string would do.  What you don't want is for any given quote to be copied.  Thats wasting memory.  You want references all around.

You want to use a [b-tree]([https://en.wikipedia.org/wiki/B-tree](https://en.wikipedia.org/wiki/B-tree)) to store individual letters.

every time you form a full word of letters, you add a reference to a collection of references to strings that represent every quote containing that word.",1530237484.0
moomaka,"As others have mentioned, this isn't a good idea for production use. But it's great as a learning experience. 

The two things you probably want to start with are inverted indexes and n-gram indexes (google these). The former is really simple to implement, the later is also trivial to implement in a naive manor but you can do more interesting things with them like accepting minor spelling errors pretty easily. 

EDIT: You also may find `n-gram` referred to as `tri-gram` in a lot of cases. This is just because n = 3 tends to be the best value for english, though I'm not familiar with how it varies across other languages. I'd guess 3 is still a good value for languages with a latin-ish alphabet but maybe not for other languages.",1530555522.0
jossiekat,"as one mentioned ""elastic search"" and I would also add SOLR.",1543069240.0
hartfordhobo13,\*in Ruby,1530209425.0
SantorumSessions2020,"Dude that‚Äôs not what Ruby‚Äôs for. If you did manage to build a search engine in Ruby it‚Äôd be slow as heck, use a ton of RAM, and chance are the search results would be a lot less relevant than if you use the right tool for a job.

That said, the simplest possible Ruby ‚Äúsearch engine‚Äù would just iterate through an array of strings and return the ones that match the ones where article.include?(search_string). 

Play around with it if you‚Äôre masochistic, but don‚Äôt deploy it in production! üòÇ",1530217206.0
jryan727,"+1 for form objects. Once you start using them, there‚Äôs no going back. The MVC stack starts feeling right even for complex forms involving multiple models and contextual fields. ",1530212310.0
somazx,"Good article. I didn't know about custom validation contexts, and the Solution #5 I could see making good use of in many contexts.",1530197838.0
mr_aes,"Great article Karol, I didn't know there was so much under the validations hood. ",1530199392.0
tbuehlmann,FYI: Calling `extend` on a User object clears Ruby's method cache for that class (and subclasses). :\,1530278908.0
iconoclaus,"although it‚Äôs not the rails way, all the more reason to separate model from both database and validations? that would be the ddd way of doing things and this issue wouldn‚Äôt even arise.

https://martinfowler.com/bliki/ContextualValidation.html

also, i can‚Äôt agree that accepting terms of service during registration is a mere UI issue - this seems like a business rule. ",1530201997.0
hedgehog1024,"> It‚Äôs a good idea to delete as much flow control code (i.e. ifs, and case expressions) as possible. It improves adherence to the Single Responsibility Principle and makes the program more readable in general.

Am I the only one who considers this statement questionable?",1530192325.0
schneems,Another Rust/Ruby project is Helix https://github.com/tildeio/helix,1530138510.0
tinco,"hey man, I've got some commits that I never merged to ruru and ruby-sys that might be interesting to you. They're implementing fibers and ruby procs. They're still a little bit segfaulty but quite close to being correct I think:

[https://github.com/tinco/ruby-sys/commits/master](https://github.com/tinco/ruby-sys/commits/master)

[https://github.com/tinco/ruru/commits/fibers](https://github.com/tinco/ruru/commits/fibers)

Unfortunately my employer changed focus and I couldn't continue work on it.",1530170453.0
i_know_sherman,"What is meant by ""continuation of ruru""?",1530140196.0
x1a4,"I think either controller or request specs are fine, honestly. I still use controller specs. Wrote several today, actually.

The rest of my answer assumes you're working with Rails, which seems like the case here.

At the end of the day, your controller actions are just instance methods on an object, and controller/request specs set up the environment to mimic how they would be called (setting up a session, rack env, etc. is what I mean here)

You *could* do all that setup yourself, and test the endpoint as if it were a regular old method on a model, but it would be a pain in the ass.",1530134530.0
moomaka,Why wouldn‚Äôt you use request specs for this?,1530134880.0
jasonswett,"If anyone, like me, was wondering where exactly anyone affiliated with RSpec/Rails was saying this stuff, you can find these things [here](https://github.com/rspec/rspec-rails/issues/1838) and [here](http://rspec.info/blog/2016/07/rspec-3-5-has-been-released/).",1530220369.0
rocco88,"> What should we be using for API (or other non-UI) controller testing now?

Request specs.

> I'm talking about controllers that aren't appropriate for request or system testing, because they may only have a side effect and return a specific status code, interact with a third-party API, etc.

With VCR you can handle third-party API requests. Also with rspec-mock you can manage, test(test spies) and control every object used by controller action, if you want.

",1530173203.0
kbroaster,I use minitest and savon for my XML/SOAP/RESt testing.,1530202387.0
hartfordhobo13,"Request specs are literally made for this. As somebody else mentioned - I think your getting hung up on the terminology.

Even though RSpec discourages controller testing and tells everybody to just do feature tests - I actually still use request specs regardless for my own attempt at RSpec functional testing controllers (referring to the Minitest definition of functional tests, which is really just a controller test), just to get a concrete test for each controller in my system and make sure its returning a successful response (or a forward response, unauthenticated response, etc...) - but NOT for testing the template loaded ofcourse.. Then I use capybara feature tests as my integration tests to test important flows between multiple actions / controllers.

But you should indeed use request specs for the tests you described in your question - I actually also got hung-up on RSpecs documentation's definition of Request Specs also",1530210736.0
UnexpectedIndent,"Why does a UK guide include events in new york?

",1530125157.0
moomaka,How does an article on this topic not even mention keyword args? They were created to solve this problem.,1530107855.0
jujubean67,Is this for people stuck with 1.9? I'm not following .. ,1530109360.0
Crono-kun,"I think Sandy Metz would actually ask ""Is it Movie's responsibility to know if it's starring Keanu Reeves or what it's box office is etc.?"" ;)",1530115215.0
OkWorker,"What about using keyword arguments? I haven't tried it with object creation but maybe its an option.

[https://robots.thoughtbot.com/ruby-2-keyword-arguments](https://robots.thoughtbot.com/ruby-2-keyword-arguments)",1530103563.0
prl_lover,"I think the merge solution (#3) is the nicest. However, I would prefer to use keyword arguments when there are fewer arguments to deal with",1530099089.0
jrochkind,Do not agree with this analysis of what code choices are better than others. ,1530117592.0
mperham,"Concurrent-ruby has been having trouble getting regular maintenance lately.  I would investigate its current status before building a system that relies heavily on it.

I will always be around to support Sidekiq as it is my business.",1530118902.0
x1a4,"Sidekiq for background jobs, to allow workers to horizontally scale to additional hardware if necessary.

Concurrent-ruby for local stuff. I'm partial to the [channels/goroutine implementation](https://github.com/ruby-concurrency/concurrent-ruby/blob/master/doc/channel.md) they are hiding in -edge.",1530073403.0
ioquatix,"Here is my latest summary of asynchronous processing with Ruby.

https://www.codeotaku.com/journal/2018-06/asynchronous-ruby/index

Sidekiq is still a well maintained and excellent option for job processing.

I've been working on `async-redis` which we hope to use to build a background job processing system. We are replacing an existing one based on `resque`. My goal for this project is to build something roughly compatible with `resque` so we can drop it in without much effort.

I've also been toying with the idea for different levels of prioritisation. We've got quite a decent chunk of data (2+ billion rows) and one aspect of that is statistics and analytics. We've got an existing pipeline for this but I'd personally like something a bit less ""background"". I've been working on actor based concurrency models with an idea to have a cluster of actors performing both background jobs and other processing tasks - such that you can connect to the cluster using `pry` or some other CLI, and basically work with them as if they were local (think `Drb`, `Dcell`, etc). I think a general purpose model like this would be really awesome for a lot of different things.
",1530077316.0
Blimey85,"I knew about this for the test environment but for whatever reason it didn‚Äôt occur to me it would work the same for other environments.

If you use sandbox, can you attach to the database from a DB app? I‚Äôve noticed when I run tests with rspec and I use pry to give me access in the middle of a test, I can‚Äôt see anything in the database outside of the pry prompt. TablesPlus shows an empty database. This got me to thinking that maybe it runs in sandbox mode for the tests and maybe you can‚Äôt connect to a sandboxes instance. This is just basically me guessing at this point. ",1530099952.0
prl_lover,"Neat! had no idea this existed.

Still wouldn't want to do this on production though",1530104521.0
jrochkind,"I started out thinking ""oh god, why do we need method pattern matching, leave poor ruby alone"", but by the end I thought ""Sure, that seems pretty fine, right there."" So your post worked. :)",1530069204.0
aemadrid,looks interesting,1530046842.0
PercyLives,"A well-written post.

I tend to think that Ruby should go for maximum breakage in 3.0 and do this and other things right, without compromise. But I'd understand a reluctance to do that given the experience of Python 3.",1530355979.0
bascule,"This post unfortunately makes only one mention of the `#===` operator, which is what powers the `case` expression. That's the closest thing that Ruby has to pattern matching.

See also MenTaLguY's `case` gem:

https://www.rubydoc.info/gems/case/0.5.2.1",1530099460.0
deedubaya,"TLDR;

+ Depends on a open source [one-click deploy microservice](https://github.com/danielwestendorf/breezy-pdf-lite) (can be deployed anywhere)
+ Generate PDFs with a Rack Middleware
+ Generate PDFs pragmatically",1530033594.0
DrVladimir,"Bringing in a microservice AND chrome just to convert HTML to PDF?

Sounds like a fun project, but I'll stick with pandoc",1530057104.0
samrapdev,"I am currently learning Ruby so I can give you a bit of information on the direction I am taking...

First off, I am a full stack web developer (stronger on back end) using the LAMP stack professionally for about 3 years now. I decided a little over a month ago to learn Ruby as I wanted to explore more complex topics that don't come up much in the PHP ecosystem such as concurrency and idempotency. 

The first thing I did was race through the Ruby course on Codecademy. Codecademy might be geared towards complete beginners to programming, but I find it is a great resource to quickly familiarize yourself with a new language's syntax, even if it is a bit boring. As a professional developer, you should be able to breeze through the entire course in a couple of hours max. From there, I decided to play around with the Rails framework by following the build a blog tutorial on Rails' getting started guide as well as a couple other API tutorials in Rails. This introduced me to some more complex Ruby features as well as getting my hands dirty using Minitest and Rspec. 

I would say that at this point I am capable of reading a fair amount of Ruby code, but still have a lot to learn. The thing about Ruby that I realized pretty quickly, is it is a very expressive and vast language, with a lot of community-driven conventions and many different ways to accomplish the same thing. It's definitely a language that can only truly be learned by building a lot of things with it, moreso than any other language I've worked with.

Hopefully this helps you a little bit. As an automation tester, I think Ruby would be a good language for you to learn. Aside from testing, Ruby is commonly used in devops (particularly CD) which seems to go hand-in-hand with automation testing.",1530030357.0
kbroaster,"I did the opposite. I started with Ruby and then moved to Java. 

My UI tests were originally written in watir-webdrive (I think it's just watir now). But, I made the switch and now use java selenium/junit/maven...

Anyway...the irb is your friend. Simply go to a command line (assuming you have ruby) and type in irb. 

There you can require your gems. e.g. I would do the following:

    require 'watir-webdriver'
    browser = Watir::Browser.new
    browser.goto(""URL"")
    browser.text_field(:name, ""username"").set ""jgriffin""
    browser.text_field(:name, ""password"").set ""Loan9Loan!""
    browser.element(:xpath, '//input[@name=""Login""]').click


You can also use pry in your .rb file for even better troubleshooting: 

e.g. 

     require 'pry'
     binding.pry

That will load your program in the irb.

Anyway, best of luck.
",1530034568.0
schneems,"Pick a project that you're interested in building and work backwards. What do you need to do every day for 3 hours to make the next step? Maybe it's a fun web app idea, then you would start with some rails tutorials and when your done try building your project.

A real world project forces you to not ""cheat"" and to actually understand how to the material. When you're done you have a project you could potentially show employers to say that you've built a thing. 

If you're more interested in one area than others (for example rspec) then make sure the project is thoroughly tested with rspec.

I also recommend finding a Ruby or Rails user group nearby. Will help you meet local people who might be able to give you moral support and maybe point you at a few resources.

",1530035158.0
jrochkind,"Personally, I want to start with a reference/tutorial on just how the language works, and understand how the language works (like do some text-only command line play things to learn it).  Before diving into real code. 

But everyone learns differently. 
",1530036259.0
spacefeast,"I'm in a very similar boat. The other comments are spot on - it's not about learning a specific thing, it's about picking a task or excercise, and not stopping until you've completed it. 

In some ways, Ruby is much easier to learn than Java. Reading other people's code like you did before is a great way to learn.

Stay focused and I bet you'll learn a shitload in 3 hours a day. ",1530043077.0
nujaud,"Check The Odin Project's [Ruby](https://www.theodinproject.com/courses/ruby-programming) track. The curriculum is very thorough, you have a good amount of projects to complete, and the [chat](https://gitter.im/TheOdinProject/theodinproject) is very active.  

There you have a well defined learning path that you can follow with [Rails](https://www.theodinproject.com/courses/ruby-on-rails).",1530047239.0
hartfordhobo13,"First learn the basics - use something like Thoughtbot's Upcase, or read 'Agile Development with Rails 5', or read the Free Rails Book / Tutorial available free online.

Next, you will want to read a lot of additional books. For Ruby, they say the best book is the Pickaxe book (Google it). 

For rails, once you want to go further - and there are some great books on Ruby / Ruby on Rails. A few I would suggest as necessary: Refactoring (Fields / Harvie / Fowler), Rails Antipatterns, Enterprise Rails, Thoughtbot's Ruby Science and their Testing Book. Eloquent Ruby is good too. Some of the Rails books are a little older so you will want to make sure you current on the latest Rails 5 syntax before reading any of them - so you will understand what you can do differently in the latest Rails. But the overall lessons in those books will stay the same 95&#37; of the time.",1530130854.0
,"I always recommend ""The Well Grounded Rubyist"". The title says it all: You'll get a really good understanding of Ruby, its syntax, and the most common classes etc. It probably covers over 90% of what you'd use of the language itself, for a typical web app or general scripts. 
It's a big book, which you can keep as a solid reference material, and it's also such a pleasure to read. I recommend a PDF version, so you can quickly navigate around in the future, but that's a matter of preference.",1530153520.0
Mistr25,"I myself started with poignant guide to ruby.. Best is I guess pick a project, get yourself familiar with gems, structure, commonly used stuff and so on..",1530382893.0
sshaw_,üëçAlways nice to hearing about Ruby being used with Microsoft products.,1530071683.0
Enumerable_any,"    irb(main)> Dry::Monads::Maybe::Some.new(1).fmap { |_| nil }
    => None

Is this a bug? At least it breaks the functor law `fmap f . fmap g = fmap f . g` (where `.` is function composition), counter example: `f = -> (_) { 1 }` and `g = -> (_) { nil }`.

Expressed in another way: `fmap` shouldn't switch from `Some` to `None` or vice versa.

I don't feel like opening an issue yet, maybe breaking the law was done intentionally.",1530029711.0
gettalong,"Parse the string:

* Each time an `(` is encountered, add 1 to a depth counter. Store the maximum depth in an additional variable. Note that empty the final maximum depth is one less because of the empty node syntax!
* Each time a value is encountered, push it onto a result array together with the current depth, e.g. as an array `[value depth]`
* Each time an `)` is encountered, subtract 1 from the depth counter.

When the whole string is parsed, select all items in the result array which have the maximum depth as depth. Since the values are already in the correct order, you just need to output them.",1529999732.0
pilotInPyjamas,"Holy crap, this is very tight to get a working solution in 30 mins, unless your language already has good primitives for parsing. Here was my solution:


* `treeParser` routine:
* Parse `(`
* If the next character is ')' return a depth of 0, and an empty list of integers.
* Parse a series of decimal digits as an integer: `value`
* Parse a space
* Parse the left tree using `treeParser`
* Parse a space
* Parse the right tree using `treeParser`
* If both the left and right trees have a depth of zero, return a depth: 1, and a list containing `value`
* If the depth of both the left and right tree is equal, return their depth plus one, and a list containing the list from the left tree and the list from the right tree combined
* If one side is deeper than the other: return the larger depth plus one, and a the list from the deeper tree.
* end routine


Here is my code (not Ruby sorry):


    import Text.Parsec hiding (Error)
    import Text.Parsec.String
    import Text.Parsec.Char

    treeBottom tree = snd . fromRight . runParser treeParser () """" $ tree

    fromRight :: Either a b -> b
    fromRight (Right a) = a

    treeParser :: Parser (Int, [Int])
    treeParser = choice 
        [ do
            try (string ""()"")
            return (0, [])
        , do
            char '('
            digits <- many1 digit
            spaces
            (depth1, nums1) <- treeParser
            spaces
            (depth2, nums2) <- treeParser
            char ')'
            let num = (read digits) :: Int
                result = case (depth1, depth2) of
                    (0, 0) -> (1, [num])
                    (depth1, depth2)
                        | depth1 == depth2 -> (depth1 + 1, nums1 ++ nums2)
                        | depth1 > depth2 -> (depth1 + 1, nums1)
                        | depth1 < depth2 -> (depth2 + 1, nums2)
            return result
        ]   ",1530007695.0
nujaud,"This is a question of personal preference.

I've been using [Sublime Text](https://www.sublimetext.com/) for around two years and half and really like it. It's light, fast, and extremely extensible. In case you are interested: [Setting up Sublime Text 3 for Rails Development](https://mattbrictson.com/sublime-text-3-recommendations)

Some other popular options are [Vim](http://www.vim.org/), [Emacs](https://www.gnu.org/software/emacs/), [Visual Studio Code](https://code.visualstudio.com/), and [Atom](https://atom.io/).

Atom seems to be gaining popularity, but compared to the other options I find it slow and heavy; specially comparing it to Vim, Emacs and Sublime Text.",1529999124.0
,[deleted],1530018094.0
jrochkind,"I like SublimeText.  I'm not sure it offers  ""word suggestion based on the language"" though. 

If you want the full ""IDE"" experience, RubyMine seems to be the option. I've never used it. It's a bit pricey. I'm happy with the more light-weight SublimeText. 

My impression is that RubyMine and SublimeText are the most popular. ",1530030519.0
VeryGoodGoodGood,"Take the time to learn a terminal editor (I prefer vim) 

The number of tools and integrations is huge, and it makes development within a repository easy

Edit: but if you don‚Äôt have an interest in that just use sublime text ",1530015610.0
Blimey85,"I use RubyMine. It‚Äôs free for students. Sublime is pretty good. Atom is popular as well. The new kid on the block is VS Code which is pretty nice. I‚Äôve used a bunch and nothing has pulled me away from RubyMine. It‚Äôs built for Ruby/Rails, updated frequently, and works really well.",1530047864.0
Code-Master13,Linux or Mac. Windows is such a hassle. Plus all the tutorials use a Unix terminal. I use Ubuntu because I was a windows user prior to getting into web-Dev and working with Ruby. ,1529983492.0
fedekun,"macOS just works, all you need is a Linux tbh. Maybe Ubuntu?",1529981094.0
BurnTheBoss,Arch,1529981820.0
themagicvape,"I would say either a Linux distro like Ubuntu. Purely because most all tutorials and guides are using a Unix shell, so it'll be a lot easier to follow along. I find developing in Windows to be a hassle for languages that aren't Java, C#, or C++",1529974262.0
jdickey,"Mac will let you do anything right away and there's very rarely a hasse setting up any of your tools. There are a few Linuxes out there that can also say this (Fedora), but you tend to hit more sharp edges at speed unexpectedly. Too bad that Mac hardware is becoming disposable bling sold by a company that no longer cares about the platform.",1529984496.0
f-hack,"Definitely a distro like Ubuntu or macOS.

I had some success using Vagrant or just a standard Linux virtual machine on Virtualbox on Windows.",1529975780.0
VeryGoodGoodGood,"Honestly whatever you already have. 

If it‚Äôs for learning and fun, whatever you‚Äôve got. 

If it‚Äôs for a bigger project: Linux ",1529978038.0
rodnahs,"I'm kind of familiar with ubuntu, has it improved much?",1529978493.0
i_know_sherman,I switched from Mac to Linux some years ago and I havent looked back yet! i3 and vim are huge productivity boosters for me,1530101893.0
isolatrum,"It depends. If you are on a budget, buy a Windows laptop. If you want to use Windows programs (e.g. games) then install Ubuntu on Windows, which is a pretty full-functioning Linux OS that you run from within Windows. If you don't feel a need to keep Windows, install full Ubuntu desktop (or dual install). If you have cash to burn, buy a mac and treat it well because that shit is pricy (and has [keyoard issues](https://www.macworld.co.uk/feature/mac/macbook-pro-keyboard-problems-3653458/oard), for example my b key works like 1% of the time and n keys works like 50% of the time)",1529994851.0
schneems,"Great article! Not really hidden but one of my favorite classes is Pathname. It‚Äôs everything I wish File and FileUtils was wrapped up into one. Makes Code much more readable and simpler.
",1529986264.0
Syro00,I found it well-written and informative. Thanks for sharing!,1529985480.0
RyanMcCoskrie,... Hidden gems?,1530053070.0
u4bu8s4z9ne4y8uze,"One thing to be careful with zlib are decompression bombs. Ignoring implementation limits, theoretical maximal compression of zlib is 1032:1, so decompressing 1MB of data can result in over 1GB of plaintext. Not really an issue in stream mode usually.",1530010831.0
nakilon,I don't believe Reddit didn't tell you the same link was already posted 3 weeks ago: https://www.reddit.com/r/ruby/comments/8p0xhp/hidden_jewels_of_ruby_stdlib_drb_optionparser/,1530314487.0
janko-m,"Ruby libraries are designed to use blocking IO, and classic Ruby web servers embrace that, so web workers will be busy even while waiting on I/O operations. That's the main advantage, from what I understand Node.js ""workers"" use nonblocking I/O, so they can process other requests while waiting on I/O operations. This allows you to achieve great parallelism, so naturally you're expected to have better request throughput.

There are two ecosystems in Ruby world that bring async IO ‚Äì [EventMachine](https://github.com/eventmachine/eventmachine) and [async](https://github.com/socketry/async). From my experience it seems that the EventMachine community has diminished from what it was before (someone correct me if I'm wrong), I think primarily because you needed to patch every Ruby library to support async IO (for [em-synchrony](https://github.com/igrigorik/em-synchrony) to work).

Lately I've been looking into `async`, as one of my projects ‚Äì [tus-ruby-server](https://github.com/janko-m/tus-ruby-server) ‚Äì would really benefit from async I/O. It's really beautifully designed, and it fixes some ""mistakes"" that EventMachine ecosystem has made. The author of `async` has recently opened a [pull request](https://github.com/ruby/ruby/pull/1870) to Ruby to support swapping the default Ruby's blocking ""selector"" to a custom one; the main use case here is to have Ruby use [nio4r](https://github.com/socketry/nio4r), which uses non-blocking I/O (and is the base of the `async` framework). From what I understood, that would enable switching all Ruby libraries to use non-blocking IO in context of `async`, without having to create async wrappers. What's also nice is that you can still continue your Rack-based web framework (something that [Goliath](https://github.com/postrank-labs/goliath) tried to bring into the EventMachine ecosystem), because the author of `async` wrote [falcon](https://github.com/socketry/falcon), a Ruby web server built on top of the `async` framework which includes a Rack adapter.",1530012583.0
jrochkind,"5 seconds is a _long_ time for a result to return, most people don't benchmark with that kind of load. 

Presumably those 5 seconds are _mostly_ waiting on IO, like the db? That might make it at least feasible. 

If the 5 seconds were really all CPU, that load is going to destroy a node server or a rails server. 

Although I guess you just said ""100,000 web requests"", you didn't say in what period of time they come in. 

But that's a lot of load if it's in a short period. There is no simple answer to ""Rails will do it better"" or ""Node will do it better.""  Depends on what's going on. ",1530038013.0
jemminger,Do you actually have this problem?,1529978985.0
hartator,"Ruby can handle more than Node.js nowadays, the still main difference is that Node.js is async by default (so fuction call function call function, etc.) whereas in Ruby you would have to work with HTTP library that supports this, like http.rb. ",1529986315.0
wbsgrepit,"I would go into a little more detail as to the real problem you are facing.   From your description it seems like no matter what your language or deployment looks like you will quickly invert the problem from 5X100,000 requests (need to run async!) to something more like I need to limit X concurrent requests at a time from a batch of 100,000 with retry and blah blah blah.

 ",1530051185.0
hypnopoo,Glad you figured it out! Now stop using that terminal and check out the [chomp](https://ruby-doc.org/core-2.2.0/String.html#method-i-chomp) method to get rid of newlines (or other specified characters) in user input.,1529974209.0
Schrockwell,"I see you figured it out, but for giggles, try adding this as the first line: `$stdout.sync = true`",1529976728.0
MonkeeSage,"You can explicitly call `$stdout.flush` to write the contents of the output buffer immediately.

http://ruby-doc.org/core-2.3.1/IO.html#method-i-flush

It's also possible to set `$stdout.sync = true` to disable all output buffering in ruby.

http://ruby-doc.org/core-2.3.1/IO.html#method-i-sync-3D

",1529983163.0
janko-m,"> I have a method that I would like to have accessible to my Sinatra application's models, views, and controllers. What's the recommended way to do so?

It's easy to share methods across controllers and views, but you shouldn't try to share them with models as well. For example, in some helper methods you'll likely want to depend on the request context, which just isn't there in your models.

> I'm guessing that I should create a module for this, but where should I locate it? /project/bin?

The beauty of Sinatra and other non-Rails web frameworks is that you can put it anywhere you like. Yeah, you can choose `app/helpers/*` if you want.

> Do I require it in the config.ru, then require it in the desired models/controllers?

You can require everything in `config.ru` if you want, as that's the only file that gets loaded by default when you start the web server. I personally prefer to require ""dependencies"" in the files that use them. For example, if `app.rb` defines `App < Sinatra::Base`, I would `require ""sinatra""` in `app.rb`, and if it performs `helpers ApplicationHelpers`, I would also `require ""app/helpers/application_helper""` in `app.rb`. In `config.ru` I would only `require ""./app""`, because I usually just have `run App` in it, and let `app.rb` take care of requiring all of its dependencies.",1529967539.0
office_boy,"With the modular Sinatra style and multiple controllers, your structure is going to look something like this:

    .
    ‚îú‚îÄ‚îÄ Gemfile
    ‚îú‚îÄ‚îÄ Gemfile.lock
    ‚îú‚îÄ‚îÄ app
    ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ controllers
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ application_controller.rb
    ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ other_controller.rb
    ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ helpers
    ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ application_helper.rb
    ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ other_helper.rb
    ‚îú‚îÄ‚îÄ app.rb
    ‚îî‚îÄ‚îÄ config.ru

#### Gemfile

    gem 'sinatra', require: 'sinatra/base'

#### app.rb

    require 'bundler'
    Bundler.require :default
    Dir[""./app/{helpers,controllers}/*.rb""].each{|file|require file}
    
    class ApplicationController < Sinatra::Base
        set :erb, layout: false
    end

Make sure that the helpers are required before the controllers, and that way you can get rid of the `if defined?(ApplicationHelper)`.

Don't define your routes in this class. Instead do all of your application settings here, and define your routes in the reopened `ApplicationController` class in the `controllers/application_controller.rb` file.

#### config.ru

    require './app'
    
    map('/other') {run OtherController}
    map('/') {run ApplicationController}

A pretty simple `config.ru` file. All that's happening is that routes starting with `/other` will be mapped to the `OtherController`.

So, for example:

* The `/` route defined in `OtherController` will map to the route `/other`
* The `/route` route defined in `OtherController` will map to the route `/other/route`

#### ApplicationHelper

    module ApplicationHelper
        def foo() 'foo' end
    end

Since all of the other controllers will inherit from ApplicationController (which includes the methods in this module once you call `helpers ApplicationHelper`), all methods in this module will be shared among all of the other controllers.

#### ApplicationController

    class ApplicationController < Sinatra::Base
        helpers ApplicationHelper
    
        get('/') {foo + bar}
        get('/index') {""#{foo}bar""}
    end

Note that you'll get an error if you request the `/` route, since the `bar` helper is only defined in `OtherHelper` and therefore only available in routes defined in `OtherController`. However, the `foo` helper method is available since it is defined in `ApplicationHelper`.

The second route will work fine since it's only calling the `foo` helper method.

#### OtherHelper

    module OtherHelper
        def bar() 'bar' end
    end

#### OtherController

    class OtherController < ApplicationController
        helpers OtherHelper
    
        get('/') {foo + bar}
    end

This route will map to `/other` and will render `foobar` since the `foo` helper method was inherited from `ApplicationController`, and the `bar` helper method is defined in the `OtherHelper` module.",1530119071.0
mperham,"This is why I think Sinatra and its ilk are an anti-pattern.  It tries to be as ""lightweight"" and minimalist as possible, at the expense of making your webapp code less idiomatic.  Ruby app code should be modules and classes, not a top-level DSL.",1529973736.0
badg35,"With everyone's help, I created a \[modular template\]([https://github.com/craibuc/sinatra-modular-template](https://github.com/craibuc/sinatra-modular-template)).",1538667924.0
pmurach,"The `sup` gem seems to be rather old and doesn't restrict highline version at all, which is a bit problematic, because it assumes that all future versions will be compatible. Since highline has been released recently, I imagine this to be the cause of the bug. What I would suggest to do is first uninstall all versions of highline for the current ruby:

```
gem uinstall highline
```

and then install older version released around the same time as the gem:

```
gem install highgline -v 1.7.8
```

Then try running `sup-config` again?",1529957413.0
mperham,"I believe it is technically a Module which is included in everything by default (except BasicObject?)

It's a utility drawer of random methods, like `puts`, that are available everywhere.",1529949073.0
sshaw_,Eu amo goiabada com queijo de Minas. Todo mundo precisa experimentar. ,1530060638.0
obviousoctopus,I like it but I wouldn‚Äôt use it as it adds cognitive load for me. ,1529955581.0
in0pinatus,"An object with a single public method named `call` is not a service object. It grinds my gears that we hear this misattribution so frequently. An object with a single public method named `call` is a function, and since Ruby already has closures I don't think it's wise to reinvent that particular wheel.
",1529968142.0
sshaw_,"> It offers an alternative to using Struct.new which does not check for 
number of parameters provided in initializer

Classes created by `Struct.new` check parameter count. 
Maybe I don't understand what you mean?

    irb [2.0.0] (selfie-formatter)$ Struct.new(:a,:b).new(1,2,3)
    ArgumentError: struct size differs
            from (irb):1:in `initialize'
            from (irb):1:in `new'
            from (irb):1
            from /usr/bin/irb:12:in `<main>'

Though seems as if the error message may confuse callers.  üòµ",1530057795.0
janko-m,"Whenever you want to reduce boilerplate, you can check whether there is already a [dry-rb](https://dry-rb.org) gem out there that solves that. In this case [dry-initializer](https://dry-rb.org/gems/dry-initializer/) already comes with this functionality (with the exception of `is_callbable`).

    require ""dry-initializer""

    class ApiClient
      extend Dry::Initializer

      param :network_provider
      param :api_token
    end",1529960562.0
ClikeX,"What exactly do you need to update? That would help with offering advice,

**html** files are for formatted data. Basically those `<p></p>` style tags define hierarchy and allow for fancier/stylized emails.

**text** files are just that, text. They contain no formatting. It's there for email clients that don't support html. Which would otherwise show those html tags, making the text unreadable.

For **HTML**:

* [Check this overview](https://www.w3schools.com/Html/) and follow that basic structure.
* Make sure the syntax is correct. You can do that [here](https://validator.w3.org/). Keep in mind that it won't understand ruby. So you'll need to remove those <&#37; &#37;> tags if you want to test it.

For **text**:

* Really just put the text there as you'd want to read it. It's going to be put in the mail as is, with every line break.",1529933853.0
IllegalThings,"The difference is with email, depending on the configuration on the email client, they may choose to not display HTML email for a variety of reasons. Because of this you usually have two templates, one HTML formatted and one plain text. I would edit them separately, and make sure the content is similar between the two.",1529934261.0
FlaccidSpoon,"Most people are going to get the html.erb file, this is the email you get with staying and images in it. As I understand it the text version is for people with slow connections who just want to read the text. A handy trick is to copy the html/text into scratchpad.io and see what they look like.

Keep in mind the embedded ruby will not change ",1529935073.0
jrochkind,"alas, I don't believe there is. 

Two different templates files, one that embeds the variables into an HTML page, and one that embeds the variables into a plain text page. 

Emails are sent with both versions embedded, most email clients these days will only show the HTML one, but the text one is there just in case someone has an email client that can't display HTML (or is configured not to), it'll display the text one. ",1529956263.0
toadkicker,[I wouldn‚Äôt do it but you can](https://medium.com/craft-academy/functional-programming-in-ruby-for-people-who-dont-know-what-functional-programming-is-f0c4ab7dc68c?source=linkShare-f8354741d7e6-1529906966) ,1529906994.0
Nondv,"What is wrong with SICP itself?

It's not like they force you to learn some complicated language. This book is about programming, not programming language :)

By the way. Check [this](https://www.naildrivin5.com/blog/2012/07/17/adventures-in-functional-programming-with-ruby.html) out",1529916457.0
three18ti,"Have a look at [This Tutorial](https://www.tutorialspoint.com/ruby/ruby_socket_programming.htm) (note this is a little outdated as it's `#new` not `#open`)

Forgetting about autodiscovery for a moment (which is what you're doing with your UDP Broadcasts), what you want is to start a `TCPServer` on the server and a `TCPSocket` on the client side.

The gist of it is:

    # server.rb
    require 'socket'

    server = TCPServer.new 2000
    loop do
      Thread.start(server.accept) do |client|
        client.puts ""Hello !""
        client.puts ""Time is #{Time.now}""
        client.close
      end
    end

    # client.rb
    require 'socket'
    server_ip = '127.0.0.1'
    s = TCPSocket.new server_ip, 2000

    while line = s.gets # Read lines from socket
      puts line         # and print them
    end

    s.close

What this does is starts a TCP server listening on every interface (i.e. loopback and eth0, or if you have more than one interface lo0, eth0, eth1, .. ethN), when a client opens a connection to the server, the server spawns a thread, sends the current time to the client, then closes the connection.

The client opens a connection to the server specified, prints input from the server, then closes the connection.

See also [TCPServer](https://ruby-doc.org/stdlib-2.4.0/libdoc/socket/rdoc/TCPServer.html#method-c-new) and [TCPSocket](https://ruby-doc.org/stdlib-2.4.0/libdoc/socket/rdoc/TCPSocket.html)

Now, for your Server discovery... is there a reason you won't know the IP address or Hostname of the machine running the `server.rb`?  What you're doing I don't think is going to work.  ""Service Discovery"" is actually a huge problem that [many](https://github.com/coreos/etcd) Have [solved](https://www.consul.io) in [various ways](https://www.habitat.sh/images/infographics/habitat-runtime-service-group-binding-dde570a3.png). Though it may be suboptimal to run a cluster of servers...

I suppose you could have the server broadcast a packet with it's IP, then have the client read the broadcast packet to establish connection with the TCP server. [This Stack Overflow](https://stackoverflow.com/a/48709600) thread has a good example.

Anyway... that's my thoughts.",1529906602.0
iamjkdn,"If I run a simple server on my desktop, i can open the webpage in any other desktop or mobile which points to the IP and the port of the desktop.
Same thing for websockets.

What exactly is your application?

As far as discovery is concerned, you can accomplish this with SSDP. It's very simple.    

With zeroconf, in Windows you need to download Bonjour for that on every machine. Even on Linux, there is config involved to properly make it work, atleast on my system (Ubuntu 16.04/elementary os)",1529910676.0
toadkicker,"Take a peek at zeroconf: https://github.com/lachie/zeroconf

Edit: I havent used this so no warrantee from me. I have built ruby software on top of zeroconf though and its pretty simple to use.

Otherwise you are looking at a traditional client/server configuration and plain DNS is the best choice for the clients to find the server. Plenty of http servers in Ruby already (puma, unicorn, mongrel).

Edit 2: for reference https://en.m.wikipedia.org/wiki/Zero-configuration_networking",1529905134.0
in0pinatus,people don't write servers from scratch nearly often enough IMO. bravo you for going there.,1529969386.0
x1a4,"Your double is not actually being called by anything. In your test, `double` and `@game` have no connection to each other.

This sort of testing is awkward to do with MiniTest, but here's one way:

      @game = Game.new

      called = false
      my_stub = -> { called = true }

      refute called

      @game.stub(:make_rand_num, my_stub) do
        @game.start_game
      end

      assert called

You might prefer to use a gem that makes method mocking more straightforward. I've used [rr](https://github.com/rr/rr) in the past, but no idea what the cool kids are using these days. `Minitest::Mock` is really meant for mocking out an entire object, rather than single methods, which is what you're wanting here.",1529894054.0
NativityInBlack666,"If you want to find out if a method is called just put something at the top of it like puts""called"" and it'll print out called if the code is run",1529924554.0
442401,"I apologise in advance for not answering the question you asked, but ...

You appear to be trying to test the wrong thing. `make_rand_num` looks like it should/could be a private method and is just an implementation detail of `start_game`. Testing the implementation of a method is not generally recommended. Your implementation may change in the future, which will break your test.

What you ought to be testing is the side-effect of calling `start_game` which, in this instance, is to assert that `@prng1` is  set to a new random number. This now presents a new problem. In order for your test to be consistent you will need to stub `Random#new` to return an explicit value that you shall be testing  for. 

I don't use MiniTest so the following code hasn't been tested and  might not be correct, but a suitable test might look like:

    def test_game_start
      Random.stub :new, 42 do
        @game.start_game
        assert_equal 42, @game.prng1
      end
    end

Here is a [great talk by Sandi Metz](https://www.youtube.com/watch?v=URSWYvyc42M) discussing what to, and what not to, test. ",1529928930.0
in0pinatus,"The facts that a) an unexpected string is written to system output, and b) you're puzzling over an unexpected nil, together suggest you may have a stray `puts` in some surrounding or invoking code. E.g. perhaps you wrote `<%= puts @result %>` in your ERB template by mistake.

More broadly, consider this: you've pasted code that you know works in isolation, and then asked, essentially, ""why doesn't this work in context?"".  Hint: that (usually) means you need to show the context.
",1529875742.0
jawdirk,"    params['word'].to_s

This is never nil. nil.to_s == ''

",1529867829.0
-TURBOMAN-,"The encrypt method you provided returns a string value  (never nil).   
Can you provide the complete code for your controller method?",1529867969.0
jrochkind,"Its not clear to me from your code sample what could be being nil where you don't expect it .

Have you ever used a ruby debugger, like [byebug](https://github.com/deivid-rodriguez/byebug)? I think you'll find it's the tool you want to track down bugs like this. ",1529875287.0
in0pinatus,Bit rude of u/whitisj to just bail on us like that.,1529889753.0
wakeuph8,"I didn't even know TTY-Progressbar was a thing, thanks! I'd used TTY-Spinner a few times but never thought to look for this. Must try and shoe it into a project or two.",1529861496.0
Teacob,"This is cool, I'm using this (plus tty-spinner) on a text-based adventure game to catch the ultimate Jira. I might open this to more contributors if someone is interested:  


[https://github.com/tcob/jiraquest](https://github.com/tcob/jiraquest)",1529878150.0
ioquatix,I think this needs to be more asynchronous. /s :),1529887089.0
agib,Check out webpacker's set up: https://github.com/rails/webpacker,1529866194.0
jrochkind,following cause interested too. ,1529865315.0
theLorknessMonster,"I use webpack all the time, and its probably overkill for what you need. Maybe [rollup](https://github.com/rollup/rollup) would better integrate into your ruby workflow.",1529879969.0
DrVladimir,"I'm not entirely sure what you're trying to do but I'd suggest sticking with rails primitives. CSS and JS code only need the asset pipeline to function. Best to avoid the JS toolchain and stick to Rails' opinions.

That said it is fairly easy to integrate YARD into Rails, but that sounds like the opposite of what you're looking for

Also, as a user, if a gem threatens to pull in a bunch of JS tech that will pretty much kill any chances of me using it",1529863022.0
akira410,"The following, from page 3, would define those methods for you.

    attr_accessor :name

Are you trying to define name and name= manually? If so, you may have done the following:

    def name=
    end

That would cause the error you're seeing. But, without seeing the exact commands you typed I can't be sure.
 ",1529816300.0
anithri_arcane,"It's an [assignment method](https://docs.ruby-lang.org/en/2.0.0/syntax/assignment_rdoc.html#label-Assignment+Methods), it allows you to use the = sign so you can do this.
` my_obj.title = ""Guards! Guards!""`",1529797058.0
,"If I am right, and I might not be, it's the name of the method

the full name of the method is *title=*. 

I think [this](http://www.rubyist.net/~slagell/ruby/accessors.html) might help.

",1529796798.0
Tomarse,"It's a setter method for a class instance variable.

    class Foo
      def initialize
        @bar = nil
      end
      def bar=(value)
        @bar = value
      end
    end

Is equivalent to...

    class Foo
      attr_writer :bar
      def initialize
        @bar = nil
      end
    end

Both let you do...

    f = Foo.new
    f.bar = 'Hello World'",1529829446.0
moomaka,"""No javascript that I wrote, plenty of javascript from a framework, fie in this case"" would be more accurate. 

Also ""fie"" sounds terrifying, I'm having flashbacks to JSF after reading the description.",1529799199.0
manys,"This would be better in /r/rubyonrails and the title changed to ""I made a gem for no-js slideshows""",1529799067.0
x1a4,"There's always `Array.new`, which is useful at times.",1529781775.0
kir,&#37;w(),1529789118.0
darkclark,Array(nil),1529782676.0
bascule,"The actual feature is multiple assignment:

https://nathanhoad.net/ruby-multiple-assignment

Lots of fun things you can do with it, e.g.

    [1] pry(main)> foo, *bar = 1, 2, 3  
    => [1, 2, 3]  
    [2] pry(main)> bar  
    => [2, 3]  ",1529778060.0
HwanZike,TIL,1529793250.0
NativityInBlack666,"Array.new(1,2,3,etc.)",1529831056.0
NativityInBlack666,"Not sure if I'm being slow or not but it looks like the guy uses square brackets.. 

irb> a = [1, 2, 3]",1529831172.0
ryanplant-au,"AWS Lambda can run arbitrary executables, which means you can use [Traveling Ruby](https://github.com/phusion/traveling-ruby) to run Ruby there. There's [a quick guide here on doing that.](http://www.adomokos.com/2016/06/using-ruby-in-aws-lambda.html) It is unfortunate, though, I agree.

You could voice your desire to see it supported, they do add languages. Go was only added earlier this year. ",1529757516.0
BashCoder,"I love ruby and use it every day. But Lambda is priced based on per-invocation utilization, and I really don‚Äôt want to waste 75% of my compute dollars paying for on-the-fly compilation.",1529791866.0
ohyeahbonertime,You just have to ask them.,1529787587.0
tomthecool,"> The fact that AWS lambda doesn‚Äôt support ruby out of the box is just beyond me.

I agree; it's disappointing that Amazon still haven't added native support. It's [possible](https://aws.amazon.com/blogs/compute/scripting-languages-for-aws-lambda-running-php-ruby-and-go/) to run Ruby in Lambda, but - like you said - not ""out of the box"".

However, lambdas are typically supposed to be used for small/simple scripts - therefore personally, I usually have no difficulty in writing/translating the code into another language with built-in support, e.g. Python.

> Ruby is getting behind again

No idea what you mean by ""again""... AWS Lambda was officially released over 3 years ago. Nothing has changed with regard to ruby support.",1529791897.0
karlw00t,"If they had a big customer demand, they'd support it. Maybe all the rubiest are using Azure?",1529797977.0
rimuru,"This is one of the biggest reasons why I have started to create Ruby runtime for other serverless frameworks(in my case, it was OpenWhisk).

[https://github.com/apache/incubator-openwhisk/pull/3725](https://github.com/apache/incubator-openwhisk/pull/3725)

This is a kind of differentiating strategy for Ruby to live better in serverless world. The best-case scenario would be: big cloud providers such as Amazon or Google will treat this kind of competitors as non-negligible in future. This is just my two cents but I wonder that this is what we can do at best in the long-term unless you are the one who determine priorities of feature development of AWS Lambda.",1529913699.0
ejstembler,"It‚Äôs probably in the works, or at least it‚Äôs probably on their list. On 5/3 they asked what they should add next. Lots of people, including myself, voted for Ruby support. https://twitter.com/chrismunns/status/992090315254185984?s=21",1529989284.0
saltvedt,[We Want Serverless Ruby!](https://www.serverless-ruby.org/),1530019610.0
tk425,Just learn go ,1529763847.0
rubydubyhoo,:(,1529787607.0
bxclnt,"You may want to look into Ruby's Enumerable module:

    class Cat
      attr_reader :name, :age 
      # This makes the private instance variables @name and @age 
      # publicly available by a public accessor method. The above is simply
      # a shorthand for 
      # def name
      #   @name
      # end
      # you may want to look also into `attr_accessor`
      # edit2: do note the implicit return: a ruby method returns the last value automatically
      #  meaning return statements are almost always only used for an early exit, such as
      #  in a guard clause

      def initialize(name, age)
        @name = name
        @age = age
      end
    end

    class Person
      def initialize(name, cats) #cats is an array of type Cat
        @name = name
        @cats = cats
      end

       # no need to pass argument, because Person already knows its own cats
      def print_cats
        # iterate through the cat array and print all cat information
        @cats.each do |cat|
          puts ""#{cat.name} is a cat and is #{cat.age} years old.""
        end
      end
    end

    mittens = Cat.new(""Mittens"", 3)
    tom = Cat.new(""Tom"", 12)
    fluffy = Cat.new(""Fluffy"", 8)

    billy = Person.new(""Billy"", [mittens, tom, fluffy]) 

    billy.print_cats

I'm not entirely sure what you mean with ""Why do I have to define the array but not the string"". As you can see, you don't need to explicitly instantiate an Array object, but can just use it implicitly. ",1529738938.0
SirWusel,"When you are calling `@name` from `Person#print_cats`, you are inside an object of the Person class, not the Cat class, because that method belongs to instances of Person. So when you are trying to access `@name`, you will get the `@name` that was defined in the Person initializer and `@age` will return nil because it is not defined in that class (Ruby returns nil in many cases when things are not defined, which has its pros and cons).

So to get started, you have to store your cat objects (`mittens`, `tom` and `fluffy`) in your person object (`billy`). You are already passing them as an array to the Person initializer, but then you are not assigning that array to the `@cats` attribute, instead, you are storing a new array of `nil`'s in there (`Array.new``(5)` => `[nil, nil, nil, nil, nil]`), so your person object has no reference to any cat object and thus cannot access the cat's attributes.

    class Person
        def initialize(name, cats)
            @name = name
            @cats = cats
        end
        ...
    end

If you do it like this, `@cats` will have an array of references to your three cat objects.

Now let's move on to `Person#print_cats`:

First of all, you don't need the `cats` parameter anymore, since now you already have your cats in the Person object. So when you are inside this method, you can call for example `@cats[0]` to get the first cat object. However, now we have to get to the cats attributes, but there are no methods defined to access them from outside the Cat class (remember, you only have access to a classes instance variables from within objects of that class).

In many languages, you would create methods like `Cat#get_name` and `Cat#get_age`, but in Ruby, if you only need default getters, you can simply use `attr_reader :name, :age`, and that will create those methods automatically for you.

    class Cat
        attr_reader :name, :age
    
        def initialize(name, age)
    	@name = name
    	@age = age
        end
    end
    
    # This is the equivalent of the code above
    class Cat
        def initialize(name, age)
    	@name = name
    	@age = age
        end
    
        def name
            @name
        end
    
        def age
            @age
        end
    end

Ok, so back to `Person#print_cats`:

You are already iterating over all the cats, but you are not making the individual cat entries accessible to the block. To achieve this, you should take a look at `Array#each`, or more precisely, the each method in general, since every class of the Ruby standard library that can be iterated over has to have this method. Furthermore, the each method and all other methods that spawn from it (`map`, `reject`, `select`, `all?`, ...) are your best friends when writing Ruby code (say good bye to tedious for or while loops).

    class Person
        ...
        def print_cats
            @cats.each do |cat|
                puts ""#{cat.name} is a cat and is #{cat.age} years old""
            end
        end
    end

Now, when you are calling `Person#print_cats` after assigning an array of cat objects to your person, it will iterate over that array, access each cat object that is inside of it and then access the `@name` and `@age` attributes of each cat object by using the getter methods that you have made available with `attr_reader`.  But make sure to only put cat objects in that array or else you might get a `NoMethodError`.

Hope that helps and feel free to ask more questions.",1529754087.0
tbuehlmann,"I changed your code a litte:

```ruby
class Cat
  attr_reader :name, :age
  
  def initialize(name, age)
    @name = name
    @age = age
  end
end

class Person
  def initialize(name, cats)
    @name = name
    @cats = cats
  end

  def print_cats
    @cats.each do |cat|
      puts ""#{cat.name} is a cat and is #{cat.age} years old.""
    end
  end
end
```

With this, your cat objects respond to `name` and `age` instance methods so you can call `some_cat.name` and `some_cat.age`.

Your code would look like this then:

```ruby
# MAKE SOME NEW CATS
mittens = Cat.new(""Mittens"", 3)
tom = Cat.new(""Tom"", 12)
fluffy = Cat.new(""Fluffy"", 8)

# MAKE THE PERSON'S CAT ARRAY
billys_cats = Array.new
# PUSH THOSE KITTIES INTO THE ARRAY
billys_cats.push(mittens)
billys_cats.push(tom)
billys_cats.push(fluffy)

billy_length = billys_cats.length
puts ""BILLY length: #{billy_length}""

# CREATE THE PERSON OBJECT
billy = Person.new(""Billy"", billys_cats) # why do I have to define the array billys_cats above, but I don't have to define the string ""Billy"" for the name field?

# PRINT OUT EACH OF THE PERSON'S CATS
billy.print_cats
```",1529738817.0
manys,"`for i in 1..cats.length`  
should be  
`for i in 1..@cats.length`",1529740580.0
Ikuyas,"Instance variables in ruby is always private unlike others in which they are usually public by default. So you need a getter (get method) to access it from other class (Person). attr\_reader :name is exactly the get method for name. So, where you have cat.name and cat.age you are not getting instance variables (member variables) directly, but you are actually calling get methods to get the instance variables. So, they are actually [cat.name](https://cat.name)() and cat.age().",1529742642.0
bxclnt,"Yea I had to make some edits, because I forgot some stuff. Try again then it should work now ",1529742980.0
jr0nic,"Short and painful:
```
sentences = cats.map { |cat| ""#{cat.name} is a cat of age #{cat.age}."" }
puts sentences.join ' '
```
prints info about all cats of the person.
To do this you need public methods `name` and `age`, yielding the resp. data in the cat class. 

This can easily be achieved by writing
```
class Cat
  attr_reader :age, :name
  # ...
end
```
which defines these getters for you.  Or 
```
def age
  @age
end
```",1529742992.0
philpirj,"You have made a mistake in the initializer, you ignore the `cats` argument and assign a new array with five `nil`s to `cats` instance variable, instead of assigning the passed argument to it.",1529748574.0
philpirj,"Answering to your question in the code, you don't have to pass a variable as a `cats` argument, you can pass an array of cats directly:

    billy = Person.new(""Billy"", [mittens, tom, fluffy])

By the way, you don't have to initialize an array by calling `Array.new`, `[]` will do. Also, it' usually better to list the items you want to add to an array in square brackets instead of pushing to it one by one. ",1529749084.0
akaethon,You must use attr\_reader in Cat class.,1529738686.0
my_toesies,"I'm totally going to eat crow and say /u/gejr90 was correct. It's returning the opposite boolean value. It can work in front of the object or as its own method. To test, try:

$ nil.! -> true

$ false.! -> true

It was returning false because any object is 'truthy' and will return therefore return false when the .! method is run. Interesting find!",1529736372.0
Shaper_pmp,"I don't know the answer to your question either, but I kind of feel I have to apologise to you for the community's appalling and embarrassing reading comprehension.

You asked a very clear and specific question, and it's slightly embarrassing that the first three people to post responses apparently only got as far as ""exclamation mark"" before confidently answering with completely off-topic comments that have nothing to do with your question... and that they (or other people) downvoted your responses when you quite reasonably pointed out they weren't answering your question.

Could you point us at a couple of examples of gems with `!` methods, and maybe we can help work it out from their source code?",1529736378.0
jrochkind,"It is literally the definition of the `!` operator.  

In ruby, operators definitions are contained in method definitions. There's still built in to the language to call those definitions when the operators are used.  Check out this craziness:

    irb(main):007:0> class Foo
    irb(main):008:1>   def !
    irb(main):009:2>     puts ""you really don't want a ! method like this""
    irb(main):010:2>   end
    irb(main):011:1> end
    => :!
    irb(main):012:0> !Foo.new
    you really don't want a ! method like this
    => nil
    irb(main):013:0>


> I am asking about the exclamation mark as a method e.g. 'something'.! not as !(4<5).

> Except If it's the same. 

It is! You can call it as `obj.!`, but it's invoking the same method, just without the special syntax handling for invoking it as an operator. 

Let's ruin ruby now:

    irb(main):013:0> class Object
    irb(main):014:1>   def !
    irb(main):015:2>     self.to_s =~ /1/
    irb(main):016:2>   end
    irb(main):017:1> end
    => :!
    irb(main):018:0> !1
    => 0
    irb(main):019:0> !""foo""
    => nil
    irb(main):020:0> !""this is a thing""
    => nil
    irb(main):021:0> !""i have a 1 in me""
    => 9
    irb(main):022:0> !!""i have a 1 in me""
    => nil
    irb(main):024:0> !!"" 1 at position 1""
    => 0
    irb(main):025:0> !989191
    => 3
    irb(main):026:0> !!!"" 1 at position 1""
    => nil


Don't do that. it's almost certainly _never_ a good idea to define a custom `!` method on anything. (Let alone redefine it on Object, which is obviously insane).  But ruby will let you. 

In standard ruby, one way to implement `!` would be to define it a method that always returns `false` on Object/BasicObject, and then override it to be a method that always retruns true on `NilClass` (the class of all `nil` objects), and `FalseClass` (the class of all `false` objects).  It is probably implemented something like this. ",1529760612.0
x1a4,"In this case, it'll be [`BasicObject#!`](https://ruby-doc.org/core-2.5.1/BasicObject.html#method-i-21).

You can investigate methods through their handle.

    2.5.1 :001 > a = 13
     => 13
    2.5.1 :002 > a.method(:!)
     => #<Method: Integer(BasicObject)#!>
    2.5.1 :003 > a.method(:!).source_location
     => nil

That shows as nil because it's natively defined (i.e. in C). [Here](https://github.com/ruby/ruby/blob/trunk/object.c#L221) is the implementation in the interpreter, if you're interested.

For something written in Ruby, including from gems, you'll get the file and line number of the method definition:

    $ pry -r csv
    [1] pry(main)> CSV.method(:foreach)
    => #<Method: CSV.foreach>
    [2] pry(main)> CSV.method(:foreach).source_location
    => [""/home/user/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/csv.rb"", 1139]",1529813481.0
midasgoldentouch,"The answer makes sense now that I think abou it. I mean, if you place `!` before a statement, you expect it to negate it as well.",1529740146.0
jimworm,"It's a unary method. Used like this: !13. A more common unary method is :-, which is used like this: -13.",1529923418.0
gejr90,"Oh I see what you‚Äôre saying now. When you add an exclamation to a method it‚Äôs destructive meaning it mutates the original piece of data you call the method on.  So for instance:

arr = [1,2,2,3,4,2,3] 

If you call arr.uniq it will return a *new* array without mutating the original instance of arr which can be saved to a new variable. However, if you did the following arr.uniq! It would mutate the original piece of data saved in the variable arr. So what was originally saved in arr no longer exists. 

Edit: forgive me for not doing the right formatting. I‚Äôm on mobile. If no one answers better by tomorrow I‚Äôll write a more in depth response!",1529737775.0
gejr90,"The exclamation mark reverses the Boolean value. So let‚Äôs say you have a conditional statement like 4 < 5. That statement returns true but if you do !(4 < 5) it returns false. If you do something like !!(‚Äúhello‚Äù) it returns true. Double bangs coerce a datatype into a Boolean. Hope this helps! 

Edit: grammar",1529734295.0
my_toesies,"http://ruby-for-beginners.rubymonstas.org/objects/bangs.html

Not the official docs but basically sums it up",1529734844.0
amphibious_shark,"!
It is known as bang operator.
It modifies the object used to call the method itself.
Ex:

alphabets = ['A','B','C'] 
    
=>['A','B','C'] 

alphabets.map(&:downcase)

=>[""a"", ""b"", ""c""]

alphabets

=> [""A"", ""B"", ""C""]

alphabets.map!(&:downcase)

=> [""a"", ""b"", ""c""]

alphabets

=> [""a"", ""b"", ""c""]

Calling the map method without the bang operator returned a new array with downcased values.
Calling the map method with the bang operator modified the array(the object calling the map method) itself.

https://stackoverflow.com/questions/612189/why-are-exclamation-marks-used-in-ruby-methods
",1529735050.0
geraldbauer,"Hello, for the world cup I've updated the [sportweb command line tool](https://github.com/sportdb/sport.db.web) that
lets you browse your local sport.db / worldcup.db with a built-in instant web admin server (and rails engine). Browse all world cups (from Uruguay 1930 to Russia 2018) or build your own league / tournament. Cheers. Prost. Enjoy the beautiful game with ruby (and rails).",1529685871.0
menge101,"> Whenever you have something like collection.map{|e| e.name } you can write it as collection.map(&:name).
This is a pretty neat shorthand but it never made much sense to me that the syntax used a colon :.

It's using a symbol.  :name is being called on all objects in the collection.",1529670901.0
AnalphaBestie,"Interesting, totally missed that.

Have you had a look at https://github.com/fazibear/awesome-opal ?",1529654589.0
Mon_Ouie,"Just because this is possible: you can use the fact that UnboundMethod objects returned``Module#instance_method`` don't just store the name of a class and the name of the corresponding method, they store a reference to the actual implementation of the method. So by keeping a reference to such a method object and redefining the method, you can do something like this:

     class Module
      def prepend_to_method(name, &block)
        old_method = instance_method(name)
        define_method(name) do |*args, &method_block|
          block.call(*args, &method_block)
          old_method.bind(self).call(*args, &method_block)
        end
      end
    end

    class Foo
      def hello
        puts ""World!""
      end
    end

    foo = Foo.new
    foo.hello
    Foo.prepend_to_method(:hello) { print ""Hello "" }
    foo.hello",1529619597.0
ioev,"You could just redefine the method, copy and paste the body of this method into it along with your binding.pry?

    SomeClass.class_eval do
      def some_method
        binding.pry
        (code from other method)
      end
    end

Though, if you're just trying to debug something, I'd suggest taking a look at the ""byebug"" gem, which lets you step into methods.",1529618250.0
andyw8,"This is a kinda strange request, and there may be a better approach if you can explain the context of what you're trying to do.

I'll hazard a guess that you want to pry into a class within a gem you depend on? If so, you can run `bundle info somegem` to get its path, then edit its source to add the `binding.pry` call. Afterwards, you can run `bundle pristine somegem` to restore the original code.
",1529630158.0
i_know_sherman,with Module.prepend you can call super to call the original implementation FWIW,1529721359.0
laerien,    (buddies + pals).uniq(&:id),1529608894.0
Mancinoz,"// EDIT: Benchmarked and the \`#uniq\` method by /u/laerien is faster

You could override the \`Object#hash\` method and add them to a set

    class A
      def id
        %q{im not your buddy pal}
      end
    
      def hash
        id.hash
      end
    end
    
    class B
      def id
        %q{im not your pal buddy}
      end
    
      def hash
        id.hash
      end
    end
    
    class C
      def id
        %q{im not your buddy guy}
      end
    
      def hash
        id.hash
      end
    end
    
    buddies = [A.new, A.new, A.new]
    pals    = [B.new, B.new, B.new]
    guys    = [C.new, C.new, C.new]
    
    # Without mutation
    Set.new([*buddies, *pals, *guys])
    # With mutation
    Set.new(buddies.concat(pals).concat(guys))
    # => #<Set: {#<A:0x0055efa5bb4c58>, #<B:0x0055efa5b9ee58>, #<C:0x0055efa5b790b8>}>",1529645892.0
NativityInBlack666,"Just use the | operator:

    a=[1,2,3,4,5]
    b=[3,4,5,6,7]
    c=a|b

    print c

    => [1,2,3,4,5,6,7]
",1529836283.0
kewldude606,Convert one array to a set to avoid your O(n^2) duplicate check.,1529610530.0
kbroaster,"Can't you use a hash? Put all values of A into a hash and then do the same with B.

boilerplate code for you:

a = ar.inject({}) {|x,(y, z)| x\[y\] = z;x}",1529615881.0
4rch3r,"Assuming order isn't important (just preserving B uniqueness) I'd use a hash table:

    t = {} # hash of ids => A/B object
    buddies.each{|b| t[b.id] = b unless t.has_key?(b.id)}
    pals.each{|b| t[b.id] = b unless t.has_key?(b.id)}
    combo = t.values
    
Notes:


1) Never call Array's :+ method on large datasets.  In order for :+ to work as expected, Ruby has to allocate another Array which has room for every object in both Arrays and copy each item into itself as well!


    2.3.4 :016 > z = x + y # x is [1,2] y is [2]
     => [1, 2, 2]
    2.3.4 :017 > x.push(3)
     => [1, 2, 3]
    2.3.4 :018 > z
     => [1, 2, 2] # changing X did not modify the new Z Array!!!
    
As you can see, Z has completely copied X's data into itself as modifying X does not impact the content in Z. 

It is obviously not performant (execution or memory-wise) to copy multiple lists.  Be SUPER careful calling Array#+ in general.

2) Calling `include?` on an Array is SLOW... There is a linear execution growth with the size of your Array since it has to compare each element in your Array to the given element.  

Why does a hash table help?  Hash tables essentially achieve a constant `include?` regardless of the dataset size via the `.has_key?` lookup

3) My hunch is that the A/B classes are most likely rails models in an SQL database... If this is the case, the fastest way may be to not do this is not in Ruby at all!  SQL databases are engineered to run queries like these much faster than Ruby can ever process data.",1529631940.0
iconoclaus,"_edit: oops, didn't see the other set solution.  oh well, i'll still keep this as another reference point_

But sets are a great way to perform, well, set operations like the one you want (union).

    class Element
      attr_reader :id
    
      def initialize(id)
        @id = id
      end
    
      # define equality of elements
      def eql?(b)
        self.id == b.id
      end
    
      # override hash to match equality logic
      def hash
        id.hash
      end
    end
    
    a = Element.new('a')
    a2 = Element.new('a')
    b = Element.new('b')
    c = Element.new('c')
    d = Element.new('d')
    
    set1 = [a, b, a2].to_set
    set2 = [a2, c, d].to_set
    
    # a union of unique elements
    set1 | set2 

The last line now returns a `Set` of all elements except `a2`. This set can be converted into an array using `#to_a` if thats what you ultimately want.

Not sure how performant this is, but set logic sure makes sense given what you want from these collections.",1529690224.0
vfreefly,"What is your platform? Anyway, here you can find all what you need to install ruby https://gorails.com/setup/osx/10.13-high-sierra for any platform.",1529618107.0
4rch3r,"If you just want to install ruby itself I'd checkout RVM @ https://rvm.io/ 

It also sounds like you want a packager like: https://github.com/pmq20/ruby-packer to compile your executable, but if I'm understanding you correctly it may not be necessary... You should still be able to call your scripts locally via CLI ie `ruby myscript.rb`.",1529628493.0
keyslemur,"This is a more formalized version of the previous version of this challenge, along with a detailed solution provided and multiple illustrations to walk through the concepts.

Also, as a reminder, baweaver == keystonelemur",1529600912.0
x1a4,"fun challenge.

one note - you don't have to cheat with the html tags for Nokogiri. It can handle fragments directly with `Nokogiri::HTML.fragment(str)`:

    $ pry -r nokogiri
    [1] pry(main)> str = '<h1>title</h1><h2>test</h2><h2>test2</h2>'
    => ""<h1>title</h1><h2>test</h2><h2>test2</h2>""
    [2] pry(main)> noko = Nokogiri::HTML.fragment(str)
    => #(DocumentFragment:0x2b219c600a98 {
      name = ""#document-fragment"",
      children = [
        #(Element:0x2b219c600520 { name = ""h1"", children = [ #(Text ""title"")] }),
        #(Element:0x2b219c600458 { name = ""h2"", children = [ #(Text ""test"")] }),
        #(Element:0x2b219c600390 { name = ""h2"", children = [ #(Text ""test2"")] })]
      })
    [3] pry(main)> noko.css('h1, h2')
    => [#<Nokogiri::XML::Element:0x2b219c600520 name=""h1"" children=[#<Nokogiri::XML::Text:0x2b219c5e9208 ""title"">]>, #<Nokogiri::XML::Element:0x2b219c600458 name=""h2"" children=[#<Nokogiri::XML::Text:0x2b219c5df744 ""test"">]>, #<Nokogiri::XML::Element:0x2b219c600390 name=""h2"" children=[#<Nokogiri::XML::Text:0x2b219c5d3f84 ""test2"">]>]
",1529871072.0
andyw8,Post the JS version for comparison.,1529595374.0
thibaut_barrere,"I never post Patreon-related pages, yet I feel supporting Sam to continue his work on this Ruby live coding synth would be great (including to promote Ruby).",1529581365.0
zfundamental,"Patreon is a double edged sword for open source projects. In the long term it can be a successful model, but building up the audience is a lot of work and you do need to gamble to a degree that you'll be able to grow an audience fast enough that you won't run out of $$ while in the process.

Sonic Pi is a pretty cool project, though it does have a limited total audience size, which might be a contributing factor for the slow growth. I'll wish the author the best of luck, though financial success with respect to open source work involves a lot of hard work and a good amount of luck.",1529673796.0
Ikuyas,What are anything like this in other languages?,1529695548.0
bijection,"Ruby [arrays](https://ruby-doc.org/core-2.5.1/Array.html) *are* dynamically sized arrays, similar to C++ vectors. The [vector](https://ruby-doc.org/stdlib-2.5.1/libdoc/matrix/rdoc/Vector.html) in the standard lib is another array-like class with methods corresponding to vectors in the linear algebra sense.",1529561076.0
anithri_arcane,"Learning [Array](https://docs.ruby-lang.org/en/2.4.0/Array.html), [Hash](https://docs.ruby-lang.org/en/2.4.0/Hash.html), and [Enumerable](https://docs.ruby-lang.org/en/2.4.0/Enumerable.html) makes programming in ruby so much easier.",1529605317.0
stumptowncampground,"No. Generally in ruby you define a class and all it's methods in the same file. You _can_  spread it across multiple files, but unless you have a really good reason to do that, don't.",1529546940.0
tom_dalling,"As other people have mentioned, it all goes in a single file.

In Ruby, the ‚Äúinterface‚Äù of an object does not exist in code. There is only the implementation. If an interface is declared anywhere at all, it‚Äôs usually in the comments or other documentation. This is what people refer to as ‚Äúduck typing‚Äù. ",1529559093.0
jrochkind,"It is not. I'm not even sure how you would do that in ruby, really. Not any way good. ",1529553569.0
stumptowncampground,"There are many terms that get thrown around without really understanding their meanings. 

Dynamic refers to the type system. If you define a variable `item = 'name'` (and yes, that is exactly how you define a variable in Ruby) you do not have to tell ruby that the value of `item` is a string. You can then later redefine the variable as another type `item = 1` and that is perfectly legit, unlike in a static language where you define the data type when you define the variable and can not change it's value to a different data type.

As for 'everything is an object', there are classes in ruby and everything has a class. Even the the value `nil` is an object with the class `NilClass`. I've found that numbers are a good representation of this. The `Integer` class is the parent class of all integers, so you can call any of the methods defined by the class on a number. A popular example is `5.times { puts 'hello' }` which will print out the word 'hello' five times. Even math is a method call: `5 + 5` is just the syntactic sugar for `5.+(5)`.

Is Ruby a dead or dying language? No, not really. It was massively popular for a couple years, primarily tied to the web framework Ruby on Rails, but it's not the popular new kid on the block anymore. But articles that shout ""X IS DEAD"" drive more page views. I guess if your definition of dead is 'not what all the cool kids are using' then you could call it dead. But it has a strong community and leadership and is still used by many companies and people.

Is it used mostly for web development? Well, yes and no. Due to the popularity of Rails, it is mostly used in web development. However, it is also common in server management. Tools like chef and puppet are written in Ruby. Really, you can do a lot of things with Ruby. So just because it is primarily used for web development doesn't mean that it can only be used for web development.",1529546124.0
Crono-kun,"I saw your other questions on this subreddit and want to give you a general advise. While learning new language try to avoid questions like ""there's that thing in C++, how can I use that thing in Ruby?"". Ask yourself (yep, ask yourself first, then google, then ask others) ""I want to achieve this or that; how do I do this in Ruby?"". Also remember that Ruby is a multi-paradigm programming language, so every thing can be done in many different ways.

Start learning Ruby from something basic like [https://pine.fm/LearnToProgram/chap\_00.html](https://pine.fm/LearnToProgram/chap_00.html) .

Then maybe read [https://pragprog.com/book/ruby4/programming-ruby-1-9-2-0](https://pragprog.com/book/ruby4/programming-ruby-1-9-2-0) (a bit outdated tho) and [https://pragprog.com/book/rails51/agile-web-development-with-rails-5-1](https://pragprog.com/book/rails51/agile-web-development-with-rails-5-1) .

Write code to try things you learned. Try something like [https://www.codewars.com](https://www.codewars.com) .

Read code from popular opes-source projects written on Ruby, there is a ton on github.

Oh, and don't forget to have fun! Many developers choose Ruby because it's just nice to use. ;)",1529572079.0
MuCowNow,"""ruby is dying"", ""only used for web development""

I use Ruby on the backend for anything more complicated than what bash can handle.

For data manipulation/transformation, Ruby absolutely slays Python (Perl? ... forgettabootit).

For learning, I recommend ignoring the esoteric concepts (i.e., metaprogramming, ""everything is der objecten!"").  Practice with Classes, Objects, Methods, Attributes, Exceptions (concepts mapped easily to C++).  Add in Modules and their use.  enumerator concept.  Standard Library.  Gems.  You can go a long way with just that.

Inline blocks (i.e., anonymous functions) may be a new basic (and required) concept.

THEN, learn how 'attr_accessor' is implemented -- BAM, a metaprogramming implementation you've been using all along!  Then avoid doing your own metaprogramming unless it can make things SOOOO much easier/possible (in my opinion ;) ).
",1529601192.0
banister,"Ruby is not good for desktop development in general, it's a total clusterfuck to deploy and ship.",1529716715.0
riddley,"I think you should post some code so we can get a better idea of what you're working with. In general, I'd avoid Hash for things other than maps. Also you mention 'gets' in the title, but not in your post. Are you talking about IO.gets or about ""getters and setters"" ?",1529533539.0
,Give your product class a variable called quantity. The user gives you the product and quantity. Create a method that multiplies a products quantity by its price. ,1529543199.0
your_power_is_mind,Yeah upgrading to 2.5 from 2.4 isn't trivial. I ran into problems because I use mariadb locally. What other things should we watch out for?,1529534869.0
jemminger,"It's technically wrong then in 2.4, isn't it?",1529548640.0
this_is_not_nil,"I remember having to hack around this, I just assumed I was doing something wrong.",1529584831.0
jrochkind,"I wrote this. It's designed to make serialization to postgres jsonb, possibly with complex multi-level object hieararchy, as smooth and seamless as possible.  

(designed with postgres jsonb in mind, but all the features but querying support should work with MySQL json too). 

Any kind of feedback is very welcome, including giving it a try. ",1529519978.0
brianlouisw,"Very cool library - and a pretty good README too :) .

I think I might try to check this out over the weekend",1529527341.0
burenstam,"I've been following along with the development and must say I really like your approach@jrochkind üëç

I've been waiting for something more serious to build (only played with it thus far) where I can use it and just recently started working on an app that will! :) 

Thank you! ",1529575197.0
in0pinatus,Would you consider using the attributes API for casting? e.g. as in https://gist.github.com/inopinatus/f454241886866562f7b39b9b41267a4c,1529707480.0
jemminger,"You need to be in the directory of the project in the command line, and then run ""bundle"".  This will install the gems specified in the Gemfile.
",1529516214.0
derekkraan,"Sounds like you are enjoying Elixir :)

I can relate to the things you wrote in your post.

One thing you didn't write about but what I'm really happy about is the simplicity of Elixir. Crazy meta programming is very commonplace in the Ruby world and I'm super happy it's not a thing in Elixir. I feel like the language is a lot less complex and I'm never left guessing where a particular method comes from.

Also, we all love Jos√©. He's super helpful and always looking to get people involved in the project. I have 2 pull requests in ActiveRecord (from 5 years ago) and one in Ecto (this year) and the difference was just night and day. The AR changes took well over a month with little to no communication and had to refactor twice. The Ecto changes were merged the same day by Jos√©.",1529515965.0
Mike_Enders,"I tried  elixir for 3 months.  learned it enough to build a small app in Phoenix.  It has its purpose but in my opinion it is overhyped by its followers and i'll explain why.  Let me be clear first that I  **am** a fan of Elixir (but not of Phoenix which its kind of married itself to - similar to how ruby did with Rails at first) for very niche purposes. Its biggest bonus is concurrency.  Few other platforms match its per server concurrency capabilities.  But truthfully VERY VERY few apps will ever need it and other languages simply use a few more servers if they get to  millions of users

The problem with Elixir and phoenix (which its pretty married to at this point)   is that  it involves a  decent learning curve and it has a very very small ecosystem (be prepared to make your own wheel often).  Its pretty easy to get going and do some crud work so it can and was  sold as ""like rails"" but don't be fooled -Somewhere after the first week the hill comes and the learning curve goes up.  Its not Ruby/rails or anything close to it.  Thats okay if it really does lead to more productive programming but the evidence is lacking with elixir/Phoenix to say the least. I am still struck after following  with the Elixir community and news for nearly two years how so few are doing anything big with it. Elixir enthusiasts always tell me how more productive they are and when you ask them what they built or are building its terribly underwhelming. Many are still working their way through a book.

If its so productive where the rush to the gates?  over the two years I have  followed it  adoption by programmers is nowhere near at the level the elixir fans  thought.  After familiarizing myself with it I don't believe the enthusiasts at all anymore.   Mind  you Functional programming is cool .  its clean and common sense at some points going very much along the path I think ...  I do believe functional programming will continue to grow but in the end I asked myself -  Why choose elixir to be  that functional language when its basically  a language wrapped over Erlang's capabilities which in decades has not been used widely outside of telecom?

I'd rather continue  learn functional programming   for something I can use widely.  Rails and ruby work great for me (and will shortly wipe out some of the main downsides people levied against it with Truffleruby and its brother from another mother - Crystal  - faaaaar more similar to Ruby) on the server.   Why mess with Elixir further when its usage is very limited to where its underlying BEAM can be used?

If we ever have a multimillion user app on our hands (or one thats growing fast to that then) maybe we'll rewrite (as you always end up doing with any app) but thats pretty niche .",1529527719.0
asianova,I went to a talk by Hal Fulton of The Ruby Way on Elixir. He's pretty enthused and spoke much on why Dave Thomas and other early rubyist are excited about Elixir. Hal recommended reading this article http://www.gotw.ca/publications/concurrency-ddj.htm,1529518085.0
ashishbista,"I like Elixir. I feel fun while coding with a pure functional programming language like Elixir or with a pure OOPL like Ruby.  But, I don‚Äôt like Phoenix. I would rather write the pieces that need concurrency in pure Elixir, not the whole app in Phoenix. I believe the design of Phoenix would improve as the community grows. ",1529553158.0
kenman345,"Might be nice if you could extend this to use a config variable along with the url. The variable would be an array of urls, these can be the exclusion list just like the url tag. 

Also might be nice if this extended the ability to add a relationship opener. This can help in telling web crawlers not to follow the links as it‚Äôs not a part of your site",1529529581.0
burenstam,"Cool!

I noticed that `rel=""noopener norefferer""` was missing and opened a [PR on GitHub](https://github.com/keithmifsud/jekyll-target-blank/pull/7) :)

Without that set, external pages opened with `_target=""blank""` gain access to full `window` object of the original page!

_Edit_: Here's a blog post with more info https://mathiasbynens.github.io/rel-noopener/",1529578780.0
zverok_kha,"(Sorry for awful accent. Some ideas seem worth sharing, though.)",1529476519.0
byroot,"There is a difference. If you use `,` you declare a second argument to your block, it's just that blocks don't enforce the number of arguments passed and will initialize the missing ones to `nil`. 

    >> block = Proc.new { |a, b| [a, b] }
    => #<Proc:0x007fc865a5f9a8@(irb):15>
    >> block.call(1)
    => [1, nil]
    >> block.call(1, 2)
    => [1, 2]
    >> block.call(1, 2, 3)
    => [1, 2]


    >> block = Proc.new { |a;  b| [a, b] }
    => #<Proc:0x007fc865a47088@(irb):19>
    >> block.call(1, 2, 3)
    => [1, nil]
",1529493492.0
Tomarse,"Because you are declaring the variable at the start of the block, Ruby limits that variable name to the scope of the block.

    > foo = 42                                                                                                                                                        
    > 1.times { |foo| foo = 'hello' }
    > foo
     => 42 

    > foo = 42 
    > 1.times { foo = 'hello' } # foo not declared
    > foo
     => ""hello"" 
",1529481756.0
iconoclaus,"I‚Äôve run into both the problems the author highlights. But I recall some time back finding that leading dots were preferred by Ruby style guide. Now that he shows that both are perfectly acceptable, I‚Äôm wondering if this is a recent change in the style guide and Rubocop?",1529508740.0
Songg45,"Got it to work! Here is my .te file

    module passenger 1.0;

    require {
            type httpd_t;
	        type cert_t;
	        type default_t;
	        class capability sys_resource;
	        class file { execute getattr open read };
	        class file execute_no_trans;
	        class file { write create };
	        class file { setattr unlink };
	        }

    allow httpd_t default_t:file { execute getattr open read };
    allow httpd_t default_t:file execute_no_trans;
    allow httpd_t cert_t:file { write create };
    allow httpd_t self:capability sys_resource;
    allow httpd_t cert_t:file { setattr unlink };",1529517793.0
Ikuyas,"C, and it doesn't take you time, but you have to understand precisely.",1529743070.0
kbroaster,"From my own experience, going from ruby to java was quite rough. Overloading, generics, annotations, etc. oy vey.

Probably best, imo, to learn some sort of compilation language like C, C++ or Java.",1529428977.0
fiveguy,"TLDR:

You're safe if you have config.assets.compile = false (in production, which is the default setting)

If not, bundle update sprockets to a patched version and deploy",1529450354.0
ASIC_SP,"that's because lookbehinds have to be fixed length, cannot be of variable length... 

here's a work-around, [though \K is not documented](https://bugs.ruby-lang.org/issues/14500)

    >> /<\w+>\K\w+(?=<\/\w+>)/.match(""Fortune favours the <b>bold</b>"")
    => #<MatchData ""bold"">

doesn't make much difference here, but you could use different delimiters if needed, for ex: `%r|<\w+>\K\w+(?=</\w+>)|`

Further reading:

* https://stackoverflow.com/questions/22821644/why-this-regex-assertion-doesnt-match
* https://stackoverflow.com/questions/11640447/variable-length-lookbehind-assertion-alternatives-for-regular-expressions
",1529425965.0
schneems,"I did a write up on this here https://blog.heroku.com/rails-asset-pipeline-vulnerability.

Heroku is actively detecting vulnerable versions using config of `config.assets.compile=true` and blocking the deploys. First time we've done something like that before.",1529426768.0
Intrepidd,Has someone managed to exploit this successfully though ? All I managed to do was get an `Sprockets::FileOutsidePaths` error (when trying /etc/passwd) seems like you can only target files under the sprockets load path ?,1529479722.0
hananamar,"Can anyone recommend a solution for rails 3?

Just setting `config.assets.precompile = false` won't do, because I keep running into missing files. I would love it if I could just update the gem.

However, rails 3.2.22.5 depends on actionpack 3.2.22.5, which in turn depends on sprockets 2.2.1. The patched version is 2.12.5, though. Any suggestions for a quick solution?",1529482068.0
caadbury,"If you're using this with a high-throughput table, you can expect deadlock issues.",1529420711.0
schneems,Did not know about https://github.com/magnusvk/counter_culture which is an issue I have for CodeTriage. Thanks!,1529431615.0
izeisler,Here's a the link to the live editor to play around with [https://visualize-ruby.herokuapp.com/](https://visualize-ruby.herokuapp.com/),1529430665.0
GDP10,Very exciting! I've been wanting to use Truffle for a while now and this is just the ticket!,1529333797.0
stanislavb,That's great. I will give it a try soonish :) (~8h),1529278968.0
how_do_i_land,"You may need to install, link or just add llvm 4 to your path.
https://github.com/oracle/truffleruby/blob/master/doc/user/installing-llvm.md",1529348269.0
whistlerbrk,"Having serious large scale full stack Rails and non-Rails (Py or Node) under my belt now, it has become ever so clear how productive Rails is and how much of that is the fact that Ruby actually has a f\*\*\*ing standard library. So I'm not surprised by these numbers.

Then with gems like devise, filterrific, simple\_form, cocoon, carrierwave, sidekiq, and activerecord-import I can whip together apps so quickly it just boggles my clients' minds. The ecosystem is deep, rich, documentation is good if not great and the language has several paths to getting some serious speed improvements behind it (Graal/Truffle/Substrate and JIT).

Implementing the simplest things in the node ecosystem sometimes feels like wading through molasses. I love ES6/7 but damn for 95&#37; of projects today regardless of (anticipated) scale I'd choose Rails to start with and then split off just the things which need to be fast or fancy like Delayed Processing / MQs, ETL, any data science, etc.",1529280429.0
stevula,I would love to work with Ruby professionally but it seems like all the positions require 5+ years of experience. I‚Äôve found it much easier to find JS jobs. ,1529268281.0
herr_bratwurst,"After 5 years, working in a golang gig, I came back to Rails, an ongoing project, lot to do and I'm quite happy to be able to work full-time with ruby again. Nothing against go, but I love the ruby development stack.",1529304217.0
midasgoldentouch,"I feel like you're more likely to see MEAN, MERN, or Node listed in JavaScript postings than Express. It's used, just not explicitly referred to as much.",1529259097.0
inviewapp,I'd be really interested to see what the numbers look like when you factor in jobs that aren't posted publicly. I wonder if there are differences.,1529342940.0
lordmyd,"I think you should be comparing Rails with Node.js as Node's use is mostly within web development. There are very few job postings for other Ruby frameworks so discounting them doesn't alter the picture much whereas preferring Express to Node excludes Meteor, Sails, Hapi and other popular Node.js frameworks. Spring Boot is arguably more web-centric than Spring MVC so if you omit it you have only half the picture for Java and it could be argued that Rails is used for intranet apps as well as websites. 

LinkedIn's job search is far less nuanced than Indeed's where you can specify that the search term appears in the job title, which I find to be a much more reliable metric. Indeed also has an API which eliminates duplicates. My stats from Indeed indicate that the USA is atypical for Ruby/Rails. When you broaden your search to Europe and the rest of the world Ruby and Rails rank much lower. Here in the UK, according to Indeed.co.uk, Rails jobs have declined by about 50% in the last couple of years and they are mainly concentrated in London unlike PHP,  Node and Python which show steady adoption nationwide.

For London Node.js/Rails by job title is 3:1 and Python:Ruby is 4.3:1. Outside London  PHP (excluding CMS) is 7:1. Rails is still a mature framework but there's no doubt that in the UK adoption is declining relative to Node and Python.",1529432146.0
wjaspers,"Testing is a disaster, it doesnt scale well, requests per second are comparatively very low, gems dont manage dependencies well, and Rails marries you to a lot of its built in functionality. Is demand high because too many projects are abandoned?",1529297092.0
ashwinv11,"Great write up! I looked into JWTs as an option for token based auth with my last project, but ended up going for [Devise Token Auth](https://github.com/lynndylanhurley/devise_token_auth) since it did most of the auth heavy lifting for me. Will try JWTs on my next project!",1529261076.0
toadkicker,You can make formatted code blocks using the backtick ` mark,1529230687.0
DoubleJarvis,"Not quite sure what you mean by 'implement' pair. In this case `data` appears to be something that mixes in `Enumerable`, which gives it a `each_with_index` method. When you call `each_with_index` with a block (this part here `do |pair,index|`) it yields each element of `data` as a first block argument, which in this case is called `pair`, and element's index as a second argument. It appears to be that pair is in itself an Array, which allows us to access its elements by index (`x.id==pair[0]`). Keep in mind that you can call block arguments any name you like, it doesn't have to be `pair`, its just an arbitrary name chosen.",1529319472.0
janko-m,"I'm curious, why can't JRuby support `fork()`?",1529276252.0
jrochkind,"So happy to have a JRuby release, with Jruby ActiveRecord adapters, that actually works fully with Rails 5.x finally!

Thank you JRubyists! 

",1529348878.0
DerNalia,Why not just write bindings and have a native extension gem?,1529230998.0
deadcow5,"Nice! Love to see Ruby getting some love in the AI space. Because let's face it, Python is just a drag.",1529363107.0
modnar42,Neat! It‚Äôs now on my list of things to check out soon. ,1529238745.0
jrochkind,"operators in ruby are not-so-secretly just methods.  It's not a syntax error, it's interpreting your intention, but `Object` class literally has no `&` method defined, and those other classes do. 

    irb(main):001:0> nil.method(:&)
    => #<Method: NilClass#&>
    irb(main):002:0> true.method(:&)
    => #<Method: TrueClass#&>
    irb(main):003:0> false.method(:&)
    => #<Method: FalseClass#&>
    irb(main):004:0> Object.new.method(:&)
    NameError: undefined method `&' for class `Object'
      from (irb):4:in `method'
      from (irb):4
      from /opt/rubies/ruby-2.4.2/bin/irb:11:in `<main>'
    irb(main):005:0>

Now to blow your mind. 

    irb(main):005:0> class AlwaysAmpersandsFalse
    irb(main):006:1>   def &(_arg)
    irb(main):007:2>     false
    irb(main):008:2>   end
    irb(main):009:1> end
    => :&
    irb(main):010:0> AlwaysAmpersandsFalse.new & true
    => false
    irb(main):011:0> AlwaysAmpersandsFalse.new & false
    => false
    irb(main):012:0> AlwaysAmpersandsFalse.new & ['whatever','the','heck','you','want']
    => false",1529210137.0
Tomarse,"Just to add to jrochkind's answer, in Ruby everything is an object.

    > true.methods.sort
     => [:!, :!=, :!~, :&, :<=>, :==, :===, :=~, :^, :__id__, :__send__, :class, :clone, :define_singleton_method, :display, :dup, :enum_for, :eql?, :equal?, :extend, :freeze, :frozen?, :hash, :inspect, :instance_eval, :instance_exec, :instance_of?, :instance_variable_defined?, :instance_variable_get, :instance_variable_set, :instance_variables, :is_a?, :itself, :kind_of?, :method, :methods, :nil?, :object_id, :private_methods, :protected_methods, :public_method, :public_methods, :public_send, :remove_instance_variable, :respond_to?, :send, :singleton_class, :singleton_method, :singleton_methods, :taint, :tainted?, :tap, :to_enum, :to_s, :trust, :untaint, :untrust, :untrusted?, :|] 

So `true & true` is just `true.&(true)` with some syntax removed.

And because everything is an object, you can monkey patch anything to do whatever you want.

    > true.class
     => TrueClass

    > class TrueClass
    >   def & thing
    >     false
    >   end
    > end
     => :& 

    > true & true
     => false 

But monkey patching core objects is generally not a good idea (though rails does it with things like blank?). Better to create your own version of that object.",1529217575.0
Shaper_pmp,">  figured the last line was because there were no () and it was attempting to use & true as a parameter

Other posters have covered the fact that operators are ""just"" methods, so I'll just add that the error message clearly states that your interpretation is wrong:

> NoMethodError: **undefined method `&'** for #<Object:0x007f9e7ac96420>

Ruby is telling you everything you need to understand what's happening (and that it's *clearly not* parsing `& true` as parameters to `new` - it's looking for a method called `&` on the object concerned). The error message is trying to help you understand, if only you read it.",1529229528.0
OneNeptune,Sounds interesting. Do you have the source or a demonstration available?,1529198889.0
the_exiled_shoe_lace,I'd be interested! As I've just started down the path of applying for jobs. Some way of automating part of the process would be fantastic!,1529198926.0
Oranges13,Do you have an example of the output? I'd be very skeptical of a generated cover letter.,1529200319.0
zfundamental,Author of the library here. I thought the broader ruby community might find some of the work interesting. Essentially MRuby-Zest provides a way to create a GUI building off the idea of Qt's QML while keeping the implementation solidly within Ruby objects. This approach in my opinion makes things run more smoothly (from a development perspective) than trying to extend widgets which may have their core/base implementation in C or C++.,1529177345.0
choallin,"This looks really great!
As far as I understand it yet, this works only for your audio application, right? Would it be possible to extract mruby-zest as a standalone gem so others can create a client application with it? If so, are there plans to do this, or is this up to the community?",1529299259.0
feelosofee,Can't wait to see this extracted from the audio/vst only context into something more generic! Ruby desperately needs good GUI libraries.,1529593180.0
,"I am glad the amount of new gems is diminishing, because I don't think anyone reinventing the wheel is a good thing, nor is releasing gems which solve problems the wrong way. Sometimes gems are better left outside of your program in favor of a custom module.

That said, we do find better ways to do things and those are times a new gem can be valuable.

I am currently using kaminari because I don't think will_paginate is very graceful and I think the project can be considered abandonware.

Pagy looks like it's worth a try.",1529188302.0
ksec,"\>**I wonder how many gems we've been using that really hurts the performance of the apps that we design and deliver.**

Nothing, or close to nothing in Rails land ( Not necessary Ruby Land ) has had performance in mind. I think as Rails mature, we can start looking at performance again.",1529176254.0
this_is_not_nil,"> And please take into consideration that the last release of will_paginate was almost a year ago, the git repo has a few dozens of pull requests pending and the last commit dates back to July 2017.

I wish we could stop this wankery over commit dates.",1529332934.0
ksec,"Can't wait to see TruffleRuby landed so the communities can / should massive test it out. 

Unfortunately Sulong and the C extension aren't working quite well yet.",1529170434.0
iconoclaus,Is it available through rvm yet?,1529166252.0
zitrusgrape,"`rbenv install truffleruby-1.0.0-rc2`

but rails 5.2 is not there yet",1529313806.0
caiocaio,"This isn't about Ruby, in the least. Ruby isn't even mentioned. It's actually about how the writer's adoring fans should communicate with him. That's pretty blatant even for a Medium article.",1529105627.0
stanislavb,Great times are coming to ruby.,1529104073.0
-TURBOMAN-,"If this is already 9x faster, what is the point of the upcoming mri ""3x3"" ? ",1529142834.0
mischiefunmanagable,been pondering whether truffle is going to be our version of V8,1529152094.0
torimus,"Is it only me, who is worried about the company which owns and finances its development ?

Don't get me wrong, I'm glad Ruby still gets serious attention, but get used on by long time proven, neutral development model of most open source projects, including CRuby. On the other hand have bad experience with such and similar companies with murky deeds in the past. I just smell some kind of future vendor lock-in, intentionally crippled free version to force payment for normal version with closed-source parts‚Ä¶",1529170033.0
toadkicker,Maybe I need to learn something new about CSRF here. I understood that it wasn't needed in Rails API mode because the API is already cross origin and CORS and CSP are more important to implement. The article kind of skips over explaining why its needed in this architecture vs having Rails render the forms.,1529020274.0
,[deleted],1529031481.0
Serializedrequests,"I am having massive issues with CSRF since rails 5 though. If a user hits the back button, chances are they are about to have a bad time. I didn't implement anything weird and I always follow the guide, but CSRF really sucks for my users now.",1529063801.0
neck_varentsov,API with http only cookie and CORS protection is secure and don't need CSRF protection. Or maybe you can provide example when CORS is not enough? Except GET request that has side effect like deleting project :),1529229685.0
equivalent8," Note: I've updated the article 27.06.2018, added section on CSRF Breach. It's quite important note ",1530080020.0
swrobel,Cool idea but kinda wish it was slimdown instead ,1529003877.0
meagar,"This is a neat idea, but it's not really practical. I don't see an obvious way of adding the `.class` or `#id` or other arbitrary attributes to the Markdown elements.

Being able to type `# Title` or `[link](url)` sometimes is not desirable to me, if I have to type `%h1.post_title Title` and `%a.btn(href=url) link` other times. I'd strongly prefer a longer consistent syntax over a short but inconsistent syntax.",1529005373.0
jrochkind,Not sure how much benefit this really gives you over just haml. ,1529017234.0
_matthewd,"The first race condition I can see is that it can fail to dequeue a message.

As /u/chrisgseaton said, though, this is pretty much exactly the use case for `Queue`:

    # once
    queue = Queue.new
    Thread.new do
      while item = queue.pop
        # send `item`
        puts item

        sleep 0.5 # go slow
      end
    end

    # at runtime
    queue << ""hello""
    queue << ""world""

    # lazy hack to make this demo work
    sleep 2
",1528980102.0
TextileWasp,"Use a Queue. It‚Äôs already synchronized.
https://ruby-doc.org/core-2.4.2/Queue.html",1528986572.0
chrisgseaton,"Why do you create a new thread to call `deq`? And why do you check if the mutex is `locked?` before doing it?

Instead of using `MUTEX.lock` and `MUTEX.unlock` consider using `MUTEX.synchronize { }` which does the lock and unlock automatically.

Or use the `Queue` class, which is synchronised by default.
",1528972938.0
i_dont_like_reddit_6,"Re-evaluate ""I hate frontend and JS"" - ""page full of functions and micromanaging the DOM with jquery"" sucks, but stuff's come a long way. Frameworks like Vue make developing front ends really nice - it makes JS front end stuff feel like real development instead of the old hacks upon cruft upon junk way of doing things. Plus, you don't have to go 100% JS to get in on the front end stuff - you can keep Ruby for the back end and go JS on the front.


Machine learning has become pretty approachable too in recent years. The basics, like text classification, can be picked up with some time and effort - and there's some decent Ruby stuff, though its not as big as Python. 

Other ideas - lose Rails. Or, at least learn how to do everything you do without Rails. Also, get in depth with Rack and Sinatra and really learn how it works. Write a Rack plugin. And do some Gem development!",1528927862.0
ClickCancelToStay,"I would recommend either diving heavy into JS or AWS. You mentioned that you hate JS, but I don't know the last time you looked into it but there's some pretty great frameworks out there and coding standards. It's not the wild west of jQuery anymore.

Almost every developer above intermediate is going to expected to start providing solutions. Most of the go to solutions these days is breaking your monolithic app into microservices that you can individually monitor and scale. The requires learning about cloud services the EC2, RDS, Lambda, and many more AWS technologies. It's not the most interesting stuff, but it makes you very employable.",1528925085.0
basex,"If you want to continue with ruby I suggest DevOps. A lot of the tools use Ruby. 

At least where I leave is one of the profiles more difficult to find and one of the highest paid. ",1528925750.0
banister,"Learn unix system programming: learn about file descriptors, signals, pipes, setuid processes, tcp/ip & networking, and so on. It's how everything ultimately works under the hood and will give you the ability to thoroughly understand and debug almost any problem.

Yes you'll have to learn C, but any programmer worth his salt should learn C \- it's the lingua franca of \*nix and all your production apps typically run on \*nix.",1528931629.0
aspleenic,"Contribute to Open Source is always a good idea. Also, branch out, learn other languages. Ruby is only good as its people - and its people are only as good as their ability to learn new things.",1528923235.0
combuchan,"Getting more experience is not a bad thing if you've been at it two years--you also didn't say whether what you're writing has 20 users or 2,000,000.  A ""lateral"" promotion into a more challenging environment is far from a bad thing.  

That being said...

RoR goes along well with full-stack--it seems most people hire on that.  Mobile is another one.  

Devops isn't the best of career paths with ruby.   Few people run chef and puppet is terrible.  It's also difficult to get into without operations experience.  I have lots of devops experience but very little in the cloud and I'm not really getting where I'd like with employers.

Python is endlessly useful these days (especially with devops), and machine learning and data science is big, but the field as I understand it is pretty crowded.",1528927803.0
in0pinatus,"""RoR + JS"" isn't full stack. It's maybe 10% of the stack at most.

You should try each of the things you listed for a week, and then follow your nose into the one(s) you really like.

You need to get over ""hating frontend"" though. Front-end is the part that people interact with, and technology is pointless if it is not made for people.
",1528932170.0
,"Learning SQL is good.  I brushed up my SQL a few months back by writing a bunch of unit tests to check that certain queries returned the expected results.  If you wanna check it out, here it is => https://github.com/amorphid/learn_sql_ruby.",1528928000.0
nielsbuus,"I'm three months into Python 2.7 / 3.5 (after 6 years of Ruby and Rails).

Even though I want to, I can't recommend it. I'm sure it has it's uses in data science due to historical libraries, but the language and it's standard library is just slightly above meh to me.

Swift \+ Vapor looks cool. I would love to get a perspective on it from someone who's well\-versed in both.",1528925621.0
codeprimate,"Full-stack and security should be the natural next steps for you.  

Especially security and data privacy compliance.",1528926897.0
comjf,"Pick up knowledge of containers (specifically docker) and different web architectures. Monoliths vs microservices and play with dockerizing your RoR App. There are all kinds of guides you can find online and it fits well within the rails ecosystem. 

In general start learning about the layers you're not so familiar with. Nginx/Apache, Sphinx/ElasticSearch, Redis/Memcache, Try out different ruby appservers like unicorn or passenger. Start thinking about the architecture at a high level, and see if you can replace one of those layers with a different technology just to see if it would work / the pros and cons. After a while of doing this kind of stuff, just call yourself DevOps and enjoy a 40K raise ;)",1528928887.0
tastycakeman,"containers and devops would be my vote.

im with you in terms of trepidation about JS. yeah you can know enough, but there are rails shops out there that use enough JS to be useful without going all in on the changing landscape. 

devops is also changing quickly enough that its interesting and useful.",1528935227.0
owens_trevor,Being full\-stack is incredibly invaluable. I try to hire everyone good full\-stack dev I can.,1528947740.0
editor_of_the_beast,You should become a SQL ninja. ,1528930474.0
Tainnor,"Instead of trying to jump into completely new technologies, I would advise starting to look into software engineering best practices.

Start playing around with Trailblazer and/or dry-rb, just so you know vanilla Rails isn't the only way. Read books like ""Patterns of Enterprise Architecture"", ""Practical Object Oriented Design in Ruby"", ""Working Effectively with Legacy Code"", etc. Also read blog posts, but never just believe one side of the story.

If you do want to try out new tech, try something really different, so you can learn new ways of thinking, e.g. a statically typed language and/or a functional language, but (in a very different vein) dabbling a bit in C or even assembly will also tell you a lot of things.

Understanding things that you already use - like SQL, HTTP, etc. - on a deeper level can also be helpful. Especially with SQL, Rails by default only exposes you to a subset of it; modern DBs like postgres have tons of other features that you could explore.

Always be learning.",1528984576.0
amalagg,"JavaScript is what all the cool kids are doing but I think it is overweight and over engineered. 

Most business applications don't need to be single page applications.",1528942108.0
TylerP3358,"Well, I am actually on the start of my web dev career period, and I am trying to learn on RoR/JS currently.  Seeing a post of this natures makes me jealous, as I am still trying to be proficient in any language.

With that being said, what about R?  I see so many people talk about it, and it seems like the perfect pet-project language to pick up.  I don't know about employability, but it definitely seems like something people are making a lot of chatter about.",1528925956.0
Trevoke,"Given your requirements, maybe stop being a software developer and go be a cook on a submarine?


You need to know SQL, HTML, and VanillaJS. You also need to know how to deploy a Rails app using Capistrano and, today, how to wrap a deploy in docker.

Once you do that you can call yourself a developer. ",1528951164.0
awwfishsticks,"gems are themselves modules or pieces of code that you can include in your own ruby code to add in different functionality, usually things that you don't want to write yourself.

Take the faker gem, for example, which enables you to generate email addresses (Faker::Internet.email) or Bitcoin addresses (Faker::Bitcoin.address) or even random Legend of Zelda item names (Faker::Zelda.item) without actually having to code those things yourself. The benefit of this gem is being able to generate fake, but properly formatted data for use in (e.g.) tests.

There are also gems for user Authentication within applications (Devise) and for integrating with mysql databases (mysql2), or even entire web frameworks (rails).",1528918566.0
saturnflyer,"bundles of code. libraries.
Anything you think you can reuse could be put into a gem.
Some gems are popular and have a long life like rails. Others like https://rubygems.org/gems/home_run are used to overcome specific problems in ruby and then are abandoned when those problems are fixed.",1528918716.0
geraldbauer,See How I Start - Let's Build a Gem Together! - <http://yukimotopress.github.io/start>. Cheers. Prost.,1528960205.0
Malfeitor218,"In short, gems are plugins. Additional functionalities you enhance an already existing product with. In Ruby, it's a single command you enter instead a bigger portion of code to add a functionality. Just because it's way more convenient to enter a single line instead of dozens. 

I have just published the blog post containing the most frequently used gems at the software house I work at, and describing the magic they actually are able to do. For details, please check: [Top 19 Ruby gems you can‚Äôt miss in 2018](https://prograils.com/posts/top-19-ruby-gems-you-cant-miss-2018).

Enjoy!",1536244138.0
nakilon,"And please, don't hurry to publish own gems. Their list is already cluttered with abandoned and useless things made for tests and very specific personal usage.

UPD: before deciding to gemify you library, even if it has to be public, you can just host it on Github providing a `.gemspec` file. It will look less nice in `Gemfile` but before you really need to gemify there is a possibility you will decide to rename your library, split or merge with something else.",1528918782.0
saturnflyer,"When I run into a confusing situation like this I search my gems for the method definition.

In my `.bashrc` file I have `alias bundle-search=""bundle show --paths | xargs ag""` which relies on https://github.com/ggreer/the_silver_searcher/
I just type `bundle-search ""def respond_to""` and see what files appear.

You could just type `bundle show --paths | xargs ag ""def respond_to""`
There's a new kid in town for file searching too, so if you don't have `ag` you might want to consider `rg` instead: https://blog.burntsushi.net/ripgrep/#pitch

That doesn't directly answer your question but it should give you a way to investigate",1528919217.0
andyw8,"If you're on Vim 8 or NeoVim, I'd recommend using https://github.com/w0rp/ale over Syntastic since it runs in the background and doesn't cause slowness.",1528942499.0
allcentury,"Ah a git commit hook is a good idea, thanks!",1528972982.0
Gabriii01,I recommend https://github.com/runtastic/rubocop_runner to easily install the pre-commit hook ,1529250887.0
jrochkind,"What's an ""Elixir Engineer (m/f)""?  I don't get ""m/f""?  Like, any gender?  Aren't any job posting for any gender?  Or, uh, monday-friday?",1528902906.0
this_is_not_nil,"I wonder why this thread stopped: https://www.postgresql.org/message-id/flat/20170828172834.GA71455%40TC.local#20170828172834.GA71455@TC.local

And <3 for /u/tenderlove for trying to fix hard stuff so we don't have to leave Ruby that often!",1528889502.0
moomaka,"Seems to me a better solution to this is to add proper finalizer support to Ruby. I think you could technically hack around this with existing finalizer support, but it would be pretty ugly.",1528907315.0
lordmyd,Considering Ruby apps often default to PostgreSQL this might be a major contributor to the image Ruby has of not handling memory well. Is anyone in a position to compare this with how Python manages the same issues?,1528995474.0
tastycakeman,"following all of this malloc stuff recently has been really enlightening, and I'm really glad there are people still poking around at the core foundations of ruby and ruby performance.",1528998501.0
strangepostinghabits,"Maybe you should take a programming course before studying to an exam? 

tryruby.org has an introduction that will cover the above problem iirc.

Also google for ""ruby array"", the official documentation is always a good place to look.",1528882974.0
Nondv,"    myArray[0..2] + myArray[-2..-1]
    myArray[0, 2] + myArray[-2, 2]

But since you couldnt answer yourself I suggest you to take strangepostinghabits advice and learn some basics first.",1528883928.0
hmaddocks,"One of the best things about Ruby is a thing called POLS. It stands for the principal of least surprise. It has many meanings but one that often works for me is try the obvious thing. 

You say you want to take some elements from the first array. Search for Ruby‚Äôs take method. ",1528884226.0
in0pinatus,"Use [Array#values_at](http://ruby-doc.org/core-2.5.1/Array.html#method-i-values_at) which can pluck multiple indices and ranges, thus:

    myArray = Array(1.upto(10))
    myArray.values_at(0..1, -2..-1) #=> [1, 2, 9, 10]
",1528884261.0
Enumerable_any,"I don't know any Ruby resource about concurrency, but I found Simon Marlow's [Parallel and Concurrent Programming in Haskell](https://simonmar.github.io/pages/pcph.html) a great resource to build up a vocabulary and get an intuition for when you'd use the different ways to build concurrent applications (STM, locks, channels, ...). The content is full of real-life examples, I can remember something about a chat application and a distributed database.",1528878413.0
chrisgseaton,"Quite a bit of concurrent\-ruby is inspired by the work that went into concurrency in the JVM. I would recommend you read Java Concurrency in Practice by Goetz.

I don't think there are any books on Ruby concurrency ora parallelism, I'm afraid.",1528880608.0
this_is_not_nil,"I can recommend jstorimers book, https://www.jstorimer.com/products/working-with-ruby-threads ",1528889623.0
chrisgseaton,Do you mean the ISO standard? You can read the draft for it for free here [https://www.ipa.go.jp/osc/english/ruby/](https://www.ipa.go.jp/osc/english/ruby/).,1528850503.0
capn_sanjuro,"A style guide might be a good resource.

https://github.com/rubocop-hq/ruby-style-guide",1528866270.0
keymone,https://www.codewars.com/ - this has a ton of trivial problems and solutions submitted by other people. you can practice and you can explore other ways to solve the same thing.,1528885005.0
codeprimate,"These are really good tips, but be aware that lambda invocations are very slow. Mapping a lambda against a large array will kill performance.",1528838105.0
Nondv,"I've written some post on russian IT-site about one of the applications.

How do I put this... I store helper methods in lambda. It's slower but code becomes cleaner in some cases (so it should not be practices often).

For example:

```
class MyClass < AnotherClass
  def method1
    p_method1
    p_method2
    some_objects.each { |e| p_method3 if p_method4?(e) }
  end

  def method2
    p_method1
    p_method2
  end
  
  private

  def p_method1
    # ...
  end

  def p_method2
  end
 
  # You get the idea
end
```

In this code `p_method4?` is needed only by one method (`method1`). I call such private methods ""helpers"". They just add some abstraction to main method. It's hard to read class with many private methods. At some point you may even have helpers that are not used at all (e.g. after some refactoring).

So my suggestion is to use lambda for that helpers: 

```
  def method1
    p_method1
    p_method2
    
    is_something_whatever = ->() { ... }
    some_objects.each { |e| p_method3 if is_something_whatever[e] }
  end
```

That way your code will be reduced. In some cases it will be reduced drastically.

But it's sure my slower than methods so you need to be careful. And this hack is not really needed if you keep your classes small (SOLID).",1528884767.0
zenzen_wakarimasen,"\> ""Knowledge is knowing that a tomato is a fruit. Wisdom is not putting it in a fruit salad.""

Ruby is not Javascript. The developers that come after you will have a set of expectations based on all the other Ruby code they read in the past.

Although all this constructions are nice, and can make person who wote them feel like he/she is a clever programer, I feel that they don't really improve the quality of the code.",1529043495.0
janko-m,I've already been using [Octodown](https://github.com/ianks/octodown) for a while now and it's working great for me.,1528808372.0
derrickcope,I have to open the document twice to get a preview.,1528807464.0
rbrick111,"certification_level is a Stripe::Plan object, not a hash. So in order to read information about its product you'll need to use a method accessor most likely. Try certification_plan.product.name. I'm not familiar with Stripes API you could try checking their gems unit tests, can be a good way to learn an api.",1528767987.0
d_impious,i'm not sure what you're asking but couldn't you convert the file to base64 ?  ,1528752403.0
senj,Youre going to need to be more specific. Posting a gist of your seeds.rb might help. There are a lot of ways to tackle this. ,1528760258.0
seainhd,Seed image file? How about just serve static assets?,1528778291.0
,Why not just serve static assets?,1528795143.0
stanislavb,I'm curious why this one was down-voted? ,1528802620.0
cmdk,I really like [codewars.com](https://codewars.com). You can also try [exercism.io](https://exercism.io). ,1528711142.0
ASIC_SP,"check out http://rubykoans.com/ and https://rubymonk.com/

I've also put up a few basic-intermediate exercises: https://repl.it/community/classrooms/53963 ... feedback has been mixed so far, some say these are easy, while some beginners found it a touch too hard..",1528723769.0
geraldbauer,"By the way, there's a free book called practicing ruby with written up examples, see <http://yukimotopress.github.io/practicing>. Cheers. Prost.",1528724979.0
fedekun,"IMO the best is to get out the box of books, lessons and all that stuff and get down and dirty making something, anything, it doesn't matter. Just write code!",1528742497.0
NativityInBlack666,Solo learn app,1528715696.0
obviousoctopus,"Ruby-kickstart on github. 

Common CS puzzles introducing the language with growing complexity. Include tests and solutions. 

Fun and addictive. 

https://github.com/JoshCheek/ruby-kickstart

From this
https://github.com/JoshCheek/ruby-kickstart/blob/master/session1/challenge/7_string.rb

To this
https://github.com/JoshCheek/ruby-kickstart/blob/master/session3/challenge/5_blocks.rb

To this :)
https://github.com/JoshCheek/ruby-kickstart/blob/master/session3/challenge/15_hash.rb
",1528778445.0
Vialonyx,"Check the Grafikart's Ruby formation (french)
https://www.grafikart.fr/formations/ruby",1528792643.0
nosuchthingastwo,"There are a few issues:

In Ruby, everything is an ""expression"". The statement inside your block `return false if ....` will return `false` (from the whole method, by the way, not just from the block iteration) if your condition evaluates to truthy. But if the condition evaluates falsey, the statement as a whole will give `nil`, since the `if` statement has no `else` branch.

2. For `special`, need the `!` to apply to the entire end result, not just the inner regex check

3. Your `all?` implementation should give a boolean value at the end, but right now it will just give `false` every time because eventually the `while` predicate will evaluate to `false` and that'll be what the `while` loop gives.

Here's something working:

    class String
      def all?(&block)
        i=0
        all_so_far = true
    
        while all_so_far && i < self.length
          all_so_far = block.call(self[i])
          i +=1
        end
    
        all_so_far
      end
    
      def special
        !self.all?{|c| (/[a-zA-Z0-9]/ === c)}
      end
    end

That being said, this is a better way to go, where you leverage Ruby's `Enumerable` module:

    class String
      include Enumerable
      def each(*args, &block)
        # delegate to the `chars` collection
        chars.each(*args, &block)
      end
    
      def special?
        any? { |c| /[^a-zA-Z0-9]/ === c }
      end
    end

But honestly, I wouldn't monkey patch String ever. Every class/library everywhere will be using Strings in all kinds of ways, so you don't want to mess anything up. I'd put the `special?` method elsewhere and pass the string as an argument

Edit: formatting",1528713805.0
Enumerable_any,"1. You need to use `puts` to print to the console (`puts string.special`)
2. `return` in blocks doesn't work as expected, see https://stackoverflow.com/questions/2325471/using-return-in-a-ruby-block
3. Your implementation of `all?` doesn't return the correct result (assuming you're trying to mimic the behavior of `Enumerable`'s `#all?` method).",1528712875.0
jrochkind,"> preload method is nothing new - it is just an alias for #includes method.

Technically, I _think_ is not true. `Includes` will use `preload` in some cases and `eager_load` in others, as appropriate. 

I think. It's not well documented and the code is not easily legible to me. But that's what this one says (it's certainly possible it's changed since then). 

http://blog.scoutapp.com/articles/2017/01/24/activerecord-includes-vs-joins-vs-preload-vs-eager_load-when-and-where

At any rate, neither appears to be an _alias_ for the other. 

https://github.com/rails/rails/blob/c81a7fcf76663e6d189792d6eed57b1162199635/activerecord/lib/active_record/relation/query_methods.rb#L114-L125

https://github.com/rails/rails/blob/c81a7fcf76663e6d189792d6eed57b1162199635/activerecord/lib/active_record/relation/query_methods.rb#L147-L155",1528747239.0
rbrick111,"Check out goldiloader gem https://github.com/salsify/goldiloader it intelligently does the eager loading for you, and links to a blog post explaining some of the encapsulation problems with using includes in your code.",1528734184.0
,"Awesome, I have been meaning to start with Go. ",1528695559.0
pinkyabuse,I love these sort of articles that demonstrate the similarities between two languages. There was another that compared Rust and Ruby. ,1528721456.0
zverok_kha,"From the README:

> Currently, if you want your app architecture not to follow strict framework's _frame_, you can take ROM or Sequel for _data layer_; Sinatra, Roda, or Grape for _routing layer_; but for _view layer_, the situation seems to be different. Typical ""views"" part of the application (say, with Rails, Hanami, Padrino) is bound to a lot of conventions (like ""it will look for the corresponding template in that folders"") and global configuration, and tightly coupled with routes/controllers (""if you want data from controller to be passed to view, you mark it so an so"").

> **Sho** is an experiment to provide view layer that is ""just Ruby"" (= follows the regular intuitions of _Ruby_ programmer, not introducing some hidden conventions that are not deductible from the code) and reuses regular Ruby concepts for code sharing, parameters passing and flow structuring instead of introducing its own concepts like ""helpers"", ""exposures"", ""locals"" (completely unlike local variables!) and so on.",1528640246.0
jrochkind,i like it,1528689002.0
Grimnur87,Seems like the key feature it's missing is to tell you what time the game is on in your local TZ.,1528637261.0
HellzStormer,"```
s = 'cat'
(0..s.size).to_a.combination(2).map { |a, b| s[a...b] }
```",1528596209.0
pedrozath,"that seems simple:

    class String
      def substrings
        length.times.reduce([]) do |memo, size|
          memo + Array.new(length - size) do |index|
            self[index..index+size]
          end
        end
      end
    end

    puts 'Animal'.substrings.inspect
    # [
    #   ""A"", ""n"", ""i"", ""m"", ""a"", ""l"", 
    #   ""An"", ""ni"", ""im"", ""ma"", ""al"", 
    #   ""Ani"", ""nim"", ""ima"", ""mal"", 
    #   ""Anim"", ""nima"", ""imal"", 
    #   ""Anima"", ""nimal"", ""Animal""
    # ]",1528593754.0
eric_programmer,"Maybe using some sort of combinatorics gem?

https://github.com/postmodern/combinatorics",1528580197.0
in0pinatus,"Couldn't resist the opportunity to write:

    substrings = Hash.new do |h, s|
      h[s] = (0..s.to_s.size-1).reduce([]) { |a,i| a << s[0..i] } + (s && h[s[1..-1]]).to_a
    end
    substrings[""cat""]  #=> [""c"", ""ca"", ""cat"", ""a"", ""at"", ""t""]

Not for production use.",1528591857.0
igor_47,"that was fun! i wrote this:

    s = 'cat'
    output = []
    for len in 0..s.length do
      for start in 0..s.length do
        break if start + len >= s.length
        output << s[start..(start + len)]
      end
    end

sure hope i didn't just do a homework/interview problem for you ;)",1528590557.0
Tomarse,I suspect you'll be needing the array's [permutation method.](https://apidock.com/ruby/Array/permutation),1528581393.0
ipxvi14,look up mergesort tree,1528594983.0
fuckthesysten,This is super interesting! Any particular reason for using XML?,1528574776.0
iconoclaus,sinatra is hardly a huge framework. its a fairly thin wrapper around rack. that‚Äôs where you probably want to begin. ,1528554250.0
jrochkind,"Yeah, I think Sinatra is what you're looking for. ",1528558411.0
,[deleted],1528554881.0
capn_sanjuro,Sinatra is great for the requirements you described. I've been doing a lot of small things like this with Roda too.,1528570132.0
thecoolbrian,Use [Roda](http://roda.jeremyevans.net/),1528790809.0
in0pinatus,"A more Rubyish structure might be:

    count = 0
    File.open('fil.txt', 'r') do |file|
      while file.gets(' ') do
        count += 1
      end
    end
    puts count

However, you're actually going to get problematic results at newlines using `gets(' ')`, because newlines aren't spaces, and `IO`'s input separation can't be a regex so you can't, say, `gets(/[ \n]/)`.

A line-by-line split and sum might work:

    count = 0
    File.open('fil.txt', 'r') do |file|
      file.each_line do |line|
        count += line.split.count
      end
    end
    puts count

but we can cut this down much further using the magic of Ruby's enumerators in any number of variants:

    File.new('fil.txt').map(&:split).sum(&:count)      # Ruby 2.4 or later for .sum
    File.new('fil.txt').flat_map(&:split).count        # flat_map doesn't see enough action IMO
    File.new('fil.txt').lazy.map(&:split).sum(&:count) # Lazy enumerator saves a lot of memory

What not to do, though it seems so readable:

    File.new('fil.txt').read.split.count               # Burns memory like it's out of fashion
",1528524769.0
ASIC_SP,"I'm guessing `nill` is a typo, it should be `nil`

other than that I can see some issues/suggesstions

* `File.open('fil.txt', 'r')` inside the while loop means you are opening the file again and again.. assign it to a variable before the loop, for ex: `f = File.open('ip.txt', 'r')`
* no need to actually test for `nil` , when `gets` returns nil it will be a falsy condition and while loop will end
* your implementation would work for single line with multiple words.. you need to use any whitespace like space/newline etc to get word count for multiple lines..
",1528520123.0
asianova,"There are two things:

1. `nill`, unless it is defined in your session, is not the correct syntax. `nil` is actually pretty cool in [ruby](https://ruby-doc.org/core-2.2.0/NilClass.html)
2. `File.open('fil.txt', 'r')` would return a new instance of the file every time:‚Äã

‚Äã

      > f1 = File.open('fil.txt', 'r')
       => #<File:fil.txt> 
      > f2 = File.open('fil.txt', 'r')
       => #<File:fil.txt> 
      > f1 === f2
       => false 
      > f1.hash
       => 1081115760241248509 
      > f2.hash
       => 734762632214327165

With every new instance, this call `File.open('fil.txt', 'r').gets("" "")` will always return `""Lorem ""`

      > File.open('fil.txt', 'r').gets("" "")
       => ""Lorem ""
      > File.open('fil.txt', 'r').gets("" "")
       => ""Lorem ""
      > File.open('fil.txt', 'r').gets("" "")
       => ""Lorem ""

So, the condition will not evaluate to true; i.e. infinite loop.

Give this a try:

      > count = 0
       => 0 
      > file = File.open(""fil.txt"", ""r"")
       => #<File:fil.txt> 
      > while file.gets("" "") != nil
      >   count += 1
      >   end
       => nil 
      > count
       => 100 

*Edit: added infinite loop explanation and* `NilClass` *link*",1528520911.0
Tomarse,"The reason the program breaks when switching between single and double quotes, is because single-quoted strings don‚Äôt process ASCII escape codes( \n, \t etc), and they don‚Äôt do string interpolation, while double-quotes do both.

So `""\n""` is a newline character, but `'\n'` is a back slash and an n.

    > ""\n"".length
     => 1 
    > puts ""\n""

     => nil 

.

    > '\n'.length
     => 2 

    > puts '\n'
    \n
     => nil 
",1528529480.0
Tomarse,"    File.open(filename, mode='r').read.count(' ')+1",1528526117.0
allcentury,A really wonderful write up \- I hope this gets accepted!,1528553807.0
mperham,I experimented with fibering I/O sources in my Ruby infrastructure back in 2010.  em-synchrony and goliath tried to popularize the same.  It made the process runtime really fragile and prone to sudden slowdowns (if a blocking I/O source slipped in somehow) and a source of really tough debugging problems.  Gave me new appreciation for blocking I/O and readable stacktraces.,1528596460.0
janko-m,"Thank you for the write-up! Just to make sure I understood, would this Ruby patch enable making any gem that does IO async-aware?

When I was researching EventMachine, I wanted to understand how exactly do Fibers improve things, and it took some time for it to click. For those who are not familiar, [this blog post](https://www.igvita.com/2010/03/22/untangling-evented-code-with-ruby-fibers/) should shed some light. TL;DR: Fibers allow you to write asynchronous code in a sychronous way, reaping the performance benefits of asynchronicity while avoiding callbacks.",1528622443.0
MaterialDish,"I like Ruby Rogues podcast because of topics that being discussed. I am not in Ruby and Rails right now, but this podcast keeps me not to forget about the ruby world.",1528473690.0
zverok_kha,"* [RubyNewsWeekly](https://rubyweekly.com/) will provide you with cr√®me de la cr√®me of what happened in the community during the week
* [RubyFlow](http://www.rubyflow.com/) is self-submitting ruby gems & articles stream.

Starting from this two, in a few weeks, you'll quickly understand where the most interesting things are typically written and who to follow.",1528549870.0
jrochkind,I manage a feed aggregator with ruby news and blogs: http://rubyland.news,1528611849.0
cruyff8,NB article's a week old.,1528468124.0
this_is_not_nil,"Different jemalloc versions behaves very different with Ruby and especially Rails workloads, it could be interesting to know which version is recommended to use.

SamSaffron and the Discourse project have tested a bit here: https://github.com/jemalloc/jemalloc/issues/524

It is worth noting that jemalloc is currently in version 5.1.0 but that Discourse ships with both 5.1.0 and 3.6.0: https://github.com/discourse/discourse_docker/blob/bb83a26acf438d7b5abb3a5eb4f9889235f5eadb/image/base/Dockerfile#L57-L65",1528473547.0
yespunintended,Is the allocator used for every new object? Or only to increase the heap available?,1528492399.0
skarlso,For those seeing this again... I had a typo in the title which was stupid. :/ Deleting and reposting is the only way I know how to fix it. Sorry.,1528461150.0
bokmann,"I‚Äôll ask a few questions I already have a confident answer for, but I‚Äôm interested in your opinions, and want to see a real conversation here so I can learn more.

1) a hypothetical company in the U.S., targeting U.S. customers.  What, if any, GDPR compliance do I need to worry about?  If I get a form letter complaint, how should i respond?

2) for a European company subject to GDPR, using a simple authentication gem like Devise... what legal compliance do I need to worry about?

3) running on AWS in Europe with this European Devise app, capturing your typical debugging logs like dates, times, login ID, IP address.  What responsibilities do I have with that data? Can I share it with a small development team?

4) the U.S. company above not normally in GDPR jurisdiction, but with the potential for a few European users uses AWS U.S. East, but because of a failover ends up hosting in Europe.  Do requirements change?",1528461095.0
GibletHead2000,I don't have any questions but just wanted to say thanks for such a great project! We've been running or stuff on passenger for years and it's always been painless and fast.,1528469167.0
Mrdirtypixel,"What‚Äôs been your biggest challenge through out this process?

Any hurdles you overcame that might help others?",1528460718.0
Smallpaul,Thank you for Passenger!,1528473468.0
musicnerd47,"What do I need to do to make my app GDPR compliant at a minimum? i.e., what could I potentially be in violation of?",1528459551.0
toadkicker,Can you make a gem that automates lawyering?,1528459814.0
vfeskov,Is it enough to let people request deletion of their data by email? Any chance you can validate privacy policy I wrote here https://gitpunch.com/privacy ? it's pretty short,1528463215.0
sairamk,"Hi, 

I have had a list of questions about GDPR compliance that need input/answering.


Can you take a hypothetical app like a Forum(bare bones demo app) which contains a Database, Memcache for caching, ElasticSearch for searching, Redis for background jobs which has another backend service which communicate through a queue to send updates to each other.

1. What exactly each component/service need to do from an Ops perspective(encryption etc.,) as well as App perspective? Do I need to encrypt the disk, encrypt messages between servers, encrypt messages which go into the queue etc., 
2. What are the challenges and what are standard approaches to solutions to the challenges? 
3. When I send data to any external system, do I need to encrypt or is sending over SSL sufficient? 
4. Do I need to expose a list of all external vendors I use where any customer data is going to or any where even meta information is going? How does GDPR compliance go in-hand with regular compliance for a company. 
5. If an employee downloads customer data (meta information like no of projects or no of posts etc.,) and sends raw data to a group (say top 1000 active users), if a customer requests to delete data, should the data be removed from the emails as well?
6. How does blockchain implementations solve for GDPR compliance? 
",1528471686.0
RightWinger,Thanks for this!,1528447867.0
cmdk,"Genuine question: How is Ruby Motion holding up next to things like React Native and Flutter? 

Is it still a good idea to start a Ruby Motion project?",1528429023.0
FluffyJack,I'm actually really surprised how much people are interested in these episodes being re\-released. If you ever want to ask some questions directly feel free to contact me on Twitter (@FluffyJack).,1528561617.0
Exilor,"    @foo = false unless defined?(@foo)
    @foo = 'bar' unless instance_variable_defined?(:@foo)",1528437210.0
moomaka,"I wouldn't mind having a specific operator if it were thread safe, thats the biggest pain point of `||=`. ",1528434736.0
Morozzzko,"I believe that language should not support this case on a syntactic level.

Runtime type errors are amongst the most common in Ruby, and we don't want to introduce more of them.

If your data can be  either `nil`, `false` or something else, then you should probably reconsider the way you describe your data.

And if you're absolutely sure this is the best design, you need to make your intentions *explicit*. This way you'll reduce bugs in your code. And that's good",1528460200.0
cmd-t,"How about

    @foo = ‚Äòbar‚Äô if @foo.nil?
    @foo

",1528433227.0
Tomarse,"There is a good chapter on this in Practical Object Oriented Design in Ruby by Sandi Metz. The solution they give is supply classes with a hash of parameters, and have them merge with a default set of parameters.

    class Foo
      def initialize args
        defaults.merge(args)
        @foo = args[:foo]
      end

      def defaults
        {:foo=>'bar'}
      end
    end

    Foo.new( {} )
     => #<Foo:0x00000001152f10 @foo='bar'> 
  
    Foo.new( {:foo=>false} )
     => #<Foo:0x00000001152f10 @foo=false> 


",1528437624.0
sshaw_,Perl uses `//`: https://perldoc.perl.org/perlop.html#Logical-Defined-Or,1528477895.0
drx3brun,"For me the most common use case is to memoize the result of some method. I use Memoist gem in order to do that, so I do not have to worry use too much boilerplate if nil or false are possible computation results. ",1528860176.0
iconoclaus,"Nice start!

Couple of things. I would first make the each iteration section shorter. The basic idea is enough and the rest is easily learned by practice. 

Also, I would definitely want to show folks the reduce iterator at the end. It‚Äôs a surprise to many folks that map, select, etc. are all just special cases of reduce. i can show some examples if that is confusing. ",1528439799.0
jrochkind,"You don't need a wrapper class, you can call `future.value!` -- which will return the value if the future was not `rejected?`, and raise the `future.reason` if it was. 

I don't blame you for not knowing about this. Concurrent Ruby is somewhat poorly documented and often inconsistent. 

At one point I wanted to put some time into making this better, but it seemed like the current c-r maintainer(s) were more interested in working on a 'new implementation' of most of it, and suggesting that attempts to improve the 'old implementation' were thus not so useful ([1](https://github.com/ruby-concurrency/concurrent-ruby/pull/509), [2](https://github.com/ruby-concurrency/concurrent-ruby/issues/550)). Of course, a couple years later we don't have the 'new implementation' either (and I never really understood the point or goal of the 'new implementation' myself).  ¬Ø\\_(„ÉÑ)_/¬Ø

concurrent ruby is still pretty darn awesome. But it could be _so much better_ and easier to use.  (like by prioritizing making it work less crazily with Rails for instance, and accepting help from a Rails committer on making it so. https://github.com/ruby-concurrency/concurrent-ruby/issues/585 )",1528408646.0
in0pinatus,"Y'know I could really use a layer on ActiveJob that supplies join/promise-style interfaces but without assuming a shared runtime. Anyone seen something like that in the wild? Bonus points for cute interactions with ActionCable.
",1528411173.0
i_know_sherman,Good stuff. I will add that it seems like you could wrap both of those API calls together and get an even bigger perf boost :),1528424498.0
ioquatix,It's confusing to call it `ConcurrentRuby::Future` and similar. It should just be `Concurrent::Future` etc.,1528413764.0
herr_bratwurst,"What would be a good approach to speed\-up SQL queries in a rails 5.2 app without write RAW SQL queries? 

For instance, I have an application which has lot of controllers doing some SQL queries. It's a web service, with a lot of data, so every select is expensive. Should I for example implement a Repository pattern rewriting some ActiveRecord queries direct with Arel, or should I do it using sequel? To drop ActiveRecord, isn't an option. ",1528699951.0
i_know_sherman,First thing is diagnose and fix all N+1 queries within the app. Another thing would be to explicily `select` only the fields you need. In your queries.,1528759499.0
Sqeaky,"Definitely use the built-in methods instead of writing your own. Each of the built-in methods has a name that conveys some meaning to the next person that reads the code.

For example, if I see that someone calls Array#map then I know that no matter what else is happening here I'm starting with an array and getting another array, and all I have to do is figure out what that transformation looks like. Each of the built-in loops does something like this once people get a basic familiarity with the names.

There are a ton of other reasons to use the built-ins as well. The built-ins are likely implemented in the language the rest of the Ruby VM is implemented in, so they're likely to be faster. The built-ins are likely to manage resources intelligently, or at least manage them in awhile prescribed way. Looking at the Array#map example we know that the output array is a second array that is completely distinct from the input and that can be relied upon by the rest of the code. Finally, I would use the built-ins because they are reliable and well tested, any loop you write but only get the testing you provide.",1528388841.0
ask_me_about_cats,"You can get the best of both worlds with `lazy`. For example, consider this non-lazy code that will hang forever:

    (1..Float::INFINITY).reject(&:odd?).first(5)

This will try to get the first 5 even numbers, but it will attempt to iterate over an infinite list, which will take forever.

Now let's try it with lazy:

    (1..Float::INFINITY).lazy.reject(&:odd?).first(5)

This will lazily iterate over the infinite list, which means it will only compute the portions of the data that it uses. This is similar to how Haskell works.

As a side effect of this, loops basically get combined automatically.

I love this approach when dealing with large files where you want to scan for the first few instances of some bit of text. Let's say I want to find the first 5 errors in my Rails development log concerning ActiveJob, and I want to know how long they took.

     File.open('log/development.log')
      .each_line
      .lazy
      # Only include lines starting with [ActiveJob] which contain the word 'error'
      .select { |l| l.match(/error/i) && l.start_with?('[ActiveJob]') }
      # Extract something in the format of '1234.5ms'
      .map {|l| l[/\d+(\.\d+)?ms/] }
      # Return the first five lines matching these criteria
      .first(5)

This will open the file, stream through it until it finds 5 matching lines, extract the timings, and close the file out. It will *not* read the entire file unless necessary to find 5 matching lines. The filtering and transformation will be accomplished in a single iteration, which is a bonus.",1528397298.0
eric_programmer,"I would in general lean towards combining in a single \`select\` as iconoclaus recommends.

But there are times where for clarity or reuse reasons, I'm ok with the less efficient approach. For example, when the filtering is abstracted as a method and I want to keep that abstraction for reuse reasons.

Generally the number of items we iterate over is small. Going through the list a few times may not be that bad. But if you can keep clarity, reuse and keep it as efficient as possible go with that route.",1528387817.0
iconoclaus,"If you have several things to select on, just put those conditions together on one select:

    my_array.select { |n| n.odd? && n < 256 }
            .sum

In general, I've hardly ever had to write my own loops. The only times I have, are in some demo code where I'm trying to implement something very algorithmic and needing performance ‚Äî atypical of the type of apps written in Ruby.

If you do get stuck on an example where you feel a custom loop is needed, show us!",1528385838.0
moomaka,"Depends on the operations and what your goal is.

In contrast to what several have said here, running multiple chained commands is often faster than doing it one go as with the former you'll often be using fast C implementations vs a Ruby implementation. For example if you have an array of integers or strings and need them sorted in reverse order then `my_array.sort.reverse` is _much_ faster than `my_array.sort { |a,b| b <=> a }` or `my_array.sort_by { |a| -a }`, even for very large arrays.",1528391849.0
Muchaccho,"I'm happy to see a new Ruby podcast :)

Also happy to see how you are naming the files.

    Ruby_Testing_Podcast_002_-_Noel_Rappin.mp3

No need to spend time renaming them to add the podcast info and know what's inside. Thanks!",1528391000.0
jrochkind,yes please. ,1528389998.0
mperham,I prefer to use `>= x.y.z` in my gem dependencies.  Some feel this is too optimistic but I prefer not to exclude future major versions by assuming breakage.  Users can always lock a known good version in their Gemfile.,1528408101.0
Inityx,https://en.wikipedia.org/wiki/Dynamic_array#Geometric_expansion_and_amortized_cost,1528358352.0
rubyrt,"I'll add another angle: the question does not really make much sense in a language which does not give you direct memory access (i.e. no pointers to memory addresses). Fact is, for the user of the language only the API of Array matters \- how things are stored internally is irrelevant as long as it fulfills the advertised access patterns and performance characteristics.

You could argue though that since there is no link to a next element visible from Ruby code, Array certainly is not a linked list. And this would be true even if the *implementation* was using linked lists. It is really important to separate these two layers even though the source code of the Ruby interpreter is readily available and it is easy to look up how things work underneath. (Another of my pet peeves are the tagged pointers which are / were used to efficiently implement integers and a few other things. On the Ruby language level these are invisible.)",1528388425.0
immerc,"> Or am I missing some important point altogether?

Yes, it doesn't matter.

It matters in a language like C where you have low-level access to memory locations.  That results in there being a different API for array-like things and list-like things.

Ruby is an interpreted language that doesn't give you direct access to the memory.  Some of the API for Ruby Arrays looks like C arrays, some looks like C lists.

It's entirely possible that under the hood there's some clever optimization where Ruby uses sequential memory locations for small arrays then switches to linked lists for large arrays.

Of course, C is likely to be faster because by knowing and caring about the gory details, you can optimize things.  A lot of the point of Ruby is to make it easy for the programmer.  By having an API that lets you think of it as a list, or lets you think of it as an array, you're given the freedom to solve the problem however you want.  As long as Ruby is fast enough for your purposes, you don't need to care how it's implemented internally.

",1528389834.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/documentation] [Gem markdown\_helper File Inclusion Adds :comment and :pre](https://www.reddit.com/r/documentation/comments/8p5h2o/gem_markdown_helper_file_inclusion_adds_comment/)

- [/r/github] [Gem markdown\_helper File Inclusion Adds :comment and :pre](https://www.reddit.com/r/github/comments/8p4vg9/gem_markdown_helper_file_inclusion_adds_comment/)

- [/r/markdown] [Gem markdown\_helper File Inclusion Adds :comment and :pre](https://www.reddit.com/r/Markdown/comments/8p5ehx/gem_markdown_helper_file_inclusion_adds_comment/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1528327548.0
jrochkind,"For the most part _it doesn't matter_, you should consider object_ids to be ""opaque"", any relationships treat like they are coincidental, without meaning or to be relied upon.  

But I've seen someone writing before about MRI's implementation I think (which might not match JRuby's etc)....

Ah, I think this one: https://tenderlovemaking.com/2017/02/01/object-id-in-mri.html

",1528308904.0
moomaka,"Past the first iteration here, you aren't looking at how `object_id` happens to relate to one another in general, you're looking at how the object_id of integers relate to each other (since `object_id` returns an integer).

So the question is, why do Integer's have object_ids that relate like this? It's because MRI stores machine sized integers via something called a 'tagged pointer'. Basically you can think of an `object_id` as a pointer to the object itself (or to a `VALUE` which is an intermediary used by MRI). Since Integers are so common, and don't need additional data, the 'value' of an integer is stored in the `object_id` itself thus avoiding creating a `VALUE` at all. ` 76.object_id >> 1 == 76` and this holds for all integers up to 2^62 - 1. This is just an optimization to make integers more space efficient and faster to work with.  This also means your assumption that this holds universally doesn't work, it'll fail as soon as it gets to an object_id > 2^62 - 1. The reason this breaks down at 2^62 - 1 is that MRI uses the lowest order bit to identify the type of the `object_id`, all odd object_ids (ids with a 1 in the right most bit) are integers.

",1528395013.0
chrisgseaton,I'm not sure what you mean \- which bit is strange? This is just how \`object\_id\` is defined.,1528319784.0
realntl,"I don't think that moving from instance variables to helper methods is an improvement. At least with ivars, data is pushed to the view. Helper methods cause the views to pull data, and the importance of this distinction is difficult to overstate. The data contract between the controller and the view should be explicit, and data access should happen separately from template rendering. I expect to be able to render templates with synthetic data in order to test them in isolation, which I can't do with views that are coupled to a universe of helper methods. Conversely, I expect to be able to actuate a controller action and observe the data it gathered separately from the templates.

Instance variables in controllers may have been a hack, but I personally wouldn't trade that hack for the approach outlined in this article.",1528305807.0
meineerde,"Instead of manually creating the setter as

    def users= assigned_users
      @users = assigned_users
    end

you can simple use [`attr_writer`](https://ruby-doc.org/core/Module.html#method-i-attr_writer) to create the same method, i.e.

    attr_writer :users",1528302110.0
bascule,"My favorites:

- [Forwardable](https://ruby-doc.org/stdlib-2.5.0/libdoc/forwardable/rdoc/Forwardable.html) (i.e. `def_delegator` and `def_delegators`)
- [SimpleDelegator](https://ruby-doc.org/stdlib-2.5.0/libdoc/delegate/rdoc/SimpleDelegator.html)

A note on DRb, which is mentioned in this post: to my knowledge DRb access is equivalent to remote code execution. Use it with care! (if at all)",1528325449.0
sshaw_,https://ruby-doc.org/stdlib-2.5.1/libdoc/e2mmap/rdoc/Exception2MessageMapper.html,1528329797.0
in0pinatus,"I'm a huge fan of Avdi Grimm. I levelled up at Ruby thanks to RubyTapas, and this episode in particular was one for the ages. It's great to see it republished with free access.
",1528274795.0
tbuehlmann,Loving the Discworld reference. :),1528286015.0
sshaw_,"> Any time you refer to a named value in a method, and you're tempted to use an instance variable...
> or explicit method call ask yourself if there's any reason not to refer to the value as a bareword instead.
> Chances are there isn't.

If an abstraction is necessary for the given problem sure, but making the internals of your class part of its public interface via `attr_reader`, `attr_accessor`, etc...
by default just to avoid using an instance variable _is not_ a good idea. 

",1528331633.0
equivalent8,...if anyone find this useful.  docs https://github.com/equivalent/azure-test,1528272359.0
lukakas,That's what I want. Thank you!!,1528297089.0
geraldbauer,"Hello, using the sportdb machinery (gems, command line tools and build scripts in ruby) I've put together a [new free public domain dataset for the (football) world cup in Russia 2018](https://github.com/openfootball/world-cup.json). The world's biggest (sport) event kicking off in about a week. 

Enjoy the beautiful game with ruby and datasets in json or sql :-). 

PS: Find the [(activerecord) sql to json script](https://github.com/yorobot/football.db/blob/master/scripts/up/json.rb#L102) in the yorobot automation repo. ",1528270893.0
Arcovion,"Code golf time?

    2.5.0 :001 > ""you're welcome"".gsub(/./){[$&.swapcase,$&].sample}
     => ""YoU'Re weLcoMe""",1528245468.0
akira410,ah fuck. i can't believe you've done this.,1528243841.0
iconoclaus,"    next c.swapcase if rand > 0.5
    c

could it be done as:

    rand > 0.5 ? c.swapcase : c",1528250843.0
flanger001,"Thought y'all might like some benchmarks.

    require 'benchmark/ips'

    class String
      def spongebob
        each_char.map do |c|
          next c.swapcase if rand > 0.5
          c
        end.join
      end

      def sponge_if
        each_char.map do |c|
          rand > 0.5 ? c.swapcase : c 
        end.join
      end

      def sponge_golf
        gsub(/./){[$&.swapcase,$&].sample}
      end

      def sponge_alternate
        methods = %i[upcase downcase].cycle
        chars.map do |char|
          next char unless char.match? /[[:alpha:]]/
          char.public_send methods.next
        end.join
      end

      def sponge_alternate_golf
        gsub /\p{L}\p{^L}*.?/,&:capitalize
      end
    end


    Benchmark.ips do |x|
      str = ""Yours is shorter but mine is quicker""

      x.report('spongebob') { str.spongebob }
      x.report('sponge_if') { str.sponge_if }
      x.report('sponge_golf') { str.sponge_golf }
      x.report('sponge_alternate') { str.sponge_alternate }
      x.report('sponge_alternate_golf') { str.sponge_alternate_golf }
      x.compare!
    end

    Warming up --------------------------------------
               spongebob     6.289k i/100ms
               sponge_if     6.652k i/100ms
             sponge_golf     3.179k i/100ms
        sponge_alternate   965.000  i/100ms
    sponge_alternate_golf    8.672k i/100ms
    Calculating -------------------------------------
               spongebob     67.789k (¬± 3.2%) i/s -    339.606k in   5.015462s
               sponge_if     68.688k (¬± 2.4%) i/s -    345.904k in   5.038931s
             sponge_golf     31.852k (¬± 5.2%) i/s -    162.129k in   5.105108s
        sponge_alternate     11.463k (¬±14.4%) i/s -     56.935k in   5.090994s
    sponge_alternate_golf    88.211k (¬± 4.0%) i/s -    442.272k in   5.022879s

    Comparison:
    sponge_alternate_golf:   88210.7 i/s
               sponge_if:    68687.8 i/s - 1.28x  slower
               spongebob:    67788.7 i/s - 1.30x  slower
             sponge_golf:    31852.3 i/s - 2.77x  slower
        sponge_alternate:    11462.6 i/s - 7.70x  slower

Surprisingly the alternating golfed one is the quickest! Nice work u/Arcovion!",1528291954.0
Paradox,Doesn't the meme swap every other letter though?,1528252542.0
towelrod,no tests tho,1528290277.0
NativityInBlack666,Lmao,1528283574.0
NativityInBlack666,"example of why ruby is superior to python:

    def _spongebob_meme_text_generator_(usrStr):
        memeString=""""
        n=0
        for c in str(usrStr):
            if n%2==0:
                memeString+=c.capitalize()
            else:
                memeString+=c
            n+=1
        print(memeString)
    while True:
        _spongebob_meme_text_generator_(input("">>> ""))",1528455444.0
stympy,"This book is a good starting point: 

https://pragprog.com/book/rails51/agile-web-development-with-rails-51

It's a great introduction to Rails, of course, but it also introduces many parts of the environment surrounding Rails.",1528222824.0
laerien,"Welcome!

Here's a summary of a [few differences and similarities between Ruby and PHP](https://www.ruby-lang.org/en/documentation/ruby-from-other-languages/to-ruby-from-php/).

Ruby ships with a dependency tool for Ruby packages called [RubyGems](https://rubygems.org/), which gives you the `gem` command. For example, to install the [Pry](http://pryrepl.org/) gem, `gem install pry`. Ruby also ships with a popular testing gem called [Minitest](https://github.com/seattlerb/minitest). Ruby has a benevolent dictator named [Matz](https://github.com/matz), rather than a standards board.

[Rails](https://rubyonrails.org/) is one of many adapters for the [Rack](https://github.com/rack/rack) gem. I'd recommend making a simple, pure Rack app. Then try running it with `rackup`. Once you start adding routes you'll see why the adapters exist to make your life easier. Notable Rack adapters include [Hanami](http://hanamirb.org/), [Sinatra](http://sinatrarb.com/) and my favorite, [Roda](http://roda.jeremyevans.net/).",1528235153.0
obviousoctopus,"You may find it helpful to at least read/skip thorough https://www.railstutorial.org/

It goes over building a rails app with increasing complexity and touches the whole ecosystem.

You will see many of the tools, their use, and the reasoning behind including them.",1528236162.0
Blimey85,"If you want a list of some industry ‚Äústandards‚Äù, check out Suspenders by Thoughtbot. You‚Äôll see this company quite a bit in the community as they make a few popular gems, tools, and put out great info.

Also, DriftingRuby and GoRails are both worth checking out. I sometimes watch videos on features I may not need just to learn more about how to do various things. ",1528282971.0
obviousoctopus,"Also, look at this for learning ruby with common CS puzzles. It‚Äôs a lot of fun and introduces language concepts as necessary to solve the puzzles. 

https://github.com/JoshCheek/ruby-kickstart

",1528317272.0
proyb2,"In addition to Ruby, is MRuby which you could setup H2O web server, alternative to Nginx.

https://h2o.examp1e.net/index.html

https://www.slideshare.net/mobile/ichitonagata/how-happy-they-became-with-h2omruby-and-the-future-of-http",1528307044.0
JoyousTourist,"Oh man, I was just in your shoes a year ago. I started writing a book on transitioning from PHP to Ruby. ",1528307311.0
Blimey85,No love for GoRails? There‚Äôs some good Slack communities too you could check out. ,1528212066.0
cjmzi,I wrote down all links at my notebook. kkk Thank you!,1528205361.0
d_impious,http://www.rubyflow.com/ which aggreates a lot of blogs.,1528223521.0
stanislavb,"I'd add these to the list too

* https://ruby.libhunt.com
* https://www.ruby-toolbox.com/",1528259906.0
kenman345,RemindMe! 10 hours,1528214962.0
nordrasir,Can someone point me to something that explains what this is?,1528246693.0
Muchaccho,"I don't know if they are still using Rails for Apple Music, but some months ago I saw a job offer from Apple looking for Rails engineers.

Edit:  
https://jobs.apple.com/us/search?job=113160599&openJobId=113160599&board_id=39991#&openJobId=113160599",1528198788.0
andyw8,I suspect it's not going to be Ruby 1.29 - that would be over 15 years out of date.,1528150421.0
ZulZah,Are you checking out any courses on Udemy? ,1528170773.0
Vangoghbothears,"So I‚Äôm not 100% sure if that‚Äôs actually the version that you‚Äôre using, but as other people have mentioned‚Äîit‚Äôs a bit dated. However, my experience thus far transitioning from py to rails (using ruby version 2.3.3) has been awesome. They‚Äôre really similar in a lot of ways, and though some of the syntax seems a little less sensible at first, I find that the formatting is really forgiving. Plus, there are tons of gems (which are chunks of ruby code meant to do a specific task) that will eventually be something you come to love. I realize you said ruby specifically, and that might be the extent of the position, but I‚Äôd be willing to bet that you‚Äôll eventually delve much deeper into rails because it‚Äôs amazing. 

And as for a resource, I‚Äôve learned using pragmatic studio. The classes cost a little more money, but even though there are free classes online, it‚Äôs an amazing program, and it was definitely a pleasant surprise to see the difference going from free classes to the badass pragmatic ones. 

Good luck with the switch, and feel free to ask if you have any other questions about it! ",1528176774.0
YoshiRulz,[Official Ruby Documentation - To Ruby From Python](https://www.ruby-lang.org/en/documentation/ruby-from-other-languages/to-ruby-from-python/),1528191970.0
prh8,"I have my semicolon/colon key flipped, one of the best things I did when I started focusing on Ruby.",1528161735.0
sdn,One point two nine..?,1528172299.0
PleaseBeSerious,Semicolons everywhere,1528161621.0
tweettranscriberbot,"^The¬†linked¬†tweet¬†was¬†tweeted¬†by¬†[@keystonelemur](https://twitter.com/keystonelemur)¬†on¬†Jun¬†04,¬†2018¬†18:12:50¬†UTC¬†(0¬†Retweets¬†|¬†1¬†Favorites)

-------------------------------------------------

It's time for a new problem! This week, we'll look at getting the hierarchy of HTML headers. Gist to follow, post your solutions as replies to this, or comments on the gist!





[Attached photo](https://pbs.twimg.com/media/De3cme0UYAUIh6c.png:orig)

-------------------------------------------------

^^‚Ä¢¬†Beep¬†boop¬†I'm¬†a¬†bot¬†‚Ä¢¬†Find¬†out¬†more¬†about¬†me¬†at¬†/r/tweettranscriberbot/¬†‚Ä¢",1528136742.0
keyslemur,"Starting something new: Problem of the Week! (PotW)

These problems will have multiple stages of difficulty as well as accompanying tests to try it out against.

Have a problem idea? Feel free to shoot me a message. As with the tip of the day, I _might_ have a backlog of content stashed to use for dry weeks :)",1528136858.0
links_own,"Are you just using Ruby/Rails for a CRUD API? While it's good for that, you can make a CRUD web API in just about any language, but yeah, Rails is good for it. Ruby is indeed a nice language to work with, but you should also think about your other client applications (web, mobile, and desktop) and make sure you're picking appropriate tech for them. 

Look into what authentication mechanism you want to use, I'd recommend JWT. For database, Postgres is usually a pretty easy recommendation, but you might be swayed by some of the others (MariaDB, MongoDB), depending on your exact needs. Make sure you're hosting your code in some sort of version control (GitHub, GitLab, BitBucket).

If you're new to programming, be sure to learn a good bit about Ruby and your client language(s) before diving into making the API/clients. Jumping straight to Rails from zero WILL hurt you.

Have fun!",1528151270.0
modnar42,Can you show both of the outputs?,1528121905.0
,[deleted],1528214774.0
moomaka,What advantage does this have over the current work going on here? https://bugs.ruby-lang.org/issues/13618,1528130620.0
twinklehood,"Hey there! It's cool that you felt like making a gem, but when doing so it's really quite essential that you do a few things.

1) Write tests. This cannot be stressed enough. The behaviour of your method is not obvious, and without test-cases, no-one should feel safe using it. Right now, your implementation strips newlines from the input string, which I would not have expected. It also will not work for tab characters.

2) Stick with established conventions. Ruby uses American spelling, the name should have been ""Marginalize"".

3) Make core extensions optional. I know it seems smart to have `""mystring"".foo""`, but many people prefer explicitly invoking dependencies, eg. `Marginalise.marginalise(string)`, as it makes moving away from the dependency a lot easier, and less risky.

4) Try to avoid nested if conditions. it makes following the logic extremely hard, and usually a more elegant solution lingers somewhere out of sight.",1528101545.0
Locke,"It's possible I'm misunderstanding the purpose of this gem, but is this word wrap?

If so, there's a clever trick for doing this in a line of code. This should word wrap at 60 characters: `str.gsub(/(.{1,60})(\s|\Z)/, ""\\1\n"").strip` (this isn't my creation, just a snippet I stumbled across somewhere or other).",1528119379.0
hehestreamskarma,https://www.reddit.com/r/ruby/comments/8nzu66/httprb_is_great/,1528071550.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/documentation] [Page TOC Now in Gem markdown\_helper](https://www.reddit.com/r/documentation/comments/8oafih/page_toc_now_in_gem_markdown_helper/)

- [/r/github] [Page TOC Now in Gem markdown\_helper](https://www.reddit.com/r/github/comments/8oa6pg/page_toc_now_in_gem_markdown_helper/)

- [/r/markdown] [Page TOC Now in Gem markdown\_helper](https://www.reddit.com/r/Markdown/comments/8oa6vo/page_toc_now_in_gem_markdown_helper/)

- [/r/markdown] [Page TOC Now in Gem markdown\_helper](https://www.reddit.com/r/Markdown/comments/8oa9q9/page_toc_now_in_gem_markdown_helper/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1528047613.0
rbrick111,"Try to model a system you are an expert of to practice OO. It could be as simple as modeling your family, where each person gets a class and has relationships. Start concrete have a myself class, a dadclass, etc. then you‚Äôll start to realize the abstractions. All these people have names, let‚Äôs pull out a nameable module, id suggest you try to use composition (modules) instead of inheritance to practice. If people are boring you could do something else, but this type of exercise is invaluable when you are learning, just make sure you model something unambiguous that you are an expert of so you can focus on the software.",1528049194.0
isolatrum,"i would recommend starting by learning the basics of OOP in ruby. You can google for tutorials in that pretty easy. If you want to get a deeper understanding / be able to understand random libraries easier, look for resources about metaprogramming.",1528096215.0
jrochkind,"> maybe i should pull request rails

Or you can just write a scope for `without(assoc)` and put it on your ApplicationRecord. 

Or write a one-file probably 6-line gem that monkey patches ActiveRecord::Base if you want, heh. ",1528066493.0
Blimey85,Great article but everything in lowercase was very distracting. ,1528052585.0
sickcodebruh420,"If this works as described, it is (will be?) amazing. Not sure if op is affiliated with the project, but some questions I have when reviewing it quickly:

- Is this project stable enough for production?
- Versioning doesn‚Äôt appear to be using semver. What changes can be expected when versions are bumped?
- Is there a project roadmap anywhere? ANSWER: Yes, [here](https://github.com/SciRuby/rubex/blob/master/CONTRIBUTING.md#future-work).
- How does performance compare to native C code? I imagine the answer will probably be ‚Äúsimilar but it depends on the complexity of your code‚Äù but asking anyway.

Apologies if any or all of these are answered elsewhere.",1528051343.0
jonp,I'm wondering how much this is supplanted by ruby 2.6's ability to do JIT.,1528053190.0
v0dro,"Hello,

I'm Sameer, the author of Rubex.

To answer some of your questions:

* 'Simple' C extensions are usable via Rubex and you can make them work easily. However, something more complex might be tough to code and debug since the only way to debug rubex programs is to dive into the  C code and see the C comments about the corresponding origins of the given line of C code. There's no GDB integration yet.
* Speed should not be an issue since in most cases Rubex will compile to very optimized C code. There might be some overhead due to temporary variable allocation on part on Rubex but I don't think it will be much of an issue.
* You can see the project roadmap in the github milestones: [https://github.com/sciruby/rubex/milestones](https://github.com/sciruby/rubex/milestones)
* I'm thinking of using semver post v0.2 release since that's when I expect people to start using it more. Until then you can expect some abrupt changes in the API \(july end\).
* JIT won't affect this in any way since JIT compilation affects the Ruby code directly, not C extensions. See Kokubun's talk at RubyConf/Ruby Kaigi for details.
* A very important goal of Rubex is to make it easy to create APIs for C extensions of Ruby gems which look like Ruby public APIs. This will allow users to easily share the C backend of their gems with other gems via a Ruby\-like API. This functionality has already been planned and should be ready in the coming weeks.

I'm always open to any other questions by people. Do email me if you have any doubts. I recently spoke at RubyKaigi 2018 on Rubex : [http://rubykaigi.org/2018/presentations/v0dro.html#jun01](http://rubykaigi.org/2018/presentations/v0dro.html#jun01)

Also, thank you Victor for pointing me to this thread :\)",1528121477.0
holyjeff,Consider using Nim or Rust for native extensions,1528096087.0
allcentury,"Really cool, too bad no support for blocks",1528050123.0
pabloh,Looks like [SLANG](http://wiki.squeak.org/squeak/slang) for Ruby.,1528045067.0
Dee_Jiensai,neat!,1528048837.0
stanislavb,I hope this project lives... It has a huge potential.,1528108273.0
feelosofee,"Now this could be a game changer... Perfect example of a library hitting the sweet spot between developer convenience and industry needs.... like, for example... Ruby itself ;)",1528183518.0
herr_bratwurst,With crystal\-lang it is easier [https://www.reddit.com/r/crystal\_programming/comments/6813ae/what\_would\_it\_take\_to\_build\_helix\_for\_crystal/](https://www.reddit.com/r/crystal_programming/comments/6813ae/what_would_it_take_to_build_helix_for_crystal/),1528659840.0
postmodern,What are the advantages of Rubex over using Crystal?,1528072049.0
chrisgseaton,"I'm not sure types are the most important thing. A sophisticated Ruby implementation can determine most of the types dynamically, and then at runtime the only cost is to 'guard' that the types are still correct, which can be just a word comparison.

I think things that are more significant that make Ruby slower include:

* more complicated semantics, such as overflow on integers
* late\-bound dispatch
* idiomatic code is very high\-level and uses a lot of metaprogramming",1528016972.0
hmaddocks,"Some of what you say is valid but there are a lot of others things that get in the way of optimizing Ruby. This post by Charles Nutter is a bit old  and a couple of things have been resolved but it gives a good overview of the costs of having a dynamic language like Ruby

http://blog.headius.com/2012/10/so-you-want-to-optimize-ruby.html?m=1
",1528014527.0
tadrinth,[TruffleRuby](http://chrisseaton.com/truffleruby/) is trying to do this sort of thing via Just In Time compilation using Graal.,1528041851.0
mirror_maru,You may find https://crystal-lang.org/ interesting,1528022818.0
thibaut_barrere,"While at RubyKaigi, I took a bit of time to refresh a little Kiba ETL benchmark I have (https://github.com/thbar/kiba-ruby-benchmarks), which I use to monitor evolution of raw performance & compare ruby versions.

My first round of testing seems to show Ruby 2.6.0-preview2 gives a 17.7% improvement over Ruby 2.5.0 (with JIT disabled) on Mac OS X. JIT enabled though gives a 6,6% regression (but @k0kobun, JIT author said he will check that).

This is performance you get for free!

In general, a lot of talks at RubyKaigi 2018 were focusing on memory + performance improvement in Ruby, more will be shared later.

This is all pretty exciting :-)",1527996098.0
pabloh,"I know I'm being pessimist, but all this feels like is coming a few years too late.",1528045626.0
in0pinatus,"The point of the article is that's it okay to use metaprogramming in your applications. And that's true.

But very often, metaprogramming either creates an implied framework that will eventually become a maintenance hazard, or (especially when invoked by less experienced developers) it ends up, in a Rubyish parallel to [Greenspun's tenth rule](https://en.wikipedia.org/wiki/Greenspun%27s_tenth_rule), being an underwhelming re-invention of something that's built-in.  This article is, I think, just such a case, being riddled with poor design decisions that stem (I think) from unfamiliarity with Rails.

> I need to run queries on the attributes, so I couldn‚Äôt store them as a JSON string.

Which RDBMS is being used that doesn't support JSON queries? Both postgresql & mysql can do this.

> I could create a new table portfolio_tags with a column tag to store the value and a portfolio_id to refer to the portfolio

If you have a `belongs_to` in such a record (other than for ownership), it is no longer a [tag](https://en.wikipedia.org/wiki/Tag_(metadata%29). Tags are independent of the things they are tagging. In fact at this point the author is halfway to the [Entity-Attribute-Value](https://en.wikipedia.org/wiki/Entity%E2%80%93attribute%E2%80%93value_model) pattern (but doesn't get there).

> Now that I have a place to store arbitrary attributes, where should I place the data source for the attribute names and values? ... Using the meta programming magic of ruby, I write code that dynamically generates these methods for me. This is how: Iterate over the entries in config/locales/en.yml. 

Please don't ever do this. Overloading a file of _English translation strings_ to configure attribute accessors is playing with fire, to say the least - and it's entirely counterintuitive for any subsequent developer who will be expecting to find accessor names either implied by the db schema or declared in the model code. A translation file is probably the last place I'd look. And then there'd be a lot of swearing.

Different keys in that file then lead to different behaviour in those accessors - which means there's an implied type screaming to get out here, and should be recognised as such.

The missing abstraction is very simple: object classes. The article has optional single_select and multiple_select attributes with different data and slightly behaviour for each. That's crying out to be recognised as two model classes off a common base.  What's more, if you do this in Rails the model type then flows through to things like automatic partial selection in views, allowing you to simply `render @portfolio.tags` rather than buggering around with conditionals.

But really all of this could probably have been avoided by reading http://guides.rubyonrails.org/active_record_postgresql.html#json-and-jsonb and using [store accessors](http://api.rubyonrails.org/classes/ActiveRecord/Store.html).


",1527975285.0
muzfuz,"If you write code like this, please for the love of god make sure it is extremely well documented, and preferably very carefully contained to a small module or class. 

I have worked on legacy rails apps touched by upwards of 100 devs over the years, and invariably stuff like this turns into the ‚Äúhere be dragons, I don‚Äôt know what it does but please don‚Äôt touch it because it‚Äôs super critical‚Äù kind of code that you really really don‚Äôt want in your codebase.",1527968181.0
SxDx,"Nice, going to try it in one of my smaller upcoming projects.",1527939468.0
ksec,Could http.rb be adopted as the default solution instead of Net:Http,1528022157.0
eRetArDeD,THANK YOU. ,1531362841.0
nippysaurus,"Hey thanks for the notes, they are much more structured than mine üòÅ (I was at RubyKaigi too)

Also Noah's talk was epic! Definitely going to watch it again once the videos are up. ",1528025386.0
-TURBOMAN-,"This is a recent personal project of mine.  
I wanted a minimal rss aggregator/reader to follow [ruby/rails](http://devfeeds.xyz/topics/ruby) and  [javascript/frontend](http://devfeeds.xyz/topics/js-frontend) news.  
Built with Rails 5.2, Heroku, and Sidekiq.   =\)",1527909518.0
LewisStudying,May consider adding email subscription too?,1527920257.0
fsoawesome,"This is really nice /u/-TURBOMAN-, but where's the feed for it? I'd like to throw it into my own RSS aggregator, Newsflow, to pull your great resources for Ruby on in.",1528563918.0
chancancode,"Not sure if I should be linking to the tweet or the stream since it hasn't started yet, but here it is: [https://www.twitch.tv/thejonanshow](https://www.twitch.tv/thejonanshow)",1527891648.0
chancancode,"(having some difficulty with the Internet atm, stay tuned üò¨)",1527912739.0
realntl,"Will this lead to some equivalent of ""compile time"" optimizations that type systems traditionally offer, or is it only meant to help prevent bugs?",1527888181.0
yorickpeterse,"Years ago I wrote something similar called ruby-lint (https://github.com/YorickPeterse/ruby-lint / https://gitlab.com/yorickpeterse/ruby-lint). While basic type checking is doable, supporting the standard library, C extensions, etc, is really difficult. ruby-lint used built-in definitions much like C headers to support these cases, and these were generated ahead of time. This sort of worked, but required me to generate [definitions for many libraries](https://gitlab.com/yorickpeterse/ruby-lint/tree/master/lib/ruby-lint/definitions). I wonder how Stripe will tackle this problem.",1527893357.0
sickcodebruh420,This is fantastic. My life is so much better since adopting TypeScript. i hope work on this continues!,1527911006.0
HorrendousRex,They are doing fascinating things over there!,1527913469.0
herr_bratwurst,I would prefer to see people contributing to crystal\-lang...,1528659179.0
JustinCampbell,I wonder how this compares to https://github.com/egonSchiele/contracts.ruby,1527906619.0
stanislavb,Is sorbet something that everyone can use now?,1527922610.0
unabl4,"Looks weird a bit. 
But the idea itself is great :) ",1527928074.0
Ruby_is_beautiful,"Contrary to some believe Ruby is a strong type. But the type are classes. Once a variable is initiate with a value, this variable wont accept a different type without raising an error.",1531717341.0
,[deleted],1527887756.0
midasgoldentouch,"Tbh, with all of that effort, it's better to just deploy using Python or Node imo if you need to ship and don't have a language preference.",1527888775.0
pa_dvg,"I, for one, am shocked that a direct database query returning primitive values outperforms an object relational mapper designed to be tied to front end forms",1527901812.0
postmodern,"While [DataMapper](http://datamapper.org/) is no longer actively maintained, it was ahead of ActiveRecord in many ways (superior performance, true lazy loading, custom attribute type system, and available as a mixin).",1527899307.0
obviousoctopus,"Thought it was worth posting Sam Griffin‚Äôs response from the article‚Äôs comment section:

>	Given that you know I‚Äôve been working for over a year on fast_attributes to fix this, and you have access to that repository, I‚Äôm extremely disappointed that you did not include that in your comparison. In fact, it seems like you‚Äôre actively trying to imply that no work has been done on this on the AR side. I‚Äôm not entirely sure what the goal of this article was.

",1527887083.0
stanislavb,"I like this ""Rails 3x3"" term. I guest that's not impossible :)",1527923232.0
mperham,"The Attributes features seem to add a lot of overhead.  I wonder how often they are used, i.e. are we paying a lot for an abstraction layer that isn't used very often?  Could it be opt-in or lazy instead of something which needs to be hand-tuned to opt-out?

There are few Ruby gems which have more backwards compatibility baggage than ActiveRecord so none of this is easy work.  My sympathies for all involved.",1527882479.0
honeyryderchuck,Use sequel. Nuff said.,1527892293.0
jrochkind,"I think it's worth pointing out that some of the things AR is doing (keeping a couple copies of some data) are to provide _very useful_ features like dirty tracking. Dirty tracking is pretty sweet. 

I'm sure there is room for optimization without losing features, _and_ there ought to be a way to turn off Dirty tracking if you don't want it (I'm pretty sure there is although not sure what it is; would be an interesting benchmark with full AR models but all the 'extra' features you can turn off turned off).  But in _most_ cases I think the time you spend waiting for the database justify the extra features that take extra cpu/ram.  ",1528065128.0
jrochkind,"If it _really is_ UTF8, then either read it in UTF8 to begin with (which your app is _probably_ doing already by default), with eg  `File.open(filename, encoding: ""UTF-8"")`, or use `force_encoding(""UTF-8"")`, not `encode ""UTF-8""`.  (`force_encoding` is only appropriate if you read it in as something other than UTF8 but it was really UTF8). 

`force_encoding` tells ruby -- don't change any of the bytes, but _assume_ it's this encoding already, even though it may have been tagged a different one, change the tagged encoding to be the one in the argument, which is actually correct for the original bytes. 

`encode` tells ruby -- _change_ the bytes in this string, from whatever encoding it is tagged with, to representing the same characters but in the encoding given in the argument. It will only work if the encoding it was tagged with was _correct_. 

You can ask `#encoding` on any string to see what encoding it is tagged with. 

`#encoding: UTF-8` at the top of your file is only relevant for string literals, not input the program reads in.

If the bytes you are reading are _not_ UTF8, you've got to figure out what they are, and if they are actually a good encoding to begin with or started out corrupted gibberish before your program even touched it. 

This is my favorite (non ruby specific) post for getting a handle on encodings. http://kunststube.net/encoding/

Also, it's not just you, dealing with encoding errors is very challenging (and not just in ruby, it's not ruby either).  You've probably got to start by figuring out _for sure_ what encoding the file you are reading in is _really_ in with correct bytes (or if it started out corrupt, or with different passages in different encodings -- it may not have been a valid and correct UTF8 file to begin with), rather than just twiddling code til it works. ",1527874534.0
Morozzzko,"> else without rescue now causes a syntax error. [EXPERIMENTAL]

They really should have picked better words for that

Turns out, it's just about `begin-else-end` without `rescue`. 

https://bugs.ruby-lang.org/issues/14606",1527830706.0
schneems,"Support for 2.6.0-preview2 also on Heroku available, immediately https://twitter.com/schneems/status/1002403999503540224",1527826824.0
keyslemur,"They've been hinting at a runtime AST and some of the new commits seem to be indicating it's a distinct possibility. That, and I asked Koichi and he said yes on Twitter.

Perhaps we're finally getting some macro-like features. I'd bank on it being a result of JIT work. ",1527874102.0
johnny_bolt,Is there a published roadmap for Ruby 2.6.0?,1527845203.0
rubys_eleven,">An endless range, `(1..)`, is introduced. It works as it has no end.

Yes, it goes on and on, my friend.",1527852015.0
bozhidarb,"That transition is part of the roadmap to RuboCop 1.0. Read the details here https://speakerdeck.com/bbatsov/all-about-rubocop-rubykaigi-2018

If anyone is maintaining a RuboCop-related OSS project we'd love to see it become a part of RuboCop HeadQuarters!",1527821156.0
RockMeetHardPlaces,"So, I'm a new Ruby developer \(coming from Java\)... is it just me or is that style guide schizophrenic?  There's so many contradicting concepts in the style.  Spaces here because readability, no spaces here because readability.  Some of the more mind boggling #good styles like this:

    # good
    result =
      if condition
        x
      else
        y
      end

how on earth is that readable?  

The switch / when stuff is equally mind boggling from a readability / style perspective.  Why no indents on switch?  It's like we're stuck on 640x480 monitors still or something?  Am I the only one \(aka, ""other language developer""\) who feels this way or is this something that I just have to get used to?",1527857309.0
kcdragon,I'm not sure I agree with the new naming convention. If an organization has a primary project I feel like the organization and the primary project for that organization should be the same. So it should be `/rubocop/rubocop`. Any chance we can get this as a new RuboCop rule?,1527878403.0
shkm,"This post sort of marks the end of my long search for good Ruby auto-completion with vim. I'm really happy with the result, and figured you guys might be interested!",1527807541.0
ioquatix,"Does this actually improve performance? Apart from running methods in threads, do you provide any kind of synchronisation?

You might like [https://github.com/socketry/async\-await](https://github.com/socketry/async-await)",1528116184.0
kennycoc,"This is my first real open source project, so I'd love feedback \-\- even if you think it sucks!",1527796130.0
chrisgseaton,"There is http://patshaughnessy.net/ruby-under-a-microscope, and a million blog posts about other parts of how MRI works.

But... a lot of VM technology is kind of unwritten in general, and in Ruby some things that are written are in Japanese, making things harder.",1527794553.0
SlainTownsman,"This seems really good.

Well done.

Now I wanna build some cli client even having no need for one.",1527811394.0
kennifbones123,Really solid gem. Nice work!,1527873119.0
timjstewart,"Wow, it's enough to make me want to pick Ruby up again.  Nice work!",1527799193.0
BluePizzaPill,"I've been evaluating this for my company. We have a couple of projects and generate the documentation on each push to the server in a job. The results are saved and served like you described with a static index html file that links each documentation. We are **not** commiting the result of the `yardoc` (or whatever you use) command to the repositories and I think it would be wrong because they are automatically created.

But this is really not the best solution, for example in Java tooling you could go the next step and merge documentation of multiple projects together. This is harder in Ruby since this functionality does not exist with the documentation tools I reviewed. Most of the times you can generate JSON or something similar instead of HTML and write a tool that would merge them together, but this gets harder the more you want, ie. linking between Projects.

This leads to our app projects containing documentation that can't go into specifics of classes and other things that are defined and documented in ""libraries"" like our custom Gems/Engines.

",1527778790.0
jrochkind,"`./doc` is where yard by default writes it's generated docs, is why it's ignored. The idea being not to commit things that are automatically generated from source, and would then need to be re-generated/re-committed when source changes. 

There's probably some way to change where yard writes it's generated docs. Or you can put your manually created docs in any other directory of your choice. You are of course allowed to change the .gitignore generated by whatever tool generated it, it's just a suggestion of commonly good defaults. :)",1527859567.0
mperham,"Curses, I was going to make a guest RubyTapas with Avdi on exactly this subject and you have approx 100% of my content.  Nice job. üòé",1527787826.0
schneems,"Looks good. There was a pretty good book recently that covered some interesting points of encodings https://aaronlasseigne.com/books/mastering-ruby/strings-and-encodings/.
",1527827027.0
TheFaithfulStone,I have been waiting for Smalltalks's semi-colon in Ruby for ten years.  I never thought I'd live to see this day.,1527749379.0
in0pinatus,"As just mentioned by Matz in keynote at RubyKaigi 2018.
",1527744328.0
postmodern,"I like the usage of `.then` over `.yield_self`, but I worry it might confuse beginners since `then` is already an optional keyword used with `if`/`unless`/`case`.",1527792514.0
torimus,"I can't help myself, but find core Ruby development decisions in last years hasted and doubtful.

Introduction of `.()` as 3rd way of (now) non-method `Proc` call visually clashing with method arguments marking, `.&` ""safe"" navigation operator breaking object-model consistency between `NilClass` and other classes, clumsy and redundant naming of `Object#yield_self` versus united and carefully invented identity method with optional block argument (some better variation to `Object#itself`) even more polluting core language namespace etc. Now we have yet another ""meh"" method alias, visually clashing with `then` keyword. I can't get how it could pass. Yielding target object to a block by `#then` may not ""describe intention"" at all. It has semantically nothing to do with control flow, sequence of expressions ordering.

It looks like Matz does not pay so much attention and care like he did in earlier times and team tries to appeal to wider crowd coming from other languages at the high cost of losing simplicity and consistency.",1527764934.0
jrochkind,"gah. not a good idea, cause it was already used in Promise libraries, including concurrent-ruby. ",1527771265.0
39081098301,"I wanted a simple configuration solution that wasn't integrated into rails, and was completely invisible to my objects.",1527725238.0
iconoclaus,Python‚Äôs focus on data science is a big reason. Ruby is getting pigeonholed into web dev only. ,1527724173.0
rmota,"I have a similar question. I'm a Php and c# developer and in the past few months I'm learning some python and ruby. And I can't the see de Beauty of python, the language is awsome but there are lots of weird cases like the private methods with decorators, the needed of ABC to have something like an interface, the way methods are created, the need of injecting self in every class method, and the packages management and documentation need to improve a lot. Maybe it's because of my background as developer. In other hand ruby have a great syntax, the frameworks looks nicer and the community too. ",1527720329.0
combuchan,"Filled a void as a decent, free, cross-platform beginner's language which was cemented with its readability and multiple applications, especially in the hard sciences and systems administration roles that don't typically attract programmer types.  With more people learning or knowing it, it's easier to hire around and do things using it.  

I lament this for what its worth.  Ruby and its ecosystem are superior to Python's. ",1527737662.0
vestonice,"As someone who has written both, I can tell you why I like Python better.

> object model is sane, neat and intuitive

I would say Python's object model is very much the same as many other languages. You have inheritance. You can mix-in via decorators.

> magic methods based duck typing

Ruby works in nearly the same way. The difference is that your method names are something like `==` instead of `__eq__`.

> descriptors

This is a pretty low-level thing that you won't need for most use cases. I haven't needed to mess with descriptors in ten years of Python. Not sure if Ruby even has an analogous feature.

> metaclasses

They're a thing you can do and they make your code harder to read that it's worth.

> imperative std; blocks are an absolute killer-feature

This is a matter of taste, mostly. I do like ruby's block syntax _but_ chaining them together loses you a bunch of performance. You have to iterate once over your collection for each method call, e.g. `my_array.reject { |i| i.nil? }.map { |i| i + 1 }.each { |i| ... }` (an oversimplified example, but you get the idea).

> no Unicode hell

This honestly ain't that bad to deal with if you've worked with it even a little bit. Unicode is one of those things that is fine to ignore until it isn't. Python will save you a _lot_ of headache dealing with it because you'll get the errors up front instead of dealing with garbage data later.

> pip literally can't be compared to gems + bundler which can be found in almost all projects

There is a pipenv project which has taken off that provides some parity but pip alone ain't great.

As for advantages for Python:

* The Python autocompletion for vim is lightyears ahead of what's available for Ruby. I'm not sure how things like PyCharm compare to RubyMine.
* mypy, while it needs some work yet, is amazing to have on a project. Static type checking to catch simple mistakes is such a massive boon to productivity.
* Python helps make code clearer.

One thing that comes to mind immediately for me (with regards to clarity) is dealing with imports. In Python, you do something like:

    import json

Now, everything you have imported lives under `json`. `json.loads()` to parse a JSON-formatted string. `json.dumps()` to dump a string, etc.

Compare this to Ruby, where you do something like:

    require 'json'

Now where are my JSON-related functions? Fortunately they're in the aptly-named `JSON`, but you actually might need to look that up because it's not clear whether it's `json`, `Json`, or `JSON` unless you know the naming convention for Ruby modules (and oh by the way, 3rd party developers do whatever the fuck they want).

Furthermore, something like `require 'json'` can dump crap literally anywhere in your namespace. It can be in a module or not -- it's up to the developer to not screw it up.

Similar deal for calling methods. In Ruby, you don't generally preface a method call with anything. That means that method could come from your class or _any_ of the 3rd party modules you've imported. If you don't know, you have to figure it out (or maybe RubyMine will tell you, if you use that).

By contrast with Python, method calls are prefixed with `self` and things from modules have to be brought into global namespace explicitly. You pretty much always know exactly where the code lives.

Python also has a focus on one _obvious_ way to do something. That generally means that developers will converge on that one obvious way. Ruby would rather give you a whole bunch of reasonable looking ways to do something and let you choose. While that can be nice, it also means that you have to understand _every possible way to do something_ if you're going to effectively read other peoples' code. Hash syntax is one example. Methods being aliased is another.

Python also has an exceptionally rich ecosystem around it. Have a look at the quality of projects like Sphinx, pytest, and requests. They're really damn good. Ruby has some great stuff too, but I've found there is a _lot_ more sprawl with regards to community libraries that are used. Compare https://www.ruby-toolbox.com/categories/http_clients to the aforementioned requests, which is a de-facto standard in Python.

Anyhow, my two cents. Hopefully that shed some light on things.",1527729903.0
vluun,I think the practical explanation is that Python has been popular for much longer and had time to cross into lots of different fields. Ruby wasn't really popularized until Rails came along. ,1527719850.0
roger1981,"Things like Scipy and Numpy. 

I moved from python \(and Java\) to ruby in  2004, have always enjoyed ruby. \(I am not a Rails or web developer\). I guess it's a personal thing. You'll find things to like or dislike in either language. The very thing one person dislikes in python, someone else will defend. Same for ruby.

  
That said python also has support from google.

Also, ruby lacks a GUI or proper bindings to QT and others. Python's pyqt \(I believe\) i doing well. Ever since I left Java, I've never been able to do any GUI work. I don't see any change in the situation in the last 14 years. ",1527736647.0
Abangranga,Python is easier for grad students to make haphazard scripts with,1527776434.0
Rinakles,"Too heavy focus on Rails and web dev, which makes Ruby appear unsuitable for most projects. Simply put, it doesn't seem like a valid option unless you're already familiar with it.

Whereas Python has a reputation as a jack-of-all-trades beginner-friendly language.

As an indie dev, it took years before I gave Ruby a chance: everything that I had heard about it made it sound unsuited for gaming. ",1527763450.0
postmodern,"I have wondered a similar question: why does Ruby get more criticism than Python, despite both being somewhat similar dynamic/duck typed, GC\-ed, GIL\-ed, Object Orientated, null supporting, scripting languages? I've known plenty of developers who love to bash Ruby, yet there complaints can equally be compared to Python. Some may say that Python's design philosophy is just more elegant/simple than Ruby's, but in practice I've seen the same classes of bugs pop up in both large Ruby and large Python web apps.",1527795886.0
dogweather,"Some areas where Python is seen as more attractive than Ruby:

* The outstanding documentation site.
* Execution speed.
* Highly transparent language evolution, managed by the nonprofit Python Foundation.
* Semantic versioning.
* Core developer communication is in English.
* Excellent module definition and import system.
* Culture of explicitness, not implicitness.",1527846154.0
v_krishna,"I like ruby as a language much more. But scipy/numpy/pandas/jupyter/etc. Even if there are some piecemeal replacements for some of these tools, there isn't the whole data analysis/data science ecosystem in the ruby world.",1527742747.0
Tomarse,"Honest question, but what can Python do with list comprehension that Ruby cannot? I always found Ruby's method daisy chaining a lot easier to read.",1527752379.0
TextileWasp,"Ruby was made popular by Rails but there is so much more to Ruby than just Rails. 

A few other big things written in Ruby: Sinatra - the Original web microframework, Puppet, Chef, Homebrew, Discourse.

Github leverages Ruby. ",1527741326.0
Nondv,"Even though I am wondered by the same question I think one of the reasons is that people outside of the web don't really need a better object model and other advantages ruby has \(if they are really advantages\). These people are scientists, casual coders and so on.  They just need their work to be done in a obvious way. Python provides that.

I kinda hate python, though",1527768738.0
holyjeff,"Ruby is too late to the party for data and math libs and ecosystem. Ruby lost on mobile because RubyMotion was proprietary and expensive. Still is Ruby lost in enterprise because its runtime is too slow. Ruby's biggest selling point was Rails and sooner or later all puppets,chefs will be replaced with something else.
What can save Ruby ?
GraalVM.",1527787537.0
dogweather,"For me, Python is object-oriented, whereas Ruby is ""stringly typed"" in two important areas: module importing, and meta-programming.

A second thing I really like about Python is that the language provides enough meta-info so support excellent IDE's like PyCharm. In contrast, the same company's Ruby IDE, RubyMine, will probably never be able to be a true IDE - simply because Ruby is so dynamic.",1527890721.0
dogweather,"Another idea: Python is standardized enough that there are several alternate implementations and packagings. 

Maybe Ruby's ""The MRI is the standard"" approach has limited this kind of development.",1527890842.0
zinovyev,"Here's a link to a working solution from the link.
It can be launched either on host or in containerized mode (dind): https://github.com/zinovyev/monidock
If you have any suggestions on improvement of it, you're welcome! =)",1528353830.0
janko-m,"The fastest way to import CSV data is using Postgres' [`COPY` command](https://www.postgresql.org/docs/current/static/sql-copy.html). If you have the CSV file on disk, it should be as simple as

    ActiveRecord::Base.connection.execute ""COPY your_table FROM '/path/to/file.csv' FORMAT CSV""

It's nice when you can just tell your database to do a task in an optimal way :)",1527707193.0
moomaka,"There are a bunch of tricks to speeding bulk data loading, but the major two are:

1) If possible, load the data into a table with no indexes on it, then create the indexes afterward. This is _much_ faster than inserting with the indices already defined.

2) If using Postgres, create the table and issue the `COPY` command in the same transaction and use the `FREEZE` option. This isn't as big a deal as #1, but it does speed up loading and speeds up initial data access by pre-setting the visibility flag. NOTE: This does break transaction visibility isolation but that usually doesn't matter for bulk loading.

The other thing I can recommend, if it fits your use case, is to use partitioned tables in PG 10. I'm able to load ~200M rows into a partition, setup indexes on it, warm the data and put it into the line of fire in ~4 minutes using this approach (most of this time is index construction and warming).

As for the actual data loading, I shell out to `psql` and use it's built in `\\copy` command. This was much faster than piping the data through Ruby in my testing.",1527744262.0
jrochkind,a whitelist of allowed hosts would have been more useful. ,1527714272.0
just-suggest-one,"Considering Rails is pretty good at being secure by default for other types of vulnerabilities, I find it surprising that open redirects are still so easy to create in Rails. Something like https://github.com/sdsdkkk/safe_redirect really should be built in.",1527728136.0
,[deleted],1527707075.0
ioquatix,"Great article. However:

* 40 servers in half a second is not very exciting.
* The author claims map/reduce. Yet the reduce step is just appending the result to an array. There is no actual reduction, only map. Reduction means constructing an aggregate result from a tree data structure, such that incremental updates to that tree only require proportional re\-computation of the aggregate.
* It's true that lots of servers throw exceptions for errors. However, `async-http` retries idempotent requests several times and then fails with an exception. Normal requests generate normal \(successful or error\) responses. This should be sufficient for such a problem. RestClient does the opposite with `RestClient::NotFound`. Sometimes that's useful too.
* Running such a mapping operation using threads is sufficient but more than necessary. You could achieve a far simpler design using `async-http`. As an example, how do you handle operations that take too long? Does it hang forever? Or is there a timeout somewhere?",1527715665.0
honeyryderchuck,"Doing batch HTTP requests while not relying on exception\-based error handling was one of the reasons I started \[httpx\]\([https://gitlab.com/honeyryderchuck/httpx/wikis/home](https://gitlab.com/honeyryderchuck/httpx/wikis/home)\) . It could handle your map phase internally, arguably in a more reliable way \(it handles all requests in the same execution thread using non\-blocking I/O\).

The wraps errors in the response object, and you can optionally raise them yourself by calling \`#raise\_for\_status\` \(I ""stole"" the API from python requests\).",1527850865.0
nanenj,"In my experience, these are so exceptionally low as to make me suspect it's intentionally misleading in hopes of lowering expected rates.  This kind of information is potentially harmful when it's regurgitated by the ignorant.",1527711447.0
VeryGoodGoodGood,"Even after converting pounds to dollars this seems lower than I wouldn‚Äôt expected. 
",1527704466.0
janko-m,"This looks great, thank you for sharing!

Quick question, does this save memory on the Ruby side or the Redis side?",1527671784.0
realntl,I feel like it's missing the most crucial and likely to miss concept: background jobs should be idempotent.,1527690066.0
mperham,"Related, from my horse's mouth:

https://github.com/mperham/sidekiq/wiki/Best-Practices",1527696780.0
janxious,"It feels like, at least with no. 4 and 5, you are in dire want of job monitoring. If you can just look at your job execution numbers and timing for the last year in a graph, the whole ""when do I schedule it?"" question gets a lot less hard. As does ""are my jobs taking too long, and if so which?""",1527672759.0
cjmzi,"At the last days I worked at a oldest Sidekiq project and yeah! We have a lot problems to maintenance because everything was at only one worker. It's very hard to understand what happens there!

If when the project was developed they followed some of this points... I would have the last days pretty happy!
",1527703419.0
JoyousTourist,"If you have 10,000 jobs kicked off concurrently, how do you keep those 10,000 jobs from eating up the available database connection pool connections and blocking each other?

My current solution is to dedicate a thread and wrap it with a \`.with\_connection\` but it eliminates the ability to run a much of small jobs concurrently.",1527696054.0
pro547,How's sidetiq working for you guys? While it's pretty old at this point and not maintained it's still working pretty good for us.,1528420243.0
disclosure5,">Why do I need to encrypt User ID.. This was pretty bad as now some user capable of doing Inspect element can change the user_id

This precisely 0 to do with encryption. CBC bitflipping attacks exist specifically because encryption does not provide authentication.

Fortunately, although the text never mentions it, the code uses the ""and_sign"" function, which signs the input.",1527682268.0
jrochkind,"The behavior of the safe navigation operator is not actually identical to ActiveSupport's try, although it is similar. 

http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/",1527649568.0
electrostat,"The second part of the first code blurb is incorrect:

    toast = nil
    # Both lines below raise NoMethodError
    toast.try!(:push, 'ü•ë')
    toast&.push('ü•ë')

`toast&.push('ü•ë')` will not raise anything. It will just return `nil` and do nothing else.

    [13] pry(main)> toast = nil
    => nil
    [14] pry(main)> toast&.push('ü•ë')
    => nil

Actually pretty sure `try!` won't raise anything either according to http://api.rubyonrails.org/v5.1.3/classes/Object.html#method-i-try-21
",1527655269.0
NicolasGuacamole,Those sed commands are hideous,1527639538.0
r3b00t-,thanks for this. I was really missing this feature in Ruby.,1527645680.0
in0pinatus,"Unfortunate downside of that approach, you can't pass a block to methods that are wrapped by `Dry::Monads::Do`, unless that block is built to accept being called with `Result` containers every step and will halt execution on a negative result. If you had anything else you wanted to do with a block argument, forget it.

A less serious nitpick: internally `Dry::Monads::Do` uses an exception raise to implement its flow-control mechanism(!); that's gonna get pretty noisy if you had -d enabled, and is also the reason it's so much slower for negative logical outcomes.

I think of dry-rb as an experimental new language that is temporarily using Ruby as a starting point. It's got ideas from Haskell, it's got ideas from Java IOC containers. A base language and its standard library are joined at the hip, and dry-rb is introducing new control structures and fundamental library components.  People half-jokingly refer to Rails as an alternative dialect of Ruby and I think dry-rb is like that, but even more so, and to breaking point: it's surely gonna have to fork off to fix these emerging impedence mismatches.
",1527629242.0
iconoclaus,"If including `Dry::Monads::Do.for(:call)` affects all method calls, is there any way to ensure that helper methods we wish to include in our transaction don't also become monadic?",1527640709.0
enoch0x5a,Thanks for an article! Haven't figured myself that there is no need to yield every single step. We too started using dry-rb do notation in our service objects. But shouldn't you return Success from #call method in last example since it is wrapped in Do and tries to guess was it Success or Failure?,1534457140.0
pachkovsky,It‚Äôs nice to know that Ruby‚Äôs GC significantly improved since github started using OOBGC. But I seriously doubt anyone except them was using this technique anyways. ,1527579871.0
paneq,Aaron delivers as usually! It's nice they managed to use 1K CPUs less :\-\) ,1527577583.0
a__b,Using multi line output may significantly complicate automatic log parsing. I won‚Äôt advise this for production.,1527555298.0
herminator,"You can construct a hash that has this behaviour by default, by using the optional block argument to Hash.new:

    [1] pry(main)> hsh = Hash.new { |hash, key| hash[key] = Hash.new(&hash.default_proc) }
    => {}
    [2] pry(main)> hsh[1][2] = 3
    => 3
    [3] pry(main)> hsh
    => {1=>{2=>3}}
    [4] pry(main)> hsh[2][4][6][8] = 10
    => 10
    [5] pry(main)> hsh
    => {1=>{2=>3}, 2=>{4=>{6=>{8=>10}}}}

But note that since you're supplying a default for any key, you'll get that default for any key. That means:

    [6] pry(main)> hsh[5]
    => {}

With standard hashes, that would be nil

So with such a hash, you would need to use `include?` to check keys:

    [7] pry(main)> hsh.include?(5)
    => true
    [8] pry(main)> hsh.include?(7)
    => false

(Note that it feels 5 is a key in the hash after the call to hsh[5], even though you didn't assign anything to it)
",1527515197.0
dogweather,"I think you're looking for ""auto-vivify""   ",1527520781.0
jrochkind,"I don't think there is one, but now that you mention it it might be useful.  One thing is that #dig can go through arrays or hashes, whatever is there, while a construction equivalent would have to assume hashes I guess.  Unless there's something fancy you can do with [jsonpath](https://github.com/joshbuddy/jsonpath) but I don't see an obvious way to do this. 

You could try writing your own implementation of what you want, as an interesting exersize. It won't be super complicated code to implement that. Maybe it should/could be a 'static' method like `HashInsertion.insert(hash, [""key"", ""key""], ""value"")`",1527517127.0
The_Grue,"You could use a gem, like key_path, to do it. You would use the dotpath notation instead.",1527526552.0
jonathanhefner,See https://bugs.ruby-lang.org/issues/11747,1527552806.0
torimus,"You can simply use the fact, hash values are just references, so

    a.dig(1)    # {2 => 3}
    a.dig(1)[2] = 4
    a    # {1 => {2 => 4}}
",1527633903.0
riddley,"Maybe this is homework and if so you can just ignore this, but don't use primitives like this. Create objects. ",1527685443.0
midasgoldentouch,a[:1][:2]  = 4,1527511913.0
a__b,For education purposes I recommend checking classes https://ruby-doc.org/stdlib-2.5.1/libdoc/set/rdoc/Set.html and http://ruby-doc.org/stdlib-2.5.1/libdoc/set/rdoc/SortedSet.html  which are often forgotten.,1527485549.0
tom_dalling,"To answer your question: the `Hash#select` method returns a `Hash`, which is why you're able to get the keys off the return value. The `Enumerable#collect` method returns an `Array` of the _same size_, where each element is transformed by a block. The `collect` method is an alias for `map`, if that makes it any clearer. Since the expression `k if v <= 1` evaluates to `nil` when `v > 1`, you will get `nil` values in the result. In other words, the `collect` method is not used to filter out elements.

If you want to remove all those `nil` elements from an array, you can use the `compact` method.

-----

The interesting thing is that `Enumerable#select`, which returns an array, is overridden by `Hash#select`, which returns a hash. This means that `Hash` does _not_ conform to the `Enumerable` interface/duck type. It seems like a really terrible idea to me, and I was not aware of it until just now. Personally I would consider this a bug, but it appears to be intentional.",1527482063.0
Mancinoz,"Could turn it into a hash, as hash keys have to be unique:

`dupes.zip(dupes).to_h.keys`",1527486996.0
Rinakles,"This also works:

    dupes = [1, 1, 1, 2, 3, 4, 5]
    dupes | dupes

=> [1, 2, 3, 4, 5]",1527490217.0
mo_lue,"Another approach is to use `group_by` of the `Array` class.

    dupes = [1, 1, 1, 2, 3, 4, 5]
    dupes.group_by{|n| n}.keys",1527494976.0
4rch3r,"you could do something like:

    elements = {}
    dups.reject{|v| elements[v], k = true, elements[v]; k}
",1527484894.0
andrzejkrzywda,Opal is a ‚ÄûRuby in the browser‚Äù - https://github.com/opal/opal,1527446194.0
sram1337,"Generally speaking, Ruby code can't run in a web browser, only javascript can. If you want to interact with your ruby program through a browser you'll need to set up a web app(ie website). I use Ruby on Rails, but I've heard Sinatra is good too.

If you decide to go the rails route, my coworkers recommend this tutorial https://www.railstutorial.org/book
It's free to read online


Edit: if you just want something quick and dirty, look into Ruby Sockets for sending data over the net
https://www.tutorialspoint.com/ruby/ruby_socket_programming.htm",1527435708.0
flipkitty,"Other people have provided some good hints, buy I'll try to clarify the overall difference between code in a web browser and code in a terminal.

# Code in a terminal 

What happens when I enter `ruby my_script.rb` into a terminal?

First, the terminal looks at the word ""ruby"" and decides what to do with it. When I installed ruby, one the most important things it did was make the ""ruby"" command visible to my terminal. It also made sure I had permission to run this program, which will be important later.

My terminal knows what ""ruby"" is, so it starts up that program and passes it one argument: ""my_script.rb"". Ruby now has control of what to do next. When it receives a "".rb"" file as an argument, it reads the contents and decides what actions to perform.

If the script has syntax errors, Ruby will display an error message and then exit. If the script says to  read a file called ""secret_stuff.txt"", Ruby will try to do that. It's possible you don't have permission to read that file, in which case Ruby will encounter an error and exit. But if that's a file you created, you probably do have permission and Ruby will go ahead and read its contents.

Why am I talking about permissions? Well, let's look at web pages.

# Reading a web page 

First, it's worth noting that a ""web page"" is different from a ""web browser"". Right now, I'm using Chrome as my browser. I installed Chrome the same way I installed Ruby, which means I gave it permission to run on my computer and modify (some of) my files. I did this because I trust Chrome to only do safe, reasonable things with my files.

I'm using Chrome to view a web *page* that it downloaded from reddit.com. When I asked for this page, Chrome read through a file from reddit.com and decided what to do with the information there. This is similar to how Ruby read through ""my_script.rb"" in order to decide what to do, except that Ruby expects "".rb"" files while Chrome expects "".html"" files.

So, as part of the answer to your question, you may want to [learn more about HTML](https://developer.mozilla.org/en-US/docs/Web/HTML). However, a lot of HTML is just used to load  [JavaScript](https://developer.mozilla.org/en-US/docs/Web/javascript) files.

# Code in a web page 

JavaScript is a programming language that was (famously) created in 10 days in 1995. It solves one problem well: user interaction with a web page. Without JS, web pages would just be static text that links to other pages. To get a sense of how big a difference this makes, compare Wikipedia (which could be written with no JS) to Google Docs (which could not).

But JavaScript is not Ruby, so why bring it up? Well, because JS is the only programming language that can run in a web browser.

When Chrome loads reddit.com, it looks for any "".js"" code contained in that page and runs that code within the context of that page. This is very similar to how my terminal runs `ruby my_script.rb` in the context of my file system, except Chrome does a lot of work to make sure reddit.com *does not* have access to my file system. Code in a web page runs in a contained environment so that DefinitelyNotAVirus.com can't read ""secret_stuff.txt"" even if the program Chrome would be able to. 

This behavior is a good thing, but supporting it means that JS can't do everything that Ruby can do. As a result, the question ""How do I run Ruby in a web page?"" actually has a few different answers.

# I just want to distrubute my program 

If I just want other programmers to be able to use my Ruby code, I can distribute the actual source. I might email someone a .zip, but [Ruby Gems](https://guides.rubygems.org/) is the ultimate way I would do this.

# My program can be made with JavaScript 

As someone who already knows JS, there are a lot of programs I would be happy to write in JS from the beginning. JavaScript kind of sucks to learn, though, especially compared to Ruby. Also, JS in a web page is not good for reading a lot of files or doing some long-running computation, if that's the purpose of the program.

Finally, even if the program is written in JS, there is still a question of how the end-user gets ahold of it. For that, I need some kind of Web Server anyway.

# Time to run a Web Server 

Other commentors have suggested (Ruby on) [Rails](http://guides.rubyonrails.org/getting_started.html) and [Sinatra](http://sinatrarb.com/intro.html), both of which are well-supported Web Frameworks. But what do they actually do? Well, a lot of things.

When I submit a comment to reddit.com, I'm sending a file over the internet to Reddit's servers. The server does the work of saving my comment on some other computer, then constructs a new file that it sends back over the internet. My web browser reads that file to update my view of what happened.

A web framework helps with a lot of those steps.

The code you connect to a web framework doesn't actually run in a web browser. The framework includes a Web Server which handles the tricky business of [sending information over the internet](https://developer.mozilla.org/en-US/docs/Web/HTTP). 

A web framework also helps you read the file I sent over the internet, and format the content of the file I send back. Right now, your program probably doesn't output HTML. A web framework lets you create HTML without you having to learn every detail of how that should work.

But remember: the code is not running in the user's web browser. There has to be [some other computer](https://i.imgur.com/p7I2hsJ.png) that does the work. Instead of learning [NGINX](https://nginx.org/en/docs/) and keeping my gaming PC running a web server 24/7, I would probably let something like [Heroku](https://devcenter.heroku.com/articles/getting-started-with-ruby#introduction) host my app.

# Woof, that's a long answer 

I hope this is helpful!
",1527458009.0
aeipownu,some type of web framework to pass the back end ruby to. look into sinatra ,1527434051.0
camh_96,You mean like rails?,1527435435.0
fickentastic,"Sounds to me, if you just want to get your program into the browser, Opal is going to be your best bet, probably the easiest (relatively speaking) to get up and going.  Someone here made a music education type of program using Ruby and Opal.  Follow the links for some screen shots.  You should get an idea of the capabilities.  

https://www.reddit.com/r/ruby/comments/7tncey/any_ruby_musicians_and_enthusiasts_out_there/
https://www.reddit.com/r/ruby/comments/84zk67/are_music_enthusiasts_still_there_some_coltrane/",1527466848.0
RaggedClownBehind,"What kind of program is it?

Have you seen repl.it? repl.it lets you run programs in a whole bunch of languages in the browser, including ruby.

https://repl.it/languages/ruby",1527435637.0
fuzzyinterval,"What does your ruby script do, exactly? 

How best to get your ruby code to ""run in a web browser"" depends on what it does.

Does it take user input? Then there's a variety of solutions. 

No user input? Then more info is needed to provide you a possible solution, including the possibility that ruby is *not* the answer...",1527456214.0
isolatrum,"yes, our dear language doesn't run in the browser. Best to learn basic HTML/CSS/JS and make an API for your Ruby methods.",1527560388.0
nanenj,"This sounds like a few people don't know some of the latest tricks.  


Although, it's definitely up for debate as to whether this really qualifies as Ruby running in the web browser.  I certainly thought it was neat.  


[http://www.blacktm.com/blog/ruby\-on\-webassembly](http://www.blacktm.com/blog/ruby-on-webassembly)  


[https://github.com/blacktm/ruby\-wasm](https://github.com/blacktm/ruby-wasm)  


[http://www.ruby2d.com/](http://www.ruby2d.com/)  


YMMV, but, this sort of does a bit of what you're talking about, you might still need to adjust what you're doing to make it work entirely.",1527623344.0
a__b,You can start from very low level emulation like http://asmjs.org and work out your way to run Ruby in your browser.,1527446652.0
beast_master,"I would recommend re-writing the program in JavaScript since JavaScript can be executed by every modern Web browser. In fact, translating an existing program to another language is a great way to get started with learning a new language!",1527450693.0
sshaw_,"[`bundle gem`](https://bundler.io/v1.16/man/bundle-gem.1.html) with [`.gitconfig` `user` section](https://github.com/sshaw/dotfiles/blob/b3614bd8824848e568c85af30d6a02b0542da2e0/gitconfig#L1) to supply gemspec with name and email and for Rails [`.railsrc`](https://github.com/sshaw/dotfiles/blob/master/railsrc) with a [Rails template](https://github.com/sshaw/dotfiles/blob/b3614bd8824848e568c85af30d6a02b0542da2e0/rails-template.rb) (not tested with Rails 5 üòâ). 

I also [alias `git`](https://github.com/sshaw/dotfiles/blob/b3614bd8824848e568c85af30d6a02b0542da2e0/bashrc#L36) to [the `hub` command](https://github.com/github/hub) to create the GitHub project and setup the remote. 

The one things I would like (or at least that I can remember) is being able to specify a README template.  

I've tried [hoe](https://github.com/seattlerb/hoe) somewhat recently, but ran into some issues and/or confusion. 
",1527440770.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/documentation] [Gem markdown\_helper Updated](https://www.reddit.com/r/documentation/comments/8mewj5/gem_markdown_helper_updated/)

- [/r/github] [Gem markdown\_helper Updated](https://www.reddit.com/r/github/comments/8merop/gem_markdown_helper_updated/)

- [/r/markdown] [Gem markdown\_helper Updated](https://www.reddit.com/r/Markdown/comments/8meui9/gem_markdown_helper_updated/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1527385973.0
everything-narrative,"    a = (1..10).to_a #=> Array
    b = a.collect #=> Enumerator

The enumerator `b` keeps a reference to array `a` inside. Calling `each` on `b` effectively calls `a.collect` with the same block, and returns the same thing.

Enumerators are ""make me an object with an `each` method that does what this method would do if given a block""",1527329660.0
janko-m,"Most Enumerable methods will return an Enumerator if you don't pass them a block. That allows you to build your own Enumerator that will start executing once you call a ""terminal method"", such as `#each`, `#first`, `#take` etc.

The `#each` method will on most Ruby objects also return an `Enumerator` if you don't give it a block. And if you do give `#each` a block, it will return the array consisting of yielded elements of the collection.

In the Enumerator block `self` doesn't change, it is whatever it was outside of the block. In the StackOverflow post the Enumerator object is created inside an instance method of a class, so `self` will point to the instance of the class, regardless of whether it's outside or inside the `Enumerator.new` block.",1527329681.0
losangelesvideoguy,"Creating an enumerator using `Range#collect` (or `Array#collect`) can be thought of as a two part operation. The call to `collect` constructs the enumerator, which requires both a range to enumerate over, and a block to iterate with. You could pass a block immediately like so:

    range.collect { |x| x }

And you would get the same array returned. However, you can also omit the block, which constructs the enumerator but does not evaluate it‚Äîit just sort of ‚Äúleaves it hanging‚Äù. You now have a `collect` Enumerator, which when evaluated happens to return an array. That's the first part.

Now look at the documentation for [`Enumerator#each`](https://ruby-doc.org/core-2.5.0/Enumerator.html#method-i-each): ‚ÄúIterates over the block according to how this Enumerator was constructed.‚Äù So basically, calling `each` on the enumerator constructed earlier completes the second part, which evaluates the enumerator using the block. So you've split what could have been done in a single operation into two separate parts, the construction using `collect` and the evaluation using `each`.

A yielder does exactly what it says: It yields values to the block provided to it. Whenever you pass a value to the yielder using the `<<` method, it simply takes that value and yields it to the block it was constructed with. In this case, it is basically being asked for the next value by the enumerator. So the yielder in this case acts as sort of an ‚Äúexit point‚Äù for the infinite Fibonacci loop. Once the next value in the series has been passed to the yielder, the enumerator no longer cares about further results of the loop, and doesn't return to run it again until the next value is needed, whereupon the block picks up running where it left off.

I don't know if I've really made this clear, especially the part about how yielders work, but honestly it's more important to understand how enumerators work in practice rather than how they function internally. While immensely useful, they're a bit tricky to wrap your head around, and I'd say that once you are comfortable with using them, it will be much easier to understand how they actually work.",1527330685.0
Skroleeel,You enjoyed it so why not? Just started learning myself,1527281224.0
rururezu,"Despite all the Ruby being dead and ""it's not the cool kid in town anymore"" kind of post I just keep learning Ruby because it's really fun and you can really jump to another languages after you get a good grasp of what programming is all about anyway.

Really hope we shouldn't care about what people think about our technology stack or anything, and being gullible about that. When we were a kid I don't think you care much as long as you had fun doing something.",1527287089.0
in0pinatus,"Ruby is marvelous. I've been programming for 25 years and learned a new language for practically every one of those years. Ruby is the language I keep coming back to. If you like it, learn it, you won't be sorry.
",1527323816.0
rArithmetics,ruby is great and if its ease of use keeps you coming back it doesnt really matter. It can prob do anythging you want :\),1527287342.0
SexyEyyEff,"Even if it‚Äôs ‚Äúdying‚Äù, being familiar and knowing at least the fundamentals of ruby or rails would still be useful in transitioning existing companies to different or newer frameworks.

& I definitely agree with /u/skroleeel, as long as you enjoy it keep at it!",1527285719.0
BadMinotaur,"I'm going to echo what a lot of people here are saying. If you enjoy it, go for it. I'm a very casual programmer \-\- it's just a hobby for me \-\- but I love Ruby. It's easily the most fun I've ever had programming. Sure, I could do JavaScript or C\+\+ or whatever else, but Ruby is what I enjoy using more than any other language.",1527292796.0
ropeney,"There is *a lot* of places already using Ruby, so even if it was *dying* then those applications will still have to be maintained by someone‚Äîand they aren't disappearing anytime soon.",1527302877.0
PowerApp101,"Well, I started learning Ruby a few months ago and I'm an old guy who knows C, C\+\+, C#, Java and Python. Ruby is the most fun out of all of them. There's just something about the design of it that clicks. Plus the ecosystem is awesome. To me it's like a better Python :\-\)",1527303810.0
Idknotcreative,My first tool was ruby and I spent so much time getting lost in it because it‚Äôs just so much fun. Now I can pick up pretty much any other tool in a few hours. 10/10 I highly recommend ruby. Plus the gems make it magical. ,1527323145.0
isolatrum,"yes it's a nice language. It doesn't have the development toolkits like Java or C#, the universality of Javascript, or the academic bluster of Python, but it's a respectable language in its own right.",1527323226.0
strzibny,"My company is hiring for Rails devs as well as pretty much every company that does any Ruby in Prague (where I am now). It's very clear from any dev meetup. Yes it's small numbers than Java, JS and PHP. But it was kind of always like this even when Ruby was talked more on the internet. Even Oracle puts a lot of effort in research for TruffleRuby these days. From purely Ruby perspective this is the best and most exciting time to do Ruby for me. And one thing I would like to mention is our community which I really like (think Matz or Aaron Patterson).",1527324598.0
,"I think it totally depends on your professional goals and what kind of company you want to work for (or start your own business).

That being said, IMHO what's amazing about Ruby is that it was created 25 years ago and yet it feels very modern. It's an incredible feat of design. It's probably fast enough for 98% use cases you could ever think of and getting faster each year. Companies like Github, Shopify, AirBnB and Basecamp are deeply invested in it, as well as too many other companies to count.
",1527524734.0
pinkyabuse,"Ruby is still in the top ten web development languages. If you're purely learning languages for getting jobs, Java and C# are better choices. But learning Ruby is not a bad choice--check out job listings and Ruby meet ups in your town if you're concerned. ",1527290327.0
Chito4,"Chef uses ruby, unless chef takes a dive or people decide DeVops or CI/CD with chef is not worth it, then ruby is dead. Moral of the story ruby isn't going away any time soon, learn that shit. ",1527295035.0
Blimey85,"I think all languages have detractors and a lot of people hate on both Ruby and Rails. To me it‚Äôs all about using whichever tool you prefer. It‚Äôs no different than Apple vs Android, Chevy vs Ford, or whatever.

Ruby is actively developed and after all of these years it continues to get better. A focus right now is on speed. Ruby 3 has the goal of being 3x faster than Ruby 2 and we‚Äôve seen a noticeable difference already. Ruby 2.5 is much faster than Ruby 2. I don‚Äôt know that it actually needs to be faster although faster is always great. Shopify runs Rails and handles more than 80,000 requests per second. That‚Äôs not comparable to Facebook or Twitter but it‚Äôs damn fast and proves that Rails and of course Ruby are fast enough to not pose problems.

If you do need more speed there‚Äôs Crystal which is in a lot of ways a compiled version of Ruby. It‚Äôs not actually Ruby but there‚Äôs a lot of similarities so it‚Äôs easy for a Rubyist to jump into.

But again, it just comes down to developer happiness. That‚Äôs why Ruby was created and for a lot of people it‚Äôs a joy to work with. I‚Äôve worked with PHP since around 2000 and I‚Äôve at no point thought this is a cool language or anything like that. It never wowed me. It was just a tool I used that often felt pretty clunky. Ruby by comparison wows me fairly often. But that‚Äôs just me. I‚Äôve become a diehard fan of Ruby. ",1527407283.0
niborg,"If you like Ruby but want something cutting edge, check out Crystal.",1527311519.0
moomaka,"> but currently, there are no known reliable ways to detect if the browser has finished loading the page

Unless I'm misunderstanding your problem, the issue isn't with the brower loading the page, it's with your react code not setting up listeners quickly enough. There are certainly ways to wait for the browser to load your page, e.g. wait on readyState == 'complete'. Usually with SPA frameworks you can find some root element or data-attribute to wait on, or worst case can use a lifecycle hook to set a global and wait on that.
",1527290023.0
ioquatix,You might like what I did with https://github.com/ioquatix/trenni-markdown,1527295436.0
jstad,Never heard of AnyFixture. Definitely going to roll this one into some apps. ,1527280241.0
sshaw_,"Great to see a comprehensive tool to track these sorts of issues down üëçüëΩ. Can't wait to try it!

> That's it! Just replace let! with let_it_be

Ugh `let!`

> If you modify objects generated within a let_it_be block in your examples, you maybe have to re-initiate them. We have a built-in support for that:
    let_it_be(:user, reload: true) { create(:user) }

üò±

FTW, stick with instance variables!",1527442231.0
TillyGang,"Originally posted this on the Rails subreddit and got some great responses, just wanted to see if anyone else had any input.",1527260190.0
zverok_kha,"If the task is as simple as you describe, and if both tools (sensors and ticket system) are in the browser, it should be easy to just use something like [mechanize](https://github.com/sparklemotion/mechanize) browser automation library, and the script should be small and readable (like ""open this URL, check this button by that CSS selector, then open that URL, enter this data, submit form"", almost literally)",1527259390.0
TextileWasp,What is RPA?,1527258402.0
joelbluminator,"I was there for the first day \(unfortunately couldn't make it to the second\). 

Really nice atmosphere, fun people and good talks. 

Hope it happens again soon in the Netherlands :\)",1527252162.0
markrebec,"I'm admittedly not a big conference person, nor much of a pairing/social coder (other than contributing to OSS where I can)... but this is an fun, inspiring little story! Congrats to the organizers and attendees for such a successful event.",1527271872.0
keyslemur,"Two tips out already, decided to make this a thing:

* https://twitter.com/keystonelemur/status/999487689459027969
* https://twitter.com/keystonelemur/status/999868563409199104

Using this to keep a small outlet of Ruby fun while I'm working on some more epically sized projects. Let's just say there's about to be a lot of fun announcements, articles, and other material over the next few months.",1527228029.0
tweettranscriberbot,"^The¬†linked¬†tweet¬†was¬†tweeted¬†by¬†[@keystonelemur](https://twitter.com/keystonelemur)¬†on¬†May¬†25,¬†2018¬†04:26:18¬†UTC¬†(0¬†Retweets¬†|¬†6¬†Favorites)

-------------------------------------------------

Going to try for a Ruby tip every day for a bit, see how long I can keep going :D

-------------------------------------------------

^^‚Ä¢¬†Beep¬†boop¬†I'm¬†a¬†bot¬†‚Ä¢¬†Find¬†out¬†more¬†about¬†me¬†at¬†/r/tweettranscriberbot/¬†‚Ä¢",1527227919.0
zverok_kha,Of summer conferences at http://rubyconferences.org/ it doesn't mention only RubyKaigi (technically starting 1 day before summer) and Deccan Ruby Conf. I wonder if this means those two are not worth seeing at all...,1527228577.0
ioquatix,It still doesn't implement UDP correctly :\( [https://github.com/jruby/jruby/blob/98abdb4fa8373f08e186b24be97e55ace91e885e/core/src/main/java/org/jruby/ext/socket/RubyBasicSocket.java#L471\-L474](https://github.com/jruby/jruby/blob/98abdb4fa8373f08e186b24be97e55ace91e885e/core/src/main/java/org/jruby/ext/socket/RubyBasicSocket.java#L471-L474),1527231526.0
sickcodebruh420,I'm not able to use JRuby but I'm so happy that it exists. Congratulations to everyone working on this.,1527368494.0
windwind00,never heard of JRuby \- what is is?,1527214890.0
msiggy,I tried to get it to work today. I also failed with various errors.,1527263248.0
GroceryBagHead,Repost: https://www.reddit.com/r/ruby/comments/8k379i/paginating_ruby_on_rails_applications_with_pagy/,1527176123.0
sumason,"Did you still end up running xvfb?

When I last worked with this I had to run xvfb because of this bug:
https://bugs.chromium.org/p/chromedriver/issues/detail?id=1772

Our suite is similar but we use Jenkins and waitr instead.",1527176651.0
selador135,"The first two are an array of [""a,"", ""e,"", ""i,"", ""o,"", ""u""], just dont use commas with %w. The last one comes out a an array of [""a,e,i,o,u""]. So the first doesnt include ""a"", the middle one doesnt have a trailing comma so works. The last also doesnt include ""u"" as its a string of them all",1527172728.0
GroceryBagHead,"That guy seriously should be working for some SF company making 250K a year while spending 2/5 days a week working on open-source.

Reminds me of that OpenSSL dev that pretty much single-handily maintained piece of software entire world is using for [chicken feed](http://veridicalsystems.com/blog/of-money-responsibility-and-pride/index.html). 99.9% of tech companies do not fund or contribute anything back to open-source as it's an expense they don't need.",1527175893.0
thibaut_barrere,"Ryan Davis (minitest etc) needs your help!

EDIT: [direct link to Patreon](https://www.patreon.com/zenspider/memberships)",1527162226.0
predatorian3,Simple executive overview,1527165354.0
blackcomb-pc," A bit confusing for a newb like me, since this is clearly mentionting ‚Äúrails‚Äù as though it‚Äôs part of Ruby whereas it‚Äôs made from ruby (a framework which explicitly differentiates Unit and Integration tests)",1527275119.0
ravioli_mixer,This is pretty cool \(as someone watching and buying into XRP\). What kind of real use cases have you made with it? I was looking to build a node.js client to stream real time data. ,1527196311.0
ioutaik,"France (Paris): my company is very happy with rails and has no plan to drop it.

I, however, am thinking of learning something else (python/datascience?) so I can find a job in other cities.",1527109210.0
lespooner,"I am in Orange, California, my business has a few products and services that are written in rails/Sinatra. I don‚Äôt see this changing any time soon although single page react/Apollo/graphql client dev has taken a lot of the focus in recent months for us. I think that we will probably continue to be a ruby shop for the foreseeable future for anything server side. ",1527122389.0
riptidel42,"Working on a XRP blockchain analyzer in ruby:

http://wipple.devnull.network/

Ruby coder for life. They will have to PRY it from my dead hands before I stop coding in it!",1527136482.0
hehestreamskarma,Just outside Moscow. There a significant community here for Ruby. I use it at work and for fun. Won't be changing any time soon. I get great enjoyment out of writing Ruby and it always makes sense. Looking forward to 2.6 :),1527203613.0
,"I'm currently in Asia, but I'm from Canada. I'm building a dating app with unique features and using Ruby on the backend. ",1527230980.0
rArithmetics,USA/Portland. My company doesn't use it but I go out of my way to use it when I can ! It's a great scripting language to help with office tasks,1527174599.0
aderthedasher,"Taichung, Taiwan. still learning. :\)",1527326019.0
mattgrave,Argentina (Buenos Aires). Been working on Ruby for five years already and I love it. My current project is a financial application that is taking off.,1527804557.0
saturnflyer,I think it's worth pointing out https://guides.rubygems.org/make-your-own-gem/ and https://brandonhilkert.com/books/build-a-ruby-gem/ as additional resources,1527168906.0
RockMeetHardPlaces,"I recently got a job doing Ruby \(start next month\) \- I ran through these exercises to get up to speed: 

[https://rubymonk.com/](https://rubymonk.com/)",1527084446.0
elpix,When I first started learning Ruby I used [http://rubykoans.com/](http://rubykoans.com/) and the official Ruby documentation. From there I mostly just read other people's code and played with libraries that sounded interesting.,1527089580.0
jasdeep13,"Eloquent Ruby: I highly recommend this book for someone new to Ruby but with some prior experience with programming. This book turned me into a Ruby pro over a weekend. 

http://eloquentruby.com/",1527092016.0
,"I strongly recommended [The Well Grounded Rubyist](https://www.amazon.com/Well-Grounded-Rubyist-David-Black/dp/1617291692/ref=sr_1_1?ie=UTF8&qid=1527101031&sr=8-1&keywords=the+well+grounded+rubyist)

This gives you a great foundation, it's extremely well written and a nice reference to go back to.

I also recommend [Practical Object Oriented Design in Ruby](https://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330/ref=sr_1_1?s=books&ie=UTF8&qid=1527101127&sr=1-1&keywords=practical+object+oriented+design+in+ruby)

This book is just amazing. If you're new to object oriented programming, and even if you have a bit of experience, this is going to improve your skills dramatically.

Good luck!",1527101356.0
,I like Learn To Program by Chris Pine.,1527088644.0
zverok_kha,I recently compiled an official docs (and some other stuff) into book-looking reference for Ruby and its standard library: https://rubyreferences.github.io/rubyref/,1527096339.0
acangiano,"Normally, I recommend these [Ruby books](https://programmingzen.com/ruby-books/). Pick one that suits your current experience as a programmer and with Ruby. I would couple it with a [coding exercise](https://programmingzen.com/15-sites-for-programming-exercises/) site to practice your skills.",1527089064.0
hhunaid,Unrelated but it makes me really happy to see a post like this. Mostly because every other day there is a post about Ruby being dead and whatnot. ,1527102426.0
jkitsimple4now,"Is this your first programming language?

If so, learnrubythehardway is definitely a great resource, it will challenege you and be worth all the effort.

https://learnrubythehardway.org/book/",1527111151.0
TURKEY_CAKE,Consider applying to a bootcamp like App Academy (it doesn't matter if you want to go). They make you take tests in order to be accepted and give you material to study. It's a pretty easy way to learn the basics. ,1527112204.0
Mike_Enders,I'd grab one or two good courses on udemy for practical training and a good book for reference.,1527124482.0
LuneBlu,"I'm using Learning Ruby First, which is free by the way, and I am quite liking it. Full of great insights.

Also it uses Ruby version 2.4.0, which is pretty recent.",1527131207.0
MetalMikey666,"So I learned when rails 3 had just come out - many of the online examples were made obselete so that made things harder.

My rough path was:

1. Saw a video about ROR, wanted in
2. Installed ruby, played around
3. Tried to read this book: https://www.apress.com/gp/book/9781590597361
4. Gave up because all of the examples were out of date and nothing worked. I also felt I needed a grounding in ruby first.

At this point I should point out that I'd come from a c# background and was not used to things ""going out of date"". I was not learning web dev, I was learning rails.

5. Read this book https://www.apress.com/gp/book/9781484212790
6. Read the rails official docs
7. With all this context, re-read the book from step 3, now able to transpose the examples so they work.
8. Read this book https://www.amazon.com/Design-Patterns-Ruby-Addison-Wesley-Professional/dp/0321490452

By the time we get to steps 5-8 I am also regularly watching http://railscasts.com, doing kata on codewars and had started working on a web application that I would eventually deploy. 

I went on to have a 5 year rails career before moving to node.js a few years ago.",1527152029.0
chrisgseaton,https://www.ruby-lang.org/en/documentation/,1527083860.0
pavlik_enemy,I don't know why I would use a gem with docs in broken English where there is https://github.com/ankane/ahoy and tons of third-party services and probably on-premises solutions to this problem.,1527100967.0
modnar42,"I want to put in a word of caution about the cost and performance implications of using a gem like this. It looks like it adds a database table and upserts the stats on each request. If you‚Äôve got lots of write capacity to spare, it‚Äôs probably not a problem until the site starts to grow. At scale (for some value of ‚Äúscale‚Äù depending on your budget), you‚Äôll definitely be sad about how much you‚Äôre paying to write every time you read. 

I‚Äôd strongly recommend using a service for this and just caching the result locally for a small period. If you‚Äôre not on board with the GA API, I‚Äôve used Gauges with good success. I‚Äôve even used a free-for-low-usage apm service like Instrumental for things like this, depending on what I want to track. ",1527085836.0
Dielerorn,Exactly what beginners like me need! Thanks!,1527109905.0
gorbychoff,I would use an env var ,1527042774.0
jrochkind,"You can't, but you can have the cronjob pass a command line argument to it to tell it cronjob mode. ",1527045143.0
PikachuEXE,"1. Read command line argument (better use a library for creating serious CLI tool. It helps parsing arguments if the tool accepts many arguments)
2. Use env variable (easier & faster to implement for simple scripts)",1527055385.0
442401,"It's possible to pass in arguments after the script name which will then be held in the global variable `ARGV`.

In your crontab: `ruby myscript.rb cron` 

In your script: `do.something if ARGV.include?('cron')`",1527070572.0
testcore,"Create a new array/hash - ""seen"" - to tack what's been displayed recently. Every time you get a joke back, check if it's already in the array/exists as a hash key. If it is, repeat the selection process. If it's not, remove the oldest joke from ""seen"" so it'll appear again. Or something like that.",1527036774.0
jryan727,"I would probably randomize them all upfront with [#shuffle](https://ruby-doc.org/core-2.5.0/Array.html#method-i-shuffle), then [#pop](https://ruby-doc.org/core-2.5.0/Array.html#method-i-pop) them off.  

You could keep a counter of jokes you've displayed, then re-shuffle after 10, or you could ditch that requirement and re-shuffle when the Array is empty.",1527037251.0
jrochkind,"> Is there any way I could tell it not to pull the same joke until !joke has been invoked 10 times again?

* a) Keep an array of the ids of the last 10 jokes that have been presented (treat it like a queue, push and pop if length >= 10), after sampling check the list, if it's already on the list, throw it away and try another (and then add it to the list). 

* or, b) sample 10 ids at once (just `array.sample(10)`, np), keep them in memory, present them in order (again treat like a queue with `pop`) on every `!joke` request, when it's empty, fill it with new 10 new ones. 

Both of these may require some concurrency safety if they could be used in a multi-threaded context -- if there could be more than one thread wanting to access the 10-element state array at the same time (Say, if it were a Rails app, then it's possible depending your app server choices. I don't know about discord bot architecture). No problem, you can use stdlib Queue, since both of these want queue-like behavior. ",1527083721.0
AbCzar,"I know it's dumb, but whenever I hear someone say Ruby is dying, it makes me kind of sad. I shouldn't be thinking of any programming language like it's something special to me, but Ruby is the one language I enjoy coding more than any other ever since I first started learning it, so I guess it has kind of carved out it's own little USB slot in my heart ",1527017389.0
WA9ACE,Can't argue science.,1527015693.0
Semi-Hemi-Demigod,"What is dead may never die, but rises harder and stronger.",1527023009.0
Vshan,"Ruby was the first language I started coding in six years ago. My very first post on reddit was on this subreddit seeking advice on my (very first) program written in Ruby. 

I'll never forget the first comment I got:
""The code is shit."" and then a plethora of resources to get better. 

I like to think I've gotten better at programming in the past few years, but whenever I'm feeling like hot shit and need a dose to get me back to the ground, I'll always recall that comment:

""The code is shit."" and I keep trying to improve. 

Thank you Ruby. And thank you amazing people on this subreddit. I hope Ruby never dies. ",1527050191.0
danlbob,they don't give those .science domains to just anyone.,1527032970.0
marcusramberg,"Don't worry, being a zombie programmer isn't that bad.
-- With <3 from the Perl community.",1527060361.0
0A0X,"So glad i stumbled on this! My dumb ass was looking for a book yo learn ruby!
Dodged that bullet! ",1527016520.0
caiocaio,I got an ssl error.,1527027909.0
ksec,"Ruby isn't dead, but it is definitely not growing.

I hope Truffle Ruby, Ruby 3.0 and Guild, Rails 6, Hanami 2.0, will all be part of the solution.",1527080583.0
pedrozath,I think didn't get the point of this site.,1527022712.0
cvjcvj2,"Delphi is dying

√©dit: [OFF-TOPIC]",1527023983.0
hartator,Website is dead for sure. ,1527034400.0
derrickcope,"OK, as a thought experiment let's say Ruby is dying. What language would you move to next that is fun and powerful? Give me your suggestion.",1527034941.0
evertrooftop,"In all seriousness, why does Ruby seem to be on such a rapid decline? Is there an actual lack of innovation? ",1527023610.0
postmodern,"I almost think this should be removed as spam. I get the tongue\-in\-cheek sarcasm of pointing out how ridiculous ""ruby is dead/dying/a ghetto"" assertions are \(we're still waiting for COBOL/Fortran/Perl to die...\), but it's not executed very well and reads more like a troll post, imo. Might I suggest studying the fine literary work on [McSweeneys](https://www.mcsweeneys.net)? That said, it did generate some insightful discussion here.",1527060013.0
Christopher_Wood,"So dying as in no longer cool and hip, or dying as in not used by many companies to make money?",1527033335.0
xamut,"Lately, on work I have a deal only with JavaScript but when I have a free time then I write on Ruby with special joy and pleasure. So when someone says that Ruby is dying, I want to beg them, please kill damn JavaScript firstly. ",1527088343.0
,[deleted],1527025019.0
northrupthebandgeek,It seems this site is like Ruby.,1527047856.0
luladjiev,"As a programmer who thinks to learn ruby what are your biggest ""No don't waste your time with ruby"" and biggest ""Yes ruby is a good choice""? I've really liked the Rails framework or at least what I've seen so far. I'm a coder with 10 years of exp. with languages like php, nodejs, some golang and a lot of frontend experience.",1527063960.0
sprayAtMeBro,"I know it‚Äôs a joke, but yeah, Ruby‚Äôs dying. It‚Äôs a useful, productive language, just like Perl was, so it‚Äôs not going to die completely any time soon, but barring improvements ‚Äî the type system, performance, deployment/dependency management, concurrency, killer libraries, *something* ‚Äî it‚Äôs gonna be hard to justify new development in Ruby for teams not already tied to it.

Edit: Jesus, the hive mind is strong with you people. I'll just point out two ridiculous things in this thread:

* Getting emotional when someone criticizes a language you work with
* Getting upvoted for saying ""look at him go!""

You're supposed to be professional programmers, not children. It's not personal. Use Ruby where it makes sense, which right now means, basically, that you/your team are most productive in Ruby and/or you have an existing, useful Ruby codebase. I've made that exact decision in past jobs: I wanted Clojure/Java, but the team knew *Perl*, so we used Perl and were successful with it.

But outside of those circumstances, I think Ruby's a poor choice. Even as a scripting language, it falls short, because you can't count on having the Ruby interpreter \(vs. having Python 2.6\+ or Perl 5.14\+\).",1527020016.0
lambdaq,server-side MVC web development is dead. And nodejs/python/golang/php7 is good enough to output JSONs.,1527071570.0
jerrocks,I always appreciate these insights into the thought that goes into making Heroku what it is.,1527034704.0
SminkyBazzA,"Given the age of the gem is it possible that the structure/content of the IIF file has changed?

The `convert_iif_entry_to_ofx` method in stripe-iiftoqbo-master/lib/stripe-iiftoqbo.rb won't define the key being used to pass a value into line 11 of stripe-iiftoqbo-master/lib/ofx/transaction.rb if the `iif_entry.accnt` value is not one of the values hardcoded in that method.

Try the newer forked version of the gem available here, as it looks like it's been updated more recently: https://github.com/kgx/stripe-iiftoqbo
",1527019917.0
jrochkind,This is a great optimization. Block parameters can be so useful in making clean code. ,1527000559.0
PikachuEXE,"Block is a often used feature (especially in gems)
Having optimization for it is great :)",1527039573.0
zitrusgrape,sequel + roda. ,1526990995.0
codeduck,"As much as I like Sinatra, for a modern service on a modern MRI you really need a good justification for not just going with Rails 5+ api.

Everything works with a minimum of fuss; there's good support for caching, ORM, custom configuration, instrumentation etc and it is fast enough for at least the first iteration of a project.

Everything else generally adds unnecesssary complexity all in the name of being different.",1526986905.0
combuchan,What did you not like about Rails?  It has a huge curve for newbies--I hated it in the beginning but got over it.  I realized at the time (6 years ago) that it set the standards and everything else was an imitation.  ,1526984980.0
realntl,"It's not Rails I rejected, it's the idea that my entire software stack needs to live inside a web framework. I'll happily use rails as a front end web server, though I've been meaning to try Hanami at some point when I get a chance.",1527014119.0
sammygadd,I really like rails and appreciate all that you get for free. However I'm also amazed by the simplicity of Sinatra and I'm also into REST APIs (as in hypermedia). This has lead me to start building a framework on top of Sinatra and Sequel. Check it out on https://github.com/sammyhenningsson/shaf,1527014937.0
i_know_sherman,Hanami with rom-sql,1527221142.0
smitjel,What you need to understand is that Rails and Sinatra are not simply interchangeable. They're not both hammers with a different brand-name in your toolbag...they are useful for solving different problems. Knowing what your next side project will do should help determine what tool you choose to use.,1527000632.0
purephase,"Flask, and I really miss Rails.",1527010792.0
JapArt,I've been using rails for 8 years and love it. I recently try Go to build an API. Although Go is really fast and easy to learn I missed some rails features. For example CORS and authentication. You have to implement them from scratch and there is when you realize the time saving when using Rails. I think that every framework or language has their pros and cons and also depends of the project. I always recommend rails for a startups and Go for scalability.,1527024681.0
xiongchiamiov,"Honestly? Python and Java (the horror!) frameworks for web apps; Ruby is a text-munging language for me, not something to build large applications in. But I've always agreed more with python's philosophy than ruby's.",1527001951.0
flipkitty,"I haven't tried this, but [ruby-packer](https://github.com/pmq20/ruby-packer) seems promising.",1526965335.0
strzibny,"This is platform specific. For instance, to package it on Fedora you would need to learn RPM packaging so doing it for all platforms *is* possible but crazy. There are some project that try to make this painless like traveling-ruby, but again if the result is a self-contain tar file, you should still ""wrap"" it inside of RPM (on Fedora) for easy of use. I also used Ocra before for building Windows installer -- it works, but only for older Ruby and it's problematic if something does not work.",1526990518.0
jujubean67,Check out: https://github.com/phusion/traveling-ruby it's not super up to date but should still work fine.,1526977552.0
realntl,I would check out [fpm](https://github.com/jordansissel/fpm). It can build operating system specific packages for you.,1526993998.0
jcouball,"You should also checkout [http://shoesrb.com](http://shoesrb.com).  If you are a member of Ruby Tapas, there is an episode of using Shoes to build distributable desktop apps: Episode #521: Distributable Desktop Apps \([https://www.rubytapas.com/2018/04/02/ruby\-gui\-toolkit\-jason\-clark/](https://www.rubytapas.com/2018/04/02/ruby-gui-toolkit-jason-clark/)\)",1527039636.0
InCaseOfEmergency,"First of all, good work building something to help others.

I would second using [Shoes](http://shoesrb.com/) or possibly seeing if you can run and package your app with JRuby.

Unfortunately, you have made things very difficult for yourself by using SDL directly. It's an awkward dependency on any platform. I don't know how hard it would be to port your work to something like Shoes, but it will make distribution a bit easier.",1527054086.0
442401,"Congratulations on getting your first app out there. It's looking pretty slick! I'm sure u/excid3 will be delighted to hear that his videos inspired you. I also find his tutorials to be very clear, concise and helpful for all sorts of solutions.

I've registered  with your site because finding good healthy recipes is something I'm genuinely interested in. A couple of observations from my first experience:

* The search box appears to be broken. I have zero experience with these js frontend wizardry things, but the generated `<form>` element doesn't appear to have an `action` attribute. Is this normal?

* It would be nice if the image for each recipe was also a link to the recipe. I think this is your intention, but at the moment there is just an isolated `<a>` within a bunch of nested `<divs>`. Two of those `<divs>` set the recipe image as the `background-image` with inline css. The `<a>` appears to be a placeholder so I guess you're working on this already.

Anyway, I'm looking forward to trying some of these recipes, adding some of my own and watching your app evolve as I eat.",1526948675.0
chabv,Also Postgres full text search could've worked instead of Elastic Search ,1526959359.0
oxtrue,"Congratualtions, i started learning rails last year, I'm 80% to finishing my first project. Started maybe... 4 before this that never really gainied any traction, mainly because I got stuck and didnt have the knowledge to fix it. Can i ask where did you learn about deployment. I have zero know how about it?

Plus you have a spelling mistake on your site 'perscpectives'

",1526948687.0
-TURBOMAN-,"Looks really nice.   Heroku has free SSL integration now, which would be advisable to add.",1526950786.0
no_picklezzz,"Fantastic job! It looks really nice and I like the idea. I did notice the search bar on mobile looks strange, the magnification icon is repeated throughout the search box. I can send a screenshot of you'd like. Anyway, keep up the great work! I'm looking forward to seeing your progress and where this will go!",1526954463.0
chabv,Ui looking fresh!,1526959318.0
reikj4vic,"Nice! The first impression is very solid.

I noticed a couple of typos on the landing page that you might want to double-check though (-:",1526965097.0
twinklehood,"Tech wise it's looking alright, but I think you're digging yourself into a tricky place legally. Adding a source link doesn't mean you can copy copyrighted material en masse to your own site, it's blatant infringement.

Hate to say it, but you'd need to put original recipes on there, or link to the originals without a local copy.
",1526970485.0
lcpriest,Great work! Highly recommend you compress the images \- it will make the site a bit snappier.I use [https://imageoptim.com/mac](https://imageoptim.com/mac) to compress them \- I would even recommend using smaller sizes!,1526974911.0
waiting4void,"Amazing work! I really find the design and the idea quite whimsical. However, you might want to fix the following bugs/inconvenience-causing-elements :
- The sidebar should automatically hide/un-collapse once I select one of the links. 
- The recipe name is not completely visible at the top on the single recipe page. 
- When I select one of the mini cards (categories), there can be an autoscolling added so that it's more evident that the contents of the page have changed after the AJAX response. 

Edit: These suggestions are only regarding the xs devices",1526989507.0
swordthief,"Looks good! I'm still fairly new to the Ruby game myself, but I'm learning more and more everyday as we use Ruby at my job. Rails, however, I'm not so proficient at, but I am starting to dabble in it a little.

Regarding your project, man, that is one sleek website! Very eye\-catching, but not too much going on in one screen view, so that's good. Just a suggestion: the spotlight and the ""what's on your plate today?"" are more than likely going to be missed a lot of the time being towards the bottom of the site, so you may think about alternative placement of those. I certainly would not have known it was there had I not scrolled down because of my screen size.

Also, I'm not sure if it was just me, but loading into your website the first time around, it took quite a while \(maybe about 15\-30 seconds, thereabouts\). But now it seems to be loading fairly quickly, so maybe it's cached? And the ""Seasonal"" and ""Seafood"" links do not work at the moment.

Seriously though, this website looks great! Good job on your first project!",1527002301.0
000000Swan,"Nice work! I made a similar thing, but in a form of a food blog, where I share my favourite recipes and restaurants: http://cuisinehacker.herokuapp.com

I did it when I was a junior and wanted more opportunities to learn than my job and books, tutorials... A personal project is indeed a great way to learn because you're working on something that interests you.",1527674532.0
pwim,Bar.increment_counter changes @foo_count from 100 to 101. ,1526939974.0
fusedbulb,"The difference between class variable (@@var) and class instance variable(@var) is that the value of class variable is shared across all the instances and inheriting classes. So when you update the value of class variable anywhere it will be reflected for all of the classes. But that's not the case with class instance variable. The values you have assigned in the super class will be inherited but each subclass will have its own copy. 

So in the screen shot you have shared the value was 0 for the first class and the value was changed to 100 for the second class. Then the increment_counter method was called once for each of the class. So the output is correct indeed. 

",1527001253.0
shpidoodle,"What‚Äôs happening here is you have two different instance variables. Unfortunately I‚Äôm on mobile but I‚Äôll try the best I can. 

So when you call Foo.increment\_count it increments @foo_count within the Foo class.

When you do Bar.increment_count you are initializing a different instance variable seperate from the Foo classes instance variable you initialized earlier. 

This instance variable for class bar is set to 100. So when Bar.increment\_count is called, 100 will have 1 added to it because it inherits the increment\_count method from Foo which specifies to add 1 to the instance variable @foo_count within the Bar class. And that‚Äôs why you get 101.",1527024808.0
,[deleted],1526939482.0
moomaka,One easy way to think about it is to add the `p self` statement in the class body (just before `method_one`) from `TestThree` to the other examples. `def blah` will always define an instance method on that `self`.,1526994237.0
danilobarion,"Great list! I didn't know that there are so many different tools to create CLI applications. There is Hanami CLI too, it's very easy to learn.",1526952906.0
sshaw_,"Very nice list. Wow, so many option parsing libraries. 

I'm going to suggest my own gem here: [MarkdownUsage](https://github.com/sshaw/markdown_usage). It can be very handy, especially if you have usage in your README. 

It works for all CLI programs, not just Ruby ones. 



",1526957929.0
zverok_kha,"People seemed to generally like [Object#enumerate](https://www.reddit.com/r/ruby/comments/8ke1k4/objectenumerate_ruby_core_proposal_demo_also/) idea, but felt uneasy about the name or synopsys.

At the same time, I've thought about some examples in favor of `Enumerator#generate`, especially cycles with no initial value (thanks [joke thread](https://www.reddit.com/r/ruby/comments/8kypsr/ruby_equivalent_of_this_program/) for today's inspiration).

So, here is another take to discuss. Examples akin to previous proposal:

    # Infinite sequence
    p Enumerator.generate(1, &:succ).take(5)
    # => [1, 2, 3, 4, 5]

    # Find next Tuesday
    require 'date'
    p Enumerator.generate(Date.today, &:succ).detect { |d| d.wday == 2 }
    # => #<Date: 2018-05-22 ((2458261j,0s,0n),+0s,2299161j)>

Examples with no initial value:

    # Random search
    target = 7
    p Enumerator.generate { rand(10) }.take_while { |i| i != target }.to_a
    # => [0, 6, 3, 5,....]

    # External while condition
    require 'strscan'
    scanner = StringScanner.new('7+38/6')
    p Enumerator.generate { scanner.scan(%r{\d+|[-+*/]}) }.take_while { !scanner.eos? }.to_a
    # => [""7"", ""+"", ""38"", ""/""]

WDYT?

Also, `Enumerator#generate` probably less confusing naming, and less radical proposal, after all (no `Object` bloating).",1526926667.0
klapply,"Jesus Christ, dude, you should warn people that your link produces a loud croaking mess. I was actually wearing my headphones and it kinda hurt.",1526923965.0
aemadrid,can't hear anything on FF/OSX,1527012913.0
realntl,This is a known pattern called a [Fluent Interface](https://en.wikipedia.org/wiki/Fluent_interface),1526911556.0
zverok_kha,"Well, the absurdity of the task probably requires code to be non-idiomatic (because after 2-3 refactorings toward idiomaticity you may suddenly find it to go back to ""normal"" program). But I'd say something along the lines of:

    TARGET_ARRAY = ""Hello World"".chars
    CHAR_RANGE = 32..126
    SLEEP_TIME = 0.005

    def find_char(target)
      found = rand(CHAR_RANGE).chr
      print found

      while found != target
        found = rand(CHAR_RANGE).chr
        print ""\b#{found}""
        sleep(SLEEP_TIME)
      end
      found
    end

    TARGET_ARRAY.map { |c| find_char(c) }.join
",1526888781.0
Dee_Jiensai,"about the ""can confirm"" stuff: The chart is wrong, because it says ""consider themselves superior"" when it should in fact say ""*are* superior"".

",1526884914.0
hehestreamskarma,"> I don't know why but the code seems really ugly to me (to be honest I don't even look at the code)..

Sometimes it's hard to make things pretty, but the things that aren't pretty aren't necessarily hard.

> But I wonder how this program can turn out in *idiomatic* ruby?

eh.

    TARGET_ARRAY = ""Hello World"".chars
    CHAR_RANGE = 32..126
    SLEEP_TIME = 0.005
    
    result = [""""] * TARGET_ARRAY.size
    i = 0
    
    while i < TARGET_ARRAY.size
      result[i] = rand(CHAR_RANGE).chr 
      i += 1 if result[i] == TARGET_ARRAY[i]
      print ""\r"" + result.join
      sleep(SLEEP_TIME)
    end
 ",1526885458.0
Nanosleep,"I think we all know where this should *really* go:

    class String
      def bruteforce
        min_rng = self.each_codepoint.min
        max_rng = self.each_codepoint.max
        progress = String.new
    
        self.each_char do |target_char|
          rndchar = String.new
    
          until target_char == rndchar do
            rndchar = rand(min_rng..max_rng).chr(Encoding::UTF_8) rescue rndchar
            print ""\b"" * (progress.length + 1) + progress + rndchar
            sleep 0.005
          end
    
          progress += rndchar
        end
    
      end
    end
    
    ""Hello World"".bruteforce",1526915065.0
whither-the-dog,"> WebPageTest is the more mature and battle-tested solution.

But it gives me lots of incorrect info concerning asset cache settings. E.g., claiming that my files have no maxage or expires when I can verify them with curl, and every other tool finds them. I suggest removing it from the article.",1527622454.0
whither-the-dog,"I've also got issues with the linked slide show. E.g., ""Use the Database!"" The original code _did_ use the database - its aggregate function. And the new code didn't ""use the database""; it denormalized the data model. A big difference. Often a good approach, but it has pitfalls that must be addressed. In this case, the review info (star rating, actual reviews) is now stored redundantly, which will lead to errors unless handled carefully.",1527622762.0
atipugin,What‚Äôs wrong with Capistrano? It takes about half an hour to setup deploy stuff to fit your needs.,1526849550.0
in0pinatus,"Take a good hard look at https://www.hatchbox.io from Chris Oliver. 

I used to suggest AWS OpsWorks as well, as a sort of Engineyard lite. But they‚Äôve basically abandoned that product, more‚Äôs the pity.",1526843624.0
DrVladimir,"Most of my projects have an update.sh that git pulls from production branch, runs an optional migration, then restarts the server. It can be made very simple if your environment is a linux VPS

Rails isn't too hard to set up on a DO VPS. You can do it once then save a snapshot as a template for future installs. I'm currently looking into Ansible as after about a dozen servers or so this method doesn't really scale well.",1526844125.0
cmitzz,"Depending on the size of it and how much the rails app depends on Sidekiq, I've used Capistrano for a metal app, Capistrano and Docker-Compose (bitch to set up), and lately I tried Mina for a very small app. 

Currently all three options are used 'in production' on my DO-like server (the Dutch ""TransIP""). 

I must say that I really like the complete containerisation of my Docker-compose projects. Once you're set up it is awesome and painless, but it takes a while to fully understand",1526856675.0
strzibny,"I was trying out Heroku, OpenShift (bit cheaper but not as DO). I am on Digital Ocean VPS now, because DO has nice & easy interface and fair price.

I only have a small bash script to set it up -- it's faster than any Docker-based solution, easy to understand (no ops frameworks, <100 LOC), SELinux configuration, letsencrypt and git-push deploy in-place.

If you are interested I wrote something about the setup.

Setting up git push code deploy to remote server:
http://nts.strzibny.name/git-push-code-deploy-to-remote-server/

Trusted SSL certificates with Let‚Äôs Encrypt and NGINX:
http://nts.strzibny.name/trusted-ssl-certs-lets-encrypt-nginx/

Allowing Nginx to use a Puma/Unicorn UNIX socket with SELinux:
http://nts.strzibny.name/allowing-nginx-to-use-a-pumaunicorn-unix-socket-with-selinux/

Hope it helps.",1526840794.0
toadkicker,I moved off AWS to Digital Ocean for the same reasons. If you want to get fancy they have a fully supported Ruby SDK called [dropletkit](https://github.com/digitalocean/droplet\_kit) or as many have suggested Capistrano works very well.,1526861273.0
Kendos-Kenlen,"I use Clever Cloud, a service similar to Heroku but with predictable costs and made by a very nice time. The best support I had until now.",1526871948.0
tortoise888,"Look into Dokku.  

http://dokku.viewdocs.io/dokku/

EDIT: I have poor reading comprehension and missed the OP already tried Dokku.  Sorry OP, I know some people that have tried Flynn over Dokku and prefer that. https://flynn.io/",1526852874.0
kobaltzz,"I'm a fan of AWS Beanstalk for spinning up simple environments. It's really quick and easy to manage. You also get the added benefit of easily autoscaling. Once you get everything set up within your application, you can simple run `eb deploy` to deploy. Depending on the branch, it can deploy to different environments. For small projects, you can stay within the free tier range for a year.",1526860226.0
null-undefined,"My team has moved to the docker/kubernetes way of doing things. It makes it really easy to manage all of our small apps and larger apps, and the on-demand scaling we get is unrivaled (say goodbye to unicorn workers). There is a learning curve, and you‚Äôll probably need a devops team to handle the kubernetes side, but being able to configure and deploy an app reliably without having to worry about the differences between prod and dev is awesome. ",1526861672.0
sickcodebruh420,Been using Capistrano for years on both EC2 and DigitalOcean. No complaints. ,1526861906.0
Oranges13,Capistrano. ,1526865141.0
sshaw_,"If you have predictable traffic patterns that don't require dynamic scaling keep it simple: DigitalOcean, app servers running NGINX & Passenger with shared DB server(s), deploy with Capistrano, round robin DNS, if needed.  

",1526867914.0
micketic,I simply setup capistrano and do a `cap production deploy` whenever I want to deploy. I am currently running three Rails services on a single $5/mo box.,1526881894.0
MagicalVagina,I like to use http://hyper.sh personally. ,1526884576.0
JustinCampbell,"I‚Äôd try to stick with Heroku as long as possible.  The operational overhead of other solutions just isn‚Äôt worth it for personal projects up to medium-sized user bases.

Also check out Netlify for static sites/single-page apps.",1526904655.0
jrochkind,"capistrano would be the most ""standard"" long-used solution. ",1526914097.0
smitjel,"So Heroku is PaaS whereas DigitalOcean is a VPS provider. You won't transition to DigitalOcean and have the same experience you do with Heroku.

For me personally and professionally, I've found AWS EC2 (ubuntu) + Nginx/Passenger + Capistrano + AWS RDS to be my favorite. Heroku is great...it's just that it gets too expensive too fast. Spend the (relatively) short amount of time to learn AWS basics and it will pay off.",1527001232.0
pabuisson,"A bit late to the party but I'll answer, in case it can help anyone. 

I've been using a DO VPS for five years now, to host half a dozen small web apps, mostly ruby apps (sinatra, rails) and static websites. I'm using [mina](https://github.com/mina-deploy/mina) to deploy all of them. Works pretty well. Mina is easy to understand (much more than capistrano, the DSL is small) and that's why I decided to use it in the first place... and I've kept using it for my personal projects over the years.

Even though my workflow is simple right now, I'd like to automate things a little bit more and be less agnostic about the underlying server/vps... If I just need to add a new project to my current setup, I'm fine, but booting a whole new server would still require a lot of time.",1540811330.0
jr0nic,"I can't think of projects like that from the top of my head but it sounds really basic and I bet you will have no problems creating what you want. Also sounds like rails is a good start (when you need to build it on your own - I would think there are also already solutions for these kinds of demands) to accomplish it.

If I would have to give some advice, I would recommend to look into pundit (gem for authorization) and maybe devise for user management.",1526829222.0
TGAlda,"I had a small project once, where PDF generation was needed. The print stylesheet for ActiveAdmin was deemed sufficient, so I instructed the users to simply print certain views to a PDF file.

Anyway, there are multiple ways to achieve this from the server side too.",1526830655.0
Oranges13,"I built something similar to this for my workplace for our potential new clients to apply for services with our company. It's a pretty basic form input -> database and I also added an approval process where administrators can change a status field for the applications.

I wrote it using Sinatra, rather than full blown rails, but it was good.",1526832219.0
contrappasso,"I had success with a project last year by going through the Rails tutorial and just changing the models for what I needed. It got me close enough to start modifying it in other ways, and I also just skipped parts I didn‚Äôt need. You might try that approach. ",1526829617.0
jaryl,"It's not maintained at this repository anymore, but I worked on this pro bono case management app for an NGO, as part of a team mentor at a bootcamp:

https://github.com/TechLadies/home-web

Core features include managing case state (pending, closed), attaching files, contact information, categorizing cases, CSV reports, audit logs, etc.",1526862459.0
_matthewd,"> In Rails 5.2, select_{value,values,rows} methods have been removed completely

That seems rather misleadingly inaccurate. :/

""*broke* query caching"" too, for that matter.",1526748148.0
janko-m,"[Volt](https://github.com/voltrb/volt) sounds like the thing you're looking for, it uses Opal. However, I'm not clear on its current maintenance status.",1526740315.0
sn1de,Pakyow or Clearwater?,1526746036.0
hehestreamskarma,You could roll your own with Sinatra and Arbre.,1526764743.0
systemnate,Just curious as to why? ,1526842439.0
ErCollao,Have you checked out [hyperloop](http://ruby-hyperloop.org/) ?,1526761045.0
sidraytech,check out this blog you might find the answer that you are looking for [https://www.icicletech.com/blog/top-ruby-frameworks-to-speed-up-web-development](https://www.icicletech.com/blog/top-ruby-frameworks-to-speed-up-web-development),1533194749.0
dmke,"If you *only* need to monitor certificates, this is fine I guess. But I think I'll stay with Icinga and [`check_certexp`](https://exchange.icinga.com/krausm/check_certexp).

Granted, the initial setup cost is a bit higher, and you should deploy Icinga on a dedicated host (ideally in a different data center), but properly configured it gives you so much more insight into the state of you fleet.",1526735417.0
borndovahkiin,Very nice!,1526741685.0
jemminger,I did this too :)  https://ssl-check.herokuapp.com/,1526768487.0
1024KiB,"Instead one could use a configuration management tool. I did something in CFEngine before someone wrote a full module for LetsEncrypt, and it's more robust than a cron job (though I'm too lazy to add revocation status check). Why make a script that relies on a central server working correctly instead of writing a puppet or chef module to continuously keep the configuration correct? Nice example of how to do that in raw ruby though.",1526762418.0
2called_chaos,"Shameless advertising incoming:

I couldn't get warm with Nagios, etc. so I created a little monitoring tool for Ruby and it also includes [an SSL expiration check](https://github.com/2called-chaos/watchmonkey_cli/blob/master/lib/watchmonkey_cli/checkers/ssl_expiration.rb).

It just checks stuff though, there is no notification system in there as I'm the only one responsible for fixing things anyway.",1527177724.0
moomaka,"> simply
> cache

There are only two hard things in Computer Science: cache invalidation and naming things.

-- Phil Karlton",1526774735.0
efpi,"Seems nice! How does it compare to identity_cache? It looks like it's less bound to AR and allows a bit more flexibility, but with less pure AR power (has_many, embedding). ",1526731681.0
jrochkind,This is kinda neat. ,1526746403.0
rooood,"I have Ubuntu installed on a 128GB SSD and recently I noticed my disk space is almost gone, so I decided to create this script to help me (and others) delete unwanted stuff from RVM.",1526672491.0
hukendo,"    gem-clear () {
      for i in $(gem list --no-versions)
      do
        gem uninstall -aIx ""$i""
      done
    }

Remove all installed gems.",1527735866.0
mperham,"Mitigating DDoS in Ruby inside your app is... not a great idea.  WAY too slow.

Put it in Linux, put it in nginx.

* https://www.nginx.com/blog/mitigating-ddos-attacks-with-nginx-and-nginx-plus/
* https://javapipe.com/ddos/blog/iptables-ddos-protection/",1526677980.0
panelicious,Great post,1526675262.0
zverok_kha,"The proposal for new method is [discussed](https://bugs.ruby-lang.org/issues/14423) in Ruby tracker.

As asked by Ruby maintainers, I've also released the functionality as a (very small) gem, for everybody to experiment.

Demo of functionality:

    # Most idiomatic ""infinite sequence"" possible:
    p 1.enumerate(&:succ).take(5)
    # => [1, 2, 3, 4, 5]

    # Easy Fibonacci
    p [0, 1].enumerate { |f0, f1| [f1, f0 + f1] }.take(10).map(&:first)
    #=> [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]

    # Find next Tuesday
    require 'date'
    Date.today.enumerate(&:succ).detect { |d| d.wday == 2 }
    # => #<Date: 2018-05-22 ((2458261j,0s,0n),+0s,2299161j)>",1526657570.0
stanislavb,"Seems good and useful to me. I'd vote ""in"" :)",1526684225.0
keyslemur,"I'm a fan, now to find a particularly mischievous way to use it as one does.",1526703582.0
moomaka,"Functionality seems useful, but I don't like the name, this is more analogous to `reduce` / `inject`. ",1526661886.0
jamfour,Link to the [RailsConf 2018 playlist](https://www.youtube.com/playlist?list=PLE7tQUdRKcyak-yFKj5IN3tDYOh5omMrH) instead of just Confreaks‚Äô newest videos.,1526650781.0
manys,Warning: the sound quality is terrible,1526651529.0
GroceryBagHead,Informational!,1526629111.0
,"This is a sub for Ruby the programming language. We do love our gems, but you might want to try a different sub. ",1526629281.0
janko-m,"If you're going to be dealing with a lot of database records, Sequel will definitely make it much easier to keep things performant, due to the fact that it has a model-less query interface (great for migrations), [sequel_pg](https://github.com/jeremyevans/sequel_pg), and lighter model instances. In my experience bottlenecks were 90% of times in interaction with the database, so the more advanced database library you use the better. I worked at an app where we had tables of 5-15 million records, and was so thankful we were using Sequel as it gave us the manoeuvring space we needed without having to resort to hacks.

In the last app that I worked at, we initially had memory issues when request would have large JSON payloads. The issue was fixed when we switched from Ruby's JSON library to [Oj](https://github.com/ohler55/oj). With Roda this is trivially configured with `plugin :json_parser, parser: Oj.method(:load)`. Whichever web framework you decide, it would be good if it had the ability to override the request body parser (I don't know if Rails has this ability).

If you're going to use WebSockets, I've heard that Action Cable isn't very performant, so you might want to consider using [Iodine](https://github.com/boazsegev/iodine) or [Agoo](https://github.com/ohler55/agoo) (those guys really seem to know what they're doing), or use an external service.

That's all I have from the top of my head.",1526601159.0
ksec,"I really wish Hanami 2.0 will come out sooner. It is built on top of Roda, Sequel and Dry-RB. ",1526902176.0
intentions_are_high,"Where do you anticipate the bottlenecks to be? Search? Saving data? Lots of db reads? Etc? What are ‚Äúmillions of simultaneous actions they‚Äôll be taking? Once you identify those, you can focus on scaling them. 

I‚Äôve never used Roda, but I have used rails at scale. I couldn‚Äôt imagine that one is that much more performant than the other since they both rely on ruby, which is your biggest performance bottleneck. 

If you‚Äôre going to have a lot of reads from you DB use a slave. If you have a lot of static-ish data endpoint then cache them with Fastly or Cloudfront. 

One of our apps gets about 5 million pageviews a month and runs on 2 t2.mediums on AWS (one is really just for redundancy). 80% of our traffic is coverages by our cache server and Elasticache, but only 30% is cached. We focused on the bottlenecks and made that performant. 

If you could share some more details about where bottlenecks could be then I can definitely make recommendations. ",1526643520.0
swerveone,"By 'forced' path do you mean less options? If so I'm not sure that it's a benefit. Also millions of simultaneous users, are you building the next Twitter? Sounds interesting, what kind of app is it?",1526647559.0
myringotomy,"Have you done the benchmarks with a real app to determine which one is faster?

Roda and sequel both need a bunch of plugins to be useful.  Do your own tests. All the benchmarks out there only test routing.",1526770219.0
StefanHagen,This is pretty cool!,1526626946.0
aderthedasher,Coooooooooool!,1526640687.0
realntl,"I don't understand the conclusion that timeouts are dangerous. Looking at Mike Perham's example that was quoted, it seems like it's actually connection pools that are responsible for introducing the bug in question.

These days, I really try to avoid connection pools wherever I can. There are other patterns for constraining the number of connections with a remote host. For instance, each logical process (thread or fiber, for instance) can own its own connection. Then, you can simply constrain the number of logical processes, which arguably should be done anyways.

Connection pools seem like the kind of abstraction that tries to shove complexity behind the scenes via global state, which always ends up causing the same types of problems. In this case, we have declared Timeout to be something that shouldn't be used in general, but only because of a particular kind of bug with a particular kind of technique (connection pools). Seems like the definition of throwing the baby out with the bathwater.",1526576031.0
Blimey85,Noticed that Trestle was left off the list of Admin gems. I haven‚Äôt used it yet but it looks pretty nice. It‚Äôs relatively new and is actively developed.,1526566241.0
seumarlanuh," you as a developer and also for your users, who will be delighted with a fantastic app!",1526611213.0
the_exiled_shoe_lace,"Another admin gem I've been meaning to try is called [Wallaby](https://github.com/reinteractive/wallaby). It was presented at a meetup I went to, seems like a flexible admin console solution, although I've not really had a chance to use it yet.",1526604001.0
GroceryBagHead,[All replies must be minion themed](https://i.imgur.com/gmbYm3o.jpg),1526575595.0
seumarlanuh, is a stream designed for use in scripts that process files given as command,1526611228.0
janko-m,"That was a nice highlight, and thanks for the shout-out! I would just like to comment on a few things.

> It‚Äôs a built-in way to deal with uploads without extra dependencies like Paperclip, Carrierwave or Shrine.
>
> [ ... ]
>
> Since ActiveStorage has been merged into Rails, all the features described above are built-in and don‚Äôt require any extra dependencies and so less maintenance needs to be scheduled

Well, Active Storage is technically also an ""extra dependency"", the difference is just that it ships with Rails. That has some pros, such as that it will always be up-to-date with latest Rails releases (though Shrine, Refile and Dragonfly will as well, because the don't depend on Rails, except for the small Active Record extension). But, it also has some cons, such as being tied to the Rails' release cycle; e.g. the ImageProcessing feature you mentioned will only be available starting from Rails 6.0, which I'm guessing will be about a year from now.

> Most popular gems like Shrine, Paperclip, etc. don‚Äôt provide ready-to-use tables and require a migration to add a few fields where you want to store your file information. Even if you feel free to do what you want and you‚Äôre not stuck to the ActiveStorage way, from my experience you‚Äôll certainly recreate a polymorphic Asset model.

Yes, Active Storage's Attachment/Blob polymorphic design is very compelling, I'm thinking of writing a similar extension for Shrine.

> As we seen above, ActiveStorage attaches and detaches files outside ActiveRecord transactions. You need to do it by yourself when you need to, independently from a save, whereas common gems store your files using ActiveRecord callbacks directly from your params. In my opinion, ActiveStorage provides a better way to handle file attachments by separating two concepts: attributes which go in the database and files which depend on your storage.

That's a good point, I also think that it's better when attaching is explicit. In Shrine this led to some unexpected gotchas, such as people relying on certain model attributes being present during attachment, but they weren't because the attachment was assigned before some attributes (the user chooses the order of attributes via strong parameters). It might seem more convenient at first, but I think it's less flexible.

------------

Btw, there is one thing I noticed when reading Active Storage regarding variants that I found far from ideal. This is what happens when visiting a variant URL:

1. Rails routes the request to `RepresentationsController#show`
2. controller retrieves the Blob record from the database
3. controller checks whether the variant has been generated (which for external services means a HEAD request)
4. controller redirects to the direct (expiring) URL of the processed variant

I think that is a lot of overhead for displaying each individual thumbnail (1 database call + 1 HEAD request + 1 redirect). It would be nice if these requests were cacheable, but I think that the response being a redirect and the `Location` being an expiring URL could complicate things.",1526597962.0
mperham,"Take a look at the Pagy codebase. https://github.com/ddnexus/pagy/blob/master/lib/pagy/frontend.rb


    def pagy_link_proc(pagy, lx=''.freeze)  # ""lx"" means ""link extra""
      p_prev, p_next, p_lx = pagy.prev, pagy.next, pagy.vars[:link_extra]
      a, b = %(<a href=""#{pagy_url_for(MARKER)}""#{p_lx ? %( #{p_lx}) : ''.freeze}#{lx.empty? ? lx : %( #{lx})}).split(MARKER)
      -> (n, text=n, x=''.freeze) { ""#{a}#{n}#{b}#{ if    n == p_prev ; ' rel=""prev""'.freeze
                                                    elsif n == p_next ; ' rel=""next""'.freeze
                                                    else                           ''.freeze end }#{x.empty? ? x : %( #{x})}>#{text}</a>"" }
    end
",1526684503.0
jrochkind,Why not find the problem in kaminari and fix it? It ought not to be creating all those objects. ,1526574876.0
GroceryBagHead,"I looked around the code and it seems that the claim that it eats less memory is all about rendering of the pagination controls. Actual pagination code is basically your basic `offset` and `limit` call. 

Blog post presented pretty graphs about memory utilization with vague statements like ""integers for the calculations instead of Ruby objects"". 

Kaminari is a way more robust library. It can handle a lot of weird edge cases as it had a lot of eyeballs on it over the years. I don't see a valid reason for switching.

And yeah, it would be infinitely better to fix kaminari to improve memory footprint instead of making a brand new library that's missing years of bug fixing that kaminari had.

",1526577022.0
Blimey85,This looks very cool. I‚Äôm currently using Kaminari but I‚Äôm gonna try switching over and seeing how that goes. Looks like it should be pretty simple. ,1526565698.0
tux_mark_5,"I'm not 100% sure, but some time ago SciTE used a non-fixed width font by default (maybe still does?), and it may look weird if you are not into proportional fonts.",1526575914.0
toadkicker,Yay I always wanted to replace my IDE with a browser!,1526557002.0
seumarlanuh," One of the most interesting is Hot Module Reloading, supported out-of-the-box in Webpacker.",1526611236.0
sshaw_,"IdentityCache [does not depend on Rails](https://rubygems.org/gems/identity_cache). 

There's [SecondLevelCache](https://github.com/hooopo/second_level_cache).

I though I saw a fork of [Record Cache](https://github.com/orslumen/record-cache) somewhere that supports ActiveRecord 4.2 (linked version only supports up to 4.1).

See what [Awesome Ruby](http://awesome-ruby.com/) has to say on this topic. ",1526524056.0
theGalation,"[Sandi Metz FTW!](https://www.sandimetz.com/products#product\-poodr)

I recommend both books

Read through open source code. I've learned a lot from the RSpec library.",1526497361.0
dany9126,"Read ""Practical object - oriented design"" by Sandi Metz. That book helped me a lot. ",1526511329.0
,"Learn the principles of OOP separately as far as Im concerned - pretty simple (Lynda.com free week and you should be good)

",1526504445.0
Gnascher,"Just this:

EVERYTHING in Ruby is an object, and can be modified at runtime.

Use that knowledge to your benefit and/or peril.",1526518221.0
briang_,I'm also a huge fan of Sandi Metz. Here's a [playlist](https://www.youtube.com/playlist?list=PLgyFUrQT3Nk1U757wmi5I3zFJAxJoLBnF) of some of her talks that I put together,1526551010.0
require_all_the_gems,"I can humbly recommend you this article I wrote about OOP in Ruby. It starts with the basics (object, class, instantiation, messages, class vs instance methods, etc). Part 2 will continue the basics with public/protected/private, polymorphism, inheritance, the concept of abstract classes, etc. 
https://medium.com/@mariano.giagante/an-object-oriented-programming-primer-e33142ecaf93",1526538753.0
ShaiDorsai,I got tired of rvm and rbenv and now use chruby. Much simpler.,1526478536.0
ioquatix,I would suggest using `rvm`.,1526472040.0
klaustopher,"You can always link the ruby you installed with homebrew using `brew link ruby` (you might need to throw in an `--force`, I'm not sure if brew just lets you override the system ruby)

Although I agree with people, that if you are doing this more often, you should use rbenv or rvm. But if you just have this one project, just link the brew ruby and you are fine.",1526472873.0
KingPretzel,"Like others have said, use `rbenv` or `rvm`. I personally use `rbenv`, but either will do.",1526480875.0
javawag,"Either use `rvm` as suggested by u/ioquatix, or something else like `rbenv`. For `rbenv` you can run `rbenv install 2.5.1` and then do `rbenv global 2.5.1` to use that version globally throughout the system. I believe `rbenv` is also available on Homebrew \(though I'm not 100% sure where I installed it from!\) ",1526472284.0
StuffedWithNails,"I also suggest using [RVM](https://rvm.io/), but other than that it just sounds like you need to fix your PATH. Homebrew probably installed Ruby 2.5.1 in /usr/local/bin.

Try typing:

    $ /usr/local/bin/ruby -v

If that returns 2.5.1, there you have it.

But you should use RVM.",1526472299.0
ghztew,"I was a huge rvm fan for about 8 years, I recently switched though to asdf because it can do more than just ruby.",1526475199.0
SexyEyyEff,"What he said.
Rvm makes it as easy as ‚Äò$ rvm install 2.5.1‚Äô
https://rvm.io/",1526472460.0
nakilon,"Wow, nice proof that /r/ruby is retarded.  
They suggest rvm over rbenv.",1526506068.0
laerien,"It would be nicer yet to use mandatory keyword arguments. They've been around since 2.0, so all modern Rubies support them!",1526487567.0
realntl,"Coupling to positional ordering is not that bad. Over the years I've seen people (including myself) get excited about using keyword arguments everywhere, thinking it'll reduce coupling, but they inevitably miss two important things:

1. Almost universally, the positional arguments of a method call can be ordered from most essential to least.Consider this: `Location.new(""USA"", ""Texas"", ""Austin"")` Is there any doubt which one of those names goes first?
2. It's _rare_ that the values being passed into a method call aren't themselves variables. Sure, `Person.new(first_name: ""Jane"", last_name: ""Doe"")` seems to be more clear, loosely coupled, and explicit than `Person.new(""Jane"", ""Doe"")`. This is always the justification. However, what you're more likely to see in the wild is something like this: `Person.new(first_name: params[:first_name], last_name: params[:last_name])`. Honestly, any method signature that, in practice, ends up looking like `foo(a: a, b: b, c: c)` gets a ""nope"" from me.",1526492950.0
sshaw_,"To check if a method can call super, one can use `defined?`. E.g., `defined? super`.",1526511055.0
schneems,Wanna know where that `super()` call leads to? You can use `super_method` https://www.schneems.com/2015/01/14/debugging-super-methods-ruby-22.html,1526508505.0
keyslemur,"Ah, and Programming Rust. I'll probably start with that and Domain Modeling Made Functional, which I picked up because I realized it was written by the Railway Oriented Programming guy ( https://fsharpforfunandprofit.com/rop/ ).

Turns out it's quite a good book so far. 

Rust was more for doing some tighter optimizations to pattern matching. Stealing some ideas from Spark and Scala on that note to try and make it parallelizeable for serializeable entities, so that should be fun.",1526495047.0
chrisgseaton,"The GIL prevents parallel access to the same object, but allows concurrent access.

If you access an object in multiple steps that you don't want to be interrupted then you don't want concurrent access.

A mutex is about preventing that concurrent access as well.

Here's a program that deadlocks in Ruby.

    a = Mutex.new
    b = Mutex.new

    t1 = Thread.new {
      a.lock
      sleep 1
      b.lock
      puts 'here 1'
    }

    t2 = Thread.new {
      b.lock
      sleep 1
      a.lock
      puts 'here 2'
    }

    t1.join
    t2.join

    $ ruby test.rb 
    test.rb:18:in `join': No live threads left. Deadlock? (fatal)
    3 threads, 3 sleeps current:0x00007fdb570edf50 main thread:0x00007fdb55c0c690
    * #<Thread:0x00007fdb56086ef0 sleep_forever>
       rb_thread_t:0x00007fdb55c0c690 native:0x00007fffa942f380 int:1
       test.rb:18:in `join'
       test.rb:18:in `<main>'
    * #<Thread:0x00007fdb57924a20@test.rb:4 sleep_forever>
       rb_thread_t:0x00007fdb570ec640 native:0x000070000d632000 int:0 mutex:0x00007fdb570edf50 cond:1
        depended by: tb_thread_id:0x00007fdb55c0c690
       test.rb:7:in `lock'
       test.rb:7:in `block in <main>'
    * #<Thread:0x00007fdb57924908@test.rb:11 sleep_forever>
       rb_thread_t:0x00007fdb570edf50 native:0x000070000d735000 int:0
       test.rb:14:in `lock'
       test.rb:14:in `block in <main>'
    	from test.rb:18:in `<main>'

Note that the GIL also simplifies the internals of MRI because it effectively functions as a mutex for internal data structures.",1526414090.0
rjungemann,"CRuby can still work concurrently for IO-bound tasks. Many Ruby standard library methods and C libraries will release the GIL when doing external processing (DB access, file access).

From https://www.jstorimer.com/pages/more-about-mri-and-the-gil :

""But don't forget the caveat! In MRI, when one thread is blocking on IO, MRI switches to another thread and lets it run in parallel. So in a multi-threaded system where you have a lot blocking IO, MRI will perform similarly to JRuby when it comes to concurrency.""",1526487617.0
cmol,"In addition to the answer from /u/chrisgseaton, using mutexes also allows your code to work when using another ruby such as jruby or rubinius.",1526458072.0
brownmeister,What‚Äôs this editor? ,1526434303.0
chaserx,I'm guessing at least the live coding synth stuff this is done with Sonic Pi: http://sonic-pi.net/,1526440270.0
pikopuyo,"This is great news! It was always cumbersome to have to `rescue ArgumentError` when doing strict string conversion to integer. Things will get much cleaner and apparently faster too.

But more than that, I think this is very important because it's creating a standard about what is Ruby's convention for distinguishing between exception-raising and non-exception-raising methods. Rails ended up borrowing the bang to make this distinction (as in `find_by` and `find_by!`), but that is not quite the same semantics as the standard library's destructive vs non-destructive distinction and generated some confusion about naming methods with bang or not. But now we will have a standard to follow and I think it will make things clearer in the long run. 

It would be good if Rails also changed its methods to this new form in the future. I just don't know what would be the best form since many of them already accept an options hash as argument (and maybe one of your table's columns is named ""exception"", who knows?), but it would be nice for consistency.",1526433085.0
nakilon,"I don't like all these ""new way to hide an error!"" that Ruby implements during last years.",1526607837.0
paneq,I really needed it a few months ago. I guess I am gonna learn it now :\),1526391605.0
philpirj,Have you considered using RuboCop's auto correct feature?,1528036790.0
chrisgseaton,"For research related to Ruby, there is http://rubybib.org.

If Ruby isn't the *topic* of your research, you're just using it *for* research, then academia doesn't work like that - people generally won't care what language you have used and so there won't be a place for researchers using Ruby - it's your research that people are interested in, not the tools unless they're a research result in themselves.",1526387500.0
VeryGoodGoodGood,"Numpy and pandas make python easier for data scientists to rip through data and get the results they need. 

It would be a slightly more manual process in ruby, which the majority of that audience isn‚Äôt interested in doing. 

That‚Äôs why most use R anyway ",1526391852.0
tadrinth,"Partly because Ruby originated in the developer world, and Python originated in the academic world.  Hence why Python has NumPy and Ruby lags behind in scientific features.  ",1526412571.0
fuzzyinterval,"Numpy and Pandas are two of the 'big players' that make Python a data science favorite.

Ruby does have equivalents \(and they're actively maintained\):

[Daru](https://github.com/SciRuby/daru):Pandas

~~NArray~~[Numo::NArray](https://github.com/ruby-numo/numo-narray):NumPy",1526765404.0
Sqeaky,"That is really cool, I hadn't heard of Crystal. I've been spending a lot of time in C++ and to the static typing actually catches a ton of Errors at compile time. 

For some quick little projects I don't want to deal with it and that is what I've been using Ruby for. But for anything large I want the extra checks to ensure I don't add bugs further on in the project's life cycle. This seems to provide a good middle ground where most of the complexity of C plus plus isn't required, but a performance and reliability boost his desire.

Being so new it's not going to nearly to set of libraries that Ruby has though.",1526386470.0
feelosofee,"> *However, because I want to convince people to try out Crystal...*

Yet another ~~rubyist-click-bait~~ poorly named article with the sole purpose of hijacking rubyists to Crystal...",1526400889.0
peteohler,This is a collaborative effort between Iodine and Agoo development. The PR to extend the Rack SPEC has become a hot topic.,1526353272.0
bjmiller,"Methods are stored in the method table. It is a hash table, but it's not a `Hash`, nor any other Ruby data structure. `#method` is the way of reading individual entries out of the table.

Singleton method `bar` on class `Foo` would have inspect text like `#<Method: Foo.bar>`. `#<Class:0x12341234>` means the class was not assigned to a constant. The inspect text for the singleton class for `SomeClass` would be `#<Class:SomeClass>`",1526353536.0
,"When using the `method` method, class methods have a dot & instance methods have a pound.  Like so...

    irb(main):001:0> String.method(:new)
    => #<Method: String.new>
    irb(main):002:0> String.new.method(:to_s)
    => #<Method: String#to_s>

Also, for many methods, you can look up the location for original source w/ the `source_location` method.  In a shell, you'll see this...

    irb(main):004:0> class Foo ; def bar ; end ; end
    => :bar
    irb(main):005:0> Foo.new.method(:bar).source_location
    => [""(irb)"", 4]

For classes written in Ruby and stored in a file, you'll see this...

    irb(main):007:0> require ""set""
    => true
    irb(main):008:0> Set.new.method(:replace)
    => #<Method: Set#replace>
    irb(main):009:0> Set.new.method(:replace).source_location
    =>[""/Users/pope4president/.rbenv/versions/2.5.1/lib/ruby/2.5.0/set.rb"", 187]

And for some native methods, I think the ones implemented in C, you you'll just get nil...

    irb(main):010:0> String.new.method(:to_s).source_location
    => nil",1526354923.0
realntl,"Good stuff! I really want an APM designed for evented systems that allows visualization of message processing flows. Ideally, it'd be event store agnostic, but I suspect that'd be a tall order.",1526345207.0
exoplasm,You don't have to do anything unless you are offering the gem for download.,1526315414.0
ropeney,"[https://tldrlegal.com/license/mit\-license](https://tldrlegal.com/license/mit-license) is a good site for understanding licenses a bit better.

From what I understand, you only need to include the license in any copy of the software or substantial portions. In the case of ruby it is generally included in the gems you use‚Äîif you change/fork code in a gem the license still remains for that gem and it's changes. 

In the case of JavaScript, I believe you just have to include the license at the top of the source file for that JavaScript code or package. I am unsure of what is required when you minify.

The license, in respect to a general ""ruby app"", only really comes into effect when you give/sell/publish the software to someone else. The execution of the software\(s\) doesn't seem to require you to display a license to the public in any way; just in the source code‚Äîwhich may or may not be seen by anyone other then you or your organisation. 

This is my understanding anyway...",1526315813.0
realntl,"I don't think the conclusion of the article is sound.

If a job performs a query internally to determine if the job should be run, then it becomes impossible to actuate the job without meeting the preconditions evaluated by the query. For instance, to test the job in this post, you'd have to generate a user that wants notifications. This is a step backwards in terms of design: i.e. I want to actuate something I'm testing, but in order to do that, I have to set up an unrelated constellation of objects. The job should therefore _not_ be concerned with determining whether it should run. In fact, we simply should not enqueue jobs that aren't supposed to run.

On the other hand, all jobs must be idempotent. Therefore, they have to *at least* query to determine if they've already completed their task. That's a different concept than whether the job should be performed, though. So I would expect there to be some logic for each job that causes it to ignore the job if the work has already been done. This kind of query in a job is unavoidable.

The only code that belongs on a job is code that is _of_ the job. Determining whether a job should be enqueued or not is logic that belongs in whatever controls the issuance of the job.",1526315451.0
editor_of_the_beast,"> The code enqueuing the job doesn‚Äôt need to care whether the work of the job needs to be done or not. It aids comprehension to keep the logic about when to do something near to the code that actually does the thing. This will make the code easier to understand when you come back to it later.

I feel the opposite. The logic has to live somewhere, and the controller is the module with the brains. Moving the logic out of the controller into the job just makes the job more complicated. The job then has more than one responsibility - I think it‚Äôs better to keep them simple and focus on the task that they‚Äôre doing.

The same applies to everything honestly. Is it better to have functions that handle all kinds of error checking, or to have a layer above the function call that sanitizes inputs and passes sane data? 

One of my favorite philosophies is ‚ÄúGuard the border, not the hinterlands‚Äù a quote from Confident Ruby. It means that in order to have clear, confident code, you have to have well defined layers and responsibilities. Every function in the entire application can‚Äôt do error checking - it will weigh your code down and add a tax onto every line that you want to write. Someone up the chain has to sanitize inputs so that you can focus on expressing logic in its simplest form. Practically, it means pushing the ‚Äúugly‚Äù logic of error / edge case handling to factories that create appropriate objects, for example Null Objects for handling error cases. Down the chain, the logic can genetically operate on any object its passed.

It‚Äôs a real game changer when you adhere to this. 

EDIT: Fixed the hinterlands quote ",1526316042.0
PikachuEXE,"For me I would do something like:
```ruby
class SendDailyNotificationToOneUserSometimes
  # check user state for notification here
  # call SendDailyNotificationToOneUser
end
class SendDailyNotificationToOneUser
  # No checking, just send it
end
```

But I only do this if the user state cannot be checked outside
Otherwise I do:
```ruby
SendDailyNotificationToSubscribedUsers
  def call
    User.all.subscribed_to_daily_notification_only.find_each do |user|
      # Call another op or worker, but usually worker to allow parallel execution
    end
  end
end
```
",1526433513.0
SourTangerine,pry for sure ,1526308928.0
kobaltzz,"Well, they do have ActiveStorage which is a decent solution for file uploading. I think having a built in authentication/authorization solution would make sense since these are two very common things that get built into nearly every application I build.",1526309208.0
jdickey,"None. Stop the *fscking* bloat.

1. It makes it harder for new devs to come up to speed because they think they have to learn *everything*;
2. It stifles innovation and experimentation among teams using Rails. Managers and new devs assume that ""if it's in Rails, it must be the best implementation of that feature in Ruby"". There's a _reason_ Devise hasn't been in Rails since 3.2 when people started really asking about it;
3. It presents too much of a false target for people developing/considering developing new Gems. Rather than ""this solves my problem with _X_, and I bet it would work for others, too"", there have been notable fads where the goal has been to ""make it into Rails"".

Instead of being an ever-larger kitchen sink for fast prototypes and initial versions, the Rails team should focus far more on sustaining development. How can the *maintenance* of Rails apps be made less painful? How can The Rails Way be adapted to make it relatively easy to add new *application features to a Rails app*, rather than *adding new framework add-ons to Rails*? Instead, the team seems to have a mindset more appropriate to the 1.2 era, ""let's keep adding features rather than figure out how to make Rails apps more sustainable and survivable"". That might have been a defensible approach twelve years ago; it's been far less so for several years now.",1526372108.0
hellocheekyyy,Devise/some form of auth/auth gem.,1526312619.0
zverok_kha,"All of them, definitely. Rails should swallow entire Ruby infrastructure and everything anybody written useful in Ruby ASAP.",1526309039.0
zinovyev,https://github.com/vcr/vcr,1526329887.0
zinovyev,A nice list! I wish I had one when I started to develop with rails. Add VCR gem to your toolbox),1526329969.0
jrochkind,"I have found that leaving the configuration object ""open"" to any arbitrary keys seems convenient and is certainly easy to write -- but ends up being a mess later. With typos in config keys not failing fast, and no obvious single place to look at in the code for the list of legitimate recognized keys, it just leads to confusion and frustration, in anything that is going to last a while. 

I guess in some ways it's analagous to static vs dynamic typing. Although i still love ruby and feel little need for universal static typing in general, in this analogous case I've been trying to move to configuration objects with a 'closed' list of acceptable keys (and sometimes even validity checking on set). (Also trying to avoid `hashie`, which I used to find convenient for configuration objects). The extra work up front pays off down the line. ",1526305250.0
Blimey85,"Thank you for the great write up. Very cool to see someone using Dokku in the wild and your guide will make it very easy for me to make some changes on my own setup.

I wonder if storing for a month rather than two weeks would be better. For anything with decent traffic you should know about problems pretty quick but on a lower traffic site you might not. I‚Äôm probably just being overly cautious however. ",1526296578.0
arfobeat,"You're pushing ip to GA? That hasn't been allowed for a while. If Google finds out they'll delete your data.  If you're lucky it's just the ips but from the scenarios I've heard of, they delete either data with ips attached or all the data from the instance (can't recall the extent but it was not good). ",1526301520.0
tubignaaso,What if anything did you do to comply to the GDPR‚Äôs version of the cookie law? I‚Äôve been curious how others have been handling that since the open source projects seem to all be focused on the older cookie law.,1526306789.0
ASIC_SP,"yeah, it says unsafe.. 

however, I'm able to access the courses on http://rubymonk.com/learning/books - not sure if that's unsafe too...",1526278124.0
evaryont,"Chrome will start marking in the URL bar that an HTTP website is unsafe, but won't cause an interstitial. So probably not what you're talking about.

I figure the error you're seeing is because their certificate has expired. (Specifically on Feb 10th, a few months ago.) It's a Let's Encrypt certificate, so they need to re-run their scripts (certbot maybe) and renew the certificate.

They don't have a complete suburl redirect set up. Only the index page redirects incoming HTTP traffic to the HTTPS website, which is why the URL /u/ASIC_SP posted works.

The reason you only see a basic HTML page is because they include various images, CSS and Javascript over HTTP even when serving an HTTPS request. This is huge no-no in web security - [Mixed Content](https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content) is something to avoid as you break the integrity promises of TLS. So modern browsers will refuse to load that content over HTTP, causing you to see only the basic HTML render.",1526282716.0
sshaw_,The end of an era. ,1526263908.0
jrochkind,"Personally, ActiveStorage isn't doing it for me, isn't making it easy enough to customize in the ways I need. 

But paperclip hadn't really been getting the maintenance it needed. Sadly like many thoughtbot open source projects, which start out looking very good and well-designed, and end up not getting the ongoing development they really need to stay high-quality. It's open source, nobody owes us anything, but I've become cautious about thoughtbot dependencies. 

My interest these days is in [shrine](https://shrinerb.com/). ",1526304282.0
ropeney,">Release with a deprecation notice. This will be identical to the bugfix release, only it spams your logs with a deprecation notice. This is a separate release so that you can upgrade to it at your leisure.

It'd be good to have a deprecation notice on the Github page indicating this is coming, simply so new people finding the project don't invest in setting up with something that won't be around much longer? Not all read Reddit.",1526259630.0
stanislavb,A bit sad but maybe not unexpected.,1526265908.0
henrebotha,This is giving me an unexpected feel. RIP,1526282804.0
editor_of_the_beast,"Every time I put my heart out there, I have to back out the changes when the library dies a year later :( ",1526299258.0
HomemadeBananas,F,1526326881.0
taelor,"So long, and thanks for all the attachments.",1526315736.0
GroceryBagHead,Odd that they decided to shutter project down instead of handing it over to somebody else. I'm sure there are and will be tons of apps that will be using Paperclip until the sun burns out. But I guess nobody made an offer...,1526335650.0
equivalent8,https://twitter.com/equivalent8/status/996799516966866945,1526490545.0
keyslemur,"Writey writey writey. Had a lot to try and put on paper, so breaking it up into more than a few articles.

This one veers deeper into the FP abyss, and in some ways goes counter to how you'd normally program in Ruby. That said, explicit flow control in data pipelines has saved my tail on multiple occasions.",1526254402.0
sirpok9t,"Do that more than a few times, and you begin to realize this gets cumbersome.",1526258672.0
drindrin99,"Out of interest, what is your background in functional programming? 

No offense, but i often notice these exact blog posts and gems coming from someone who has just been learning haskell for 2 weeks and suddenly feels enlightened - rather than an actual gnarled, highly experienced FP practitioner ... ;)",1526286994.0
sirpok9t,It is absolutely fair game to get a hold of.,1526258328.0
keyslemur,"Sometimes I just start writing and writing and writing and....

This one is around some of the ideas that combined closures and OO techniques to make libraries like Qo and Xf among others. In the same vein as the previous article, we have more than one paradigm to use in Ruby so it'd be a shame not to give it a good run!",1526243828.0
iconoclaus,"policy objects are so simple that i prefer to roll my own. 

that said, there appear to be [wrappers for pundit](https://github.com/smartinm/sinatra-pundit/blob/master/README.md) to integrate it into Sinatra.",1526226311.0
,I've use Pundit with Sinatra and it worked well. ,1526236944.0
honeyryderchuck,pundit is hardly rails\-focused. ,1526246456.0
,"I don't think Pundit is Rails specific at all. It integrates with Rails easily, but all the code is pretty straight forward.",1526242731.0
jillian_sucks,Nice.,1526222892.0
NilsLandt,"You may want to remove this part:

> Event sourcing is a recently developed design pattern 

You even linked to 12 1/2 year old page describing the concept.

Also, video doesn't load (""Sorry Because of its privacy settings, this video cannot be played here."").",1526203360.0
,"Good write-up! I thought this would be a very different post, but it's still OO, except done right. I think a lot of the bad rap OO gets is not inherent of OO itself, but a weakness which can be avoided by adhering to a few rules.

Just because a language lets you get away with a lot, doesn't mean you should do it.",1526241510.0
keyslemur,"This one stemmed from a lot of questions on why you don't want to use `gets` and `puts` in methods, or hardcode things, or a lot of other concerns some of the people I've been teaching have brought up over the past few months.",1526191765.0
Deathbymosh,The secret is that you don‚Äôt entirely need to forego it to get some of these benefits.,1526239493.0
sirpok9t,you can use to make your programs better today.,1526258677.0
geraldbauer,See [Best of Practicing Ruby](http://yukimotopress.github.io/practicing) at the [Yuki & Moto Press Bookshelf](http://yukimotopress.github.io).,1526108260.0
schneems,Metaprogramming Ruby.,1526127755.0
hmaddocks,"Practical Object-Oriented Design in Ruby (POODR)

https://www.poodr.com
",1526108558.0
jb3689,"All of the OO stuff is great but I've found it to be mostly subjective and repeating a lot of the same old boring stuff. I've always felt that programming with heuristics works better for me (e.g. least-visibility principle, sprinkling design patterns where it makes sense, focusing on interfaces, doing mostly TDD but trying to test meaningful contracts instead of being hardcore about red-green-refactor, etc)

Russ Olsen's [Eloquent Ruby](https://www.amazon.com/Eloquent-Ruby-Addison-Wesley-Professional/dp/0321584104) is still, and will probably always be, my favorite. It taught me how to right Ruby ""the right way"" by teaching me to learn the core libraries in-depth and explaining what the conventions were in them

Outside of that, [Jesse Storimer's books](https://www.jstorimer.com/pages/books) are all good for learning how to use OS features from Ruby which is something I find critically lacking instruction of in the Ruby community",1526132651.0
fedekun,"I think what OP means is why `hash[key]` is faster than `array.select { |i| i == key }.first`? 

If that's the case, it's because of the way the data structure is organized. [Check out tree data structure](https://en.wikipedia.org/wiki/Search_tree). There are several ways to implement a hash though.

EDIT: What do you mean by _using_? You mean accessing an index, creating a hash, deleting something or adding something?

If it's for accessing, it's because of the search tree as I linked above.",1526055983.0
bobcob,"Iteration is faster over arrays. Measuring it proves this, see code below.

Random lookups are usually faster on hashes.

    $ seq 1000000 | sort -R > input.txt
    $ head input.txt
      768673
      428501
      834853
      361329
      621286
      165599
      772359
      101041
      827053
      597053

    $ ruby -rbenchmark -e 'h={}; ARGF.each {|s| h[s] = s.to_i}; puts Benchmark.measure{ h.each_value {|i| }}' input.txt
      0.210000   0.000000   0.210000 (  0.217624)

    $ ruby -rbenchmark -e 'a=ARGF.readlines.map(&:to_i); puts Benchmark.measure{ a.each {|i| }}' input.txt
      0.030000   0.000000   0.030000 (  0.025642)
",1526052307.0
pa_dvg,"I don‚Äôt think they *are* faster to enumerate, however for many common use cases hashes will be more performant.

Consider this:

You have an array of items. You can access a particular item by its index, arr[5], this takesO(1) time and is fast! This is the same timing complexity of accessing a hash by a key, hash[:foo]

The difference? You tend to know a hash key that you are interested in, but you don‚Äôt tend to know the index you are interested in an array, which means you end up doing some kind of selection function that enumerates the array and will be much more computationally expensive.",1526052582.0
i_know_sherman,"I think about it like this:

Why is a librarian able to find a book faster in a massive library than I can on my small bookshelf? Because the books are deterministically indexed at a library but my bookshelf is just a random assortment of books.

Same idea with hash tables: the items in the hash table  can be located deterministically using an objects `#hash` identifier. From there it's a matter of accessing an index in an array.

There's a bit more to it (i.e. looking through buckets once the index is found), but that's the basic idea.",1526104952.0
klaustopher,"It has officially ended with the release of 2.2.10

https://www.ruby-lang.org/en/news/2018/03/28/ruby-2-2-10-released/",1526043729.0
Deathbymosh,Coordinated Universal Time is the ‚Äústandard‚Äù world time. ,1526066595.0
geraldbauer,"Note: The manuscript source includes many single-file ruby script samples e.g. `blockchain.rb`, `bitcon_header.rb`, `block_with_proof_of_work.rb`, `hashrate.rb` etc., see <https://github.com/yukimotopress/programming-blockchains-step-by-step/tree/master/manuscript>. Happy mining and blockchaining with ruby.",1526041442.0
otakugrey,Very cool!,1526069824.0
macktastick,Thank you for sharing this. Excited to give it a try :) ,1526081103.0
in0pinatus,"Major nit: The barewords declared in a method's definition are called _parameters_, they form a _parameter list_. Only the values passed along with a message should be correctly termed _arguments_. 

The difference isn't academic either. You can have a variable length argument list, but not a variable length parameter list. Conversely, one argument can splat out to many parameters. And arguments don't have defaults, but parameters do.

In casual chat between devs it's okay to mix these two because meaning is glarkable from context, and if you go through the Ruby developer chat archives you'll even see Matz and others freely mixing the two, but I'm not happy seeing the conflation in programming tutorials. Bad habits develop early.
",1526107115.0
2called_chaos,Maybe a noteworthy addition or something for part 3: When calling `super` it's a different thing to use `super()` or just `super` but afaik it's the only edge case in that regard.,1526036479.0
Deathbymosh,"If that does not help, the admin then takes a look at the views and adds fragment caching. ",1526066530.0
hmans,"You know, newsletters that are just a list of links with no editorial content aren't really all that great.",1526019632.0
Deathbymosh,"With Honeypot leading companies will send you interview requests.

",1526066381.0
sshaw_,Just give me a newsletter that doesn't get 75% or more of its content from Reddit. ,1526083596.0
this_is_not_nil,Why didn't the Rails team remove Mutool dependencies completely?,1525998694.0
keeganspeck,"That's a *lot* of unnecessary `:inverse_of` options, and none of them are used on the `has_many ..., through: ...` relationships, where they would actually be useful. *Why*",1525990643.0
deedubaya,"I know GraphQL is really hawt right now, but it really, really, reminds me of SOAP API's in the worst ways.",1525974188.0
zinovyev,"The problem with this solution is a `SELECT` query with `UNION` which will run every time when you will request a subset of your posts. And it will store the full collection of posts in memory while applying conditions you of your subquery. And it's no way to build an index for a view.

So even it is possible to use View with Rails, it is not optimal for your query performance...

Am I right?  ",1525969123.0
keyslemur,"This covers my slides from the night as well as a lot of further reading, though everyone might enjoy.

Ah, and as a bonus, I've managed to get full pattern matching down to 1.5 to 3x slower than vanilla at worst case, depending on what type of arguments it gets.

Don't worry, I'll be back on my mad gem hackery game within the week, and there are more fun announcements to come after I finish a few contracts.",1525935008.0
tweettranscriberbot,"^The¬†linked¬†tweet¬†was¬†tweeted¬†by¬†[@keystonelemur](https://twitter.com/keystonelemur)¬†on¬†May¬†09,¬†2018¬†04:36:35¬†UTC¬†(1¬†Retweets¬†|¬†1¬†Favorites)

-------------------------------------------------

Slides are now uploaded from my talk at [@fogcityruby ](https://twitter.com/fogcityruby ) tonight on === and pattern matching.



Normal: [https://www.slideshare.net/BrandonWeaver7/fog-city-ruby-triple-equals-black-magic](https://www.slideshare.net/BrandonWeaver7/fog-city-ruby-triple-equals-black-magic)



With Speaker Notes (tutorial): [https://www.slideshare.net/BrandonWeaver7/fog-city-ruby-triple-equals-black-magic-with-speaker-notes](https://www.slideshare.net/BrandonWeaver7/fog-city-ruby-triple-equals-black-magic-with-speaker-notes)



As always, feel free to ping me with questions!

-------------------------------------------------

^^‚Ä¢¬†Beep¬†boop¬†I'm¬†a¬†bot¬†‚Ä¢¬†Find¬†out¬†more¬†about¬†me¬†at¬†/r/tweettranscriberbot/¬†‚Ä¢",1525934888.0
grifftaur,This is awesome!,1525957371.0
iconoclaus,"Have you tried the solutions from [googling the error](https://www.google.com/search?client=safari&rls=en&q=Could+not+open+library+%27libssl.so%27:+libssl.so:+cannot+open+shared+object+file:+No+such+file+or+directory&ie=UTF-8&oe=UTF-8
)?

Here are a couple of hits:

https://askubuntu.com/questions/339364/libssl-so-10-cannot-open-shared-object-file-no-such-file-or-directory

https://www.linuxquestions.org/questions/centos-111/libssl-so-1-0-0-cannot-open-shared-object-file-no-such-file-or-directory-4175589481/",1525914887.0
archlich,Operating system? Looks like it can‚Äôt find OpenSSL. Is OpenSSL installed?,1525914669.0
Freeky,"What does `ls /usr/lib/libssl*` say?

[This line](https://github.com/GemHQ/money-tree/blob/8314a73c56cdab6be552dc3bfb645b18fa037f7b/lib/openssl_extensions.rb#L9) is trying to load libssl and is failing.",1525915137.0
nyekks,"Did you build ruby from source yourself? Install openssl-dev or whatever your distro calls the package with the openssl headers, and then rebuild ruby.",1525946031.0
manfrin,I don't know if I'd call using class methods in instance methods *dependency injection* really. Maybe if they were their own class as a Validator or something. ,1525925321.0
GroceryBagHead,"Maybe it's just me, but i don't see how it's any better from where it started. Looks way worse tbh.",1525915349.0
442401,"This is what I refactored to before reading the body of the article. Any comments appreciated.
    
    require 'date'
     
    class CreditCard
      def initialize(number, expiration_date, brand)
        @number = number
        @expiration_date = expiration_date
        @brand = brand
      end
     
      def valid?
        current? && number_valid?
      end
      
      private
      
      def current?
        month, year = @expiration_date.split('/').map(&:to_i)
        Date.today < Date.new(year + 2000, month)
      end
      
      def number_valid?
        number_length == (amex ? 15 : 16)
      end
      
      def number_length
        @number.gsub(/\s+/, '').length
      end
      
      def amex
        @brand == 'American Express'
      end
    end
    

",1525945822.0
moomaka,"It's interesting to watch this 'new wave' of Ruby blogs. While they seem to be regressing into design patterns from the 90's while other languages (Go for example) are actually embracing simplicity and clarity in code. While I'm not a big fan of the language, at least Go is encouraging good code. Meanwhile this author's definition of 'legacy' seems to be any Ruby that wasn't written immediately after reading a 'Design Patterns in Java' book circa 1995.


",1525922011.0
Deathbymosh,"To move out of sandbox mode, ",1525898341.0
sshaw_,"    require ""pp""
    get '/auth/:name/callback' do
      request.env[""omniauth.auth""].pretty_inspect
    end",1525953975.0
badg35,"The answer:

    require 'json'
    ...
    get '/auth/:provider/callback' do
      auth = request.env[""omniauth.auth""]
      erb ""<h1>#{params[:provider]}</h1><pre>#{JSON.pretty_generate(auth)}</pre>""
    end",1525887342.0
GroceryBagHead,"Yet another ""My tests are slow because of test factories"" article.",1525882392.0
jujubean67,"And code like this will generate nice N+1 queries when an active record object is finally injected 


    class ShoppingCartCalculator

      def initialize(cart)
        @cart = cart
      end

      def total_discount
        @cart.cart_items.collect(&:discount).inject(:+)
      end
    end
",1525892218.0
Serializedrequests,"This has some good tips about common errors, but what to mock and what not to mock is actually a really hard problem.

I found that I missed issues frequently when I ran with mocks and not the real objects and database records. The tests were fast, but they didn't prove anything meaningful about the whole system working as it should, although this can be useful for TDD-ing out a piece of code you don't know how to approach.

I am 100% convinced that the only tests that prove *anything* meaningful are the full integration automated browser tests, and they are slow as shit and I don't really know a way around that.",1525895033.0
manfrin,"> Non-lazy let! is an alternative, but it's not worth the trouble. 

What? A single character difference is ""not worth the trouble"" over a `before` block?",1525911461.0
Frizkie,I feel like using instance variables within `before` blocks is a bad idea. Using `let!` seems far cleaner.,1525896986.0
dual8,"I would suggest learning Ruby on Rails. It will help you move from an esoteric viewpoint of, ""what can a language do for me?"", and towards more concrete ideas like, ""I can build a dashboard to display X data in a Rails app"". ",1525899108.0
ignurant,"I think knowing how to manipulate data is very valuable for any company. This includes reading, manipulating and moving data from and to a variety of sources. Knowledge about using a database natively without the help of Ruby's abstraction libraries goes a long way: it helps you make better informed choices in terms of ""this is best performed by letting the DB handle these parts of my problem"" or constructing efficient queries.

Every business has data, and thus skills to manipulate data is valuable for every business. ",1525884108.0
insanelygreat,"How about a Client class?

Example:

    client = MyGem::V2::Client.new
    client.achievements #=> return instance of Achievements

That would also let you share an Achievements class between the versions, if the data they return is the same.

Another idea would be to abstract the API version away (if you can get away with it).

If you look at the [source for Octokit 1.0.0](https://github.com/octokit/octokit.rb/tree/v1.0.0) you can see how they supported multiple versions while they were in transition. However, I can see why you wouldn't want to do that if you want to lean on the API docs.
",1525876632.0
Amadan,"> everything in Ruby is an object

Err, no? `while` is not an object. Comments are not an object. Blocks and methods are not an object (though they can be described and represented by an object). Whitespace is not an object. A splat is not an object (or an operator, or a method, for that matter). Hash-rocket? Ditto. Who the heck came up with this ""everything is an object"" thing?

""Every _value_ is an object"" is closer to the truth (but not actually true either - `Symbol` and `Fixnum` are ""immediate values"", almost indistinguishable from objects, but not quite objects).

EDIT: Oh, and `x` is not an operator.",1525875884.0
Deathbymosh,"The second assertion here is of very little value, as the only thing it checks is whether we called the client with correct argument list.",1525898421.0
HeavenlyKicks,"I think that the issue is how you are breaking down the correction, which is making it hard to understand.  There are two separate methods used here `array[]` and `rand()`.
As the docs mention 'rand' takes a single argument to represent the max value, and, if an integer is used, will return a value equal or greater than 0, but less than the argument passed in.  So if we pass in 3, `rand(3)` we could only get back 0, 1 or 2.  These should correspond with our array indexes.
`array[int]`returns the value of the index we pass in, so in the example you provided, this would be the result of `rand(3)`.  Therefore, the example will access an array element randomly at position 0, 1 or 2.",1525870413.0
d_impious,"Couldn't use ""sample""? https://ruby-doc.org/core-2.2.0/Array.html ",1525875696.0
ArcaneRain,">if rand is a method, why is it used with curly braces and not with a period

It is a method of the Object class. Object class includes a module called Kernel where you can find `rand` https://ruby-doc.org/core-2.5.0/Kernel.html#method-i-rand . No period means it's implicitly called on `self`. This is because this method is private, you can check it in irb by calling `self.send(:rand, 3)` for example, you can do this also with methods like `puts`(`self.send(:puts, ""something"")`). And this method is available to you because Object is a superclass of every instance you create(unless the instance's class is not explicitly inherited from any class above Object).",1525880056.0
bemend,"While an object is indeed an instance of its eigenclass, [the #class method skips it when looking up the class](https://github.com/ruby/ruby/blob/a6108df9485ec81de6255208f8a931de9f7adb57/object.c#L275).",1525857003.0
torimus,"Each Ruby object has, besides class it is instantiated from, also its ""phantom"" singleton class. So the true inheritance tree looks like *object < object's singleton < object'sclass < 1st ancestor class singleton < 1st ancestor class < 2nd ancestor class singleton < 2nd ancestor class* etc.

In other words, `Object#class` does not return direct singleton class. Like `Module#ancestors` omit all objects singletons. For that purpose, there is a dedicated `Object#singleton_class` method.
",1526015154.0
cray4K,Doesn‚Äôt seem like you‚Äôre requiring the gem in your script. ,1525849644.0
jrochkind,"what error do you get? If you get an error doing something that is in the Prawn docs, I'd file an issue on prawn. ",1525879718.0
this_is_not_nil,"> And if you were to execute this little script, it would do exactly what you would expect. Nothing wrong here.

I did not expect this piece of code:

    # foo.rb
    class Foo
      @@class_var = 'Hello!'

      def self.read_it
        puts @@class_var
      end
    end

To print anything.",1525856772.0
Kendos-Kenlen,"I still don't understand why this happens.

Why is there 4 printings ?",1525867543.0
pac78275,Simple: don't use them.,1525875060.0
Serializedrequests,"There is a lot more that could be said about them than this. Yes, in general I don't use them. I have never found them to do what I want, expect, or need from what you might call a ""static"" variable in Java. (Constants are great if the value doesn't need to change though.) Unfortunately class instance variables have their own gotchas:

For example, **sometimes you DO want inheritance**. Class instance variables are not inherited:

    class Base
      @class_var = ""Base""

      class << self
        attr_accessor :class_var
      end
    end

    class SubClass < Base
    end

    puts Base.class_var.inspect # ""Base""
    puts SubClass.class_var.inspect # nil

What if you are coding a module that writes some configuration to a class instance variable when included? Oops, sub-classes will lose that configuration! This makes macros a royal pain. You either need to fully template the code from a String, or come up with an even crazier scheme involving a registry.

Edit: There is some reason a class variable doesn't work for this either, but I forget what it is. Basically you want the ability to override it, but only in certain sub-classes.",1525881157.0
Deathbymosh,"Just like this title says, the solution is to use class instance variables instead.

",1525898301.0
drindrin99,"Nice article but this is cringey af: ""I help SaaS companies increase market share faster by improving their delivery velocity""

in other words -- you're a programmer who writes OK code. Right? 

The bizspeak buzzwords are meaningless. You should stop it.",1525902724.0
sdn,"I like to do the following:

     class MyPDF < Prawn::Document
          def initialize()
               super()
               draw()
          end
          def draw()
               [... prawn commands here]
          end
     end

     MyPDF.new().render_file()

So basically -- you need to either do 

1) Call prawn functions on a Prawn::Document (or inherited class)

2) Call them within a function on a class that inherits from Prawn::Document

or

2) Call prawn functions within a Prawn::Document.generate(""file.pdf"") { } block  (either implicitly or explicitly) 

See page 4 of the manual for more info.

What you're doing wrong is that you're not specifying the context of what 'stroke' belongs to. You had to do either my_document.stroke() or you do my_document.generate() { stroke() }",1525844431.0
Agonux,"### implicit block

    Prawn::Document.generate(""implicit.pdf"") do
      text ""Hello World""
      stroke_axis
      stroke do
        rectangle [100, 300], 100, 200
      end
    end",1525865424.0
mperham,"More questions: how does Rails work with or leverage the Rack code?  Can you mount a Rack app in a Rails process and have it reuse the session?

There's **no** documentation that I'm aware of for any Rack session stuff.  It's all cargo culted and hacked together until it works.

There's an opportunity for someone to get several blog posts on this subject.  Spend a few hours reading the code, write a blog post on what you learn.",1525839150.0
janko-m,"The `enable :sessions` will `use Rack::Session::Cookie` under the hood, so you only need one of these two. Using `enable :session` is preferred, because then Sinatra knows that you're using sessions and it can use that to configure things like the `Rack::Protection` middleware ([code](https://github.com/sinatra/sinatra/blob/5149dc9e0b0e281231b91223c6a414c905ad3a96/lib/sinatra/base.rb#L1691)).

I think the equivalent of

    use Rack::Session::Cookie, { ... }

should be

    set(:sessions, { ... })",1525856143.0
petepete,"It's a good tutorial but by the time you've got sprockets and ActiveRecord on the go you may as well be using Rails.

I tend to pair Sinatra with Sequel and if it's full stack, Webpack or Brunch.",1525809902.0
BluePizzaPill,"I have the following in my `Gemfile`s  for apps that get deployed to heroku, maybe it helps somebody:

```
ruby File.read('.ruby-version')[5, 5].strip
```

It saves you from editing two files when upgrading Ruby.

Heroku prints/printed (?) a warning if you did not declare the Ruby version in the `Gemfile`.",1525789815.0
Serializedrequests,"I always use a version controlled "".ruby-version"" file, but have encountered numerous downsides and annoyances with putting a ""ruby"" declaration in the Gemfile. You have to do it if you are on Heroku, but otherwise ick. Some common scenarios:

* You are developing a gem that is intended to pass its tests in multiple Ruby versions.
* You install a Ruby security update on a server. If you don't update your Gemfiles, oops! Passenger will crash.
* You need to test your app in a different ruby version than the current ""locked"" one.

Basically, theoretically strictness is good, but in practice I have found putting a ruby in my Gemfile to cause all kinds of unnecessary crashes, annoyances, and false negatives. It would be a lot more useful if I could have it ignore the patch level, and just enforce ""2.4.x"" or ""2.5.x"", but since this isn't how it works I just put a comment instead.

I'm sure somebody will be along to tell me how terrible my development practices are, but I have really found this feature to only ever cause unnecessary crashes, not catch errors.",1525809766.0
jrochkind,"I wouldn't be looking at ruby for game development, if only because that is not what most game developers are using. To do something different than most, you should have the experience and expertise to evaluate it's pros and cons. ",1525798640.0
mick-io,"Ruby is a very syntactically sweet language that many find a pleasure to code in. It's easy to read and fun to write. This is largely due to Ruby's high level of abstraction, which requires a lot of magic under the hood. Because it's abstraction level, it's relatively slow compared to even other scripting language such as JavaScript. This lack of performance does not make it ideal for making any graphical  or CPU intensive games. What kind of games are you looking to make?

It's worth noting that Ruby 3.0 has the goal of being 3 times faster than the current version.

Here is a comparison of Ruby's performance: [https://benchmarksgame\-team.pages.debian.net/benchmarksgame/faster/ruby.html](https://benchmarksgame-team.pages.debian.net/benchmarksgame/faster/ruby.html)",1525788276.0
fickentastic,"RPG Maker ( is either written in Ruby or allows you to create some types of games using Ruby).  I haven't personally seen it so I can't say if it's any good.  http://www.rpgmakerweb.com/  
On the other hand, though it's not a lua / ruby type would be javascript with some webgl libraries like three.js, bablyon, etc.

Also was going to add , if you haven't already, search here and just google for Ruby games, they've been done.  ",1525805930.0
_thewalkingtoast,You could try Crystal. It has a very similar syntax to Ruby (in fact inspired by) and it compiles down via LLVM. https://crystal-lang.org,1525810555.0
tom_dalling,"> is Ruby good for game development?

Not really. It is possible, but difficult. There is no platform (PC/Mac/Android/iOS) that you can reliably distribute a whole app to, without a very complicated and buggy build process. JRuby is probably your best bet.

If you don't care about distributing the game, and you are happy with 2D, the [gosu gem](https://www.libgosu.org/) is very good.

> are there any updated benchmark that I can see?

Benchmarks comparing what to what?

> How about the language's performance? Is it at least faster than python ?

It's roughly the same as Python.",1525845234.0
lift_heavy_things,"This is a great article describing this feature, but I would never design architecture around super fetch (really because I wouldn't design architecture around assuming Redis/any job queue is actually persistent).  

The right way to do this is to build idempotency into your jobs using statuses persisted to disk (ie: DB).  You should *ALWAYS* be able to kill your entire job processing system (especially the queue) and not lose work.  You should not need to depend on features of the job processing system in order to do this.  ",1525796511.0
this_is_not_nil,"If we all were using something like beanstalkd as a queue-server, we would get stuff like this for free because it is built into the server part to remember a job if a worker dies.",1525780614.0
mperham,"AFAIK VIPS is the new hotness in image libraries.

https://github.com/jcupitt/ruby-vips

MiniMagick is the thing to use if you are stuck on ImageMagick.",1525750879.0
Freeky,Perhaps https://github.com/minimagick/minimagick - it calls out to the command line tool rather than embedding a library.,1525746764.0
GroceryBagHead,"If you're doing graphs, you're better off with something that does it on the front-end from json data you feed it. Something like https://www.chartjs.org

",1525737837.0
Xychologist,"You need to add a `category_id` integer column to the database table, since you've asked it to save the parent's ID to create the relationship. You've got a 'parent: integer' column but Rails doesn't have a clue what to do with that.

You could also set `foreign_key: 'parent'` to use the column you already have.",1525729056.0
PM_ME_YOUR_CANINES,"Sorted, thank you for your help! ",1525730889.0
pedrozath,"Bro, we haven't ever talked to each other, but I love ya. Your work on `Paint` gem is amazing (I use it in my gem Coltrane, i think you noticed), and this blog of yours is really out of this world. As an admirer, here goes some feedback from someone that came from Graphic Design and studies typography more than he should: You gotta make your text less thin. Love the way you worked this asymetric layout and characters per column is great. Now the thinness of the letters hurts my reading.

Else than that, thanks for sharing your deep knowledge as always!",1525735441.0
bjmiller,"also [`StringScanner`](https://ruby-doc.org/stdlib/libdoc/strscan/rdoc/StringScanner.html), now [a gem](https://github.com/ruby/strscan)",1525738900.0
Deathbymosh,"For more general documentation about equalness in Ruby, checkout Episode 55: Struggling Four Equality.",1525725527.0
schneems,"Minor nit. Phrasing such as ""We are all aware of Array.slice method"" is a big turn-off for a lot of readers. Even if I am aware of that method I know many readers won't be. I get that maybe that's not your target, but the phrase doesn't really add much to the sentence and can be omitted or changed ""Perhaps you've seen the Array.slice method"". Or something similar. 

Other than that, great job. Good article. Lots of good stuff in here. Keep up the writing. ",1525747048.0
Blimey85,"Now if I just had a time machine and could take this back ten years to when I was trying to get Ruby running on Windows that would be great. I managed but certain things were a pain. Mainly native gems that didn‚Äôt want to compile the first time. Really nice to see things have changed.

Ruby is a great language and the more people who can jump into it without having to fiddle too much to get it working the better. ",1525874821.0
veske,Why tortute your self ?,1525724261.0
dameramu,"Interesting video. I agree with a lot of this, particularly the ease of accidentally causing N+1 queries and database-calling code spilling into places where it shouldn't be.

I don't think that the directory structure of a Rails app not having changed in a long time really counts as a serious issue, though. There are often arguments for evolving and changing such things but I appreciate the stability of knowing where things will be in any rails application. 

If we look at the JS community, things are constantly evolving, and in the real sense of the word ""evolve"" - it's messy, there are tonnes of competing approaches which get a lot of attention only to die when the next attractive landing page appears, the same solutions appear over and over, along with the same mistakes. Arguably this evolution is a good thing but it does have a significant cost in having to learn and relearn slightly different variants of the same pattern.

AR is not perfect and it certainly makes it easy to make mistakes. However, it (together with Rails) is a mature platform and there's value in that, I think.
",1525704625.0
evmorov,"Mostly disagree with the speaker.

- ActiveRecord is NOT an anti-pattern. It's A pattern. In some cases it's good, in some worse. It's your job to decide when and how to use it
- You can't build an application without knowledge of SQL and DBs. N+1 is a nasty problem but solving it isn't difficult at all. Spend one evening to study preload methods (preload, eager_load, includes) and their differences. If you don't want to learn SQL and don't like to look at server's log and can't remember to preload associations - install `bullet gem` and follow the instructions
- ""AR violates SRP"". When it's time just use Service/Query/Form/Policy objects. Premature optimization is the root of all evil
- ""Throwing everything in one place is sensible way according to Rails"". No, it isn't. Watch https://www.youtube.com/channel/UCUkM9uMpWatT7gVWShgtKFw/videos
- ""Active Record ties your application to your database"". It doesn't. It's just a first brick in your application. It's up to you how you'll build it
- The same directory structure between Rails 1.2 and 5.2 is a bad thing? Here I have to many words to say but even don't know where to start
- ""def create - 50 lines of code"" - oook. Sure it's AR's fault

I didn't really get about what the video is. rom-rb and dry-rb gems are good tools and if you want to start using them then it's much easier and faster to read their documentation.",1525722485.0
msapka,"I disagree.

ActiveRecord, as I understand it, is a way to model business logic. You have a user that can do certain things. The fact, that a user is also a record in DB is insignificant. It's implementation detail, that we need to have in the back of our minds, but for a user or User? It should be completely insignificant. If it's a problem (so, n+1 is currently impacting performance in a significant way), then we should go into this User class and fix it. But still, for User's clients this never happened, for them User is still a business object.

Also, unit tests with mocking DB is terrible way. It's better to hit the database. Performance impact is insignificant when the alternative is actually testing real behavior. I never mock anything that I control, so in reality I only mock external clients.",1525692703.0
jujubean67,"Recently we had to remove N+1 queries from our (relatively small) app, it took us a non-trivial amount of time to track everything down. (They're not as easy to spot as they are in these examples, `AcitveModelSerializer` for instance is a huge offender in generating N+1 queries.)

So naturally ROM.rb is something I've been wanting to try out for a while now ;)

Thanks for posting the video, for $10 that ebook is an insta-buy.

PS: This old Uncle Bob video also talks about much of the same issue with Rails https://www.youtube.com/watch?v=WpkDN78P884",1525690838.0
pjdavis,"Uncle Bob gave a fairly similar talk a few years ago at Ruby Midwest, for anyone looking for more info/ideas.

https://www.youtube.com/watch?v=WpkDN78P884",1525716402.0
cheeeeeese,does Single Responsibility Principle not apply to ruby? (it should),1525710947.0
youjeannn,"I think you're looking for the interactive shell, or the read evaluate print loop (repl), which is irb rather than ruby.

If you're trying to run a ruby script, then it's ruby <filename>

Hopefully this helps...? 
",1525675961.0
TylerP3358,"Have you properly installed Ruby on your computer?

Also, for a local environment, I suggest getting Ubuntu or looking at ways to run Ruby on a virtual machine. 

Although Windows has become much more Ruby-friendly as of late, I think you'll have a better experience with a different setup.",1525702618.0
LuneBlu,Control + Z works.,1525675951.0
keyslemur,I'm speaking at this one over some fun subjects around === and pattern matching for ~30m this Tuesday. The slides will be posted to that group a bit later once I clean them up and flesh out the speaker notes to act as a psuedo-tutorial.,1525665748.0
H34DSH07,Wrong sub buddy.,1525629150.0
gray_-_wolf,"What's wrong with

    find . -wholename '*/.git/config' -exec sh -c 'cat .gitconfig >> ""$1""' -- {} \;

?

EDIT: Also looking directly at your code it seems like it completely ignores escaping/quoting? Your lexer ( https://github.com/aonemd/changit/blob/4c8ed267f4ede38a9c1f8c465d4e13acb3d81540/lib/changit/lexer/key_value_token.rb#L8 ) will fail on line containing multiple `=`s:

    irb(main):001:0> 'foo = ""bar = foobar""'.split('=').map(&:strip)
    => [""foo"", ""\""bar"", ""foobar\""""]

EDIT2: If you really want separate tool for this (and `find` way is not good enough), I think way better way would be to use git's built-in commands to do this.

1. create blank repo in /tmp/XXXXXX and move your `.gitconfig` to `.git/config`
2. get all keys in the config using

    `git config --local --list`.chomp.lines.map { |l| l.split('=').first }

3. get values for those keys using `git config --local --get KEY` (just `chomp` the result and you should have the value)
4. chdir into each git repo found and set the values using git cmd line `git config --local KEY VALUE`

assuming you use the right functions for the calls this should be quite more resilient to unexpected content of both `.gitconfig` and existing `.git/config`

you can probably implement this using bash function and just stick it inside `.bashrc`",1525607124.0
prophetjohn,"I‚Äôm sure this was fun to build, but why wouldn‚Äôt I just use global git config?",1525609766.0
Deathbymosh,In a hub directory that contains multiple git projects,1525640202.0
ScootsMcGootz,"In certain applications, there are gems that you want your production environment to load and other gems that you don't. One good example are unit tests \(like rspec\).  Your production environment shouldn't be running unit tests, it should be handling web requests, doing background work, etc. Therefore, you don't want your production environment loading gems it doesn't need because it will never run rspec.

Bundler makes it easy to exclude installing certain categories of dependencies if you don't need them.

Environment\-specific gems are defined in a block within the Gemfile like so:

`group :production do`

`gem 'foo_gem'`

`gem 'bar_gem'`

`end`

So if this block were defined in your Gemfile and you ran your command, every gem except 'foo\_gem' and 'bar\_gem' would be installed. Make sense?",1525579742.0
cruyff8,You just skip those gems indicated as being for production only.,1525579559.0
wmjbyatt,"Metaprogramming is primarily useful in library building, less so in immediate application code. In Ruby you can nearly always take multiple paths to achieve the same ends, but sometimes you want to use metaprogramming for semantic and design reasons.

For example, I'm working on a Sinatra GraphQL API right now where my queries must be handled by resolvers that return a ternary lambda. I've chosen to group my resolvers by domain into classes, but I didn't want my resolver methods to actually literally return a lambda, mostly for style reasons and because it felt too easy to break. I also like the idea of there being, within my resolver classes themselves, semantic separation between resolver methods and helpers.

So in my `BaseResolver` class I did a little metaprogramming to allow this semantic separation.


    class BaseResolver
      def self.define_resolver(name, &block)
        define_singleton_method name, -> {
          ->(opt, args, ctx) { block.call(opt, args, ctx) }
        }
      end
    end
    

Which allows me to write my resolvers as such...

    class ResourceResolver < BaseResolver
      define_resolver :all_resources do |opts, args, context|
        ... resolution logic ...
      end
    
      define_resolver :resource do |opts, args, context|
        ... resolution logic ...
      end
    
      class << self
        def helper_method
          ... other logic ...
        end
      end
    end
    
This also gives me a level of abstraction between my resolver definitions and their implementations. For example, right now I don't want my resolvers to be stateful (beyond the local lexical scope). If I change my mind, I can reimplement `self.define_resolver` to define a class method and an instance method and have the class method instantiate and call, for example:

    ...
    def self.define_resolver(name, &block)
      define_singleton_method name, -> {
        self.new.send name
      }
    
      define_method name, -> {
        ... maybe I want to do some stateful tracking here ...
        -> (opts, args, ctx) { block.call(opts.args.ctx) }
      }
    end
    ...

And there will be zero change in my clients.

It's definitely up to you. There's almost never a real need to metaprogram in application development, and you can make arguments about the need to do so even in library development (although it's definitely got broader usecases there). The vast majority of the folks I've worked with have never used Ruby's metaprogramming beyond dynamic function calls. And it's super easy to get carried away with metaprogramming and make it so that nobody else on your team has any idea what in the hell is going on anymore.

",1525541783.0
DrVladimir,"Back when ActiveRecord spammed objects with find_by_#{attribute_name} functions (find_by_id(), find_by_name(), find_by_name_and_id(), etc), it build these functions by reading the list of database columns and writing function names dynamically with define_method():

    columns = [:id, :name, :number]
    columns.each do |col|
        define_method ""find_by_#{col}"" do |var1|
               #stuff
        end
    end

(the above is pseudocode, I don't have a ruby compiler handy)",1525543921.0
cmdk,"I think you are understanding it pretty well üëåüèª

Meta programming gets tricky when you use a lot of it and need to debug it. Essentially you‚Äôre trying to debug code you can‚Äôt really read, cause it‚Äôs not there just yet. You‚Äôll need to hold a good mental picture of the structure in your head. 

A good example is dynamically named methods in Rails like `find_by_email` and all the other ones that are named after your model attributes. 

Another one in rails is the methods used for dirty attributes like `email_was` and `email_changed?`. Again, these methods are dynamically created based on your attributes. 

Hope this helps!

P/S: meta programming is fun but is difficult to debug and understand once your code base is cluttered with it. This is exponentially worse for other developers reading your code. 

You don‚Äôt need it 99.9% of the time. 

One you start learning it, you‚Äôll try to ‚Äúfind problems to solve‚Äù with it. Resist the urge until you really need to. ",1525569254.0
nroose,"Just because you can, doesn't mean you should.",1525557788.0
TextileWasp,"There‚Äôs more to it. The key is in the word ‚Äúmeta‚Äù. 
If you need a method, yes you just define it. 

Example of cases where metaprogramming can help:
- how would you add a method to all classes in a hierarchy?
- how would you know how many times a method was called or how would you intercept a call to a specific object
- how would you implement an object that has dynamic properties? 
- how would you write a dsl? 

You don‚Äôt really need to use metaprogramming if you don‚Äôt want to. I think about it as another layer that can be really powerful when done correctly in the right setting or can spell disaster when done for the sale of doing it. ",1525542095.0
pedrozath,"In the gem I developed for musical theory (coltrane), I have a Chord class. I want to be able to do:


    Chord.new(name: 'CM7').has_minor_third?
    #=> false


There are 15 types of interval in my library. I don't wanna clutter my code with 15 repetitive methods. I rather loop through all intervals defining methods programatically.

Ruby is about writing code as close to natural language as possible. If we choose Ruby, it's coherent to sometimes give up on standards, performance, etc, in the name of expressiveness. Else, we would just be using a faster and more popular language.",1525576644.0
codeprimate,"Here is an example of how you might use method missing.

```
# farm.rb
#
class Farm
  attr_reader :animals

  def initialize(animals: {})
     @animals = animals
  end

  def get_animal_count(species)
    return @animals.fetch(species.to_sym,0)
  end

  def method_missing(name, *args)
    animal_match = name.match(/\A(\w+)_count\Z/)
    if animal_match
      animal_name = animal_match[1]
      return get_animal_count(animal_name.to_sym)
    else
      return 0
    end
  end
end
```

```
>> require_relative './farm'
=> true
>> farm = Farm.new(animals: {chicken: 4, cow: 1, goat: 5})
=> #<Farm:0x00007fc49c82d0f8 @animals={:chicken=>4, :cow=>1, :goat=>5}>
>> farm.chicken_count
=> 4
>> farm.cow_count
=> 1
>> farm.goat_count
=> 5
>> farm.pig_count
=> 0
```

",1525542795.0
Jdonavan,"Take a look at the PageObject gem.

With a simple 

    text_field(:foo, id: 'foo)    

You get:

foo - Which returns the content of the text field

foo= - Which allows you to set the contents of the text field.

foo_element - Which returns the element object for the text field.

Things like check boxes and select lists give you more handy things like

    foo_checked?",1525543105.0
geraldbauer,"Here's a metaprogramming example from [ActiveContract - token.rb](https://github.com/openblockchains/universum-contracts/blob/master/tokens/token_sql.rb):

If you have a table / mapping you want to allow easy array-like access, thus, lets build a helper class:

    class BalanceMapping
      def initialize( **params )
         @params = params
      end
      def [](key)
        ## e.g. find by addr:,key:
        Balance.find_or_initialize_by( @params.merge( key: key ) )
      end
    end  ## class BalanceMapping

Now if you have many tables / mappings it gets verbose to hand code, thus, let use a meta-programming macro:

    BalanceMapping = Mapping.create( Balance, :key )
    
    # or even nested
    
    AllowanceMapping = Mapping.create( Mapping.create( Allowance, :key2 ), :key1 )

That's way shorter. And the magic metaprogramming code is:

    class Mapping
      def self.create( klass, k )
        Class.new do
          define_method :initialize do |params|
             @params = params
          end
    
          define_method :'[]' do |key|
            ## e.g. find by addr:,key:
            if klass.respond_to? :find_or_initialize_by   ## assume ActiveRecord
              klass.find_or_initialize_by( @params.merge( k => key ) )
            else    ## note: allow ""nested"" mappings; assume ""nested"" mapping
              klass.new( @params.merge( k => key ) )
            end
          end
        end
      end
    end # class Mapping

See the source @ <https://github.com/openblockchains/universum-contracts/blob/master/sandbox/mapping.rb>",1525546915.0
acconrad,"I find metaprogramming to be super useful in client projects when I know that methods will follow the same format, but with 1 key change.

Say you want to enumerate through a series of filters, and you want to apply it to an array, instead of doing something like:

    def short
      arr.select(&:short_filter)
    end
    
    def long
      arr.select(&:long_filter)
    end


You can simply use metaprogramming to enumerate the list of functions you're going to have since they all follow the same format. The downside is it's harder to grep for, so make sure you include comments to allow for searching by function name.",1525550050.0
saturnflyer,"There are so many possible answers to your question that it's hard to answer it.
The Forwardable library is in Ruby's standard library and provides convenient methods that allow you to do things like

    delegate [:street, :state, :country] => :address


Maybe that's useful to you. Maybe you'd rather write out

    def street
      address.street
    end

But what happens if street isn't present, maybe you need a nil check...

    def street
      address.street if address
    end

ActiveSupport provides a delegation library that allows you to return nil if the other object is missing

    delegate :street, :city, :state, to: :address, allow_nil: true

Maybe you want that.

Or maybe you want your own thing. Perhaps you might get a value from one object if that object is present or otherwise return a value from another object.

Metaprogramming can allow you to write the code you want. It can allow you to provide a declarative interface that takes all the boilerplate away and let's you focus on the substance of what you really want to read in your code. Rails has many examples of this like declaring `has_many :widgets`

I wrote about the Forwardable library here https://www.saturnflyer.com/blog/ruby-forwardable-deep-dive
and I think it's a great library to use to get a better understanding of applicable meta programming (although the code has become a bit more complex since I wrote that https://github.com/ruby/ruby/blob/d32763eca0817c92ee0451ee6e08576879317e22/lib/forwardable.rb#L192).
I wrote about getting info from one object if it's present or fallback to another source here https://www.saturnflyer.com/blog/easy-metaprogramming-for-making-your-code-habitable

Sometimes metaprogramming is useful, sometimes it just makes indirection, but it all depends on what you want to do.",1525568144.0
flipkitty,"I think ruby gets pretty carried away with the ""domain-specific language"" idea, some of which makes metaprogramming necessary or at least tempting. Take this dummy code:

    class ThingCollection
      def self.thing(name, fancy_option=:nah)
        deets = complex_logic(fancy_option)
        all_of_the_things << Thing.new(name, deets)
      end
      # ... More methods to support #thing.
      def show_and_tell
        all_of_the_things.each { |t| puts t }
      end
    end

    # Usage
    class MyThings < ThingCollection
      thing 'TV'
      thing 'Reddit'
      thing 'Plumbus', :schleem
    end

It is nice that MyClass doesn't  have to worry about #complex_logic or Thing#new. However, now that we're hiding how the things are managed, it would be weird to expect MyClass to inspect all_of_the_things directly. So we go and add #show_and_tell and release V2.1 gem.

Then we realize we want the handy #repurpose method, but only for things that use :schleem. We could define this method on every ThingCollection, but then we would need to raise a UselessMethodError for non-schleemy things. Perhaps we should step back and reevaluate our inheritance model- woops, while that discussion was going on we resolved a github issue by merging a PR that uses #define_method.

Oh well, that'll look good in the V2.4 ""Juicy July"" changelog.",1525577107.0
jimworm,"An example I've done recently involves a reporting application in Rails. Depending on the report, it will accept certain parameters that need to be cast into a particular type (eg. Date), and if params are missing defaults may need to be defined.

Using metaprogramming, the parameter-related methods were condensed into one-line declarations backed by the .param and .cast methods in the base class, which looked something like this:

    class SomethingReport < BaseReport
      param :start_date, :date, default: ->{1.week.ago.to_date}
      param :end_date, :date, default: ->{Date.today}
      # rest of the class
    end

Without metaprogramming, the class would be much less readable:

    class SomethingReport < BaseReport
      def start_date=(date_str)
         @start_date = self.class.cast(date_str, into: :date) || nil
      end
    
      def start_date
        @start_date || 1.week.ago
      end
    
      def end_date=(date_str)
        @end_date = self.class.cast(date_str, into: :date) || nil
      end
    
      def start_date
        @end_date || Date.today
      end
    end",1525596531.0
jb3689,Virutally every Ruby testing framework is based on metaprogramming these days. I‚Äôve used it myself quite a bit for working on very generic bits of code where I want to generate code. In production systems I only tend to use it when the code I have is generating functions based on static data (and I prefer the static config for conciseness; e.g. CRUD APIs via config) or in tests when I want to generate a lot of similar test cases,1525926789.0
discerr,"Just one example; I often do something similar like the following to keep things DRY:

    class Foo
      VALID_STATES = %i[
        not_started
        trial
        expired
        active
        canceled
      ].freeze

      def initialize(state)
        @state = state
      end

      VALID_STATES.each do |state|
        define_method(""#{state}?"") do
          @state.to_sym == state
        end
      end
    end",1525560128.0
realntl,"Convenience.

Consider the following code without metaprogramming:

    class Handler
      def handle(message)
        case message.type
        when SomeMessage
          # ...
        when OtherMessage
          # ...
        end
      end
    end

Now, with metaprogramming:

    class Handler
      handle SomeMessage do |msg|
        # ...
      end

      handle OtherMessage do |msg|
        # ...
      end
    end",1525543524.0
jrochkind,"* Also, while I understand wanting to provide some non-ascii and non-Latin chars as initial letter in class names, I  am not sure why it is reasonable to allow some of these choices, eg ‚í∂,‚í∑,‚í∏,‚íπ, or roman numerals! `Õø`, ""Yot, a letter used in Greek historical linguistics"", this is useful to begin a class name in source code with?

* And as with many things ruby-core, I bet this would be easier to figure out from commit history, issue tracker comments, and listserv archives  if I spoke/read Japanese!  Languages! ",1525533640.0
gatman02,"If I understand correctly, part of what makes a blockchain a blockchain is that the data store is immutable, decentralized, and trustless. If you are using an RDB, then you don't have these and it's not a blockchain.  ",1525537326.0
Ky6ukpy6uk,awesome!,1525511484.0
MeckiSpaghetti,"Nice, thank you!",1525520175.0
iameclectictheysay,Thx!,1525524730.0
ZulZah,Thank you so much!,1525543493.0
babbagack,ty!,1525481683.0
,Thank you! :) This will be amazing help on my journey learning Ruby.,1525530431.0
blackmambus,This is perfect thank you !,1525559771.0
rbagdiya,Friends Sharing this with you team will be great,1525586643.0
Bizkitgto,Thanks!,1525803699.0
robscomputer,Thank you! I'm actually spending more time with Ruby and Chef so this is super helpful. ,1525486700.0
mperham,Yes!,1525466534.0
knubie,"I would definitely be interested in reading more on these topics. I'm particularly interested in the third bullet point, as I've started to go down a similar route myself.",1525490727.0
inviewapp,"I'm a big fan of FP and learning it has made me a much better OO developer, but FP _in Ruby_ does not sound like a good idea to me. The language just doesn't support key functional patterns (such as functions) and is not designed for it. The idea of creating an intro to functional principles for Ruby developers is great though, so maybe I've misunderstood what you're suggesting.",1525470318.0
classhero,"> Twitter‚Äôs backend was initially built on Ruby on Rails, a rudimentary web-application framework that made it nearly impossible to find a technical solution to the harassment problem. 

LOL",1525449201.0
cray4K,Holy shit what an article. Twitter is failing because of RoR? LMAO,1525446708.0
jrochkind,"Old news, Feb 19. Yes, that was silly. ",1525447076.0
DevMunchies,There are trade offs. Rails allowed them to get to market as soon as a possible and make quicker changes early on.  Surely that had to contribute to their success.  ,1525446903.0
MagicalVagina,So what should github say? Did they won the internet war with RoR? What about Airbnb? Or Square? ,1525452998.0
fsoawesome,"Inferring that Ruby on Rails is ""ass backwards"" and calling it ""Fisher-Price infrastructure"" is so bass ackwards that you can easily see WHY Twitter has failed over the years. Ruby on Rails was not terribly easy to scale, but it could be done - it just, especially at that time, required better thinking and isolation of processes. The moderation system could have easily been built better. 

Hell, they could have done things properly and split the platform out into an API stack and modularized the components with better middleware. Any which way you slice it, it was poor management - *NOT Rails' direct fault.*

I've seen some **DREAM** moderation platforms built on Ruby that were far superior to Twitter's attempts, but the poor developers just didn't have the unlimited bank accounts because they weren't living in Shillicon Valley.",1525446733.0
,"If you put all the non-sequiturs in this article back to back, it does go around the world and re-enter your backside.",1525447384.0
janko-m,"I don't see how building a moderation system has anything to do with which web framework you're using. I would imagine that most of the business logic for a moderation system wouldn't be related to web at all, so it wouldn't be written in Rails, but rather in Ruby or another programming language.

But it sounds to me that by ""Ruby on Rails"" they actually meant ""Ruby"". I just always get confused when people use Rails and Ruby as synonyms.",1525449665.0
danilobarion,Do you know if it could be used with Sequel models too?,1525440721.0
andygauge,"I like it, but count 2 lines.",1525458275.0
Deathbymosh,If you created one article in April and five in May then you should have such hash,1525565357.0
midasgoldentouch,What?,1525414180.0
didroe,"Constant lookup works lexically, and only in places named by a `class` or `module` keyword\*:

    class Outer
      module Inner1
        puts ""Inner1: #{Module.nesting}""
      end

      Inner2 = Module.new do
        puts ""Inner2: #{Module.nesting}""
      end

      module Inner2::AnotherLevel
        puts ""AnotherLevel: #{Module.nesting}""
      end
    end

\* Plus their inheritance hierarchy, but I'm ignoring that here",1525386597.0
jrochkind,"constant lookup is WEIRD in ruby, I've never understood it. _And_ [changed slightly in ruby 2.5](https://blog.bigbinary.com/2017/10/18/ruby-2.5-has-removed-top-level-constant-lookup.html). 

I don't have an answer to your question, but personally I try to avoid relying on constant lookup logic in any non-trivial way, I find it hard to reason about for the code writer or reader. ",1525444702.0
realntl,"This is neat, though I wonder if it's all that common to find practical uses.

I did have a bit of a laugh during the introduction (not at the author's expense or anything):

> This is an extremely powerful concept in javascript and other functional languages. With currying, you can pass around a pre-loaded function, do some computation, and call that function with another arg that you've created.

I was thinking: ""Classes. He's talking about classes.""",1525443120.0
jimworm,"Using curry to set up configurable test expectations, which could be used like a function or passed partially-configured as a block. Haven't decided if it's a good idea yet.

Normal use:

    check_for[:health, person]

As block:

    [person1, person2].each(&check_for[:sickness])",1525372480.0
cpow85,"I found the curry method in ruby and thought it was SUPER interesting. I am not sure I would ever use it in production, but maybe it has its use cases?",1525371401.0
cpow85,Breaking your mind*** wow that‚Äôs embarrassing :),1525384093.0
jrochkind,I am looking forward to `‚≥ñ‚≥ò‚≥ö‚≥ú‚≥û‚≥†‚≥¢.‚≥ñ‚≥ò(‚≥ñ‚≥ò‚≥ö‚≥ú‚≥û)`,1525373813.0
in0pinatus,"True story: my iPhone chose to crash rather than render this webpage.
",1525408277.0
Holek,"Oh, boy. I can't wait to name my service class `‚íπ‚ìî‚ìõ‚ìî‚ì£‚ìî‚ìä‚ì¢‚ìî‚ì°‚í∂‚ìí‚ì£‚ìò‚ìû‚ìù`! ",1525422355.0
azRyMHk0ZTBzNF8K,"I can't wait to confuse my teammates with code like:

    class Ôº°ÔΩêÔΩêÔΩåÔΩÖ
    	def self.„ÉÉ„ÇÖËä±(aÕ®ÕëÃèÕêÕóÕÜÃΩÃêÃìÕãÃïÕüÃ∑Ã•Ã¨ÃúÕöÕáÃ¨ÃπÃºÃûÃ∞ÃòÃúÕôÃ∞)
    		puts aÕ®ÕëÃèÕêÕóÕÜÃΩÃêÃìÕãÃïÕüÃ∑Ã•Ã¨ÃúÕöÕáÃ¨ÃπÃºÃûÃ∞ÃòÃúÕôÃ∞*420
    	end
    end
    
    Ôº°ÔΩêÔΩêÔΩåÔΩÖ.„ÉÉ„ÇÖËä±(""√¶ÕÜÕ™ÃÜÃîÕ§ÃìÃ¥ÃïÕÅÕÄÃùÃÆÕàÃÆÃóÃ¨ÃªÃúÃ†ÃªÕôÃ∞ÕìfÕ§Õ¨ÕõÕåÕíÃøÃâÃåÃ¥Õ°Ã≤Ã´ÕöÃòÃØÃùÃúmÕ•ÃÅÕ®ÕÇÕ£ÕÉÃöÃèÃåÕ£ÕÑÕ°ÃïÕÄÕ°ÃµÕàÃûÃØÃªaÕ®Õ´ÃáÃÄÃâÃÉÃìÕ©Õ•ÃëÃæÃøÕÇÃ¢ÕúÃüÕñÃ≥Ã™Ã™ÃûÃ¨"")",1525441460.0
manys,">It‚Äôs worth noting that some constants in Ruby could already begin with these characters

It would be nice if they included the reasoning about ""these characters."" What defines the non-ASCII 1,827, upper-case characters for all languages in Unicode that have case? It's not in any of the links within the post, either.",1525370013.0
ignurant,This presentation is about to level up: https://confreaks.tv/videos/rubyconf2017-esoteric-obfuscated-artistic-programming-in-ruby,1525371292.0
Deathbymosh,"With the addition of this feature, Rubyists in various languages can use their own alphabet for the first character of a Class or Module.",1525565296.0
bigfig,"So then it's cool if I use real Greek letters for trigonometric functions, and I'll not need to write *theta*, when I mean Œ∏ ?

I posted about this here a few years ago and was told that though Unicode variable names are possible, they would be frowned upon. These rules for class names imply that sticking to Latin1 is an unnecessary stricture.",1525387306.0
torrso,"I've enjoyed your recent influx of voodooish gems. Not quite sure how this one will bring any benefit yet :)

    (1..100).map do |m|
      case 0
      when m % 15 then 'FizzBuzz'
      when m % 3  then 'Fizz'
      when m % 5  then 'Buzz'
      else m
      end
    end
",1525335600.0
keyslemur,"Now we're really getting into some black magic territory. More of I can't believe I got that to actually work properly than anything.

Working on some testing and codifying on it before I shove it on Github, but the super hacky 0.0.1 is out there in the wild. Careful, it might eat your code.",1525325120.0
tweettranscriberbot,"^The¬†linked¬†tweet¬†was¬†tweeted¬†by¬†[@keystonelemur](https://twitter.com/keystonelemur)¬†on¬†May¬†03,¬†2018¬†05:12:06¬†UTC¬†(0¬†Retweets¬†|¬†2¬†Favorites)

-------------------------------------------------

Infix operators, duck typing, and eval are fun! (There be truly black magics here, this is just a teaser of the fun to come) 





[Attached photo](https://pbs.twimg.com/media/DcP2442VwAAVMva.png:orig) | [imgur Mirror](https://i.imgur.com/oOaYeu4.png)

-------------------------------------------------

^^‚Ä¢¬†Beep¬†boop¬†I'm¬†a¬†bot¬†‚Ä¢¬†Find¬†out¬†more¬†about¬†me¬†at¬†/r/tweettranscriberbot/¬†‚Ä¢",1525325051.0
mperham,My understanding: looks like the GC thread tries to wait until the GVL is available rather than forcing a context switch.  This is useful in Unicorn and other single-threaded processes where you want to wait until the end of the request to GC but less useful in Puma where you might have 10-20 threads handling requests and fighting for the GVL.,1525316147.0
Blimey85,"Would this also work on Macs? I read where it says Linux only but I know a lot of the stuff is the same between the two, or at least from a user‚Äôs perspective it is. ",1525304964.0
gray_-_wolf,Does mingw builded ruby use `thread_pthread.c` or `thread_win32.c`?,1525304673.0
zverok_kha,Here is nice overview of most of options available: https://saveriomiroddi.github.io/An-overview-of-ruby-gui-development-in-2018/,1525284031.0
ticky_ticky_time,"There's ruby qt bindings. Check it [https://github.com/ryanmelt/qtbindings](https://github.com/ryanmelt/qtbindings)

It's better than shoes if you need to build complicated application.",1525773279.0
pabloh,"I think Gtk bindings are on a better shape (regarding docs, being up to date, etc...)",1525281050.0
ichbineinProgrammer,"Tbh, I'd use JavaFX with JRuby if I had to make a GUI application with Ruby. We do not have many good/updated GUI Libraries of our own.",1525312144.0
pedrozath,Shoes,1525277540.0
PikachuEXE,"Most of the time I see instance_eval is being used in gem DSL
https://github.com/lassebunk/human_power/blob/master/lib/human_power/rails/controller.rb#L7

I would only use it with enough testing",1525310109.0
mperham,"Pulling in jemalloc improves speed ~10% and reduces RAM 50-75% for large scale systems.  But ruby-core doesn't seem too enthused about using it for some reason.


https://bugs.ruby-lang.org/issues/14718",1525279243.0
4rch3r,"reporting in from attempting at work... saw 66% memory reduction with about 10% improved speed :) nice article!

Edit: Using Amazon Linux AMI",1525384785.0
bepragmatic,"Why the emphasis on sidekiq? It will improve any Ruby bloated process like Rails, right?",1525416700.0
mariuz,"Any easy way to add the jemalloc compile flags to rvm when using with capistrano ? (i use capistrano-sidekiq )

update: found it rvm install ruby-2.3 --with-jemalloc",1525874855.0
joltting,"The only problem with this, is that it's going to interact with the database immediately once you start the console.

A better way to handle this would be to just create a few functions in your `.irbrc` or `.pryrc` related files. (They are after all ruby scripts)

For example if I wanted a alias for querying / accessing myself.

**.irbrc** / **.pryrc**


    def me
        @me ||= User.find_by(email: ""user@example.com"")
    end
",1525287131.0
some_kind_of_rob,Um... what is caddy?,1525232730.0
i_dont_like_reddit_6,"I don't know Caddy, but looking at their page and their code only the binaries distributed from their site are commercially licensed. The code is Apache licenced, so you could compile it yourself, or very likely, find another precompiled distribution. ",1525232537.0
bjpbakker,"A good HTTP server must be fast and cause little overhead. 

Ruby code is interpreted at runtime and only for that reason slower than native executables. Also Ruby as an interpreted language is quite slow and it‚Äôs GIL will enforce you to serve one request at a time.

Ie Ruby isn‚Äôt really fit for building a production ready HTTP server.",1525246537.0
manys,"there are ruby webservers, but there's no reason to use them. ",1525234324.0
jdickey,"For those too lazy to Duck/Google

* [caddyserver.com](https://caddyserver.com/) : ""Every site on HTTPS""; and
* [their GitHub](https://github.com/mholt/caddy).",1525233425.0
masterasia6969,Fork it and remove sponsor header?,1525243383.0
mperham,"A good, useful tool is the by-product of **years** of hard work.

If you like it a lot, why not have your company buy Caddy and pay Matt for his hard work?",1525315763.0
honeyryderchuck,"As another patch proposal on the dreaded rack, this kind of works.

I think that the semantics of this ""rack.upgrade"" object are too oriented for the author desired scenarios, which are websockets first, and sse sorta after. Thing is. The upgrade protocol is specific to http, it supports also tcp or h2c (for which that callback object doesn't map very well), and sse is http, not an upgrade.

If you ask me, this just seems a temporary hack on another temporary hack. And then, you have to convince rails to adopt this. Sadly, such is the state of affairs with rack. Godspeed.",1525169121.0
this_is_not_nil,"Could someone talk about how they deploy websockets with Rails? Do you use different servers and a hostname for them running with Puma, and do you deploy them separately?",1525161345.0
janko-m,"Thanks for a great writeup!

I never actually understood, what is the advantage of using Rack hijack for SSE compared to using the `#each` and `#close` interface of Rack response bodies? For example, if I were to implement SSE like this:

    class MyRackApp
      def call(env)
        body = Enumerator.new do |yielder|
          10.times do |i|
            yielder << ""data: #{i}\n\n""
          end
        end

        # if we wanted to add teardown
        body = Rack::BodyProxy.new(body) { ... }

        [200, {}, body]
      end
    end

does it have any limitations compared to a Rack hijack version? Note that I'm aware this wouldn't work for implementing WebSockets, since there is no way to detect data pushed from the client. I'm just curious because I always thought SSE was possible without Rack hijack.",1525164216.0
swrobel,Fantastic writeup. Thanks!,1525151033.0
lafeber,Awesome. Things look promising indeed!,1525159309.0
midasgoldentouch,"Ah, you should have rang me up schneems - me and Parslet go back to 2012!",1525130519.0
cray4K,This is exactly what I have been waiting for before touching front end again. Sweet,1525118547.0
spiffistan,Can't wait for a DOM API.,1525259141.0
Mr_Bill_Lee,Nice intro to an interesting topic. ,1525101992.0
fotosintesis,Thanks to answer my pray. Was looking for some heads up on this aimed topic this lately.,1525134082.0
Mhxion,"The best seller one is offering a free coupon:
https://www.udemy.com/learn-to-code-with-ruby-lang/?couponCode=RUBYONE",1525096222.0
tweettranscriberbot,"^The¬†linked¬†tweet¬†was¬†tweeted¬†by¬†[@_ko1](https://twitter.com/_ko1)¬†on¬†Apr¬†28,¬†2018¬†02:38:42¬†UTC¬†(18¬†Retweets¬†|¬†25¬†Favorites)

-------------------------------------------------

Koichi Sasada: Progress report of ""Ruby 3 Concurrency"" [http://www.atdot.net/~ko1/activities/2018_RubyElixirConfTaiwan.pdf](http://www.atdot.net/~ko1/activities/2018_RubyElixirConfTaiwan.pdf)

Oral Presentation at Ruby x Elixir Conf Taiwan 2018,

at Taipei, Taiwan, on Apr 27th-28th, 2018.

\#rubyconftw \#elixirconftw

-------------------------------------------------

^^‚Ä¢¬†Beep¬†boop¬†I'm¬†a¬†bot¬†‚Ä¢¬†Find¬†out¬†more¬†about¬†me¬†at¬†/r/tweettranscriberbot/¬†‚Ä¢",1525086851.0
gray_-_wolf,I'm really looking forward for getting preview build on this :) Doesn't look like it's quite there yet sadly.,1525097547.0
readytogetstarted,Looks really cool. Are you thinking of adding new topics? I want to learn about data science. Can I get a weekly digest? ,1525072357.0
Job_man,Looks really cool ! How does it work ? Do you curate the articles and manually input them to the DB ?,1525087801.0
jrochkind,"Cool!

I've got a somewhat similar thing at http://rubyland.news, but I like yours. 

Interested in how you did it, is your code open source?",1525122481.0
Blimey85,Are there no conferences in Florida anymore? There used to be one in St Augustine but I think they quit doing that one. Anyone know of any others?,1525107617.0
keyslemur,"I wondered if I could use math operations on a module and coax them into procs like this:

    [1,2,3,4,5].map(&Mf + 5)
    # => [6, 7, 8, 9, 10]

...and what do you know, it works! So I just packaged them all right quick and decided to share. Might have been playing with Scala a bit much again.",1525069620.0
pabloh,"Very nice!, are you the gem's author?. 

This is the sort of thing that should be pushed into the StdLib or Ruby itself.

",1525110185.0
pabloh,"Although to be fair this gem needs some functionality for random message names and placeholders for multiple params, then you could have something closer to Scala.",1525110566.0
keyslemur,More of getting my musings over the last week or so out. I'd be curious to see if there's a way to unfold loops like this at a C level but I know absolutely nothing about native extensions and if that's even remotely plausible in the first place.,1525061843.0
joelparkerhenderson,"Great work... thank you for creating this gem and sharing it.

Minor areas:

* Fix spelling of dimentions to dimensions.

* Rephrase to use ""lon"" or ""lng"", but not both.

* Rephrase to use all cap ""OSM"" or first cap ""Osm"", but not both.

* Refactor to use ""return"" or implicit return, but not both.
.
* Refactor the gemspec to use an explict manifest, i.e. list each file rather than using `git ls-files`.

* Reformat indent to 2 spaces.
   
Major areas:

* Add tests.

* Refactor code to be more testable.

For example, you have this line in an inner loop, and the line combines and instance variable with loop variables with an IO call:

    tile_file = Tempfile.new([""tile-#{@zoom}-#{tn[:x]}-#{tn[:y]}"", "".png""])

I suggest you refactor that code into multiple pieces: one to generate the file name using functional code, one to do the IO, such as:

    def tile_tempfile_name(x, y, zoom)
      ""tile-#{zoom}-#{x}-#{y}.png""
    end

    def tile_tempfile
      Tempfile.new(tile_tempfile_name(tn[:x], tn[:y], @zoom))
    end

The refactor makes the functional method much easier to test, and also makes the IO method easier to test by enabling you to fake as you like.

Similarly, refactor to separate the generation of the tile file paths from the actual downloader file reader/writer.

You have some values that use multiple representations, such as ""lat_deg"" meaning ""latitude represented as degrees"" vs. ""lat_rad"" meaning ""latitude represented as radians"". I recommend adopting a naming convention ""lat_as_deg"" and ""lat_as_rad"". This looks trivial yet is a hallmark IMHO of well-written code because it makes the intent clearer. Make this a habit and it will help greatly on larger projects.

Investigate the point of this line -- why is it necessary?

    link_from_tile_number(tn[:x], tn[:y])


",1525068414.0
janko-m,"Don't `include Magick` globally, because then that's applied to other people's code, too. Instead include it just in your class:

    class OSMTileGrabber
      include Magick
      # ...
    end

Also, RMagick can be tough to install, e.g. `gem install rmagick` on Ruby 2.5.1 fails to install C extensions for me. I would recommend using MiniMagick for simple solutions like these, which simply shells out to the command-line and doesn't have C extensions. I'm guessing this should work:

    MiniMagick::Tool::Montage.new do |cmd|
      cmd.merge! file_paths
      cmd.geometry ""+0+0""
      cmd.tile ""#{image_dimensions[:x]}x#{image_dimensions[:y]}""
      cmd << output_path
    end

I don't know how big this tiles can get, but you might want to avoid loading them whole into memory:

    IO.copy_stream(read_file, tile_file.path)
    # or
    FileUtils.mv read_file.path, tile_file.path

Be aware that Tempfiles will get automatically deleted on garbage collection if you don't keep the reference to the Tempfile object, so I'd recommend returning the Tempfile objects instead of just paths.",1525070709.0
SamGill,I have no criticism but only praise: congratulations on creating something - anything - and opening it up to criticism. ,1525081793.0
hehestreamskarma,"Congrats!

Massive nitpick (and I'm sure I'm not alone here): [lose the tabs; 2 spaces. :)](https://github.com/bbatsov/ruby-style-guide#spaces-indentation)

",1525065116.0
moomaka,"> I plugged it in and started running the headless feature as I would Phantom JS. I actually really enjoyed the speed and performance of the driver. I might start using it as my integration driver from now on. Unfortunetly, it would not allow for downloads using the browser while using headless mode.(at least at this point)

It does support it now actually, see my comment here for enabling it: https://www.reddit.com/r/ruby/comments/8d6vdb/capybara_rails_chromeheadless_on_travis/dxkwp58/",1525113350.0
tadrinth,"In theory, you don't need object oriented programming. However, in practice, OOP is a useful abstraction that lets programmers build much larger and more complicated systems faster and more reliably.  It basically lets you hold more total code in your head, because it has nouns as well as verbs. And it allows you to cleanly separate different parts of a large code base so they can be reasoned about independently, which is vital for large projects with many devs.

Edit to add: most popular modern languages are object oriented. Java, C++, C#, Python, and Ruby are all object oriented. Even Javascript has some OO features.",1525036537.0
Gnascher,"Classes encapsulate data, expose behaviors though methods, define relationships and act as an abstraction for a ""thing"" in your application.  Basically they're organizational units for your code.

Classes can represent a table in a database (these are called 'Models' in an MVC framework) for example, but they certainly don't have to.

Here's a very simple somewhat Rails-y example.  Let's have class Cat and Owner, defined as such:

    class Owner
      has_one :cat
      
      def feed_cat
        # cat feeding logic
      end
    
      def entertain_cat
         #cat entertaining logic
      end
    end
    
    class Cat
      belongs_to :owner
      attr_accessor :hunger_level, :bordem_level, :num_lives

      def alive?
         num_lives > 0
      end

      def hungry?
         hunger_level >= 5
      end

       def bored?
          boredom_level >= 5
       end

       def eat
           raise NotHungry if hunger_level < 1
           hunger_level -= 1
       end 

       def play
           return scratch_owner if boredom_level < 1
           boredom_level -= 1
       end

       def knock_things_off_shelf
          # thing knocking logic
       end
    end



    owner = Owner.first #fetches an owner from the DB
    owner.cat = Cat.create(name: 'Nermal')
    
    begin
      if owner.cat.hungry?
         owner.cat.meow until owner.feed_cat
         owner.cat.eat until !owner.cat.hungry?
       end
    
      if owner.cat.bored?
        owner.cat.knock_things_off_shelf until owner.entertain_cat
        owner.cat.play until !owner.cat.bored?
      end
     end while owner.cat.alive?
  ",1525045642.0
jeremywoertink,"You don't need classes. They are used for patterns around object oriented programming. They help group methods around a specific concept like methods around a user or something. The organization you get with classes helps to keep track of larger projects especially when more than one person works on it.

Ruby is designed to be used for OOP. If you want to write in functional or procedural style, another language may make more sense to you. ",1525046980.0
derrickcope,"They provide scope, and hide variables. I am learning OO as well. Working through the ruby cookbook at the moment.",1525050068.0
poteland,"Looks like you might enjoy functional programming, if you don‚Äôt know any functional languages you should try one. ",1525050658.0
Dee_Jiensai,"Have you noticed how you can do something.to_s on many different things?

Or how you can do things.each do... on different objects?

That's one aspect of classes. It allows different objects to have similar interfaces and makes code re-use easier if you want to have some object some specific behaviour, by including generic modules into some class.

Also, classes can inherit from other classes and then override specific (or all) methods . IO would be an example of this. you have one base class (IO) which has all the generic methods used for all decentant classes.  
Then you have things like File which inherit from IO and just implement the specifics of file handling without having to copy all the other code needed to make it work.  
So, you can have other classes doing some kind of input/output and share the code in IO class.

In your study, you will have used many classes possibly without realizing they are classes.",1525067188.0
Fluffy_ribbit,"It's a nice way to keep track of lots of variables in a reasonable way. Say, you had a simple game where enemy spaceships spawned from the top of the screen and occasionally shot down missiles. You want a spaceship to spawn every 5 seconds or so, and fire a missile every 2 seconds or so. So, for each spaceship, you have to keep track of separate x & y coordinates, as well as different timings for when to fire missiles.

Could you do without using OOP explicitly? Yeah. Instead of having an array of ship objects, you could have an array of arrays or hashes, containing numbers for the x, y and timings, and a seperate set of methods to parse the arrays and execute the desired functionality. But it will tend to make your code a lot less readable and intuitive than writing it using Object Orientation.",1525057882.0
bjmiller,so that you can have two methods with the same name but different meanings appropriate to their classes,1525064384.0
wizeddy,"I'd say try using Sinatra, httparty, and nokogiri gems next.  If youre already fiddling with classes you're not too far off. ",1525087906.0
pfharlockk,"It boils down to giving you tools to allow you to do the following things...

1. organize your code
2. model your code after real world concepts (again organization)
3. hopefully create encapsulated code",1525088829.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/documentation] [New Version of Ruby Gem markdown\_helper](https://www.reddit.com/r/documentation/comments/8ftsy6/new_version_of_ruby_gem_markdown_helper/)

- [/r/github] [New Version of Ruby Gem markdown\_helper](https://www.reddit.com/r/github/comments/8ft9pv/new_version_of_ruby_gem_markdown_helper/)

- [/r/markdown] [New Version of Ruby Gem markdown\_helper](https://www.reddit.com/r/Markdown/comments/8ft9hf/new_version_of_ruby_gem_markdown_helper/)

- [/r/markdown] [New Version of Ruby Gem markdown\_helper](https://www.reddit.com/r/Markdown/comments/8ftpxp/new_version_of_ruby_gem_markdown_helper/)

- [/r/u_raumner33] [New Version of Ruby Gem markdown\_helper](https://www.reddit.com/r/u_raumner33/comments/8g9oxz/new_version_of_ruby_gem_markdown_helper/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1525027076.0
,Did markdown ever come up with a video embed short cut?,1525028679.0
updog,"Am I wrong in saying that, given you understand OO, you technically understand FP? The FP is just an approach where you don't store state? Pipelining operations over injecting state into an object and then mutating that state without passing parameters around? I understand FP reduces side effects, but in general if one eliminates those side effects in OO, they generally do so by ""dropping back"" to FP. Perhaps my understanding could use some adjustment. I just always felt that functions are so foundational to any approach that considering an approach built on top of it as being non-functional was a bit narrow of a definition.

To use a mathematical analogy, doesn't saying ""I know differential calculus"" imply that I also know what a function is?",1525027343.0
keyslemur,"Well to start by going down the list then...

### Why did you decide to learn FP?

Honestly because as a Junior I was so obsessed with the idea that I had to know everything about programming and the dark magics hitherto that everything became a requirement. FP was one of those.

A very big disclaimer here is that this is not a particularly productive way to learn things, and Seniority is far far more about soft skills than how well you can necessarily code. More on that in a later post though. Hm, I should write that up.

Anyways, back to FP. I got hooked on this idea that I was part of an elite set of programmers who did things the one true and righteous way, and started spouting off about how awesome FP was. Never mind that I never actually built anything of value in it at that point, the righteous indignation did wonders for my ego. If you're getting the feeling that this is a dig at past me, great! Don't do what I did, it's incredibly pretentious and does you no good.

When I really started to learn some of it was when I decided that I wanted to know how and why things worked under the hood. Enumerable always fascinated me, and after reading a bunch of Raganwald's works (Kestrels, Quirky Birds, and Hopeless Egocentricity) I was hooked.

It led to a lot of experimentation and tinkering that resulted in some of my earlier gems like Izzy and more than a few old blog posts.

You know what I've come to realize though? I still know jack-all about FP, and there's a ton more to learn.

### What's been the biggest challenge?

HM type systems and abstractions which lead to code that looks like something out of a mathematical textbook. There are no real descriptive names for things, and it becomes layers of abstractions built upon prior knowledge dense enough that you need a shovel to get through it.

The basic ideas make enough sense, but after a while it feels like you've just hit /r/restofthefuckingowl/. It happens. Take a step back, relax, and go back over the previous materials. The one thing I've learned is if you don't completely understand the underpinings of prior concepts you're going to be _super_ lost later on.

It's ok to take your time. You normally read 1-2 pages a minute on fiction books? Great! If you're reading much faster than a page every 5 to 10 minutes you should slow down and make sure you can actually taste the knowledge on the way down. Programming literature, especially functionally oriented, is dense. Digest well and slowly.

### How much time and money have you invested?

...I'm not checking my books budget and you can't make me.

Far longer than I can remember or really care to. It's a continuous process which requires a ton of investment, but here's the thing: so does any language or tool chain.

You weren't a Java or Ruby pro in your first few years (even though some of us like to think so), so what makes you expect it'll happen instantly for Haskell or the like? If anything it takes even longer because it's such a foreign concept to the way you've considered things before.

Getting good takes time, so make sure you're in it for the long haul",1525150503.0
editor_of_the_beast,Is there any concern that they‚Äôre trying to reinvent the wheel here at all? What is a Guild comparable to in other languages - are they comparable to Erlang processes or Go channels? The send / receive mechanism seems similar to those. ,1525021198.0
jrochkind,I was worried that guilds seemed like a wrong path somehow... but I'm feeling better about em from these slides. ,1525045068.0
torimus,"With enough support and lingering enthusiasm, I'd believe in brighter future of Ruby.

However it is not a new idea at all. I do remember KO1 already presented Guilds 2 or 3 years ago on a Rb conference as a solution to multiprocessing \*\*while\*\* keeping as much as possible from backward compatibility. If you would think about the problem thoroughly,  you can't come with a much different solution unless burn all bridges from over a decade evolved GIL'ed CRuby ecosystem.

Quality implementation of Guilds is what now Ruby really needs, its Achilles heel in world of multicore processors and distributed computing.",1525100741.0
moomaka,"I don't particularly like the way this channel implementation interacts with such a heavy-weight structure. 

`Guild.receive` seems to be a blocking operation, though it's not clear in what context it's allowed to execute. i.e. does it block the entire guild or just the calling thread in the guild? Can multiple threads in the guild call `Guild.receive`? If so who gets the message? 

I'm guessing it either blocks the guild or only the 'main thread' of the guild can call `Guild.receive` and only it blocks with other threads in the guild continuing to execute.  I'm also guessing that guilds are expensive to create, at least the cost of an OS thread and likely much more. Put these two things together and to make good use of guilds you'll have to construct a 'guild pool' and executer framework around it. To me this is quickly starting to sound like a low level building block that will need libraries layered on top of it to make effective use of it, rather than a first class language level concurrency primitive. 

This also feels like a bit too much of MRI's implementation details leaking into the language. I'd rather see something closer to go's go funcs, i.e. user-land scheduled green threads. Leave the multi-plexing of them onto multiple cores as a runtime implementation detail for MRI / JRuby / Truffle to implement as makes sense. Maybe MRI still uses the concept of guilds under the hood to implement this, but I don't like it being the user interface for concurrency in Ruby.
",1525124224.0
geraldbauer,"FYI: Added some test assertions in [`token_test.rb`](https://github.com/openblockchains/universe/blob/master/tokens/token_test.rb) thanks to minitest. Example:

    class TestToken < Minitest::Test
    
      def setup
        @token = Token.new(
          name:          'Your Crypto Token',
          symbol:        'YOU',
          decimals:       8,
          initial_supply: 1_000_000
        )
      end
    
      def test_transfer
        assert_equal 100_000_000_000_000, @token.balance_of( owner: '0x0000' )
        assert_equal 0,                   @token.balance_of( owner: '0x1111' )
    
        assert @token.transfer( to: '0x1111', value: 100 )
        assert_equal 100, @token.balance_of( owner: '0x1111' )
    
        assert @token.transfer( to: '0x2222', value: 200 )
        assert_equal 200, @token.balance_of( owner: '0x2222' )
    
        assert_equal 99_999_999_999_700, @token.balance_of( owner: '0x0000' )
      end
      
      #...
      
    end
",1525034404.0
Calavar,"GUI. The state of Ruby GUI is ridiculous.

There is Tk, but it requires you to install a separate Tcl distribution.

There is Shoes, which IMO is what a good Ruby GUI API would look like, but it requires you to install and use a special Shoes application to run your programs.

Then there are the Ruby Qt bindings, which are poorly documented and out of date.",1525020914.0
myringotomy,gdal/pdal/pandas,1525003127.0
Dombot9000,Redis cluster protocol implementation.,1525180850.0
geraldbauer,"Great Ruby 3x3 slide deck. Added to the [Ruby 3x3 - Ruby 3 Will Be 3 Times Faster - What‚Äôs News?](http://planetruby.github.io/calendar/ruby3x3) - A collection @ Planet Ruby about ruby 3x3 news, benchmarks and more",1524991178.0
matz,Submit your proposal to bugs.ruby-lang.org,1524894887.0
editor_of_the_beast,"The buffer protocol makes a lot of sense, but to think that it‚Äôs the sole reason for Python‚Äôs growth is an extreme oversimplification. I mean come on.",1524911056.0
ioquatix,You could easily implement this in a gem so why does it need to be in core ruby?,1524911220.0
bascule,"Check out Apache Arrow:

https://arrow.apache.org/

There's a Ruby implementation here:

https://github.com/red-data-tools/red-arrow",1524917933.0
db443,"It is a matter of priority and resources.

I like the focus on Guilds and RTL + MJIT on the road to 3x3.

A wish-list would be hooking up (if possible) Ruby to WebAssembly hence allowing Ruby to run client-side in the browser. That would be cool.",1525066193.0
geraldbauer,"Hello, great (static) website theme. You're more than welcome to add your Spacetime theme to the [Dr Jekyll theme directory / listing](https://drjekyllthemes.github.io/). Cheers. Prost.",1524933530.0
jrochkind,"I'd consider using [chruby](https://github.com/postmodern/chruby), which is _very_ simple (much much much simpler than rvm) and pretty much does what you're trying to do, but in a proven and mature way. 

What you're doing might work, or be close to working, but why figure it out when chruby already has for us. 

Alternately, I suppose, you could look at what chruby does, and copy it for yourself.  It's a 100-line bash script (with plenty of comments and whitespace), so perhaps it found the need for more than 5 lines, but it's also doing a little bit more than you are (like letting you switch to a ruby by name without it's full path). https://github.com/postmodern/chruby/blob/master/share/chruby/chruby.sh

You could maybe continue to build rubies with rvm, but I'd use something simpler for that too. the chruby readme has several options. RVM being in your system at all tends to mess other things up.  If you want something simpler than rvm, which I think you do, I think it's time to move away from rvm. :)",1524846368.0
bookofgreg,"I prefer rbenv to chruby because as soon as you need to trigger ruby from cron, your non-login shell will not work with chruby, but the shims from rbenv work just fine. RVM is just a hot mess, not touched it in years.",1524859565.0
Blimey85,Any idea how soon the video will get posted? This is one of the talks I‚Äôm most interested in but didn‚Äôt get a chance to catch any of the live streams. ,1524866138.0
no_picklezzz,Any word on ActionCable scalability? I've seen a few posts suggesting 3rd party libs instead due to scalability issues.,1524859374.0
predatorian3,"Reading he article, I did get the feeling that the author was hinting that TDD is not as useful, but I do feel that testing both what an object is and what it does with BDD is necessary. I would also say that some people would see it as overkill or being cumbersome. But using MiniTest for both unit and spec testing then using cucumber as a feature test with different language could and is actually very helpful.",1524878510.0
predatorian3,I'm still surprised that we still harp on BDD or TDD or any of the testing methods.,1524844382.0
442401,"Forgive me if I've miss interpreted your question, but I think `Array#product` is what you are looking for. [\[docs\]](https://ruby-doc.org/core-2.5.0/Array.html#method-i-product)

    sizes = [:small, :medium, :large]
    elements = [:fire, :ice, :water]
    species = [:dragon, :elemental, :unicorn]
    
    combinations = sizes.product(elements, species)
    
    puts combinations.take(6).inspect
    #=> [[:small, :fire, :dragon], [:small, :fire, :elemental], [:small, :fire, :unicorn], [:small, :ice, :dragon], [:small, :ice, :elemental], [:small, :ice, :unicorn]]
    
    puts combinations.at(17).inspect
    #=> [:medium, :water, :unicorn]
    
    puts combinations.index [:large, :water, :elemental]
    #=> 25

I have no idea how the internals work, but a quick experiment seems to show that it is O(n^2) up to 4 items and then O(1) thereafter.",1524830853.0
keyslemur,"*Fair warning*: this is highly experimental and definitely a messy branch. It also uses `binding.eval` and some other hackery. If Qo was magic, this is black magic.

The benchmarks could use some improvement, but the gist of it still stands:

It's possible to get near-vanilla speeds with expressive language on large array querying using only Ruby.",1524818147.0
spitlets,"I noticed that your Ruby question is for course homework.

The best way to learn is to deeply learn and try to understand what‚Äôs really going on, not just posting homework to Reddit in /r/Ruby and /r/learnpython.

Is there anything I can do to help you understand at a deeper level and not just answering superficial questions?",1524813680.0
ignurant,"Can you share a more concrete example of what you'd like to accomplish? I don't understand where your strings are coming from, so it's hard to answer. If you had an array of strings, an easy way to count them is `array_of_strings.sum(&:length)`. This basically says ""add together the .length of each element in the array"".",1524802484.0
RhialtoTheMarv,"I'm going to guess that the `comment` is an object, not a string, and this line `comment.comment` suggests that the `comment` object has a `comment` attribute (which is not great structure imho). If `comment.comment` returns a string you could go `comment.comment.length`",1524799638.0
akira410,"comment is the Comment object, not the comment text, so it does not have a length argument.

Try checking the length of the comment's comment property. ",1524799342.0
H34DSH07,"Can you make your question clearer? What do you mean by ""incorporate""?",1524798384.0
spitlets,You need to provide more information about what you‚Äôre trying to solve.,1524793318.0
akira410,I don't understand what you're asking. There is a loop in this code already. The .each method. ,1524796453.0
realntl,"I'm always wary of folks pronouncing that they've succeeding something ""simpler."" Usually, this just means they have discarded the concepts that aren't already familiar.

This article is no exception in that regard.",1524785673.0
ssk,"By value.

For more details, see this: 
https://stackoverflow.com/questions/1872110/is-ruby-pass-by-reference-or-by-value",1524773068.0
duck_for_quack,"By value, but those values are object references. It‚Äôs complicated like that",1524778551.0
jemminger,"Anything of note here, or are you just posting for visibility?",1524799335.0
xc68030,"So every dependency inversion/injection tutorial for ruby, to me, seems like a non-idiomatic copy of code from another language, often Java. 

No real-world Ruby code that I‚Äôve seen or written has classes like ReportGeneratorManager. It just seems wrong right there. That‚Äôs just asking for a violation of SRP. So these arguments always seem very contrived and strawman-like. ",1524789865.0
kmaicher,"I can not stress how using this techniqe along with IoC Container helped me untangle complicated apps.

To bad that in our community people tend to underestimate their value.",1524829807.0
hayden592,check out dry-rb.org,1525191280.0
izeisler,You might want to check out [active\_mocker](https://github.com/zeisler/active_mocker#activemocker),1524780142.0
archlich,What‚Äôs your dns situation looking like? Do you have multiple resolvers? Are they behaving correctly? What does wireshark say when you initiate a connection?,1524779764.0
Schrockwell,Are you behind a proxy or VPN?,1524752522.0
KruppiABC123,"Do you have this problem just with ruby or in the browser or other tools too?
If it's just ruby i would guess something like firewall, maybe.
It it's in the browser also, i would guess something like bad DNS settings",1524752792.0
TomahawkChopped,+1 to looking into your dns resolver and tracing your network with tcpdump or some other pcap method.,1524784700.0
wlll,"Works for me:

> 2018-04-27 17:03:43 +0100

> 2018-04-27 17:03:43 +0100

If it were me I'd consider [profiling](https://github.com/ruby-prof/ruby-prof) the code to see where the time is taken up.",1524845138.0
in0pinatus,"Does it happen with system ruby or Ruby installed by rbenv?

Do you have anything else third-party installed e.g. via homebrew?

My next step would be to investigate your binary linkages and to dive down to syscall level with dtruss.",1524871962.0
petrblaho,"I hit the same original issue \(ruby managed by rbenv, cannot install gems from bundler or gem\).

Maybe the problem is with IPv6. 

In my case it is my company's broken IPv6. Ruby will first try to use IPv6 addresses which will timeout \(2 minutes for each at my case\) and then it will try IPv4. I switched off IPv6 on my machine for our internal network.

`$ host` [`rubygems.org`](https://rubygems.org)  
[`rubygems.org`](https://rubygems.org) `has address` [`151.101.194.2`](https://151.101.194.2)  
[`rubygems.org`](https://rubygems.org) `has address` [`151.101.2.2`](https://151.101.2.2)  
[`rubygems.org`](https://rubygems.org) `has address` [`151.101.130.2`](https://151.101.130.2)  
[`rubygems.org`](https://rubygems.org) `has address` [`151.101.66.2`](https://151.101.66.2)  
[`rubygems.org`](https://rubygems.org) `has IPv6 address 2a04:4e42::514`  
[`rubygems.org`](https://rubygems.org) `has IPv6 address 2a04:4e42:400::514`  
[`rubygems.org`](https://rubygems.org) `has IPv6 address 2a04:4e42:200::514`  
[`rubygems.org`](https://rubygems.org) `has IPv6 address 2a04:4e42:600::514`  
[`rubygems.org`](https://rubygems.org) `mail is handled by 10` [`mxb.mailgun.org`](https://mxb.mailgun.org)`.`  
[`rubygems.org`](https://rubygems.org) `mail is handled by 10` [`mxa.mailgun.org`](https://mxa.mailgun.org)`.`

`curl` [`rubygems.org`](https://rubygems.org) `--verbose -4` works, `curl` [`rubygems.org`](https://rubygems.org) `--verbose -6` does not.

`$ wget` [`rubygems.org`](https://rubygems.org) `--verbose`  
`--2018-05-24 17:51:29--`  [`http://rubygems.org/`](http://rubygems.org/)  
`Resolving` [`rubygems.org`](https://rubygems.org) `(`[`rubygems.org`](https://rubygems.org)`)... 2a04:4e42:600::514, 2a04:4e42::514, 2a04:4e42:400::514, ...`  
`Connecting to` [`rubygems.org`](https://rubygems.org) `(`[`rubygems.org`](https://rubygems.org)`)|2a04:4e42:600::514|:80... failed: Connection timed out.`  
`Connecting to` [`rubygems.org`](https://rubygems.org) `(`[`rubygems.org`](https://rubygems.org)`)|2a04:4e42::514|:80... failed: Connection timed out.`  
`Connecting to` [`rubygems.org`](https://rubygems.org) `(`[`rubygems.org`](https://rubygems.org)`)|2a04:4e42:400::514|:80... failed: Connection timed out.`  
`Connecting to` [`rubygems.org`](https://rubygems.org) `(`[`rubygems.org`](https://rubygems.org)`)|2a04:4e42:200::514|:80... failed: Connection timed out.`  
`Connecting to` [`rubygems.org`](https://rubygems.org) `(`[`rubygems.org`](https://rubygems.org)`)|151.101.194.2|:80... connected.`  
`HTTP request sent, awaiting response... 301 Moved Permanently`  
...",1527177827.0
i_know_sherman,1.1.1.1,1524794177.0
peteonrails,"Holy moly, it has been almost 10 years since I've seen you. Looks like you're doing well, congrats! 

And thanks for the article.",1524750614.0
codesnik,"https://github.com/ankane/groupdate is kinda more versatile, timezones and all.
and with (shameless plug) https://github.com/codesnik/calculate-all you can graph even more analytics in one query",1524741773.0
niborg,"I like this gem for its simplicity and providing handy data for variety of simple metrics. Nice work.

For those looking to perform advanced reporting features, we used the [ActiveReporting gem](https://github.com/t27duck/active_reporting), which we really like. It encourages clean and flexible reporting code by separating any reporting DSL into so-called ""FactModels"".",1524760590.0
mperham,"https://twitter.com/pierre_olivier/status/989191366268936192

> Just added MALLOC_ARENA_MAX=2 to my heroku config and looks like it will save me $200/mo in workers! Thanks @mperham ! ",1524677621.0
jrochkind,"Is there any reason `MALLOC_ARENA_MAX=2` isn't default for everything ruby, then?

Is this a setting that makes sense for sidekiq-type loads, but not neccesarily for other loads?",1524669616.0
this_is_not_nil,"It could be cool if the graph had three lines:

- Glibc with default settings
- Glibc with `MALLOC_ARENA_MAX=2`
- And Jemalloc",1524676542.0
whistlerbrk,"For a recent client I wanted to use a single worker node in Heroku 1X (512mb) and on Ruby 2.3.3 w/Rails 5.1 and Sidekiq 5 I kept consistently getting H14's and memory climbing to the point of H15s.

I did a ton of Googling and eventually decided it wasn't my worker and it's job. I tried removing query caching, etc.

Finally found a thread related to jemalloc and installed a Heroku buildpack to that effect. The combination of this and Ruby 2.4.4 allows me to run 8-10 concurrent workers w/around 384Mb of RAM usage. It doesn't climb, it just stays. Not a single problem since then.",1524700358.0
lespooner,This is seriously amazing. Thank you mike for all the extra $$ and room to scale! You rock!,1524754683.0
mperham,"I've opened a ruby-core issue to use jemalloc.  We'll see what they say.  If you have graphs or data about a move to jemalloc, please add a comment to the issue!

https://bugs.ruby-lang.org/issues/14718",1524845964.0
skryking,"Rather awesome project, wish I had seen this article before I converted my stuff from static Jekyll over to rails.
",1524756562.0
jrochkind,"I'd check out [concurrent-ruby](https://github.com/ruby-concurrency/concurrent-ruby) for your concurrency needs. It provides some higher level primitives than `Thread.new`. It would be easy to build that ""nurcery"" idea out of futures or promises -- I actually do it all the time, because ""run these things in parallel and then wait for them all"" is indeed a pattern I need regularly. ",1524669177.0
rbrick111,"Most Rails developers quickly learn that minimizing the number of database queries by properly specifying eager loads is critical for good application performance. Unfortunately specifying eager loads is error prone and can cause encapsulation problems. You can have your cake and eat it too with goldiloader ;)

https://github.com/salsify/goldiloader",1524655693.0
jujubean67,"I think most N+1 problems are more harder to spot than the ones presented in the article, and they're an inherent weakness in the Active Record pattern. 

I recently tracked down and removed a lot of N+1 issues from an application, many weren't even detected by `bullet`. 

For future projects I may try out ROM.rb, the repository pattern makes N+1s pretty much impossible.",1524666020.0
keyslemur,"This one deals far more with how to use recursion to descend into hashes, some practical uses for yield, and how it really doesn't take a lot of code to do some really fun things.

Enjoy!",1524637434.0
Valaramech,"Just gave this a look.  My intial guess was that you were having some kind of weird DNS issue.  Doing a dig on those addresses didn't turn up anything which drove me to looking at my own rubygems configuration.

After giving that a look, I think your remote sources may be messed up.  My version of rubygems is configured to hit https://rubygems.org.  Which jives with the verbose output I got as well; including a very similar line to one you posted (api.rubygems.org/api/v1/dependencies).

Give your environment a look with `gem environment`.  That should give you a place to start.",1524624944.0
schneems,"Try running `gem env`. It will give you all the configuration on your system.

When you `gem install` you should typically only be seeing results from `rubygems.og` and not from `gems.rubyforge.org` or `gemcutter.org` (wow, that one is really old)

Here's my `gem env` output:

    $ gem env
    RubyGems Environment:
      - RUBYGEMS VERSION: 2.7.6
      - RUBY VERSION: 2.5.1 (2018-03-29 patchlevel 57) [x86_64-darwin17]
      - INSTALLATION DIRECTORY: /Users/rschneeman/.gem/ruby/2.5.1
      - USER INSTALLATION DIRECTORY: /Users/rschneeman/.gem/ruby/2.5.0
      - RUBY EXECUTABLE: /Users/rschneeman/.rubies/ruby-2.5.1/bin/ruby
      - EXECUTABLE DIRECTORY: /Users/rschneeman/.gem/ruby/2.5.1/bin
      - SPEC CACHE DIRECTORY: /Users/rschneeman/.gem/specs
      - SYSTEM CONFIGURATION DIRECTORY: /Users/rschneeman/.rubies/ruby-2.5.1/etc
      - RUBYGEMS PLATFORMS:
        - ruby
        - x86_64-darwin-17
      - GEM PATHS:
         - /Users/rschneeman/.gem/ruby/2.5.1
         - /Users/rschneeman/.rubies/ruby-2.5.1/lib/ruby/gems/2.5.0
      - GEM CONFIGURATION:
         - :update_sources => true
         - :verbose => true
         - :backtrace => false
         - :bulk_threshold => 1000
      - REMOTE SOURCES:
         - https://rubygems.org/

",1524630227.0
mdchaney,"Thanks for the comments.  I forgot to include the output of gem env, which of course showed all the old gem sources.  I've changed it to https://rubygems.org, but now it's simply not working:

    $ gem install google-api-client -v '~> 0.8' -V
    ERROR:  Could not find a valid gem 'google-api-client' (~> 0.8), here is why:
              Unable to download data from https://rubygems.org - timed out (https://api.rubygems.org/specs.4.8.gz)

It's bizarre, because:

    $ curl -O https://api.rubygems.org/specs.4.8.gz
      % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                     Dload  Upload   Total   Spent    Left  Speed
    100 3470k  100 3470k    0     0  3470k      0  0:00:01  0:00:01 --:--:-- 2796k

Clearly it can pull the specs.

At this point, I think it's some hokey crap with rvm, but I'm not sure.  At least I feel like I'm going down the correct path.

    $ gem env
    RubyGems Environment:
      - RUBYGEMS VERSION: 2.6.14
      - RUBY VERSION: 2.4.1 (2017-03-22 patchlevel 111) [x86_64-darwin14]
      - INSTALLATION DIRECTORY: /Users/mdchaney/.rvm/gems/ruby-2.4.1
      - USER INSTALLATION DIRECTORY: /Users/mdchaney/.gem/ruby/2.4.0
      - RUBY EXECUTABLE: /Users/mdchaney/.rvm/rubies/ruby-2.4.1/bin/ruby
      - EXECUTABLE DIRECTORY: /Users/mdchaney/.rvm/gems/ruby-2.4.1/bin
      - SPEC CACHE DIRECTORY: /Users/mdchaney/.gem/specs
      - SYSTEM CONFIGURATION DIRECTORY: /Users/mdchaney/.rvm/rubies/ruby-2.4.1/etc
      - RUBYGEMS PLATFORMS:
        - ruby
        - x86_64-darwin-14
      - GEM PATHS:
         - /Users/mdchaney/.rvm/gems/ruby-2.4.1
         - /Users/mdchaney/.rvm/gems/ruby-2.4.1@global
      - GEM CONFIGURATION:
         - :update_sources => true
         - :verbose => true
         - :backtrace => false
         - :bulk_threshold => 1000
         - :sources => [""https://rubygems.org""]
         - ""benchmark"" => false
      - REMOTE SOURCES:
         - https://rubygems.org
      - SHELL PATH:
         - /Users/mdchaney/.rvm/gems/ruby-2.4.1/bin
         - /Users/mdchaney/.rvm/gems/ruby-2.4.1@global/bin
         - /Users/mdchaney/.rvm/rubies/ruby-2.4.1/bin
         - /Users/mdchaney/.rvm/bin
         - /opt/local/lib/postgresql94/bin
         - /opt/local/bin
         - /opt/local/sbin
         - /Users/mdchaney/aws/ec2-api-tools-1.3-51254/bin
         - /usr/local/bin
         - /usr/bin
         - /bin
         - /usr/sbin
         - /sbin",1524666529.0
mdchaney,"Okay, this is bizarre.  The issue is that I cannot open https://api.rubygems.org/ - it just hangs.  It also can't open cnn.com, but slashdot.org is fine:

    $ irb
    2.4.1 :001 > require 'net/http'
     => true
    2.4.1 :002 > require 'net/https'
     => true
    2.4.1 :003 > client = Net::HTTP.new('api.rubygems.org',443)
     => #<Net::HTTP api.rubygems.org:443 open=false>
    2.4.1 :004 > client.start
    Net::OpenTimeout: execution expired
      from /Users/mdchaney/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:904:in `initialize'
      from /Users/mdchaney/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:904:in `open'
      from /Users/mdchaney/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:904:in `block in connect'
      from /Users/mdchaney/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/timeout.rb:103:in `timeout'
      from /Users/mdchaney/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:902:in `connect'
      from /Users/mdchaney/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:887:in `do_start'
      from /Users/mdchaney/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:882:in `start'
      from (irb):4
      from /Users/mdchaney/.rvm/rubies/ruby-2.4.1/bin/irb:11:in `<main>'
    2.4.1 :005 > client = Net::HTTP.new('slashdot.org',443)
     => #<Net::HTTP slashdot.org:443 open=false>
    2.4.1 :006 > client.start
     => #<Net::HTTP slashdot.org:443 open=true>
    2.4.1 :007 > client = Net::HTTP.new('cnn.com',443)
     => #<Net::HTTP cnn.com:443 open=false>
    2.4.1 :008 > client.open_timeout=1
     => 1
    2.4.1 :009 > client.start
    Net::OpenTimeout: execution expired
      from /Users/mdchaney/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:904:in `initialize'

It's starting to smell potentially like an SSL issue of some sort.  I should note that these I can access these urls just fine with curl or the web browser, it's only Ruby Net::HTTP that's having issues.

Update:
Not an SSL issue - I get the same behavior when trying port 80.",1524685685.0
in0pinatus,"I want pattern matching to simplify code. Recursive algorithms in particular might look cleaner. But I think it‚Äôd be more rubyish to use block-like syntax:

    res = [:ng, 500]
    case res
    when |:ng, status|
      p status
    end

Hopefully also firing imagination to make such blocks a first-class citizen to be passed around. Could be amazingly powerful for business rule production or abstract factories, who knows what else. Note that block/method argument syntax is already a powerful destructuring tool, and I only want one of those in Ruby. 

Furthermore (stretch goal) is it very far from here to multi-clause method declaration? Otherwise I forsee a lot of `def method(*args); case args; when pattern...`. Multi clause methods are something I miss from Erlang days when programming ruby.",1524630280.0
Morozzzko,"The issue title says ""Proper pattern matching"" and there's one thing I don't quite understand.

One of the main traits of a ""proper"" pattern matching is exhaustiveness. We need to match *all* possible patterns to *some* value. 

Given dynamic nature of Ruby, how is this going to work out? ",1524648358.0
keyslemur,"I've already written a very detailed reply in regards to this, but would greatly appreciate others feedback on this, including syntax suggestions and support.

Of course, dissent is welcome as well, I would prefer such an idea to be implemented as cleanly and effectively as possible

- baweaver",1524616974.0
keyslemur,"Just proposed a new variant syntax: https://bugs.ruby-lang.org/issues/14709#note-6

    match(value) do |m|
      m.when(/name/, 42) { |name, age| Person.new(name, age) }
      m.else { |object| raise ""Can't convert!"" }
    end

A practical usecase may be something like this:

    def get_url(url)
      Net::HTTP.get_response(URI(url)).then(&match do |m|
        m.when(Net::HTTPSuccess) { |response| response.body.size }
        m.else { |response| raise response.message }
      ))
    end

(Note this uses the accepted `then` alias for `yield_self`)",1524686203.0
39081098301,"1. What problem is this solving?
2. Why is it so important that it should be a ruby core feature?
3. Does the syntax benefit from this level of terseness, given that it looks more like perl than ruby?

I'm very concerned about how hard this is to read for such a narrow use case.  It does not seem to lend itself to well-encapsulated objects.",1524626895.0
jrochkind,"Good questions!  I'm not sure if there's a good guide to this somewhere?

Brew install ruby will give you whatever brew has as the latest version. Which is fine, except people often end up needing to develop under multiple versions of ruby for different apps, or for temporarily testing your app under the latest version etc. 

The other thing you ran into is that the default 'system-wide' ruby wants to put the gems in a place that you might need to `sudo` to install.  Which you can `sudo gem install...`, but then when you wind up using bundler, which we'll get to later, is a pain. 

So most people use a ruby ""version manager"". Which lets you have multiple versions of ruby installed, and switch between them easily -- as well as have a "".ruby-version"" file in a project directory, specifying a version of ruby to use automatically whenever you cd there. And another benefit, is that most version managers set things up so gems are located somewhere else you don't need sudo privs to install in. 

rbenv is a ruby version manager. I actually like `chruby`, which is even lighter weight than rbenv. Others like `rvm` which is... heavier weight. But rbenv is probably a fine place to start.

So `brew install rbenv` instead. Then `rbenv install 2.5.1` for instance. See the rbenv README for more. 

Yes, rubygems (`gem` command) comes with ruby these days. 

### bundler

Bundler is a dependency manager. It figures out exactly what versions of what dependencies (that is, gems) are needed for a given project, that are all compatible with each other and the project's specifications. It's kind of like `yarn` if you are familiar with that from JS world. (or rather yarn is kind of like it, since bundler came first).  Rubygems just installs gems, bundler figures out exactly what versions are needed for a given project, _and_ installs them (using rubygems, like yarm uses npm), _and_ make sure the right versions are activated when the app is run, _and_ records exactly what versions you are using in a `Gemfile.lock` file, so you can transport it elsewhere and still use exactly the same versions of everything.  (bundler is a newer project than rubygems itself, but years old at this point -- you don't _need_ to use bundler to run ruby, but most anything non-trivial will, because keeping track of your dependency versions is a pain without it.). 

### rake

Rake is described as ""ruby make"", but it's not usually used for compilation like we think of `make`, it's basically just a task runner that runs some tasks or operations defined by some project. If you're running `rake`, there will be a file called `Rakefile` probably in the directory you are in, which defines the operations that can be done -- although it may define them by loading other ruby files located elsewhere (such as in gems), so it may not obvious by looking at it what it does. But you can run `rake -T` to see what tasks are available. 

### where are gems?

Where the gems actually end up getting installed depends on your setup, you can run `gem which [some installed gem name]` to see where any particular gem is installed, the others will all be there too. Gems are installed ""system-wide"" (particular to the ruby version, and if you are using rbenv perhaps actually in your home dir, but still more or less ""global"").  There isn't really that local/global distinction, gems all go in the global gem place. 

### project-specific install of gems?

There are ways to use bundler to install and use gems installed in a project-specific directory instead, but most people don't do that -- except for deployment, where most people do. In general, you've got various versions of gems installed ""globally"", but for a particular project, when you use bundler it figures out what versions to use for the execution.  Just installing a newer version with `gem install` wont' make a bundler-using thing use the new version, you've got to use bundler to manage the versions. See bundler docs if/once you start using bundler. 

If you _aren't_ using bundler... the app might end up using the latest installed ""global"" version of a dependency, yeah. I would recommend using bundler even for a CLI thing, but it can be not entirely straightforward to figure out the most convenient way to do so, depending on the CLI thing. Cross that bridge when you come to it.

Hope this helps give you some orientation! ",1524617175.0
schneems,"Generally: don't run system Ruby. Use a version switcher. I like chruby, because it's really minimal. It doesn't even come with a tool to install rubies. I use `ruby-install` for that

```
$ brew install ruby-install chruby
```

Make sure you follow directions after

```
Add the following to the ~/.bash_profile or ~/.zshrc file:
  source /usr/local/opt/chruby/share/chruby/chruby.sh
```

Then when a new ruby version comes out you can install it with `ruby-install`:

```
$ ruby-install ruby 2.5.1
```

And then change to that ruby version with:

```
$ chruby 2.5.1
```

I agree with everything that /u/jrochkind said.
",1524628655.0
39081098301,"I wanted a simple configuration solution that wasn't integrated into rails, and was completely invisible to my objects. ",1524610129.0
ccb621,"Capistrano still works. One ideal to work toward is shipping a complete system (e.g. EC2 AMI or Docker image). Docker isn‚Äôt difficult to pick up, but it isn‚Äôt brain dead simple.

If you have the time, learn Docker. If you are under a time constraint, keep it simple and use Capistrano. ",1524610387.0
nanosplitter,Check out https://www.hatchbox.io - dead simple setup and deployments,1524611639.0
Mac-Hdz,"This is great. I was busting my head with problem that could really use these just the other day! I‚Äôm going to try it in my code and submit an issue, if encountered.",1524614889.0
,[deleted],1524623139.0
jrochkind,neat!,1524594390.0
stanislavb,"Great job. Thanks for sharing it. I will definitely use it and feel like it could make it into Rails some day. Who knows.

p.s. I've added it to ""Awesome Ruby"", too https://ruby.libhunt.com/",1524620451.0
some_guy_over_here,"Pretty cool gem dude.

My only comment would be that I feel like it would be more developer friendly to support a different syntax for your third example, so it could be easier to read when chained.

Maybe:
```
my_user.posts.where_assoc_count(5, :<=, :comments).old.by_admin
```

I'd think you'd only have to return the relation at the end of your #where_assoc_count method. Whaddaya think?",1524609046.0
realntl,"You might provide `with` and `without` aliases like `Post.with(:comments)` and `Post.without(:comments).where(is_spam: true)`

That said, I'm saying that but wondering if this isn't just a new layer of magic to continue confusing all of us...",1524624097.0
fedekun,"Why not just make a concern ""Commentable"" and implement ""with_comments"", ""without_comments"", and ""less_than_five_comments_by_admin"".

I think this is dangerous as it makes it even easier for the logic of the model to escape it's scope. It's very common to see scopes and complex conditions which belong to models, live in controllers, which should be avoided.

Not that I dislike this, but just pointing out, it's very easy to be misused",1524665157.0
Code-Master13,"This was very helpful and exactly what I was in need of, thank you ",1524592900.0
multiplegeorges,"A lot of old debunked arguments in here, along with a nice dose of clickbait-y hyperbole.

Use what you like and what works. ",1524569519.0
pedrozath,https://media.giphy.com/media/3o7aTskHEUdgCQAXde/giphy.gif,1524572692.0
jujubean67,Are we still complaining about the Rails way‚Ñ¢ in 2018? ,1524569386.0
zverok_kha,"Hey, interesting experiment on Ruby edges!

Just wanted to point out: https://github.com/baweaver/xf repo is currently detected as ""HTML"" (as a primary language) on GitHub, it may stay in the way of its discoverability.",1524586885.0
keyslemur,"Breaking this one up as it can get really really dense if I go much over 6 minutes an article.

1. Scopes - get / set a known path in a hash
2. Traces - get / set any matching path anywhere in a hash
3. Evolve - Specify a series of transformations to apply to a hash

http://ramdajs.com/docs/#evolve

Anyways, back to borrowing things I found that are fun in Haskell and Rambda!",1524555086.0
philnash,This is very cool and I'm already investigating adding it to my blog.,1524642791.0
sshaw_,"That makes sense.

Be aware there's a variety of acceptable URLs. See the `GIT URLS` section of `git help fetch`. 

I actually [just wrote some code](https://github.com/sshaw/git-link/blob/63dc5f485f6bba105065d875d0007e212301d283/git-link.el#L256-L277) to deal with this. It's in elisp though üòÅ.",1524524913.0
BurdetteLamar,"Thanks, all.

I'm thinking that on the whole, it'll be simpler to just have the caller provide the names of the repository user and project.",1524572788.0
jrochkind,"Much more basic and lower-level than the examples you're looking for, but Piotr's tty toolkit is pretty neat. https://piotrmurach.github.io/tty/

But it's not gonna do what you want, I think. 

I think maybe there just aren't a lot of people doing complicated curses-based UIs these days? At least in ruby?",1524517402.0
kawsper,"Don't think so, but with a bit of toying around it is a very rewarding experience to learn curses and using the ruby bindings for curses. It has rough edges, some things do not make a lot of sense, but it is a fun project.",1524518596.0
bitshivt,"If you don't mind the dependency on termbox, its API is simple enough that writing an FFI wrapper for it is fairly easy. I did that for a project I'm working on, but haven't released it yet.",1532758159.0
otikik,"I did a similar search some weeks ago and was in the same situation as you.

I will however point you to this project:

https://github.com/fdehau/tui-rs

And then point you to this other project:

https://github.com/steveklabnik/rust_example

Maybe that's all that you need (I have not tried it myself).

",1524513885.0
lostapathy,"Props to the Jekyll team for dropping support for EOL versions of Ruby.  

As a community, we spend way too much effort keeping everything compatible with old versions of Ruby, and it's a big drag on progress.",1524516853.0
Blimey85,Does anyone know why there are 60 pull requests currently? Some of these are old but some are quite recent. Should these be merged or rejected before working on 4.0? Probably a good reason why these remain open and I‚Äôm just missing something. ,1524527742.0
geraldbauer,"Hello, building (static) website, books, presentations, radio shows, and more with ruby? Let's make jekyll 4.0 better, faster, ....! Yes, you can! 

To quote Olivia Hugger (@dog_awoo),  the Jekyll Open Source Project Lead writes: 

> Now is a great time to finally take on the feature you‚Äôve wanted to see in Jekyll for ages! 
> Just open an issue or experiment with the code to get going!
>
> (Source: [Jekyll 4.0 is on the Horizon!](https://jekyllrb.com/news/2018/04/19/development-update/))

Happy Jekylling with Ruby and friends. Cheers. Prost.",1524509745.0
moomaka,"> But what if you need to distinguish between nil and no value being provided? 

Don't. What do you think `nil` means? If you're using `nil` for something other than 'not there', that is the code smell to remove. Adding a `NOT_THERE` constant doesn't fix the underlying issue.",1524535696.0
janko-m,"Man, this is what I always wanted! I'm sooo tired of always writing:


    result = RubyProf.profile do |result|
      # ...
    end
    RubyProf::CallStackPrinter.new(result).print(File.open(""ruby-prof.html"", ""w""))

Thanks so much for this!",1524511988.0
TheSmoke,"assuming you generated a jar or war file you can run your commands like:

    java -jar my.jar -S your command
    ;; example
    java -jar my.jar -S rails console",1524480617.0
moomaka,Attribute.,1524447245.0
wpg4665,Atter,1524447295.0
jrochkind,"If I call a gem `something_attr`, do you think that will be confusing?

What if there's already another gem called `something_attribute` or `something_attributes`? 

My motivation to use `attr` instead of `attribute(s)` is both because it's a lot shorter to type (presumaby why `attr_accessor` wasn't originally `attribute_accessor`), and because other(s) have already taken the names with ""attribute"" spelled out. :)",1524448201.0
sshaw_,Attribute,1524451305.0
colindean,"`At cher`, as if you were saying `attribute` but got cut off.",1524451902.0
otikik,"Like a pirate's ""arrrr"" but with a ""t"" in between: ""attrrrr""",1524476887.0
keyslemur,"Back again! This time with Xf, or Transform Functions.

The purpose behind this one was primarily to deal with deeply nested hashes in a bit of a more sane way, as well as add some nice features around it for manipulating Enumerable lists.

Working on ways to make scopes and traces composable later, and probably get evolution (think Rambda) added to it.

Short version, I got my hand caught in the Haskell cookie jar again and I wanted to bring some treats back.",1524440425.0
amit_savani,Can we use it over https://github.com/joshbuddy/jsonpath?,1524563056.0
TextileWasp,"It‚Äôs an unfortunate, non-idiomatic way of writing Ruby. The gist of it, is that it‚Äôs gonna loop until you reach the end node.

A sane approach would be to have the while before the return:

while (node.next) do
node = node.next
end
return node


Btw, this implementation falls flat on its face when doing find-tail with head=nil",1524438568.0
senj,"Translating this from postfix form to nested form will probably help. 

To do so, we proceed from the outermost inwards:

    return node if !node.next while (node = node.next)

becomes

    while (node = node.next) do
      return node if !node.next
    end

which can be further transformed into

    while (node = node.next) do
      if !node.next
        return node
      end
    end

So it iterates through the list, as you said. When there is not a next node, it returns it, as you said. But what should be more obvious now is that when there is a next node, it simply does nothing, because the if test is false, and there is no else. ",1524438839.0
jesus_castello,"Hi,

author of [the article](https://www.rubyguides.com/2017/08/ruby-linked-list/) here! Sorry that you found that line hard to understand, I was trying to make it as compact as possible.

Like other kind redditors already explained, the purpose of `node = node.next` is to advance the `next` node until it's `nil`. We do this because we want to append new nodes at the end of the list.

This it how it works:

First this calls `node.next`, which returns either the next `node` or `nil`. That value will be assigned to the variable `node` & the whole expression will be evaluated as truthy if it's not `nil`, which keeps the loop going.
",1524482481.0
flashbck,"That code isn't written very clearly:

    while (node = node.next) do
      return node if !node.next
    end",1524438771.0
EldritchSundae,"> `while (node = node.next)` is true whilst there is a next node

Not quite right‚Äîit's not doing a double-equals (`==`) equality comparison, it's just doing reassignment (`=`) for the next iteration. 

Take the full context:

    def find_tail
      node = @head

      return node if !node.next
      return node if !node.next while (node = node.next)
    end

It's traversing the list by returning the node it has (`return node`) if it has no next (`if !node.next`). Otherwise, it performs the same check on the current node's next (`while (node = node.next)`).

It's a little ugly because ruby has no `do...while` construct (where you always evaluate the code once before performing the check; the trailing format feels like it but isnt'), so instead you have to `do` it once yourself then `while` it.

However I believe this code is synonymous to the simpler form:

    def find_tail
      node = @head
      node = node.next until node.next.nil?
      return node
    end",1524439617.0
kmaicher,Tell Don't Ask is a _principle_. Not a pattern.,1524427996.0
secrets_meow,"is it just me or is there something self-contradictory in this: ""When you fail to abstract data into representational objects, then you get stuck with implementing the methods for the abstraction at every interaction of that object "" -- what object, the one you just didnt implement? ",1524494815.0
ignurant,"So far it sounds like you have some models and data, but nothing to act as the main ""driver"" of the show. In rails, consider that you use a ""controller"" to direct traffic: it's job is to interpret what must be done, and the models in play. In a command line app, you need the same thing. Create a new file called `cli.rb` (for command line interface) or `main.rb` and use that to direct the flow of interacting with these models. This file will be the main entry point into your application, and is in charge of understanding how to glue everything else together, so that your individual classes can specialize in their niche without needing to know much else about each other.",1524345792.0
Anne_Ominous1,"Divide your code into defined methods. You can use classes but you don't have to. So, for example:

    def rate_hash
        {:t_mobile => x, :verizon => y, ...}
    end

    def get_rate(service_name)
        rate_hash[service_name.to_sym]
    end

Or something like that. If you prefer classes, you could do it this way:

    class RateHash

        @@the_hash = {:t_mobile => x, :verizon => y, ...}

        def self.get_rate(service_name)
            @@the_hash[service_name.to_sym]
        end

    end

Then later in your code, just call (if you use methods):

    get_rate('t_mobile')

or for classes call

    RateHash.get_rate('t_mobile')

However, classes are very inefficient. They have a lot of overhead, so they consume memory and are slower than plain methods outside of classes. In a simple app, you probably won't notice the difference though.

To get user input, you can use the ARGV array.

If your main file is main.rb, and you run

    ruby main.rb  thing_one thing_two

then inside your program ARGV[0] is a string = 'thing_one' and ARGV[1] = 'thing_two'

If you absolutely must have interactive input, there is a good tutorial [here](https://learn.co/lessons/ruby-gets-input).


I hope that helps.


(I edited this to add the ""self."" because the way I wrote it above, it's a class method.)",1524349944.0
SurgioClemente,"> Using JWT for sessions will require developers to implement a custom authorization system on both server and client sides. 

To me that‚Äôs all the reason I need not to use or trust JWT for sessions

Developers are notoriously bad at custom security ",1524347468.0
in0pinatus,"JWT is a prime example of a well known phenomenon. When you already have a well-written, well-designed, robust, secure, standardised, reliable and widely used and recognised mechanism, one thing is certain: the JS (or more broadly, the browser making) community will roll their own incompatible, insecure, and malfunctioning replacement, and spend the next six months congratulating themselves on Medium.",1524369495.0
pachkovsky,So how is storing JWT in cookies is any different from good old Rails session?,1524341869.0
fedekun,"As a senior dev who makes bunch of pair programming interviews when the company is recruiting, I suggest writing something more complex than single-method challenges.

Maybe an API or simple app, like a shopping cart.",1524253686.0
isolatrum,Hi I scheduled for 11 am assuming its PST,1524292715.0
andygauge,That's actually a big problem.  They are a  501(c)(6) and that means the board needs to be operated by non-paid officials to avoid conflict of interest.  Page 6 (#4) of this document https://www.irs.gov/pub/irs-tege/eotopick03.pdf is a good reference of it.  ,1524253809.0
jrochkind,"uh-oh. 

> Largely the entire board of Ruby Together has churned a few times since the foundation was created, many of those people in protest of the direction Andr√© was taking the foundation

Seems like the board members who quit would have instead been more responsible to insist on a new person in the unpaid executive director role. 

> Do I have a solution? Well, I'm not calling for the disbanding of Ruby Together. I'm not even calling for Andr√© to step down. I do think it would be quite reasonable for the person who's making decisions about getting paid to not also be one of the people getting paid to work on open source. I would be OK with Andr√© getting paid to administrate the foundation. But when that money also funds his maintainership of Bundler, it represents a clear and unacceptable conflict of interest.

Agreed. It seems clear that the person acting in the 'executive director' role (paid or unpaid) should not also be the main person getting paid for development.  Completely independently of Andr√© personally, this seems like a conflict of interest that would _predictably_ lead to problems, no matter who was doing it. I think Andr√© has got to pick one or the other role. 

(As an analogy, when your ""product manager"" and your ""technical lead"" are the same person, it's not a good situation -- for reasons that aren't even about _financial_ interest in most cases, but just the importance of having both perspectives involved). ",1524243640.0
this_is_not_nil,"He wasn't kidding, wtf https://github.com/bundler/bundler/commit/524add155d6b90c679db21b03f0bd9f877f21ab0

DHH and Basecamp also withdrew funding: https://twitter.com/dhh/status/908001928625364992?lang=en",1524244473.0
i_know_sherman,"> As a general rule, originating authors and people who have been around for a while do not have their commit bits removed in our community.

Appeal to tradition. 

IMO, if someone does not use/need a commit bit, then it is responsible to remove it. Especially given the fact that bundler is a core piece of kit which many businesses use on a daily basis, and a hack puts customer's data at risk. 

It would be courteous to have communicated the need for revocation, but IMO the pros of removing an unnecessary commit bit far outweigh the cons.",1524275670.0
InCaseOfEmergency,"I hope people read the primary sources Sam linked. I did and I don't think they match his characterizations.

For example:

>Activities from Bundler leadership, paid by Ruby Together causing both [Rails](https://travis-ci.org/rails/rails/builds/319911098) and [RSpec](https://github.com/rspec/rspec-rails/pull/1935#issuecomment-354727624) to have broken builds

This seems to be saying that if changes in Bundler break builds, Ruby Together is at fault? ""Activities from Bundler leadership"" seems to be ""code was committed by"".

>Ignoring of [clearly reported](https://github.com/bundler/bundler/issues/6072#issuecomment-338287312) issues, that caused further breakage in Rails

I don't see anyone ignoring the issue. They couldn't repro the issue. It was fixed a couple months after it was reported.

Please read through the other links as well. Maybe you interpret them the way Sam does, maybe not.",1524262962.0
iconoclaus,"apart from being slower, web scraping is against the terms of service of many sites. i wouldn‚Äôt start building anything serious using it. ",1524327710.0
anh86,I'm very much a novice but I tried my hand and some of the easy challenges and found the website to be very helpful. I've bookmarked it and will come back once I know a little more.,1524246433.0
ThaBullfrog,"Just tried out a problem. It's a very well put together site. There's not much to complain about, but here's a few ways it could improve:

- Allow voting on the challenges and sort them by highest rated.
- The profile picture cropper is weird. The crop box could actually go outside the image. This made it difficult to just capture the whole image.
- I think my code's indentation was messed up. When I look at it under the solutions tab, the indentation is weird. I'm pretty sure it wasn't like that before submitting.",1524252033.0
real_fanpuns,"Thanks for sharing, these are fun :)

Just a nitpick, but I feel like you should tell users about implicit return in the first exercise, it makes it seem like they have to use the return keyword.",1524296509.0
,[deleted],1524245039.0
flipkitty,"Cool! Now in Rails you could replace this raw-ish SQL:

    Subreddits.where('created_at > ?', 1.year.ago)

with a nice hash-conditional:

    Subreddits.where(created_at: (1.year.ago..))

Although, now that I look at that I kind of hate it...
",1524200048.0
in0pinatus,"I‚Äôve wanted this for years, particularly for date ranges in business apps. Hooray!",1524380244.0
nakilon,Pretty much useless because you could already do `0.step`: https://stackoverflow.com/a/38971822/322020,1524749676.0
juliantrueflynn,"I just had a friend explain this to me. Turns out just a lot of the guides I'm using were under the assumption the programmer would be using dev servers, which is the reason for separate ports.

It's fine in this situation to have it running off the same port. I was just unfamiliar to the process for dev servers here.

Someone please correct me if I'm wrong though.",1524165520.0
glubi,"I think a better direction for `NoMethodError: undefined method '[]' for nil:NilClass` would be to consider type safety when coding. You could coerce nils into empty arrays and guarantee that `#map` won't raise an exception for a response that is expected, or you could raise exceptions when you expect some variables to have a certain value and they're nil instead. For me, when I encounter this error I feel like this is a lesson for me in type checking. I try to ask myself what wrong assumptions I've made about the data, and how can I better expect those next time.",1524171504.0
Serializedrequests,"This does not address my InvalidAuthenticityToken problems at all. I'm finding that Rails 5.1 changed things such that my users are hitting the error much more during normal use, just by using the back button or accessing a stale page that they've had open for a long time. It is a real usability issue that Rails doesn't acknowledge or offer a solution for.",1524233603.0
dogweather,"IMO the article highlights a problem when using Ruby for application programming instead of scripting: The easy thing is not the safe thing. And so there's a list of programming practices to remember when coding Ruby to get more reliability.

One tiny example: The API for a hash (""dict"") is exactly the opposite of Ruby. In Python, the `[]` function will raise an exception if the key isn't found. There is a non-safe, silently fail option which returns a nil, but it's more work - a method call similar to `fetch`. And so it's rarely used. Interesting, isn't it?",1524220109.0
dogweather,"I have a blog outline for it. :-) I‚Äôll write it up and send you a link. 
",1524316157.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/github] [Gem markdown\_helper CLI](https://www.reddit.com/r/github/comments/8dfaxk/gem_markdown_helper_cli/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1524150403.0
ffzeal,"It really depends on how you plan to use your `Feed`class. If it is the necessary part of a feed instance, I would pass it in the initialize method with an interface like: `feed = Feed.new(logs)` where logs is the array of log items.

If you need one feed instance to potentially switch out and change from time to time, you can certainly use attr_writer.

It really depends on what pattern of use you are coding for, but in general I find that I tend to make my objects as immutable (few public readers and writers) as possible.",1524114869.0
tom_dalling,"I don't think there is a preferred way. It depends on the situation.

If the `Feed` object needs the array for its whole lifetime, then pass it in to the constructor (`initialize`). If the array is not needed for the whole lifetime, then pass it in as an argument to a method. I almost never use `attr_writer` for this, but plenty of people do, and it would work for this situation.",1524137542.0
kobaltzz,"I've always liked the System76 laptops, but they're a bit expensive.

I recently picked up a Dell laptop from Costco when it was on sale. Similar specs as the 14"" laptop, but cost $700 vs System76's $1400. You can install any OS including Ubuntu on these.

However, from ever Windows laptop that I've owned in the past, the one major annoyance has always been the trackpad. None of them that I've ever had could even come close in comparison with Apple's. Even though the internal CPU/RAM/SSDs are similar to other laptops, the finishing touches on Macs are still the best out there IMHO.

Over time, you will be just as functional if you were on Ubuntu or MacOS. If pricing is a major concern, I'd go with a similar spec Dell (or equivalent) and install the OS I want on there. If price and immediate productivity is a concern, go with a system76. If money is less of a concern, go with the Apple.",1524093540.0
Blimey85,"Dell isn‚Äôt the same brand as they used to be. They once made rock solid machines but that doesn‚Äôt seem to be the case anymore. I buy Apple hardware because it just works and it‚Äôs problem free.

I could go through the issues I‚Äôve had with Dell, as well as people I know but you can Google and find all sorts of stuff. A $3K laptop should not have multiple screen issues across multiple machines nor should a $1500 all-in-one have a power button failure when it can‚Äôt be replaced because it‚Äôs permanently attached to the motherboard.

My advice is to buy used or refurbished Apple. I sold a 3 1/2 year old early-2013 MacBook Pro for $1200 and it ran like the day I bought it. I just didn‚Äôt need it anymore. Apple machines really last and you can get a great machine pretty cheap.

That said, Ubuntu is great. I use it for servers and haven‚Äôt had any issues. It uses apt which is similar to brew on Mac. The main drawback is no access to things like Office, Photoshop, etc but if you don‚Äôt need any of those you‚Äôll be fine. ",1524099252.0
YoshiRulz,Because the previous comments missed it: terminal emulator that comes installed by default (GNOME terminal) has all the same functionality and the Ubuntu package manager is Aptitude.,1524110374.0
paneq,"For development ubuntu is good enough. apt-get, rbenv/rvm, chrome/firefox, rubymine/vim and you are rolling. I've been using it for 6years without issues. If you need MacOS depends on what are the other usecases you use machines for.

I am happy I switched to MacOS even thought it is 2-3x more expensive.",1524128735.0
gettalong,"> Alternatives for home brew for Linux? 

:-) Funny when you know that package management in Linux started somewhen in 1994/95.

Package management in Linux is first-class as compared to macOS where it is only second-class (first-class being the ""macOS way"").

As for terminals: You can choose from a variety of terminal application, Gnome Terminal being the standard one on Gnome and XFCE, konsole on KDE. But there are others like rxvt or the simple xterm. Regardless of the terminal I suggest using [tmux](https://github.com/tmux/tmux) (`sudo apt install tmux`) as terminal multiplexer if you're not using it yet.

Speaking of DEs (desktop environments): If you are familiar with macOS, you should probably start with Gnome since it is the DE most similar to macOS' appearance and usability (i.e. most things work out of the box, very few things can easily be customized, the rest needs special tools) and since Ubuntu 17.10 the standard for Ubuntu. If you want a *very* configurable desktop, use KDE/Plasma (and install Kubuntu, not Ubuntu), although it is a bit more heavyweight (I currently use KDE/Plasma).

If you need anything else, just ask - I'm using Linux since 2000 (with a short 2-year OS X interlude in 2008).",1524157681.0
Mike_Enders,Good step forward but the number one news I want to hear is that we can start testing that bad boy on full featured rails apps  (activerecord etc).  Hope it comes this year  and the same for a Crystal 1.0 release.  then things will get very interesting,1524090377.0
this_is_not_nil,"Oracle legal standing in the way of progress, what a surprise. It is the same bullshit with their JDK when you have to install it on your servers. It leads me away from Java, so I hope they are happy.

I am glad that TruffleRuby found a way, I hope they can use it for other software.",1524085310.0
ylluminate,"Note /u/chrisgseaton's example in the link above:

    $ wget https://github.com/oracle/graal/releases/download/vm-1.0.0-rc1/graalvm-ce-1.0.0-rc1-linux-amd64.tar.gz
    $ tar -zxf graalvm-ce-1.0.0-rc1-linux-amd64.tar.gz
    $ export PATH=graalvm-1.0.0-rc1/bin:$PATH
    $ gu install -c org.graalvm.ruby
    $ ruby --version
    truffleruby 1.0.0-rc1, like ruby 2.3.7 <native build with Graal> [x86_64-linux]",1524081411.0
in0pinatus,"Super mixed feelings about keyword struct declarations. Useful? yes. Ugly? I think so, that `keyword_init: true` sticks on the end of each such declaration like a dangling appendage. Why couldn't it have been `Struct.of(:name, :size, :colour)`.

Also I still wish `yield_self { ... }` had been `block_chain { ... }`",1524119041.0
jrochkind,"**SOLVED SOLVED SOLVED**

Thank you reddit and especially /u/moomaka. 

I used moomaka's recipe with a few mods. 

* Indeed I did not need `sudo: required` in the travis, I went back to `sudo: false`. (I _do_ have `--no-sandbox` as a chrome option, it's _possible_ you don't need that if you do `sudo: required`).  

* I did add a `dist: trusty` to the .travis.yml, because travis docs suggested it might be necessary. I _think_ this is the default dist anyway, but doesn't hurt. 

* I did not need to set a specific chromedriver version after all, unset it works. 

My stuff is open source, so I can show it to you and future lost souls who come across this. 

Commit that sets it up (nor merged into master yet, sorry a bunch of errant cache file removals made it into the commit too, and I'm not gonna try to clean up the commit right now): https://github.com/jrochkind/json_attribute/pull/14/commits/ef608b94aa63fcfd202f0855c2471be15659b2fa

Succesful travis build: https://travis-ci.org/jrochkind/json_attribute/builds/368332700",1524083090.0
moomaka,"There are several issues with chrome on travis. Most notably their container infrastructure seems to have issues with recent Chrome's sandboxing system. Here is the config I use, which has some extra stuff in it to get downloads working in headless chrome. You'll probably have to adapt the downloads related bits for your use case since I've not included the source of `DownloadHelper` here.

    require 'selenium/webdriver'

    Capybara.default_wait_time = 5

    Capybara.register_driver :chrome do |app|
      Capybara::Selenium::Driver.new(app, browser: :chrome)
    end

    Capybara.register_driver :headless_chrome do |app|
      options = Selenium::WebDriver::Chrome::Options.new

      options.add_argument('--headless')
      options.add_argument('--no-sandbox')
      options.add_argument('--disable-popup-blocking')
      options.add_argument('--window-size=1366,768')

      options.add_preference(:download, directory_upgrade: true,
                             prompt_for_download: false,
                             default_directory: DownloadHelper::PATH.to_s)

      options.add_preference(:browser, set_download_behavior: { behavior: 'allow' })

      driver = Capybara::Selenium::Driver.new(app, browser: :chrome, options: options)

      bridge = driver.browser.send(:bridge)

      path = '/session/:session_id/chromium/send_command'
      path[':session_id'] = bridge.session_id

      bridge.http.call(:post, path, cmd: 'Page.setDownloadBehavior',
                       params: {
                           behavior: 'allow',
                           downloadPath: DownloadHelper::PATH.to_s
                       })

      driver
    end

    Capybara.javascript_driver = :headless_chrome


And in .travis.yml you need these two settings, the switch to the non-container infrastructure may not be required with the `--no-sandbox` flag in the chrome config. I need it for other reasons so can't easily test at this point:

    sudo: required
    addons:
      chrome: stable


",1524074706.0
aitbw,"Recently, I undertook a migration from `PhantomJS/Poltergeist` to `Headless Chrome/Selenium` on a project I work on (Rails 4.2 but we're currently migrating to Rails 5 and everything has gone smooth so far) and faced similar issues.

I finally got Travis to work with said tools by adding this to my `.travis.yml` file:

    before_script:
    - wget -N https://chromedriver.storage.googleapis.com/2.36/chromedriver_linux64.zip -P ~/
    - unzip ~/chromedriver_linux64.zip -d ~/
    - rm ~/chromedriver_linux64.zip
    - sudo mv -f ~/chromedriver /usr/local/share/

You also need to add `chrome: stable` under the `addons` section.

As a recommendation, I'd avoid using `chromedriver-helper` since (at least for us), adding it to our Gemfile usually broke Travis and none of our tests would run.

EDIT: Wording",1524075330.0
grzesiek,Our specs got much more stable when we changed feature specs into system specs. Maybe that would help?,1524077767.0
BEHOLD_MY_CUP,"I'm having a hard time getting Travis to get mouse and keyboard events that work locally.  Anything that uses native.send_keys() or even a .hover doesn't work in Travis.  I've followed their directions and have xvfb running, but still no dice.",1524106181.0
FooBarWidget,"I ran into the same problem today and I blogged about it. My case is a bit different from yours: I'm running on GitLab CI with the Docker executor. So my cause may be different from yours, but maybe this information will prove useful to you some day, or to others reading this thread.

[Running Chrome Headless, Selenium and Capybara inside GitLab CI and Docker](https://blog.phusion.nl/2018/05/24/using-chrome-headless-selenium-and-capybara-inside-gitlab-runner-and-docker/)

TLDR: Chrome Headless does not run in Docker due to its sandboxing feature trying to use Linux namespaces, which is not allowed in an unprivileged Docker container. Running Chrome with \-\-no\-sandbox solved it.",1527173759.0
jrochkind,"Thank you BigBinary for the super useful and well-written/researched ""changes in ruby"" ongoing series! 

This one is especially awesome, thanks! ",1524067379.0
weedisallIlike,Nice article!,1524099088.0
ioquatix,"`report_on_exception` is a welcome change, given that without it, exceptions in threads are silently ignored, which I've personally found pretty frustrating at times when trying to debug multiple threads in Ruby.",1524101624.0
pedrozath,"Excellent talk, thanks for sharing!",1524138746.0
iconoclaus,"fantastic talk.  good reminder to move beyond refactoring and make this a real people-to-people tool. not quite sold on how to do event-storming, but that means i should read more about it next.

that said, it does seem like lots of people approaching this in different ways.  this talk gave marco's mish-mash of favored techniques.  i'd love to hear other strategies and combinations of communication and modeling tools.",1524476470.0
iconoclaus,"Does this work like Faye, where you‚Äôd POST to the server to have it broadcast messages to clients?",1524067131.0
iconoclaus,"I used Sinatra for several years, but I‚Äôd personally pick Roda over Sinatra at this point. Better routing system, more performant, modular plugin system.  And comes from the creator of Sequel, who also made Rodauth (arguably the best auth package for Ruby).",1524067010.0
nyxthebanshee,The timing of this is rather eerie. I was just dwelling on this idea yesterday evening. Saving.,1524062153.0
The538People,Great! Benchmarks of TruffleRuby vs JRuby vs Ruby looks very promising.,1524074616.0
in0pinatus,is this much different to the built-in [`composed_of`](http://api.rubyonrails.org/classes/ActiveRecord/Aggregations/ClassMethods.html) ? it looks very similar on the face of it: value objects for ActiveRecord by declaration of DB column mappings to a PORO.,1524008123.0
jrochkind,"I'm working on something (in progress) that can be used for similar purposes, but more general purposes too, serializing everything inside a postgres jsonb column instead of separate columns. 

https://github.com/jrochkind/json_attribute",1524018979.0
jonvillage,I've created this gem to provide a better way to create value objects from active records model. Please I want to know what's your opinion about it! Any feedback or idea to improve is greatly appreciated.,1524004876.0
jrochkind,So you starting a business then?,1523997956.0
nakilon,"Didn't really use to make PDFs a lot but I tried wkhtmltopdf -- the only problem was the ""unpredictable"" page size depending on OS. Maybe it is already fixed somehow, idk, it was 1.5 years ago.",1524027142.0
nakilon,https://i.imgur.com/Jke5C0M.png -- such diagram is absolute misleading shit. Just publish the numbers ffs.,1523996670.0
BoWild,Does this mean I should stop maintaining the CombinePDF gem?,1524011073.0
nothingbutt,"[WeasyPrint](http://weasyprint.org/) is not popular but I found it to work well. I've been considering moving off of wkhmtltopdf to it as wkhtmltopdf doesn't have a big team backing it (take a look at how overwhelmed the github is with issues -- I feel sorry for the maintainer).

The interesting thing about WeasyPrint is that they really pay attention to the CSS standards and aim to implement the standards. Perhaps on their own timeline as it can happen but that is the goal. That is admirable but it also works fairly well now.

For my usage, I was able to get more control over the rendering process and found it to be a win over wkhtmltopdf. The only reason I haven't switched is I tried it in order to complete a report for a perspective client but that fell through. The existing wkhtmltopdf work is fine so not in a rush to swap it out (always something else to work on).",1524024757.0
henrebotha,"Please install Rubocop, run it, and fix every warning it gives you.

Use proper logging, not `puts`.

Please put an empty line between method definitions. And in general, use some empty lines to break up your code; it's very hard to follow when you don't use ""paragraphs"".

    (feedparse.entries.first).respond_to?(:guid)

The parens around `(feedparse.entries.first)` are unnecessary.

        samplefeed_hsh = {""global""=>""some global setting"", ""preferrence""=>""some preference""}

It's better to use symbols as hash keys unless you really need strings. That then also means you can use the new hash syntax: `{ global: ""some global setting"", preference: ""some preference"" }`

",1523970417.0
plasticide,"At the top of your file, you are requiring some gems. I would suggest adding a Gemfile to your directory. You can do this by running bundle init. If that doesn't work, you can run gem install bundler. This will allow you to describe all of the gems that your projects will use. By running bundle install, you can then lock down the versions of gems that you use. That also allows others to more easily run your program on their own system. You can then run bundle exec ruby \<myfile.rb\> and ensure that the gems you require in your code are the ones you expect.

From an OO perspective, I would say that your one Podcasts class has too much responsibility. It has to know how to do a lot of things. It has to know how to download things, create directories, configure where to put things, parse feeds, etc.

What if you broke each of those responsibilities out into a separate class? For example: 

    parsed_feed = FeedParser.new(uri).parse
    Downloader.new(parsed_feed).download

 etc. Then you would have Single Responsibility \(which is the first principle in [SOLID](https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)) design\). And then your objects could collaborate together to achieve your goal.",1523971399.0
to_thy_macintosh,"*Disclaimer: I don't consider myself an expert on best practice in OOP, Ruby, or anything for that matter, so I would really like other commenters to give feedback (positive, negative, or neutral) on the opinions following.*

*Also note: others have given good stylistic advice but I'll just restrict myself to specifically OO matters, as that's what you've asked for. Although, the width of the lines made it pretty hard to read, not sure if that's GitHub's fault though. Also, including a real-data @feed_hsh or .yml would be useful but I still got the gist.*

*Another note: I've had a lot of coffee, so I've added tl;drs headings in my wall of text to try to break if up (the irony, considering my advice, is not lost on me).*

tl:dr; OOP is really about relationships between multiple objects
----
I don't know if you're planning on using this object elsewhere, but having one object in OOP is basically procedural programming with extra steps (although you've said it's just for practice so maybe you *intended* to restrict yourself to a single object). OOP is really about helping you to model the *relationships between objects* (physical or conceptual). If you only have one object, you're not really doing that, especially if you only have one copy of that object. 

tl:dr; your hashes are objects in disguise, break them out into their own classes
---
As other commenters have pointed out, you could break this class apart into many classes. Basically any hash (incl. the hashes inside the hashes) can instead be a class. I would say you could definitely make a Feed class (and keep them in an array). You could move most of the content of #getdown into a method in that class. You could definitely put #parse entirely within the class. Maybe pass the base save folder when constructing the Feed, and then it could just save itself.

That's all I've got time to blurt out for the moment. I hope there's something helpful in there (and hope even more there's not something erroneous, or misleading haha).



",1523975587.0
cjmzi,Maybe u made too big methods or complex? I think...,1523969870.0
phaul21,"what you are doing here

    array_second = <<-RUBY
    def second
       self[1]
    end
    RUBY

    a = [1, 2, 3]
    a.instance_eval(array_second)

is adding methods to the singleton class of object a. A lot more idiomatic way of doing this is simply saying

    a = [1, 2, 3]
    def a.second
      self[1]
    end

which is exactly the same process as defining singleton methods for a class with def self.something (when self is the class) aka class methods.
   ",1523960477.0
jrochkind,"I have never heard the phrase ""inner variable"" before. Do you mean ""instance variable""?",1523985706.0
jawdirk,"Use the return value of the method. Return the node when it is found, otherwise return nil. Don't invoke the method again if you get the node from the return value, just immediately return it since it's found.",1523946601.0
400921FB54442D18,"The answer from /u/jawdirk is correct, but here's an expanded look at why, in case anyone's interested.

Let's say your target is somewhere down the left edge of your tree, and you're looking at the root node. You get to the following block:

    if currentNode.left != nil
      depth_first_search(target, currentNode.left)
    end

Well, there _is_ a left-hand node, so you'll call `depth_first_search` on it. And since we've assumed that the target is somewhere on the left-hand edge, then at some point, many layers of recursion later, the search will find the target, and print out a ""Found"" message:

    if currentNode.value == target
      puts ""Found target (#{target}) at node: #{currentNode}\n\n""
      return

Ok, great. So we return nil from `depth_first_search(target, currentNode.left)`. Then what happens after we leave that block?

    if currentNode.right != nil
      depth_first_search(target, currentNode.right)
    end

Well, there _is_ a right-hand node. We've already found the target on the left edge, but there _is_ a right-hand node. So we're going to call `depth_first_search` again on that. This search will invariably fail, because the target was already found! And eventually it will run out of nodes and print out your ""Not Found"" message.",1523975400.0
Michael_Perth_50,formatting ew ew ew,1523943182.0
Jdonavan,"Your description code don't line up.  You're just writing the contents of malware.txt to f4.  

malware_lines = File.readlines('malware.txt')

ml = malware_lines.uniq

a = ml

f4.write(a)",1523933937.0
hartator,File#write expects a string not an array. ,1523976176.0
Jdonavan,"Are you strictly dealing with text?  If not you should be opening your files with 'b' as well as 'w' or 'r'.  That *might* do some sort of funky conversions when you write it as text, I'm not sure.

f2.write(""#{data2}"") should just be f2.write(data2)
",1523987349.0
jawdirk,"Ruby has several ways of making a variable.

    name = gets.chomp.capitalize

Here, ""name"" is what is called a ""local variable."" As you might imagine, it can only be used in the place where you make it, that is, locally.

When you make a method with 'def start' you have made another place, where your old 'name' variable isn't available.

Try this code:

    number = 1  # local variable, available only locally, in this namespace.
    def two
      number = 2
      number
    end
    puts two  # 2
    # two didn't mess up our old number because it was a different namespace.
    puts number  # 1

    def three
      @number = 3 # instance variables work the same as local variables
      @number
    end
    puts three  # 3
    def four
      @four = three + 1 # methods are available everywhere in the object
      @four
    end

    def five
      puts @four
      @four + 1 # instance variables are also available everywhere in the object.
    end
    puts five  # an empty line, and then NoMethodError: undefined method `+' for nil:NilClass
    puts four  # 4
    puts five  # 4
               # 5

      
",1523943449.0
jrochkind,i think you're overthinking it. ,1523918385.0
ccb621,"Don't test migrations. Test the model. Also, you don't have to use TDD all the time. The important outcome is that you actually write tests. When you write them doesn't matter.",1523920041.0
erikperik,"Because Ruby 2.5 was segfaulting a lot on Rails I decided to start migrating to Rails 5.2 during the weekend. I was surprised to see a lot of broken gems. Also, I saddened by the fact that when checking the Github Issues of these gems, these problems were known for a while and not fixed. I've so far made 3 pull requests on different repos and no comments on anyone yet. 

I know people are very busy, and the hard work is often done for free, I don't want to come off as complaing about that. But there does seem to be a lack of being to communicate with the authors/maintainers of gems. ",1523953685.0
Paradox,Why not just use [GNU/Parallel](https://www.gnu.org/software/parallel/),1523899524.0
zverok_kha,"Your deserialization code produces an instance of `Hangman` class, not ""naked"" hash object. It has `@correct_guesses` instance variable, as `p` shows, but no `[]` method that you are trying to use. ",1523890480.0
samnissen,Probably best to ask on StackOverflow,1523879211.0
jrochkind,"> The security patches are no longer applied to the Rails 5.0.Z series.

Actually they revised their security policy last week apparently after this was written (but before today when it was released?)

Patches for severe security problems are still included with 5.0 releases. (Thanks rails team!) 

https://github.com/rails/rails/commit/22b0a302156027291e9e44897d9e49f01ab07908

""severe"" problems only. ",1523888730.0
californializardking,LOTS should stand for ‚ÄúLord of the Strings‚Äù,1523841754.0
JerkMeSlowly,"I‚Äôve been working on a CYOA as my first big coding project, and I‚Äôm really glad this was posted. Looking through other‚Äôs code has taught me a lot of different options and capabilities that are making my progress a lot smoother. I‚Äôm looking forward to scouring the code for this and seeing so many new ways of doing things.",1523853788.0
iconoclaus,"I love it!  I would spend endless hours making games like this when i first learned to code.  I remember I'd get so far into yak shaving of level and character editors that I'd almost get sidetracked from ever making the game.  I'd love to make something like LOTS today and see what i've learned since then.  Here's challenge for myself:  could I make a text-based game like LOTS, and make the interface swappable with a Gosu based 2d engine? It would require extend what I've learned about software architecture in a more interesting way than web apps.",1523865324.0
editor_of_the_beast,"Here‚Äôs the code for the well known [Rails tutorial](https://github.com/mhartl/sample_app) by Michael Hartl. Here‚Äôs the [actual tutorial](https://www.railstutorial.org). It says the code is out of date and idk if you need to pay for it now or something. But you probably can compare the old version of the code to the new book.

The benefit of this sample app is that the tutorial is extremely in depth and you can read about the reasoning behind certain code decisions if you want.",1523823734.0
rousseau_alexandre,"You can check https://github.com/tomatoes-app/tomatoes, it's a simple Poodore Technique application  with sign-in using omniauth for Github.com authentification and a Monaco database",1523825761.0
robertross,"Its not the entirety, but Ive been building a Rails app from scratch and recording the whole thing. You might find it useful! 

https://blindside.io/classroom/let-s-build-firehydrant-io/welcome",1523847590.0
mike123442,"I‚Äôve found codetriage to be high quality code, and small enough to easily understand. 

https://github.com/codetriage/codetriage",1523863925.0
,"https://launchschool.com/blog/integrating-rails-and-bootstrap-part-1/

This is one I've used in the past.  It was pretty easy to setup and is free.  Good luck!  Learnrubythehardway is also good if you're just getting into ruby, but it's a little tedious if you already know how to program.",1523897461.0
,"According to the description it'll be great until you want to work past ruby 1.9

",1523808501.0
SuisseYama,Apple (#3) has several job postings for Ruby/Rails. https://jobs.apple.com/us/search?#&ss=Ruby%20on%20rails&t=0&so=&lo=0*USA&pN=0&openJobId=113160599,1523812219.0
olbrich,Mckesson (#5) uses rails for a couple of customer facing applications. We also use chef.,1523800404.0
rubygeek,"I work for a VC, and use Ruby for devops, as well as for web services.

No Rails - some Sinatra.
",1523811567.0
moderately-extremist,"Of topic, but why using both Chef and Puppet?  Why not just do all your configuration management in one?  Are there certain things that each one does better that makes it worth keeping two configuration managers around?  Or is it some departments just have a preference for one vs the other?",1523817166.0
soda-popper,"XING AG, listed in the TecDAX, is mostly Ruby and Rails: https://www.finanzen.net/aktien/XING-Aktie ",1523810465.0
polarpress,I was using Ruby / Rails when the current company I'm at was at one time fully owned by AT&T. ,1523800595.0
JohnBooty,"Not Fortune 500, but $500mil/year revenue on a steady upward trajectory for well over a decade. Home improvement/remodeling industry.

Our enterprise-y monolith is Ruby on Rails. We manage servers with Puppet, but that is on its way out for us. 

Lots of good things about Puppet but what we *don't* like about Puppet is having all of the Puppet config stuff in one repo managed by operations, while all of the application code is in another repo managed by developers. We have a devops team to bridge the gap so they're not *entirely* two separate worlds or anything but it's not ideal.

We're moving to a model where our build process spits out Docker images that contain both code and configuration. We'll probably be there by the end of the year.

",1523828429.0
capn_sanjuro,"Financial Services reporting in. We're using a ton of ruby. Rails, Roda or Sinatra for our user facing and internal framework needs. In addition, we are taking advantage of the intuitive syntax and using ruby as a lingua franca for our cross discipline training sessions.",1523831361.0
Rogem002,"I worked for Centura Energy, they used a big mix of tech (Best tool for whatever they were doing at the time) but Ruby was in there. ",1523817309.0
Oranges13,I'm not fortune 500 but we're a pretty big craft brewery and our distribution portal is written in Ruby (Padrino specifically),1523827301.0
d_impious,"I think Jeremy Evans latest presentantion fits here:

http://code.jeremyevans.net/presentations/isleofruby2018/index.html#1

It's about using ruby in production, not forutne500 though.",1523882618.0
ajackfox,"We use whatever tool is best for the job -- there's definitely a good amount of ruby (and rails), particularly with greenfield apps.",1523820705.0
joerod,"I work for a private company, we use Ruby for Chef.",1523821515.0
rwilcox,"Don‚Äôt work there, but Bloomberg uses Ruby and/or Rails, to tell from their job postings...",1523835117.0
xaviarrob,"Not fortune 500, but not a startup by any means. We use ruby as our main scripting language for most devops tools (deployments, general automation, for things in our ci/CD pipelines, etc) and for chef obviously which we use for configuration management on our whole stack",1523843356.0
classhero,Fortune 500. Ruby for Infrastructure-as-Code (not chef/puppet).,1523843913.0
keyslemur,"Decided to write a post about how some of the tricks and ""magic"" in Qo work behind the scenes. If you really want to learn more about it, take a look at the source code and tests. I've tried to keep everything thoroughly documented.

Give Qo a try, let me know what you think: https://github.com/baweaver/qo",1523768317.0
fedekun,"This looks good! Just something I want to point out, you shouldn't need to write many `case` or conditional statements if using proper OOP, that's more suited for Functional Languages.

In OOP inheritance (including things like Null Objects) and factories (convention-over-configuration a la Rails) are preferred over conditionals.

Of course, Ruby being awesome, it doesn't get in the way and just lets you use it any way you like.",1523855757.0
MagicalVagina,"In ruby only nil and false are falsy values. Everything else is a truthy value. So it's common to return something in a Boolean like function.  
But a method called authenticate should return an user anyway. A method called valid_password?() could return a Boolean.",1523757628.0
in0pinatus,"It's a common idiom and makes the [null object pattern](https://www.youtube.com/watch?v=29MAL8pJImQ) easy to use via short-circuit evaluation, as in

    class User
      has_secure_password
      #...
      def self.identify(username, password)
        find_by(username)&.authenticate(password) || NullUser.new
      end
    end

**warning** for those who like to roll their own authentication: the above code is intended as a simplified example. In production it would be vulnerable to timing attacks to enumerate usernames.",1523757590.0
mapimopi,"You can end a line with a `\` to tell ruby there's something coming on the next line. So this would work:

    foo(
      ""b"" \
      + ""a"" \
      + ""r""
    )",1523765686.0
pnomolos,"I‚Äôm not at a computer right now so I can‚Äôt verify the behaviour, but my guess is that with your helper variable example you‚Äôre only calling `foo` with `‚Äùb‚Äù`.  The reason that helper variable syntax works is because `+` is a unary operator - the ruby interpreter actually sees three distinct operations in that example - an assignment (of `‚Äùb‚Äù` to `_`) and two unary operations.

The reason it doesn‚Äôt work inside the function call is because for a given argument you can only pass a single operation :) 

The reason the example with the `+` signs following the characters work is because they can only be interpreted as binary operations there.",1523759520.0
NoobPwnr,"I can't provide the ""technical"" reason, but take the two examples:

    def foo
      true &&
      true &&
      true
    end

    def foo
       true
       && true
       && true
    end

The first example works fine. The second borks.

In short, the first works because the lines end in `&&`s, which tells the interpreter that a new line will follow. In the second, the lines end in `true`, so the interpreter thinks the statement is ending.

Or something like that. But you get the point hopefully.",1523762839.0
pedrozath,"@pmurach I'm a great admirer of your work in these terminal gems, thanks for sharing. I may be using this one in my gem soon (http://github.com/pedrozath/coltrane).",1523757466.0
gettalong,"You might not want to use RubyDoc.info if you care about how your API documentation is viewed. Better provide an explicitly generated API documentation where you can control all aspects.

For the same reason you might also want to use a website for your gem's general documentation, and not Github's Readme page. If you don't have any webspace, use Github's free web hosting facilities where you can push your HTML/CSS/JS/... files, or use the integrated Jekyll.",1523712351.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/documentation] [Gem Documentation](https://www.reddit.com/r/documentation/comments/8c7njg/gem_documentation/)

- [/r/github] [Gem Documentation](https://www.reddit.com/r/github/comments/8c7gqr/gem_documentation/)

- [/r/markdown] [Gem Documentation](https://www.reddit.com/r/Markdown/comments/8c7kt0/gem_documentation/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1523711871.0
sshaw_,"> The gemspec must specify any additional markdown file that's needed.

Why is this a complication?


> Is there a reason not to just set the gem's documentation URL to the README.md over at the GitHub project?

It depends what is documented and who your audience is. 

For methods it's important to document the method's signature: arguments, return values, exceptions. If the method accepts a `Hash` of options, those should be documented, etc...

RDoc and RubyDoc.info make this easier to for users to consume than a README.

GitHub Flavored Markdown (GFM) supports Markdown based tables and of course HTML can be added, but not everyone will use GitHub to view the docs or have/want to turn your HTML/GFM laced README into something digestible (though [Ocotdown](https://github.com/ianks/octodown) is nice üòâ).

If you're documenting commands, config options, or even a small set of methods whose usage is simple enough to describe via an example then a README can work. 

Also note that RubyDoc.info uses [YARD](http://www.yardoc.org/), which does not support all RDoc directives. Most notably `:nodoc:`. 

 
",1523718646.0
AlexWayfer,"Hello!

Look, links from Google:

1. https://github.com/gosu/gosu/wiki/ruby-tutorial
2. http://dreamingechoes.github.io/game/gosu/ruby/become-a-videogame-developer-master-with-gosu-and-ruby/",1523696649.0
zaphnod,"Sorta.

In Ruby, a method is always implied to be called against self.  The reason you generally see self at all is to distinguish between a call to a method:

    self.foo = 5

and creating a local variable:

    foo = 5

That's the main use.  No self, local variable is implied.  And of course you also may need to explicitly pass the current self to a method or whatever.

Super is a different issue.  Calling super searches for the first definition for the current method one step up the inheritance/module chain.  If you explicitly pass arguments, e.g. super(1,2) or even super() with no arguments, you make the call with the specified values.  If there is no parameter list, i.e. just super, you do the call *with the arguments passed to the current method*.

So in this case, calling super will call Hash's []= method with (key, value) as the arguments, whereas the first super call explicitly passes the key and the new array.

Make sense?",1523674529.0
jqr,"This is a popular question, so I wrote up the common cases and gotchas: http://thejqr.com/2013/10/14/selfless-ruby.html",1523717766.0
jrochkind,I love how ActiveRecord/ActiveModel/arel API is getting modular and composable enough to do cool stuff like that query_builder stuff. ,1523652531.0
wbsgrepit,"Yuck,  CICO.

Instead of literally transcribing the functionality across language targets instead use your test suite to test functional parity and build the app with the new languages strengths/idioms.",1523639891.0
midasgoldentouch,"You know, I've been meaning to look into the elasticsearch gem. We use searchkick for a Rails project, but I'm not sure why.",1523640275.0
sshaw_,Well it's certainly faster than `man -K`. ,1523711339.0
GDP10,"This could probably work with OS X as well, since I've recently created [a homebrew formula](https://github.com/ylluminarious/homebrew-man-db) which allows you to use the Linux man page system on OS X.",1523819257.0
henrebotha,I liked using bitwise logic for storing certain flags in a db field without having to do a migration every time we add a new flag.,1523616768.0
cobranet,pdf only ?,1523635531.0
BluePizzaPill,"I think your nesting is wrong, `before` needs to be on the same level as the `it`.

    describe ""Foo"" do
    	context ""with a bar"" do
    	    before { Foo.do_something }
    	
    	    it { expect(Foo.bar).to eq 'something' }
    	end
    end

This `before` block will be run for all `it`s in the context. There is no `before` block for a specific `it` it'll run before each `it` in the `context`. If you need specific setup for one `it` move the `before` content to that `it`.

The only way (I'm aware of) that you can do exactly what you want is:

    describe ""Foo"" do
    	context ""with a bar"" do
    		shared_context ""block for it"", :run_before do
    			before { Foo.do_something }
    		end
    
    		it(""run with before"", :run_before) { expect(Foo.bar).to eq 'something' }
    		it(""run without before"") { expect(Foo.bar).not_to eq 'something' }
    	end
    end

But thats a lot of boilerplate & misuse of `shared_context`. 

https://relishapp.com/rspec/rspec-core/docs/example-groups/shared-context

",1523611418.0
,[deleted],1523608875.0
Serializedrequests,You don't need a before block for one test. Otherwise put it at the same nesting level as the test.,1523975267.0
intentions_are_high,"I'm not sure if you're going to find a gem that does this out of the box. You can check out gems like [PDF Kit](https://github.com/pdfkit/pdfkit) or [Wicked PDF](https://github.com/mileszs/wicked_pdf) which can handle converting a view to a PDF. Just create a view that lays out the data on the page like a check and then convert to a PDF for printing.

The one thing to note is that sometimes text needs to be calibrated for the printer. I've noticed this with QuickBooks check printing.",1523909269.0
we_are_ananonumys,"Do you want to be able to store an arbitrary number of employees? Do you know what kind of variable you would use to store an unknown number of things?

Also consider how a user should say that they are done entering employees and want to move on to the calculation. How might you do this?",1523569376.0
bogs83,You should look at using [Hash](https://ruby-doc.org/core-2.5.0/Hash.html) with [Array](https://ruby-doc.org/core-2.5.0/Array.html) and specifically `#append`. Something like `loop` might be useful. (https://docs.ruby-lang.org/en/2.5.0/Kernel.html#method-i-loop),1523571209.0
pedrozath,"Here is how I'd do it. If you are learning Ruby, you should use classes and such to struct your code. It's not easier to do it without it.

https://gist.github.com/pedrozath/693484901a98d015b75a27e74e8e8577

PS:
Please don't present this code as yours (on your school or anything). Use it for educational purposes and feel free to ask how many questions you want :)",1523666300.0
bullfightr,"The safe navigation operator and keyword arguments are both excellent additions that improved the ergonomics of ruby. 

They aren‚Äôt groundbreaking but when you need them they are super handy. ",1523587724.0
mperham,Are any major gems/apps using Refinements?  Keyword arguments?  I've seen very little use of either in apps or gems I've seen.  Both were introduced in Ruby 2.0 so backward compatibility shouldn't be an issue anymore.,1523564265.0
Serializedrequests,"Keyword arguments are an excellent addition, but I absolutely view the safe navigation operator as a code smell. You should rarely dig around in objects that are too far removed from the current context.

I always use #fetch instead of #dig to ensure that the data meets my expectations. You could have some completely crazy object that you were not expecting at all, or have a typo in your JSON and #dig will not help you with those situations.

The more Ruby I write, the more I want more safety, and guarantees that data and objects meet my expectations. If they don't, I want to know right away, not later when the users are unhappy because I missed a typo or I have some object rummaging around where it isn't wanted and incomprehensible control flow.",1523665716.0
mokkol,"I really love Warden: https://github.com/wardencommunity/warden

It is a rack based authentication library. Devise uses it under the hood as well. It is very configurable and you can add multiple authentication strategies very easily ( e.g. tokens, remember me, password strategy etc etc)

This RailsCasts is old but still relevant: http://railscasts.com/episodes/305-authentication-with-warden",1523558206.0
Freeky,"[Rodauth](http://rodauth.jeremyevans.net/) would probably be my first choice, coming from the guy who makes my first-choice [ORM](http://sequel.jeremyevans.net/) and [framework](http://roda.jeremyevans.net/).",1523559256.0
iconoclaus,"> Generally, people say you shouldn't roll your own authentication code

This is a maladaptation of: ""don't roll your own crypto"".  Auth logic isn't crypto so feel free to build parts of it yourself.  E.g., PORO policy objects work quite well over Warden.  That said, making your own tokens requires applied crypto knowledge and you shouldn't do it unless you have studied the basics.",1523579703.0
jodosha,"I personally use Warden. There are a few alternatives listed here: http://awesome-hanami.org/

I know that Ryan Bigg is building a new one for Hanami.",1523559580.0
lfv89,"Warden will work for any racked base application, which currently means practically any ruby web application.",1523559612.0
bacon_without_cause,"bcrypt

Edit: I got downvoted. Figured I'd try to explain myself.

Full text: https://gist.github.com/thebucknerlife/10090014

The tl;dr

Add this to your model
```  has_secure_password
```

Add this to your auth controller
```
    @user.authenticate(params[:password])
```

Add this to your application_controller.rb

```

    def authenticate_user!
      redirect_to login_path if current_user.nil?
    end
```


",1523559994.0
mperham,"Some context since I didn't know what GB or raptor was.  GB = Gary Bernhardt.

https://github.com/garybernhardt/raptor",1523548441.0
jemminger,Last update 5 years ago...I'd be more inclined to try out Hanami,1523552869.0
RightWinger,"I would recommend joining the Selenium slack channel. A ton of people on it, including Selenium devs, that could help.",1523549481.0
,tl;dr: They're exactly the same.,1523532737.0
jrochkind,"That's some clever coding, but I wonder if it really took less time than getting a JVM with client mode to install! But I'm not sure how much speed-up client-mode really gives you. 

JRuby has a whole page on dealing with and ameliorating slow boot times, which mentions several hints, including a project I hadn't heard of called ""theine"", which I guess is like ""spring"" for jruby, and ""nailgun"" which seems to be similar and the JRuby-preferred solution. https://github.com/jruby/jruby/wiki/Improving-startup-time",1523483893.0
modnar42,"I think others have probably answered your primary question, but I have meta suggestion. When asking for help, instead of saying ‚ÄúI get an error‚Äù say ‚ÄúI get this error:‚Äù and then paste the full text of the errors from your terminal. It makes it easier for people to respond with correct answers that are specific to your situation. As you learn more about software development and your questions get more complicated, it will really pay off. 

Anyway, I hope your learning project goes great!",1523543582.0
jobtraining101,"Does `puts ""okay, #{character_info[""name""]}, let's get started""` work?

Could you post a github of the project? ",1523475941.0
MeAsYouKnow,"Definitely recommended to use a class object to store this type of stuff. Then like others have said, you need to initialize the object outside of the scope so that it can be refined across multiple pages/views/rooms/whichever. ",1523511752.0
justherefortheketo,"Either pass the value to the function such as:
def function(name)
 Puts name
End

Or make it a class variable (less preferable): @name",1523479328.0
mperham,Skylight and Scout are alternatives to consider.,1523475474.0
Juice10,AppSignal is my favorite!,1523475542.0
jrochkind,honeybadger is another error monitoring (no performance) service that I use. It's priced well. ,1523496607.0
thijsc,"I'm the co-founder of AppSignal. We aim to offer a fully integrated easy to use monitoring solution that covers all the areas you mentioned.

For details see:
https://appsignal.com/tour/errors
https://appsignal.com/tour/performance
https://appsignal.com/tour/hosts

I'd love to answer any questions that might arise!",1523517111.0
tjdracz,"Depends what you need. New Relic is great for all-around monitoring but stupidly expensive.

In my company, we run it for the server monitoring, error checks, and service alerts. Probably mostly for the error checks but here something like Rollbar is superior.

Also good alternatives out there for profiling and such but as a one-stop solution, NR is hard to beat if you can afford it.",1523477182.0
,"I have used Errbit, New Relic, Rollbar and Appsignal.

Personally I prefer the latter two. For pure error monitoring Rollbar is my favorite. AppSignal is a close second, with the advantage of performance insights.

Running our own Errbit was too much overhead for me. As a developer using a full SaaS makes more sense to me.

New Relic is too enterprisey for me. It's the most expensive one and has many features middle management gets excited about in sales pitches, but isn't relevant to most development or ops teams. But you still pay for that whether you use all of that or not.

",1523509116.0
senj,"Depends on what functionality you're interested in. 

There are a number of good alternatives when it comes to error tracking (Rollbar, Raygun, Airbrake, Bugsnag, Sentry...).

For profiling, there's Skylight, Datadog, Vector, and probably a few more I'm forgetting.

NewRelic has the advantage of being a one stop shop, but it's also phenomenally expensive compared to most of the alternatives.",1523475436.0
gaotongfei,"We use Errbit for error monitoring, it's free and open source: https://github.com/errbit/errbit ",1523496021.0
crayolalettuce,"We switched from New Relic to Datadog recently and have been very happy with the change so far. The APM monitoring in Datadog doesn't seem as robust (or I'm doing it wrong), but the rest of the monitoring is top-notch and plugged straight into PagerDuty.",1523668977.0
cheald,"Been looking at this myself. I'm currently in the process of evaluating the [Elastic APM](https://www.elastic.co/solutions/apm) stack - I know and love ES and Kibana, so doing APM in it seems like a good fit.

The Ruby agent is still pretty young, but it's coming along rapidly.",1523486534.0
bobershov,went to sentry from new relic.. alerting and big free tier,1523531682.0
Pabvel19,"Please take a look of this one  [https://statscloud.io](https://statscloud.io/main)

Advantages:  
\- flexible metrics configurations  
\- you can use custom application metrics (unlike many other APMs)  
\- easy to set up and configure  
\- developer friendly  
\- built-in alert support  
\- high throughput  
\- infrastructure as code IaC",1537209810.0
dogweather,What a weird metric - lines of code vs. _lines_ of test code? Not coverage?,1523486557.0
GDP10,Why?,1523473889.0
fedekun,"I tried implementing a VM in Go once, but dynamic typing is not easy to implement in Go, as it has no generics. I ended up using Lisp instead. I was curious if OP made a VM but it looks like it simply interprets the AST, which is fine for learning of course :)

Good job!",1523488499.0
menge101,"Performance benchmarks versus MRI and Jruby?

Or is it too early for that to be meaningful?",1523533411.0
jodosha,"HTTP/2 Early Hints, Unobtrusive JavaScript (UJS), new error page based on better_errors, CLI hooks, project middleware, enhanced support for plugins, custom repositories commands, coloured logging, bug fixes.

Starting from tomorrow we'll team with ROM and DRY teams to build Hanami 2, ROM 5, and DRY 1.",1523452291.0
AnalphaBestie,"Yay.

Ive started to use hanami a few month ago (coming from ramaze and rails for work) and I begin to really like it and already use it for new production sites.",1523478882.0
greyblake,Congrats! =),1523452800.0
AMBasra,Awesome. Nice one.,1523482387.0
tjdracz,"Looks great, looking forward to rolling out some quick site to test this one out!",1523563427.0
reddit_clone,"Nicely explained. 

Looks like you can do stuff similar to 'with-<some resource>'  lisp macros.",1523464129.0
Valaramech,"A caveat to the custom map function, most (all?) methods defined in Enumerable that take blocks return an enumerator if no block is given to them.

This allows you to chain enumerations and pass them around.",1523502154.0
pedrozath,"Ruby doesn't store data. Your data is most likely stored in a SQL Database. And .Net can read SQL databases.

pro tip: Hire a developer.",1523406257.0
rman666,Back to Ruby!,1523405924.0
Jdonn82,Im not a developer. Just to be clear. ,1523405241.0
Jdonn82,It is stored in an SQL database. Is .net the only option then? ,1523406347.0
fuzzyinterval,"I'm willing to bet the IT department at your employer has a bunch of guys that are Microsoft certified, your company is deeply entangled in the Microsoft universe \(Exchange server, Office365, etc\) OR one of the Pointy Headed Bosses read somewhere that ruby is dead and only Microsoft can provide the solutions to non\-existent problems...",1524007661.0
gray_-_wolf,"After JIT is bit more polished, interesting metric I think will be `jit-max-cache / RAM usage`. I wonder on how big project will JIT be usable without constantly rerolling cache.",1523397387.0
moomaka,You can't AoT compile Ruby. Meta-programming means anything can change at runtime and may need to be recompiled. The best you could do is pre-cache some JIT'd methods you know you'll need but that isn't AoT compilation.,1523431143.0
lanoixdecoco,Omg thank you so much for this! I can‚Äôt wait to go home and play around with it.,1523384436.0
maq0r,I did the same but with AppEngine. Maybe I should put a blog about it,1523388166.0
iconoclaus,This is great!  Can you give some idea of the costs involved?,1523417376.0
manys,(on Google Cloud),1523404647.0
keyslemur,"First release of Qo, short for Query Object. It's my play at pattern matching and fluent querying in Ruby based on a few of my posts earlier:

* https://medium.com/rubyinside/triple-equals-black-magic-d934936a6379
* https://gist.github.com/baweaver/611389c41c9005d025fb8e55448bf5f5
* https://medium.com/@baweaver/new-in-enumerable-triple-equals-predicates-c1fcd0eabf6d

Git Repo: https://github.com/baweaver/qo

Few quick code examples:

    case ['Robert', 22]
    when Qo[:*, 10..19] then 'teenager'
    when Qo[:*, 20..99] then 'adult'
    else 'who knows'
    end


    people = [
      ['Robert', 22],
      ['Roberta', 22],
      ['Foo', 42],
      ['Bar', 18]
    ]

    people.select(&Qo[:*, 15..25]) # => [[""Robert"", 22], [""Roberta"", 22], [""Bar"", 18]]

Enjoy!",1523336969.0
stanislavb,"Good job, mate. Looks interesting.",1523406503.0
jrochkind,"Uh oh, does this mean 5.0 no longer even receives severe security updates? 

The Rails ""maintenance policy""  hasn't been updated with examples for 5.2 being out (It still says ""5.1.Z"" is the ""latest release series""), but I think that's what it implies?

I think 4.2 will still receive updates for ""severe security issues"" (but nothing else), but 5.0 may not even receive that?

A bit regretting my decision to upgrade my app from 4.2 to 5.0...

http://guides.rubyonrails.org/maintenance_policy.html

[**update**: This is no longer true! 5.0 now gets secure security vuln patches, although nothing else. hooray! thanks rafael! https://www.reddit.com/r/ruby/comments/8b259y/rails_520_final_is_out_the_door_just_in_time_for/dx683v4/  https://github.com/rails/rails/commit/22b0a302156027291e9e44897d9e49f01ab07908 ]",1523311147.0
PikachuEXE,"Don't want to upgrade until this bug is fixed
https://github.com/rails/rails/issues/32329",1523417499.0
Acrobatic_Bee,"It is really hard to get excited about the latest Rails releases.

Rails used to fit nicely in the ballpark where most of Rails would be useful to most applications but it only keeps growing. On every release, it feels that there are more and more parts of Rails that I won't be using.

It all started in Rails 5.0 with ActionCable (which is still painfully slow and horribly awkward to setup in production).

Now we have ActiveStorage. ActiveStorage is actually really nice but is there any reason to make it part of Rails besides ""Basecamp uses it""? The simple fact it is built by the Rails team will make it a standard in the community. Why force it down on everyone?

Bootsnap is a welcome addition but do we really need bootsnap and spring? Now if something goes wrong when loading code (believe me, it does happen), I need to debug three different places: bootsnap, spring and rails autoload.

Every Rails release makes me worried my application is becoming harder and harder to maintain by the sheer amount of moving pieces it brings. Can we please go back to basics?

I have to admit early hints support in HTTP2 is really welcome though.",1523377450.0
BurdetteLamar,"See the Ruby gem [contracts](https://rubygems.org/gems/contracts), a very robust and flexible type-checker.  See also the [tutorial](https://egonschiele.github.io/contracts.ruby).
",1523379761.0
jgaskins,Have you checked out the [method_pattern](https://github.com/jgaskins/method_pattern) gem?,1523362110.0
jrochkind,Matz is a pretty good steward. ,1523291833.0
,"As a developer who work with Ruby since 2002 it's been a bitter sweet experience taking on more and more golang over the past 4 years.  

The bitter part comes from just not enjoying the language as much these days. Some of this comes in the amount of effort almost everything I do in ruby takes vs golang; part of it is that it takes twice as much code as it does in Golang for me; part of it comes from just not being able to justify its typing system, and the run time bugs that result purely from a lack of this, anymore; and just defending the ability to pull the rug out from other developers at a whim.

I think one of the biggest thing that I became aware of after developing Golang for so long is the amount of cognitive load we deal with with Ruby until I have to teach a developer Ruby. I just taught my whole team Golang and had them doing production level work (ie they could work on new features on their own, with minimal changes in their code reviews) in 4 days of 1 hour sessions and then two days of pair programming with them. The questions were few and far between after the second day because I'd covered almost everything. 

Meanwhile I've taught Ruby to developers that took as much as two months, but never less than a month, to get production ready. That was really glossing over a lot and not even introducing meta programming - an understanding of which tales a lot more time.

The sweet part has been watching the Ruby community continue to grow, knowing it's not going to die off, watching it take on lessons learned in newer languages. I have always valued the community as have others and I'm excited to see guild and steep mature. Threads, or really lack of a good concurrency methodology, was the first thing that forced me away from Ruby. When working on scaling systems, channels are a valuable tool in my toolbelt with Golang, and static analysis (mainly for safe memory usage) has really driven my learning of Rust. I think those are extremely valuable tools to have. 

What do I hope to be using in Ruby come my 25th usage anniversary? I'm really hoping to no longer need a 3rd party framework to do the majority of my work in it. I vote for a simplified and strong set of languages features (or at least stdlib) I can use to this end. They should be features I can do static analysis on, use for easy concurrency, and easily keep my code base flexible and small. I wouldn't say no to being able to easily build a binary either.

Anyways, best of luck Ruby community! I'm rooting for you even as I grow more distant in my day to day.",1523316334.0
,[deleted],1523304339.0
trout_fucker,Heroku,1523240618.0
Disconnekted,A small Linux  instance with nginx,1523241958.0
Zambini,Digital Ocean VPS for $5/mo or an AWS free tier are both satisfactory for a small web app,1523246162.0
fuzzyinterval,"Get a RaspberryPi, or heroku or a cheap linode account.",1523244795.0
vruizext,"If you are in Europe, Hertzner has started a cloud VPS short time ago and the prices are very competitive, starting at 2,5‚Ç¨ / month. The drawback: the dashboard lacks monitoring features, you need to add a 3rd party software if that's important for you. If it's a hobby app, probably it's not a matter

https://www.hetzner.com/cloud ",1523314082.0
Juice10,"For small ruby scripts I like popping them in a Serverless environment like OpenWhisk or IBM Cloud Functions. They support running things in Docker containers so I just have one Docker container for all my small ruby scripts. Doesn't cost me anything, it autoscales and its quite flexible.",1523290813.0
pedrozath,"Your own computer, if you don't care about ugly domain names. Else, Heroku.",1523406458.0
vittore29,"On this topic, check out Safely gem. ",1523216513.0
sshaw_,"Fun stuff. Very nice. 

I'm a tad shocked that folks in [the proposal referenced in your project's README](https://bugs.ruby-lang.org/issues/6739) consider adding `begin`, `end` and some newlines ""bloated code"". 

But, in the name of them and, since we're already monkey patching, here's my proposal: 

    class Array
      def with
        any? { |e| e === $! } ? yield($!) : raise
      end
    end


    data = File.read(path) rescue [Errno::ENOENT, Errno::EPERM].with { warn ""Error: #$!"" }",1523231953.0
a__u__s__t__i__n,"One more idea...

    class Proc
      def rescue_call(*error_classes)
        call
      rescue *error_classes => exception
        yield exception
      end
    end

    -> { data = File.read('none') }.rescue_call(Errno::ENOENT) { $stderr.puts('No data') }

Although, I don't like this approach or any other monkey-patching approach. Fun to think about though.",1523286690.0
realntl,"Interesting idea. It might make sense to re-raise the exception when it isn't of the class that was specified. For instance, given the following example, I'd expect `OtherError` to be what gets raised, not a `RuntimeError` caused by `fail`:

    class SomeError < StandardError
    end

    class OtherError < StandardError
    end

    def example
      raise OtherError
    end

    example rescue SomeError.with { puts ""Can't get here"" }",1523210530.0
hellocheekyyy,"I don't render PDFs much, but security would be a big issue for me. Often when I'm saving PDFs of data, it's because I'm looking to make an archived version. Transparency about what data is kept on your servers and for how long would be important to me.",1523149748.0
dark-panda,"Any chance the Boss can be taught to use the Print to PDF functionality present in most browsers these days? Then you won‚Äôt have to reinvent the wheel. Chrome, Safari, and Edge support this out of the box I believe and Firefox has an extension. You can then use CSS to control the output using print-specific stylesheets. ",1523156552.0
bxclnt,"I just use a microservice I‚Äôm running for this nowadays: https://github.com/alvarcarto/url-to-pdf-api (I‚Äôm not the author of that project)

Works fine, unless you need page numbers, then you‚Äôre back in manual-page-layout-land. ",1523147098.0
,[deleted],1523166767.0
multiplegeorges,"If you have the report in a view, why not just render the template to a string and use https://github.com/wkhtmltopdf/wkhtmltopdf ?

I find it works great and is really easy to hook up in a format block in a controller action.

Sometimes I render the view in a pdf-only layout when the requirement is for simpler page layouts.
",1523169289.0
Yeahbuddayyeah,"At my company, we use a mix of wicked_pdf and a custom gem that wraps chrome headless. While they have their own quirks and flaws, they do the job just fine. What would you offer that is different or worth paying for (assuming you will build a SaaS product) than just rolling one of the above yourself? ",1523176974.0
equivalent8,"be sure to support multiple charsets as no every font (and even UTF-8) covers entire charset of Chinese language. This bit me in the ass in the past.  

podcast that kind-of tarks about similar thing I mean :
https://devchat.tv/ruby-rogues/rr-340-strings-encodings-ruby-aaron-lasseigne

so take that to PDF and it's harder ;)",1523178117.0
modnar42,"The survey asks if I‚Äôd use a SaaS service, but doesn‚Äôt list any of the existing SaaS tools in the ‚Äúcurrent tools‚Äù question. Why not include those? What features are you looking for that they don‚Äôt have?",1523166830.0
valadil,"We use wickedpdf to render rails pages. We have some PDFs that we generate with prawn. Prawn has its own weird license though, so we might actually switch to something else with an mit license. ",1523185644.0
jrgifford,At my previous job I used PDFlib for it. Expensive as hell but nothing else supported the advanced PDF options I needed. ,1523192439.0
TGAlda,"Honestly ‚Äî last time I had PDF generation as a part of a project, I discovered that ActiveAdmin offers a pretty good print stylesheet, so I simply instructed the client to print a PDF via the browser and it went well.",1523196367.0
flowstate,"I had to solve the same kind of problem around 4 years ago, and the easiest solution for me was to render the PDF using PhantomJS (headless browser). This was especially useful since the charts I needed to export we're already being generated with D3.",1523197094.0
strzibny,I am currently building https://github.com/strzibny/invoice_printer which obviously is only for invoices. But it crossed my mind to build something like that for reports. Such a library/gem would be useful but I would certainly not use a 3rd party service for it. Both security and dependency implications are pretty bad.,1523259349.0
deedubaya,"Great content here and in the survey results. I‚Äôll post them after results stop rolling in.


Judging by the downvotes, some of you don‚Äôt like virtual ü§ó, even tho I promised to deliver in my post. Sorry for invading your personal virtual space, you cold monsters!",1523279884.0
midasgoldentouch,"Hmm, what did I consider this API for? I remember looking it up, just not why.",1523193905.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/documentation] [Ruby Gem markdown\_helper v1.5 Supports Nested Includes](https://www.reddit.com/r/documentation/comments/8albhq/ruby_gem_markdown_helper_v15_supports_nested/)

- [/r/github] [Ruby Gem markdown\_helper v1.5 Supports Nested Includes](https://www.reddit.com/r/github/comments/8al2md/ruby_gem_markdown_helper_v15_supports_nested/)

- [/r/markdown] [Ruby Gem markdown\_helper v1.5 Supports Nested Includes](https://www.reddit.com/r/Markdown/comments/8al02k/ruby_gem_markdown_helper_v15_supports_nested/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1523134502.0
tmckd,"We're working on this kind of thing (IoT on Rails) at Apiotics.  https://portal.apiotics.com.  We're not yet at the point of supporting a household socket via a Pi, but we're certainly interested to talk with you about your project so that we can support it.",1523109080.0
Cr0wsb4h0es,"Could you please elaborate on what you had in mind?
",1523117796.0
tmckd,"If you're still looking for a solution here, we should have support for this in a couple of weeks.  Let me know if you're interested to check it out.",1523466494.0
442401,"Be advised - If you are building rails apps for Raspberry Pi (or any armv71 architecture) there is a bug in Ruby, up to and including the latest stable release `ruby 2.5.1p57 (2018-03-29 revision 63029) [armv7l-linux-eabihf]` that will effect apps using `rails >= 2.6.0`

Rails 2.6.0 bundles the gem bootsnap by default which triggers the bug in Ruby. Any attempt to run a `rails` command will fail.

As a fix, disable bootsnap by commenting out or deleting the following line of code:


    # config/boot.rb

    require 'bootsnap/setup' # Speed up boot time by caching expensive operations. 

edit --

[bug](https://bugs.ruby-lang.org/issues/13670?next_issue_id=13668&prev_issue_id=13671) on Ruby bugtracker",1523489028.0
benignportmark,"Thanks for replies folks. To expand, I would like to build the software and hardware to be able to connect a rails app to an internet enabled product of some sort, ideally I'd like to built a wifi enabled mains plug, safely. Was hoping in might be able to find someone else out there that has done such a thing and published part of the journey which I could use as an outline guide, solving problems along the way as a learning exercise.",1523732283.0
zverok_kha,"TL;DR: I ""compiled"" The Ruby Reference from various sources, to be comprehensive, modern-looking and book-like, like other languages have: https://rubyreferences.github.io/rubyref/

**UPD:** Relative links to prev/next chapter are broken, fighting with Jekyll... **UPD2:** Fixed.",1523095586.0
TechnoEchoes,The back and next buttons at the bottom of each page lead to 404s.,1523107906.0
TWR9939,"Nice work! Coming from python, when I started learning Ruby I was kind of miffed at the absence of something like this.  However I found David Black's [The Well-Grounded Rubyist](https://www.amazon.com/Well-Grounded-Rubyist-David-Black/dp/1617291692/ref=sr_1_1?ie=UTF8&qid=1523109621&sr=8-1&keywords=the+well-grounded+rubyist) to be a decent substitute.",1523109634.0
ASIC_SP,"quick feedback: looks great!! navigation sidebar is very handy.. thanks for this...

may be add these two as well?

* https://www.ruby-lang.org/en/documentation/faq/
* https://www.ruby-lang.org/en/documentation/quickstart/

and https://github.com/rubyref/rubyreference say page not found...",1523096007.0
geraldbauer,"Great news. Great reference. FYI: I'm trying to put together free (online) ruby getting started guides and booklets at the [Yuki & Moto Press Booshelf](http://yukimotopress.github.io/). Some guides for now include:

- How I Start - Let's Build a Gem Together! by Steve Klabnik
- Hoe Developer's Guide - Build, Package and Publish Gems with Rake Tasks - Ready-to-Use Build Scripts by  Ryan Davis, et al
- Best of Practicing Ruby by Gregory Brown, Luke Francl, Magnus Holm, Aaron Patterson,  Solomon White, et al
- Programming Cryptocurrencies and Blockchains by Gerald Bauer, et al
- Gem Series ++ Web Services (HTTP JSON APIs) the Modern Micro Way by Gerald Bauer, et al
- and more",1523125091.0
_ylastic,This looks very nice and handy!,1523107383.0
jrochkind,Awesome! ,1523111014.0
jrochkind,mention/link to [concurrent-ruby](https://github.com/ruby-concurrency/concurrent-ruby) in the concurrency section?,1523111129.0
joemi,"Looks nice.

What's you plan to keep this up to date so it doesn't become outdated like other references you mentioned? If the plan is just ""you'll keep it up to date"" how does that really differ from others who also planned to do the same but eventually stopped updating?",1523119927.0
bullfightr,"Wow! This is great. After years of programming in ruby I have memorized a list of pages where I can find these details: rubydock, apidoc, blog articles, etc. I have never seen these all in the same place. This is super helpful. Thanks!",1523122182.0
rabidferret,"FYI, you cite Rust as a language with a ""up-to-date, full, free, official language reference"", but its reference is neither up-to-date nor is it full.",1523129905.0
geraldbauer,"Wow. Love this so much that I posted it to the Jekyll ""channels"" too. See: 

- [@ Jekyll Talk](https://talk.jekyllrb.com/t/real-world-case-study-build-online-books-with-markdown-and-the-jekyll-static-website-compiler-free-ruby-reference-2-5-book/1679)
- [@ Jekyll Reddit](https://www.reddit.com/r/Jekyll/comments/8aoicu/real_world_case_study_build_online_books_with/)
- [@ Awesome Jekyll](https://twitter.com/awesomejekyll/status/982687051060523008). 

Keep it up. Best part the [`_data/book.yml`](https://github.com/rubyreferences/rubyref/blob/master/_data/book.yml) file. Yeah! Well done. ",1523172580.0
multiplegeorges,"Can you post a guide to contributing to the Reference?

Once I clone the repo, what do I do to build it locally, serve it locally, etc? I think this will really help you get more contributions.",1523193169.0
sshaw_,"Yay, Rex(ical) and Racc!

There are several approaches to scanning/parsing.

By default your lexer (scanner) will be a `Racc::Parser`. A `Parser` [requires a ""parse"" method](https://github.com/tenderlove/racc/blob/c92678b1c5e02be02fc11b945755b09e855ba6b0/lib/racc/parser.rb#L92) (the RDoc don't generate properly on rdoc.info so linking to src). 

Rexcial has the `--standalone` option that will create a lexer that is not a subclass of `Racc::Parser`, but even then certain batch processing methods still depend on a `#do_parse` method being defined. These methods are `#scan` and `#scan_file`. 

If you do not want to define `#do_parse` on the lexer use one of these methods when instantiating your scanner: `#scan_setup` for a string and `#load_file`. Then define your `#next_token` method on the parser and call  `lexer.next_token` in it. 

Note that your Makefile is using `rex`'s `--stub` option, which allows one to execute the scanner from the command line: 

    /tmp/RPN-Interpreter >cat $tmp
    1 2 +
    /tmp/RPN-Interpreter >ruby RPNLexer.rb $tmp
    [:NUM, 1]
    [:NUM, 2]
    [:ADD]
    [:EOL]












",1523083499.0
deedubaya,"> But as a Ruby / Rails programmer, the language is very difficult to use ‚Äî require/include is extremely primitive and dangerous, all symbols are in a global space, the language is too un-specified and difficult to support real IDE's, etc.

I feel like you don't actually program in ruby.

It seems you're trying to drag expectations from other languages/environments. 

If you're using rails, you'll rarely use `require`, include is used for extending classes and probably shouldn't be `/`-ed with require, symbols being the same object is by design, and I'd anecdotally say that the majority of ruby developers don't use IDE's. ¬Ø\_(„ÉÑ)_/¬Ø

>I find that even in small Rails apps, Ruby makes refactoring too difficult to do as often as needed. So nobody does it. And jumping into other peoples' large projects is usually an awful experience.

Most hard-to-refactor ruby app's I've seen suffered from

- Poor test coverage (unit and/or integration)
- Gigantic classes and/or violation of SRP
- Inconsistent code style and architecture choices

These are problems that will be experienced in any language.

Lastly, I think that ruby is very easy and delightful to use. Most people I know who use ruby don't do it because of performance or portability. They use it precisely because it is easy and delightful to use. 

Maybe ruby just isn't your cup of tea? There's nothing wrong with that other than trying to make others feel like it is their fault.",1523052685.0
moomaka,"> require/include is extremely primitive and dangerous

How are `require` and `include` even related? What do you find 'primitive and dangerous' about them?

> all symbols are in a global space

Do you mean constants? i.e. classes and modules? If so they aren't all global, use modules for namespacing.

> the language is too un-specified and difficult to support real IDE's, etc.

Rubymine works great so I don't get what you mean here.

> I find that even in small Rails apps, Ruby makes refactoring too difficult to do as often as needed. So nobody does it. 

I have exactly the opposite experience. Ruby is very easy to refactor unless your test coverage sucks. Java on the other hand, no one want to make major changes as you often have to unroll huge class hierarchies due to the anemic type system.

> And jumping into other peoples' large projects is usually an awful experience.

How is that different from any other language?",1523125599.0
jrochkind,"i find ruby super practical and joyful to use! 

Rails less so (although i still use it, so I guess i find it practical...), but while I don't know what the core ruby devs work on other than ruby, I know DHH really does work in Rails... but on a single particular project, that may be unlike what many others do with it. 

But, so.... why are you working in ruby then?  it is sad to me that you are for whatever reasons forced to use it when you don't like it as a language.  It'd be like if I had to write Java as a day job. ",1523068497.0
pedrozath,"lol dude, tell me just one language that feels better to develop in than ruby",1523191851.0
AnimusNecandi,"Before reading this I wasn't sure whether the post was serious or a lazy trolling attempt

> the language is too un-specified and difficult to support real IDE'

Surely someone with +300 GitHub on Ruby OSS projects would know the real reason for IDE support being difficult on Ruby...",1523217679.0
jonnyman9,"`ruby ./script.rb`

But before that you have some dependencies you need to install.  So run

`gem install nokogiri`

first.",1523048784.0
wlll,"Try adding some debugging output. eg. Where you have:

    get_posts(url).each { |post_url| f.puts(get_url(post_url)) }

Change that to be something like:

    get_posts(url).each { |post_url|
        puts ""Got post_url: #{post_url}""
        f.puts(get_url(post_url))
    }

and:

    get_categories.each do |category|

becomes:

    get_categories.each do |category|
      puts ""Got category: #{category}""

Repeat other places to see what you're actually getting. I see from the background that you're ending up with an empty links.txt file, that would suggest that some loops are not returning anything, sprinkling puts around should help you locate that.

Additionally:

* Please don't wrap the whole program in a begin/rescue/end block as advised elsewhere, that is redundant.
* You don't need to install net/http and uri.
* Please consider adding in a sleep(somenumber) in the script where you loop over a list of URLs and fetch them to avoid slamming the remote webserver.",1523095499.0
rom_rios,"I read ""destroy all software"" as a sentence and was so confused for a moment",1523060625.0
drutyper,"Is there a download all option or do you have to download all the videos individually?
",1523066538.0
BluePizzaPill,"Did this work for you? I've tried but then it says I need to log in or sign up. I have a old account from years ago and when I log in with it I need to give my payment details. I've just clicked the link.

https://www.destroyallsoftware.com/screencasts/account/checkout?discount_code=7thbirthday&plan=annual",1523117337.0
evandrix,parse the Atom feed .xml,1523820839.0
desertSniper87,Wat. ,1523091657.0
jrochkind,What does 'concurrent requests' mean here? I need more docs! ,1523036600.0
,[deleted],1523045748.0
janko-m,"This looks *really* impressive, thanks a lot for creating this!",1523223404.0
otikik,"You almost got it. Here's what you need:

    gets.chomp.split(/\b/).map(&:capitalize).join

Explanation:

`split` can take a separator argument, which is space by default. The separator can be a string or a regular expression. The regular expression `\b` means [world boundary](http://www.regular-expressions.info/wordboundaries.html) and the nice thing about it is that it has zero with. This means that the separators you use (the spaces and the hyphen) are preserved when doing the split:

    ""alberto santos-dumont"".split(/\b/)
    > [""alberto"", "" "", ""santos"", ""-"", ""dumont""]

You can then apply `capitalize` to all the strings (this won't affect spaces or hyphens). But at the end you must join everything without adding spaces.

One thing worth mentioning is that if someone inserts a name with repeated space (""Julio    Iglesias"") those spaces will be preserved with this method, but would be ""compacted"" with your original one. You can split and join again (`.split.join`) to avoid this.",1523030861.0
ASIC_SP,"can you add some sample names and output you need for those?

probably regex might be better choice here...",1523029873.0
hsndiz,"Did you know you can do this with your models in Rails?

    Post.validators.to_check_constraints(:pg)
    Post.validators.to_javascript camelize: true

You can do it but it won't work. Ahahahaah!",1523284318.0
tomcopeland,"Another validation thing that I haven't seen used often - ""strict"" presence validations for attributes that aren't input by an end user:

    validates :uuid, presence: {strict: true}

As always the Rails guide [has a nice writeup](http://guides.rubyonrails.org/active_record_validations.html#strict-validations).",1523292293.0
GroceryBagHead,"Here's a trick: Don't use factories and rspec. So many articles are in the spirit of ""my tests run slow as balls, here's how to speed them up by adding more complexity"". No shit they are slow if you're doing million database inserts (via AR with all the validation/callbacks) before every single test case.",1523032866.0
fuzzyinterval,wrong sub!,1523058271.0
mehdifarsi,what about ruby-devscoop: http://ruby.devscoop.fr/,1526284230.0
swifter-every-day,"We don't really need a post which simply lists all the other posts, do we?",1523049776.0
methodinmadness7,"While you're wondering what project to try, I sincerely suggest checking out The Odin Project, https://www.theodinproject.com/ - it's a free open source web developent course with Ruby on Rails. You start with the basics for both front-end and back-end web development, which will probably not take you too long, and then get into Ruby more extensively, after that Rails, then front-end again.

There are no mentors, but there is a Gitter chat which a lot of people use to ask questions and share stuff.

The cool thing is that there are small projects after every few lessons and big ones at the end of each part of the curriculum and you upload everything to github so you can use it as a portfolio. For example, the final Ruby project is a command line chess game.

It won't be easy, I think, and you'll need a lot of self-discipline as there will be no teachers, but it was very, very helpful to me.
",1522965520.0
shandley256,"I strongly recommend trying out https://adventofcode.com/ and putting solutions into a github repository.

They increase in difficulty and will allow you to use lots of language features in Ruby, plus they're clever and entertaining. I know it may not quite be what you had in mind but I think it'd be fun and good portfolio material.",1522962595.0
twinklehood,"""I'm not the creative type, but I enjoy coding"" this sentence makes no sense to me :) Don't let traditional creative arts make you feel . inferior!

Anyway, you're totally right. Many people shy away from saying it around here, but if you want a real, breathing application, through which you can hone your skills in ruby, testing, web (let's face it, ruby is mostly web), then most likely, you want to eventually roll a rails application. There are tons of fun things you can do in rails. Make your own little twitter clone. Make a simple social network. Make shared todo-lists. Try out stuff.

Your portfolio (aka your github profile) looks particularly strong if you throw contributions at some open source projects. - many bigger projects label issues that are well suited for first contributions - for instance:
https://github.com/sinatra/sinatra/labels/good%20first%20issue

",1522963298.0
wonderer_007,"I want to emphasis upon the fact that Ruby language alone isn't that worth as you learn it with framework Ruby on Rails. This is very important to understand. Having said that both Ruby language and Ruby on Rails framework isn't that hard to learn. I have wrote a blog post for beginners to start with Ruby on Rails and Ruby language http://haidrali.com/newbies-introduction-to-ruby-on-rails/

I have listed few project which could be good for showcase in portfolio. 

* Social Media post schedule (you can start with Twitter and Facebook) 
* To do list manager

Its very important to put your portfolio work live somewhere, I would recommend upload it on **Heroku**  *its free as well*. Also put your work on Github, Because hiring companies demands your coding style.",1522965504.0
poptartsareravioli,"Two options. First find open source projects you‚Äôre passionate about and start digging through the projects issues and submitting pull  requests even if it‚Äôs just for documentation updates, tweaks, etc. This will get you ready faster for working in an organisation with others that isn‚Äôt so insular like working on your own projects can be as well as learning git which you will 100% use. Second build something you actually want to build or that solves a problem you experience. This will give you the motivation to actually produce something tangible. Good luck! ",1522965851.0
villevillekulla,"I know it's hard to find projects, but try to make something that engages you! 

Do you have other interest you can code something related to? Say you like to run, make a simple program where you can add runs you've had into a database. 

Or do you have problems you could test to solve with code? Can't decide what to eat? Make a randomizer with your favorite food. 

These are the kind of projects that at makes me love coding, hope you find one!",1522962351.0
,[deleted],1522985745.0
zverok_kha,I have some :) https://github.com/zverok/lmsa,1523008408.0
jodosha,"Is this a joke?

**EDIT:** I truly apologize with /u/ibylich. My comment was dismissive, w/o providing a constructive feedback. This isn't the way I am, and the way I behave. It's a mistake, and I'm sorry.",1523038764.0
klapply,Why would you freeze inside initialize?,1523004152.0
moomaka,"You can use `ObjectSpace.define_finalizer ...` in place of tracking GC counts and relying on some future access to occur in order to clean up stale weak refs.

Your implementation is also not thread safe, there is a race condition here that can result in the method being called multiple times (or worse on non-MRI interpreters): https://github.com/iliabylich/memoized_on_frozen/blob/master/lib/memoized_on_frozen.rb#L63

At a higher level, there is really no need for this global store approach. A frozen object just prevents creation/re-assignment of attributes, it doesn't make those attributes immutable. i.e. you can just put a hash on each instance: `@_memoized_values = {}` and store the method results there without having to muck around with weak refs.

Here is a simplified implementation. This still isn't thread safe but it's not a global issue, you can just warn users that their memoized methods should implement locking if they need thread safety. 

    module MemoizedOnFrozen
      class << self
        def _module_for(method_names)
          Module.new do
            def initialize(*)
              @_memoized_on_frozen_values = {}
              super
            end

            method_names.each do |method_name|
              define_method(method_name) do
                @_memoized_on_frozen_values[method_name] ||= super()
              end
            end
          end
        end

        def [](*method_names)
          Module.new do
            define_singleton_method(:included) do |base|
              base.prepend(MemoizedOnFrozen._module_for(method_names))
            end
          end
        end
      end
    end

    class Rectangle
      include MemoizedOnFrozen[:area]

      def initialize(x, y)
        @x = x
        @y = y

        freeze
      end

      def area
        puts 'calculating area'
        @x * @y
      end
    end

    rectangle1 = Rectangle.new(1, 2)

    rectangle1.area
    calculating area
    => 2
    rectangle1.area
    => 2
    rectangle1.area 
    => 2",1523209884.0
fickentastic,"Almost same boat as you, except, less then a year in as well. Anyway I built something using Sinatra / Postgres / Sequel and Slim because I wanted a one page app( actually it's two pages).   Long story short I ajaxified (using fetch mostly) 99% along with other js / dom stuff.  

I return everything .to_json, period.  I find creating the Html (if needed) to work just fine in javascript.  Actually I don't even see a reason to create the html in slim, for what reason? I'm sure it could be done but imagine it would be a lot more work with no payoff.  ",1522957629.0
Oranges13,"I think I understand what you're asking about and here's how I would do it just because where I've worked previously the ""look"" of the thing changes all too frequently. 

I'd use as much ajax as possible, but route it to endpoints that can return html based on data and views that I can control independently if needed. So a little more in-depth and complex than just writing plain html in a heredoc, but you get the advantage of using layouts and partials if needed, which may keep things more simple and less repetitive.",1522958495.0
chrsfrnk,"Something like this should work, assuming your slim template is located at views/things/index.slim

```
get('/things') { slim :'things/index', layout: false }
```

But I'm not sure I totally understand your question. If you have dedicated slim template files, why do you also want to write inline HEREDOC strings?",1522969226.0
danimoth2,"You know I used to favor slim over HTML tags/erb, but when I learnt React, I changed my mind, because of components and it also has interpolation anyway. I return json.",1523041986.0
aziflaj,"Mostly worked in Rails, but the idea is the same. Where I work, we send JSON responses from the server and consume them from a React.js frontend app. We did it like this because we also will build a mobile app for the same app and we can't push HTML views to a mobile app (a native one). 
In your case, do you *need* JSON responses? The payload sent to the client will be smaller, and this may or may not affect the performance much, but if you need JSON responses then .to_json everything. It will require some time (based on the app's scale) which translates to added cost. But if you don't need it, then keep using HTML responses, nothing wrong with that. ",1522961009.0
not_a_gag_username,"You could use something like emblemjs to enable you to keep writing slim-like syntax, but as handlebars.js partials that are templated out by JS on the client.",1522962407.0
twinklehood,"""does Ruby/Sinatra retain any relative advantage over say PHP?""

That question has not changed from when you started. They retain the disadvantage of speed, and retain the advantage of being ruby. That means more expressive code, sweet OO, metajazz, and whathaveyou. If those were not important things to you, ruby was probably not the best choice to begin with.
",1522962842.0
kmaicher,"It always confuses me how developers in Ruby community understand ISP principle. 

> Clients should not be forced to depend on methods that they do not use.

In your first example callers (Programmer, Administrator, Techincan) are not _forced_ to depend on Computer's methods that they do not use. So IMHO your first example doesn't violate ISP.

Maybe that principle would be easier to understand if Ruby actually had a mechanism for enforcing interfaces.. Since it doesn't have one, is it even possible to violate this principle in Ruby?",1522936129.0
jrochkind,"jcupitt, the author of vips, is some kind of hero.  I have no idea if he's doing this all in his hobby time or on the job, but he is one of the most responsive and responsible maintainers I've ever seen and has developed some amazing software. ",1522939411.0
mokolabs,"One reason to check out this gem: support for [libvips](https://github.com/jcupitt/libvips).

If you have an app that uses ImageMagick to generate thumbnails, you could see a dramatic speed increase by switching to libvips. For instance, in my case, I saw about a 10X improvement!

Also, the new chainable API is pretty dope and can really help reduce code bloat in your image processing code.

(Full disclosure: I worked on this release.)",1522939248.0
honeyryderchuck,"I've worked last year on a node project using sharp, and I was very impressed with libvips due to speed and memory usage. It was kind of flaky using it in a docker alpine image (some operations using SVGs that I needed segfaulted, had to resort to using a custom node-sharp image on ubuntu(?)), hopefully it'll improve there. I was actually quite bummed out that it wasn't as used in ruby, glad that you guys stepped up, will gladly use it next time I handle uploads and image processing.",1522946233.0
ioquatix,If you want something more focused try https://github.com/ioquatix/vips-thumbnail which can be easily combined with https://github.com/ioquatix/utopia-gallery and https://github.com/ioquatix/jquery-litebox for simple photo pop ups that work both on mobile and hi-dpi displays,1522914645.0
jrochkind,"Hey /u/janko-m, just had a thought:  Is making sure the JPG output is a _progressive_ JPG part of the ImageProcessing API?

It makes _so much_ sense to make sure your thumbnails are progressive JPGs. They are often (for mathematical reasons I don't understand) _smaller_ in file size, but more importantly they load in a way better for UX under a slow connection. 

Another, although less important, thing that makes a lot of sense for web thumb JPGs, is stripping EXIF metadata, and making sure they are translated to color-profile sRGB. 

These are things that all the guides for creating JPG thumbs on the web recommend (including [Google's](https://developers.google.com/speed/docs/insights/OptimizeImages)), but I find often left out or not highlighted in documentation in ruby easy-thumbnail-gen libraries. ",1523371764.0
lukeasrodgers,"That is a common pattern, yes. Another approach would be to use something like a result object (e.g. https://www.rubypigeon.com/posts/result-objects-errors-without-exceptions/). 
If you are going to bubble errors up to users of your gem, I think it is generally a good practice to wrap those errors in an internal error class so that users can just do something like

    begin
      parse!
    rescue => IndexJellyFishGemError
      # handle error
    end

though one might argue that you should just allow filesystem-related errors (e.g. `Errno::ENOENT`) to just bubble up as-is.",1522887393.0
chrisgseaton,"You need to write Ruby logic to do this.

```
abort 'you need three arguments' if ARGV.length != 3
```",1522864720.0
aemadrid,you might want to look at [Thor](http://whatisthor.com/). it has lots of options to deal with arguments to a script and even provides a nice way to have docs for your script.,1522885137.0
,[deleted],1522866274.0
sshaw_,Don't forget time dependent tests!,1522881425.0
midasgoldentouch,What a timely article! Looking to improve our test suite in the near future.,1522865454.0
danimoth2,"Hi, great stuff. TIL about `stub_const`.

Just a few questions:

- Why did you do a `stub_const`, it seems like you can just use the actual data.
- Redis tests, have you looked into things like [fakeredis](https://github.com/guilleiguaran/fakeredis) and what is the thought process behind using or (in this case not using) it?",1522896848.0
sihui_io,looks great! will try it out after work. Thanks for sharing! =],1522868642.0
amalagg,"For the variant caching it should be `render collection: variants, cache: true`",1522843430.0
midasgoldentouch,Are you using a particular cache in these blog posts? I'm just curious.,1522857224.0
442401,"Nice name!

*^I ^don't ^have ^the ^experience ^required ^to ^comment ^on ^the ^actual ^code, ^will ^use ^as ^learning ^tool*",1522847234.0
banister,Creepy. Why do you want a tool like this other than to creep on people?,1522853327.0
joelparkerhenderson,"Yes. What you're describing is especially good when matched with  domain driven design (DDD) and behavior driven development (BDD).

I use DDD and BDD to create use cases in simple language such as ""I am a [role]. I want to [goal]."" Many people use DDD and BDD with similar kinds of language, such as ""As a [role], I want [feature] because [benefit].""

DDD and BDD help you explore the problem based on the user's perpective, and the business stakeholders' perspectives, rather than based on the technical feature. This tends to turn up many assumptions and also ideas for experiments.

https://en.wikipedia.org/wiki/Domain-driven_design

https://en.wikipedia.org/wiki/Behavior-driven_development",1522785609.0
jrochkind,Agreed. I think you might need both though. ,1522798648.0
Whispres,"This sounds like an interesting project that would be right up my ally. I am still very new to GitHub and am still learning the basics, but my primary focus revolves around improving my technical writing skills. I‚Äôd be happy to volunteer for writing use cases and any other relevant documentation.",1524624031.0
isolatrum,"wait, does this mean we can no longer use ruby code in sass? or just that it's not made with ruby annymore?",1522779986.0
tarellel,"I'm not sure this'll effect [sassc-rails](https://github.com/sass/sassc-rails), because I believe it uses the sassc library. But I've been using it for my last few projects and it's been pretty darn amazing thus far.",1522781468.0
jstad,What does this mean for sass-rails? Is there a way to swap it for dart sass?,1522790421.0
DrVladimir,I take it this affects SCSS users too?,1522804800.0
sshaw_,Seems like a big win for Dart. ,1522792364.0
holyjeff,Why is this being rewritten in Dart ? what's the reason ? ,1523014775.0
janko-m,"`request.halt response.finish_with_body("""")`",1522754592.0
this_is_not_nil,Shouldn't it be `204 No Content` if you have no plans of returning anything?,1522938591.0
derosm2,What are your thoughts on query objects versus defining more scopes on the model?,1522756454.0
midasgoldentouch,Is this one of a series of posts?,1522769748.0
bhserna,"Thanks for sharing =) 

I like this pattern of injecting an object to help you interact with the storage in the way you need and not in the way that your storage mechanism provides... and I actually do things in a very similar way =)

What I do different is that instead of creating a new QueryObject I just add those methods to the model and I move the function with logic `popular_sport_posts` to a kind of ""facade"" module or object... Although you don't actually say who has that `popular_sport_post`=)

And other thing that I do slightly different and I want to show you, because maybe you can find something interesting is that I prefer not to use the mocking helpers from rspec like `instance_double` and use a regular fake object instead... for example in your example o would use something like...

    class FakePost
      attr_reader :comments

      def initialize(attrs)
        @comments = attrs[:comments] || []
      end
    end

    class FakeComment
      attr_reader :published, :created_at

      def initialize(attrs)
        @published = attrs[:published]
        @created_at = attrs[:created_at]
      end
    end

    class FakePostsStore
      def initialize(posts)
        @all = posts
      end

      def sport_posts
        all.select { |p| p.category == 'sport' }
      end

      def sport_posts_count
        sport_posts.count
      end

      def sport_posts_with_published_comments
        sport_posts.select { |p| p.comments.any?(:published) }
      end

      def sport_posts_with_recent_published_comments
        sport_posts_with_published_commehts.select { |p| p.comments.any? { |c| c.created_at > 30.days.ago } }
      end

      private

      attr_reader :all
    end

    describe 'popular_sport_posts' do
      def popular_sport_posts(store)
        Blog.popular_sport_posts(store)
      end

      def store_with(records)
        FakePostsStore.new(records)
      end

      def post_with(attrs)
        FakePost.new({category: ""sport""}.merge attrs)
      end

      def comment_with(attrs)
        FakeComment.new(attrs)
      end

      context 'when sports posts count is less than 2' do
        it 'returns sport posts' do
          other_posts = [post_with(category: ""other"")]
          sport_posts = [post_with(category: ""sport"")]

          store = store_with(sport_posts + other_posts)
          result = popular_sport_posts(store)
          expect(result).to eq sport_posts
        end
      end

      context 'when sports posts count is less than 11' do
        it 'returns sport posts with published comments' do
          without_comments = 1.upto(7).map { post_with(comments: []) }
          with_unpublished_comments = [post_with(comments: [comment_with(published: false)])]
          with_published_comments = [post_with(comments: [comment_with(published: true)])]

          store = store_with(without_comments + with_upublished_comments + with_published_comments)
          result = popular_sport_posts(store)
          expect(result).to eq with_published_comments
        end
      end

      context 'when sports posts count is more than 10' do
        it 'returns sports posts with recent published comments' do
          with_old_comments = 1.upto(7).map {
            post_with(comments: [comment_with(published: true, created_at: 31.days.ago)])
          }

          with_recent_comments = 1.upto(7).map {
            post_with(comments: [comment_with(published: true, created_at: 29.days.ago)])
          }

          store = store_with(with_old_comments + with_recent_comments)
          result = popular_sport_posts(store)
          expect(result).to eq with_recent_comments
        end
      end
    end

You would need to have a kind of ""repeated"" fake store but I think it helps reveal the expected data structure and to have a place in your tests where you are explicitly defining the thing that you want to interact with...

Well that's all... It would be nice to see your thoughts about it =)


",1522766949.0
zverok_kha,Not sure if there is a lot of Rubyists from my hometown on Reddit. But I will be there :),1522748312.0
sshaw_,A web app in Ruby that's not Rack based... What are you using here? ,1522730335.0
lobolars,"We changed from this gem to [Akismet](https://github.com/jonahb/akismet) last week. Works flawlessly, and easy to implement in most ruby apps. ",1522744390.0
vruizext,"I recommend you to take a look at [rack-attack](https://github.com/kickstarter/rack-attack), open-sourced by kickstarter.

https://kickstarter.engineering/rack-attack-protection-from-abusive-clients-4c188496293b",1522801205.0
Hell_Rok,"I'm doing a presentation tonight and I always like to have a text version as well, so if someone can't make it or if they want the code samples they can go there and grab them. There may be a video version too if I'm lucky, I'll post that here if there is one.

The presentation is how to get data out of JSON apis and standard webpages, and even how to POST data if you need to. There's quite a few examples and reasons of why you'd use the specific method.

Basically it's a nice primer for building scripts that interact with websites!",1522723900.0
otakugrey,Thank you.,1522806147.0
jrochkind,"So, `\x00` actually means ""one byte zero"".  And ""\u0000"" means ""unicode codepoint zero"".  

I suppose in different unicode encodings, unicode codepoint 0 can be other than one byte 0. For instance in UTF-16, it's two bytes of zeroes.  Hypothetically there could certainly be an encoding where unicode codepoint 0 isn't encoded as 0 bytes at all but some other bytes. Hypothetically anyway. 

I don't know what ""\u0"" is supposed to mean in an ASCII-8BIT/binary encoding, that's just a ruby mystery that it lets you do that and what it expects it to mean. ",1522695497.0
dark-panda,Any chance you can post the entire test in isolation in a gist or something?,1522699134.0
sshaw_,"Several problems here:

 **1**) [`IO#read` always returns binary data](https://ruby-doc.org/core-2.5.0/IO.html#method-i-read) (ASCII-8BIT) but `expected` is encoded in UTF-8. 

For example:

    ~/code/ruby/ruby-src >ruby
    r, w = IO.pipe
    s = ""√™""
    w << s
    p r.read(s.bytesize)
    ""\xC3\xAA""

**2**) I believe since ""\xbf"" is not a valid UTF-8 byte, comparing a UTF-8 encoded strings with a binary encoded string of with the same bytes fails: 

    irb [2.4.0] (ruby-src)$ ""a"".force_encoding(""binary"") == ""a"" # valid bytes in both encodings
    => true
    irb [2.4.0] (ruby-src)$ ""\xbf"".force_encoding(""binary"") == ""\xbf"" # \xbf is not valid utf-8
    => false



",1522729438.0
redcodefinal,"One is a null byte, the other is a Unicode null, so it's actually two bytes of 0",1522707653.0
v_krishna,"Make a gem to support comments that can be attached to arbitrary other pieces of content. Add them to your charts thing, so logged in users can comment on charts.",1522689271.0
,[deleted],1522680922.0
iconoclaus,"If you split your app into database web API + web app, then you could make a gem that wraps your API‚Äôs functionality for your web app.

similarly, if are using any 3rd party web API, you could write a wrapper gem for it.",1522681936.0
hmaddocks,Authentication ,1522725733.0
nanodano,"> I need to create a custom gem from scratch that incorporates a piece of functionality

> I have no idea what to create one for.

I am really confused. How do you not know what you need to make? Is the request for you to 'add any feature at all we don't care what it is, as long as it is a custom gem?'
",1522682358.0
SizzlinSteak,Thank you! Your videos are always a joy to watch. Drifting Ruby has helped me so much over the last year. Can't wait for your next screencast.,1522695644.0
fedekun,"A 15 minutes video just to say ""There is a method named `merge` which can merge scopes. Oh and check out default scopes, they are cool"".

Honestly it was not that bad until they introduced default scopes, that's a big no for everyone decent at Rails. Why show it in educational videos, as if juniors didn't have it hard enough.",1522677699.0
deedubaya,"I haven't used `default_scope` in a codebase and not regretted it at some point in the future. I've ended up adding as many (or more) `unscope` calls as I would have manually added the scope, but with a lot more frustration when finding out where an `unscope` is need.

Use with caution.",1522787671.0
rabidferret,I don't think the capybara example is a good one. Closing an external application opened by capybara when the Ruby script ends is literally the perfect use case for it.,1522698752.0
ioquatix,"In my experience, yes, because it‚Äôs a crutch for poor lifetime management of resources/execution. There are some situations where it makes sense, but not many.",1522711352.0
some_kind_of_rob,"> So much words said and I still gave you no reason for avoiding at_exit right? Well it seems that every project using this feature is sooner or later being hit by bugs related to its behavor and tries to find workarounds

So the argument is, if your code breaks someday, you shouldn‚Äôt have written it in the first place?

Interesting write up about the pattern coming out of the language feature. While I agree that the code in use isn‚Äôt exactly endearing to look at, it makes it elegant to use. Which is what Ruby is all about, isn‚Äôt it? Make your language and libraries programmer friendly to use. Pay the cost of doing the complicated work in the library so that it‚Äôs users don‚Äôt have to. ",1522677928.0
sblinn,"Will this finally be the article to make me hack together a better Cucumber ""after_suite"" solution than, of course, abusing at_exit? Only time will tell.",1522671770.0
chrisgseaton,"Do you mean `cron`? You can just make the Ruby script executable, give it a shebang line, and then add it to the `crontab`.",1522620899.0
eoJ1,"I know the answer, but I'm going to avoid just telling you straight, so that you can work it out for yourself (and therefore solve problems like this more easily in the future).

So, I'll answer your question with two questions.

1. Is clicking the most efficient way? If you want to view multiple posts, you'll have to visit the same page multiple times. How could this be avoided? That window, is it just generated by javascript, or is there a link to it?

2. What options does Watir/Nokogiri provide for finding an element?

Hint: You'll want to open up developer tools on Chrome/Firefox.

Respond if you get stuck still and I can give some more hints.",1522610449.0
nippysaurus,I'm not sure you could hide the code unless you prevented them from accessing the machine. If you absolutely need them to not see it then perhaps you could provide them with a VM appliance / image which will run the site on a predetermined port. That's all I can think of ü§î,1522585074.0
this_is_not_nil,"https://stackoverflow.com/questions/13185814/how-github-enterprise-protects-the-code-they-deliver-on-virtual-machines

https://news.ycombinator.com/item?id=9930838

http://blog.orange.tw/2017/01/bug-bounty-github-enterprise-sql-injection.html",1522584680.0
jordanaustino,"One option could be to run it through jruby and use the ahead of time compiler which would convert it to JavaByte code.

Technically you could reverse compile it but most tools for that are built to change things back to Java... Which I don't even know if that would work. Don't know of any utilities to convert back to ruby currently although it can be done in theory.

Serious downsides here though with having to run jruby and the memory implications and ruby version support implied with that.",1522594557.0
svacko,"you can use a ruby encoder software to somehow encrypt/obfuscate the source code, i.e. https://www.rubyencoder.com/ and deploy it like this",1522701221.0
sshaw_,"You should look into turning your app into [an executable](https://www.ruby-toolbox.com/categories/packaging_to_executables). 

It does not necessarily mean that one wont be able to see the source, and I'm not familiar with the linked solutions. But it's worth checking out.  
 ",1522591994.0
jrochkind,I suggest you use a language other than ruby. ,1522593628.0
geofflane,"It ""freezes"" the string, ensuring that all references to a given value (e.g. ""\x01"") reference the same instance. That should reduce the memory footprint if there are a lot of uses of the same string value.

    i = 1
    (-i.chr).frozen?
    (i.chr).frozen?


EDIT: To add example",1522520692.0
sshaw_,"[Specification](https://bugs.ruby-lang.org/issues/11782):
> +'foo' returns modifiable string.
> -'foo' returns frozen string (because wasters will freeze below 0 degree in Celsius).

Wow. ",1522554663.0
schneems,"Not really an answer to your question, but some might find it interesting. 

I work at Heroku. I maintain the Ruby buildpack and ""own"" the Ruby experience on the platform. 

When a new Ruby comes out we compile it and make it available on the stack. For the most recent version it was up same day of the release. People can get the new version by specifying it in their Gemfile (though really Gemfile.lock).

Internally we communicate when security patches are made. We have a security team. They look at the CVEs and grade them for severity/ease-of-exploit. Based on that they make recommendations to any teams affected (i.e. ""DROP EVERYTHING NOW"", or ""upgrade whenevs""). From there it's up to each team to rev their versions and report back to the security team.

MRI supports last 3 versions of Ruby, and a new version is released every christmas day. So subtract 3 from the current release on christmas day and that version is no longer supported. For example 2.5 was released this last Christmas, which means 2.2 was no longer supported (though they did do one extra security release cause, they're nice).

I personally try to stay on the latest patchlevel of what ever Ruby minor version i'm on. I.e. if I have a project on 2.5 right now it's using 2.5.1. 

I generally try preview releases on a staging app. I try to upgrade and stay on the latest when they come out. If I had a really big app I might wait a month or so to see if there is an x.x.1 release with some bugfixes. Heroku review apps are great here. You can open up a PR with the new version, you get all your tests run and a staging app deployed all in one place.

In general I find that lagging behind in releases or trying to skip versions to be pretty painful (unless there is a HUGE bug or really bad behavior, for example 2.1 GC did not play nice with some people's apps AT ALL). 

If the team is looking for a time trigger as to __when__ to upgrade, a week or month right after a new release comes out is a pretty good trigger. Then you also get to utilize all the cool new features earlier.

This also has the side effect of most apps using versions pretty close to one another so devs aren't surprised by behavior/bug/feature differences when switching apps.

",1522538155.0
caadbury,"Build a new docker container with the correct ruby, blue-green deploy, no downtime.",1522527123.0
manys,"For cloudy stuff I'd just make a new image with the correct version. For bare metal I use RVM, but I'm thinking of moving away from that in favor of system Ruby in order to simplify Passenger upgrades.",1522521107.0
ccb621,"At edX we used AMIs configured via Ansible. Aside from major language upgrades that might be backwards-incompatible with the code, language upgrades should not be dependent on code changes. Ideally, to mitigate issues, you should deploy language upgrades on their own. 

For other projects, I am using Docker. Similar principles apply‚Äîupgrade the language separately. ",1522522245.0
janxious,Add new ruby version desired to puppet config with installation via rbenv. Deploy application code with updated .ruby-version at leisure.,1522532352.0
moomaka,"I deploy with Chef / K8s depending on project, in both cases the version is read from `.ruby-version` which is committed to the repo. Ruby version is checked and upgraded if needed on each deploy either by baking it into the container or changing the version installed with Chef. I'm not sure what you would need a long restart window for, the new version is pulled and built while the old version is still running. I guess the CPU load could be an issue if you're compiling ruby on each box, which isn't a great idea, use packages for whatever OS you're using, e.g. brightbox PPA for ubuntu or build your own. You do get some amount of extra CPU load due to bundler needing to do a clean install for the new version, but I've not noticed this having enough of an impact on app performance to be concerned.

> Does your team track End of Life timelines for Ruby versions? Do you schedule regular language upgrade work each quarter? Each year? Do you try to stay on the latest stable at all costs? If not where do you find the sweet spot?

We keep everything on non end of life versions. How quickly we upgrade major versions depends on what the changes are: Is there something new we want? How many breaking changes are there and are we concerned about them? etc. ",1522520057.0
lunks,"Change .ruby-version, Gemfile, run tests, open a branch. Wait a green CI, merge the PR. CI deploys on Heroku, done.",1522539323.0
beneggett,"We use Salt Stack & bump the ruby version in our config file, we use RVM still to not mess with the running production code dependencies install it and dependencies along side it, then after ruby gems are installed, apps deploy w/ updated ruby version in gemfile  it does a rolling hard-restart rather than a typical rolling phased restart. Often we'll target the non-autoscaling servers first, then the auto-scaling ones second so there's no interruption/delay of service

Old ruby versions get cleaned up after deploy",1522545686.0
jxf,"On Cloud Foundry:

* upgrade buildpack to desired version
* `cf push your-ruby-app`
* that's it!",1522546118.0
strzibny,For me personally it's a system update as I use system Ruby. At work we update Salt definition which is then used during a Docker build (we use Dokku).,1522570534.0
azRyMHk0ZTBzNF8K,"- When a new version gets announced, I, or one of my colleagues PRs a change to our base images. (Alpine and Debian variants)  Rebuild sends webhooks to a bunch of places, so most apps automatically get a new PR with that new base image.  CI load spikes as we rebuild a few hundred Docker images and test basically the entire organization's codebases.

- Teams deploy new Ruby version within a week, typically.  May take a month or so to hit production, but our staging servers tend to run on the latest base image.  (ChatOps bot will DM any people that deploy to staging something that runs on an old version of the base image.)

- While Ruby versions may get EOL'd on their own cycle, we use _one_ (or two) internal base images, and the EOL for those is 4 versions out-of-date. (Our chat bot pings the devops team before deleting those images from the Registry, but does that automatically once approved.)

- We also run a Canary staging server which runs the canary version of the base image that gets rebuilt every hour, and some of our teams prefer to just use that for their work.",1522602182.0
Serializedrequests,"It's kind of painful, but even more painful if you get behind and don't have a test suite. Minor releases are almost always a non-event, but major versions can be annoying require upgrading code that you won't know needs to be upgraded until an unhappy user hits an obscure untested code path.

When a new minor Ruby version comes out, I install it on my development machine and run the tests. If we're all good, I'll install it on the staging and production server, and update a sym link for the current ruby version to point to it, then restart Apache and Passenger. On staging first obviously, in case there are problems.

Would be nice to automate, but that is it usually. 

I'm way too familiar with every version, since we are a small shop that still has some 1.8 code that cannot be upgraded for various (lack of an extra $30000) reasons, and I maintain several internal gems that target 1.8 and 2.4 simultaneously.",1522964864.0
sshaw_,"Most importantly: **don't copy code unless you understand what is does**.

Read [the documentation for `Net::HTTP`](https://ruby-doc.org/stdlib-2.5.0/libdoc/net/http/rdoc/Net/HTTP.html). You're not closing your file descriptors. A long running process may runout of them and error. 

`JSON.parse(request.body) || {}`. Under what circumstances will `{}` be returned? 

Check HTTP response content type before parsing is as JSON. What if HTML is returned? 

You should move the [request/response lines](https://github.com/bajratech/khalti-ruby/blob/master/lib/khalti/transaction.rb#L14-L20) into `get(path)`, `post(path, params)` methods. 

Create an exception class (or several), catch the various exceptions that can be raised by your HTTP and JSON code, and raise a meaningful exception using your class.

[No need to use interpolation](https://github.com/bajratech/khalti-ruby/blob/70a40a0778f6c40c93d11891bf26833e34943ea3/lib/khalti/verification.rb#L15) when the variable is already a `String`. 



",1522553995.0
madejejej,"**Code style:**

- Use `amount.to_i` instead of `Integer(amount)`
- use `#==` instead of `#===`
- Try running your code through Rubocop. There are some other issues a static code analyser will find 

**Testing and error handling:**

You only test happy paths. 

* What if the server doesn't respond? 
* What if the API key is invalid?
* What if the connection times out? 
* What if the server returns a response you don't expect?

**Configuration:**

* I cannot configure timeouts for HTTP connection. And the default timeout is usually too big. See [The Ultimate Guide to Ruby Timeouts](https://github.com/ankane/the-ultimate-guide-to-ruby-timeouts) for more details
* I can only configure your gem via env vars. It's a good pattern with Ruby Gems to expose a simple Configuration object; even an `attr_writer` would do in your case. 


**Error classes**

You probably don't need this:

    class KhaltiError < RuntimeError
      attr_reader :data
      def initialize(data)
        @data = data
        super
      end
    end

As instead you can just do:

    class KhaltiError < RuntimeError; end

    raise KhaltiError, ""Invalid API_KEY""
",1522669203.0
dhurba87,Great work. Loved it.,1522603135.0
jodosha,"API Clients shouldn't expose class level methods, because they lead to handle only one account at the time.

In my understanding, your current design assumes one Khalti account. By looking at the `KHALTI_SECRET_KEY` that is unique for the OS/Ruby env.

If you expose instance level methods, you can instantiate as many clients you need, one for different Khalti account.",1522758724.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/documentation] [Markdown File Inclusion: Recursive?](https://www.reddit.com/r/documentation/comments/88jswo/markdown_file_inclusion_recursive/)

- [/r/github] [Markdown File Inclusion: Recursive?](https://www.reddit.com/r/github/comments/88jw2j/markdown_file_inclusion_recursive/)

- [/r/github] [Markdown File Inclusion: Recursive?](https://www.reddit.com/r/github/comments/88jzch/markdown_file_inclusion_recursive/)

- [/r/markdown] [Markdown File Inclusion: Recursive?](https://www.reddit.com/r/Markdown/comments/88k20l/markdown_file_inclusion_recursive/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1522514948.0
jrochkind,"I guess so, why not? Perhaps as an option not on by default, that you enable in an arg to the helper method. 

Hmm, since markdown helper might be used with user-contributed markdown, it should definitely not be on by default, and perhaps should be configurable with a whitelist of allowed source dirs, checking all relative paths by converting them to absolute paths first. ",1522600978.0
BurdetteLamar,"[Update: just to be clear, by 'recursive' I do not mean a markdown file that includes itself, I mean an included file that includes other files.]",1522775051.0
Shaper_pmp,"[For anyone like me which has no fucking idea what this is about](https://www.cryptokitties.co).

Also, all about this [hodl](http://knowyourmeme.com/memes/hodl?full=1) thing the repo descriptions keep going on about.",1522517799.0
chrisgseaton,"See this FAQ on the front page of the Ruby bug tracking system because people ask this so often.

https://bugs.ruby-lang.org/#Floating-point-numbers

TLDR: the floating point data structure is not able to represent all real numbers with perfect precision. This should be obvious, because there are an infinite number of real numbers, and a finite number of bits in your computer. For the majority of real numbers when you store them in a float you will a number that is close but not exactly the same.",1522443139.0
jrochkind,"http://www.phys.uconn.edu/~rozman/Courses/P2200_15F/downloads/floating-point-guide-2015-10-15.pdf

If your have truly exact quantities (say, money), rather than measurements (which are of course always only precise to certain level), you probably want to be using BigDecimal instead of float. http://ruby-doc.org/stdlib-1.9.3/libdoc/bigdecimal/rdoc/BigDecimal.html

(If anyone ever invents a new language against in 2018+, I'd suggest they strongly consider making a 'bigdecimal' type implementation the default for decimal fraction literals, not floating point!)",1522609213.0
lintmountain,"Computerphile / Tom Scott: https://m.youtube.com/watch?v=PZRI1IfStY0 explains why in more detail.

Also, see the nerdiest/coolest URL ever  https://0.30000000000000004.com
",1522477778.0
Freeky,"The viewport-fixed Share buttons, which are infuriating at the best of times, overlay the article content in both orientations on my tablet, and in landscape on my phone.",1522470692.0
cheeseboythrowaway,"my relationship with system load numbers is essentially ""what's that? 7? that seems high. or low. Reboot it.""",1522439627.0
,[deleted],1522378680.0
TallSkinny,"Could you post more of the code? I just copied and pasted it based on what you said and got the correct answer. How are you instantiating guess and color_match? Are you sure they're the same (try running `puts guess` and `puts @color_match`.) Is it possible one is a Set or is otherwise being uniqued?

Also, note that if color_match is R, O, O, G and guess is R, R, R, R you'll get 4, since each R in guess will just match on the first one in color_match.",1522378537.0
fannyfrictionfactor,"I'm not exactly sure what you want, but I can see a couple options as potentially useful.

If you just want to know how many elements in `guess` match any element in `code`:

    guess.count { |el| code.include?(el) }

If you want to know that elements in `guess` match the elements with the same position in `code`:

    guess.zip(code).count { |a, b| a == b }

I like the suggestion I saw in another comment about keeping track of the count of each letter in a hash (although you may not need that information). Here's how I'd implement it:

    guess.zip(code).each_with_object(Hash.new(0)) { |(a, b), acc| acc[a] += 1 if a == b }",1522419239.0
pedrozath,why dont you just do `@color_match & guess`?,1522378218.0
Agonux,"    arr1=[""R"", ""R"", ""O"", ""G""]
    arr2=[""R"", ""R"", ""O"", ""G""]
    arr3 = arr1|arr2
    colors = Hash[arr3.zip(Array.new(arr3.size,0))]  
    arr1.each { |e| colors[e] +=1 }
    arr2.each { |e| colors[e] +=1 }
    colors.count {|_, v| v > 1}
    =>
     3

    {""R""=>4, ""O""=>2, ""G""=>2}",1522403371.0
petepete,"While some approaches here look promising I think the easiest and safest way to not worry about counting duplicate entries more than once is to delete them as we go.


    code = %w{R R O B I V}
    guess = %w{R O Y G R}

    # g is the guess element, a is the array we're returning
    matches = guess.each.with_object([]) do |g,a|
      mi = code.index(g)
      a << code.delete_at(mi) if mi
    end

    puts matches.size
",1522411963.0
farmer_jo,"To check for intersection between 2 sets you could do:

    [1, 2, 10, 11].to_set.intersection([1, 3, 5, 7])
        => #<Set: {1}>

returns 1 since 1 is common",1522375767.0
seainhd,"There is nothing Jekyll specific that has to happen.  Build a site and set it to the subdomain you want.

Build another site and set to the other subdomain.",1522531581.0
mipadi,"Well, you'd have to buy `name.io`, but you can have as many subdomains as you want.",1522348987.0
stanislavb,"I'm not sure what had been the deceptive part around ""Raptor"" ... but I've been using Passenger for years, and that's been the easiest way to deploy Rails apps for me. So, thanks again for all the OS contributions.",1522539001.0
400921FB54442D18,"These are the same guys who like to pretend they're an entirely different company for PR and marketing purposes, right?",1522364025.0
jodosha,"That‚Äôs the right way. But looking at the Ruby ecosystem, there are plenty of libs measure w/ Time.now. That‚Äôs why I wrote the article. üôå",1522357187.0
guilhermerx7,"I usually use Benchmark.realtime method to measure elapsed time. By looking at the source code, it seems to already use the clock monotonic since Ruby 2.3: 
http://ruby-doc.org/stdlib-2.3.0/libdoc/benchmark/rdoc/Benchmark.html",1522344908.0
Schrockwell,"I expected click-baity content (""you don't need WebSockets!""), but this is actually a thorough explanation of the alternatives and their trade-offs with a nice summary table at the end.",1522337096.0
guilhermerx7,"Wow, never heard about Server-sent Events. Thanks!
",1522345697.0
fuzzyinterval,"TIAL \(Today I actually learned\) how websockets work and that I  don't need to implement them for my existing sites!

Great read OP. Thanks.",1522345129.0
v_krishna,">If you are already using WebSockets or Long polling, don‚Äôt go and convert them to Server-Sent Events.¬†All solutions are basically the same when it comes to pushing data from the server to clients.

I like this author and they sound like a good coworker.",1522372324.0
nakilon,"If your user initiates some long process (like a complex analytics report) so he has to wait for 10-30 seconds and is willing to see a progress bar, will you use server-sent events or will you respond with some spawned job id and ask client to start JS polling loop? And why?",1522373615.0
MeAsYouKnow,"Content was much better than the title lead to believe. Almost didn‚Äôt click because of the click-baity ness, but changed my mind after reading the article. 
Seems like SSE is the way to go, although with Rails now having WS basically built in, that‚Äôs probably the ‚Äúeasier‚Äù method. ",1522377479.0
toadkicker,Thank you for a great read. I aspire to the same when I write on Medium.,1522370496.0
scaredofrealworld,"what is the difference between tcp and http connection ? 

Why does the author want to convey when he says websockets first use http and move to tcp
",1522406385.0
BoWild,"I loved the way you wrote the article, but I'm sad to point out that **your information is incomplete (sometimes wrong) and leads to a mistaken conclusion**.

For example, WebSockets provide reconnection handling through the `onclose` callback. Yes, a new connection (WebSocket) object needs to be initialized, but the feature is still there.

Moreover, SSE events might be supported by many servers - but only on HTTP/1.1. They also experience more disconnections (by design) and end up very similar to long polling as far as resource consumption is concerned (albeit with a nicer code for the JavaScript client)

In addition, existing SSE support often breaks and HTTP/2 connections (which is part of the reason many Ruby servers don't support HTTP/2 just yet).

For example, when Ruby on Rails is used for SSE, the socket is ""hijacked"" from the server and handled independently, breaking any possible HTTP/2 connections. This also spawns threads that clutter the app for no good reason.

SSE is an older technology, it's not new to HTML5. Still, there's a reason SSE isn't as wide spread as WebSockets even though it's older. 

Although SSE was presented as an improvement over the long polling, it's mostly synthetic surge around long polling techniques, especially where connection handling is concerned.

WebSockets solved many of the issues that prevented SSE from being widely accepted (such as adding protocol level `ping` capabilities, minimizing disconnections, preventing CGI applications from blocking, etc').

Other minor inaccuracies were also distracting.

For example, you wrote that:

> It‚Äôs important to note that WebSockets convert their HTTP connection to a pure TCP connection.

**This both wrong and misleading**.

TCP/IP is a streaming based protocol while WebSockets (which, just like HTTP, run as an added layer over TCP/IP) is a message based protocol, allowing clients and servers to have distinct knowledge of the data (message) boundaries.

The distinction is huge, as it allows for JSON data to be transmitted without worrying about data fragmentation of concatenation.

---

Having said that, [Ruby support for WebSockets is in a bad way](https://bowild.wordpress.com/2016/07/31/the-dark-side-of-the-rack/).

I'm trying to fix this with the [iodine HTTP/WebSocket server](https://github.com/boazsegev/iodine), but it's a long uphill climb.

On Ruby, unless using AnyCable, iodine or LiteCable, SSE might perform better, but on any other platform (and especially considering the client side of things), WebSockets are by far superior.",1522378757.0
banister,is this an april fools joke?,1522631442.0
jrochkind,"couple weeks til you know your basic way around? I don't know! 

I don't know Laravel, but compared to say, Django, Rails has a lot less functionality 'built in'. The `devise` gem is very popular for authentication.  There are definitely a lot of libraries (""gems"" in ruby) that work with Rails. 

Learn ruby as a language first (taking somewhere between a few days and a few weeks with it) before you look at Rails. ",1522379886.0
Key720,"Rails is designed with convention over configuration. I.e. Files in the application have to be named a certain way (e.g. a controller class called `InventoryItemsController` should have its filename be called `inventory_items_controller.rb`) and be put under the right directory (e.g. models, controllers, views) for ‚ÄúMVC magic‚Äù to happen. The Rails errors that get thrown if you don‚Äôt follow the example conventions can be pretty vague.

You may need to put some time down to learn how the ActiveRecord pattern works and its quirks with callbacks depending on which Rails version you‚Äôre working with, if the repository pattern is what you‚Äôre more familiar with.

Good knowledge of Ruby is required. Or reading some of the back end code may overload you.

Picking a ruby version management tool (e.g. rvm, rbenv, chruby) and sticking with it is ideal. If you really must switch, like I did from rvm to rbenv, make sure you delete the old ruby management tool and the libraries you installed via it completely! I once wasted two days trying to work out why an existing Rails app couldn‚Äôt run on my local development environment because I had different versions of Ruby installed by two different ruby version management tools.

If you get a full time Rails job and there are mentors readily available to you, I guesstimate it‚Äôll take you at least 3 months to learn Rails with MVC experience. But the pace may drastically vary. Unlearning conventions from other web frameworks (read: realising they don‚Äôt apply to Rails) can be obstacles in the learning process too.

Add the possibility that a front end framework is used with Rails API and you‚Äôll have another learning curve with that. Or haml or slim is used over erb for rendering HTML.",1522294159.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/github] [Project structured\_log Goes Public](https://www.reddit.com/r/github/comments/87vr53/project_structured_log_goes_public/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1522272788.0
tickypupu,cool but why xml rather than json or some format that's less of a clusterfuck?,1522312930.0
chmarus,What is benefit of using turbolinks instead of react router?,1522267932.0
fraul,I'm assuming you are the lib's mantainer (sorry if you aren't). Any plans or guides on how to use this with an Expo app that has not (and will not) be ejected?,1522282029.0
schneems,Ruby 2.2 will be EOL after march (this month) https://www.ruby-lang.org/en/news/2018/03/28/ruby-2-2-10-released/,1522266915.0
jrochkind,"Nice, I've been waiting for 2.5.1 for literally months, for some bugfixes for bugs identified and fixed soon after 2.5.0 came out, that did effect me. ",1522359521.0
banporkpie4,"Something to note, we ran into issues with Passenger/Nginx bumping 2.4.3 to 2.4.4 and we had to manually update rubygems via `gem update --system` and rebundle to resolve it. The docs noted the new rubygems version for these versions, but didn't note you have to manually update it.",1522346656.0
janko-m,"Great insightful article! It's worth noting that `Benchmark.realtime` uses `Process.clock_gettime` under the hood, which I use whenever I can:

    require ""benchmark""

    puts Benchmark.realtime {
      # code
    }
```",1522263905.0
janko-m,It looks like you've already inspired someone ;) https://github.com/jeremyevans/sequel/commit/c8385afd1891de701e07f80c9981065f1f2db852,1522264069.0
jodosha,"Yes, that is important when you don‚Äôt care about the returning value of the block or when you can wrap the code with the benchmark measurement. Sometimes you still need to subtract the time manually, that‚Äôs where the monotonic clock is useful.",1522266074.0
karmiktoucan,"You don't need to manually install python on your hosts for ansible, just use raw module - http://docs.ansible.com/ansible/latest/modules/raw_module.html",1522312377.0
karmiktoucan,"You can configure ruby via various ansible roles like:

https://galaxy.ansible.com/geerlingguy/ruby/

https://galaxy.ansible.com/rvm_io/ruby/ - official rvm role

https://galaxy.ansible.com/zzet/rbenv/

There is also a role for nginx - https://galaxy.ansible.com/geerlingguy/nginx/",1522312988.0
skamansam,"Matz is notoriously nice, hence the MINASWAN acronym: Matz is nice and so we are nice!",1522259020.0
hkodu,I was at the conference as one of the volunteers - your talk was great! We heard very good feedback from it :),1522261022.0
,[deleted],1522382975.0
geraldbauer,"Great news. Added the the ""Benchmark Driver Designed for Ruby 3x3"" to the [3x3 articles collection](https://planetruby.github.io/calendar/ruby3x3#articles) at Planet Ruby. ",1522248418.0
swerveone,"Nice contribution, I'm excited to follow the unfolding 3x3 progress.",1522442841.0
menge101,"Purely speculative, but I hate to see a request for help go unanswered:

If deleting isn't working can you overwrite it with a blank/empty document?",1522205448.0
schneems,Struct and OpenStruct are both pretty slow. I tend to only use them for prototyping,1522200203.0
realntl,"The problem wasn't subclassing a struct instance, it was, once again, Rails' infernal autoloader!",1522189462.0
zverok_kha,"Sorry for offtopic, but I am wondering: is it your choice to place it as a ""Member preview""-class Medium article? 

It is kind of ""soft paywall"" now (""Become a member now for $5/month to read this story and get unlimited access to all of the exclusive content on Medium."" it says to me. I believe that not-logged-in, or rare Medium users aren't seeing this.)",1522225307.0
gryfft,I do 90% of my work in [Chef](https://chef.io) and it is a delight.,1522159511.0
laerien,Yes.,1522169212.0
hswick,"Not all applications are web applications. Rails is specifically targeted towards web apps, if you are doing something different then you will not need Rails. However, some of the pieces that make up Rails are nice to use for other projects, like ActiveRecord for example",1522164523.0
rubygeek,"I've used Ruby for almost everything I've done for the last 13 years. Of that I've briefly touched Rails part time for about 1. Most of my work has been devops related. 

It really depends on what you want to do, as some fields are dominated by specific languages or dogma about types of languages. 

I would say though, don't focus on the language. If Ruby is your first/only language, pick up at least one other that is quite different (at least to basic levels of proficiency). A programming language is a tool. Being able to use one tool very well is great, but learning how to quickly pick up the necessary tool for a specific job is better. Programming languages are like natural languages - the more you learn, the faster you pick up new ones and the more your skills cross over (e.g. many methods drawn from functional programming can be used very successfully to write more easily testable code with Ruby, to give a single example).


",1522164671.0
pdabrowski,What is your goal? Do you want to find a job in the future or something else?,1522158363.0
jrochkind,"Worth it for what? I think ruby is very appropriate and useful for automation/testing stuff, and there's sufficient ecosystem for it. I have no idea what the job market is like though, myself. ",1522158737.0
editor_of_the_beast,"It's certainly less common than Rails work, but I've used Ruby for scripting at all my jobs (I was introduced to it this way) and have only used Rails at my current job. 

Ruby is an incredible scripting language. I love making commandline tools and writing one-off scripts to answer a question. It's a great language to express thoughts in.",1522178471.0
postmodern,"I stopped using Rails years ago and instead switched to [Padrino](http://padrinorb.com/)/[Sinatra](http://sinatrarb.com/), and now am watching [Hanami](https://hanamirb.org/). Even in the context of MVC web frameworks, you can get by without learning Rails; although it's worth learning ActiveRecord.",1522193066.0
dukaev,"With you everything is fine :)
So you don't need Rails if you use ruby only for automation and testing. In addition to the rails, there are many other interesting frameworks.

If you are interested in web development then try for example Hanami.
",1522160443.0
poptartsareravioli,"I can only speak to my experience but I find that most businesses that start with Rails eventually end up with a monolith and end up tearing it down and stripping it back to mostly Ruby anyway. While it‚Äôs good to learn as a beginner or purely as a means to get stuff done it can turn into a steaming mess very quickly. Solid Ruby experience will serve you just as well or if not better IMO. Solid experience with Ruby will allow you to pick up Rails and it‚Äôs nuances pretty quickly. If you were to start looking at Rails I would start with Ruby on Rails API.

 In short yes, It‚Äôs worth continuing without Rails it will make you a better developer.",1522184570.0
kidtaicho,"From the context of a RoR developer, I think ruby is the reason why rails is so great. 

Metaprogramming with ruby is so cool to play around with and allows you to do a lot of unique things. Additionally, its pretty well supported with a strong community and there's a lot of speed improvements coming with ruby 3. So I think its worth sticking with it.",1522184863.0
henrebotha,"Yes, it is worth continuing to learn without working with Rails.

Is it optimal? Depends on your goals.",1522163911.0
bigfig,"Yes.  I think Rails is clever, and more robust than one has a right to expect given the complexity of it, but coding by convention is not the best habit to get into.",1522170108.0
musingswithawesome,Ruby is great for non-rails applications. Love it for different types of projects except when there needs to be a desktop user interface. ,1522180583.0
colindean,"I've never really gotten into professional Rails dev and I've been using Ruby for nine years. However, I wouldn't say that I use Ruby for everything everyday. I would say I'm more of a professional Scala developer for the last couple of years. Ruby is still my go-to for scripting and rapidly developed web projects, generally using Sinatra.",1522159546.0
,If you want to go into Devops maybe. There‚Äôs also Sinatra and stuff like Crystal but don‚Äôt expect to get a job with it.,1522159149.0
maniacalyeti,"I haven't worked in Ruby at work for a while, but when I was, we primarily worked with Sinatra and a bit with Grape, and I loved it.",1522188123.0
tk425,"I have never touched rails and Ruby is my whole job  
  
Edit: more detail:

Use rspec, capybara is for rails and UI shit  
Keep your tests simple  
Check out http://rubyblog.pro/   
Binge watch every video on YouTube with Sandi Metz in it.  
Learn how blocks/procs/enumerators, and yield work  

  
Out whole SaaS product is written in Ruby. Don't be fooled just because rails is so popular. It's just a very idiomatic and wonderful programming language to work with, it puts developer happiness first.",1522192516.0
HomemadeBananas,"I‚Äôve used Rails for an API a lot, but on the newest project I‚Äôm working on, and a couple of smaller ones before, I decided to use Sinatra. I still use ActiveRecord but I like this better. It‚Äôs simpler and pretty similar to working with Rails. Everything I‚Äôve done involving Rails or Sinatra for years has been with a React front end, so a lot of what Rails offers is totally unnecessary. Haven‚Äôt built any applications where Rails is rendering HTML in a long time.",1522195985.0
Oranges13,I use Sinatra and Padrino on a daily basis. Absolutely.,1522199881.0
twinklehood,"At the end of the day, jobs you pick will come with some frameworks attached, be that homegrown or not. A job in ruby server development will very likely expose you to some parts of rails, at least. And actually the rails codebase is full of awesome things to learn from. 

Ruby is awesome either way.",1522218685.0
GibletHead2000,"I've written lower-level services and microservices without rails, using either just Rack on its own, or adding Grape to the mix.

It's also heavily used in our CI and DevOps workflow as discussed elsewhere.

The biggest issue I had with moving away from Rails for everything was missing the language extensions that you get for free with ActiveSuport & friends - you even run into Stack Overflow answers asking ""how do I do x in Ruby"", which have answers that don't work without at least some of Rails loaded. You get used to it though.

It's all about what you need though. If you've got no need to do something thinner than a full-blown Rails stack then you need to work out what your motivation is for ditching it. If it's just for professional development you might get more mileage out of adding another language to your repertoire.",1522219668.0
unflores,"100%. You could look at small problems that need to be solved maybe. I had some data that needed to be structured and all i had was a page that was copy-pasted.

Or maybe you could play around with a scraping project or something",1522236075.0
nakilon,"Depends on where you work. You can check the job search sites.  
In Russia there are almost no software engineers at all (they go abroad) so 98% of Ruby vacancies are Rails, the rest 2% is what you said -- see hh.ru  
In US Rails are only around 50% -- see stackoverflow.com/jobs",1522553845.0
realntl,"Well this post epitomizes basically the opposite of what I've learned from my experience.

ActiveAdmin becomes ""technical debt"" the minute it's added to the Gemfile, and the 100 LoC authorization module teams used to paste in to their lib directories in 2007 is still a better starting point for authorization than heavyweight gems like devise.",1522157875.0
_matthewd,"Rails does have a strong opinion on admin frameworks: *don't use one; every project ends up needing some snowflake interfaces, and all admin frameworks paint you into some sort of corner.* (My opinion has evolved substantially over the years since I straight up (semi-)ported Django's admin. DHH's was firm even back then.)

It sounds like you're generally looking for a whole additional level of application skeleton built in. Try https://github.com/thoughtbot/suspenders ? I'll grant that with Active Storage, we've arguably crossed the bright line between being an underlying framework/library and supplying part of the application... but I don't foresee Rails taking on things like auth any time soon.

> I‚Äôm sure we can agree on an approach that works for most people

If that's true, whence the fragmentation? (Setting aside cancan -> cancancan, which was just a maintainer transition.)",1522161561.0
janko-m,"> It basically means this- let‚Äôs not create 6 different gems to handle file attachments ‚Äî each gem having it‚Äôs own community, syntax, philosophy and slightly different features. Instead, when we see a very common web development problem (and file attachments reoccurs in a huge number of projects), let‚Äôs bake it into the framework.

Well, over time there's bound to be multiple solutions to the same problem, in any language. Instead of Rails creating yet another file attachment solution, why not choose an existing solution that they think works best, and maintain only a Rails integration for that gem inside the Rails repository (instead of reimplementing the whole thing)? That way you get core functionality that can be used and maintained by the whole Ruby community, not just the Rails community.

> I don‚Äôt want to have to memorize ActiveAdmin syntax, RailsAdmin, Administrate and what not. We all have much better things to do with our time.

Why would in your opinion an admin component baked into Rails necessarily be the ""right"" solution? In my experience gems not tied to any Ruby web framework have much more impressive features and flexibility than Rails-specific gems. I think it's because it forces you to choose a good design, instead of splitting the gem into ""Rails engine"" drawers. A good example is Devise vs Rodauth.

> I‚Äôm sure we can agree on an approach that works for most people and bake it into the framework.

Again, in my experience many solutions that Rails came up with don't work well for as many people as some generic alternatives. For example, Sequel is arguably a much most versatile Swiss army knife, while with ActiveRecord you have to start making many workarounds when dealing with more complex queries or larger number of records.

> Those developers that want more freedom don‚Äôt choose Rails anyway: they choose Sinatra

Yes, and if you are migrating to Sinatra/Roda/Cuba/Hanami/Grape, but so far you were using only Rails-specific gems, you have to completely overhaul your toolset. Whereas if you were using generic gems with Rails, you can keep using those same gems when you switch to a new Ruby web framework.",1522161870.0
prh8,"This opinion basically boils down to I want Rails to build more of my app (poorly), and screw over other people who are capable of integrating better, 3rd party solutions. These things exist, this isn't a new ecosystem that needs tooling. ",1522249968.0
katafrakt,"Wow. Where do I start?

> I have yet to see a Rails project (or any other project for that matter) that didn‚Äôt need an admin dashboard at some point.

Well, none of Rails app I worked with (it would be about 15 of them) needed it. Especially they didn't need any half-assed solution like any default admin panel would be. If it's really needed, you can build it in reasonable time. That's the thing with Rails, you know, prototyping is fast.

> If you have a database, if you‚Äôre keeping records ‚Äî someone eventually will need an easy way to see and modify them.

You assume that there is one-to-one mapping between models and business logic. It usually is not. Just giving people access to your databasae tables won't get you far - they will screw up your data totally or they won't know what to do. Again, if you need people modify record from admin panel - build one.

> Having a ‚Äúchoice‚Äù slows the developers down when switching projects, fragments the community, and causes us to waste energy by recreating and relearning the same thing over and over again. 

Maybe. But it's a little price for having what chaices give you - possibility to choose the best solution, not the only one. Plus, having one true solution is actually a huge risk - what if maintainers decide to go the way you don't like or break your project? You're screwed, because you don't have a choice. That slows everything down as hell.

> let‚Äôs not create 6 different gems to handle file attachments ‚Äî each gem having it‚Äôs own community, syntax, philosophy and slightly different features. Instead, when we see a very common web development problem (and file attachments reoccurs in a huge number of projects), let‚Äôs bake it into the framework . That‚Äôs why Rails 5.2 will introduce ActiveStorage.

Yeah, right. The story is actually completely different. Do you remember first upload gems out there? I do. They were a mess, lacking basic features and ridden with bugs. That's what always happen with immature and young technologies. It's not an accident that Rails team introduces ActiveStorage now - they waited for solutions to mature and be stable and now propose a solution based on best (hopefully) parts of them.

If upload was in Rails from day one - who know how would it look? There is a big chance you wouldn't like it.

> And that‚Äôs why we have ActionCable.

Does anyone really uses it for any other purpose than impressing your manager? I mean, it's such a resource hog, I cannot really imagine someone being serious about using ActiveCable in production. Luckily, we have alternatives (namely, AnyCable), but from the level of this blog post I have no doubs the author has never heard about it. And obviusly it's wrong, because, you know, choices.

> The rest of us are waiting for Rails to make web development easier by finding common solutions and best practices for common problems.

Finally, a part I can (kind of) agree with. We all need some best practices and solutions. And... We have! There are tons of gems you can use right away with your Rails app, without imposing it on the rest of the world. That's a great value. Please, don't try to spoil it by reducing Rails target to kind of apps you do.",1522264900.0
Paradox,"If you want a pretty view into your database tables, download TablePlus and go wild.

Admin interfaces should be about accomplishing administrative tasks, i.e. reports, not viewing database content",1522171427.0
jrochkind,"Eh, I'm glad Rails isn't Django, it's a toolkit for making your own app, where Django makes a lot more assumptions about what your user-facing app will look/work like.  Which of course get in your way when they don't match what you or your users actually need. ",1522158874.0
pavlik_enemy,"I hold the opposite opinion, I don't like Rails eating the world and integrating everything into the core, it crowds out alternative approaches. I'd rather have multiple libraries handling assets, real-time communication, uploads etc that could be chosen for specific needs.",1522391908.0
LivingAnywhere,"Hmm.. Admin should not be in the core but we should have a super strong admin framework gem, or cms, or a blog, or anything that makes making and managing content easier.

To be honest i find it absolutely disappointing that the rails community still hasn't figured this out yet. I love rails for making custom apps, but my growth hackers, bloggers whatnot in my company love Wordpress. And you know what. They are right. As much as i hate to say it, and as much as its a nightmare to maintain, keep secure and build on top off there are many features and tons of plugins that are doing their job faster without waiting for a dev to come around. So what happens? I as a CTO want to give them the best tools around so they can do their work, that often ends up in having a Wordpress and a custom rails app to make this work. 

Its crazy because Rails is by design is amazingly pluggable, the whole engine architecture makes it perfect for admins, content management systems and what not. It fits like a glove and yet we cannot as a community get a strong focus on one cms.

I've used active admin a lot. Not for end-users, but for making admins for _developers_, for rapid prototyping screens, and models, making sure the validation errors make sense.  Its super fast prototyping with the customer if i have all the fields okay, if the names are good, if im using their domain language etc. I usually sit down with the customer and just flesh out the models over and over until the input fields look okay from a functional point of view. They can literally click trough their app in a single day and give feedback. After the models are fleshed out we'll start making the fancy screens for the real users.

On top of that we use active admin for the management of jobs, likes, logins, ip adresses, traces and what not. It has an actual benefit (but a pain to extend and theme,  just too complex)

From my point a view there is a need for a strong admin framework and a strong content management framework. ",1522530998.0
choonggg,"Short answer. Use WordPress. 

Rails is opinionated enough but not to the extent of adding every thing you need. And authentication? Use has\_secure\_password and cookie, rails cookie is encrypted",1523330726.0
zverok_kha,"(I assume you are talking about Rails API, because, say, Grape naturally has ""docs for the endpoint"" as a part of its DSL)

I studied the question some time ago and grown to be unhappy with what I've seen. As far as I can tell, there are basically two approaches to automating API documentation:

1. Embed docs in controllers code ([example](https://github.com/Apipie/apipie-rails));
2. Make tests generate the docs ([example](https://github.com/zipmark/rspec_api_documentation))

I ended up with an in-house solution (not ready for gemifying, unfortunately), which enforced API docs via reusing RSpec contexts metainformation, and describing entire API in specialized `spec/requests/api_blueprint_spec.rb`

The approach looks like this (sorry for the long snippet):

    describe '/job', blueprint: {resource: 'Jobs', path: '/job'} do # Generates /job namespace docs from this
      describe 'POST /new',                                         # Generates POST /job/new docs from this
        blueprint: {
          action: 'Create new job',
          path: '/new',
          method: :post,
          description: %Q{
            <SKIP> Just free-form docs
          }
        } do

        let(:job) { ... }

        context 'success',                                          # Generates sample success response from this
          blueprint: {
            response: 'success',
            params: {job_name: 'some_movie.avi'}
          } do

          its(:status) { is_expected.to eq 201 }
        end

        describe 'job_name',                                        # Generates ?job_name param docs from this             
          blueprint: {
            param: :job_name,
            example: 'sample movie.avi',
            description: %{
              <SKIP>
            }
          } do

          context 'when empty' do
            it { is_expected.to be_successful }
          end

The idea is ""if it is not tested, it is not in docs"" and vice versa. It is not the ONLY test for API requests, just the one that generates docs.",1522146271.0
hhunaid,That sandbox trick is pretty dope tbh. I am a rails dev for 2 years now and didn't know that.,1522146427.0
I-just-came,Question about attribute_method_suffix and prefix: what if I need to define multiple prefixes or suffixes? How can I do that?,1522195480.0
sshaw_,"I've never used `ActiveModel::AttributeMethods` but seeing it here reminds of [how Perl's Moose can handle attributes](https://metacpan.org/pod/distribution/Moose/lib/Moose/Manual/Attributes.pod). 

Too much magic, maybe..?",1522206414.0
banister,Can't this all be done fairly trivially with `dtrace` on osx?,1522143068.0
jrochkind,"Interesting. At first glance this looks a  lot better than other ruby DI stuff I've seen, more rubyish and with less boilerplate overhead. 

But I don't totally get it. I have to spend more time with docs, but if you wanted to put more example/demos in the initial README, that would be helpful. Like, I'm pretty sure I can guess what the `settings` are, but I don't really get the other blocks. (/not a Javaist, not someone who's done a lot of ""DI""). ",1522169131.0
tickypupu,wtf did i just read,1522139107.0
dmke,"You can use [YARD](http://yardoc.org) to generate documentation, [rubydoc.info](http://www.rubydoc.info/) is built atop of it. To provide documentation I suggest the following, since Geminabox does not provide much in terms of APIs or hooks:

- have a web- and/or intranet-accessible webserver, say `docs.gems.yourcompany.com` delivering `/srv/www/docs/`
- extend Geminabox to...
  - ...autogenerate docs on a push (e.g. [here](https://github.com/geminabox/geminabox/blob/v1.0.1/lib/geminabox/gem_store.rb#L16-L21))
  - ...include a link to `http://docs.gems/yourcompany/$gemname/$version/` on their [gem view](https://github.com/geminabox/geminabox/blob/v1.0.1/views/gem.erb#L27-L38) (optional)
- save the generated docs at `/srv/www/docs/$gemname/$version`
- (optionally) rebuild an `/srv/www/docs/$gemname{,/$version}/index.html` (or use your webservers' default directory listing)

This has some obvious downsides: you need to maintain a fork of Geminabox and your gems need to be buildable with YARD (which shouldn't be much of a problem). If you already have a CI/CD setup, you can use it to generate the docs (but you'd propably still need a way to merge the documentation for all your gems).",1522103313.0
turboladen,"Have you tried [gem server](http://guides.rubygems.org/command-reference/#gem-server)? Maybe that‚Äôs a dumb question, but just thought I‚Äôd ask. Surely you‚Äôd have to install those gems so the command would serve only what you want, but seems scriptable.

Edit: more explanation.",1522134215.0
andrew_404,Perfect name for it,1522123542.0
martijnonreddit,"Thanks, I was planning on emptying my Twitter account and this was quite effective :)",1522156104.0
olivierlacan,"Ah man, you beat me to my own post. :-D",1522112168.0
jrochkind,"Thank you, so needed! The ruby timeout situation is a mess. ",1522085914.0
seainhd,"FWIW the dude that owns this repo has a dozen or so AMAZING ruby projects that most experienced devs drool over because of how helpful they are.

He's was dev #1 at instacart.",1522125287.0
DudeManFoo,Every now and then... I see something simple yet awesome... this is one of those things.,1522236473.0
isolatrum,cool! would be awesome if there was a way to sort by stars or downloads and also return more results.,1522086240.0
geraldbauer,"Hello, 

do you have (crypto) collectibles on the blockchain? Encode / decode your binary bits in 5-bit groups in the base32 / kai notation with the new base32-kai library /gem. What's it for!? Use it for (crypto) kitties, copycats, and friends. 

Happy collecting and encoding / decoding bits & bytes with ruby. Cheers. Prost.",1522072408.0
pedrozath,"I think it would be nice to add that true reason most ruby developers use `private` is to say: Hey, this is for internal use only, so don't worry too much about these methods.

At least that's how I code most times. Private methods by definition don't need to be tested, can change at all times and sometimes are even a little messy.

I say that because as I was learning OOP and Ruby, I always read these kinda of information explaining that `private` methods can't be accessed outside and stuff. I was like, ok, but why is that so important? Some say for security reasons and that bugged even more, I mean, what if I'm coding a music library, why is security so important?

So the click for me was when a work colleague said: `Private` means: ""these stuff are mine only, don't mess with these!""",1522076356.0
flanger001,"Saying the dot operator is an implicit send bugs me but this is a good article otherwise.

Edit: thank you for downvoting all my replies in this chain, forgive me for expressing an opinion",1522072444.0
jrochkind,"This is good, but what is ""a receiver of the same family"", what does that mean?  The same class? Something else? I could look this up myself, I always forget exactly how ruby protected works, or I could ask OP to do it for me and add it to their post ha. ",1522101117.0
andyw8,"Good summary, but this part stood out to me:

> The Kernel#send method has a specificity that can be useful in some cases (testing, etc..).

Using `send` to circumvent `private` or `protected` in tests probably means you're breaking the encapsulation and testing implementation details rather than the overall behaviour of the class.

If there's a need to use dynamically generated method names in tests, then prefer `public_send` over `send`, since it obeys the visibility rules.",1522111145.0
dtcristo,"[softcover](https://github.com/softcover/softcover) does everything you mentioned.

Created and maintained by [@mhartl](https://github.com/mhartl) author of [Ruby on Rails Tutorial](https://www.railstutorial.org), itself a book published using softcover.

Edited: GitHub link",1522040420.0
robertross,"I like Pandoc for this. There's a nice ruby gem that wraps it for you as well: https://github.com/alphabetum/pandoc-ruby

I use it on [Blindside.io](https://blindside.io) and it works great for markdown -> epub.",1521990227.0
archlich,Emacs org-mode with html export and your own css styling.,1521994162.0
geraldbauer,"Jekyll is a better alternative to Gitbook. All you need is a book theme / design :-). I collect some over at the octobook org. For more about octobook, see the octobook talk notes <https://github.com/geraldb/talks/blob/master/octobook.md> and for a live example <https://github.com/octobook/gitbook-to-octobook-sample>.

PS: The [Yuki & Moto Press Bookshelf](http://yukimotopress.github.io/) is built w/ Jekyll and Octobook themes (and GitHub Pages).",1521999564.0
geraldbauer,"For more (jekyll) book themes (other than octobook), see the book designs repo <https://github.com/bookdesigns>. For another gitbook look alike, see -> http://bookdesigns.github.io/book-git   It's just plain jekyll (with github pages). Cheers. Prost.",1521999888.0
zfundamental,"[asciidoctor](https://asciidoctor.org/) provides the needed output options, though the source is asciidoc, not markdown.",1522072483.0
chmarus,Read about 'cron jobs'. Cron is a program that lets you schedule execution of script,1521971470.0
Hell_Rok,"I've not tested this on windows or for long running GUI applications but it should be as simple as:

    `C:\path\to\program.exe ""#{file_path}""`

Note that those are backticks (`) not single quotes (')",1522036582.0
blpittman,Check out [Launchy](https://github.com/copiousfreetime/launchy).,1521971468.0
joemi,"I might not be the best person to answer this for you, since I learned Ruby after I already knew programming in general (JS, Python, C, Java) so learning Ruby for me was more about figuring out the Ruby way of doing things than learning how to program. But these are some resources I see recommended a lot that appeal to me: 

* [Why's (Poignant) Guide To Ruby](https://poignant.guide) (free online book -- a whimsical illustrated intro to Ruby basics -- you might already know some/most of this, but it might still be a fun read)
* [Learn Ruby The Hard Way](https://learnrubythehardway.org/book/) (free online book, I think? -- a less whimsical intro that goes a bit deeper than Why's guide)
* [Practical Object-Oriented Design in Ruby by Sandi Metz](https://www.amazon.com/gp/product/0321721330) (non-free book, also available as an ebook maybe? -- for when you want to get deeper into Ruby beyond basics and start thinking about programming patterns and program design)
* [Ruby's Core API documentation](http://ruby-doc.org/core) (you can learn a lot about Ruby just from the documentation of its own modules and classes and methods)

I've been meaning to read Sandi Metz's book since I've watch some talks she's given and they've been very informative. And searching/browsing/reading the Ruby documentation is something I end up doing almost every day, whenever I'm programming. It's a good reference if you can't quite remember the name of a method, and it's also great to click the ""click to toggle source"" link so you can see how Ruby's own methods are defined. Some of the most basic and important methods are going to be in C, but a lot of the methods (especially in the std-lib) are themselves written in Ruby, and the C is often simple enough to understand what it's doing if you understand Ruby but don't have any experience with C.",1521958065.0
sprayAtMeBro,A friend recently passed on his copy of [Eloquent Ruby](https://www.amazon.com/Eloquent-Ruby-Addison-Wesley-Professional/dp/0321584104). It's slightly outdated but still holds up.,1521962361.0
janko-m,"The [Programming Ruby](https://pragprog.com/book/ruby4/programming-ruby-1-9-2-0) book was really great for me when I was starting out. It goes over the Ruby core classes and concepts in 3 takes, first time on a basic level, then intermediate, and the 3rd time it dives deeper. That format really suited me.

As someone already suggested, it might be good to start with Sinatra instead of Rails. Rails gems tend to be more plug-and-play, so you can get away without understanding what's going on, but with Sinatra you usually have to understand how something works if you want to implement a feature. Sinatra has great documentation, just like Rails.",1521970899.0
Dee_Jiensai,"If you are doing (most) things in rails, you are already programming ruby.

I think what you are looking for is the dividing line between rails and the core language, which is very blurry.

I would suggest to pick a simple problem and make a ruby program to solve it.  
Some suggestions:

- hello world  
- have  user enter some numbers and add them printing the result.  
- display contents of a text file  
- write a class that stores some data in a file and can read it again.  
- etc.

The idea is to learn pieces of ruby that you have no contact with using rails. (IO, console output, files etc.)  
Best would be if you have any process you often do and write a ruby script to automate it.

",1521964962.0
ridl,"Check out launchschool.com, I've been very happy with their approach",1521961089.0
dwitman,The [Well Grounded Rubyist](https://www.manning.com/books/the-well-grounded-rubyist-second-edition) is an incredibly good book IMHO. ,1521970535.0
hmaddocks,"The Ruby website is a reasonable place to start 

https://www.ruby-lang.org/en/documentation/",1521956846.0
midasgoldentouch,"If you look at the sidebar or wiki, there should be plenty of books and project ideas listed - or linked in some cases.",1521956961.0
daxofdeath,"try some code katas - the supermarket kata was one of the first things i pushed to my github, and in the five or so years since then, i've redone it a handful of times.  

not only are code katas a great way to practice and sharpen your skills, they can be a very interesting snapshot of how you've developed.  

http://codekata.com/kata/kata01-supermarket-pricing/",1521965783.0
jrochkind,I myself learn best from actual books. Would you like book recommendations? ,1521960121.0
lucraft,The Ruby Cookbook by Lucas Carlson. I read it cover to cover twice when learning Ruby and I learnt more practical things from that than anything.,1521966836.0
,"I would like to recommend [The Well Grounded Rubyist](https://www.manning.com/books/the-well-grounded-rubyist-second-edition) to the list.

You can find it for a lower price if you look around, but this is a very comprehensive and easy to follow Ruby book. It introduces you to all the Swiss army knife features of Ruby.",1521967701.0
spidermonk,"I used to suggest people start with Sinatra rather than Rails, if they're new to ruby and web-dev frameworks in general. It's got enough stuff in place that you can easily build something that ""does something"" without getting frustrated immediately, but it's bare-bones enough that you have to think through all the layers of stuff that Rails is doing for you.

Then once you go back to rails, you've got a better feel for what it's doing for you, etc...

This is how simple a sinatra app can be: https://github.com/sinatra/sinatra-template

[The docs](http://sinatrarb.com/intro) are very readable, and you can sit down and read the entire source-code in an hour or so, if you want to.",1521968819.0
DrVladimir,"Think of a small project that suits Ruby's strengths (or weaknesses) then do it.

It's a pretty damn good scripting language, fantastic at text processing, and can do some pretty fun gymnastics via reflection.",1521970665.0
Rinakles,"As a complete newbie to object-oriented programming, I was confused by the denser books such as The Well-Grounded Rubyist -- and ended picking up some bad habits because of that.

It's been years, but I think I got most actual use out of The Book of Ruby (by Huw Collingbourne). As a gamer, the examples were easy to relate to. Can't recommend it if you plan to make a career out of it instead of just programming for your own fun, though. It's not big on sticking to the standards.

After learning the basics, I moved on to Programming Ruby and found it easy to digest.",1521977590.0
Im_kinda_hungry,"I second Eloquent Ruby. I‚Äôve worked with Rails and Ruby for almost 4 years now and I make it a point to read it once a year. Everytime I do, I learn something new.",1521990878.0
tk425,"Go binge watch every video on YouTube with Sandi Metz    
  

  
Read https://rubyblog.pro  
  
  
There is also great official documentation, very readable.",1522035998.0
rowendy,What about to write your own gem and read the code of other gems like rails?,1521956698.0
cwncool,"Check out the Ruby section of The Odin Project! It's a well organized curriculum, some original, some external, and it helped me a lot to better understand ruby before I jumped into Rails!",1521983167.0
boulevardwheat,"I really enjoyed using [Ruby Koans](http://rubykoans.com/). Essentially, it‚Äôs just a repo you download with a bunch of tests you run that fail. It gives you hints as to why they failed in the error messages so then you can look at the code to fix them. I liked that I was using my own tools (command line and text editor) and it made me get really good at finding what I need in the Ruby documentation. ",1521989014.0
sjweil,"I would second the recommendations for both Eloquent Ruby and Practical Object Oriented Design in Ruby. I found myself in a similar position as yourself, having completed a boot camp program that focused largely on Rails. After that I secured a backend dev job as a Ruby Developer, but at a company that does not use Rails. Both of those books were very helpful at solidifying my understanding of the Ruby language and it's design patterns. 

Eloquent Ruby provides a strong overview off the language syntax, even though it is a bit out of date. Most of the advice it provides is still solid, just make sure to complement by reviewing the documentation for more recent versions of Ruby to see what additional tools you have access to. 

The Metz book was excellent for learning more professional design patterns, which I found particularly important once I stepped outside the structured design pattern that Rails creates for you. 

I personally started with the former, focused on that until I felt reasonably comfortable with the various tools and tricks the Ruby language  offers, and then moved on to the Metz book. Good luck in your efforts! Ruby is a wonderful language, and I find myself loving it more every day I work with it.",1521990349.0
Jaeemsuh,"I did this a few years ago and it was very good!

http://courses.rubylearning.org/catalog?new=true",1521992421.0
convert2_pdf,"I‚Äôm also in a coding boot camp at the moment..we spent five weeks on just ruby and we are moving into five weeks of Ruby on Rails...I used the treehouse ruby track to help follow along with ruby. It helps teach you ruby with the Sinatra framework, which I saw others in this thread suggest. I also want to recommend the book well grounded rubyist, as others have as well. ",1521993293.0
cocoabean,"1. Do the Ruby Koans.

2. Build a gem that helps you solve a problem you have.

3. Learn more as you get stuck.

4. Refactor and extend based on what you've learned.

5. Repeat steps 2, 3 and 4.
",1522013290.0
victorsj,"Looks like the website is unmaintained, but I'll leave it here for posterity in case it comes back as it is my favorite site that I learned from. And that is https://rubymonk.com. ",1522014100.0
Spoogly,"I think you've got some great suggestions here. I would also maybe encourage you to use http://exercism.io

Specifically, I would encourage you to do the challenges and then read the feedback and redo the challenge with the feedback in mind. Also, look at other people's solutions and offer feedback of your own. This will do two things for you. First, it'll give you a thorough lesson in idiomatic Ruby. Ruby gives you dozens of ways of doing things, but there are ways that are preferred, either because of brevity, cleanliness, efficiency or readability. By getting feedback on your code, you can start to see where, maybe your way works, but maybe there's a way that is considered better. That's one of the things that I think is hard to learn from the books I've personally read. 

The second benefit is that Ruby is as much a community as a language. By engaging with other Ruby devs in this way, you prepare yourself for the kinds of interactions you will need to have to really benefit from being a Ruby developer instead of developing in some other language.",1522016157.0
thisrealorthisfntasy,There are a few tutorials out there that are ‚ÄúMVC from scratch‚Äù and you essentially build a basic version of Rails. I found this to be super valuable when I was competent in Rails but wanting to understand more of the magic. Gluck!,1522022705.0
chasenyc,Test first is great: http://testfirst.org/,1522034458.0
isolatrum,"I recommend giving Sinatra a go. It's similar enough to Rails, but super barebones and you can implement whatever stack you want over it. You end up using using regular Ruby gems instead of rails-speciifc ones, and I think this helps give an understanding of the language in a standalone way.",1522086387.0
,I think it‚Äôs on code academy for free too. ,1521993981.0
,"curious why you want to learn ruby more/better -- is it to hopefully find a job, or maybe just b/c you're tired of not knowing it well?

main reason i ask is b/c i always advise people to avoid IT at all costs.

so if you just went to bootcamp and were successful in finding a gig or were in some other way successful, i'll have to add that as evidence - or reverse evidence - to my pov.

i never thought there was much to ruby, but i like the creator dude, and i like japanese culture, and the couple times i've messed with it it seemed not any more horrible than any other wack programming language i'd used, so maybe i'll give it a try again sometime soon.

the 'hard way' guy, Zed, had a good screed against rails back in the day that i guess he got scared about and took down, [but it still exists](http://harmful.cat-v.org/software/ruby/rails/is-a-ghetto). so he may just be an asshole, but being able to read something from someone who at least occasionally and half-heartedly criticizes some particular aspect of the going tech religion is probably valuable.",1522020979.0
Cyanogen101,Codecademy,1522027012.0
Code-Master13,I can't thank everyone enough for their input and suggestions! I've got a plethora of resources to start getting into to achieve my goals thanks to everyone here! I have upvoted everyone who's commented and saved this post for future reference as I go through my journey! ,1522095950.0
mindaslab,Try my book https://mindaslab.github.io/I-Love-Ruby/ ,1522126665.0
nanothief,"Nice gem for a common use case. I often run `(something.methods - Object.methods).sort` for finding what methods are available, and `something.im` would be much simpler. The docs for getting it running in pry and irb automatically are also useful.

Your screencast shows exactly how I've worked with new gems for years now. So it probably won't be much use to experienced users. However it would be useful for newer users who are unaware how powerful ruby's self introspection is.

A couple of pry tricks I think should be mentioned with regards to this style of development:

show-source
========

`show-source` lets you see the code of the method in question, e.g. `show-source Geocoder::Calculations.distance_between` shows the ruby source for this method. It even works with methods implemented in c (like `'this'.length`) showing the c source code. This is very useful for undocumented methods, or when the documentation isn't complete enough.

edit
===

`edit` lets you quickly edit a method. After editing, the method is instantly updated.

For example, with a file `test.rb`:

    class TestClass
      def func
        ""hello""
      end
    end

In pry:

    > load 'test.rb'
    > t = TestClass.new
    > t.func
    ""hello""
    > edit t.func

At this point the default editor will open, with the cursor on the start of the `func` method. Change the return to `""goodbye""`

    > t.func
    ""goodbye""

",1521930331.0
Jdonavan,"If you're already in pry, what does this offer over the built in ""ls"" command in pry?",1521940067.0
stanislavb,"Good job, mate! ",1521933578.0
seandaniellerner,thanks for the comments! i've posted a link-back to this thread on my original method driven development post :),1522080685.0
geraldbauer,"Hello, 

I've put together - bitcat - a little sinatra web app (e.g. [bitcat/app.rb](https://github.com/openblockchains/bitcat/blob/master/lib/bitcat/app.rb)) in ruby packaged up as a command line tool that lets you browse your digital bits(s) eg. crypto kitties and friends unchained (offline) using a single-file SQLite database eg. kitties.db. 

Note: Bitcat includes the gene reader from copycats in base32/kai notation and more. 

Happy collecting. Cheers. ",1521900945.0
chmarus,Take a look on online REPL for ruby: https://repl.it,1521886034.0
vk2sky,"[Try Ruby](http://tryruby.org) will give you a very quick and basic introduction to the language.

[Ruby Monk](http://rubymonk.com/) has more detailed and structured interactive lessons, though the site itself is not working for me right at the moment.",1521887308.0
chmarus,"You can buy some cheap vps, install there ruby and access it using SSH client for iOS. ",1521885872.0
Tcpdumper82,If you want an online interpreter you can also try https://c9.io. AWS also has a Cloud9 offering but I‚Äôm not sure it‚Äôs the exact same. ,1521900918.0
smallspark,Treehouse would be an option. They provide all you need in the browser- they probably have an app,1521906128.0
occio,There are services like https://aws.amazon.com/workspaces/. Or buy a cheap used thinkpad as a second machine. ,1521889255.0
binarygold,"There are many apps to learn the basics of ruby, like SoloLearn. ",1521895492.0
Grimnur87,"You can learn ruby using codewars.com and devdocs.io. If you are ok without any hand-holding.

Personally I would never program on a touchscreen device. The ui for text entry and editing is just too shit.",1521924204.0
meagar,"It's going to take you longer than a weekend to ""learn Ruby"". Why not just read a book and wait for your MBP to come back?",1521933776.0
_lyr3, ------------------->>>>>>>>>>>>>>>>>>>>>,1521889812.0
sshaw_,"It's likely that ruby is being installed without the documentation. 
To confirm: 


    ~/code/ruby/se >ruby -e'p RbConfig::CONFIG[""configure_args""]'
    "" '--prefix=/Users/sshaw/.rvm/rubies/ruby-2.3.5' '--with-opt-dir=/usr/local/opt/libyaml:/usr/local/opt/readline:/usr/local/opt/libksba:/usr/local/opt/openssl' '--disable-install-doc' '--enable-shared' 'CC=gcc'""


In this case, you can see the option `--disable-install-doc` was used. 

If I recall, you can override this with rvm with this: 

    rvm install VERSION --enable-install-doc




",1521900618.0
jemminger,How about something like https://devdocs.io/ ?,1521915134.0
scottmacpherson,"To future people: [Logged as an issue](https://github.com/ruby/rdoc/issues/615).

Just tried the same thing in a fresh Ubuntu 17.04.4 installation, using the ruby and ruby2.3-doc packages, with exactly the same result.",1522134040.0
meagar,"Wouldn't read too much into it, every language is on that list.",1521856671.0
klowny,"SO (and the general dev community) has a heavy bias towards Python, and when you're used to the Python way of doing things, Ruby just feels awful to use and vice versa. 

There's also JS which makes up a huge portion of the SO crowd (see how the most wanted tech is Python/JS, and the most wanted DB is Mongo), and ruby represents everything JS is not. 

I wouldn't read too much into it. ",1521859281.0
categorical,I've been writing Ruby for over 10 years. I love the language but after working on a larger team I don't want to use it on a large project ever again. ,1521887967.0
morphemass,"I wonder how much this is Ruby, how much this is Rails? ",1521924292.0
mikekreuzer,"Only a minority of Ruby devs* plan to continue with the language, while only 5.7% of devs plan on giving it a try now. 

Fewer existing people, few new people, the community shrinks. Why is that? I have opinions, but I'm keen to hear other peoples'.

*just a minority, who said they were Ruby devs, who answered the survey, etc, sure. ",1521853028.0
bigfig,"I bet there is some confusion between Ruby and Ruby/Rails.

If you develop full stack, and someone shows you a Rails app, it's just a bag of mystery.  Coding by convention is like communicating by secret handshake.
",1521900566.0
fsoawesome,dafuq?,1521853060.0
hmaddocks,StackOverFlow jumped the shark ages ago. ,1521873607.0
gwylom,"Lots of things you do are related to one player, look at the number of times you do `@player.each` and you do some computation inside.

You should probably extract these computations to a `Player`class, you could then have your utility function in it, along with other ones.

The feature envy is telling you you have a concept that needs to be expressed here: the player",1521900035.0
kobaltzz,"For the `expected` method, what does `10**(rated_player/400.0)` mean?

What does `10**(other_player / 400.0)` mean?

Also `other_player` and `rated_player` do not feel like the correct variable names as it looks like it has to do with the rating.

I would extract the calculations out to a private method with a more meaningful name. This will reduce the duplication as well as make the maths more clear.",1521828387.0
laerien,"You can refactor #provisional? to:

    @players.any? { |player| player[:games] <= PROVISIONAL_LIMIT }

With Ruby 2.4 or greater you can refactor #game_ended? to:

    @players.sum { |player| player[:score] } != 0

",1521828430.0
laerien,"I think you should extract method refactor out a few private methods from #expected. Also consider #fdiv:

    10 ** rated_player.fdiv(400) / (10 ** rated_player.fdiv(400) + 10 ** other_player.fdiv(400))",1521829087.0
fedekun,"First of all, why are you taking an array, if you want it to be exactly 2, that can fail if you pass a single player too.


    def initialize(players)
      raise ArgumentError, 'Only two players allowed!' if players.size > 2
      # ...

Turns into

    def initialize(player1:, player2:)
      @players = [player1, player2]
      # ...

Looks like this class is doing a bit too much. Maybe you can make a few smaller classes here.
For example:

    player[:previous_rating] ||= DEFAULT_RATING
    player[:score] ||= DEFAULT_SCORE

That belongs to the Player class, looks like Player is a Hash, it __really__ should be a class.

Maybe make an ELO value object which knows all the calculations for ELO, and then have this class use that one.

Also avoid using instance variables directly, it's safer to use `attr_reader`.",1521916373.0
prekarius,"Thanks for all of the comments, they were helpful. I made a value object class EloRating to handle calculations for a user while previously I tried to calculate everything for the whole game. 

    # Calculations regarding EloRating of players (users)
    class EloRating
      attr_reader :current_rating
    
      DEFAULT_RATING = 1500
      ELO_K = 32
    
      def initialize(current_rating)
        @current_rating = current_rating ||= DEFAULT_RATING
      end
    
      def expected_score_against(opponents_rating)
        Calculations::powerize(current_rating) / denominator(opponents_rating)
      end
    
      def delta(actual_score, opponents_rating)
        (ELO_K * (actual_score - expected_score_against(opponents_rating))).round(1)
      end
    
      def new_rating(actual_score, opponents_rating)
        current_rating + delta(actual_score, opponents_rating)
      end
    
      private
    
      def denominator(opponents_rating)
        Calculations::powerize(current_rating) + Calculations::powerize(opponents_rating)
      end
    end

And in addition I have a another class 'Calculations'.

    class Calculations
      def self.powerize(rating)
        10 ** rating.fdiv(400)
      end
    end

Now that I look my powerize method. It is not that good, because it is really specific to Elo-calculations but at the same time, if it is there I get the UtilityFunction smell because it doesn't depend on the state.",1521981264.0
jrochkind,"Re terminology: I'd be worried about confusing with the `then` from promises, which is somewhat similar, but of course async. If you are using a ruby implementation of promises in your code, you might even already have `.then` use, two different methods, might not be obvious from the code which is which especially in non-statically-typed-ruby. ",1521827377.0
blue_umpire,"Considering the overlap that `then` has with promises, and this is basically the forward pipe operator, why not something like `pipe_to` ?

    paragraphs
        .pipe_to { |paragraphs| cleanup_forbidden_markup(paragraphs) }
        .pipe_to { |paragraphs| join_too_short(paragraphs) }
        .pipe_to { |paragraphs| realign_by_timestamps(paragraphs) }
        .pipe_to { |paragraphs|
            next paragraphs unless options[:split_parts]
            paragraphs.each_slice(PART_SIZE).flat_map { |chunk| [part_header, *chunk] }
        }
        .pipe_to { ... }
",1522100366.0
laerien,"I like `then` a lot better than `yield_self`. I think a pipeline operator is ideal, but I'd use the `then` alias.",1521829376.0
joanbm,"I'd agree `yield_itself` is a bit unfortunate pick and does not fit in original naming style in core and is unnecessary verbose. On the other hand, `Object#then` is quite illogical, not descriptive and confusing. It has nothing to do with code execution flow. It just passes calling object to a block argument, nothing else. It should not follow from some random code snippet but its functionality itself.

It is a block-receiving variant of identity function (ehm method). It should be only another form of `Object#itself` like common in core methods, not polluting with another separate name to make things more complicated. However it was not well thought-out and damage is already done, like other hasted changes in recent years. It looks like original Matz's ideas and concepts are losing their grasp ‚Ä¶",1521838895.0
Serializedrequests,"I appreciate the errors this prevents, having just accidentally pipelined the wrong variable half way down a pipeline and spent an hour troubleshooting the typo.

But a better question is why use the naive no syntax sugar classic approach? What does yield_self lose me?

A: Debugging. If I assign a variable every step of the way, I can easily set a breakpoint or add some debug printout. Yes it looks dumb and repetitious, but any idiot can see how it is supposed to work, and I don't have to go to extra effort to inspect things when it inevitably breaks.

So mixed bag IMO. Codifying the algorithm structure is great, but aesthetically I don't like the way it turns out visually. Generating those blocks is ugly and requires a deeper knowledge of ruby than the naive approach. KISS.",1521836390.0
myringotomy,What's wrong withv implementing a pipe operator?,1521843800.0
OstapBenderBey,"Great writeup - thanks its a hard point.

I dont like then because its too vague. Every chained function is something that happens 'then'. Plus the confusion with if then else

How about then_yield?",1521851370.0
fedekun,"Feels like F#'s `>>`, it's a really awesome operator present in most functional languages.

I'd rather use it as a binary operator than a method though.",1521860371.0
sshaw_,"If Java 9 and (needlessly) async Node code had a baby, it would look like this.  ",1521862164.0
Paradox,"I don't understand why something like `|>` couldn't be used? As far as I can tell, `|>` is invalid ruby (or greater than? Doesn't GT have an arity of 2?), so its free to be repurposed.

Elixir got it from F#, there's no shame in borrowing it.",1521873076.0
redditprogrammingfan,The blog post was also put on r/programming a day ago.  But I think r/ruby is a better place for this. ,1521816348.0
mperham,Fantastic work and progress so far.  I do wish his benchmarks had included Ruby 2.5 so we could compare progress to the latest MRI release.,1521828514.0
schneems,"Good coverage. I was hoping for more comparison about how the process of moving to RTL will fit in with the current JIT implementation that is in trunk. I'm also curious if optimizations done now will still be valid if/when RTL is merged in.
",1521836608.0
Code-Master13,"Sorry, probably a dumb question but, what's CRuby? ",1522010363.0
geraldbauer,"Great 3x3 article. FYI: Added ""Towards The Ruby 3x3 Performance Goal"" to the 3x3 article collection at Planet Ruby, see <https://planetruby.github.io/calendar/ruby3x3#articles>. Cheers.",1521816421.0
k0kubun,"Thanks to post a great article! ""Extended basic blocks"" and ""scalar evolution analysis"" were interesting keywords to me because I struggled (and failed) to remove the same loop with stack insns. At least my loop code does not look like a large extended basic block.

> This way JIT mostly works in parallel with Ruby program interpretation and no real time delay should exist when MJIT is used.

My recent major focus on MJIT project is delay on JITing Rails application. It seems that Rails application's response time becomes worse for some milliseconds (even with almost empty ""rails new""-ed application like https://gist.github.com/schneems/cb01bec00057571a311fffb6eeb282ba) when JIT is enabled.

After I spend some time to investigate the cause, I found that it seems not caused by generated code's performance but compilation overhead because the amount of delay is not changed by just stopping to call generated function and always falling back to interpretation, and the majority of delay does not appear once all ISeqs are compiled.

Do you recognize the problem or have any idea to fix it? For now, I still can't find the root cause of it and I have no good idea to resolve the problem, but ""some milliseconds"" delay that persists for a long time (it would take log time to compile thousands of methods in Rails) might be a big deal even while a web application is a long running program. The JIT improvement may conceal the delay in the future, but it might be better to solve the issue regardless of it, for the worst situation.",1522068991.0
geraldbauer,"Great to hear. FYI: For all Ruby Conferences & Camps in 2018 (incl. RubyConf Belarus), see the Calendar page  <https://planetruby.github.io/calendar/2018> at Planet Ruby. ",1521816196.0
Insomn,"I went through your history, just to see what befell you in /r/ruby, and you come across as quite standoff-ish, abrupt and in some cases, rude (IMO).

Even in your post here, you insult SO and here (which isn't badly moderated, there's barely enough traffic for poor-effort comments) which leads me to believe that old adage ""if everywhere smells like crap, maybe you should check your shoes"".

I've asked a few questions on here and /r/rails with good responses, sorry you're not having the same experience.

If you've got a link, I'd be happy to take a look, maybe it's in the phrasing of the question/proposition?",1521813124.0
vagmi,Please ignore the haters. I attribute part of the problem to the dropping interest in ruby meetups and conferences. Ruby isn't new anymore. These conferences and meetups were a good place to remind people about MINSWAN. I have found good help on the #ruby-lang IRC channel on freenode a couple of years back. I am not sure about the participation now. ,1521812918.0
thibaut_barrere,"Congrats for shipping this! Again, it's great to see more performance-focused work with Ruby. Can't wait to see what comes next in general!",1521817148.0
ignurant,"I've come across Kafka being used in some blog posts about scraping as a data transfer mechanism. I'm curious to learn more about Kafka, and I'm wondering if the following is a sensible use case, or if I'm thinking about it wrong...

- Scripts distributed in the cloud to load data in a page to scrape, such as with Mechanize or Watir
- They are strictly responsible for grabbing the raw page data, or whatever minimum raw elements are required to do further processing (The E in ETL).
- Send to Kafka, where a separate process can pick it up and handle parsing and the rest of the ETL chain

This feels a bit over-engineered, but I could see a few benefits related to process safety in certain situations. It potentially cleanly separates the E T and L.

I'm curious if when people talk about leveraging Kafka in a scraping environment, if this is the kind of workflow they are referring to, and given my blurb above, if people think it's worth learning more about.",1521813498.0
colby-swandale,"Hi! (Bundler core maintainer here) 

You can specify a path to install your gems into that are isolated with the `--path` option, ie: `bundle install --path .bundle`(You can set this for every Gemfile with `bundle config --global path .bundle`, which i use and will be set by default in Bundler 2). I strongly suggest this method over `rvm gemsets` because you very often have to remember to make sure you're using the correct gemset which you can easily get lost in. But with Bundler you don't have remember anything and makes managing isolated gem environments a lot easier.",1521811853.0
jrochkind,"Myself, I haven't ever seen a need for rvm gemsets since bundler 1.0. ",1521828210.0
chmarus,"Im freelancer too and some time ago I've switched to bundler, chruby and ruby-install. Its 4 years since that decision and not missing RVM.",1521841547.0
mshiltonj,"Checkout the 'singleton' module/pattern for a slightly better approach.

http://ruby-doc.org/stdlib-1.9.3/libdoc/singleton/rdoc/Singleton.html
https://dalibornasevic.com/posts/9-ruby-singleton-pattern

You'll want to create your own wrapper class around instantiating the Redis object, the same way the Logger class in the example on the second link wraps around the open file object.",1521813263.0
nirvdrum,"Having to reestablish a connection for every redis operation is certainly something you'd want to avoid. Sharing a single connection in a global variable raises all the same concerns global variables normally do, notably concerns about thread-safety. For that, I'd recommend the [connection_pool](https://github.com/mperham/connection_pool) gem. The examples there still use a global, but the connection pool protects the state of the wrapped redis connections by ensuring only one caller can be using that connection at a time.",1521813331.0
,"I disabled this cop for controllers considering I sometimes want to memoize but indicate the variable is not meant to be used in a view.


```
def thing
  @_thing ||= Thing.find_by(foo: ""bar"")
end
```
",1521796007.0
PikachuEXE,I use memoist these days...,1521769385.0
halogen64,"I think if I were faced with this problem, I'd have a slew of questions. First, how many registers does the CPU have? Are there other instructions not listed? The program says to jump to line 7, but there is no line 7, does this terminate the program? Is it intentional that the MOV instruction loads both from registers and intermediate value? How many bits is each register?

Sometimes, interview questions aren't so much about the implementation but what you notice about the question. This question seems partially complete.",1521774971.0
martijnonreddit,"I wonder whether I‚Äôd have the clarity of mind to approach this with TDD when faced with the time pressure of an interview. I probably wouldn‚Äôt, to be honest.",1521738283.0
Ardivaba,"Without reading the eventual solution i decided to try to implement this logic without putting a second thought to code quality, just to get something functional working in the fastest way i could imagine.

This is what i came up with in couple of minutes.

https://pastebin.com/uqe3XtsA",1521936414.0
TextileWasp,"The code is way to complicated for you to be able to fit it into a whiteboard interview.
I also think that the way I would approach it is to first model the vm that executes it and after that model the instructions as ways of mutating the machine state, This would lead to a leaner implementation and the tests can just compare the machine states.",1521763058.0
Creationhacker,"‚ÄúMatz said he had not decided on when to release Ruby3. If three critical points could get to a satisfactory level, he would name the version Ruby3. He used the Linux kernel development community‚Äôs approach as a reference.

The three critical points are the following: faster processing, distributed computing, and static program analytics. If a new version can perform three times faster than the current version, handle distributed computing, and implement static program analytics, Matz will label it as Ruby3...

Now, Mr. Koichi Sasada, a Ruby core developer, is working on a project called Guild. Although Ruby has threading implementation called Thread class, its performance of parallel execution is quite limited. On the other hand, Guild can perform parallel execution while avoiding the difficulty of programming such as lock and unlock controls.

Resources:
Presentation on Guild at RubyKaigi 2016 (https://www.youtube.com/watch?v=WIrYh14H9kA)
Slides of the presentation (http://www.atdot.net/~ko1/activities/2016_rubykaigi.pdf).  ‚Äú
",1521743722.0
,[deleted],1521796834.0
mikekreuzer,"Imagine if any other language was developed this way.

Imagine: There‚Äôs going to be a new version of Javascript. It‚Äôs going to be a big deal. But it‚Äôs waiting on one guy in Japan. We know a few things that‚Äôll be in it. But it‚Äôs mostly mystery meat at this point.

How would that go do you think?",1521780856.0
jrochkind,"seems reasonable to me. there's a lot of things that can go wrong in backups, I'd want to test it periodically to make sure I really have backups and they really are recoverable.  Most people use heroku to not have to worry about this stuff and let them take care of it, and are willing to pay for it. ",1521734414.0
djcp,"There's also /r/Heroku , FWIW.  

This plan sounds logical to me.

I think folks sometimes over rely on backups on plans that offer point-in-time rollbacks, but since you're sticking to our lowest paid plan you've got to do a little roll-your-own here to make a more advantageous backup schedule.",1521736371.0
jrochkind,"This is awesome.  I had been considering trying to implement something like this myself, glad to have been beaten to it. 

I need to investigate this more, but it seems like it's entirely Rails/ActiveJob independent?  While that's nice in some situations, for those in Railsland I wonder if there's a way to make it more ActiveJob-integrated. I would would to be able to tell it to use any ActiveJob-compatible queue as it's queue, for instance. ",1521729606.0
sshaw_,"> Requirements: Ruby 2.4.0 or newer

Why? ",1521764003.0
mperham,"I get that you needed a supported alternative to Resque but why build your own thing?  You're a travel-industry startup, buy good tools and focus on your user.  Sidekiq Pro is fully supported, Resque compatible and has a complex job workflow API, known as Batches.  $950 and this problem is solved for you.

https://github.com/mperham/sidekiq/wiki/Batches",1521732900.0
,[deleted],1521682830.0
seainhd,"Just type ""whatever.respond_to?(:presence)"" 

What kind of question is this?",1521693925.0
kickinespresso,"Have you seen these?

- https://stackoverflow.com/questions/626333/embedding-a-ruby-interpreter-in-a-c-app
- https://stackoverflow.com/questions/13796922/run-ruby-script-from-c-or-c-program
- http://silverhammermba.github.io/emberb/embed/

",1521680283.0
Sqeaky,Every time I have done something like this I have used swig: http://swig.org/,1521702585.0
zfundamental,Depending upon your use case [mruby](https://github.com/mruby/mruby) may be of interest.,1521747855.0
timriley,"This is fantastic. I know Ruby, plus a small number of Tagalog words, but the example Bato programs look so _foreign_ and hard to grok.

A great reminder of just how much English keywords can be an impediment to learning programming for those who don't know the language.",1521712507.0
iconoclaus,great examples and insight. and one of the nicest simple explanations of Liskov Substitution i‚Äôve come across. ,1521644347.0
janko-m,"What really helps me in reading gems is doing multiple takes. In the first take I usually don't even get a general understanding of how things work (except if it's a simple, focused gems), more often I understand just a small bit and pick up some clues where to go looking the next time. After a few readings things already start nicely falling into place in my mental picture.

It's also good to decide which parts you don't need to understand, such as input arguments mangling. A well-refactored code which follows SRP makes it easier to ignore classes/methods that you don't need to understand.

Which specific ""bigger"" gems are you having troubles reading?",1521633999.0
editor_of_the_beast,"Some gems are going to be larger and more complicated. It may be easy for someone to understand the blueprints for a residential home, but that doesn‚Äôt mean they‚Äôll understand the blueprints for a 100 story skyscraper. Larger projects require more design, otherwise they collapse under their own weight.

It‚Äôs honestly really hard to come up to speed on a large project. That‚Äôs why hiring someone at a company is such a huge investment - they‚Äôre often not maximally productive for months. The saving grace there is that you go to work every day - repetition is one of the best ways to learn. So try fixing lots of small bugs over the course of a long time. It‚Äôs not going to click overnight.

I‚Äôm a big fan of pen and paper personally. Circles and arrows go a long way - what objects collaborate with each other? What methods do they call between one another? What‚Äôs the flow of data? Scope it to a specific use case. Handwriting connects brain pathways very effectively - it‚Äôs why people tend to remember things better when handwriting notes. It forces you to really understand what you‚Äôre writing / drawing. 

If you can‚Äôt draw a simple diagram of how something works, there‚Äôs no way you understand it.",1521634277.0
seraph582,"Is there utility in consuming every last detail in a large gem?

I would ask yourself that before attempting to consume what is likely an insane amount of data. Some gems‚Äô requirements have requirements. At that point, you‚Äôre reading layers of abstraction away from the original content, and are likely poring through mostly content that isn‚Äôt even being leveraged to drive the gems original purpose.

Maybe stick to a specific and specialized part of a *project,* and leave the gem details out. Gems are just a packaging/distribution format/mechanism anyway.

You seem to be approaching the prospect of project contribution from a strange angle.",1521636305.0
_matthewd,"In short: trust the abstractions.

You want to find the abstraction level that suits the change you want to make, and then make it: ideally, you don't need to understand much about the abstractions below that beyond their names (realistically, you'll probably want to read through them, but aim for only one layer deep -- as a caller, you care what they do, but not how they do it: if too much of the latter is leaking through, it's not much of an abstraction). 

If the thing you're editing has a defined API (docs, or direct tests) and you're not fundamentally changing its contract, you may be able to ignore whatever's above too. Otherwise, you'll need to work your way up, but your goal is still to minimize the changes at each level, hopefully approaching zero as quickly as possible.

Each abstraction introduces some complexity, to envelop and hide other complexity. If you try to understand the entire system, they just mean there's more code.. but if you trust them to define responsibility boundaries, you can confidently (particularly with the support of a strong test suite) make changes inside complex libraries, with only the most basic understanding of what the overall system is doing.

As you spend more time working with a project, you'll eventually be quite familiar with how several adjacent layers of abstraction each do their jobs... I'll often semi-consciously ignore most of that detail, though, to focus only on the layer I'm working in. 

If you just want to read code, without having a specific change in mind, go ahead and read as many layers as you like, but treat them separately: consider each in isolation, as a unit that has dependencies it trusts to be well-behaved, and specific responsibilities to its dependents in turn. Do not try to mentally in-line the code and load everything into your head at once... even the interpreter doesn't do that.",1521641501.0
Gnascher,"One way is to use a debugger and step through the code.

Another thing I tend to like to do is when I bring in a gem that will have a central role in my application is to write a wrapper for it. The more complex the gem, the more likely I am to wrap it 

That allows you to replicate its interface, and if ""something happens"" to the gem, you can use that wrapper to port to a replacement without having to modify large parts of your code base.

The act of writing the wrapper (and sometimes extending functionality within that wrapper) often leads you to taking deep dives into the gem code.  Since you'll have a ""destination"" in mind, it's easier to follow and understand that particular code path.",1521670054.0
jrochkind,"Just by doing it, yeah. Start with smaller gems.  For a big gem, focus just on the part you need. If you have a particular goal -- something you're trying to do you're having trouble with, or a bug (or something you think might be a bug) you're trying to diagnose and/or fix, it gives you direction -- ignore parts not neccesary for that goal.

Use byebug a lot to step through code. Look at what documentation there is too, not just the code. Switch back and forth. Definitely agree with multiple takes, like janko-m suggests. 

When I run into abstractions I don't understand, I take a sidebar to just focus on that abstraction and understand what it does (at least a basic overview), taking a break from my original goal to just understand the abstraction in front of me.  You don't neccesarily gotta understand the details of how the abstraction is _implemented_ (unless you think it's buggy and wanna investigate or you're having trouble figuring out what it does without getting into the weeds) -- just what it _does_.   Which is the whole point of ""abstraction"" of course!  If you understand what it does enough to go on with your original goal, leave it and go on. (Unless your original goal was getting a ""deep dive"" understanding of that particular abstraction!)

And some gems are always gonna be easier than others to read.  When I'm working with a stack where I find myself 10 levels deep in buggy and leaky abstractions having forgotten what I was trying to do in the first place -- it is sad, and I don't think it has to be that way, but sometimes it is, see related ""yak shaving"".  Doing this with a new code base, unless it's really awesomely architected, is a challenging thing for nearly all programmers, even experienced ones. It's just part of the job though. 

I like janko-m, editor_of_the_beast, and matthewd's advice here too. ",1521828283.0
jb3689,"Start small. The best way is to find a small gem, clone it, run the tests, step through it. You should pick a gem that has a low enough LoC for you to fit the whole thing in your head. If you want to learn about Rails, maybe learn about Sinatra first or just plain ol' Rack. Or learn a smaller, more focussed Rails piece like ActiveSupport

If you don't know how a gem is is supposed to work then try writing it yourself. Seriously! If you don't know how auth works then you would be best suited to trying to implement it yourself and learning the core technology and techniques. Similarly for testing, APIs, etc. You focus on learning the ""why"" and then the ""how"" because a lot easier to figure out.

Learn common patterns. Well-designed gems follow common conventions both in structure but also the abstractions. Servers act like servers (fork-based with preloading for copy-on-write or threaded). Caches act like caches (stuff gets added and expired). APIs act like APIs (need to deal with pagination, probably using REST, authentication, headers)

Learn Ruby really well. The more Ruby you know the better, particularly with more complex gems like testing frameworks which do some seemingly odd things at times. Learn advanced Ruby concepts but also debugging techniques like `.method(...).source_location`

Learn the Linux interfaces. If you are dealing with processes (e.g. foreman) then you'll want to make sure you have a good grasp of working with them. Experiment, try things

And lastly - ask for help! As someone who has released multiple gems, I would bend over backwards for someone who showed interest in learning about and contributing to what I've started",1521863313.0
zverok_kha,"I love your RSpec articles! 
But this part is a bit weird for me:

> Avoid using be_truthy and be_falsey matchers ...  So you may expect false or true to be returned but when something goes wrong and something else is returned then your test may not catch it.

But these matchers are by definition, by name, and by documentation for checking against ""truthy"" and ""falsy"" values, not `true` and `false`. They are pretty useful for testing methods defined, for example, this way:

    def allowed?
      user&.admin?
    end

Without any user, this method will return `nil`, which will pass `be_falsey` but not `eq false`. One may argue that this definition is ""better"" somehow...

    def allowed?
      user.present? && user.admin?
    end

    # Oh, good girls don't do ActiveSupport!
    # So, it should be even more ""readable""
    def allowed?
      !user.nil? && user.admin?
    end

...yet I beg to differ :)",1521619278.0
Jdonavan,"The ""Avoid using Model.new instead of stubbing"" example seems odd. The api object should have been injected and thus easy to test.",1521637266.0
sshaw_,For a second I thought I was reading [this](https://www.reddit.com/r/ruby/comments/84mdzc/speed_up_and_improve_your_rspec_tests_in_4_simple/)...,1521639420.0
PikachuEXE,"Early hint is useful but not very flexible when using with HTTP2 push
Also crossorigin can't be set yet

https://groups.google.com/forum/#!topic/rubyonrails-core/YJqsbX9sjs0",1521682919.0
toadkicker,What are you guys excited about in this release?,1521627677.0
smitjel,Active Storage sounds interesting too.,1521635433.0
rrrosenfeld,I guess I'm the only one missing the point about encrypted secrets. What specific problem is it fixing?,1521641910.0
moomaka,I don‚Äôt see a ‚Äòtest‚Äô section in your secrets.yml file.,1521654219.0
RedNifre,I chose ruby for this project because the calculations require large integers (over 200 bits) which ruby has natively and because ruby is just the perfect language for little fun projects like this one anyway. ,1521589891.0
jrochkind,"Troy Hunt's API is rate-limited to 1 request per 1500 ms. https://haveibeenpwned.com/API/v2#RateLimiting

One would think that would be a good thing to mention in OP, and consider before building it into a production app. 

Few apps have more than one password set per 1.5 seconds on average. But what happens if you happen to get two within a second? A 500 error? One of your users waits 2 seconds extra for a response? It just doesn't check their password?  Depends on how you write your code of course.  I don't know what the gem referenced does, it doesn't mention it. Maybe raises cause it didn't account for it?

If you're checking passwords on every sign-in, not just password changes, as the OP also suggests, the rate limit would of course be even more problematic. 

The API also has a CA-attribution license which suggests your app needs to advertise that it uses the API, something the OP also doesn't mention. 

Perhaps twilio wants to copy the data (which Troy provides for) and provide their own non-rate-limited API without an attribution requirement?",1521588235.0
scootstah,Just what I want - web apps to be sending my password around to other services to check how secure it no longer is.,1521590194.0
Freeky,"I downloaded a copy of the list and mangled it into a database quite simply:

    pv -cN Input pwned-passwords-2.0.txt | cut -b 1-32 | sort -S 8G | xxd -r -p | pv -cN Output >pwned-passwords-2.0.trunc.bin

7.5GB sorted list of 16-byte truncated binary hashes, which can be easily [interpolation searched](https://gist.github.com/Freaky/3eee9939ad8e180bf58e4a3d9878a576) at a cost of ~10 quite localised reads.  

I think I'd rather do that than rely on a third party service that seems to have a typical response time of about a second, and which involves leaking information about my user's passwords, however small and seemingly inconsequential.

I might spend a bit of time bashing out a bucketed bloom filter version, which should allow me to cut the space usage to a few GB, and also reduce the IOs needed to 1.",1521649705.0
rwilcox,[Opsschool](http://www.opsschool.org/en/latest/) is suuuper good,1521574208.0
samnissen,"AWS has a free tier of services, some for a year, others for life ‚Äî could be a good place to deploy something (anything you want to build or just use) to gain practical, marketable skills. ",1521583826.0
danimoth2,"I've also recently tried getting better at this. I'm trying out [this Udemy course](https://www.udemy.com/aws-certified-solutions-architect-associate/), just to get better (I've provisioned some servers on AWS before, but it was more like typing tutor, so I'm looking to understand each command and what it does).",1521621718.0
sshaw_,"If you have an XML schema I'd suggest checking out [jaxb2ruby](https://github.com/sshaw/jaxb2ruby/) (author here). 

",1521589157.0
jrochkind,"Thanks! I haven't looked at the code yet, but this is something I have sometimes wanted to do. 

Perhaps no coincidence, I work in the library/archives/preservation sector, I see you are also either in that or publishing. :)",1521556818.0
some_kind_of_rob,"Seems like more than 2, but I learned things. ",1521551962.0
petepete,I prefer [Pry](https://github.com/pry/pry) over IRB for most things. Colourful output and the ability to dive into objects is a lifesaver. [Example](https://i.imgur.com/a4fYacy.png).,1521559072.0
OstapBenderBey,"Im getting 'webpage not available' (mobile, australia)",1521555989.0
janko-m,"The only way this exception could have happened is if your uploader classes got loaded before your Shrine configuration. Make sure you've loaded the Shrine configuration first.

In the future it's better to ask for help in the [Shrine google group](https://groups.google.com/forum/#!forum/ruby-shrine).",1521508300.0
nonsenseless,"https://lankydanblog.com/2017/05/12/debugging-a-rails-server-in-visual-studio-code/

I found this link pretty useful and getting up and running. It's for rails but the extensions involved look like they're also applicable to running standard ruby programs.

If you're using RVM you'll need to do some more configuration so that the debugger knows the path to your ruby--I don't have that code block on hand but I can look it up later if you need it.",1521497850.0
Kendos-Kenlen,"I think things are getting pretty well with LSP servers \(correct completion, code analysis, etc...\).

However, I personally recommend [RubyMine](https://www.jetbrains.com/ruby/). It's my IDE and my best experience with a Ruby IDE \(especially giving that I use other JetBrains' IDE for other languages\).",1521505377.0
Gnascher,"I went from TextMate -> Sublime 2, then 3 -> Atom -> RubyMine (very briefly, we didn't get along) -> VSCode.  I guess I've been using VSCode for about a year now, pretty happy with it.

Plugins I use:

* Ruby (by Peng Lv)
* RubySolargraph
* GitLens
* Rubocop
* Rails Test Runner
* RailsCasts Theme (with some personal tweaks)",1521521074.0
kobaltzz,"I really like VSCode. I switch between VIM and VSCode depending on my platform. As far as plugins go, it's pretty lightweight. I just use these 10 plugins. Not pictured is Rubocop, didn't have it on this compy, but is one that I typically use.

https://imgur.com/a/zxr13
https://imgur.com/a/CDU8n",1521512909.0
fedekun,"All you need is a text editor and a terminal, so yes. The rest is just a matter of preference, play around with different editors/IDEs. 

I use Vim and iTerm2",1521508174.0
aarkerio,"Emacs has Rspec, Git and project support.",1521508940.0
sdn,I'm pretty content with VSCode and RoR development. Only downside is that VSCode runs inside an electron container so it gobbles up a GB of ram or more :/,1521506144.0
gurgeous,"VS Code is a great choice for Ruby. Definitely install vscode-ruby, which is the main Ruby extension. Try to get linting and autoformat working if you are into that sort of thing.

I'm also working on a new extension called Bust A Gem that adds support for Go to Definition - [Bust A Gem](https://marketplace.visualstudio.com/items?itemName=gurgeous.bust-a-gem) | [github](https://github.com/gurgeous/bust-a-gem)",1521516466.0
tortoise888,"I use VSCode for javascript and sublime for ruby.  I dunno why but Sublime just feels ""right"" with ruby.  Plus it has a superior vim mode.

The debugger support for ruby in VSCode is becoming a lot better though.",1521518222.0
WalterPecky,"[old but relevant](https://www.reddit.com/r/rails/comments/6sonqz/vs_code_setup_for_rails_development/)

[solargraph](https://github.com/castwide/solargraph) is pretty awesome. 

I have done a decent amount of ruby development with VSCode and tried a bunch of extensions and key mappings to maximize my development flow.. and to tell you the truth, after 5 days of trying vim.. I no longer care about my VSCode ruby workspace.

",1521521458.0
trailingslashes,Redmine is really good. ,1521502724.0
geraldbauer,"Hello,
   I've ""converted"" the  pseudo-code published by Sean Soria in
  [""CryptoKitties mixGenes Function""](https://medium.com/@sean.soria/cryptokitties-mixgenes-function-69207883fc80) into a running (working) ruby script. Try:

    mgenes_hex = 0x000063169218f348dc640d171b000208934b5a90189038cb3084624a50f7316c
    sgenes_hex = 0x00005a13429085339c6521ef0300011c82438c628cc431a63298e3721f772d29
 
    mgenes = Kai.encode( mgenes_hex )
    p Kai.fmt( mgenes )
    # => ""ddca 578k a4f7 949p 4d11 535k aeea 175h 846k 2243 aa9g fdcd""

    sgenes = Kai.encode( sgenes_hex )
    p Kai.fmt( sgenes )
    # => ""c9am 6556 7ff7 b9gg 1d11 3853 9f77 6475 77k4 6784 f9gp fcaa""

    babygenes = mixgenes( mgenes, sgenes )
    p Kai.fmt( babygenes )
    # => ""9dca 5586 aff7 b99p 1d11 33k5 aea7 67h5 74kk 6744 aafg ffaa""
    
Happy CryptoKitties gene mixing in ruby. Cheers.
",1521493356.0
hersha,"`UNIXSocket.new(""/tmp/my_socket"")` is how you setup a unix domain socket on the filesystem. Take a look at https://ruby-doc.org/stdlib-2.4.3/libdoc/socket/rdoc/UNIXSocket.html",1521493944.0
tickypupu,can't you just `$stdout.reopen` and put it at the unix socket,1521571818.0
geraldbauer,"Hello,

I've added a couple of new chapters to the ""Programming Blockchains Step-by-Step from Scratch (Zero)"" and starting with (crypto) hashes...

What's News? Mining, mining, mining! What's your hash rate? Let's find out and use the ""stand-alone"" version of the by now ""classic"" compute_hash_with_proof_of_work function:

    def compute_hash_with_proof_of_work( data, difficulty='00' )
      nonce = 0
      loop do
        hash = Digest::SHA256.hexdigest( ""#{nonce}#{data}"" )
        if hash.start_with?( difficulty )
          return [nonce,hash] ## bingo! proof of work if hash starts w/ leading zeros (00)
        else
          nonce += 1             ## keep trying (and trying and trying)
        end
      end # loop
    end # method compute_hash_with_proof_of_work


Let's try (run) benchmarks for the difficulty from 0 (4 bits) to 0000000 (28 bits)...

On my ""low-end"" home computer the hash rate per second is...
about 100 000. What's yours?",1521468634.0
miningchamp93, If u want to find hash rate of different graphics card u can visit [***https://miningchamp.com/***](https://miningchamp.com/) ,1529415424.0
moomaka,"A couple related tips:

I wouldn't recommend using `enum` unless there is a clear ordering to the values, absent that you're likely better off with a `status` string field and a `CHECK` constraint on it in the DB. 

If you do need an enum, and are using postgres, use their enum type:

    execute <<~SQL
      CREATE TYPE client_visits_statuses AS ENUM ('inprocess', 'completed' , 'incomplete');
    SQL

    add_column :client_visits, :status, :client_visits_statuses


    class ClientVisit < ApplicationRecord
      enum status: {
        inprocess: 'inprocess',
        completed: 'completed',
        incomplete: 'incomplete'
      }
    end

This has a couple advantages:

1) You get database validation similar to a check constraint.

2) You can add values into the middle of the ordering without breaking anything or having to migrate all values which I find this to be a major cause of needing to alter the ordering query. e.g. `ALTER TYPE enum_type ADD VALUE 'new_value' BEFORE 'old_value';`

If you do need arbitrary ordering, the approach in the article has a problem in that in most databases I'm aware of it will prevent index usage for the sort. Additionally since ransake is mentioned, there is a decent chance there are a lot of records here and likely a `LIMIT` at the end of that query. With a LIMIT if the ORDER BY doesn't use an index, you can end up constructing the entire result set in the DB then scanning up to the LIMIT...this is _sloooooow_.  

Another approach is to use `UNION` to combine the results in the order you want and push down the sub-ordering and limiting. This will trigger 3 sub queries but each should be fully indexed and have a small result set, generally should be pretty fast. Doing this in ActiveRecord will require you to drop to `find_by_sql`.

    (SELECT * FROM client_visits WHERE status = 'completed' ORDER BY due_date DESC LIMIT 25)
    UNION
    (SELECT * FROM client_visits WHERE status = 'incomplete' ORDER BY due_date DESC LIMIT 25)
    UNION
    (SELECT * FROM client_visits WHERE status = 'inprocess' ORDER BY due_date DESC LIMIT 25)
    LIMIT 25

In the example above you likely want a btree index on [:status, :due_date].",1521479395.0
veske,Well done. This gave me some inspiration also ,1521459882.0
jrochkind,"I love the idea of a slackbot as a profitable side project. 

I wonder if this is something that there is a limited window on, when slack is/was fairly new and there wasn't a big market of slack integration. (Like it used to be way easier to make a profitable ios game than it is now, cause there are just so many). 

I also wonder if the particular feature, sending anonymous messages, is actually contributing to healthy team dynamics or harming them. :)",1521468565.0
zanzabarito,this is super cool. I would love to hear a little more about how you first marketed it & got the word out. ,1521506332.0
sshaw_,"Congratulations and thanks for sharing. 

Why not use PayPal for your payment provider? ",1521512783.0
SophiaLT16,"Interesting project. The only thing that really came to mind is since the messages are deleted on their server, could someone use it as a way to harass to a colleague leaving the company unable to take any action because it would be 100% anonymous.
",1521471626.0
feyn,"The newsletter seemed interesting, until I saw [this article that you linked](https://medium.com/@henryw1990/top-10-ruby-on-rails-development-companies-ca3720d1bb5f) in the Aside section. It starts like this:

> Here is the best 10 Ruby on Rails Development Company for your business will be a giant pain if you have got no plan regarding the rating, market name and of corporations. thus we have a tendency to found wrote this text wherever we‚Äôve got listed prime Ten Ruby On Rails development in Republic of worldwide.

That whole article is written like that and is just nonsense. It seems that you include whatever you find in the newsletter without reading it yourself.",1521604883.0
,[deleted],1521355980.0
,See here https://regular-expressions.mobi/anchors.html?wlr=1,1521353085.0
twinklehood,"Regex by default doesn't care where in a line a match occurs. You can specify this with the start of line or end of line anchors:

    /^Start of sentence/
    /end of sentence$/

",1521363579.0
reidab,"Shrine is set up in a super modular way, which I really like but can make it hard to give one explanation for all situations.

Without knowing more about your app, here are some questions and possible things to try:

* Are you trying the default file-goes-to-your-server-and-then-gets-uploaded-to-S3 kind of upload or the more complex and shinier [direct-to-S3](http://shrinerb.com/rdoc/files/doc/direct_s3_md.html) upload?
  * For the default type, which part of the upload is failing? Is it the browser-to-your-app part or the your-app-to-S3 part? What kind of errors are you getting?
  * For the direct type, I'd triple-check the [CORS configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) on the S3 bucket to make sure it allows POST requests from *, and then make sure you're POST all the fields you get back from the presigning to S3 as multipart form data, not as query params or JSON.
* You say you've got a non-Rails app ‚Äî¬†what are you using to work with data? Shrine works most easily if it can integrate directly with your ORM via the builtin plugins for [ActiveRecord](http://shrinerb.com/rdoc/classes/Shrine/Plugins/Activerecord.html) or [Sequel](http://shrinerb.com/rdoc/classes/Shrine/Plugins/Sequel.html), or using external gems like [shrine-mongoid](https://github.com/shrinerb/shrine-mongoid). This lets shrine hook into the lifecycle of your models and handle things appropriately when they're saved.
* If you're not using an ORM that Shrine supports directly, you'll probably want to take the more manual approach of manipulating the [Shrine Attacher](http://shrinerb.com/rdoc/files/doc/attacher_md.html) directly.",1521358626.0
Morozzzko,"It is fairly simple. Might get a bit confusing because of all those abstractions.

First, you need to [set up Shrine](https://www.ironin.it/blog/store-your-files-on-s3-using-the-ruby-shrine-gem-part-1.html).

Since you're not using Rails, skip the `migration` and `ActiveRecord`/`attacher` part.

Let's say you have a class `FileUploader` (defined as `FileUploader < Shrine`).

This is the class you'll have to use to upload files.

Then, all you have to do is instantiate the class and call `#upload`.

    uploader = FileUploader.new(:storage) # instantiate it
    uploader.upload(
      tempfile, # `tempfile` is a file stream. Might be an instance of `Tempfile`
      upload_options: { acl: 'public-read' }, # if you want it to be readable by everyone,
      ...
    )

Boom, it's done.",1521357511.0
janko-m,"Here you go: https://gist.github.com/janko-m/9aea154d72eb85b1fbfa16e1d77946e5

Thanks for sharing your frustration, I'll link this walkthrough on the website.",1521376303.0
acdesouza,"Once I've wrote a example app to show the Simplest Way to upload files to S3.

The only dependence is aws-sdk ;)

Maybe it can help.

https://github.com/acdesouza/ruby-s3-simplest",1521470961.0
clothes_are_optional,"do you have to use shrine? ive never used it, but have done work with other ones",1521348004.0
tk425,Net http,1521346413.0
,Don't use shrine. Carrierwave and Paperclip are much better supported.,1521357580.0
philpirj,Have you considered sidekiq-throttler?,1521400530.0
philpirj,Have you considered using sidekiq-throttler or similar?,1521400677.0
ioquatix,this looks awesome. If you resize the terminal does it reflow the text?,1521367782.0
olbrich,bundle open gemname,1521301987.0
ignurant,"I personally enjoy using pry's `show-source`, `show-docs` and `edit` features. You can call them with both constants for loaded classes and  modules, or instantiated objects. You can also call them for specific methods. If you haven't given them a spin, I encourage you to check it out. It's quite powerful (and pleasant).",1521300737.0
ignurant,"Keep up the good work! I checked out your project last time you posted. I think this is lovely! Sorry, no advice or anything--- just a bunch of high fives and feel goods! Feel good!",1521248274.0
louism2wash,Installing a new version of Ruby is trivial... if Ruby 2.5 offers you benefits that lower versions don't then it is what it is.,1521249093.0
GDP10,"Wow, really cool stuff! I hadn't seen your original post so this is really cool. Very nice especially to see anything built in Opal :D

Do you recommend any particular use-cases of your software? I can think of a ton myself, but I'd like to know what it's really tailored for.

Moreover, how does your project compare to other audio programming solutions, such as [Sonic Pi](http://sonic-pi.net/) or [Sporth?](https://pbat.ch/proj/sporth.html) I think I have an idea of what the differences may be, but I'd like to hear it from the developer himself.

Also, I'm curious: what are the features that Ruby 2.5 offers that make it necessary? There's no problem with requiring 2.5 as far as I'm concerned, but I'd like to know what is so desirable.",1521270689.0
scragz,This is so cool! The reverse scale finder is something I find needing the most when I am jamming in a fragment of a scale and want to know what scale has those notes and what other notes are in that scale. Super cool to have that available all the time and not have to go to some dopey website.,1521271404.0
jrochkind,neat!,1521302388.0
pedrozath,"This is the new Slack Channel of the project:
http://coltrane-ruby.herokuapp.com",1521331868.0
DudeManFoo,"I have coded in many languages for over 25 years... been CTO in the finance and telecom industries... Imposter Syndrome should NEVER affect you...

Awesome stuff... thank you",1522242501.0
,"Nice guide. Just curious, what country are you in where a Windows 7 guide is needed?",1521250729.0
pixelgoo,"It's funny, I wrote an article about that a few days ago. Not in English though.
https://codeguida.com/post/1265

In my opinion native ruby on windows (without  Linux virtual machine) is meh. You will run into a lot of problems during development. And it's just unnatural and wrong to me. ",1521255121.0
,It could be more helpful to make a PR on the Rails Girls official guide.,1521277519.0
laylaboydarden,"This is what I needed a year ago. I was determined to make ruby work on my PC. The poor thing, I almost threw it against the wall a few times, but after days of trial and error it was working. I have windows 10 though, so now I have WSL which is waaaay easier. Anyway, thanks for sharing. ",1521233504.0
edendark,"Nice job! I was a coach in Buenos Aires last year too. 

One of the pros of doing it this way is that the RubyInstaller + DevKit are light in file size compared to RailsInstaller, so the download will be faster (important since many people will be on the same, often slow, wifi). 

But one of the cons is that it may seem intimidating to have to hack on the terminal and a yaml file before even having Ruby/Rails installed. I think I'd recommend using RailsInstaller anyway since the only downside I can see to it is being stuck using Ruby 2.2/2.3 instead of 2.5. 

Is there any other reason to use RubyInstaller instead? ",1521230886.0
peteonrails,"Do. Not. Work. For. Free. 

Seriously. ",1521255700.0
GroceryBagHead,"Seriously. Do not work for free. 

If you need a portfolio, why not create a personal project. Contribute to the open source projects. Make an open-source project. 

Do not work for free. As you're screwing everybody else in the industry this way.",1521349830.0
,Do you have a portfolio?,1521206105.0
Muchaccho,"This comes from the [The Designer‚Äôs Code of Ethics](https://github.com/mmmonteiro/designethics/blob/master/en_US.md), but is perfectly applicable to developers (as most of the document).

> You are part of a professional community and the way you do your job and handle yourself professionally affects everyone in that community. [...] *If you work for free, the designer behind you will be expected to do the same.* [...] A designer seeks to build the community, not divide it.

https://github.com/mmmonteiro/designethics/blob/master/en_US.md#a-designer-is-part-of-a-professional-community",1521884230.0
geraldbauer,"Build your own blockchain :-) than you can mine as many blocks as you like on your home computer with ruby, see <https://github.com/openblockchains/programming-blockchains-step-by-step>. Happy mining. ",1521214002.0
Palmer11,Should be. Check on github. ,1521198819.0
zverok_kha,"> it‚Äôs better to just use Ruby in your own projects. It‚Äôs faster, it‚Äôs clearer, there‚Äôs no need for a dependency to do this.

I used to think the same, but lately got really used to memoist. Especially in complicated business objects, that fetch some results from DB (memoize1), then do a complex calculation on them (memoize2), then extract some view (memoize3)... <insert imaginary discussion on a good system design that will break this into something something blah blah>

Mostly, Memoist attacks ""it‚Äôs clearer"" statement. Of the two below, for me, ""with memoist"" is definitely clearer! It is DRY, declarative, easy to recognize reading class definition, and scalable for complex methods.

    # without Memoist
    def client
      @client ||= Client.find(id)
    end

    def assessibile?
      return @accessible if defined?(@accessible)
      @accessible = FetchAndCalculateAccessible
    end

    def huge_table
      @huge_table ||= begin
        columns = calculate_columns
        rows = calculate_rows
        data = calculate_data
        columns.zip(data) ......
      end
    end

    # with Memoist
    memoize def client
      Client.find(id)
    end

    memoize def assessibile?
      FetchAndCalculateAccessible
    end

    memoize def huge_table
      columns = calculate_columns
      rows = calculate_rows
      data = calculate_data
      columns.zip(data) ......
    end

For me, this use of `memoize` is exactly ""good Ruby"": make code cleaner with simple abstraction, encapsulating common pattern and defined with metaprogramming. I am not sure why very common pattern is better to write by hands each and every time, polluting the code of methods with what is not related directly to method's responsibility.

The problem, of course, is that Ruby does not have ""zero-cost abstractions"", and even ""not-that-high-cost-abstractions"": now you need to think about the performance of the wrapper, and about the additional instance variables (that, for example, will be shown in default inspect and default to_yaml), cache invalidations and all kind of new things. 

Still love it, tho.

PS: On the more philosophical note, I am always fascinated when ""we don't need magic, metaprogramming, and abstract out the complexity"" comes from Rails ground. So ironic.",1521204335.0
dark-panda,"The premise of this blog post is incomplete, as memorization specifically refers to capturing the inputs of a method and using them as the basis of the cached result. Although it‚Äôs mentioned later in the post, I think it should be given more emphasis, as I believe that most of the memoization libraries out there perform this additional function, and it‚Äôs a rather important distinction. 

For my part, I do like using Memoist for these cases because I often do have to worry about inputs and therefore want a complete solution that I generally don‚Äôt have to futz with. ",1521212859.0
moomaka,"> ‚Ä† - this is not strictly true in a multi-threaded environment, but I‚Äôm choosing to avoid getting into that in this article.

Read that, then read it again. Don't do memoization the referenced way :)",1521258678.0
bugo,"`extend Memoist`

There. Happy? ",1521214102.0
equivalent8,"Although I'm watching/learning in my free time Phoenix(Elixir), Serverless, Microservices, and following bunch of potential technologies,  I'm betting my future on Ruby (MRI) and Ruby on Rails particularly :)  

I'm already 9 years a Ruby developer and it seems that every 3 months someone post an article how Ruby or Rails is dying and like no Jobs for Ruby/Rails will be there in few of years. Yet (as a tech lead in  company I work for) demand and salaries are higher than ever :) 

It's simple. There are still new companies emerging, and monolith applications are the cheapest way how to build a product. And when it comes to productivity Ruby on Rails is a clear winner :) 

Yes there are pitfalls ! But there is no single technology/architecture/language without some disadvantage (on technology or human level). More you learn and improve around particular technology  more you learn how to deal with the pitfalls. Learning different other technologies is helpful too. When you reach certain level in technology you notice you  learn more  about Ruby by learning other languages/technological approaches than by just reading only Ruby related topics.

To panic and to say ""there will be no market"" for Rails or Ruby  makes me smile all the time (as I've read it every other month for last 9 years :) ) 

Ruby and Rails is always evolving they will always adopt to what is currently needed on market :) And before anyone will argue with me Please listen to this podcast interview with DHH (creator of Rails): https://player.fm/series/all-ruby-podcasts-by-devchattv/rr-342-rails-development-and-more-with-david-heinemeier-hansson",1521220272.0
,lol you could say the same for literally any language.,1521318751.0
MiningPotatoes,"I'm really excited for Crystal, especially with projects like Lucky and Amber. I can't wait for it to go 1.0 and for it to get more enterprise support. ",1521203534.0
OneNeptune,Good thoughts - but why are you so scared of JavaScript?,1521199973.0
GDP10,"Yes, I agree with you on many points. It is truly a somewhat worrisome situation. Not that Ruby will ""die,"" but that it may perhaps not live up to its potential. It really needs to keep up with other languages as far as performance goes and Opal is a great help, but has not received as much positive attention as it should have. Truly I hope that Ruby-like WASM languages will also get off the ground. Truffle is also exciting, but there are some concerns with it like slow-ish startup and not getting RVM in soon enough. Ruby 3x3 can obviously only go so far. Crystal needs to resolve issues with Windows and parallelization.

Definitely a lot of work that needs to be done. I hope the community can live up to the task and make Ruby meet its potential.",1521277192.0
u4bu8s4z9ne4y8uze,"this seems so cool but how the fuck do I use it without facebook login?

> SAVE XXX'S PROGRESS?

well I would like to say ""no"" but there is no such button :/",1521204548.0
sinsiliux,"Use state, something like:

    if warrior.health < 20
      warrior.walk!(:backwards)
      @healing = true
    end

And then in your code the first thing you check is

    if @healing
      warrior.rest
      @healing = false if warrior.health > 80 
    else
      check_captive
    end",1521205039.0
roelofwobben,"oke, im a little bit further.  I have now this code : http://lpaste.net/363684

but now I never reached the person with the bow. 
So please help me 
",1521194786.0
realntl,"> This technique improves the organisation of your code. It forces you to do two things that can really help keep you productive over time.

I don't think I can agree.

> Firstly: naming the concepts you‚Äôre creating. When you name something aptly, you explain it, often for the benefit of ‚Äúfuture you‚Äù or your colleagues.

You can name these concepts anywhere you use them. You can assign `Post.where(status: 'published')` to a local variable in your controller, for instance. They don't have to be named on the model.

> Secondly: you have one place to look for all of this. If you define scopes outside your models you can end up with arbitrary scopes and conditions defined all over your code base. When you know where all the conditions are defined you‚Äôll know where to look when you want to refactor or optimise database performance.

Having one place to look for things leads to ""God classes."" If you want to organize your queries so that they are easy to find where needed, consider organizing your queries into query objects under a namespace. Cohesion is really, really important to software design.",1521157411.0
jrochkind,"I don't know about _only_, but I think it's a great technique to keep in mind, for arel/queries that get complex. (more than one or three builder methods used to build em). When I first started moving my queries from controller to model sometimes, I felt oddly _guilty_ about it, as if it was not quite right... now I realize it's virtuous. 

My main argument for it is if there is a good chance you are going to want to re-use it in a way that it is important it's consistent. DRY, as always. 

Sure, you could make a new class/object to organize these re-usable queries, that's pretty easy to do. But now you've got to remember where/what it is. Until you've got like a dozen of them or something, why bother? And I'd _still_ probably link em to the model, so I'd get to em from `MyModel.query_stuff.a_scope`, so I'd know where to find them. This would let you ""dependency inject"" other queries more easily, at the cost of a bit of code complexity... and a [law of demeter](https://en.wikipedia.org/wiki/Law_of_Demeter) violation, oops. So now you put in some delegation to avoid the LoD... and you're back at the API you started with... but with much more complicated implementation. But the ability to dependency inject different queries. Which you'll probably never use.  (If you do, then you did it right though!). 

As always, the ultimate goal is as simple as possible but no simpler. The trick is figuring out what that is, of course, but at least remember the goal! And feel free to do things that seem to serve it, and not do things that don't, in any given situation. ",1521163282.0
urbanfog,Why would you use a named scope over a method?,1521202773.0
dogweather,"> Only use named scopes **outside** models ... Use‚Ä¶
‚Ä¶only named scopes that you define **in** your model...

Contradiction? Maybe the title should read **in** as well?",1521502105.0
TextileWasp,puts name + ‚Äú was born in #{year - age.to_i}‚Äù,1521135624.0
TextileWasp,Which exercise are you having trouble with?,1521135276.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/github] [MarkdownHelper: What's Next?](https://www.reddit.com/r/github/comments/84q21a/markdownhelper_whats_next/)

- [/r/markdown] [MarkdownHelper: What's Next?](https://www.reddit.com/r/Markdown/comments/84pz7d/markdownhelper_whats_next/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1521148026.0
equivalent8,"Related discussions:

* serverless-ruby.org : https://www.reddit.com/r/ruby/comments/835rjj/we_demand_faas_providers_to_support_ruby/
 
Note:

Sorry for my pronunciation and voice shaking in the talk, I was really nervous.
",1521121106.0
realntl,"I haven't watched the talk, but microservices and serverless are definitely not things that are ""web architectures."" Let's just head _that_ off at the pass, shall we...",1521134983.0
philpirj,"The specs you demonstrate are far from being perfect, and some of the statements are incorrect, e.g. ~~the one mentioning that `build` will create the associated record in the database~~. Do you have a repository of the examples for the book? Mind posting a link please?",1521144770.0
mesamunefire,Can someone explain why the first example used be_truthy instead of explicitly testing be true? Just wondering.,1521149486.0
oliverguenther,"I can't recommend test-prof enough,  especially the let_it_be helper (or shared_let as i called it before it was added as a recipe). It can be a let drop in in many cases for common factories and can even work as 'global fixtures' generated once for the test suite.

Beware that if you plan to run this with capybara feature tests, you need Rails 5.1 system tests or a in-process puma to get the benefit of shared transactions, otherwise you'll be in a world of pain.

",1521140363.0
rArithmetics,thanks this was good,1521151928.0
vruizext,"I disagree with some of the points this article made. 

> Easier versioning - data is defined by the query, not by the server

And how does this help to an easier versioning? If the data model changes in the server, the queries will need to change, whether in the client or in the server. Why is it easier to version in the client?

> Reduction in data volume - the server sends only what is requested by the client 

This is not GraphQL specific feature. With a RESTful API or JSON RPC, you may also fetch only a subset of the data instead of the full objects

Also, with GraphQL the data volume sent by the client is increased, because the query needs to be sent for each request, and there is a lot of overhead + verbosity, i.e. need to declare operations and data types in the query. I've seen huge queries for real world data models. (The examples in this article are very simple, ""hello world"" scenarios)

> Aggregated queries - allowing us to retrieve resources and their subresources in a single API call

Same as the previous point, nothing stops you to return aggregated objects with  REST APIs

there is no ""official"" standard for RESTful APIs, so one may design endpoints to return the data that fits better to his/her problem.

Btw, I'm not a big fun of RESTful APIs, I kind of like more JSON RPC, which also gives freedom to return whatever you feel like in the results. 

",1521159250.0
vruizext,"As an example, see what a ""normal"" graphQL query might be. IMO, this is awful. 

https://gist.github.com/vruizext/637eae74b4f4540b54611f54e91592ca
",1521160412.0
flanger001,All I'm saying is I met Joe Mastey a couple years ago and he's a friggin swell dude.,1521133347.0
jrochkind,"convenient, I need this _right now_, heh. 

Although I see it's not released yet, the blog post says. I had never used bundler-stats before, just trying it out (knowing that the version I've got might not have this feature yet)... sadly I seem to get an exception trying `bundle-stats show [anything]`. 

    $ bundle-stats show nokogiri
    /Users/jrochkind/.gem/ruby/2.3.3/gems/bundler-stats-1.0.0/lib/bundler/stats/remover.rb:33:in `still_used?': undefined method `dependencies' for nil:NilClass (NoMethodError)
      from /Users/jrochkind/.gem/ruby/2.3.3/gems/bundler-stats-1.0.0/lib/bundler/stats/remover.rb:12:in `block in potential_removals'
      from /Users/jrochkind/.gem/ruby/2.3.3/gems/bundler-stats-1.0.0/lib/bundler/stats/remover.rb:11:in `reject'
      from /Users/jrochkind/.gem/ruby/2.3.3/gems/bundler-stats-1.0.0/lib/bundler/stats/remover.rb:11:in `potential_removals'
      from /Users/jrochkind/.gem/ruby/2.3.3/gems/bundler-stats-1.0.0/lib/bundler/stats/calculator.rb:28:in `summarize'
      from /Users/jrochkind/.gem/ruby/2.3.3/gems/bundler-stats-1.0.0/lib/bundler/stats/cli.rb:32:in `show'
      from /Users/jrochkind/.gem/ruby/2.3.3/gems/thor-0.20.0/lib/thor/command.rb:27:in `run'
      from /Users/jrochkind/.gem/ruby/2.3.3/gems/thor-0.20.0/lib/thor/invocation.rb:126:in `invoke_command'
      from /Users/jrochkind/.gem/ruby/2.3.3/gems/thor-0.20.0/lib/thor.rb:387:in `dispatch'
      from /Users/jrochkind/.gem/ruby/2.3.3/gems/thor-0.20.0/lib/thor/base.rb:466:in `start'
      from /Users/jrochkind/.gem/ruby/2.3.3/gems/bundler-stats-1.0.0/bin/bundle-stats:11:in `<top (required)>'
      from /Users/jrochkind/.gem/ruby/2.3.3/bin/bundle-stats:22:in `load'
      from /Users/jrochkind/.gem/ruby/2.3.3/bin/bundle-stats:22:in `<main>'",1521124313.0
olivierlacan,"For those watching for updates on that `bundler-stats` PR mentioned in the article. Joe Mastey just released [version 1.1.0][1] with the `bundle-stats versions <gemname>` command I talk about in the post. 

So you can now all benefit from this little feature. :-)

And [Andr√© Arko mentioned on Twitter earlier][2] that he'd accept a PR to add this behavior to `bundle show` if someone submitted it. If anyone feels courageous or wants to help me out with this, let me know. :-)

[1]: https://rubygems.org/gems/bundler-stats/versions/1.1.0
[2]: https://twitter.com/indirect/status/974343146430595072",1521142501.0
strzibny,I tested --jit briefly with some scripts and all I can say is that it most likely does something since it's slower:). I think we need to wait some time before there will be anything meaningful to measure. I am testing the execution time with /usr/bin/time -v on Fedora 26.,1521105693.0
chrisgseaton,"> the generated C files are not reused across invocations

They've got addresses in them from the process which created them - they won't work in another process.",1521105733.0
stanislavb,"Yeah, that's a very good idea. That way more people will go next mile to try it and give feedback.",1521102822.0
dogweather,"What, is it like not implemented in MRuby?",1521100305.0
u4bu8s4z9ne4y8uze,https://github.com/mattn/mruby-onig-regexp ?,1521118698.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/github] [MarkdownHelper Updated](https://www.reddit.com/r/github/comments/84h9yc/markdownhelper_updated/)

- [/r/markdown] [MarkdownHelper Updated](https://www.reddit.com/r/Markdown/comments/84h721/markdownhelper_updated/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1521064291.0
geraldbauer,Awesome. You're more than welcome to add the nanook gem to the [Awesome Crypto page @ Planet Ruby](https://github.com/planetruby/awesome-crypto). Cheers. Prost.,1521102303.0
hehestreamskarma,A quick Google search led me to https://github.com/artf/grapesjs,1521060605.0
Sebbean,"saw this recently - not sure what kind of export ability it has
https://subformapp.com/",1521080244.0
fuzzyinterval,"if you want or like bootstrap, take a look at [layoutit.com](http://www.layoutit.com/build).  
I used it to make an index with form, then a response/result page.  
It was easy to break them down in to a main layout and then index and result yield pages.",1521084986.0
albitos,https://webflow.com/ allows you to export HTML,1521097659.0
zverok_kha,"Umm... How about... NO?

* No, AR is not the only bad thing about Rails, and it is far from being the worst one;
* No, need to write raw SQL for the complex queries is not the worst thing about AR;
* No, people are typically not ignoring Arel nowadays;
* No, replacing ActiveRecord with Sequel while preserving the typical approach (fat models, lots of logic in hooks and so on) will solve almost no problems that are bad ab AR or Rails.",1521047514.0
janko-m,"Yep, Sequel has a very well designed query API which allows you to never have to write pure SQL.

With ActiveRecord you have to drop to pure SQL quite soon, which is unfortunate. I think this can even demotivate some to write more complex and efficient queries, because they know they would have to drop to raw SQL

Arel can help in certain cases, but for me it's generally much more complex to use than raw SQL. When you have to instantiate Arel classes directly, then the query interface has failed. Arel is also considered private API, and it does change.

Sequel has this implemented right. And rom-sql adds even more advanced stuff on top of Sequel.

> It might be the considerable entry threshold, lack of clarity, or the complexity of Arel, or maybe the rather imperfect documentation of Sequel.

I find Sequel extremely well documented, once you get used to where to look for things.",1521043322.0
aarkerio,"I dunno, Sequel looks more like an alternative SQL syntax than an ORM.  ",1522793174.0
geraldbauer,"Hello,

yesterday's Hyperledger talk notes titled Blockchain vs (Hyper) Ledger -- Inside (Hyper) Ledger Lite - Add Transactions One Block at a Time and Balance the Accounts (Books) with Ruby. Example:

    ledger = Ledger.new
    
    ledger.write( Tx.new( from: ""Keukenhof‚Ä†"",  to: ""Vincent"", qty: 11, name: ""Tulip Admiral van Eijck"" ))
    ledger.write( Tx.new( from: ""Vincent"",     to: ""Anne"",    qty:  3, name: ""Tulip Admiral van Eijck"" ))
    ledger.write( Tx.new( from: ""Anne"",        to: ""Julia"",   qty:  2, name: ""Tulip Admiral van Eijck"" ))
    ledger.write( Tx.new( from: ""Julia"",       to: ""Luuk"",    qty:  1, name: ""Tulip Admiral van Eijck"" ))
    
    ledger.write(
       Tx.new( from: ""Dutchgrown‚Ä†"", to: ""Ruben"",   qty: 11, name: ""Tulip Semper Augustus"" ),
       Tx.new( from: ""Vincent"",     to: ""Max"",     qty:  3, name: ""Tulip Admiral van Eijck"" ),
       Tx.new( from: ""Ruben"",       to: ""Julia"",   qty:  2, name: ""Tulip Semper Augustus"" ),
       Tx.new( from: ""Anne"",        to: ""Martijn"", qty:  1, name: ""Tulip Admiral van Eijck"" )

Cheers. Prost.

PS: What's your (favorite) way or (what libraries/gems to use) to build / design / write blockchains / transactions in Ruby?",1521019745.0
douglasjsellers,"We use spree.  It's fine.  If you can do shopofy, do that.  One point of warning about solidus, it's primary sponsor, bonobos (who did the original fork and still do the primary development ) were recently acquired by Walmart - leaving is future some what in doubt. ",1521000409.0
EAT_DA_POOPOO,"I'm using Spree. If I understand the history, Solidus was forked from Spree during a period of inactivity and lack of funding/support, but now Spree is actively being developed again. I'm not sure how much they've diverged but Spree is considerably more popular based on github stars alone, however there seems to be [more activity on Solidus](https://rubygarage.org/blog/spree-commerce-vs-solidus). If you have a firm plan of what features you need, I'd just see if one makes your life easier. I don't think you can go wrong either way.",1520996381.0
jhawthorn,"You should use Solidus.

_Full disclosure: my job is to develop Solidus and so I could not be more biased._

We've worked really hard to following SemVer as closely as possible (this is usually my #1 concern when writing code and reviewing PRs). To me this is the key to a successful community. It needs to be relatively painless to upgrade to the latest version, otherwise it doesn't make sense to contribute back to the project.

I think the commitment to compatibility is best shown by http://extensions.solidus.io/, which ensures our extension gems stay compatible across multiple releases. This is a departure from older Spree where extensions were tied to the exact version of Spree (though I think new Spree may have followed us here).

We've also improved security (with patches submitted back to Spree and coordinated release), improved performance, built proper extension points, and just generally fixed things which were broken. I think the work should speak for itself, but I appreciate that asking you to look at and compare two huge codebases isn't too helpful.

Also w/r/t Shopify, this is usually our first suggestion to new users considering Solidus. If you don't need our level of customization or don't care about self-hosting, you should give that a try first.

I'm happy to answer any questions here or in the Solidus slack.",1521040529.0
thomasvendetta,"Another option is [Workarea](https://www.workarea.com/pages/platform), it's an e-commerce product which uses a Rails/Mongo/Elasticsearch/Redis stack. 

It's not open source in the 'available-on-github' sense, but the licensing includes access to the source code, the ability to easily [extend the application](https://github.com/weblinc/rails-decorators), a semantic upgrade path, managed hosting as a service, and developer training.

disclaimer: I work for the company that builds Workarea.",1521044895.0
fentanyloverdose,"Any real reason why you would build an ecommerce store with Rails instead of Shopify? 

",1520992874.0
BenMorganIO,"Use Solidus.

19/20 of the top contributors to Spree moved to Solidus after Spreecommerce cashed out. That 1 out of 20 simply cached out and isn't active on any of the projects anymore. That's why you'll see the GitHub stars lower on Solidus. The devs who were building and maintaining Spree decided to fork after Spreecommerce was causing drama. It's basically a MySQL vs PG comparison.

Because of this, Solidus is far more advanced and leagues ahead of Spree. Solidus is Spree, just rebranded. The ""new"" actively maintained Spree is not the original Spree everyone knew and loved. It's a zombie project.

It's like when your amazing Twitter gets hacked and you have to make a new one. That's essentially what happened. Use Solidus, it's the original Spree.",1523585249.0
joanbm,"We built our products on Spree, only kept an eye on Solidus.

Solidus presented itself as a stabilized fork of Spree, ironically claimed by the same devs, who notoriously broke API within a stable branch, when worked for Spree Commerce formerly. Recent versions of Spree, after the big changes, seem to be finally settled down.
",1521026333.0
ixyzs,"* https://apidock.com/ruby/Hash
* https://apidock.com/ruby/Enumerable/map
* https://apidock.com/ruby/Enumerable/max",1520972996.0
ryanplant-au,"One simple and efficient way that avoids hash operations would be to store the names and amounts in two arrays where the indexes correspond, like so:

    names = [""Meredith"", ""Bailey"", ""Alex""]
    quantities = [4, 8, 15]

If you're starting with a hash, you can use the `keys` and `values` methods to create them.

     salespeople = {
       ""Meredith"" => 4,
       ""Bailey"" => 8,
       ""Alex => 15
     }
     names = salespeople.keys
     quantities = salespeople.values

You could then create a `totals` array where the quantities are doubled:

    totals = quantities.map { |n| n * 2 }

Find the highest total:

     totals.max

Find the combined total:

     totals.reduce(:+)

And find the  name of the person with the highest total:

     names[totals.each_with_index.max[1]]",1520994766.0
geraldbauer,"Hello, 

yesterday's Austria.TXT talk notes titled Build Presentations / Talks ('n' Handout Notes) w/ (Structured) Text w/ Formatting in Markdown and Jekyll Themes (Bespoke.js, Reveal.js, S6, ...) 'n' the Slideshow (S9) Website Compiler. Cheers. Prost.

PS: What's your way to build / design / write presentations / talks with Jekyll and friends (in Ruby)?",1520954249.0
this_is_not_nil,Cool,1520967714.0
Paradox,happy cake day,1521010566.0
jrochkind,"I'm getting `NET::ERR_CERT_AUTHORITY_INVALID` on your https. 

> dnsme

> Root certificate authority

> Expires: Wednesday, March 13, 2019 at 12:25:55 PM Eastern Daylight Time
",1521036492.0
u4bu8s4z9ne4y8uze,You can try to combine `tk` and `ocra`. At least for me it works reasonably well.,1520936988.0
PercyLives,FXRuby and ocra works for me.,1520937582.0
zaphnod,"Ocra is good.  I haven't messed with TK/FXRuby, but ocra has worked for me on the hardest part of bundling as an .exe

It basically grabs all your gems, your ruby binary, and your code, zips it up, and builds a self-extracting exe out of it.  Wonky, but works.  :-)",1520975298.0
clbustos,"On [Buhos](https://github.com/clbustos/buhos), I use a local web server and works very fine on Windows.",1520953419.0
ElectricalUnion,"Does anything rule out a simple Rack / Sinatra (or even Rails) app running locally? Is the ""Native UI"" a strict requirement?",1520974722.0
balls_of_glory,I've used RubyShip in the past. Worked fine.,1520985282.0
myringotomy,Most people already have a JRE installed. All you have to do is to ship a jar and maybe a batch file to call it.,1520974154.0
TextileWasp,"A few resources that I like:
http://rubykoans.com/
https://rubymonk.com/learning/books/1-ruby-primer
https://learnrubythehardway.org/book/
http://tryruby.org/levels/1/challenges/0
https://www.bloc.io/ruby-warrior#/

You should start with a MOOC from someone like Codecademy or Udemy, go into the resources above and the last (essential) step is that you need to build stuff with Ruby. 

The official doc is goos for reference, but I find it a bit dry.",1520950241.0
metalepsis,"Pardon my snark, but ...
A really good answer is in the right column ‚Üí",1520974424.0
,"Honestly I'd take some problem you want to fix and do it with ruby. use the books & blogs & docs to figure out how to do what you want to do, then rinse & repeat for larger projects.

Write something to verify backups you're doing, or perform them, or a simple reddit bot that edits all the links you've posted people to instead rickroll them. Or a script that checks your various streaming services APIs for a film so you don't have to fire up 4 tabs to check *every time*.",1520976663.0
rainynight65,"The best online courses I've taken for both Ruby and Ruby On Rails are offered by Pragmatic Studio (https://pragmaticstudio.com/courses/ruby). They're not cheap by any means, but their methodology worked best for me.

Other than that, once I have a basic understanding of a tool or language, the best way for me to learn further is to solve a practical problem with it. 

[](/GNU Terry Pratchett)",1520977194.0
fedekun,Everything from Sandi Metz :),1521055429.0
thebiglebrewski,I recommend using threads. That way you can learn concurrently! ,1520985992.0
Palmer11,Official documentation. What else?,1520945962.0
vruizext,"https://poignant.guide/
Or the Pragmatig Programmer‚Äôs book

Though to learn the real thing, the best is that you start to work on project and learn by doing",1520988489.0
realntl,"If you're using RSpec, your tests should serve as a _specification_ for the subject. They can't do that _and_ ""tell a story.""",1520957113.0
hmaddocks,"The first ""badly designed test"" is the correct way to structure rspec. If you had the same expectations in both versions and more than one context you would see that the first version is more concise and easier to understand.
Your story version is the test unit way of writing tests.",1520985631.0
isolatrum,"Man, i don't know ...  I kinda preferred the version with `context`,
the reason being that you can write shared `before` blocks for the context, and also when you have nested context the test names would be pretty long if you include everything in each `it` name",1521011513.0
moomaka,"meh, I usually write specs that are somewhere in between these two extremes. 

* `described_class` just hurts understandability, it's also long winded. The usage in the first example is extremely weird since you immediately change the alias to the thing under test to a variable named after the class (`:name_service`) so you really lost all point in using it.

* `subject` I usually only use it for blocks that are using implicit subject matchers. e.g. `it { is_expected.to ... }`. Outside that use case it just makes it harder to follow the code for the same reasons as `described_class`.

* `instance_double` and mocks `allow....` etc. I only use them when it's required to disconnect some external service. Isolated testing is misguided.

* `let` / `let!`, I really only use if I have a bunch of tests around some simple chained property variance to avoid repeated setup. 

* `context` is great to separate tests that need to occur on similar setup. ",1521080694.0
tickypupu,"lol your english is weird even in a blog post. You make the typical slavic mistake of leaving out the articles ('the' and 'a'). I'm not going to pay for a book written in messed up english.

Also your tests look whack, so much noise in each test. Your ""story"" is  babbling in a noisy room.",1520984863.0
marahin,"Well, commit messages should describe what happened in the commit, not show the difference (so list removed files, etc.). This defeats the purpose of the commit message in my opinion. 

Git diffs however are built for their purpose: to see the real difference that the commit made. If you want prettier diff, you can always look at Github's pull requests with their Changes tab. ",1520937177.0
uusernam3,"Hi everyone, want to show you the meta_commit gem.


Meta_commit is command line utility, which was built to experiment with the idea of generating commit messages. It all started as a try to build the tool which should reduce the time spent on the code review by summarizing the commit diff (So the user can perform fast high-level code check and don't have to read through raw git diffs).


Why I posted it here :
I think that it may be interesting to one of /r/ruby readers from development or even user perspective (and we can collaborate together) also, honestly, I'm interested in any feedback (opinions, contributions, issues, use cases).


Especially this project may be interesting for people who want to :

- get experience with gem developing

- practice with cli ruby utilities

- try different testing approach
	- rspec
	- cucumber (+ aruba)

- get experience with refactoring methods (Actually, I would be very grateful for help with refactoring [of this parts](https://codeclimate.com/github/usernam3/meta_commit/issues?category=complexity&engine_name%5B%5D=structure&engine_name%5B%5D=duplication))


If you want to share opinion or add a feature and don‚Äôt know how or feel uncomfortable by opening pull request, please write DM to me or add a comment and we will discuss it and prepare the issue or PR together.

Thank you for your time and reading up to this point, have a great day!

To get more information please visit :

- [github page](https://usernam3.github.io/meta_commit/)

- [github repository](https://github.com/usernam3/meta_commit)

- [asciinema demonstration](https://asciinema.org/a/P6kWCq2S4eOpMzEjOAKSHYmyv)",1520906521.0
tickypupu,"> Meta_commit is command line utility

No. Please, you are forgetting the article 'a', rewrite your sentence as:

> Meta_commit is **a** command line utility",1520988042.0
arpie,"Gource is beautiful, but I've yet to find a real practical application for it other than ""oh wow, look, cool!""",1520941658.0
bananaexaminer,This is so cool!,1520910307.0
ignurant,I feel like I'm watching one of the Eve Super Battle recaps.,1520910879.0
lostapathy,"I get why people do this ...  and not to diminish the work ... but I hate that this goes on and gets shared.

It seems like the more workarounds like this get posted, the more packages keep compatibility with old rubies or old dependencies, etc .... the easier it is to justify not upgrading.  And then it becomes impossible to upgrade, and then it becomes ""mandatory"" to keep everything compatible forever.

And then we're the python 2 to python 3 transition ... and I don't want Ruby to become that.",1520906130.0
sshaw_,"Oh, it supports TLSv1.2 _after_ applying a patch... boy do I feel cheated. ",1520904286.0
klapply,Why do people still prefer to run old Rubies? The upgrade path is very easy and can be performed by anybody on the team.,1520925971.0
honeyryderchuck,"I'm going to go against the sentiment here and say this is a great thing. Not every deployment scenario is using a Ruby version manager and is allowed to migrate easily. If your server is stuck with Cent OS 6 and you can't migrate and you must use distro Ruby, then you're stuck with 1.8.7 . And this TLS discontinuation will affect you. Glad there's a workaround.",1520932413.0
stanislavb,Seems pretty useful. Thanks!,1520908187.0
saturnflyer,You may be interested in comparing this with https://github.com/chad/turbulence,1520949155.0
kawsper,"Hi Robert, I am looking forward seeing you at Wroclove.rb this week! :)

This is a really cool project, but I wished the documentation was better. Let me give a couple of examples:

For an example the frontpage of http://railseventstore.org/ mentions that the handlers can be run synchronous and asynchronous, that is cool, do I need a custom server process to process the handlers? Or is it compatible with ActiveJob, Sidekiq and Resque? What type of setup do you require to get started?

Also, I do not really feel that the whole process are explained in the docs, if I publish an event, when is it run? Where is it run? What does is an event life look like? Beanstalkd has a really cool graph of a background job life, https://github.com/kr/beanstalkd/blob/c17f5030177f689b37ddd6cd2237c96491f6c399/doc/protocol.txt#L73-L102 I feel like it is needed to understand.

I kind of wish there were a vocabulary somewhere, for an example in the publish documentation, http://railseventstore.org/docs/publish/ stream_name is introduced, but not really properly explained, it is mentioned that it can be skipped, but the intricacies or benefits are not really explained.

I also feel like the only tutorial is too detailed: http://railseventstore.org/docs/pubsub/ or it might just be my very short attention span, but it does not tell me where to create the files what the lines are doing, and how to test it out in my Rails project. It feels like someone have built the code, and then copy/pasted it into the tutorial, and then it is like ""Just copy this, and it will work"". 
It could be cool to find a simpler example, that takes you from A to B more gently, and present it like Ryan Bates would on Railscasts, maybe an example where a User have been created, and we need to send a welcome email? But I really like that the tutorial includes a handler that publishes another handler.

I guess most people that checks out the project for the first time thinks: ""What can it do for me?"" and it needs to handle that.

Sorry for my, maybe, harsh words, but I think this is what have stopped me in the past of using it in my personal projects, even though I am totally convinced of the benefits of an event store. ",1520875168.0
jrochkind,"$84K is of course probably _less_ than the full cost of a full time ops/devops person. 

Of course, there are additional strategic benefits to the in-house expertise, especially if you are going to continue to scale. 

Around $84k of annual heroku costs is defintiely a point where I'd certainly recommend considering/evaluating other options, but it's not neccesarily a forgone conclusion that ""saving"" $84K/year is really a good trade-off, if it costs you extra labor. 

I'm also curious about the idea of running some things on heroku (web and job dynos) but moving certain things that end up being especially expensive on heroku to 'bare' aws (funny to use the word 'bare' for aws, but yup) -- like especially postgres (also solr/elasticsearch).  I'm not sure if it would end up more trouble than it's worth to leave some things on heroku once you've made the plunge to bare aws for other things -- but it's got some appealing aspects. It's things like postgres and solr that end up really at a premium when used via PaaS rather than running it ""yourself"" (on AWS!). ",1520875336.0
Rogem002,"Pretty good write up, I'd love to know what kind of background tasks were being run, I'm assuming a lot of image resizing?

> the app had a history of love affairs with too many developers who paid little regard to what they were doing!
> The app should upload files directly to S3 without going through our backend - but it wasn‚Äôt done like this before we took over

I've picked up way to many projects which upload files via Heroku to S3. Hopefully [Active Storage](https://github.com/rails/rails/tree/master/activestorage#direct-uploads) will stop that setup for good :D ",1520870956.0
,[deleted],1520900469.0
jordanaustino,"""Seed a local DB to mimic production's"" is nice advice when you are small and even at production scale you don't have much data in terms of disk space.

At larger scales you need different systems for testing true production scale. ",1520865391.0
herminator,"Don't. As soon as you're thinking about dynamically naming variables through code, there's a 99.9% chance you're on the wrong track. What problem are you having that this will solve?",1520843636.0
mikaljr,"To name and later refer to that name you'll need to use an array of hashes. The ""name"" will be the key of each hash. ",1520840586.0
davidsiegel,"[quicktype](https://app.quicktype.io?l=ruby) infers types from JSON data, then outputs models in Ruby, Swift, Objective-C, and many other languages for reading that data. You can also input JSON Schema, or GraphQL queries using our CLI.

We just added Ruby support today, and we're looking for feedback on the generated code, or what we could improve.

**I'm aware that this generated code looks a bit alien**, but please understand what the goal of the code is. `JSON.parse` is a lovely way to quickly load a hash from JSON, but quicktype's goal is to make your models much more systematic, automatic, and guaranteed to be the types you expect. That said, I would love any tips on how to make this code less overwhelming as long as it still meets those goals.

Thank you for taking a look!",1520824468.0
realntl,"Why the use of the term ""dynamic"" instead of ""primitive"" or ""raw""?",1520908308.0
dogweather,"I've solved this problem by generating my JSON with Haskell, which locks down the types. But this could serve the same purpose.",1521111538.0
clbustos,"I'm very fond of [Sequel](https://github.com/jeremyevans/sequel). The documentation is very complete and once you learned the API, is very easy to use.

If you want to look at DSL, [Sinatra](http://sinatrarb.com/) is a very good example. You could start almost immediately, but there is a lot of deep hidden below the surface, that allows powerful manipulations of routes and features of your app.",1520808722.0
hehestreamskarma,"[Stripe](https://github.com/stripe/stripe-ruby) is pretty great, as I would expect it to be because they're mostly a Ruby shop.",1520810689.0
zverok_kha,"I really like builder/middleware pattern that Rack and Faraday are embracing (and therefore prefer Faraday to more ""fancy and modern"" HTTP clients, which do optimize only some of the flows).",1520851163.0
Haegin,Minitest is very clean and worth reading through as a good example of a DSL that doesn't do anything crazy.,1520822295.0
ulfurinn,"And while you're adding the warning, maybe add some brief instructions for regenerating as well.",1520800141.0
jrochkind,I can't think of any downsides. ,1520795575.0
gray_-_wolf,It's definitelly good idea to have that comment in by default. ,1520794195.0
this_is_not_nil,"I see ""GENERATED FILE - DO NOT EDIT"" quite a lot, so that seems to be a sane default.",1520792345.0
BurdetteLamar,"Also considering two other runtime options:

* timestamp:  include a comment containing the generation-timestamp.
* ingredients:  include comment (at each include point) containing the path to the included file and its mtime).

I think these should default to false.
",1520805698.0
BurdetteLamar,All is proceeding as jawdirk has foreseen.,1520879799.0
BurdetteLamar,"Thanks, all.

Incorporating the thinking in this thread, I now have in the README for the [new version](https://rubygems.org/gems/markdown_helper) (and of course the corresponding code):

By default, the output markdown has added comments that show:

* The path to the template file.
* The path to each included file.
* The image description (original) for each resolved image file path.

You can suppress those comments using the ```pristine``` option.
",1521062483.0
otakugrey,Good job.,1520759440.0
jrochkind,"you can generally treat Mac distribution much like Linux if you like. MacOS is a unix with a command line, and generally whatever you can do on linux you can do on MacOS for these sorts of things. Windows of course is another story. 

If you want to provide a package for MacOS, look at [homebrew](https://brew.sh/) (analagous to apt etc).  MacOS runs Vagrant fine. ",1520785035.0
seven_seacat,Is there a demo?,1520778302.0
schneems,"I made this thing https://www.codetriage.com. A bunch of other stuff too, but that‚Äôs the most successful thing so far.",1520740971.0
mid,"[awesome_print](https://rubygems.org/gems/awesome_print/versions/1.8.0) gem many of you are using, among other things ;-)",1520754258.0
rArithmetics,"i am a fantasy football player, but NFL.com fantasy doesnt have a public api. So i built a scraper that grabs results from my league and simulates league matchups to give winning %s predictions each week. My league likes them, adds to the shit talk and good way to practice scripting!",1520735543.0
scratch_pad,"I‚Äôm pretty new to ruby and all I‚Äôve created so far (aside from really simple programs) is a CLI budgeting program, and I‚Äôve been reworking and improving it as I learn more. ",1520734670.0
BoWild,"Does developing an HTTP/Websocket server count?

I did it in Ruby first, but than I moved the codebase to C, added pub/sub services and general fun)... (the [iodine](https://github.com/boazsegev/iodine) gem)

If it doesn't count (because of the C code), than I also wrote CombinePDF, that allowed my to combine and numerate PDF data.

üôÉ",1520743053.0
tommykk,"I couldn't stand drupal anymore after some 10 years, so part of my goal in learning RoR was to replace it with a custom cms.... launched back near the middle of Oct. (https://sexinfo101.com NSFW obviously) 
",1520741008.0
ArturT,"A few years ago I had a problem with long-running test suite in customer project so I develop knapsack gem to split RSpec tests across parallel CI servers: https://github.com/ArturT/knapsack

Based on that I created the more advanced solution that allows allocating in a dynamic way the RSpec tests across CI nodes. You can see 1-minute video example here https://knapsackpro.com

With time I gather feedback from users and I added support for Minitest, Test::Unit, Cucumber, Spinach and Turnip.

Developing your own gem is a nice experience to learn new stuff because people have different needs than you and this gives you the opportunity to build something valuable to others and learn about new tech things.",1520752611.0
BurdetteLamar,"Several large applications, having to do with test automation.

Recently, my first gem, [markdown_helper](https://rubygems.org/gems/markdown_helper).",1520771480.0
midnightbrett,"The carnegie museum of art contracted my company to design and build a photo-archiving and sharing website based around the history of Pittsburgh. It's [www.nowseethis.org](https://www.nowseethis.org)

Basically because older people generally don't know how to digitize their photos, and the photos have a limited lifetime, they set up a huge drive to get people to come in and they'd help them scan and label them all. A lot of it is publicly available through the site. There are also other sub-projects related to photography, but the [history of pittsburgh](http://www.nowseethis.org/peopleshistory) is awesome.

If you click on ""See the full collection"" you get a timeline view where you can search by decade, and user profile pages have links to all the photos they personally have uploaded.",1520786015.0
theviking999,"I've created a couple of cool things with Ruby over the years. In terms of personal projects I have build a beer brewing calculator called [Brewalizer](http://brewalizer.com/), a couple of helpful scripts and blog posts for using machine learning in Ruby published on [practicalai.io](https://www.practicalai.io/) (one of the best ones is [how to teach an AI to play a game in ruby](https://www.practicalai.io/teaching-ai-play-simple-game-using-q-learning/)). 
And my latest project is a price tracking tool for Crypto hardware called [cryptominingdeals.io](https://www.cryptominingdeals.io). ",1520794601.0
stanislavb,"https://www.libhunt.com, https://ruby.libhunt.com ;)",1520801440.0
derrickcope,I'm in awe of some of these. I am working on a podcast downloaded with yaml config file to use on my vps.,1520742174.0
gray_-_wolf,chrome extension to help me study japanese :) https://chrome.google.com/webstore/detail/%E6%BC%A2%E5%AD%97-stroke-order/pmpkhkglmlbfbpiampmnpkoeoinjefjg?hl=en-US ; it's kinda small but none other here mentioned browser extensions :),1520781143.0
FrontierPsycho,"Me and some friends decided once to make a Diplomacy website in Rails. I was tasked with writing [the adjudicator](https://github.com/ruby-diplomacy/ruby-adjudicator). I never properly finished it, because I got sucked into another project that already had one in go. 

But it was always my favourite side project. I was so elated when I got a feature request once, I resurrected the project and added the feature in a few days. ",1520790594.0
pawurb,"My two small side projects apart from a full time job:

https://abot.apki.io/
https://wishlist.apki.io/
",1520803360.0
clbustos,Shameless self-promotion: a [web-based software to manage systematic reviews](https://www.github.com/clbustos/buhos),1520810555.0
strzibny,"Some example gems:

https://github.com/strzibny/invoice_printer
https://github.com/fedora-ruby/gem-compare

Example web app:

https://www.gettandem.com/

Bonus:

I didn't create this one but I think it's interesting. The company I work for has developed a Windows scanning client (supporting WIA). It runs  in the background, communicate with scanners and expose an API fro the main app.",1520886031.0
coderhulk,I have developed a web based tool using Rails primarily for Emergency Response Agencies called www.memberhub.com.au pretty much all of my users are volunteer based.,1520888295.0
TheMasterCado,"A peer-peer local network chatroom. I'm trying to implement user accounts with a distributed database.

Anyway, just playing around",1520736964.0
isolatrum,"You're overlooking one benefit of 'extracted methods', and that's the ability to easily stub them. Take for example the code `ClientSerializer.new`. Should it be in a method or not?

You're right that if you don't move it to a method, then the code is easier to follow because the eyes don't have to jump around.

But other the other hand, what if `ClientSerializer.new` _did_ make some expensive database or API call? If you were writing unit tests, you would want to stub it out. If you move it to a method, you can simply stub the method. Otherwise you would have to stub `.new` on ClientSerializer. It seems like a really small difference, but splitting code into methods does help you test each of those segments of code in isolation.",1520721112.0
kidtaicho,"I guess I don't have that much aversion to local variables because this seems like something I would've done anyway.

For me pulling code out into methods makes sense when you're repeating the logic within the class or outside or if your initial method is getting too long and by extracting a logical code chunk you can get two smaller methods with their own tasks.

Otherwise, good to get this out there if you're seeing it a lot.",1520733139.0
siggymcfried,"For me, the greatest benefit of extracting the method is that I don't need to keep all the details in my head as I read. With

    def show
      render json: client_serializer.serialize(params[:fields])
    end

, all I need to understand is that there is a client serializer that serializes with some fields. That's it. The `show` method uses a serializer to serialize some fields. That's pretty understandable. If I need to investigate the details of the serializer, I can go ahead and understand those in isolation.

With everything left as local variables, I must understand a client and how to manipulate the params to get one, a serializer and that it takes a client, and finally that the serializer serializes with some fields. I must understand everything and how everything interacts to understand what show does.

I will say that I think you do a good job pointing out the cost of these abstractions - when you want to know the details, they become harder. However, I find that often I don't need to understand the full details to move on. I don't generally read code by jumping around the methods as in the picture with arrows.",1520758643.0
BeerNirvana,"I work with a large team and would say many small methods are easier to maintain when changes come along. Encapsulate the logic for what makes a client valid from the start so when client.present? is no longer sufficient, you already have it extracted and extendable. Memorization costs nothing over direct variable assignment and there is no reason to avoid it. I would extract this into many more methods personally, not fewer. For example params[:fields] may some day need a default. Having it extracted today makes reviews and merges easy later. Again, this is from the point of view of having many people maintain the code over many years.

    class ClientsController < ApplicationController
      def show
        raise ActiveRecord::RecordNotFound unless valid_client?
        
        render json: serialized_client
      end
    
      private
    
      def client
        @client ||= Client.find_by(id: client_id)
      end
    
      def client_id
        params[:id]
      end
    
      def client_serializer
        @client_serializer ||= ClientSerializer.new(client)
      end
    
      def fields
        params[:fields]
      end
    
      def serialized_client
        client_serializer.serialize(fields)
      end
    
      def valid_client?
        client_id.present? && client.present?
      end
    end
",1520781448.0
tickypupu,"Disagree with this. The version with locals looks cluttered, and it contains information you don't need to know immediately. I don't care  how `client_serializer` is created, nor do i care how `client` is created -- they're self-evident by their names. Moving these definitions into methods makes the action code a lot clearer - and it sticks to the point with no boiler plate getting in the way. 

And if i ever want to know what these two things are, then i just have to look down a bit further in the controller, no big deal.",1520792069.0
turboladen,"I always thought [h2o](https://h2o.examp1e.net) was really interesting. Via mruby, you can do Ruby things to requests and responses.",1520672081.0
zfundamental,MRuby embeds more easily than other ruby variants. Using this feature I ended up building the [MRuby-Zest](https://github.com/mruby-zest) GUI toolkit/framework/etc. This was used to create a new GUI for [ZynAddSubFX](http://zynaddsubfx.sf.net) which looks like [this](http://zynaddsubfx.sourceforge.net/images/zyn-fusion-add.png),1520738324.0
schneems,"Mruby is for embedded development.you would need to be writing code in C and then need scripting, when you do you can use mruby.

It‚Äôs a competitor to Lua.

",1520696543.0
jrochkind,"Hey y'all. I'm glad Ruby Together exists. I think it's a good idea. 

I think many would like a further breakdown of these expenses:

> $2,174.03 on company overhead like hosting, services, software, hardware, taxes, etc

> $1,050 on accounting, copywriting, design, and other professional services

At ~20% of total expenses reported, they are not insignificant, and it's not clear what they are for exactly. It would be more transparent if you broke down who you were paying for what results for this. ",1520641898.0
derrickcope,What is Ruby Together? I couldn't find Ind an explanation on the website? Maf be I missed it.,1520832781.0
nynhex,Thanks for your work on this :),1520725400.0
Enumerable_any,"> Values should be equal if, and only if, all of their structural elements are equal

What about `Quantity.new(1000, 'm') == Quantity.new(1, 'km')`?",1520632911.0
zverok_kha,"I've gathered everything that I needed to constantly remind myself again and again when implementing value objects, especially in public gems.

Hopefully, other can also find this useful, and turn it into some kind of another ""community-driven style guide"".",1520624366.0
realntl,"I wouldn't recommend adding to_json.

JSON.generate(value.to_h) is a better way to serialize, as there are options you can pass to control formatting. Yes, those pass through to the instance method, but it's weird and kludgy.

Most of it looks pretty good, actually.",1520633601.0
OstapBenderBey,"My solution to Values (ymmv) for personal projects is to define a class method Value\[] (\*args) that checks a hash for a preexisting Value object with these args and retrurns that if it exists or does Value.new(\*args) if not.

So instead of Value.new(4)==Value.new (4) (=>false) i just do Value[4]==Value\[4] (=>true)

Of course this means you should avoid using Value.new , avalue.dup etc. And it wont garbage collect as the objs will stay in the classes hash, etc

Sadly its not what ruby is built for. A C or Rust extension might be better. 

Hiding it in a module rather than a full exposed class may be another option for some needs i.e. (Value.getfor(4)==Value.getfor(4))",1520647389.0
Enumerable_any,"> <=> should NOT raise on attempt to compare with incompatible type, just return nil


> == should NOT raise on attempt to compare with incompatible type

I disagree with these two. A type mismatch is almost always a bug and the earlier my program fails the better.",1520633195.0
Enumerable_any,"> If it is a slightest possibility the value type could be used as a key in hashes, implement #hash, returning unique number for each unique combination of structural elements.

This should probably be rephrased since `a != b ==> hash(a) != hash(b)` isn't a requirement for the `hash` function. It's also not possible since `hash` needs to fit into an `Integer` ([Object#hash](http://ruby-doc.org/core-2.4.1/Object.html#method-i-hash)).",1520633677.0
jdickey,"> Your types should be ready to be inherited, ‚Ä¶

Value objects (and entities, which are importantly not the same thing) are down-on-their-knees-screaming poster children for the good OO design dictum

> Prefer composition over inheritance.

Every entity that I've coded in the last year where I'd have been tempted to use inheritance has, with a bit of thought, given way to a composition-based approach that was more explicitly intention-revealing. Inheritance is the tightest form of coupling in software.",1520655677.0
jpx92681,"Please copy all and paste it in a notepad, it got messed up when i paste it.",1520624196.0
systemnate,What have you tried?,1520624883.0
bwv549,"I like this solution.  (If you don't mind me pulling from python land) I have this same issue in Django rest framework, where I have to define new classes for any change between the index versus detail view, and I find it cumbersome.  This abstraction would be better for many cases.",1520644011.0
realntl,Why does everyone ask library authors to compare their libraries to others? Why not just study the library yourself and draw your own conclusion?,1520694314.0
23tux,"How does blueprint compare to grape as and grape-entities? What are the advantages / use cases that you can do with blueprint but not with grape?

Background: we introduced grape about half a year ago for a single endpoint and are planning to develop more JSON endpoints in the near future. So maybe blueprint is worth a try.",1520663922.0
sickcodebruh420,Are there any benchmarks to demonstrate how this performs when comparing identical output of other libraries?,1520707005.0
markrebec,"Having recently dealt with this in multiple projects, both professional and personal, what advantages does this have over graphql? The `graphql-ruby` gem is easy to integrate, and on the front end `apollo-client` is virtually as easy to use as `axios`.",1520680175.0
choonggg,"No
",1520612836.0
Shaper_pmp,"This makes me wonder *why* Ruby is so poorly-supported by FaaS providers that it needs a petition to make it happen.

Is it just that it's not in the top tier of popularity for programming languages (so they aren't prioritising it), or is it somthing about the language/interpreter(s) itself that makes it hard to integrate into a FaaS system that could be fixed with a focused effort by the community?",1520602672.0
DudeManFoo,"BTW.... I wish EVERYONE would click the ""Sign"" button at the top of this... I have been wanting this for 10 years...",1520885426.0
micketic,Speak with your wallets!,1520596673.0
kobaltzz,"I think that native support is always ideal. However, you could mention to /u/FooBarWidget that this would be a use case for [Traveling Ruby](https://github.com/phusion/traveling-ruby) to be maintained. There are [proof of concepts](http://www.adomokos.com/2016/06/using-ruby-with-activerecord-in-aws.html) of using Traveling Ruby and AWS Lambda.",1520601420.0
SizzlinSteak,Yes please! My body is ready.,1520669151.0
equivalent8,"I've had a talk on the topic (2018-03-12 @ LRUG) if anyone is interested:

https://skillsmatter.com/skillscasts/11594-lrug-march

discussion:

https://www.reddit.com/r/ruby/comments/84mgi3/web_architecture_choices_monolith_microservices/",1521120990.0
ahmad_musaffa,Thanks for the initiative. I've signed in the campaign.,1520597316.0
jrochkind,"AWS Lambda does support ruby, no?  I haven't used it myself. 

https://aws.amazon.com/blogs/compute/scripting-languages-for-aws-lambda-running-php-ruby-and-go/",1520607353.0
jujubean67,"Just learn another language, jesus.",1520600164.0
geraldbauer,"Hello, 

yesterday's Vienna.rb talk notes titled [Build (Online) Books and Documentation w/ Octobook Themes and the Jekyll (Static) Website Compiler](https://github.com/geraldb/talks/blob/master/octobook.md). Real-world examples built with the (auto-)magic GitHub Pages build-pipeline incl.:

- [The Strange Case of Dr Jekyll and Mr Hyde](http://worldclassics.github.io/dr-jekyll-and-mr-hyde) @ World Classics Case Study 
- Project Documentation Case Study - [Slideshow (S9)](http://slideshow-s9.github.io/), [Pluto (Planet) News (Feed) Reader](http://feedreader.github.io/)
- Ruby Books @ [Yuki & Moto Press Bookshelf](http://yukimotopress.github.io). 

Happy publishing w/ ruby and jekyll and friends. ",1520591407.0
cmol,"IPv6? I'm not sure if heroku supports it, but those tools are useless to me without v6 support :)",1520588972.0
Never_Again_2017,"Reverse DNS lookup - convert the IP address into its domain name, if set. I just wrote this exact service in phoenix.",1520644045.0
raj4057kumar,"Great, I will go through it and  ask you if required :)",1520614452.0
zverok_kha,TIL `bundler/inline` 0_0,1520536202.0
GDP10,This is also possible via [Opal.](http://opalrb.com/),1520615875.0
iconoclaus,"Ignore TIOBE.  Its a nonsensical ranking system and large changes are expected for little rhyme or reason.  If you insist on following popularity contests, then perhaps look at [RedMonk Programming Language Rankings](http://redmonk.com/sogrady/2018/03/07/language-rankings-1-18/).  They at least have some stability, though their choice of metrics also raises questions for languages that don't emphasize open-source.",1520551137.0
rowendy,I saw it at the 12th position. ,1520529228.0
jrochkind,"curious, i read this, and I'm not sure this index means much... https://www.tiobe.com/tiobe-index/programming-languages-definition/",1520559868.0
codeprimate,"The last suggestion to use ENV calls throughout the application is very bad advice. These calls are vulnerable to breaking due to missing envvars. Instead, use an initializer to define constants and use ENV.fetch(key, default_value) instead of array access.",1520545665.0
ArcaneRain,"The article is very basic, moreover there are existing solutions like https://github.com/bkeepers/dotenv - where you don't need any custom code to be added.

PS: usually you don't want to have this file gitignored, because:

1. programmers will have no idea that they should create a file(unless it's in a README) and if they won't do this running the app will raise a ""No such file"" exception

2. programmers will have no idea what to put in the file after creation

Instead you'd want to leave the file checked in the repo with keys only(and possible values for non-sensitive data)",1520530177.0
Arjes,"Since ""Frameworks other than Rails"" is a header, I assume you are looking mostly to a Rails userbase, however my comment can just as easily apply to non-rails ruby projects.

Rails already parses yml files as ERB first. To be 12-factor compliant i simply use this feature and do:

    development:
      foo:
        bar: <%= ENV['OMG'] || 'default becasue i am lazy' %>

And then in the application config:

    config.foo_config = config_for(:foo)

This appears to do everything you need, without creating a constraint that ENV vars have a name formatted like the YML loading them. 

To all you non-rails users out there, here is how rails implemented config_for:

    def config_for(name)
      yaml = Pathname.new(""#{paths[""config""].existent.first}/#{name}.yml"")

      if yaml.exist?
        require ""erb""
        (YAML.load(ERB.new(yaml.read).result) || {})[Rails.env] || {}
      else
        raise ""Could not load configuration. No such file - #{yaml}""
      end
    rescue Psych::SyntaxError => e
      raise ""YAML syntax error occurred while parsing #{yaml}. ""          ""Please note that YAML must be consistently indented using spaces. Tabs are not allowed. ""          ""Error: #{e.message}""
    end
",1520521716.0
jrochkind,why?,1520519665.0
jdickey,"For anyone considering this, I'd recommend taking a look at [Chamber](https://github.com/thekompanee/chamber), which we've been using and evangelising for at least two years now.

The *reason* you want environment variables is so that you can selectively override one default without affecting others. This becomes absolutely critical during troubleshooting.

As to the argument that ""Passing more env vars also becomes more impractical"", that's been a solved problem for some time now, not just with Chamber but also with, e.g., [`dotenv`](https://github.com/bkeepers/dotenv).",1520656396.0
olivierlacan,"/u/mehdifarsi Nice post. Although your title makes it sound like you're advocating against the use of interpolation in heredocs when I think you're only showing ""How to avoid interpolation in heredocs"".

Subtle difference, but I thought you were going to make a case about performance issues with interpolation inside heredocs. :-)",1520512409.0
yoopergeek,"I've had a number of scripts that accept prompted input, and have recently discovered the [highline gem](https://github.com/JEG2/highline). If you're looking to explore more CLI user input, I'd recommend giving it a try, it really DRYs the ""get & sanitize cli input"" portions up. Plus I've appreciated it's simple colorization string extensions and some of its helpful little features like how easy it is to have the script accept a password, and output ""*"" for each character entered instead of echoing the characters to the screen.

Maybe explore command line argument processing too if you'd like to have encouragement without as much interaction? So you could run your script like: 

``` 
ruby myscript.rb --anxious
```

I've used Ruby's [OptionParse](https://docs.ruby-lang.org/en/2.1.0/OptionParser.html) found in the standard library for ARGV processing.",1520515238.0
IthinkIthink,"Rather than coming up with your own words of encouragement, you could try taking the keywords provided via input and sending them as a search query to this Quotes API: https://quotes.rest. Then, as a next step, you could throw in a sentiment analysis API to help ensure the quote being returned is what you‚Äôre going for.",1520525204.0
toastystarfish,"I have a few improvements for you to consider, do with them what you will.  I would like to point out this is all in good spirits :)

not really sure what the point of the welcome prompt is, since the name is not used beyond the first message, but that aside, the welcome method is defined and called without reuse. You could probably just inline the contents of that method.

in feels you have a series of elsifs that are based on a single variable, I would recommend a case statement here rather than an if block.

as /u/this_is_not_nil mentioned the indentation should be consistent

for the final loop check out ruby's until.  using until you can set the break condition and print the farewell message after the loop.

the feelings array does not serve a purpose as of yet, while you push new values to it they are lost once the script completes. To record this information you are going to want to write it to a more permanent data store: file, database, etc.",1520507894.0
this_is_not_nil,Your indentation looks strange and inconsistent.,1520505431.0
EightRacks,"Try to be more consistent with variable names. ex: yn = an input.
Stick to just input, for readability.

 in your `feels` def, your variable should be `feeling` since you are prompting an input for the feeling of the user.

For your conditional on line 7, instead of checking for invalid input, check for *valid* input, and then utilize the else block as a catch all.

The final conditional is strange, too.",1520519620.0
habituallyridiculous,Really thankful for the feedback. One of the hardest things about getting into Ruby (and programming in general) is not having a safe space to ask dumb questions and get feedback so thank you all for responding!,1520560311.0
GDP10,"Hmm, it is certainly a possibly useful feature.

But I am glad that they turn this feature on only when the output is a TTY. I'm very grateful that the Ruby developers are always mindful of backwards compatibility. Some people criticize them for it and think it holds Ruby back, but I think it does the opposite. It shows respect for users and it makes life a little more sane for some people.",1520490071.0
dogweather,Yep - loving it.,1520488495.0
keymone,"similar to python. like it or not, at least there's consistency now.",1520500951.0
arjan-1989,Or combine them on devdocs.io,1520495990.0
lucisferre,I can‚Äôt say I‚Äôve ever overlooked any of these.,1520492618.0
zverok_kha,"I said ""yes"" for a long time and even recommended the book to novice mentees... But currently, I tend to say ""no"".

The thing is, Pickaxe is (was) in fact ""The Ruby Book"", language guide and reference, mostly useful for those knowing absolutely nothing, as a gentle and comprehensive introduction to Ruby. 

Now, being as outdated as it is, it can no more be treated as one. Relatively ""small"" changes were made to Ruby since 2.0, but those changes are everywhere, and they seriously reshaped the language, preferred style, common patterns, and solution. So, one being introduced to language through Pickaxe will immediately be in possession of outdated knowledge.

It is a big problem, in fact, that there is no open, online, relevant, community-supported language guide. There is no ""The Ruby Book"" and no place where curious novice or language switcher can just feed their curiosity and learn how awesome the language is.",1520506281.0
blpittman,It's still the most complete resource for the basics of Ruby‚Äîas far as I know. Metaprogramming Ruby is also a great rundown on slightly more advanced topics.,1520481961.0
systemnate,"Service objects are POROs (therefore I don't think there is such a thing as a ""service object pattern"").  You can use them to write good OO code or bad OO code.",1520459401.0
realntl,"I'm often critical of the service object fad, but come on now. The title of this article brazenly declares them to be an antipattern and then defends its position from the standpoint of the author's personal preferences.

In Rails, you're usually not doing OO, you're doing a mix of declarative and procedural programming that's optimized for rapid application development. Nothing wrong with that in the context where it belongs. Trying to augment it with POROs/service objects to make your code more ""object oriented"" always goes south IME (and it's probably what went wrong with your client's code that you took over).

By extension, trying to determine what practices are helpful patterns or anti patterns within a Rails project is a fool's errand, in my experience. Doing OOP within a Rails app is like trying to get sober at a bar. Models have every behavior under the sun, and most of the other APIs are designed to couple to models. Oh, and you can't initialize controllers. Your best experience with Rails will be the one where you let it do it's thing out-of-the-box, and you go write your core logic elsewhere (lib, for instance, or in separate components packaged as gems).

Okay, that veered off topic. Sorry about that. Cheers!",1520467871.0
rabidferret,"""Service object"" is such a meaningless term in Ruby. It literally adds no meaning over just ""object""",1520468321.0
midasgoldentouch,"I mean, the author says it in the article: the original object was poorly designed. They try to make a concession as if this is a trivial thing that has limited relevance to their point, but it's actually a big issue.

Plus, like others said, service objects are PORO objects - this is more about the command vs service object approach.",1520462542.0
Serializedrequests,"What do you think of the ""operation"" pattern, as exemplified by Trailblazer?

I am really struggling to get control over a complex Rails app and made the exact same kinds of service objects in your article: shitty functions that are no more understandable than the AR code was. The main benefit was getting things out of callbacks, which were becoming progressively less reliable.

My best ones represented some kind of meta concept, like TaskAssignment (the only one of my own I can ever remember how to use).",1520538270.0
geraldbauer,"Hello,

I've put together kitty - a new command line tool for CryptoKitties and Copycats - free and open source in ruby that works offline (use datafiles in .csv).  

1. Kitty Genes Reader / Report - Pass in the id (e.g. 1, 43, etc.) of the kitty to print a genome / genes report. Example:`$ kitty 1`. 
2. Kitty Mix Genes (Matron + Sire) Report - Pass in two ids for the matron and sire kitties to print a mix genes report. Example: `$ kitty 2 43`.  

Enyoy. Cheers. Prost.",1520451838.0
chrsfrnk,"I've been loving working in Roda and Hanami this year. One of the few things I've missed from Rails is the convenience of [HasScope](https://github.com/plataformatec/has_scope) for filtering data.

I wrote Rack::Reducer to solve that problem for myself, and I hope it's useful to the broader Rack community. It's designed to work in any Rack app, with any ORM.",1520451916.0
sshaw_,"I would nix/not encourage the ActiveRecord example. Using Rack (Rack::Request) from within ActiveRecord is overstepping an important boundary. 

 ",1520474040.0
gettalong,"Even if that benchmark may not reflect real-world performance, the take-away is that the **trunk version has been made 2x faster than Ruby 2.6.0-preview1** (at least for this kind of benchmark).

Looking through the [commits of k0kubun](https://github.com/ruby/ruby/commits?author=k0kubun) is also very interesting, with most of them having benchmark stats in the commit message.",1520452455.0
mperham,"*6x faster for a while loop.  This is a microbenchmark, not real code.  Don't get too excited.",1520465815.0
this_is_not_nil,"I wasn't aware of this magic, but it is amazing.

    x.rbenv(
      '2.0.0::2.0.0-p0',
      '2.5.0',
      '2.6.0-preview1',
      '2.6.0-preview1+JIT::2.6.0-preview1,--jit',
      'trunk::after',
      'trunk+JIT::after,--jit',
    )",1520445142.0
ylluminate,Would be nice to see the rest of your details for this test for quick reproduction.,1520438351.0
jodosha,Does anyone know if JIT works fine with code that heavily uses meta-programming?,1520454400.0
disclosure5,"I wish I could replicate this. Running the Argon2 test suite with Ruby 2.6-preview1 takes me 45 seconds, where as if I set RUBYOPT=""--jit"" it takes around 240.",1520456409.0
geraldbauer,FYI: I collect [ruby 3x3 articles & posts](https://planetruby.github.io/calendar/ruby3x3) at Planet Ruby. Cheers. Prost.,1520449068.0
moomaka,I‚Äôm surprised code like that is still so slow. If you wrote the same function in C and fed it to gcc with optimization enabled it would replace the entire loop with a constant. I assume the underlying code being jitted has some barriers preventing this optimization. Does mri insert context switch checks in while loops?,1520443677.0
this_is_not_nil,"> By default, Redis is a volatile store (all data is lost if the store restarts)

From the default redis-config, https://raw.githubusercontent.com/antirez/redis/4.0/redis.conf:

> \# **By default Redis asynchronously dumps the dataset on disk.** This mode is

> \# good enough in many applications, but an issue with the Redis process or

> \# a power outage may result into a few minutes of writes lost (depending on

> \# the configured save points).

And from https://redis.io/topics/persistence:

> Snapshotting

> **By default Redis saves snapshots of the dataset on disk**, in a binary file called dump.rdb. You can configure Redis to have it save the dataset every N seconds if there are at least M changes in the dataset, or you can manually call the SAVE or BGSAVE commands.

> For example, this configuration will make Redis automatically dump the dataset to disk every 60 seconds if at least 1000 keys changed:

Can you please clarify, or maybe I have misunderstood the documentation?",1520434594.0
mperham,"Your post comes off as a little bit fundamentalist: it argues that Rabbit is better than Sidekiq.  Black/white.

This might be true for you and your current project.  But I would remind you: rabbit has a place, sidekiq has a place.  You choose a tool based on **context**: what do I need it to do, what features do I need, what budget do I have, what skills does my team have? Are they familiar with Rabbit?  Do they want to run it in production?  If you are running a team of 10 developers, that's over $1million/yr in salary alone.  Are you going to cheap out and give them no budget for tooling?  $2000/yr is peanuts.  Those are my customers; not individual hobbyists.

You may not like the price of Sidekiq Pro but it's precisely that price which has kept me optimizing and improving Sidekiq for the last 6 years.

As to job loss, Sidekiq does its best to shut down cleanly and push jobs back to Redis before terminating.  It most definitely does not just die and lose jobs on every deploy by default.",1520465199.0
this_is_not_nil,"> The most common cases for job disappearance are deploys (since the application is killed at that point)

I think it is fair to mention that Sidekiq have done some changes in regard to this lately, the default way is a timeout before the workers are killed. And now there is also the enterprise version that supports rolling restarts: https://github.com/mperham/sidekiq/wiki/Ent-Rolling-Restarts",1520435598.0
realntl,"At the risk of being a bit of a spoil-sport, shouldn't this be obvious? Background jobs are a relatively new invention designed to offer frontend-only architectures (i.e. self contained web apps) the capability of executing code outside of request/response cycles.

That said, I wouldn't use Rabbit. Stream-based message transports are a lot lighter weight.",1520439013.0
this_is_not_nil,"> While I disagree with hiding essential features (like guaranteed execution) behind a paywall

I totally agree with this.

> a Pro license offers support and additional business oriented features which you won‚Äôt get with a self-hosted RabbitMQ instance.

It would be nice if you listed which features we wouldn't get by replacing our Sidekiq Enterprise license with RabbitMQ.

Do you know if there is an RabbitMQ wrapper that talks with ActiveJob?",1520435316.0
rdejuana,"I have used both, but consider my self more versed in sidekiq and a rabbit novice.  

That being said, the Sidekiq UI is way more intuitive. I run an app that runs a few long running jobs, and being able to see what running and what in the queue is a great debugger.  

I tried to find similar info in my app that runs Rabbit and could not find it.  It might be there and I will state that i am a rabbit novice, but the sidekiq ui is straight forward and easy to use.",1520464780.0
_srt_,"Been a long time seeing your post, Ryan. Great write-up. I do feel that AR gets complicated in order to handle business logic when application evolves and gets more complex.",1520430096.0
joshmn,"Some of these criticisms (at least, comparing to Rails) aren't exactly telling the full story:

> The Active Record pattern encourages you to throw everything into the model. Think: callbacks, validations, persistence, database logic (queries) and business logic.

Very few developers I know put business logic in models. The ActiveRecord pattern (it is a design pattern, after all) doesn't reference or lend ideas to this at all. 

I think it's otherwise fine to put your validations as close to your persistence layer as possible. I'm yet to see a better solution (obviously besides doing it within your database, which we should all be doing already.) Why would I want to copy-pasta (or otherwise include) a bunch of validations for user-provided data? Maybe on a service layer that's separate from my model layer, yeah, sure.

> A Rails controller is typically made messier by the addition of ""helper"" methods like this. It's not uncommon to have Rails controllers of multiple hundreds of lines, due to the complexity of the actions and these helper methods. Separating out each action into its own class indeed makes them easier to work with.

Sure, you can do it that way. Or you can chunk everything up, just like Hanami, and use `require_dependency` to include it.


> Actions in Hanami also use parameter validation (with the help of dry-validation, I think). This means that each action can uniquely validate the parameters. Rather than having create_project_params and update_project_params defined within a controller -- as you might do in Rails -- you can define what constitutes valid parameters right there in the action class.

It would be otherwise trivial to make the aforementioned design of using `require_dependency` to also add such functionality.

> In a Rails application, you define a helper in a module named after the controller.

Nothing's stopping you from making a PORO or similar. Regardless, the helper is globally available to your views if it's in a helper file. The convention is just to help organize.

--

Maybe OP is trying to say that they're uncomfortable doing things the ""Rails way"". And that's fine, the ""Rails way"" isn't a great way after all. If you're clobbering everything into app/models and app/controllers you're going to have a really bad time. 

The most successful Rails projects don't do things the Rails way because they're often not built by ""Rails developers"" but instead Ruby developers who just happen to spend time within Rails' conventions, libraries, and frameworks. 

I purposefully have quoted ""Rails developers"" because I've seen so many people who write Ruby that are only comfortable within Rails. I hate to generalize, but they're otherwise clueless when it comes to spinning up a Rack app unless they're hitting `rails s`.

",1520468237.0
,[deleted],1520498755.0
zitrusgrape,"also hanami is quite slow 
https://www.techempower.com/benchmarks/#section=data-r15&hw=ph&test=query&l=hr9xbz&c=6",1520449158.0
jrochkind,"don't post this as a text self-post, post it as a link. ",1520469227.0
effata,"We use JRuby for a lot of things, most notably our real time analytics pipeline. Main reason is proper threading and a good GC.",1520429631.0
chrisgseaton,"JRuby, Rubinius and TruffleRuby at all parallel implementations of Ruby, which is something that some people appreciate.",1520423880.0
Gnascher,"Jruby is very commonly used in places where code performance is a bottleneck.  Keep in mind, most web apps are not processor bound.

There's usually a lot of low fruit to optimize in a an app before thinking you need the baggage of a non-MRI Ruby.",1520430099.0
zfundamental,"I've used MRuby to build a graphical user interface for [a musical synthesizer](http://zynaddsubfx.sf.net). MRuby is much easier to embed than other versions, so that's why MRuby was used over other implementations.",1520432829.0
jrochkind,"I've used JRuby in production, but not for a web app. I think I would be comfortable doing in a web app if I needed to, although JRuby has had inconsistent compatibility with Rails over the years. 

I use JRuby when I need true parallelism, or to integrate with Java libraries. ",1520452595.0
thibaut_barrere,"I'm using JRuby extensively (and have been for years) for a very specific Sidekiq app: a Rails (MRI) apps receives XML feeds from third parties, which create Sidekiq jobs (JRuby) ; these jobs use a Java API and [Kiba ETL](http://www.kiba-etl.org) to connect to a large CRM (BMC Remedy AR System), create/update entries, generate PDF documents with Prawn etc.

JRuby has been working flawlessly for this project, the only minor problem was Capistrano support (sshkit does not officially support JRuby, at least a few months earlier), the fix is [here](https://github.com/jruby/jruby/issues/4191#issuecomment-283245523), but I ultimately just decided to use MRI when calling Capistrano (much faster, same output).",1520598529.0
pfg1,"Neat! For those using Devise, there's a plugin that makes use of Pwned Passwords as well: https://github.com/michaelbanfield/devise-pwned_password",1520421317.0
norydev,That's very cool! Kudos /u/philnash üéâüéâ,1520412443.0
jrochkind,"Don't totally understand in what circumstances one might want to use this instead of [ruby-prof](https://github.com/ruby-prof/ruby-prof). 

There might very well be some! As they didn't mention ruby-prof though, not totally sure if the OP was aware of it. ",1520373234.0
mastermindxs,Not enough data for a meaningful answer.,1520314540.0
Mallanaga,Abysmal. Use Python.,1520317158.0
luquoo,"[SciRuby](https://github.com/SciRuby/sciruby) is pretty good.  They have [NMatrix](https://github.com/SciRuby/nmatrix) for a numerical linear algebra library, [Daru](https://github.com/SciRuby/daru) which is like Pandas, and [StatSample](https://github.com/SciRuby/statsample) for statistics.  All of this works with Jupyter notebooks and comes with a few different visualization gems.  ",1520350858.0
AnimusNecandi,"You might find this link relevant: https://github.com/arbox/data-science-with-ruby

It's possible to find decent libraries for some problems, but you have look around, many projects are unmaintained or have little to no documentation. If they cover your needs, then good. But you might find yourself needing something that simply doesn't exist or would be much easier to do in Python.

I would rather not use Python, but...",1520340852.0
SerKnight,"If you script it, they will come.",1520317680.0
dan_alyst,"As many have mentioned ruby is lagging behind Python but there is a growing community and tool set. Daru and statsample are great examples.

I recently started a machine learning gem similar to scikit-learn as well:  https://github.com/dansbits/lurn

",1520894063.0
,[deleted],1520295693.0
peresztegi,"WOW, definitely increasing velocity!
Is it due to the new jit?",1520290512.0
hartator,"It's awesome. I love Ruby, and I feel you have opened a whole new world. ",1520281006.0
tintub,Good work!,1520295194.0
geraldbauer,Wow. Fantastic. Big fan of one-liners and ruby by example. Thanks for sharing. Will try to turn it into a [Yuki & Moto (Online) Book](http://yukimotopress.github.io/). Keep it up. Cheers. Prost.,1520259523.0
zverok_kha,"As with [your previous post](https://www.reddit.com/r/ruby/comments/818mdw/ruby_case_statement_behind_the_scene/), the title is misleading. It does NOT explain how regexps are _implemented_, it just tells about the _interface_. 

Also, it just retells official docs, which is not the optimal topic for the writing, to say the least.",1520247114.0
isolatrum,"> Removing spring is one of the first things I do when setting up a new Rails project

i wish i had the foresight, yesterday i was trying to add a gem and it wasn't loading, of course I just had to run `spring stop` which is whatever I try whennever wierd unsolvable bugs occur. You're right, I should just remove it.",1520360755.0
,[deleted],1520354395.0
internetinsomniac,"Out of curiosity, are you using ruby as a primary development language, or just a little scripting on the side relying on the built-in ruby install?

I ask this because ruby 2.3 was released just over 2 years ago, and while it is supported now, it won't be forever. Operating systems always wind up shipping much older than current versions - and necessarily so, but developers working primarily in ruby should really be installing a more recent version (say either the latest, release like 2.5, or the next most recent release 2.4 whenever possible. I'm referencing the official [ruby maintenance policy](https://bugs.ruby-lang.org/projects/ruby/wiki/GeneralMaintenancePolicy) and current state of [branch support](https://www.ruby-lang.org/en/downloads/branches/)",1520240167.0
nakilon,"I'll probably still try to write 2.0-compatible code unless I have to use methods that had breaking change.

How do you deal with breaking changes? I mean, there are dozens of programs and dependencies that I run every day on my machine -- I'm gonna review a lot of code now but how do I know if I missed something? Can I specify in Gemfile that the code is confirmed to work as intended under Ruby from v2.x to v2.y? And what about when I don't use bundler?",1520221605.0
menge101,"You shoudn't change the OS's ruby version.

Use rvm or rbenv and create an isolated dev env for the project you are working on.

Are you aware that ruby 2.5 is in beta now right?  2.3 is itself old.",1520265493.0
Jdonavan,You're using the system ruby then?  You might check out RVM/rbenv.,1520258024.0
hehestreamskarma,"I haven't read the book, but if it's like other Ruby books, it should age well.

Syntax-wise everything should be relatively the same. The examples should hold practicality fine too. I think the only thing that would be out of date would be what applications the examples are applied to.

But again, I haven't read the book. Just an observation after reading many Ruby books.",1520204717.0
bascule,This is terrifying. Things like this in the YAML gem lead to a RCE in Rails in 2013...,1520177866.0
olivierlacan,"So this only works with JSON.load which is generally not recommended for parsing external input because it doesn‚Äôt raise exceptions on invalid JSON, right?",1520191493.0
Kimos,"Not only is this extremely dangerous, but it changes the behaviour globally. So if a dependency requires one of the types then any JSON parse in the app is vulnerable to this injection.",1520186538.0
rowendy,That is interesting...,1520168787.0
jodosha,"From the documentation you linked:

> BEWARE: This method is meant to serialise data from trusted user input, like from your own database server or clients under your control, it could be dangerous to allow untrusted users to pass JSON sources into it.",1520328423.0
ulfurinn,"As long as it doesn't EVER need to be portable, I guess why not.",1520175222.0
palkan,"Depends on what you want to use mruby for: IoT, CLIs, embedding, whatever.

Nowadays almost all posts/talks about mruby in Japanese(

One advice: follow Matz on Twitter (https://twitter.com/yukihiro_matz), he regularly posts links to useful mruby resources.",1520168527.0
rurounijones,"Just to ask the obvious, possibly stupid question. Do you absolutely need mruby? It is not the obvious nor common choice so information is pretty thin.",1520235054.0
jodosha,"I wrote two articles a few years ago:

  * https://lucaguidi.com/2014/02/26/redis-scripting-with-mruby/
  * https://lucaguidi.com/2015/12/09/25000-requests-per-second-for-rack-json-api-with-mruby/",1520328769.0
manlymatt83,Watir!,1520174385.0
rowendy,Thank you,1520168934.0
Floppy76,"Unless you need dynamic content, Jekyll or Middleman every time.",1520196226.0
ioquatix,What are your requirements?,1520165783.0
rowendy,Good question,1520168958.0
vassyz,VS Code is missing from the editors question. I'm guessing it's not on purpose as it's far more popular than Brackets.,1520160616.0
iconoclaus,"kind of odd to conflate domain objects (where business logic should reside) with service objects, which are basically transaction scripts with side-effects. this might work for simple crud apps but it seems completely at odds with domain driven design (from which both business logic isolation and service objects arise).",1520110459.0
chrsfrnk,"I'm finishing up a gem that might be just complicated enough. It's narrow in scope, in that it's just for filtering data in a web app. But it's abstract enough to work in any Rack-compatible app‚ÄîRails, Sinatra, Roda, etc‚Äîwith any ORM.

Here's the source: https://github.com/chrisfrank/rack-reducer

I probably won't publish it to rubygems until Monday, so if you're installing it before then, you'd put this in your Gemfile:

gem 'rack-reducer', git: 'https://github.com/chrisfrank/rack-reducer', require: 'rack/reducer'",1520103017.0
CorvilleTheSpaceCat,"What is your goal? I‚Äôve never sat down and studied a gem. I just use them, if they do something I need. ",1520102106.0
lunaticman,"This supposed to be a link to a post, sorry for messing it up.
http://www.skylup.com/autospec-for-minitest-doom-guy-edition",1520099108.0
hartator,I think having a screenshot with a sample of data extracted will be instrumental in picking if you want something or not. Maybe rename it to betterrackdebugger it might show better your attention. ,1520098265.0
sshaw_,Suggestion: [update your project's homepage](https://github.com/BurdetteLamar/MarkdownHelper/blob/master/markdown_helper.gemspec#L14) to point to: https://github.com/BurdetteLamar/MarkdownHelper,1520299641.0
ignurant,"`n` and `self.n` and `@n` are all equivalent in this example.  

`@n` is the variable in question, and because you defined a method `def n` which returns `@n`, you are now able to call the `n` method to get that same value. 

When you are inside the class, you can call methods belonging to that class in a way that looks like a local variable. So when you say `n` in your compare method, you are actually calling `self.n` -- Ruby knows that you are calling a method since `n` doesn't mean anything otherwise. ",1520048424.0
strangepostinghabits,"A few pointers :)

    attr_reader :n

 is preferrable over 

    def n
      @n
    end

Default scope is pretty much always `self`, the exception being assignment `x = :foo`. If you have `attr_accessor :x`, you have to set it with `self.x = :foo`, but you can read it with `x`

Try changing your code to for example `if c.n > y` and you'll get an error message saying that your object `c1` does not have a method or variable `y`, clearly indicating that that's where ruby looked.


>  is the n referring to the function called or the variable called n.

You have no variable called `n`, you have one called `@n`. While the @ does have a syntactic function making it an instance variable, it is still very much part of the variable name. You can try this out with `c1.instance_variable_get(:@n)`.

I hope this helps clear up a little of the confusion, just keep at it and all this will become familiar eventually. :)",1520070553.0
sshaw_,"Well if the code won't be available until v1, can we at least get a patch release that adds something funny to the README? 

In the meantime, I'll be correcting the syntax errors in my [TrumpScript](https://github.com/samshadwell/TrumpScript) scripts. 

",1520046071.0
ignurant,I can't stop giggling at the precision section. Well played. ,1520091727.0
rArithmetics,heheheheh,1520270390.0
zanza19,Thanks! I was interested in using Sinatra for a GraphQL React app and this will be very helpfull. Does anyone use it for the same purpose?,1520043600.0
ShambleTrain,At Vydia we‚Äôre using graphql-ruby with a Cuba router. Cuba is a very light router similar to Sinatra. They work together really well. Graphql ruby gem is great and since it‚Äôs ruby you can do some really awesome extending and metaprogramming to abstract things out,1520082230.0
atog,With that in mind maybe 'the safe navigation operator' `&.` can come in handy: http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/,1519984013.0
,"Read the docs and it will display the source of that method.

Open the gem, have a look around. That's how you learn.

https://github.com/rails/rails/blob/v5.1.5/activesupport/lib/active_support/core_ext/object/blank.rb",1520010888.0
jemminger,"You can use `var.nil?` on most objects, and `var.empty?` on strings, arrays and hashes",1519976600.0
oaguy1,You should be able to use the activesupport gem to get a lot of Rails goodness without importing the rest of Rails.,1519982574.0
sshaw_,"When working with Strings, there are two approaches. 
For everything else, `#empty?` and `#nil?` should do the trick. Though be aware that for collections `#present?` requires it to contain one element. 

## Strings

One: `var && var.strip.empty?` or `var.to_s.strip.empty?`

[`#empty?`](https://ruby-doc.org/core-2.5.0/String.html#method-i-empty-3F) looks for empty strings, e.g., `#length` of `0`. It returns `false` for `""       ""` as it's not empty. It contains whitespace characters. 

The problem with this approach is **it only strips ASCII whitespace**. (Though I feel like this is filed as a bug or feature request somewhere):

    irb [2.4.0] (tmp)$ ""\xc2\xa0""
    => "" ""
    irb [2.4.0] (tmp)$ ""\xc2\xa0"".strip.empty?
    => false
    irb [2.4.0] (tmp)$ ""\xE2\x80\x89""
    => "" ""
    irb [2.4.0] (tmp)$ ""\xE2\x80\x89"".strip.empty?
    => false

Two: Use a regular expression.

This will not fail given non-ASCII whitespace and is what `#present?`/`#blank?` do for strings (using UTF-8 here):

    irb [2.4.0] (tmp)$ ""\xc2\xa0"" =~ /\A[[:space:]]*\Z/
    => 0
    irb [2.4.0] (tmp)$ ""\xE2\x80\x89"" =~ /\A[[:space:]]*\Z/
    => 0

Note that due to regex semantics one cannot use `\s`. Also note that `*` is used so that empty strings can match. 




",1519997898.0
Kimos,"The `.present?` function isn't part of Rails so to speak, it's part of [ActiveSupport](https://github.com/rails/rails/tree/master/activesupport). Which is a group of utility functions and core extensions separate from the web framework.

Depending on the nature of your project, you can just include the ActiveSupport gem. It's not tiny, but I tend to use it as it is worth having the many conveniences and not continuously reimplementing them myself.",1520000844.0
jrochkind,"I'd probably just write my own `present?`, cause I too find it very useful. To avoid monkey-patching everything (like ActiveSupport does), it'd have to be a static utility method. (Has anyone else actually done this and put it in a gem?)

Something like:

    class Util
       def present?(obj)
         case obj
         # thanks sshaw_ for the tip...
         when String; ! obj =~ /\A[[:space:]]*\Z/)
         when Array, Hash; ! obj.empty?
         else; ! obj.nil?
         end
       end
     end

     Util.present?(whatever)

That's probably not _exactly_ the semantics of ActiveSupport, but the edge cases are probably things you don't really care about. Or investigate the AS source to try to do exactly what it does. 

I'm not certain if there's a way to use ActiveSupport in your non-Rails project and have it _just_ monkey-patch `present?` in without monkey patching all the other stuff it does too. If there is, I would consider that. ",1520013214.0
zverok_kha,"Hey! Glad to hear from you. We are mostly at https://groups.google.com/forum/#!forum/sciruby-dev google group, subscribe to the group and you can write to us. 

You can take a look at a list of potential projects for 2018 at https://github.com/SciRuby/sciruby/wiki/Google-Summer-of-Code-2018-Ideas

Don't be afraid of the initial lack of Ruby knowledge, we are not scary. ",1519977161.0
whistlerbrk,"Yes please get involved. This language desperately needs people to contribute on the scientific computing libs. So far behind Python it is threatening the language as a whole, imo.",1519995594.0
iconoclaus,kudos for reaching out. you can depend on us for any language specific questions.,1519995973.0
Logical_proof,"Ruby is a ton of fun. I started with Learn To Program by Chris Pineand then moved on to Beginning Ruby by Peter Cooper. From there you have a bunch of other options (if you want to do web development you can get the Rails book by Sam Ruby, Sandi Metz‚Äôs practical Object Oriented Design With Ruby). I use Ruby for a lot of scripting and I even do a lot in windows. Mostly using it to interface with weird ODBC connections to pull reports from separate systems. I prefer to work with Ruby in a VM running something like Ubuntu. Most tutorials assume OSX or Ubuntu. ",1519960422.0
,[deleted],1519962360.0
cocoabean,"Ruby Koans

Then build a gem that solves a problem you face.",1519961687.0
isolatrum,"> I have only worked with Visual studio, so not being able to just start a ruby project is a little offsetting.

this is funny, beause i feel the complete opposite. i'm used to sublime/terminal so to evenn set up and understand somethinng like Rubymine challennges my attention span. It's actually a lot simpler without a whole IDE, you just write a text file with an rb extension and run it with ruby from shell. I can understand how you'd miss thinngs like static checking and autocomplete but i would recommend trying atom or sublime, and, as another commenter mentioned, WSL if you're using Windows. ",1519962241.0
,"The reason visual studio doesn't have an option for ruby is because you don't have all the boilerplate and overhead that makes an IDE useful. You don't have to compile. Just code.

I prefer VS Code but Atom, Sublime, etc are all fine.",1519966535.0
cray4K,"First things first: if you‚Äôre on Windows, use WSL to run your ruby scripts on. Ruby on Windows is a complete pain in the ass, not worth it. Anyone with experience will tell you the same.",1519958803.0
atog,https://learnrubythehardway.org/book/ is pretty good.,1519983212.0
menge101,"I would probably get a linux VM going, and use that for my ruby learning.

>  not being able to just start a ruby project is a little offsetting

This implies to me that you aren't familiar with bash.  If there are three things I wish I knew going into Uni it would be: git, bash, and how to write tests.  All three of these are particularly meaningful when developing ruby on linux (or MacOS).",1520000826.0
babbagack,"I recommend this school's exercises and also its prep Materials, they have their own book on Ruby as well as they have you do Chris Pine's book, its free too.  

I find the videos for the exercises portion to be great too, like check out the video here: 

https://launchschool.com/exercises/3a3354f4
they have you do code academy's ruby course too up until the Object Oriented programming portion.  I think its good so you can get used to and exposed to syntax and basics, so that you can get on to thinking more so about solving problems than thinking about what the syntax is. 
this is all in addition to what others have said, i'm a ruby newbie


",1520103783.0
tickypupu,"No one gives a shit what error reporting tool you use, there's literally *hundreds* of these stupid things and they're all basically copies of one another with all the same boring features. Wake me up when one of these shitty reporters does something interesting and original, otherwise don't fucking advertise one over the other.",1519950115.0
tickypupu,"""behind the scene"" i thought was going to be about implementation details, not just some bland summary that's covered in every textbook.",1519966287.0
442401,Thanks for this. TIL case multiple statements!,1519954027.0
SminkyBazzA,"404s, correct URL is http://smallcity.ca/2018/03/01/bare-bones-rails-action-cable-tutorial.html",1519937402.0
SminkyBazzA,"Any idea why the first step is ""remove coffeescript""? ",1519937605.0
ProgramAllTheThings,13 conferences we can‚Äôt miss! When are we supposed to live the rest of our lives? Ridiculous.,1519930412.0
jrochkind,"How can there possibly be 13 conferences I _cannot miss_ in 2018?  What time does that leave for doing my actual work?  Which presumably I need to do to maintain an income to pay for all those conferences. 

The stupid title makes me not want to read the article. ",1519948401.0
shabunc,"The more I live the more disappointed I get with a conference in a whole. My personal experience is that I never learn anything there that worth to pay hundreds bucks for a ticket. 

I often had that it's also beneficial for establishing new bounds within community but that never clicked for me as well.",1519981531.0
Oranges13,Anyone have any details as to when registration for RubyConf 2018 will open up (in the USA)?,1519931455.0
hartator,"Interesting, I wonder if it‚Äôs possible to make it work work Google ReCAPTCHA. ",1519930426.0
danktamagachi,"Don't listen to that other guy. This is a fun little project and if it makes your life easier/you had a good time making it, then that's great.",1519907366.0
ioquatix,Cool! you should check out https://github.com/socketry/rackula,1519909338.0
geraldbauer,"Using kramdown you can build your own website compiler (static site generator) in 10 lines of ruby - see the [Ruby Advent Calendar 2017 article](http://planetruby.github.io/calendar/advent2017/15-kramdown.html) for an example / write up. Cheers. Prost.

PS: Here's the code:

    require 'kramdown'
    require 'find'
    
    SITE_PATH = './_site'
    
    Dir.mkdir( SITE_PATH ) unless File.exist?( SITE_PATH )
    
    def markdown( text )
      Kramdown::Document.new( text ).to_html
    end
    
    Find.find('.') do |path|
      if File.extname(path) == '.md'              # e.g. ./index.md => .md
        basename = File.basename(path, '.md')     # e.g. ./index.md => index
    
        File.open( ""#{SITE_PATH}/#{basename}.html"", 'w') do |file|
          file.write markdown( File.read( path ) )
        end
      end
    end",1519917461.0
Carl_Byrd,This would be a fun project to get started with Ruby. I've been thinking about starting to learn it. Thanks for the post.,1519929488.0
larikang,I'm pretty sure jekyll can be configured to generate friendly URLs.,1519921621.0
kuebelreiter,"Nope. Nothing is generated. You created a ruby script that creates a new html-document in a folder. Having an html-template in your editor and rsync the stuff to the server would do the same job.

Your ""generator"" can't even rebuild the site if you decide to change the layout.",1519905347.0
honeyryderchuck,"Don't get me wrong, I like breaking APIs as much as the next guy... but why couldn't rubygems run a similar scheme like github (linked in this post) and temporarily disable support to access real world impact? 1.5% traffic at their scale can translate to a whole lot of requests. This seems like upgrading for the sake of upgrading. 

More interesting would be to know which ruby versions are affected by this. The article says ""Ruby linked against OpenSSL versions 1.0.0t or lower will not be able to connect to RubyGems.org."", so that means, versions lower than 2.0.0? Hard to answer that would installing all rubies myself. ",1519925547.0
thebiglebrewski,"You should fork the gem! This is an improvement to the original library. Then make a pull request back into it, maybe others will find your addition useful. Good luck! ",1519866154.0
jodosha,"HTTP/2 Early Hints, Unobtrusive JavaScript (UJS), new error page based on `better_errors`, CLI hooks, project middleware, enhanced support for plugins, bug fixes.

Stable release on April 2018! üå∏",1519842257.0
realntl,"Congrats, y'all!",1519843168.0
tyrone_post,"I believe the pick axe book has a section on gems

https://pragprog.com/book/ruby4/programming-ruby-1-9-2-0

You may have that already.

Haven‚Äôt read this but

http://brandonhilkert.com/books/build-a-ruby-gem/",1519845753.0
zverok_kha,"Interesting, I always believed docs on rubygems.org are exhaustive... If you don't mind, can you please point at something where you feel there is not enough information, or it is not clear?..",1519848963.0
rabidferret,"FYI, `String.new` does *not* do the same thing as `''` or `''.dup`. It will always have binary encoding, which can cause subtle and hard to track down bugs. You should use `+'some string'` if you need a mutable string.",1519841781.0
bjpbakker,"> Ruby has a reputation for being slow and, while that impression is a decade out of date

It‚Äôs improved for sure but ruby still is very slow (see common perf metrics across languages).",1519842852.0
cogman10,"I get it, and it makes sense.  But why not use symbols instead?

I'm having a hard time picturing where this would benefit you with strings that you couldn't get the same performance benefits by converting your strings to symbols.",1519850760.0
_matthewd,"Even without `frozen_string_literal`, certain operations involving literals skip the needless allocation, and aref is one of them: `HASH[""mike""]` does not allocate.

    def sink(value); end
    
    n = GC.stat(:total_allocated_objects)
    500.times { sink(""hello"") }
    puts GC.stat(:total_allocated_objects) - n # => 500
    
    h = { ""hello"" => ""world"" }
    
    n = GC.stat(:total_allocated_objects)
    500.times { h[""hello""] }
    puts GC.stat(:total_allocated_objects) - n # => 0
    
    n = GC.stat(:total_allocated_objects)
    500.times { h.fetch(""hello"") }
    puts GC.stat(:total_allocated_objects) - n # => 500

Edit: *Hash* aref is one of them. If `h` were some other class (or `Hash#[]` had been overridden), it would allocate the string.",1519870986.0
editor_of_the_beast,It's really annoying that it has to be in every file though. ,1519871433.0
moomaka,"
    HASH = {
      ""mike"": 123
    }

    def getmike
       HASH[""mike""] # unnecessary garbage here!
    end

That has not allocated a new String for `""mike""` on each call to `getmike`since Ruby 2.1 (or maybe it was 2.2?). String literals for hash definition / access are automatically frozen by the interpreter. ",1519876175.0
zverok_kha,"After several years, with several attempts with different apps (from large and established enterprise one to rapidly growing quick startup prototype), I believe that solid model will at least include:

* business operations/actions/commands, as `Some::Operation.new(params).call`, and probably some other closely related objects (validation schemas or form objects), so that all _modifying_ controller methods would look just like `Users::Create.new(current_user, **params).call` or something like that, and all model-level validations would be only for data sanity, UI-level validations should be in those operations;
* Lot of decorators and view models (and maybe some form objects) for logic-less views:
  * decorator is ""all formatting-related methods needed for some particular model (in some context)"";
  * view model is ""all formatting-related methods needed for some bunch of data (in some context)""
  * form objects is more or less ""list of input fields, their formatting, validations and names, needed for some particular business action"";
* separate query objects are introduced only when queries become really fancy, otherwise, view models can serve this role, too;
* `app/services/` is kinda last resort for POROs that do... ""something generally important"" (and probably not very related to data or view per se, but not too generic for moving to `lib/`).

Something like that.",1519827816.0
bhserna,"Also, after several years of attempts... I have found something that has worked for me and my team =) ... We don't have objects or folders for objects that are explicitly called Services, Operations, Values, Queries, Presenters or any other pattern... Although we actually use them we don't have to use them...

Hmmm maybe I am not being very clear =(...

What we do is have ""modules"" (plain ruby modules) with functions as a ""facade"" to our business logic and we use TDD to determine what we need inside those functions... sometimes is an object that will represent a form, some times a kind of service object that will take data from different records to do something, some times are several chained decorators... it depends... but the main ""rule"" is that... **A function on a module**...

For example we have in an app this functionality for registering ""tax entities"", because a ""client"" can have many of this ""tax entities""...

So we have exposed two functions to use in the controller...

    class ClientTaxEntitiesController < ApplicationController
      # ...

      def new
        render layout: ""modal"", locals: {
          client_id: client_id,
          form: Clients.add_tax_entity_form
        }
      end

      def create
        status = Clients.add_tax_entity(client_id, params[:tax_entity], STORE, invoicing_service: InvoicingService)

        if status.success?
          render_index layout: false
        else
          render :new, status: 422, layout: ""modal"", locals: {
            form: status.form,
            client_id: client_id,
            invoicing_service_error: status.invoicing_service_error
          }
        end
      end

      # ...
    end

And inside that ""Clients"" module, we have something like...

    module Clients
      # ...

      def self.add_tax_entity_form
        TaxEntities.add_tax_entity_form
      end

      def self.add_tax_entity(*args)
        TaxEntities.add_tax_entity(*args)
      end

      # ...
    end

    module Clients
      module TaxEntities
        # ...

        def self.add_tax_entity_form
          TaxEntityForm.new
        end

        def self.add_tax_entity(client_id, params, store, invoicing_service:)
          AddTaxEntity.(client_id, params, store, invoicing_service: invoicing_service)
        end

        class AddTaxEntity
          def self.call(client_id, params, store, invoicing_service:)
            form = TaxEntityForm.new(params)
            form.validate!(store)
            return ErrorStatus.new(form) unless form.errors.empty?

            response = create_client(invoicing_service, form)
            return ErrorStatus.new(form, response.error_message) unless response.success?

            store.create(form.to_h.merge(client_id: client_id, remote_client_id: response.get(:id)))
            SuccessStatus
          end

          def self.create_client(invoicing_service, form)
            InvoicingServiceResponse.new(invoicing_service.create_client(form.to_h))
          end
        end
      end
    end

So as you see, we are using a kind of ""form object"" and a kind of ""service object"" but that was not because we were following a ""pattern"" that was because we got in to that solution through TDD =) ... most of all following the pattern that I am trying to describe in this post http://bhserna.com/2018/writing-unit-tests-as-feature-tests.html

I hope it helps =)",1519925520.0
isolatrum,"My broad advice, and this is super vague, is to be explicit over implicit. There is sort of a trade off between ""convention over configuration"" and KISS. 

One tangible piece of this puzzle is how to deal with lifecycle events. I would be vary cautious about spreading things too thin. In my current application we have concerns calling model callbacks calling background jobs creating more records, more model callbacks, and so on. It's a black hell, and the rails version of ""callback hell"" so well-known in the Javascript work. 

So, in terms of avoiding this, I advise making _plain ruby_ classes/modules that aren't tightly coupled to a some particular part of Rails' request lifecycle. It's tempting to try and get clever and set instance variables in the models, call controller actions from other conntroller actions, and other metaprogramming things, but in terms of keeping things comprehendable it's not a good idea.

This is kind of genenral-purpose rails advice though, because the thign is, rails is kind of a glutton for ""business logic"". It's intentionally designed to support large applications, and it feels natural to put all the businness logic inn model/view/controllers. 

The second piece of advice is to practice functional programming concepts, because it will make you better at working with data. Specifically, focus on Enumerable and avoiding side effects. ",1519962858.0
ShambleTrain,"Check out our gem [Gourami](https://github.com/Vydia/gourami). ‚ÄúKeep your Routes, Controllers and Models thin with Plain Old Ruby Objects (PORO).‚Äù At Vydia we put all our non-routing controller logic in Gourami::Form classes.

    class TypicalForm < Gourami::Form
    
      attribute(:typical_attribute)
    
      def validate
        # Define your validation rules here
      end
    
      def perform
        # Perform your action rules here
      end
    
    end",1520082638.0
jrochkind,"First, are you using floats, like just writing `120.67` in your ruby code? If so, don't, and that could be the cause of your issues.  Use BigDecimal.  Or use an integer that is stored in cents instead of dollars, `12067`, which might be what your professor expects, I dunno. [Google ""don't use floats for currency""](https://www.google.com/search?q=don%27t+use+floats+for+currency)

This applies to any language, not just ruby. When you just write `x = 120.67` in ruby, you get a float (IEEE standard floating point number). 

I'd guess it's not a problem with the `%` modulo operator or your use of it, it's a problem with floating point arithmetic. 

(Personally, if anyone is writing a programming language in 2018, I suggest they make the literal `120.67` _not_ be a float.  If you don't know what you're doing, you probably want a BigDecimal-type value (which exists in most languages under some name) more often than you want a true float these days. You probably don't want a float unless you know you want a float. Floats are from when computer memory was tiny, and a higher proportion of programming work was very mathematical. But they've become the typical way for programming languages to default to decimal literals). ",1519790982.0
Hell_Rok,I would recommend using a single integer to store the total value in cents and then you can just use the lovely money gem https://github.com/RubyMoney/money,1519790712.0
danshep,Multiply by 100 and then round to get the value in cents so that you're not dealing with the floating point issues.,1519798725.0
bokmann,"Reading through the conversation, I‚Äôm curious about the class and the teacher?.. is this high school, college, or a boot camp-like school?

I‚Äôm asking because I run a non-profit in Loudoun County, VA where I work with a high school teacher to teach programming.  The official curriculum is in Java (due to the AP exam) but I teach concepts in Ruby and have several students that have learned it in-depth.  I‚Äôd be interested in knowing more about your curriculum
",1519811710.0
Schrockwell,This is basically the plot of Superman III.,1519825953.0
fieldpeter,"[SOLVED]
",1519800855.0
MeAsYouKnow,"One of the dependencies, `faraday` doesn‚Äôt seem to have loaded correctly. You may need to manually install it. You can see that‚Äôs the problem by looking at the first few lines of your stack trace and see that there is a Load Error up there. Try checking the documentation for the gem and looking for any dependencies or prerequisites that must be run prior to hooking up the gem. ",1519782987.0
harbirg,"Can you try running ""gem install hashie"" or add ""hashie"" to your Gemfile?  

Then run ""gem list"" to make sure it is installed. It should be hashie (3.5.7)

The gem reddit-base includes the following gem 'faraday_middleware-reddit' as a dependency. The current released faraday_middleware-reddit gem is missing the dependency hashie. See if this helps. ",1519798025.0
tom_dalling,"How are you running the Ruby file? When you're working with Gemfiles, you usually have to run your code with `bundle exec`. For example, if you are running your code with `ruby mycode.rb` you should instead use `bundle exec ruby mycode.rb`.

If that doesn't work, then there is probably something wrong with the `reddit-base` gem. You might need to add the `hashie` gem to your Gemfile as a work-around.",1519814130.0
danshep,"Looks like the reddit-base (or one of its dependencies) is configuring faraday to use the Mashify middleware, which has a dependency on the hashie gem.

Try adding to your Gemfile:

    gem 'hashie'",1519799310.0
sshaw_,"Oh no, not more `perform` methods on classes that aren't chain part of the command or chain of responsibility patterns.

> Table::Load.perform(file)

IMHO this should be `Table.load(file)` as *load* is the verb that's relevant to the domain; *perform* is an unnecessary by-product of the design.  

When one uses `call` (another popular variant of this), Ruby's syntax sugar does a good job of showing us how superfluous these methods are:

    Table::Load.call(file) 

Can be written as

    Table::Load.(file) 

Which is more or less verbose way of saying:

    Table::Load(file) # Same as Tale.Load(file)

When using common Ruby conventions, this becomes:

    Table.load(file)


**EDIT**

Regarding public APIs, calling `Table.load`, `Table.dump`, `Foo.bar` is a much better API IMHO than `Table::Load.perform`, `Table::Dump.perform`, `Foo::Bar.perform`. 

",1519778156.0
kmaicher,What if... `Table::Load` would need a dependency in the future?,1519833195.0
hehestreamskarma,"You're so close. With this chunk:

     sword = -2
     magic = -3 
    computer_offense = [:sword, :magic].sample
    if computer_offense == sword
         user_hp -= 2
         puts ""Your HP remaining: #{user_hp}""
      elsif computer_offense == magic
        user_hp -= 3
        puts ""your HP remaining: #{user_hp} ""
      end

`:sword` is not equal to `-2`, right? One is a symbol, the other is an integer.

maybe... `['sword', 'magic'].sample`, and compare the string to `== 'sword'`? :)",1519770705.0
herp_de_derp,"Couple of things going on. 

First)

    computer_offence = [:sword, :magic].sample 

the colons in front of the actions makes each word a symbol. So your computer_offence oject is getting a symbol assigned to its value. Then you are checking if computer_offence == sword but this checks if a :symbol == Integer since you have designated the sword object to be

    sword = -2

if you look at offense you are checking if offense == ""sword"" which compares a string (user input) to a string. You could change to 

    computer_offence = [""sword"", ""magic""].sample
    if computer_offense == ""sword""
    elsif computer_offense == ""magic""

or change your if statement to 

    if computer_offence == :sword

try messing with .class to see what class types you are using.

    123.class => Integer
    ""string"".class => String
    :symbol.class  => Symbol
    [1,2,3].class => Array



Second) Your while loops are operating independent of each other and also rendering your previous if/elsif statements somewhat redundant. There is practice called DRY (don't repeat yourself) So lets try some of that next. 

You can change group the player turn and the computer turn into functions and then call those functions till one of them is dead. Then use a while loop to call the functions till someone dies. 

    $comp_hp = 6
    $user_hp = 6
    
    $sword = 2
    $magic = 3
    
    def player_turn
      puts ""player's turn, choose your weapon!""
      offense = gets.chop
      
      if offense == ""sword""
        $comp_hp -= $sword
        puts ""Opponent's HP remaining: #{$comp_hp}""
      elsif offense == ""magic""
        $comp_hp -= $magic
        puts ""Opponent's HP remaining: #{$comp_hp} ""
      end 
    end
    
    def computer_turn
      computer_offense = [""sword"" ,""magic""].sample
      puts ""Oponent uses #{computer_offense}""
      
      if computer_offense == ""sword""
        $user_hp -= $sword
        puts ""Your HP remaining: #{$user_hp}""
      elsif computer_offense == ""magic""
        $user_hp -= $magic
        puts ""your HP remaining: #{$user_hp} ""
      end
    end

    while true
      player_turn
      if $comp_hp <=0 
        puts ""You Won!""
        break
      end
      
      computer_turn
      if $user_hp <= 0
        puts ""you lost! :(""
        break
      end
    end

I am using global variables ( $sword )  with a $ so they can be accessed from inside the functions (def) but this is considered bad practice in larger applications. You might consider refactoring this so the functions take an input (current health) and return the updated health so you could get away from global variables.

    def take_turn(current_health)
        # do something here

        return current_health - damage_taken
    end


I replaced the 2 and 3 from the damage parts with variables $sword and $magic so that you can change those values later without having to replace every instance of that damage. This makes it easier to do things like increasing damage done when changin lvl. Though you might want to break it into user_sword_dmg and comp_sword_dmg ect. 

Anyways, back to work I guess. ",1519773865.0
harbirg,"If you are using rvm, then all the gem should be installed under /Users/<username>/.rvm/gems/ruby-<version>. What happens when you type ""echo $GEM_HOME"" <- this is where all your gem live and it should be under the ./rvm folder and separate from the system ruby.

Also run ""gem environment"" to make sure there are no conflicts.  ",1519801445.0
jasdeep13,Very nicely done! ,1519781998.0
stanislavb,"Yeah, seems like a helpful piece of software I can use at some point. Thanks!",1519802482.0
jrochkind,"The second example uses a test double, the first does not. There is no reason you couldn't use a test double in the second case, and not actually save to db, and have equivalent test speed. no?",1519760615.0
moomaka,"You probably want `size` instead of `count` in that implementation. `size` will return the length of the in-memory array if the association is loaded, or issue a db query if it is not, `count` will always issue a DB query. With `size`, you both get correct results prior to additions to the association being saved and in tests you can more easily either mock the association or `build` the association records in place of `create` them, saving the DB inserts. ",1519833338.0
barnadi,"I would use a verifying double, not just a double to verify that the mocked method exists in the class, and also try to write the test in a more concise way:

    RSpec.describe CompanySizeStandard do
      subject { CompanySizeStandard.new(company) }
    
      context 'when a company has less than 500 employees' do
        let(:company) { instance_double(Company, employee_count: 500) }
        it { is_expected.to be_small }
      end
    
      context 'when a company has more than 500 employees' do
        let(:company) { instance_double(Company, employee_count: 501) }
        it { is_expected.not_to be_small }
      end
    end",1519804866.0
fladsonthiago,Do you believe that an approach with only one job that checks an specific user flag and include that user in the job is better?,1519738994.0
fladsonthiago,"Thanks for all the feedback, since this is a side project, I will try some approaches and see which one fits best with my needs.

Thank you!",1519929588.0
SizzlinSteak,"I usually go for a recursive sidekiq job in these situations. In your case, initializing it on the create action and calling RecursiveWorker.perform_in(12.hours) at the end of the method could work. 

There are a few things you need to watch out for if you decide to take this approach:

First, you probably want to rescue all errors and decide whether you want to retry, reschedule, or cancel the job on failure. If you‚Äôre calling a 3rd party API you could consider turning off retries (retry: false) and rescheduling in 5 to 10 seconds after rescuing e.g. RecursiveWorker.perform_in(10.seconds).

Also, I usually setup a loud way to receive these errors (which will happen). I really like Twilio for this type of error since I tend to ignore emails.

In addition, remember to follow the typical guidelines for jobs: don‚Äôt pass record params (ids instead), idempotence, atomic transactions, etc.

This, together with the advice in the other comments about checking queue sizes is probably a good start.",1519918653.0
janxious,Perhaps you need xvfb?,1519700045.0
tashbarg,"Wild guess: pdfkit is using the wkhtmltopdf binary which is not built properly on your system. Is wkhtmltopdf working as intended without pdfkit (on the CLI)?

On a sidenote: do you really need html->pdf? I had a really good experience with prawn for pure ruby pdf creation.",1519723782.0
hartator,I wonder if it‚Äôs still advisable to use rbenv vs chruby?,1519686323.0
442401,"    brew update && brew upgrade ruby-build
    #=> zsh: command not found: brew",1519703372.0
tomthecool,"Tip: When sharing code like this, *always* copy+paste (or share a link to) TEXT, not an image.

It makes things much, much easier for anyone trying to help you. ",1519719786.0
Merckinator,"If you entered, SCT, as your response, I'm guessing the ""Integer()"" function doesn't know what to do with that (it doesn't look like a number).

Personally, instead of ""Integer(gets.chomp)"", I probably would have done, ""gets.chomp.to_i"".

The "".to_i"" method on a String object should return 0 if the string doesn't begin with any numbers and ignore any non-numbers after a leading number (e.g. ""10ten"".to_i should return 10).",1519663748.0
gmfthelp,"The error you are seeing is Integer() trying to convert a string to an Integer (try it in irb to see for yourself)

As u/Merckinator has already suggested, use #to_i on a value, possibly a string, to at least get an Integer value",1519731581.0
Tombshakr,"I just did some of those lessons at Codecademy,  a few in that section are very buggy.  Such as never taking my input or when I clicked Run, it would just spin forever and SCT would be printed to the terminal.  I just kept clicking till it gave me the option to Get Code and let it fill in.  Report the bug to Codecademy and learn what you can as you go onto the next lesson.  It stops getting buggy after that. ",1519759209.0
442401,How is this different/better than including the modules? Does it simply allow you to use differing methods defined with the same name?,1519674680.0
banister,Isn't this an old feature? How is it experimental? ,1519669426.0
hmaddocks,"I‚Äôm about to add markdown to my app. Why would I choose Kramdown over the alternatives?
I want simple HTML and text output. ",1519672069.0
pinkyabuse,This is brilliant! I was wondering how to use the graphql gem without Rails. ,1519646080.0
tyrone_post,Awesome! This was a great introduction to the graphql-ruby gem.,1519652726.0
aclima,"when using wicked_pdf, you need to add the stylesheet references in your template's HTML/ERB file. e.g:

      <head>
        <%= wicked_pdf_stylesheet_link_tag ""application"" -%>
        <%= wicked_pdf_stylesheet_link_tag ""your_css_filename_here"" -%>
      </head>    ",1519642422.0
in0pinatus,!,1519645145.0
paneq,"> This library changes the behavior or String#!, Exception#! and Exception::! to the exact opposite of their default implementations! So, I'd say NO!!!!

What... I expected it to define raise!, raise!! etc methods but it seems while raise! is allowed as ""normal"" method name, raise!! is not. https://www.dropbox.com/s/uve9in1v54ob7js/Screenshot%202018-02-27%2015.41.18.png?dl=0

;)",1519742485.0
artpop,"Ruby

           J
           O
           K
    LANGUAGE",1519625787.0
trailingslashes,"Maybe this library will help?

https://github.com/ruby/zlib",1519800256.0
schneems,"Cloudflare will gzip contents for you on the fly. Free to use too. I‚Äôm pretty happy with them so far.
",1519616563.0
TylerP3358,"Hey, this is awesome!

I will definitely be looking to contribute.

Great work",1519675466.0
daniel_beaver,"Wow. Just started writing more functional style code, there's a lot of cool tools for Ruby to add to collection",1519680329.0
Hsoftware,Intro to IO Steams,1519563103.0
scratch_pad,"As a semi-beginner in Ruby, what are gems? I hear them mentioned a lot but when I try to google them I have a hard time understanding what they are",1519611828.0
zverok_kha,"~~Not enough information for beginners! 
What if novice also doesn't know what is Ruby and what's name of Ruby's creator? What if they can't edit files on their OS, shouldn't we teach them that? And, maybe, just maybe, a few tips on how to use their keyboard could also be helpful.~~

On a more serious note, I just wonder what's the mental model of the reader you had while writing this. Exactly in which situations it could be helpful exactly how?..

**EDIT:** OK, thinking a bit better of it, I think that sarcasm is worse than a clear statement. 

So, what I really want to say here: I believe that mindless retelling the official docs, but in more words and losing any context, is **harmful** for the ecosystem. It is good thing to do wrap-ups that are either ""wider"" (give more context, like what is package managers, and what kind of package manager is Rubygems, and what are lock files and so on), or ""deeper"" (how bundler and rubygems work, where the gems stored, how gems are packaged and so on). 

But this article is neither: it is exactly what ANY gem description (not even ""official gems/bundler docs"") says: ""just do `gem install` or add it to `Gemfile`"". As a long-time Ruby mentor, I constantly see how novices are stumbling upon that kind of ""friendly for beginner"" articles, often outdated, often SEO-optimized to be the _very first_ answer in Google, and all they can take away is ""just follow those magical advices"": no context of what and how they are doing, or why it works, or where to check if it is still right thing to do.

If they are trying to get used to gems and find the official tutorial, they can go further through rubygems.org or bundler.io to understand things. If they are given your article, they are destined to just believe.",1519562512.0
janko-m,"You could just look at what other Ruby web frameworks are using, and that is [Tilt](https://github.com/rtomayko/tilt).",1519546037.0
ioquatix,Use ERB?,1519548583.0
Shmutt,I think ERB has a to_html method (or similar) that takes in an erb file and converts it to HTML. You‚Äôll have to write your own helpers if you wish to use layouts. ,1519551696.0
Morozzzko,"If you think you need fancy views, you could take a look at [dry-view](http://dry-rb.org/gems/dry-view/)

And if you don't, you can just take a look at dry-view source code. Might give you some ideas",1519645094.0
editor_of_the_beast,There aren't unit tests. These are integration tests.,1519580842.0
jimworm,"If the unit is the entire application, then sure, feature tests are unit tests. But that would mean the application is a black box. The tests required to prove that it works will have to cover a reasonable range of inputs and outputs of application, an impossibly complex task for all but the very simplest of applications.

One hopes that the application is not a black box to us as application creators. Maybe we'll break the problem down into smaller, more easily understandable parts, each with fewer result permutations. And we could define these smaller parts as the units. Here - depending on how the problem has been broken down - it would be more feasible to test a reasonable range of inputs and outputs.

Having proven that the units work well in isolation, we could then go back to the border where the application interfaces with the outside world, and test it with the outside world's expectations. We could call these expectations features, and the tests for them feature tests.",1519627541.0
stanislavb,Ruby's future seems so bright.,1519512650.0
jrochkind,"Wait, how had I not heard about lazy proc creation in already released 2.5 until now??

Ah, I think because you don't need to _do_ anything, it just works to speed things up where possible.  Yes?",1519520341.0
jodosha,"Hi and thanks for sharing. You measure the time diff using Time.now, which isn't monotonic. That means it suffer from CPU time ""adjustments"", with the risk of returning wrong measurements.

Since 2.4, Ruby introduced monotonic clock: Process.clock_gettime(Process::CLOCK_MONOTONIC), which guarantees accurate results. Enjoy!",1519800070.0
TechnoEchoes,"Here's a more thorough explanation of the new JIT compiler. https://medium.com/square-corner-blog/rubys-new-jit-91a5c864dd10

I'm optimizing a bunch of old Ruby at the moment. I'm very interested in seeing how a simple version bump will speed up load times even more. It's nice to see that Ruby is not stalling as it matures. It's directly addressing the common complaints that you hear from developers. 

I was also surprised and happy to hear that this new JIT compiler is being benchmarked in an NES emulator written in pure Ruby! https://github.com/mame/optcarrot",1519482596.0
,[deleted],1519482763.0
ltx1,This is great news. How big of a performance improvement could it be approximately? Given the full implementation of course. ,1519477363.0
how_do_i_land,"> We‚Äôre going to implement method inlining in JIT compiler, which is expected to increase Ruby‚Äôs performance significantly.

Even more improvements to the speed, this is pretty awesome.",1519505059.0
geraldbauer,"FYI: I collect articles about all things 3x3 at Planet Ruby (incl. the new jit (mjit), of course), see <https://planetruby.github.io/calendar/ruby3x3>. Cheers.",1519493116.0
dogweather,"Has anyone been able to see actual speedup, or even verify that the C code is getting compiled and used? I've tested all the `--jit*` options, but it's hard to see what's happening.",1519773185.0
swrobel,"Hmm, still not bundling bundler?",1519494324.0
,"Ruby only - or rails as well?

I myself have a variety of projects I'd like to build but I have this issue of not thinking small",1519488987.0
zverok_kha,"Hey all.

I managed to gather and describe some projects and project ideas I personally want to see done, but have no time to do myself. I am willing to mentor Ruby novices/juniors with a good attitude if some of them will find those projects interesting.

Ready to answer any questions here on the effort in total or about particular projects/ideas.",1519471030.0
derrickcope,I use gimli,1519516298.0
zanzabarito,"been curious about doing this for a little bit and these both (gimli and pdfkit) look great. Will be looking into these, thanks for the recommendations!",1519597940.0
pingortle,"Not a gem, but you should check out electron-pdf (npm i -g electron-pdf). At its simplest, you can just pass a URL of the page you want rendered as a PDF to its CLI: electron-pdf http://mysite.com/page.

I used electron-pdf in a rails app just recently, and it worked out great.",1519647570.0
AnalphaBestie,Ive read his previous article a few weeks ago (https://blog.sourcerer.io/building-a-website-with-c-db942c801aee ) and had a good laugh. Same with this one.,1519502106.0
amalagg,This looks like a perfect application for Crystal,1519472447.0
in0pinatus,"This gem basically adds type enforcement to ActiveModel validations. However Rails 5.2 adds the attributes API to ActiveModel, which for me achieves similar outcome by different and more general means (attribute casting rather than type checking)
",1519437217.0
realntl,"I tend to want to validate user input, not objects.",1519514401.0
atl_coder,"While I appreciate how light weight your solution is, for anything beyond the scope of a one-off script I prefer to separate validations from object instantiation/persistence completely. That being said stricter typing is definitely appealing. If you're into that sort of thing and haven't yet checked out [the dry-types gem](http://dry-rb.org/gems/dry-types/) you should give it a look. I find the ability to easily roll your own [custom types](http://dry-rb.org/gems/dry-types/custom-types/) pretty nifty. 
",1519434329.0
,"That is good, but I would recommend everyone to use rbenv or rvm.",1519429273.0
JustinCampbell,"Using JSON over HTTP is likely the simplest to work with and test. As an alternative, look into Redis Pub/Sub commands: https://redis.io/topics/pubsub

> Rails send to node, then node respond, after some validation node should give info to Rails again, but it won't respond 2nd time.

Using HTTP, you could return a status code that indicates the request is processing, or redirect to the next path, and the client would long-poll waiting for the processing to finish.

> In my project Rails and Node are equivalent. I just want to exchange data between their - not to create infrastucture for pub/sub app.

One quote I heard is that software architecture is ""drawing arrows between objects, and making sure the arrows all go in the same direction"". If you have A relying on B, and B relying on A, then neither can work on it's own and that should be a red flag for you in designing your system. If you introduce Redis or another service bus, you create an infrastructure dependency all going in the same direction, and then create a publisher/subscriber dependency each way between the 2 systems.

Sorry if this is vague, without knowing more about your project it's hard to give you a concrete example. I hope this helps!",1519411525.0
4rch3r,"1) HTTP connections can be long lived so I'm not quite sure what you mean by 'send lot of data' (using chunking protocols it can be an infinitely long stream as long as the connection doesn't timeout).  Only issue I see with this connection is that it's one way.

2) (disclaimer NOT familiar with Faye) Base on searching, Faye looks to be generally client side JS so I agree with your analysis but could be a library worth exploring.

3) This would work if you need a two way connection (which it kinda sounds like you want since it's server <-> server).  As for configuration of ActionCable for supporting websocket communication I would checkout https://github.com/rails/rails/blob/master/actioncable/README.md.  But in the past the only really annoying thing I've run into is setting action_cable.allowed_request_origins.  Also if rails is behind a proxy (like nginx or apache) it can be a huge headache to get websocket traffic to proxy correctly. 
",1519411692.0
1024KiB,"All your solutions follow the client/server pattern, you know. This is also a good model for concurrency and to encapsulate state; for example in erlang applications it's pervasive. It looks more like you're asking what protocol to use, and it depends on what are your requirements. If you don't need to have your applications talk over an insecure network and don't need to communicate hundreds of thousands of messages per second, use whatever is the easiest/cleanest.",1519433507.0
ulfurinn,".each simply iterates over the array, it does nothing to modify it (unless the block does it explicitly, which would be questionable style anyway), so the result of the block is simply thrown away. You're probably thinking of .map. ",1519410168.0
dogweather,"`.each` is for when you want to create side effects. In your code, however, you don't create any. You have the expression, `a + 1`, which Ruby evaluates, but then does nothing with.

An example side effect is printing something to output. For example, `puts a+1` instead of `a+1`. That's a common use of `.each`.",1519432049.0
4rch3r,"Do you understand javascript callbacks?  Basically what's happening here.

For each element in the Enumerable object, `.each(&block)` calls the given block with each element individually.  The most confusing thing here for beginners is the syntactic sugar of representing the block with the implicit do/end block.  It may be clearer to read this as: `[1,2].each {|a| puts a}` where you can see the block `{|a| puts a}` as a single entity being passed into the each function.

This brings us to the problem, it's not doing any mutation (like you expect)!  After you run it, the return will be the identical list to what you passed it since nothing changed.  If you want to mutate the original Array, I'd take a look at `map` aka `collect` https://apidock.com/ruby/Array/collect.",1519416212.0
jules2689,"`.each` is an iterator that does not mutate the state. You‚Äôre looking for `.map`, which will mutate the state.

Another thing to note for `.map`, is that it will return the modified array. If you want to change the original array, use `.map!` which changes the array it is passed.",1519409858.0
babbagack,"Wow thanks everyone!  Im not looking to modify the array just trying to understand what was given to me as a problem.  But knowing .map is useful.

Away from my computer right now but hope to tinker later, hopefully tonight.  I understand now that .each does not modify.  I guess I was expecting the code block to do the modification but it doesn‚Äôt, but again I plan to tinker later!  Thanks everyone!",1519417438.0
LumancerErrant,"So, a couple things. 

For one, think of the block (everything from ""do"" to ""end"") as a special function. In this case, that function takes one parameter, ""a"", and returns a+1.

The ""each"" function can be thought of as a _function that takes a function as a parameter_. Now a block isn't _quite_ the same thing as a function, but it's close enough for this explanation.

The ""each"" function takes the block function you pass it, and calls the block once for every item in the array. However, ""each"" doesn't do anything with the return value of the block; so the example you've written adds one to each element of the array, but then throws away the result, leaving you with the (unchanged) array. You can use ""each"" to, say, print each item in an array, but it does not change the array on its own.

To get the result you're expecting, you need the ""map"" function. Map takes a block function, applies it to each item in an array, and then _replaces that item with the result of the block_.

With me so far?",1519410124.0
hmaddocks,"This is a bit tricky to get at first. 

each is a method or function and everything from the do to the end, the block, is an argument you are passing into that function. Everything in Ruby returns something and the RETURN value of each, which is what you see in irb, is whatever each is called on, your x array in this case. 

If you want to see the result of your block then you have to assign the values to a new array inside the block or use a different function like map. Internally map creates a new array and fills it with the return value of the block. map then returns the NEW array. ",1519413335.0
babbagack,"so, I was told to also try this, it making sense now more and more  

`irb(main):007:0> x`  
`=> [1, 2, 3, 4, 5]`  
`irb(main):009:0> x.each {|a| a = a + 1}`  
`=> [1, 2, 3, 4, 5]`

even the assignment with `a = a + 1` that evaluation is just thrown away, we didn't ask to do anything with it, we did not use any method that would modify the array, like `.pop` for example, so the return value of `.each` is the exact same of what it was called upon, in this case, the array x.  =D",1519440116.0
jgclingenpeel,"Try this in IRB:

a = 1

a + 1

puts a

a = a + 1

puts a

a += 1

puts a",1519409656.0
Pr0ducer,"    x = [1, 2, 3, 4, 5]
    x.each_with_index do |val, idx|
      x[idx] = val + 1
    end

https://stackoverflow.com/questions/310634/what-is-the-right-way-to-iterate-through-an-array-in-ruby

As with many programming languages, the function being executed for each iteration just returns a value. If you want to mutate the original array, you need to actually change the value for that index of the array.  Or use map, as others have suggested.",1519416838.0
menge101,"Just pick the one you like and use it consistently.

Without seeing the code its tough to say, but I think you should be using modules in here, and letting the module dictate the file structures.",1519401947.0
geraldbauer,Great write-up. FYI: Find a complete [ruby conferences & camps in 2018](https://planetruby.github.io/calendar/2018) calendar (in a single-page) with web feed (for updates) @ Planet Ruby. Open source (on github). Auto-built with Jekyll (and GitHub Pages).,1519383898.0
Mylogin0101,"I went through this, go for c


    a) PdfKit 
An alternative to wicked

    b) wkhtmltopdf 
Wicked uses this library 

    c) wicked_pdf
A wrapper around wkhtmltopdf",1519367968.0
modernstyle,"I am using wicked on an application to which generating PDF is the core of the app, and so far I have not encountered a feature I could not implement within a short span of time. It is really flexible and reliable. I have not tried others though, because I simply didn't have to.",1519368293.0
Cr0wsb4h0es,"I would suggest using Pdfmake - pdfmake.org
",1519373833.0
kwhittington,"We use 

    wicked_pdf

and

    wkhtmltopdf-binary-edge

to get the binary installed.

wicked_pdf has worked pretty well for us. The only issue we're having is, since we're generating PDFs from a URL, it has to make another request to the same server (so single threaded dev servers lock up and can't generate PDFs). Once we have time, we're going to migrate to wicked_pdf's [pdf_from_string method](https://github.com/mileszs/wicked_pdf#super-advanced-usage) and that should solve that issue.",1519393451.0
Abangranga,If you are planning to deploy to heroku start googling solutions now before it becomes a hellscape ,1520013484.0
choonggg,Expecting to find a blog post. Sorry but this is blatant advertising,1519361332.0
Grimnur87,Looks interesting. Is it for general-purpose programming algorithms too or must they fit into a specific domain?,1519334272.0
hartator,"Great project, congrats! Would you be open to integrate services like us (serpapi.com)?

https://github.com/serpapi/google-search-results-ruby",1519317041.0
nanodano,https://github.com/DevDungeon/Cookbook/tree/master/ruby,1519349462.0
ravioli_mixer,"Sounds like an awesome effort, I've written a couple scrappers to grab data (used by a nonprofit for diapers) but I was writing a general one as well. How niche can we get with our scripts?",1519685509.0
AnalphaBestie,YFI; your header on your page resizes according to the text changes which makes it changing height and jumping around.,1519502240.0
joesb,"Pdfkit lets you directly generate the PDF file, like writing the binary content of the PDF file. 

Wkhtmltopdf lets you write an HTML file that it then turn in to PDF. ",1519283579.0
tomcopeland,"I use the [wicked_pdf](https://github.com/mileszs/wicked_pdf) wrapper gem around wkhtmltopdf.  It does a nice job of encapsulating all the options.  And it has straightforward usage, like `WickedPdf.new.pdf_from_string(some_html)` to generate a new PDF.",1519329446.0
jrochkind,"hooray!

I don't care about the additional keystrokes, but I think this makes things a lot more readable and less error prone. I almost always want a default with a `class_attribute`. ",1519307659.0
ViralInfection,Watching Rails grow up from 1.x is a great journey. ,1519351143.0
geraldbauer,See the [Twitter #ruby25th hashtag](https://twitter.com/hashtag/ruby25th) for more congrats and comments.,1519291076.0
fotosintesis,2.5,1519275022.0
dilumn,Happy birthday Ruby,1519281662.0
editor_of_the_beast,"Sandi rejuvenated, or possibly created my love of OO. It sounds blasphemous to speak positively of OO in 2018, but I have a rekindled relationship with it. Lots of problems that people have with OO is from failing to make lots of small objects, and not having this clear-sighted goal that Sandi outlines in this article: push all conditionals to only decide on which objects should be created, and thus to the boundaries of your system. Vary behavior with polymorphism. Couple loosely with dependency injection. If these principles have failed you, I believe it's an implementation error and no fault of the paradigm.

The worst object oriented code is when a class becomes gigantic, and simply wraps a procedural chunk of stateful code. Instead of sharing the benefit of simplicity with the procedural counterpart, that object turns into a weird Frankenstein monster that totally fails on the promise of OO. But when focusing on lots of little objects and limiting conditionals to outer layers of the system, code can become beautiful and most importantly easy to change. 

The most interesting part about this is I don't think it's at odds with the surge in functional programming stock. Objects can operate on immutable data. The implementation of messages can use functional transformations. As Ruby proves, you can mix objects and closures. Where functional programming ceases to work though, I think objects come in and provide a framework to scale up a codebase to another level of cohesion.",1519261770.0
Fratboy_Slim,"Well, the increased speed with GN particles is a pretty good jump on [current Gundam tech](https://en.m.wikipedia.org/wiki/Mobile_Suit_Gundam_00). ",1519256006.0
kirun,"pry and rubocop

Although they seem to be sworn enemies as rubocop wants to remove all your pry entry points.",1519251630.0
aarkerio,"Avoiding rails. I love rails actually, but I'd rather prefer a more ""pure"" approach to Ruby and OOP.",1519261338.0
obviousoctopus,I learned the basics through the fun and addictive puzzles in josh cheek‚Äôs ruby kickstart. Wouldn‚Äôt change a thing.  ,1519253810.0
impurist,"Use TDD and understand why you should be doing it.
Learn OO by studying and applying this book http://www.poodr.com/
and watch lots of talks on youtube by the author. This will teach you about the SOLID Principles in the context of Ruby.
Use the code quality tools Rubocop  & Reek
Learn how to use a debugger. The Rubymine debugger is awesome.
Get a job using Ruby to solve problems everyday
",1519268391.0
,"I've been flirting with Ruby here and there for the last year or so, but at this moment I'm reading Eloquent Ruby by Russ Olsen and the relationship is getting serious.",1519324407.0
jrochkind,"I learned ruby in days of version 1.8 with the Pickaxe book, and I'd do it over like that again! ",1519253624.0
editor_of_the_beast,"I would start by forcing myself to create lots of objects. I learned Ruby by writing super procedural scripts that all operated on global state. Which has its benefits - I focused on learning the standard library APIs and solving problems simply.

But where I really feel like I'm harnessing Ruby's power recently is by writing lots of little objects and taking advantage of duck / dynamic typing. So I wish that were more ingrained in the way I think in Ruby. ",1519256872.0
,"There's a variety of paths that can work for someone.

If you don't know OOP - I always suggestion the simon allardice course on OOP principles that is agnostic.

Learn Ruby the Hard Way, PIck Axe Book, Well Grounded Rubyist, are all great foundational books.

I'm starting to think the 'ape my code' things like code academy are not as helpful as they should be.  The model doesn't reinforce learning as much.

",1519263689.0
metacontent,"1. Learn Ruby Course from http://codeacademy.com
2. Read the book ""The Well grounded Rubyist 2nd Edition"" to build a deeper understanding.
3. Read the book ""Practical Object-Oriented Design in Ruby"" 
4. Then spend a lot of time building small things, for example http://rubyquiz.com or http://exercism.io/languages/ruby/about also read either The Ruby Way 3rd Edition, or The Ruby Cookbook, and start watching Screencasts. 
5. Find an Open Source ruby project that interests you and study the code base and even try to contact the developers and try to fix bugs and contribute. Read a good RSpec Book. 
6. Maybe start work on a major project of your own. Read a good Rails book. 

edit: This is actually my own plan that I'm currently working on. ",1519271100.0
atl_coder,"I learned ruby through the lens of Rails, which left me with a lot of bad habits that I had to unlearn. If I had a fresh start I would focus much more on object oriented principles. Concepts like single responsibility, open/closed, and inversion of control aren't really common in most rails focused books or at least the ones I was reading. It probably wouldn't be as much fun as creating a twitter clone or whatever the intro rails stuff is today. But grasping those concepts is key to being able to solve more complex problems. As a bonus, conceptual knowledge is portable and will stick with you moving beyond ruby.   ",1519436247.0
wflanagan,Honestly.. I'd learn Python. ,1519253416.0
foomprekov,I would learn java and spring at the same time. ,1519285841.0
andygauge,Read the commit history of the language.,1519253717.0
sshaw_,"> It‚Äôs a very nice feeling to be completely up-to-date and to reward that...

Upgrading for the sake of, upgrading? 

Security aside, always being up-to-date makes me a bit nervous. Stability feels a lot better. 

 
",1519259326.0
Ingu_,"It is possible to save html with watir/capybara  
in capybara you can do this:  
`page.save_page html_file_path`  
in watir  
`html_text = @browser.html` 
`File.open(html_file_path, 'w') { |file| file.write html_text }`
  
however both only save html file, it lacks css with styles  
for that I look for every .css in html, download it, save it locally next to html and gsub their paths in html file so path is local  

final result is really nice, helps to check for changed ids on frontend without restarting scenario and debugging it  
",1519374123.0
xiongchiamiov,Why have you ruled out those options?,1519229689.0
codeprimate,"You want https://github.com/mileszs/wicked_pdf

It is based on wkhtmltopdf and you won't have any luck looking for a gem with a different backend renderer. 

That said, https://github.com/mattheworiordan/capybara-screenshot will take screenshots of failed tests, which doesn't seem to be your use-case.",1519238262.0
modnar42,"I usually use [DocRaptor](https://docraptor.com)  for my html to pdf needs. It‚Äôs not free, but it is super easy. ",1519229447.0
geraldbauer,"Is it just text? Than convert the html to markdown and than convert the markdown to pdf. For markdown to pdf, see <https://github.com/gettalong/kramdown/blob/master/lib/kramdown/converter/pdf.rb> for example. Cheers.",1519227612.0
geraldbauer,A free super easy option is puppeteer with google chrome (using javascript) <https://github.com/GoogleChrome/puppeteer>. Official supported (and built) by Google. ,1519234754.0
Enumerable_any,"It's not a gem, but probably way better than any gem you're going to find: https://pandoc.org/",1519378902.0
binklu,"uh, isn't everything ""recorded live"" ?",1519225470.0
mindaslab,"I love to hear Matz talk, his ideas seem to be so good! What you people think?",1519200307.0
geraldbauer,Great news. Great speakers. FYI: I collect [ruby conferences & camps (around the world) in 2018](https://planetruby.github.io/calendar/2018) @ Planet Ruby.,1519227290.0
sshaw_,"    mkdir -p ~/usr/lib/ruby/
    gem install -i ~/usr/lib/ruby/ pry
    export GEM_HOME=~/usr/lib/ruby/
    export PATH=$PATH:$HOME/usr/lib/ruby/bin
    pry
",1519176371.0
Lakon_AspX,"""a rudimentary web-application framework"" :( y u gotta be like this man",1519221373.0
hehestreamskarma,... Maybeeee there needs to be ___reactions.com ... and you could write it in Ruby. You already have some sort of market validation right? :)),1519155972.0
jrochkind,"Is it just me that finds a reddit link to the rubyflow entry with little information annoying, instead of just a link to the thing being blogged there?

https://github.com/palkan/isolator

The description is also more clear on the actual repo: ""Detect non-atomic interactions within DB transactions"".  The ""Detect"" is important here. 

I see how what it's detecting is dangerous... but I'm not sure 'atomic' is the right word for what it's detecting. But I'm not sure. I don't totally understand what it's doing and why. Any background reading?",1519165806.0
updog,"From my experience, ruby just kinda falls flat here. Only suggestions I can point towards are

 * https://github.com/SamSaffron/message_bus
 * https://github.com/anycable/anycable

Message bus keeps chugging along. I find myself using it all the time as the API is clean and it remains fairly active in terms of development.

Anycable is a good place to look if you want to actually scale sockets with ruby. It's rails agnostic if you want it to be. Built on litecable, which is ActionCable separated from rails.

Please post if you find anything compelling.
",1519162299.0
aemadrid,"[iodine](https://github.com/boazsegev/iodine) - HTTP / Websocket Server with Pub/Sub support, optimized for Ruby MRI on Linux / BSD",1519188693.0
binklu,"They're not talking in english, man.",1519149377.0
mperham,"Not a fan of that refactoring.  It makes the code bigger and more complex with little tangible benefit.

If you are worried about forgetting to update a case..when, I always do this:

    else
      raise ArgumentError, ""Unknown value #{value}""
    end
",1519147144.0
prh8,I absolutely hate these blogs that wait until you've scrolled a page or two and then pop up a newsletter signup modal. ,1519148085.0
jrochkind,"This is interesting. I love the Attributes API.  Not sure if it's needed here or not, but is giving me some ideas for a place I DO need it. ",1519164672.0
danimoth2,"Great article, though honestly I found that the example had a big bunch of namespacing so it was sort of hard to sift through. Maybe next time, shorter words in the code example? 

But yeah I have the same idea re: extracting primitives to their own object types. Easier to add methods when you need to. When do you extract it strings to value objects? Just like /u/mperham said, it makes the code bigger. I'm guessing you don't do this for all the strings you have (or do you? hehe) ",1519244953.0
foomprekov,"The example begins by doing manual dispatch based on the object's type, represented as a string. That's a huge smell that should always be refactored. ",1519286253.0
philpirj,"What is the interface it provides?

    preimage = Preimage.find ...
    commission = Commission::Calculator.calculator(preimage).new(preimage).calculate",1520077329.0
binklu,is dev.to like a shitty version of medium but for developer blog posts?,1519166597.0
foomprekov,I don't understand what I am supposed to get from this article. ,1519286508.0
electrostat,Certainly interesting. I'd love to give TruffleRuby a try (my current experience is only MRI & JRuby). I looked around a bit and I saw that RVM integration is being worked on; that'd be nice.,1519059846.0
binklu,cool,1519094225.0
disclosure5,"I really like Jekyll. I run several sites with it. It saves me a fortune in time and effort dealing with the usual performance and security issues  from common CMSs.

But is it just me that's disappointed nearly all popular templates *for static sites* bundle jQuery and four or more separate .js bundles ?",1519037416.0
geraldbauer,FYI: The Dr Jekyll's website is built with ... Jekyll (and Ruby) - https://github.com/drjekyllthemes/drjekyllthemes.github.io,1519063782.0
1024KiB,"Grampa perl can do that too:

    rename 's/(.*)inline\.svg/$1.svg/' *

(I see the point of the article, but the rename script is pretty useful for that specific example.)",1519050209.0
,Actually a pretty shitty article.,1519042052.0
oowowaee,Can't you just use --bisect to identify the order dependent failures?  Why would you do it manually?,1519007399.0
realntl,"It's important to note that, if we pay attention, we can simply notice when we're writing code whose test will be a likely culprit for intermittent failures. It pretty much always happens when we inadvertently introduce global dependencies or state to our code. If we break those habits that lead to buggy test suites, then we don't need to even learn and remember how to debug them.",1519145218.0
hmaddocks,"You test for both cases. 

On one hand you add an extra dependency that monkey patches a core part of Ruby doing who knows what, on the other you have a simple piece of pure ruby that is obvious to anyone who sees it. I don‚Äôt get why there is a debate. ",1519027244.0
,[deleted],1519048690.0
hmaddocks,"You don't need to use Timecop. Pass the time into your functions.

    def current_year time = Time.now
      time.year
    end

    it ""returns current year"" do
      expect(current_year(Time.new(2018, 1, 1))).to eq 2018
    end

It's one less dependency for your project, your code is more flexible and you can avoid other weirdness that Timecop can sometimes cause.
",1518988971.0
xiongchiamiov,"Defunkt wrote this exact same thing (with the same name) a long time ago, you can compare yours versus his: https://github.com/defunkt/repl",1518973518.0
isolatrum,"What would be really cool is if the REPL allowed for executing arbitrary ruby code and interpolating it into shell commands. As it stands, I don't see a big benefit to this versus calling the program from shell.",1518997288.0
quote-only-eeee,"I just sort of ""re-discovered"" Ruby, and I wanted to create something with it. I'd appreciate it if anyone could take a look at the code :-)",1518963313.0
choonggg,This is really cool! Keep doing the good work!,1518977270.0
stanislavb,That's so awesome. We need more of this.,1519022267.0
4rch3r,"Awesome idea, but I have a feeling by forcing manual 'malloc' calls you will lose a large amount of support from the Ruby community as the mantra is generally 'simplicity over speed' (just looking @ https://github.com/prasunanand/rbcuda/blob/c5e2d7c185b7d45162174a6dcf6de052e78d462c/examples/elementwise.rb). 

That said, I think a LOT of this could be implemented by some sort of `EfficientArray` class which attempts to better wrap the malloc/free.  Good luck with this project though! Excited to see where it ends up :) ",1518944233.0
urbanfog,Video doesn‚Äôt seem to work,1518927178.0
toadkicker,Is this an issue with `gem` itself or is it affecting released gems?,1518912393.0
solnic,"It's fantastic. I've been doing this in libraries and applications for years. Works better than anything else I tried in Ruby for the past 12+ years. There are many common misconceptions about FP in Ruby, ie people often think it's about using procs for everything, which is silly, or that you gotta use special libraries that provide immutable data structures (hamster etc.) or deeply freeze everything.

In reality, the idea is very simple, and it boils down to 3 key points:

- Stop relying on mutable state
- Separate data from behavior
- Embrace `#call` as the primary interface for *most* objects, where everything is designed as a data pipeline: data-in, data-out, that's it

You can watch my talk about this right here https://www.youtube.com/watch?v=rMxurF4oqsc",1518957711.0
geraldbauer,"The Ruby Pigeon blog by Tom Dalling has great articles on programming ruby functional-style e.g. [Avoid Mutation ‚Äì Functional Style In Ruby](https://www.rubypigeon.com/posts/avoid-mutation-functional-style-in-ruby) and many more. 

In the next days I will add an Awesome Functional page to the Planet Ruby Awesome Series to collect all things functional about Ruby - check back [/awesome-functional](https://github.com/planetruby/awesome-functional) in a couple of days.",1518884629.0
_asqrd,"I saw a really good video about functional programming in ruby not too long ago, I'll look again as I can't seem to find it....but in the meantime here is a start:

https://www.youtube.com/watch?v=9TBvWRgll64
https://www.youtube.com/watch?v=7qnsRejCyEQ
https://www.youtube.com/watch?v=jZ0Xf47P6oo
https://www.youtube.com/watch?v=3b1YhdP2fis
https://www.youtube.com/watch?v=V-6Rv5I9iPM
https://www.youtube.com/watch?v=6ecNAjVWqaI

I love functional programming, a few years back I wouldn't have said that. It has been a long road mostly due to my resistance. But there are clear rewards for using the paradigm, and now I thoroughly enjoy it. I have to admit I have not put it into practice in Ruby (I use Elixir and Clojure for that), but have in Java and hope to soon in my next Ruby project.",1518885357.0
thisrealorthisfntasy,"You might enjoy this talk by Gary Bernardt, https://www.destroyallsoftware.com/talks/boundaries, and his screencast ‚Äúfunctional core imperative shell‚Äù which costs money. Will try to add thoughts when I have time!",1518888528.0
jgaskins,"I mix FP and OOP styles together a lot. A few things to keep in mind:

- any time you're relying on a data structure to be immutable, it must be immutable _all the way down_
- data structures don't have to be hashes and arrays; they can be anything, including your own `Enumerable`s (or instances of `Enumerator`) to stand in for either one
- keep public interfaces for objects down to a single method (`call` is a great name so you can use procs in their place)
- garbage collection of a handful of objects is cheaper than wrapping your mind around all of the weird states your objects can get into with mutation
- passing literal functions (procs) in Ruby is unnecessary; use blocks or even `call`-able objects

A big part of what I've been doing FP-style Ruby with is on the front end using [Clearwater](https://github.com/clearwater-rb/clearwater) (a front-end framework where your code is written in Ruby). An FP style meshes really well with a virtual-DOM-based framework since the UI just becomes a function of application state. It still uses objects to compute that UI, but they're mostly immutable.

The state for my front-end Ruby apps is managed by another FP-style (despite using objects) library called [GrandCentral](https://github.com/clearwater-rb/grand_central). It's like Elm or Redux, but with more of a Ruby flavor. Your app state and the actions you invoke are objects, but they're all immutable ‚Äî you update your app state by returning a new copy of it.

You can see how some of this works with my [video about `GrandCentral::DevTools`](https://www.youtube.com/watch?v=imBRi1jV_vk). All the code for that example app, including the WebSocket stuff, was written in Ruby. I'd be happy to chat about it more. ",1518934337.0
disclosure5,"Functional programming works great for me given I also write Erlang and Clojure.

But much like the other ""functional language x"" discussions, using it with Ruby is an attempt to take a popular pattern and shoehorn it where it doesn't work.

Languages that properly support immutability gain major performance advantages when the compiler can assume a variable won't change. Instead, we've got an article on this thread discussing how the performance ""hit"" of immutability isn't very bad. Why is that? It's because all that article actually does is decide not to declare new variables rather than reusing existing, the compiler has no magic in that.

There's no way of enforcing it. You go and use a .each enumerator and it's ""not functional"" but the best you have is a promise to yourself you won't do that.

That's not what functional looks like.",1518914720.0
equivalent8,"well Ruby is not the most optimized language for functional programming (e.g. compared to Go or Elixir are much faster) but you can  benefit with from all the aspects of functional programming as a design tool (http://www.eq8.eu/blogs/46-lesson-learned-after-trying-functional-programming-as-a-ruby-developer) . So immutability of state and clear definition of interfaces are great practices to avoid future errors.

I've never tried to write ""fully"" functional project with Ruby (As Ruby is designed with OOP love <3 ) but there is no harm (just gain) from using sprinkles of functional in Ruby
",1519051067.0
zverok_kha,"Does things like this:

    order = {
      'items' => {
        '#1' => {'title' => 'Beef', 'price' => '18.00'},
        '#2' => {'title' => 'Potato', 'price' => '8.20'}
      }
    }
    Hm(order)
      .transform_keys(&:to_sym)
      .transform(%i[items *] => :items)
      .transform_values(%i[items * price], &:to_f)
      .reduce(%i[items * price] => :total, &:+)
      .to_h
    # => {:items=>[{:title=>""Beef"", :price=>18.0}, {:title=>""Potato"", :price=>8.2}], :total=>26.2}
",1518872861.0
jrochkind,"I love that you are presenting this as experimental for now, and committing to developing in response to actual use cases, not over-engineering. Zverok, you do dependency development right, I appreciate it! 

Have you spent any time investigating performance and possible optimization?",1518898256.0
zverok_kha,"*(whims and ducks under the table)* Yes, I am scared, big daddy, please save me!

*(suddenly remembers he is old grumpy Ukrainian)* Nah, I am not. 

I wonder who is your intended target audience.

Rails novices who are really scared, in fact, and need comfort and explanations? I don't think ""this is bullshit, you suck"" article will be really good at those.

Experienced Rubyists who still aren't too excited about Rails and its ways? But we know that the problem with Rails is NOT ""implicit return values and metaprogramming"", which you conveniently limit your counter-attack to.

So, it is probably some, IDK, Pythonists who made you angry by criticizing your favorite framework, and you want to swear at them back? Then probably you should post that in their subreddits, not this one. (Checks) Ah, you did. OK then.",1518863457.0
stumptowncampground,"The way I define magic in programming, rails is the most magical framework out there. I'm not scared of it, I just don't like it. ",1518865891.0
Grimnur87,"I think I've been scared of Rails for 10 years. Ever since I read a tutorial that said something like ""type this command, tweak that file, run rake db migrate, boom you've built a twitter clone!"" Like that uneasy feeling you get when the job is done and you know you didn't do enough work to have made that happen yourself.",1518872968.0
moomaka,There is no difference between a good abstraction and 'magic'. Rails just has a bunch of good abstractions.,1518945875.0
janko-m,"Rack already does the parsing for you, you just have to call `Rack::Request#params` (or in your case `Roda::RodaRequest#params`):

    r.params #=> { ... }",1518864044.0
GroceryBagHead,Shrine works with sequel: https://github.com/janko-m/shrine,1518849622.0
somazx,"Shrine is awesome, super modular and framework agnostic.

http://shrinerb.com/",1518893137.0
disclosure5,"Sinatra's session variables are themselves encrypted, so the catch here is that the JWT is put in a session variable and encrypted out of view. You should have a cookie on the page, but the name won't be ""access token"" (I don't know what Sinatra defaults to).

This makes for an short piece of demo code, but it's also fairly useless. You would be far better served just storing the user id in the session variable itself.

>Can one have an application running on y.domain.com that reads a token made on another application on x.notherdomain.tld? 

That's really down to your frontend. If you stored the JWT token in a raw cookie (using Rack::Cookie instead of session) you could send that JWT token to other domains. Cookies aren't sent by default in cross domain requests, but you could force this with the right frontend, or sent the token as a POST request.

That said, JWT has a number of security issues. [The JWT Gem README](https://github.com/jwt/ruby-jwt) warns you to set the algorithm yourself, and provides an example of doing so.

The example code you found does not, and ergo, is vulnerable.",1518827407.0
geraldbauer,Great article on MJIT from the master himself. Added to the [Awesome Ruby 3x3 Articles Collection](https://planetruby.github.io/calendar/ruby3x3) @ Planet Ruby. Cheers. Prost.,1518884784.0
Frizkie,I've always had luck with [ruby-prof](https://github.com/ruby-prof/ruby-prof).,1518809347.0
amadman114,"If it's a webapp, and you're looking for some general profiling of how all parts of your app work, I'd take a look at [New Relic](https://newrelic.com/).",1518816940.0
rubyh6,ruby-prof for me,1518831984.0
midasgoldentouch,I thought AMP actually routed people to their pages and not yours?,1518797016.0
zverok_kha,"Just [a few things](https://www.ruby-lang.org/en/downloads/releases/) :trollface:

* keyword arguments;
* refinements;
* better work with encodings;
* `%i[]` literal for a list of symbols;
* `Module#prepend`
* `&.` operator
* A lot of nice changes in core classes and standard library (can be backported though).

You'll be missing whole geological epochs, basically.",1518768793.0
GroceryBagHead,"- https://github.com/rubygems/rubygems.org
",1518763797.0
gray_-_wolf,Maybe redmine,1518787956.0
in0pinatus,"It's as in the movies. You just have to really want it. I write my best, driest Ruby when wearing a pained, anguished expression. You know that scene where the hero is in a plane about to crash, and they pull back on the stick, and it's not enough, so they pull back on the stick again but this time *grimace really hard* because this time they *really want it*, and the plane miraculously responds?

It's like that.",1518758343.0
lanoixdecoco,Practical Object-Oriented Design in Ruby: An Agile Primer by Sandi Metz taught me all the cool stuff to write dry code and utilize the magic of OOP.,1518759948.0
finallyimfree,practice,1518757916.0
pedrozath,"We all know this can't be teached in a single comment. However, just to add here one more quick tip:
`gem install rubocop`

`rubocop -a .`

`rubocop .`

Rubocop can teach you a lot.",1518776150.0
la_nirna,"Some already said some of these, but I'd like to make some things more evident:

1. BDD / TDD helps me figuring out if I get my intention right and slice the work in small chunks. I have a problem with overengineering and this helps me a lot not to do that.
2. SRP and tell, don't ask
3. methods should be not more than 5 (meaningful) lines long, this usually translates in 5 instructions top
4. naming is paramount: can I give a name that makes things explicit for this piece of code? if yes, extract (to a variable, to a method, to a class. it depends), if no I cannot clean it more.
5. read other people's code",1518777188.0
derrickcope,I have POODR and 99bottles. Can someone recommend some other good hands on books for practicing OOP?,1518760899.0
janko-m,"Having good knowledge of the standard library, especially the `Enumerable` methods, really helped me write more elegant code.",1518773327.0
violarium,"It's not a secret. People tell you about practice and they are right.

But also you should know that most of programming patterns and practices work excellent in Ruby as well, even if they are from different languages.

Learn them, try them, learn when to use them and when not to.
",1518763774.0
Trevoke,"Understanding the problem.

Understanding the language's idioms.

Writing tests.

Not DRYing up code that should not be DRY.

Doing it all together.",1518784256.0
iamsolarpowered,"TDD helps a lot. Red, green, *refactor*. Then refactor some more. Then dream about it and implement those improvements. Then refactor some more. That test suite will have your back.",1518769834.0
dearshrewdwit,"Great question!

Read up on SOLID, specifically SRP and probably encapsulation.

Read up on the BDD/TDD cycles to help write code as simple as possible.

Perhaps also use some kind of complexity metric together with a linter to get feedback on your code quality.",1518767527.0
Kendos-Kenlen,"Practice your Ruby and get to know the language very well. You‚Äôll learn methods and idioms that help you writing shorter code, while keeping it clean.",1518762947.0
neotorama,i don't write. no need to clean :P,1518771320.0
rubyrt," * Understand what you want to do on a more abstract level. There is quite a bit of code around that shows the author was not clear about his intentions. 
 * Separate aspects and subtasks cleanly into separate programming artifacts (classes, methods).",1518777532.0
TallSkinny,"Understanding that focusing on writing DRY code and succinct code feels great but can often make your code a lot less clean (or at least, a lot harder to maintain.)",1518791021.0
KronktheKronk,"Effort.  Hacking your solutions together is easy, actually putting in the effort to make them good is much harder.",1518793168.0
jodosha,Don't. It will happen over time with practice. Trying to force at the beginning and you risk to write non maintanable code.,1519800540.0
Zambini,"I used Codewars to learn the ""rubish"" ways (is that the word? ""Rue-bish"") for my last job. Now I use Ruby for personal stuff, so I get a little wet now and then but I really enjoyed looking at the community's top voted best practice answers. Even for the most disgustingly simple golf-style one liners I saw some exceedingly Dry and OOPy code written. It was enlightening.",1518764093.0
keymone,Clearly stating the problem in functional terms.,1518764124.0
,"I‚Äôve never used Rails without pry, and if you run your local with something like foreman, pry-remote is a lifesaver.

I‚Äôm currently on a project using Passenger with Apache, and it‚Äôs tiresome not having an interactive breakpoint to rely on for debugging.",1518759162.0
hmaddocks,"Being proficient with the debugger, byebug, pry, gdb, what ever, is one of those things that levels you up as a developer. ",1518763950.0
gaotongfei,"try pry-byebug https://github.com/deivid-rodriguez/pry-byebug as well

Edit:

i switched from a 'puts' debugger to a 'byebug' debugger after watching Jim Weirich's talk, Mastering the ruby debugger(https://www.youtube.com/watch?v=GwgF8GcynV0). If you are a puts debugger and never tried any debugging tool, you may want to check that video.",1518766814.0
isolatrum,"byebug and pry have saved me countless hours of debugging., but I also sometimes use pry for somethinng a bit more uncovnentional - command line applications. If you think about setting up a i/o loop and exposing your commands through a case statement - that's way more work than simply creating your lib as a standard ruby class and calling IRB or Pry .start ",1518855813.0
_asqrd,"Really has been a great week for ruby devs. Glad to see all the activity (DHH series is great, ruby toolbox back, etc) :)",1518763103.0
schneems,"How is this different than reposting the last week's /r/ruby content? There are a lot of Ruby link aggregators. I feel like if we keep allowing this one to publish, we should allow all of them, or do some kind of a meta aggregator aggregation post once a week etc. Other ones like http://wwwrubyweekly.com add content and context instead of just having the links.
",1518813705.0
jemminger,"One way is just to invoke the method:

    def ask question
      while true
        puts question
      end
    end

    ask ""What's up?""

$ ruby ./my-file.rb

or invoke with arguments:


    def ask question
      while true
        puts question
      end
    end

    ask ARGV[0]

$ ruby ./my-file.rb ""What's up?""

",1518748150.0
dineswithphone,"To have access to the file's methods from irb you will need to `load` or `require` the file:

    irb(main):001:0> load 'myfile.rb'
    irb(main):002:0> require './myfile.rb'

Then you can call the file's methods directly:

    irb(main):003:0> ask_question

",1518776569.0
stanislavb,It's going to be a good year for Ruby,1518738942.0
RushPL,I think it won't happen sooner than 2019. Let's hope I'm wrong. :),1518751246.0
dunrix,"Shouldn't be next major version rather *9 times* faster ? You know, 3x3 means 3-times-3 in our region and that's 9.",1518815451.0
disclosure5,"Bettercap is seriously underrated. With quite minimal Ruby knowledge, you can write this:

https://github.com/evilsocket/bettercap-proxy-modules/blob/master/http/rickroll.rb",1518730909.0
bascule,"There's also some pretty nice NETCONF libraries for network device (well, Juniper) config management https://github.com/Juniper/net-netconf",1518741443.0
busterbcook,"We wrote Ruby_SMB for Metasploit too, but it's also useful in general: https://github.com/rapid7/ruby_smb",1518750558.0
feelosofee,"You should add Arachni, a very good vulnerability scanner written in Ruby.",1518759018.0
d_impious,"MODS: please add these links to the side at least. postmodern even did great security tools which could be there too :)

This is one of paths for ruby for the next years.",1518947256.0
bitscraper,"I started this a couple of years ago.  Welcome any suggestions!

http://rubysecurity.info",1518757882.0
jrochkind,"I used to use a gem for letsencrypt on heroku, but it is now unmaintained and not needed -- because heroku does it for you (I believe even via letsencrypt,although it's ""white labeled""), for free. (Well, not a free dyno, but there was no way to get letsencrypt manually to work on a free dyno either. No additional price on any non-free dyno, including 'hobby'). 

https://blog.heroku.com/announcing-automated-certificate-management

I think on a _free_ dyno, you can't do SSL on a custom domain any way anyway, so you can't do letsencrypt yourself there either. and you don't need to do it yourself on a non-free dyno, just use the heroku feature. So there you go. 
",1518731777.0
ccb621,"SSL is usually terminated at the web server (e.g. nginx). Search for ‚ÄúHeroku SSL‚Äù. A cursory search of my own showed that SSL is only available for paid dynos. Either way, his should be part of your Heroku config, not the application itself. ",1518713330.0
d_impious,Another way is to use cloudfare and then point to your application.,1518714346.0
SkyPuncher,If you get an entry level dyno ($7/month) you can use [Herokus Automatic Cert Mangement](https://devcenter.heroku.com/articles/automated-certificate-management),1518720449.0
iconoclaus,"`sequel` is the workhorse for those of us who want an ORM independent of the Rails way. it has migrations of course, and an extensive ecosystem of plugins to boot.",1518709884.0
kmaicher,I would suggest: https://github.com/rom-rb/rom,1518705501.0
in0pinatus,"You can also use Active Record outside of Rails. It supports explicit column type mappings, migrations, and filling your models with a junk drawer of methods you probably didn't want.
",1518753194.0
khne522,Finally. I don't need to be on a a release candidate to work around a bug in the usage of minitest!,1518709947.0
SagaciousCrumb,I think 'released' is a bit of an overstatement since it's not on RubyGems or the Rails website yet. ,1518702400.0
chrisgseaton,"Are these interactive animations, or offline rendering?

Look at the optcarrot NES emulator, written in Ruby. It has a variety of 'drivers' for output the video from the NES, including GIF files, piping to mplayer, SDL, and SFML. All these drivers allow you to draw whatever pixels you want, so you can adapt them pretty easily.

https://github.com/mame/optcarrot/tree/master/lib/optcarrot/driver

If you want higher-level primitives for drawing lines and things, maybe look at ChunkyPNG.",1518695137.0
zverok_kha,"There are more or less obvious choices:

* use some image processing library (full-featured one, like rmagick or ruby-vips, not chunky-png suggested above)...
  * ...then save frames of animations as separate images and have some external tools to make a video of them
  * ...or make an animated gif from them, rmagick is able to work with those;
* use some 2D game library (they are not very numerous, but exist, for example long-present Gosu, or a new player named Ruby2D) and go with it for interactive animations.

Hope this helps.",1518767673.0
innou,Unless the source is sorted you're basically stuck iterating over the set checking if x is in range and if x passes check y.  If y passes the coordinate is added to the result.  If either x or y isn't in range skip to the next,1518709903.0
claytonkb,"Sorting is O(NlogN) while scanning is O(N) - you should scan, not sort. As specified, the most straightforward solution is to scan the array *once* and store the result as an array of references. I'm new to Ruby so I don't know how you do this in Ruby (I'm sure it's quite simple) but in Perl you would simply check the x and y values for each row of the CSV array and you would add a reference to that row in a new array if it is in the given bounds. In pseudo-code:

    j := 0
    csv_array := [ [x0, y0, val0], [x1, y1, val1], ... [xn, yn, valn] ]
    csv_array.foreach(i):
      if(csv_array[i].x < upper_x and csv_array[i].x > lower_x and
         csv_array[i].y < upper_y and csv_array[i].y > lower_y)
         result[j] = ref csv_array[i]
         j+=1
      endif
    endfor

Note: csv_array[i].x is the hash equivalent to csv_array[i][0] (array-of-array) for the format you specified in the OP

For absurdly large datasets (gigascale or more), there are faster approximate methods.",1518729324.0
banister,Very cool!,1518653400.0
ylluminate,"/u/chrisgseaton & /u/nirvdrum might be curious with the results of this.

Thanks for sharing.",1518654837.0
geraldbauer,"FYI: Trying to collect a list of Ruby 3x3 News & Articles @ Planet Ruby, see https://planetruby.github.io/calendar/ruby3x3  Just added ""Ruby's New JIT"". Cheers. Prost.",1518724626.0
cogman10,"Are they going to be able to compete with Graal though?

Maybe this is a stopgap step but it seems like ultimately once Graal hits the JDK there doesn't appear to be a reason not to focus on pushing for it as the primary runtime.  And as a bonus, you get the Java ecosystem + all the really nice Java GC algorithms.",1518647695.0
disclosure5,"I'm surprised at the suggestion this will be in 2.6.

What would be a big enough to move call 3.0 if not this?",1518674423.0
tf2ftw,"Just to play devils advocate, using ! in a method name is one of the ways Ruby was built for the developer to be able to use an expressive programming dialect. If the community set a convention around it then it should be respected. That being said, I don‚Äôt use it due to the possible imbaguity of what ! _could_ represent.",1518651576.0
solak,"I see some value in this gem (currying), but I think that overriding built in `#method` method is not a good idea.",1518610782.0
bjmiller,"Why isn't the `&method(:blah)` idiom more widely used now? If you are shy of using that idiom, would a different way of writing it change your mind?",1518624399.0
banister,"Binding of caller AND method missing? Way too much magic and I bet it's slow af. Interesting, but I'd never ever use this in production ",1518895292.0
realntl,"Interesting article. There was a point about microservices and ""Monolith first"" that I want to address. From the article:

> Now if ‚ÄòPayments‚Äô was its own Microservice we wouldn‚Äôt have this bug at all. The order.pay! part of the code would belong to the Payments Service, which means the two database transactions in the above code snippet would be independent of each other since they would be created by completely different processes running on separate boxes, thus automatically providing the necessary decoupling of the transactions.

Beware. If all of these operations require a lock (i.e. a database transaction) in your monolith, they will never be able to be extracted out into separate microservices. If multiple independent microservices could safely coordinate this process without a transaction, then you could also safely remove the transaction from the monolith. In fact, code that depends on a single database transaction to coordinate updates to multiple tables can't _ever_ survive a transition to microservices, because service architectures offer no direct equivalent of SQL transactions. OTOH, there are approaches to coordinating multi-step processes that don't require transactions at all, and they work just as well in a services architecture as in a monolith. I would strongly recommend y'all investigate them if you ever want to implement microservices. I can provide resources if you're interested.

Consider the code snippet from the article:

    def pay!
      paid = StripePaymentProcessor.charge(this, balance_due)
      payment_status = paid ? ""successful"" : ""failed""
      order.payments.create(amount: charge.amount, status: payment_status)
      paid
    end

Let me pose two questions:

1. What happens when `StripePaymentProcessor.charge` fails, because the HTTP response never arrives (for instance, a network split happens). How do you know if Stripe processed the charge or not? If you _can't_ know whether Stripe processed the charge or not, how do you handle a network error such that the user eventually winds up getting charged once (and only once)?
2. What happens if `order.payments.create` fails after we charged the customer via StripePaymentProcessor? We'd have no local record of the payment, so if we attempted to retry the whole logical operation, we would likely attempt to charge the customer _again_!

The first question is really about the complexities of inter process communication, and it's exactly the sort of question you'll start having to ask about your own services if you ever attempt a service architecture. The second is about the notion of _authority_. Stripe is authoritative over who was charged what, since they actually collect money. Your internal records of payments is demonstrably non-authoritative, because it can quite easily become inconsistent with Stripe. A general rule of thumb that will almost universally hold is that business logic should never make use of non-authoritative data. All you'll do is bring pain upon yourself, as the code will appear to work fine as long and even survive rigorous testing, but the moment the production environment or network experiences a hiccup, you will be thrust into extremely difficult debugging sessions and even more complicated data cleanup operations.

If you _ever_ want a services architecture, you must be extremely cautious about leveraging database transactions in order to maintain consistency in your monolithic database. If you want to exploit the unique features that monoliths offer, I suppose these transactions can simplify your implementation greatly, at the expense of being effectively impossible to scale after a certain point that you might not reach. Just don't be under the impression that you can ever get to microservices without knowing exactly what service architectures demand of your implementation. An ORM based monolith is extremely dissimilar to microservices. For instance:

    def checkout!
      Box.transaction do
        box.create_order!
        add_items_to_order
        raise ActiveRecord::Rollback unless box.order.pay!
        box.mark_as_paid
      end
    end

The fact that `checkout!`, the method that kicks off the checkout process is on the `Box` model is an artifact of using an ORM. The fact that we have to jump from the `boxes` table to the `orders` table to charge the customer (i.e. `box.order.pay!`) is another tell; your ORM associations are _exactly_ what you can't bring with you when you build services. Instead, you'll need to introduce boundaries within your monolith. `box.order.pay!` is crossing from the Box model to the Order model -- that means there's no boundary between the two.",1518711694.0
prh8,"I saw there were 49 comments on this post and got really excited for the technical discussion I was about to read. Then I discovered that not a single comment was even about the article, let alone mruby. ",1518620344.0
blueflame9t9,Serious: Why use mruby when you could have containers like Docker sandboxing and completely isolating your environment for you?,1518620943.0
schneems,"Props to Shopify for this. If they could get rid of Neo Nazi‚Äôs on their platform they would be one of my favorite Ruby shops.

Edit: Not sure why getting downvoted. Downvoting me isn't going to  make Shopify stop hosting Breitbart any faster. Also my praise for their OSS contributions is serious, they fund Diesel/ActiveRecord and BootSnap just to name a few. My statement was completely serious. If they got rid of Breitbart started to to honor their AUP, they would be one of my favorite Ruby shops.

",1518571452.0
theGalation,"Completed Part 2, building an application top-down testing! Excited to get some use out of the bisect flag and learning more uses for meta-tags.

Appreciate any feedback.",1518560858.0
Arrio135,"Limit the scope of your tasks to a certain number of records. 

Scale your jobs to many workers that have limits on the queries and persist the processed_at datetime.",1518578929.0
rubyroobnoob,"Looked more into Procfiles and adding a worker specification to run the multitask seems to be working. 

    worker:  bundle exec rake streaming:all

Here's to hoping it's stable long-term.

Edit: Only some of the rake tasks are responding...",1518559045.0
dr_jumba,"Quite rarely in general, especially for RoR. Even rarely in the mature RoR project.

I'd say sometimes in non RoR code, like tools, service scripts, etc. 

Rather often in writing own gems, e.g. building a custom API wrapper.",1518546738.0
i_dont_like_reddit_6,"Depends on the project, really. When I'm writing library code I use metaprogramming constantly. When I'm writing program code, not so much.",1518550053.0
jjgator84,Not using it directly but reading the source code to figure out what the heck was going. The gem was RSpec. It's a clusterfuck of metaprogramming.,1518558264.0
sshaw_,"Fairly often, but in most cases it's the exception and not the rule.

To avoid repetition:

    def cleanup
      %w[foo bar baz].each do |name|
        puts ""Cleaning #{name}""
        SomeNamespace.const_get(name.capitalize).clean_up
      end
    end

Though my friend, who is not a fan of this sort of stuff, summed it up very well:

> The goal is to make maintainable code, not most compressed as possible

Sometimes I do this in RSpec:

    ["""", nil, ""     ""].each do |val|
      context ""given an value of '#{val}'"" do
        it ""does something"" do

        end
      end
    end


Or (sometimes) in lieu of a case statement when defining a factory method. Basically dynamic constant lookup.

Creating DSLs:

* https://github.com/sshaw/class2
* https://github.com/sshaw/yymmdd
* https://github.com/sshaw/optout 

In this case it's definitely the rule. 


",1518566546.0
chrisgseaton,"In my experience almost any non-trivial gem uses metaprogramming, and the Ruby ecosystem itself is fundamentally built on a huge volume of metaprogramming - it's pretty much impossible to load anything from the standard library without metaprogramming.

I really like Ruby's metaprogramming functionality, but I do acknowledge if there's a simple way to do something instead you should prefer that, for the sake of understandability and tooling.",1518542899.0
zfundamental,Very extensively. One of the recent ruby projects that I worked on involved translating from QML (without the javascript) into ruby objects. There was plenty of instance_eval() in that process.,1518547627.0
jrochkind,"I'm not sure how one decides what examples of ruby programming are ""metaprogramming"" and what aren't. ",1518554937.0
9rometheus,"Rarely and in any shared project, never. 

The tradeoff in meta-programming is usually DRY-er, but less readable code. I prefer writing code that's easy for the next guy or gal to understand.
",1518589089.0
pavlik_enemy,It's quite rare though I had to implement arbitrary forms with schema stored in database multiple times so I've created classes derived from ActiveModel in runtime.,1518598490.0
Serializedrequests,"I do it now and then, most commonly to create an ActiveRecord macro, or some small DSL. (For example, a class method that defines an instance method.)

Granted, it is better to solve the problem in an OO way first. Not everything needs to be a DSL or a macro. In ActiveRecord, I am just usually doing the same very specific things: normalizing and transforming individual column values before they become a row in the database.",1518613027.0
janko-m,"Note that gems for this already exist: [as-duration](https://github.com/janko-m/as-duration) is an extraction of `ActiveSupport::Duration` from ActiveSupport (like your gem), and [time_math2](https://github.com/zverok/time_math2) is a version of that without monkey patching.

But creating a gem is always a great learning experience :)",1518538448.0
metacontent,"I think Ruby/Rust is definitely the way to go, and I think that in the future we're going to see a lot more of that as opposed to future projects developing a Ruby/C system. But that's just my opinion. ",1518555378.0
jodosha,I shared my experience with Helix here: https://blog.dnsimple.com/2017/05/writing-ruby-gems-with-rust-and-helix/,1518812196.0
awj,"Granted, I have no real experience with this, but wouldn‚Äôt dueling garbage collectors in a Go extension to Ruby be a *really* hard problem?",1518531792.0
ehsanul,"I've used ruru rather than helix, was much more mature at the time but not sure if helix has gotten better since. It has worked out pretty well. Anything in particular you want to know?",1518666906.0
notmymiddlename,"I'd love more of these type of videos. It's interesting to hear another developer work through trade offs in code. I know for myself, I wouldn't have put that constant under private without `private_constant` as it's misleading, even if private is really just a suggestion in Ruby anyway (`#send` vs. `#public_send`, etc).

I would be really interested to see how basecamp organizes more of their business rules, authorization, etc. I feel like DHH is middleman adverse, which goes against what most Ruby bloggers seem to be writing about the last half decade or so. Part of the reason I suspect is that Rails is his framework. He has less of a need to wrap dependencies to protect himself from change as he is the final say on changes anyway.",1518539107.0
anonymous_subroutine,"Seems like grace period ought to be a configuration parameter in the application's configuration file, not a  constant declared right before you use it. Other than the self-documenting nature of the constant, the new version is not better than the old one.",1518569438.0
,"https://ih1.redbubble.net/image.273313228.1479/raf,750x1000,075,t,fafafa:ca443f4786.u1.jpg",1518491662.0
Tcpdumper82,"I was in the same boat as you are and had to learn python at my current job after coming from a ruby shop. I‚Äôve consistently been writing it for a few months now and can honestly say it it definitely gets easier but still slightly frustrating at times. The way you manipulate objects is a little awkward compared to ruby, but you can still apply the same logic to get the job done. 

Map, reduce, select, reject, and collect all exist in python but not immediately obvious as methods for those objects. The confusing thing about python is figuring out which function is called via the dot method and which is called by wrapping your object. 

List and dict comprehensions ironically are less comprehensive when you read them compared to ruby and get to near Perl like mind fuckery as they get more complex. One liners begin to feel like pissing contests sacrificing readability for cleverness and it‚Äôs usually better to avoid them altogether. 

In the end, you have to adapt to your environment and use the right tool for the job. Don‚Äôt limit yourself to one language even if it feels like you are crawling instead of running. ",1518502158.0
PercyLives,"I can't help, I'm afraid. I'm forced to use Python for Informatics training (this is a hobby, not a job) and it's forever frustrating. There are a few things I like, but...

I wish Ruby had Python's list/sequence comprehensions. It's worth getting used to them. But yeah, not having map, select etc. as reasonable options (i.e. Method chaining) is a real pain.",1518500515.0
encaseme,"Dude, I'm in the exact same boat; rubyist writing python for devops role.

You've hit the nail on the goddamned head :) I feel like I write python begrudgingly every time, haha. I'm constantly having the feeling ""this would be so much cleaner, nicer, easier to read in ruby"". But it's a Python shop; and for whatever reason all of the python folks look down on Ruby? Not sure why.

About list comprehensions: I've found just avoiding it and writing a for loop is much more legible and ""pythonic"". Trying to achieve ruby's map/select/reduce in python just doesn't work that well. I had written a library to reproduce the functionality but my coworkers weren't thrilled with it, haha. I do admit I was just trying to make python more like ruby. 

I do actually like python's import system more than Ruby's (You get to decide the scope of how 'heavy' the import is), but actually trying to get things to import in a sane way is much harder. Gemfiles are so much better than requirements.txt. 

Dat global scope; ugh. Yeah I totally get the PHP feeling of that, haha. The crazy thing to me is that len(x) is just calling x.__len__() behind the scenes... the ""magic"" methods could just be ""actual"" methods and less global scope pollution. 

At the end of the day though, it's a job. Python on its own isn't that bad, I've just been really spoiled by Ruby. I think Python is more common ""in the wild"" so, it's a bit of an uphill battle. So, I don't have much good advice than that. ",1518540073.0
while1malloc0,"The initial ""what the hell"" feeling works both ways. When I first started at my current position, going from Python to Ruby, I couldn't for the life of me figure out why anyone would would want to write in a language who's object model was so loose that you could monkey patch String just by redeclaring it. After a few months of writing it and learning some good practices and patterns I figured out why people like it so much. My guess is that that might happen to you as well given enough time. You might come to appreciate the syntactic sugar of decorators, some of the more functional aspects of the language, the safety of not having the primitives of the language easily mutated, etc. You might never get used to the shallow variable references though; after writing some Ruby for a while those strike me as a really odd design choice. Likewise, pure OOP in Python leaves a bit to be desired. 

For your data munging, have you looked into ipython notebooks? They're a great way to play around with code in a real editor and get REPL-like feedback. ",1518488020.0
schneems,"I have a blog post about this, kinda https://www.schneems.com/2017/10/17/i-know-how-to-code-i-can-code-in-anything/

I'll also say that, I code in python regularly for OMSCS class now and it doesn't bother me. It will never feel as good to me as Ruby does, but that's okay. It's a different language with different design goals and if those design goals are good for the problem you're working on then you should use it.

",1518493455.0
Paddy3118,"Python is another language. It has its own idioms that are much more consistent within themselves than across language boundaries.

Coming from another language, it can be hard to give up some things that ultimately make it harder to learn the new.

When it's the fifth, or the tenth language you are learning then you might have learned to ""go with it"" for a while longer, with an eye on your ultimate goal.",1518493782.0
,"The Python object model is not the same as Ruby or PHP.  The day you get the object model and undersand Objects work like interfaces kindof you will love it! 

All operators can basically have a custom implementation, so you can do some random class like Vector and add two instances with + or multiply them with * etc.

This is why some functions are not glued to the instance. its super powerfull when done right.

importing stuff is also a good thing. You dont want random stuff in global scope (like PHP does)",1518537824.0
LegionSB,"Python is fine.

The only thing I think is really wrong with Python is the mess of package/dependency/environment management, as opposed to ""it's just RubyGems + Bundler"".",1518549199.0
riddley,">Python's preferred list comprehension is incomprehensible coming from select/map/inject/reduce/etc.

*hugs* I am here with you. You are not alone.",1518550274.0
testcore,"Made the same switch... I'm with ya. At least with ruby, there's always the fallback of ""it's an object"". Python... Not so much. The rules don't hold up intuitively like ruby.

That being said, chef is still quite common in certain devops shops... Python's a good pickup for the job, but don't forget ruby!",1518495315.0
Mylanok,"I'm a ruby lover, I really think it's one of the best languages and I love the community around it.

Had to get into python for a data-science product. Surprisingly i ended up really liking it too. I also love django & rest api framework and even think it's better in some cases...

I guess you'll just get used to it, give it some love!",1518517107.0
Serializedrequests,"I like the explicitness and forced simplicity of python. It made me a better programmer when I first learned it. You kind of just have to do things differently and KISS. (Of course you can easily write a rat's nest.)

Decorators are alright.

I also appreciate the package system inasmuch as Ruby doesn't really have one. Ruby reminds me of old Javascript code I wrote, where I would namespace my functions in GlobalObjects.

I have the same complaints though! List comprehensions are needlessly incomprehensible compared to functional operations in other languages. I don't understand what the thinking was behind such a confusing syntax in an otherwise simple language, or why I can't chain functional operations on collections.

I can never remember what is a global function and what is a method. (I read an article on why Python has functions like ""len"", and I disagreed with the reasoning. All it has ever been for me is a ""gotcha"".)

All the special underscore naming crap feels very legacy. (Not that Ruby doesn't have similar cruft, so that's kind of nitpicking.)

The package management is desperately confusing to a newcomer, with no good articles explaining the whole thing conceptually as to what does what, just telling you to type some easy_install pip magic without explaining what anything is or how to work with packages in the real world where we need to lock to a version and redistribute them. E.g. in Ruby, ""gem"" installs gems, but doesn't manage versions. ""bundle"" requires the specific gems your app needs, and locks them to specific versions using Gemfile and Gemfile.lock. If someone could write those two sentences about Python package management I'd be over the moon, but it's always just ""pip this"", ""pip that"".",1518528745.0
otikik,"I have done both. I prefer ruby, but I didn't get ""disgusted"" by python. I found some things that I liked in Python as well. I remember that configuring my editor to deal with both Python and Ruby was a bit of a pain, but it was worth it.",1518539586.0
,My issue with python is white space mattering,1518485788.0
stympy,"Well, you could always install ruby in every ansible playbook that you have... that's what I did. :)",1518483710.0
whatadipshit,"Give it time. You‚Äôll get use to it. A lot of people are saying map doesn‚Äôt exist in python. It does along with a lot of other powerful builtins. Also, white space errors should be easy to fix. You‚Äôll need a text editor that inserts spaces instead of tabs. I‚Äôm surprised to see so many people complaining about that here. I probably haven‚Äôt seen that error in over a year. ",1518508414.0
menge101,"Yep.

I have done both professionally and personally, both have their strengths and weaknesses.",1518528878.0
thyliamris,">  not everything is an object (writing len(foo) reminds me of PHP)

In terms of global functions, which are no object's methods:
Function len(x) is global function (no object's one) because it doesn't change objects state. It doesn't return this object. It returns int. What I mean - python is object oriented but some functions are not connected strictly with objects. The better example is sorting function.

You can use x.sort() or sorted(x). What is the difference? The first one returns the same object but with sorted values. The second one returns new object with sorted values. So the first function is object;s method because it operates on objects state, the second is global function because it doesn't change object. That's the easiest way to understand such functions like len() sum() max() min() etc. 

Despite this distinction all of them return values of object's method __len__() __sum__() etc. You can ask why not to use x.len() then? Because you can have your own class that inherits list type (to have default list behaviour and methods) but you want to have your own implementation of calculating length (ie. only odd values for some reason). You can write sum() method and still can use default sum(x). It's not that bad as it looks.

> you have to import everything

python is explicit language. If you use some function or class you just import it first. I don't see anything bad and strange here.

> the fact that Python is multiline whitespace is a full-frontal lobotomy compared to multiple ways of writing blocks

I think you also intend your code for readibility. What's the problem here? That's the funniest plea to python language. Everyone intends code. Dot. In python it's part of language syntax tah saves from using END's and braces.

> sugar like foo = 42 if ....

Man, that;s the beauty of python. List comprehensions, maps, reduces, lamdas. It's so much simple to read and write. Sorry but list comprehension in ruby?:

    some_array.map {|x| x % 2 == 0 ? x * 3 : nil}.compact

eee... :|

>  especially when it's a few levels of indentation in

If you have to much indentation levels it means your code is bad despite the language you use.",1519295553.0
shevegen,"> Has anyone else experienced something like this and can
> offer some advice, or should I just say fuck this, fuck
> the stock options, and move on?

I had to take a python course in university some time ago.
It was ok ... ruby is better but python is alright.

My biggest problem with python is still explicit self. I can
not forgive this choice. It really boggled my mind why I
got errors in python, until I realized I forgot to pass
(self) into a method ... it's annoying.

The rest, well. To be honest, I think the net differences between
ruby and python are not that huge. They have similar niches and
they are similar in many ways. The biggest difference by far is
still the philosophy. Here, I also like ruby's philosophy a lot more.

Python has a few strong points that have nothing to do with ruby
per se. More users - that in itself is a pretty strong advantage,
simply because you will have more resources available.

I know of various C++ apps in bioinformatics where only one 
scripting language is used. This is these days almost always
python, sometimes lua and almost never ruby.

I know several university courses in python but none in ruby. :(

I do not think that it has anything to do with python being so 
much better than ruby (I would not know why), but simply
because python is better than perl and php, and easier than
C/C++/Java, so it is used, in particular for technical curricula
without a major in informatics (so guys who study process
engineering are more likely to use python than C/C++; only
exception are micro electronics people, who actually use
C/C++ in their courses; pretty interesting).

Some of the problems you describe appear to have more to
do with your editor. Perhaps you need another one. :P

> I used to be able to be able to try out all sorts of code in irb
> writing all manner of gobbledygook to work with my data and
> then move it over to the editor, clean it up, and call it a day. 

I do this too quite a bit in ruby.

Perhaps you need an editor like geany with ""embedded"" vte
terminals on the bottom (tab). Then you can write the code above,
and have irb on the bottom and switch easily in the same
window/pane. (Geany is just one example; I guess there are more
editors or lightweight IDEs with similar functionality).

I tend to use a lot of aliases and ruby scripts to help me 
add/change code, and use terminals with tabs. (Usually I use
KDE Konsole but since I am also using mate, I use mate-terminal
these days, which is essentially a fancified vte; it's quite nice, not
as nice as KDE konsole but I am getting tired of the KDE ecosystem
getting more and more useless apps and more and more bloat
and qt getting bigger and bigger without really giving me anything
in return other than more bloat).

Anyway to conclude - I think it is possible to use both ruby and
python. They are not that different in my opinion. OOP in ruby is 
much nicer and better though IMO.",1519043109.0
khne522,"Yes, the global scope thing is a bit inconsistent, but convenient. Same with the casing of builtin types.

And yes, you should import things explicitly. Autoloading can be evil. Did you come from Rails? Have you ever tried to do a decent module hierarchy in Rails, or was it all flat? I can't remember where some conflicting names, some from gems, came from, or how they resolve, but I can for Python because it's explicit.

Stop grumbling about it and try and understand the rationale, and the limitations whence you came. Advantages are obvious if you're used to them.

And was it plain `irb` or `pry`? IPython can be decently interactive if you are familiar with its reimplementation of `readline` line editing. The only thing I miss from `pry` is auto-paging.",1518638120.0
braindongle,"Can't include brackets in YouTube descriptions...

:imap <C-b> <Space>{\|x\| }<esc>i",1518478522.0
menge101,"Wouldn't you just apply two filters to the given collection of possible birthdays, one for day, one for month?

Is there something more significant here?

Is this a multi-processing problem and I'm missing the 'why' of it?",1518537001.0
jemminger,Aaron is awesome,1518474679.0
paneq,Lovely explanation and great effect.,1518515065.0
stanislavb,It seem the next ruby version will bring some good performance improvements on the whole...,1518517147.0
zfundamental,Unless I'm mistaken this spam was already spammed to this particular subreddit and deleted. I guess that means that the OP has gotten stuck in a loop.,1518466235.0
kevinero851,"How the thing works:

In ""main"" you can call or text your friends just as skype or icq.

when you are in the app, you need to put informations in your profile
about (age, gender, location, first language, second language, knowledge of).

""notifications"" is where you receive notifications !
it's a message.

""people"" is the list of all that are online


Lets say have a question about nebuchadnezzar.
You go to ""people"", use the filter and select ""knowledge of history""
after applying the filter, you find 32 000 matching people out of 500 000 online. 
you send a notification to 100 of them,
they will receive the notification and will reply to you, also by notification
or by instant message or by calling.
From the 100 people , there will be like: 
60 don't know nebuchadnezzar.
10 know nebuchadnezzar somehow.
10 know him well.
10 know nebuchadnezzar quite well.
10 know nebuchadnezzar very well.

last step: call them and enjoy your instant answer !



Let's say you did not understand a whole field (chemestry for example). Quora and google makes you search, search, post messages and wait a long time for a reply that gives you a short text. Quora and google makes you read a ton of things. All by yourself. At the end of the week you did only a little bit of progress. This is long, lonely and painful. This program makes you call immediatly with skilled HUMANS. You just sit, relax and enjoy talking to them, they will be dedicated to you to make you master the field. isn't it right ?


Plus. Here you can meet new people, socialize, share languages and many other cools things",1518465755.0
zverok_kha,"Because world obviously NEEDS one more ""5 lazy links from this very Reddit to get attention to our commercial we site"" digest, right? ",1518467999.0
petercooper,The first four links are just links to *other* Ruby news digests üòÇ,1518633350.0
aemadrid,[Hyperloop](http://ruby-hyperloop.org/) - it's the closest thing to meteor and it is actively maintained. Reach out to the [gitter room](https://gitter.im/ruby-hyperloop/chat) for more info.,1518457361.0
menge101,"[Action Cable](http://edgeguides.rubyonrails.org/action_cable_overview.html) is part of Rails.  

But you might be able to use that gem on its own.

In fact there is [this part of the docs](http://edgeguides.rubyonrails.org/action_cable_overview.html#running-standalone-cable-servers), that talks about running a standalone Cable server.",1518459071.0
ylluminate,"[Volt](http://voltframework.com). It's been in a little hiatus thanks to the developer having some [amazing success](https://www.kickstarter.com/projects/2092430307/arsenal-the-intelligent-camera-assistant-0/) in another startup, but it's not forgotten or dead. From what I'm understanding it's going to be back to full development status soon.",1518455349.0
GDP10,"The [Volt framework](https://github.com/voltrb/volt) is in much the same vein as Meteor. It even had some things that Meteor didn't, I think. Unfortunately, it hasn't been developed for a while since, in the developer's words, ""it wasn't paying the bills."" Hopefully it will come back again someday or someone else will take up the torch of maintainership.",1518462668.0
Serializedrequests,"Sinatra is extremely far from being Meteor. If I understand correctly, Meteor gets a lot of its magic from being Javascript all the way down, and builds a lot of crazy functionality on top of web sockets. You can get web sockets in Rails using ActionCable, and other languages have great support as well. They just don't offer a complete UI framework based on them.

Meteor's use of MongoDB, not being based on JavaScript, is what has so far made it a complete non-starter for me.",1518616149.0
spinlock,Not Ruby but Phoenix is a fantastic framework for web sockets and pub sub. Elixir looks like Ruby but you‚Äôre still going to have to learn a new platform üòï,1518470092.0
4rch3r,"While I believe you got help solving your exact issue, it is worth exploring other possible solutions to your problem.  In general recursion is not recommended for most problems since you are limited by Ruby's stack: the amount of function calls you can nest inside each other is comparatively small and finite.  

Luckily in your case 'reduce' is the perfect function that you can use that is native to Enumerable: api docs https://ruby-doc.org/core-2.1.0/Enumerable.html#method-i-reduce.  In fact you'll find that throughout your ruby experience reduce will be used quite regularly when dealing with arrays (arrays include the Enumerable class).",1518456192.0
jrochkind,"Try running through the code yourself as if you were the computer, with an array of two or three elements. Or better yet, start with an array of one element. ",1518460485.0
chrisgseaton,"> `# Isn't sum(numbers_array) an array? `

No, the sum of an array of numbers is one number.

> there is no way for me to print that sum(numbers_array) value to my screen

But you have this already - `p sum(numbers_array)`.

Edit: this may be confusing for you because you are modifying the array each time you call `sum`. Try instead

    return 0 if numbers_array.empty?
    number = numbers_array.first
    rest = numbers_array.tail
    return number + sum(rest)

Then you aren't modifying the array and can run things as many times as you want and you can print the intermediate values like `sum(rest)` without them causing side effects.",1518441287.0
niborg,"I don't like the pattern of using a class method to invoke the service -- it seems that this is designed to avoid ever using an instance of the service, which I'm guessing is because of the stated ""one API method"" per service rule. I agree an API for a service should be limited, but it would seem more straightforward to return true/false for `call`, and use another method to retrieve an error code in the event the service is not successful. Seems like this approach trades the simplicity of one API method for complexity in what it returns -- every service in an app only publicly responds to `call`, but can return who knows what. Does that make it simpler?",1518454959.0
pawurb,Thanks a lot for all the interesting comments and discussion. I will try to incorporate your tips into how I work with service objects.,1518476528.0
metalelf0,"Have you considered passing callback functions to the service objects instead of reading from a result data structure? I usually write something like `ServiceObject.new(repository: repository).run(first_arg, second_arg, success_callback, failure_callback)` with lambdas defined in the caller context. ",1518512596.0
verbachok,"The benchmark was done on aws micro instance, which is inconsistent by definition and is bursting on occasions. 

I'm not saying this is 100% reason for it, but nobody runs a benchmark on a micro instance for this reason..",1518422552.0
BoWild,"My 2¬¢ (apologizes for my social carelessness):

1. 100 threads for testing? on a single core AWS micro instance? Why? The code might be spending more time in context switching and memory allocation locks than proper testing... `wrk` is being bottlenecked.

2. And a thread per client design? That's more than a Megabyte overhead per client before you even started processing a single request. At 1000 clients you'd be looking at a Gigabyte overhead just for the thread stack memory.

    No wonder EventMachine and node.js are both faster. I'm actually surprised by how well the server is performing at 1000 concurrent clients (hell... I'm surprised it didn't crash and by the fact that it isn't parsing HTTP headers, meaning these result ignore keep-alive semantics, which is nicely impressive).

3. Why are you benchmarking in keep-alive mode?

    On one hand, the keep-alive mode actually benchmarks the application (rather than the system's network layer).

    On the other hand, this is a redirection server that will probably get called once per connection.... so testing without keep-alive is probably closer to production metrics (i.e. by providing the header `connection: close` or by using a benchmarking tool that defaults to single request per connection, such as `ab`).

4. Why not use something like `iodine` or `puma` - you could probably get a benchmark indicating tens of thousands of req/sec... 

    Thank again, without keep-alive they all perform almost the same. So maybe your approach is better.

5. I'm assuming security is a non-issue, since the worst risk for the server seems to be slow clients at the moment, and both threading and EM should protect against that...
",1518442165.0
CNDW,"Node isn‚Äôt optimized for multithreaded processing out of the box, I suspect that there is a lot of extra overhead involved with each thread slowing things down.",1518445858.0
spitlets,Link to code and a description of the issue?,1518417588.0
NextImpact,"try to google ""ruby gem devise""  and study it.
GL
",1518417609.0
lucas_dohmen,"Hi, I'm the creator of Halunke. AmA, I guess :D",1518432599.0
yoshida23,"I played with Halunke and got some (very, very basic) web ""framework"" running. Something in the sense of Sinatra. Would be nice to work on that: https://github.com/railsbros-dirk/tausendsassa",1518461247.0
dev0urer,"My question is, why Ruby? I love Ruby, but the language is already very slow. If you went with a compiled variant like Crystal instead you'd see a huge performance increase.",1518443930.0
colindean,I love Smalltalk-style method parameterization. I wish more languages did it like that.,1518411785.0
,Thats cool! ST like msg passing! Like oop was originally ment to be!,1518416493.0
sblinn,This looks kind of like what you might get if you added Pony and Ruby... very interesting.,1518447056.0
RevisedStew,"Late, so I'll take a proper look tomorrow, but at a glance (so apologies if I've misunderstood!) I love the way you can make multi-word message names and have the words split across arguments. Really makes the code look a lot more readable, and I'd bet that it would increase mental retention of library message names. Awesome idea!",1518411086.0
cray4K,Looks awesome. Getting 404 on the Class/Function links though :(,1518416917.0
iconoclaus,"Intriguing and addresses a lot of timely concerns with OOP in Ruby, and in general.  I would really like it if you'd detail each of the benefits mentioned at the top of the intro on a different page of its own:

> - Separation of identity and data (but not data and behavior)
-  Immutability and persistent data structures
- Isolation of Side-Effects
- Pattern matching",1518427475.0
--zt,Could we have /r/halunke please?,1524982014.0
hugedino,This is the second subreddit you've posted this in. This is not on topic for this sub unless you've already got ruby code working.,1518391609.0
kevinero851,"How the thing works:

In ""main"" you can call or text your friends just as skype or icq.

when you are in the app, you need to put informations in your profile
about (age, gender, location, first language, second language, knowledge of).

""notifications"" is where you receive notifications !
it's a message.

""people"" is the list of all that are online


Lets say have a question about nebuchadnezzar.
You go to ""people"", use the filter and select ""knowledge of history""
after applying the filter, you find 32 000 matching people out of 500 000 online. 
you send a notification to them,
they will receive the notification and will reply to you, also by notification
or by instant message or by calling.
From the 32 000 , there will be like 15 that know the subject very well.

last step: call them and enjoy your instant answer !
",1518390732.0
Seuros,"This look pretty cool.

pinging /u/mperham ",1518391189.0
bacon_without_cause,Wow,1518413546.0
mperham,"Great screenshot, looks lovely.",1518402525.0
zverok_kha,"From how it looks, I'd say it is not a ""port"", but an ""imitation"" (following Clojure's, not Ruby's, intuition and idioms). Nice exercise, but probably not really practical. ",1518384760.0
izeisler,I just added a video for this tutorial as well.,1518456451.0
PercyLives,Awesome; thank you. ,1518425275.0
BilalBudhani,"Hello, Redditors, 
I'm excited to share that I'm writing an ebook about building GraphQL powered applications in Ruby On Rails. Please drop your email to receive regular updates on the book progress. I'll also share early drafts and chapters to get feedback from the people interested. 
Thanks, ",1518357543.0
kuhcd,"Looks interesting!

Just a note: 

> Handling data creation & updation

""Updation"" is not a word. Maybe just say something like ""Handling data CRUD""?",1518380765.0
ryanlue,"`require './path_to_folder'`

This is the first place you're going wrong. You don't `require` a **directory**, you `require` a **file** (minus the `.rb` extension). Typically, the file you need is `<gem_name>/lib/<gem_name>.rb`.

But if you look inside that file, you'll find that it requires all the other files that the gem consists of (see my blog post on [how to build a gem](https://ryanlue.com/posts/2017-02-18-how-to-publish-a-gem#everything-under-one-roof)). These require calls probably don't use `require_relative` or the `require './<path>'` syntax, so it's going to fail because the gem's `lib/` directory isn't on your `$LOAD_PATH`.

So the naive solution would be to add it to your `$LOAD_PATH` and then require as normal:

    $LOAD_PATH.unshift('<path_to_gem's_lib_directory>')
    require '<gem_name>'

But a better way would be to [use Bundler](http://bundler.io/v1.12/git.html):

    # Gemfile
    gem '<gem_name>', github: 'user/repo'

and then when building/debugging/running your program, prefix every command with `bundle exec`.",1518328175.0
JustinAiken,"Using a Gemfile IS the best way, but if you really don't want to, try require_relative instead of require",1518308140.0
chrisgseaton,"Clearly hashes are slower than sorting an array for this sized input.

To explain why you'd have to dig into the source code of MRI, but it doesn't particularly surprise me. Does it surprise you? The fact that you've written the algorithmic complexities next to the different algorithms makes me think you do and that you think the complexity tells you that.

That's not how algorithmic complexity works. You can't look at the algorithmic complexity of two algorithms and say one will actually be faster than the other based on that.

First of all, these algorithmic complexities deliberately ignore constant factors. The constant factors could be very significant. Second an algorithmic complexity like that doesn't take into account anything about how processors and software actually work. For example, how do you know what algorithm MRI is using in that sort operation? What if it's using bubble sort? And what about the effect of an array likely fitting into cache but the hash table likely being fragmented so not fitting into cache?

Finally, use `benchmark/ips` rather than `benchmark` - it is more statistically rigorous.",1518299761.0
jimworm,"The hashing algorithm for Hash takes considerably more time than a simple comparison. Also (1..1000).to_a is already sorted, making sorting faster.",1518301325.0
Enumerable_any,"The input size is very small and Big-O complexity doesn't necessarily play a big role.

If you increase the input size the hash solution always takes the same amount of time while the runtime of the sorting solution will increase linearly with the input size (probably because sorting an already sorted list takes O(n)? Not sure which sorting algorithm MRI uses.)",1518306946.0
blue_umpire,"In addition to other answers: consider, also, that you're sorting an ordered array [(1..n).to_a) which will be O(n).",1518365808.0
ioquatix,It would be interesting to compare with https://github.com/ioquatix/mapping,1518301176.0
dearshrewdwit,Nice! I'd suggest reorganising the file structure to indicate the namespace where you have defined your classes. At the moment they're all in one big file.,1518346564.0
y3rsh,"* RVM
* gemset
* rake
* how to just run one test
",1518263106.0
sblinn,Unwinding some spaghetti that has accrued in cucumber test setups. ,1518267068.0
shpidoodle,"Testing things printed to the command line. 

For example, if I were to print a character to the command line and the text were colored, how would I test to make sure the text was colored correctly?",1518278999.0
dipittydoop,"Testing external services. Do I use external mocks and cover every potential return request, or do I cover the happy path and focus on only my business logic inside the app?",1518283368.0
obviousoctopus,"Setting up (Rails) testing with rspec. 

To do a system test I need to set up rspec, capybara, faker, fabricator, add scripts to log the user in, install web driver successfully etc. 

I don‚Äôt do these often and it‚Äôs always a learning curve, always something new for the latest version of everything. 

I‚Äôd pay for a gem or a script to set most of these for me. 

Next would be testing external services, file uploads etc. ",1518317426.0
uafpl,How to mock using minitest (comparing to RSpec),1518635697.0
jdickey,"What /u/y3rsh  said.

Gemsets are *key* to being able to reproduce build environments, whether you use RVM or rbenv (which I've preferred for years). 

RSpec and Minitest both have ways for you to run a single test (Minitest through plugins); you'll find those insanely useful. 

The main takeaways ought to be

* automate everything you can (Rake is useful here); and
* be able to repeat anything on a whim, because necessity is whimsical.",1518281605.0
,Effective and easily maintainable mocking and stubbing.,1518276261.0
sshaw_,"This is nice, but it should sort by count in descending order. 

Other suggestions:

* Use environment variables to find history file, ~~SHELL~~ ~~and~~ (not possible/accurate as there's no shell), for Bash, `HISTFILE`
* In Bash, timestamps can exist in history via `HISTTIMEFORMAT` 
* Also for Bash, one may want to flush their history before running: `history -w`

Here's my top commands as of late:

    [snip count < 10]
    | ...
    | octodown README.md                                                                  | 10    |
    | kill $!                                                                             | 10    |
    | ps                                                                                  | 11    |
    | markdown_usage --help                                                               | 12    |
    | docker ps                                                                           | 14    |
    | rake build                                                                          | 14    |
    | ruby -v                                                                             | 14    |
    | be rake embed_usage                                                                 | 14    |
    | ll                                                                                  | 16    |
    | rc                                                                                  | 16    |
    | ruby /var/folders/fn/5bmn_rf52x54hj7lxsw5c7ch0000gn/T/scratch.rb                    | 16    |
    | ps l                                                                                | 17    |
    | gd                                                                                  | 19    |
    | pgrep -lf perl                                                                      | 20    |
    | cd ..                                                                               | 20    |
    | lr                                                                                  | 21    |
    | ./ch.sh &                                                                           | 21    |
    | ssh cg                                                                              | 22    |
    | rake                                                                                | 22    |
    | bi                                                                                  | 23    |
    | df                                                                                  | 23    |
    | ruby markdown-usage.rb --help                                                       | 24    |
    | cd -                                                                                | 30    |
    | ls                                                                                  | 32    |
    | j                                                                                   | 45    |
    | irb                                                                                 | 51    |
    | fg                                                                                  | 78    |
    +-------------------------------------------------------------------------------------+-------+
    | Command                                                                             | Count |
    +-------------------------------------------------------------------------------------+-------+


And [my dotfiles](https://github.com/sshaw/dotfiles), if you want to decipher... 
",1518230313.0
hgeo,This made it to HN [front page](https://news.ycombinator.com/item?id=16340126),1518205337.0
zfundamental,"It's awesome to see ruby being used for UI development. Building off of pre-existing C/C++ toolkits however does make extending the toolkit a bit harder (to a lot harder in some cases). Anyone have any favorite GUI toolkits which are more focused on implementing as much as possible on the ruby side of things?

I know there are a few out there like shoes, but there hasn't been much adoption (from what I've seen). My own take on the mostly Ruby GUI challenge has been through the [mruby-zest](https://github.com/mruby-zest) framework which currently is used by the [zyn-fusion](http://zynaddsubfx.sf.net) synthesizer.",1518295123.0
GDP10,"Hi, I'm the author of opal-phaser, opal-pixi, three.rb, and a bunch of other Opal stuff. Opal is honestly absolutely awesome. I learned JS as my first language and learning Ruby afterwards was a breath of fresh air. I assumed that people must only use JS since it's the language of the browser. Then I discovered Opal. Never written more than a few lines of JS since.

Yes, my company is using Opal. We have a startup in the works and we're planning on using some of my Opal libraries in it. I have used Opal in several live sites and it's 100% as reliable as any other [""compile to JS""](https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS) solution. In fact, it's more reliable than most of the others. The only thing Opal needs right now is a 1.0 tag, haha (they're currently at 0.11, which downplays its massive reliability).

Also, I can honestly say that using Ruby as the language of the browser has *many* benefits. Ruby itself is a great language (coming from someone who knows C, Scheme, Forth, Lisp, JS, C#, Assembly, and some APL). Having it all across your project (i.e., the backend and the frontend) yields a great decrease in the cognitive load from context switching. Which is something our brains aren't great at.

In any case, yes, try out Opal in your production project. It's more than ready and it's been used in the real world by lots of other people than myself and my company. It's certainly better than JS and its cousins ;)",1518200246.0
jgaskins,"I know of several companies using the [Clearwater framework](https://github.com/clearwater-rb/clearwater) (runs on top of Opal) in production.

- [Groupon](https://groupon.com): Real-time admin-facing order dashboard for one of their child companies. They ported over to it when their React+Backbone app could no longer keep up with the volume of data pouring in over the WebSocket.
- [ArkivDigital](https://www.arkivdigital.net): Their entire product (behind a paywall) is a single-page Ruby app.
- [Seven Sigma](http://www.seven-sigma.com): I don't remember what they use it for, but they've come to the [Clearwater Gitter channel](https://gitter.im/clearwater-rb/clearwater) to chat more about it.
- [Krav Maga Worldwide](https://www.kravmaga.com): The instructor search is a Ruby app running in your browser

If you're curious about running front-end Ruby stuff for anything from simple click counters to full-on SPAs, drop into the [Clearwater Gitter channel](https://gitter.im/clearwater-rb/clearwater) and we can chat about [Elm/Redux-style app state management](https://github.com/clearwater-rb/grand_central), [time-travel debugging](https://github.com/clearwater-rb/grand_central-dev_tools), [hot-loading code as you work in development](https://github.com/clearwater-rb/clearwater-hot_loader), [Ruby bindings for browser APIs](https://github.com/clearwater-rb/bowser), [talking over WebSockets](https://github.com/clearwater-rb/power_strip), [a JSBin-like app](https://clearwater-rb-playground.herokuapp.com) and a whole bunch of other projects that are fun to use without hurting your productivity later.",1518309752.0
isolatrum,"this doesn't answer your question, but if you hate js but love ruby, try coffeescript.",1518198626.0
bjpbakker,"> Here at Skylight, we love all things open source

It seems like they love all /other/ things open source. Skylight seems proprietary and non-open.",1518256277.0
iwasapenguin,"Sounds amazing. I couldn't find a registration page, though my understanding is that it opened yesterday. Have a link?",1518181692.0
zakali_co,"I'm not sure about themes but its pretty easy to use Jekyll for non-blog websites. You can think of collections as tables in your database (you can call them in any page you don't need to have a ""post"" layout that creates one page for each post collection.)



You can create reusable partials (ie footer, header, nav) and have arbitrary variables so there is nothing really blocking you from making a non-blog website its just that the introduction docs seem to only focus on that type of site as it was the original intent behind jekyll (like wordpress.)
",1518133429.0
rubyroobnoob,"You can use Jekyll for that - there are even some decent templates out there for landing pages. It's not that involved to get a Jekyll site hosted via. aws. I think I pay about $1.02 a month for my Jekyll blog. 

If you don't want to do a lot of front-end CSS and HTML you can also try something like Squarespace. They have some very good templates and it's something you can get set up in a day. 

From a business costs perspective, the time it would take me to develop, customize, and deploy a Jekyll static site would cost more in my time than Squarespace's monthly costs for good chunk of time. If the trade-off of time is worth it for you, doing the extra work with Jekyll or something like Middleman is valuable experience!",1518133919.0
basex,"In my company we have jekyll with webpack for a corporate website, with s3_website to deploy on s3 and the website is served with cloudfront. We don't have any blog on the site. Works wonders.",1518200364.0
stympy,Use middleman... it‚Äôs a better choice for static sites that aren‚Äôt blogs. ,1518132471.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/webdev] [Static Site with Jekyll](https://www.reddit.com/r/webdev/comments/7w8u0r/static_site_with_jekyll/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1518129755.0
julienXX,Avdi Grimm posted this method a while back http://www.virtuouscode.com/2013/06/24/rubytapas-freebie-xmpfilter/,1518127660.0
funkybaby,[seeing-is-believing](https://github.com/JoshCheek/seeing_is_believing) does this. It's pretty cool for quick hackwork within a buffer.,1518156577.0
GDP10,"If you use [`quickrun.el`,](https://github.com/syohex/emacs-quickrun) you can use `M-x quickrun-eval-print` to evaluate a region and put the result in the buffer as you want.",1518142665.0
thibaut_barrere,"Great post - I'm thankful for Mike for sharing his experience setting this up!

Another option (which I'm using for my upcoming [Kiba Pro](https://github.com/thbar/kiba/wiki#kiba-pro) offer), if you do not want to manage a running server, is to use solutions like [PackageCloud](https://packagecloud.io).

I can push a gem version directly to there, then each registered client will have their own credential to bundle install.",1518113745.0
cray4K,Care to share a repo link?,1518109061.0
PiningForTheFnords,"I did the same with my old 120g reef tank. In my case I had a separate network module with an API that I was controlling via a bunch of ruby scripts, however if memory serves there was also a module for serial control. 

What devices are you using?",1518111065.0
bokmann,I‚Äôve used the wiring gem to control the gpio pins on a raspberry pi. Perhaps you could go down that route?,1518117071.0
this_is_not_nil,"Do you need to use Ruby?

It would be a very cool project for a little Arduino chip with WiFi, you could get a ESP8266 and let it send http updates to your Rails backend.",1518113930.0
strzibny,The reason mruby was created was for embedding Ruby code inside a C program. Think Lua for instance. So mruby is suitable more for enhancing C programs than building just with Ruby. That way you can program in mruby and have a binary in the end.,1518084800.0
honeyryderchuck,"Won't that mapping for inferring ""class to name"" lead into segmentation faults if the garbage collector (one hopeful day) compacts memory and relocates objects (and assuming that not all classes are required upfront)?

Super cool project!",1518100246.0
classhero,"Disagree with testing the accessor. On the one hand, you've ensured that nobody will suddenly handroll their own accessor method without breaking the build. On the other hand, you've wasted your time defending against an insane hypothetical. The appropriate time to add those tests is if someone were to change the accessors - right now, any beginner Ruby programmer can reason about exactly how #ip and #ip= are going to work because that functionality comes built-in to Ruby. (I suspect this'll be controversial just on the grounds of advocating for *not* writing a test).


Think of your program like a hypothesis, with your tests as experiments to show that your hypothesis is met - you'd be better off testing (against your mock in unit tests) that you're using your SSH dependency correctly, and then writing integration and blackbox tests to ensure your program does what you want it to when dependencies aren't stubbed out.",1518078278.0
inebriated_me,"No:

#ip
Check write and read.

#ls
Check that ssh.run_command is called with the correct args

#run_command
Assert that it's calling the layer below it with the correct args.",1518073644.0
seancookr,"I would argue that your tests are insufficient on the sole premise that you have a required `ip` keyword argument in your initializer method, and then proceed to do absolutely nothing with it. When you run that `ls` method, ip is going to be nil, because you never set its value.",1518120368.0
planetofthemapes15,"This is a very very non-trivial feature. You either need to create a DSL with limited functionality or something like posted by the other users.

If you‚Äôre going to contract this out and expect it to work AND be secure, expect this to be astronomically expensive. Or it‚Äôll be dirt cheap and totally insecure.",1518047220.0
drewblas,"Auth0 has a product like this called ""Extend"": https://auth0.com/extend/

It provides a way for your end-customers to write their own integration code that is run against your platform.  It's designed to be secure out of the box and creates many great extensibility options for your customers.",1518053894.0
meagar,"You're talking about something like an embedded language ([Lua] is often used for this purpose) or an App platform. Both are extremely non-trivial things to build.

[Lua]: https://en.wikipedia.org/wiki/Lua_(programming_language)",1518041210.0
sshaw_,"> One of the features I'd like to put in is allowing people to be able to write custom code for my RoR and have it ran to further extend my app beyond just some basics that I would give them.

This can be a lot of work. Just make sure it's a feature that your users want before you
build it üòâ.

> I'm using Salesforce.com's APEX/VisualForce as an example as it's really the only thing I can think of.

JavaScript is popular for embedding. Ruby has [therubyracer](https://github.com/cowboyd/therubyracer) which makes (some level) of interoperability easy. NetSuite, Photoshop, Google Sheets are some products that use JavaScript for this. 

If you use JRuby, there's some chance that you can use a JVM language. MuleSoft ESB (written in Java), allows one to write extensions in Ruby or Groovy. 

In addition to Lua, there's [GNU Guile](https://www.gnu.org/software/guile/), which historically has used Scheme but also supports JavaScript.   

Not sure what the difficulty level is here or what issues may arise.  

> had any tutorials or anything like that on how to go about implementing something like this that would be great.

Depends on your requirements but, something that comes to mind, is running your clients' Ruby code in a jailed/[chroot'd](https://en.wikipedia.org/wiki/Chroot) env with your libs included in the process load path. 
",1518066620.0
obviousoctopus,"I‚Äôd look into liquid and work with your users to determine what tags they‚Äôd need. 

Also, get a team together. 

Lastly, what is the business case for this?",1518070302.0
basex,"You need to create a sandbox environment to run these apps, for example in AWS Lambda, Azure Functions or Heroku. Limit the permissions of this environment and remove any access from this environment to your code (use a different account).

You can then create an SDK or provide an API for users to manipulate their data. I suggest you use an existing programming language like mruby for this.",1518071257.0
hmans,"Not sure what your business case is and if it's compatible, but consider just providing an API with webhooks support and letting your user access it ""from their own servers"" (it's 2018, so you could just push them towards Google Cloud Functions or AWS Lambdas, which are perfect for integration stuff like this.)

Building a good API isn't trivial, either, but at least this way you're eliminating most of the big security and performance hurdles supporting in-app scripting would cause.",1518082962.0
BluePizzaPill,"You basically have two options:

1. Build a DSL
2. Look into `eval()` and especially how to make it more [secure with $SAFE](http://nts.strzibny.name/safe-code-evaluation-in-ruby-with-safe/)",1518051348.0
meagar,"I'm not completely clear on what you're doing since you didn't correctly escape your code blocks, but it *appears* you're using backticks to quote your string so you can then use string interpolation, like this:

```
@coin_price = Cryptocompare::Price.find(`#{@coin.name}`, 'USD')
```


 Neither the backticks or interpolation are necessary, and backticks are definitely incorrect and will break things. Backticks run their content *on the command line* and evaluate to the resulting output. The correct quotes to use for regular string interpolation are double quotes, but `""#{@coin.name}""` is still completely unnecessary, this is exactly equivalent to `@coin.name.to_s` which (if `@coin.name` is already a string) is redundant.

Odds are you just want to simply pass `@coin.name` in place of the hard coded string `'BTC'`:

```
@coin_price = Cryptocompare::Price.find(@coin.name, 'USD')
```
",1518034923.0
Frizkie,"Maybe I haven't read your post thoroughly enough, but are you sure you need string interpolation in this case? What's stopping you from just doing:

    @coin_price = Cryptocompare::Price.find(@coin.name, 'USD')

Is the name not stored as a string?

EDIT: Misread the other comment - this was already mentioned. Happy hacking!",1518039895.0
AmSpaceRabbit,[RubyMine](https://www.jetbrains.com/ruby/) is a fantastic IDE,1518022313.0
Oranges13,Maybe I'm weird but I just use sublime text.,1518028797.0
thisrealorthisfntasy,"Vim is fairly popular in ruby community with a bunch of good plugins, so I‚Äôm not sure if there is any big need to change. Upcase has good intermediate level content that helped me when switching to rails dev and using tmux/vim ",1518026419.0
Raffy6250,I've tested many and RubyMine is really the best.,1518025136.0
jrochkind,"Most devs I know don't use an IDE for ruby/rails, they use a fancy text editor like SublimeText, Atom, or even, yup, vim. (And lately I'm hearing more good things about VS Code for ruby). 

There's pretty much only one IDE for ruby, RubyMine. I've never used it.  I don't know if I agree that a 'beginning developer' should use an IDE, I'd probably set them up just like I work, on SublimeText. But that dev probably uses RubyMine, so wants to teach you using RubyMine. That'll certainly work too. 

I use SublimeText, mostly cause I have for years and it works for me, I couldn't say if it's the best of things currently available (neither Atom nor VS Code existing when I started with ST).   Things I find invaluable include proper syntax highlighting (ruby, html, and css, including erb and scss), the file browser tab on SublimeText, and the command-p jump-to-any file. I don't know if vim/MacVim has similar things or can be set up to have them. ",1518036432.0
Enumerable_any,[ctags](https://andrew.stwrt.ca/posts/vim-ctags/) is very helpful for navigating through an unfamiliar codebase.,1518022045.0
tobeportable,Get familiar with the pry gem and setup your editor to easily pipe stuff to the repl.,1518032158.0
,"I've never used an IDE for rails, just Atom or VS Code",1518027331.0
derekkraan,Why change? Vim is more than capable.,1518030705.0
aarkerio,"If you are serious, install Emacs and spend two weeks learning eLisp. After that, you won't need any other editor or IDE for the rest of your life.    ",1518023230.0
rainynight65,"RubyMine is the best if you can stomach the license cost.

Visual Studio Code is a good, free option.",1518043174.0
twinklehood,"Been doing ruby for quite some years, made the switch to Vim about a year ago - and never looking back. You really really do not need an IDE, and the Atom/Sublime/VSCode are really just people who lack the patience to learn vim/emacs. They really don't do anything you can't do in vim.
",1518049450.0
_ilovecoffee_,Vim + a mini-fridge full of Redbull. ,1518059276.0
stoplight,Ive been using vscode with the vscode-ruby extension for the past 3 months or so. I recommend it.,1518023757.0
azendent,"Congrats on the new position!

I think vim/tmux make for an awesome ruby editor. You can read the help docs and go as deep as you want, but to get started a few plugins (like NERDTree as you mentioned) and off you go. Unless you're having issues using vim, I'd say stick with it.

We're all very blessed with some amazing text editors to choose from. All of the one's listed here are very capable. The important thing is becoming proficient with whichever editor you choose.

Best of luck!",1518044644.0
cheeseboythrowaway,"Rubocop is a linter that plugs in to Vim, I highly recommend it. Other that that, it sounds like you've got the stuffs you need. I make a lot of use of pry and byebug.

Congratulations on your first dev job!

If you want a bigger IDE with a ""real"" debugger, others have recommended RubyMine and I second that emotion. But TBH I have the pro version of Pycharm and I just don't use it that much, I'm always command-line debugging my stuff and using a REPL.",1518051252.0
francoisrabanel,"I start with SublimText, so this is my first love ! I'm like home in this IDE haha. But I tried VS code and RubyMine, RM is awesome but expensive and VS code is surrounded by a great active community. For Ruby expert I guess RM doesn't need tones of plugins like others and ready to rock easily :)",1518164454.0
ryanlue,"This is a good opportunity for you to exercise your reasoning and debugging skills. It may help to try [rubber duck debugging](https://en.wikipedia.org/wiki/Rubber_duck_debugging).

Here's some background knowledge you may have missed out on:

* Every method has a **return value**.
* `#puts` takes an argument and **prints it to standard output**.
* These two concepts are not related to each other. See if you can figure out (or at least look up) what the return value of `#puts` is. If you're still having difficulty understanding how the output and return value can be different, go do some homework.

Your program says:

    # 1. Create a new Bottle.
    # 2. Tell it to #song.
    # 3. Take the return value from Step 2,
    # 3a. assign it to b, and
    # 3b. print it to STDOUT.
    puts b = Bottles.new.song

    # 1. Tell this bottle to #verses with the arguments 99, 0.
    # 2. Take the return value from Step 1 and return it.
    def song
      verses(99, 0)
    end

    # 1. For every number between hi and lo (inclusive),
    # 1a. tell this bottle to #verse with that number,
    # 1b. take its return value, and
    # 1c. print it to STDOUT.
    # 2. Take the return value from Step 1 and return it.
    def verses(hi, lo)
      hi.downto(lo) { |i| puts verse(i) }
    end

    # 1. Interpolate num into the heredoc as appropriate.
    # 2. Take the value from Step 1 and return it.
    def verse(num)
      <<~VERSE
    #{num} bottles of beer on the wall, #{num} bottle of beer.\nTake one down and pass it around, #{num-1} bottles of beer on the wall.
      VERSE
    end

Your program prints to standard output in two places. Do you see it? Now, can you tell us why that extra `99` comes out at the end?",1518014783.0
iberci,The reason is because the last expression in a method is implicitly returned from methods within Ruby.  Fixnum.downto() returns self(Fixnum) (provided it's given a block which is the case above)  and that is assigned to b which is then printed by puts(),1518020561.0
awwfishsticks,`hi.downto(lo)` is implicitly returned (it's the last line in that method). You could try putting `return nil` on the line afterwards.,1518039119.0
Key720,"My question to you first: Are you completely new to programming too or just new to Ruby? If just new to Ruby, what prior programming experience do you have and with what language?",1518000395.0
fixer4013,Thank you for the info. And yes I am currently in high-school but I have future plans for studying programming at university. I am hoping I'll be able to make it in the programming industry.,1518013369.0
defkathy,"I found [The Well Grounded Rubyist](https://www.manning.com/books/the-well-grounded-rubyist-third-edition?a_aid=defmethod&a_bid=b2a9cb7e) to be pretty helpful when I was just getting started! There's a new edition coming out written by [Joe Leo](https://www.linkedin.com/in/jleo3/), who founded [Def Method](https://www.defmethod.com) in NYC. Check it out! ",1518123710.0
fixer4013,Thank you for this guide! I am looking forward to this research.,1518018340.0
fixer4013,Thank you for this information!,1518018378.0
fixer4013,Thank you for this info!,1518168428.0
planetofthemapes15,"Oh man I‚Äôve implemented this manually on multiple occasions, glad to see it standard.",1517989591.0
DudeManFoo,SHUWING!!,1518301225.0
gettalong,"I wouldn't bump the major version, just the minor version. If you specify the lowest supported Ruby version in the gemspec, Rubygems shouldn't show newer versions of the gem on unsupported Rubies.

However, it is up to you.

As for proper versioning: If you use the major.minor.patch numbering, it applies to your code, not the Ruby interpreter. So the patch number is increased if, for example, a bug has been fixed.",1518014022.0
nirvdrum,"I personally believe dropping a Ruby version constitutes a major version bump. But that position was also a lot easier to defend when Ruby versions weren't falling out of a support cycle every year. I think the ""unsupported"" part is played up a bit too much, since OS vendors will continue to patch versions they ship within their security cycle. And it's a valid use case to run the Ruby that ships on your system (although many developers use Ruby managers). This is all a long-winded way of saying that to me, as an end user I should be able to specify ""~> 2.1"" and expect that version 2.2.0 of your gem will install fine. Violating that violates trust in semantic versioning, IMHO. Moreover, last I knew, Bundler doesn't report back a sensible error message in this case; it just simply fails to install anything.

Having said all that, I can completely appreciate not wanting to do a constant major version bump. For whatever reason, we collectively get antsy when a major version approaches 3 and do everything in our power to make sure it never goes higher than 5. Less tongue-in-cheek, constantly bumping the major version can also erode trust in semantic versioning if you're constantly updating the major version but never adjusting the API. To that I'd say, don't drop versions of Ruby just for the sake of it. If you're truly using new features, that's one thing. If you're just trying to be an activist, maybe that's not the best way to go.

For Rubber (a gem I maintain), I tend to be conservative in dropping versions, so the major bump works for me. If you're dropping Ruby versions frequently, I guess you'll have to decide which end of the spectrum you want to fall on.
",1518014032.0
jrochkind,"Personally, I only drop ruby version support in a major release. But I try to take backwards compat very very seriously, I think more so than many in the ruby ecosystem. I wouldn't be surprised if it's common to do otherwise, so I don't know what your poll based on popular opinion will reveal. :)

But my thinking is that backwards compatibility and semver means that (excepting unintentional bugs), someone should always be able to upgrade within a major version of my gem, and have nothing break or stop working with no other changes. If they are using an old version of ruby that I drop support for within a major version series, that wouldn't be true. They would be forced to upgrade their version of ruby even upgrading my gem without going over a major-version-bump, which might break other things in their code due to bugs or changes in the new ruby version, requiring more changes.  Or force them to upgrade to a ruby version that some _other_ dependency they have is _not_ compatible with.  But upgrading my gem without a major version bump should not require or risk such, semver means upgrading within a major version should always leave your app working just as before (excepting unintentional bugs, which if discovered should be fixed in subsequent patch release(s)). 

[Here's a ticket](https://github.com/traject/traject/pull/152) on a project I maintain where I discuss with collaborators dropping some ruby versions (on a major version bump). Some interesting thing ran into: 1) Someone initially wanted to be able to keep using JRuby 1.7 because they had problems with JRuby 9k -- JRuby 1.7 only supports ruby 1.9-compatibility, not even 2.0.  2) CI ran into an actual bug in MRI 2.5.0 causing a hard-crash core dump (reported to ruby bug tracker), which demonstrates that forcing someone to upgrade ruby version can end up forcing them to deal with new bugs. Although in this case, we weren't going to _force_ them to upgrade to 2.5, just 2.2+, but still it demonstrates the possibility of pain in forcing someone to upgrade.  The goal of semver is no pain without a major version bump. ",1518014560.0
_matthewd,"Ruby is a significant dependency, but still a dependency. SemVer is very clear on changed dependencies: https://semver.org/spec/v2.0.0.html#what-should-i-do-if-i-update-my-own-dependencies-without-changing-the-public-api

As long as you set the required ruby version in your gemspec, a sufficiently-new Bundler will avoid it when running on an older ruby. (Older Bundler versions would choose the incompatible version, and then abort with an error. That was less helpful.)",1518015433.0
ryanlue,"My reading of the semver specification is that yes, sunsetting an EOL platform means a major version bump. 

It may not say anything about EOL platforms explicitly, but it does say in the five-line summary that minor and patch releases should be backwards-compatible. That means if a program is written with Hashie v3.5 and everything works, upgrading to v3.6 should result in absolutely zero problems. Dropping support for my platform is a very big problem.",1518015745.0
JustinCampbell,Major,1518020547.0
thibaut_barrere,"I wouldn't necessarily do a major version bump: with one release each year, this means that ultimately you will have one EOL ruby version per year, which would translate each one in a major bump at each minor ruby version change!

In my cases, I'll be taking a gradual approach - just a few thoughts!

- Make it clear that using EOLed versions of Ruby is not good in general (in your readme) ; as an ecosystem, it's a good idea to insist on that
- Make it clear that you will only support a little bit after EOL time
- Why not: leave the door opened for a company to fund support for LTS on an older version (if it's worth it for them), like Rails LTS does, in a way
- Also this is a matter of balance: if supporting an older version is not a big pain, then it's easier to do, but if it prevents improvements & significant speed-ups, then it's another story

BTW, in the end, it's OSS, so users are not entitled to anything!",1518025947.0
olbrich,"For my gems, I setup travis to test against only the officially supported versions of ruby and then use rvm (or chruby) to set my development version to the oldest one (so that I don't start sneaking new ruby features into my code).  I don't usually restrict the required version unless there is a very good reason to do so since most things will continue to work. As such, I usually just do a minor version bump.  

When I drop support for an older version, really all I'm doing is stating that I am less likely to try and fix bugs in older ruby versions.  I don't normally prevent users of old ruby versions from using it.",1518056414.0
defkathy,"You can try [Dependable](http://dependable.webflow.io) - it automatically keeps your gems up date. 
(http://dependable.webflow.io)",1518122956.0
guiniveretoo,"Reconsider ""waifus"" as the subject matter.",1517968530.0
otakugrey,This was educational. Thank you. Please keep going. But you may want to try using a better microphone.,1517991107.0
otakugrey,Thank you.,1517990201.0
cruyff8,I'll have a go... PM me to schedule the screenshare. ,1517958817.0
jasonswett,"Whenever you get stuck like this I would recommend creating a Stack Overflow question with a detailed description of what you're trying to do, what's going wrong, and what you've tried to do so far to get past the problems. That way you can get potentially instant help for free. Plus, this isn't the last time you'll ever get stuck. Knowing how to get help effectively (without paying for it every time) is part of the skill of programming.",1518102613.0
letstryusingreddit,Can you share the error msgs?,1517979063.0
jhyatt1017,I can take a look too. Not a Pro but willing to help. It would be best to share your code on github or post the error on here,1517982627.0
cmdk,Post your code on GitHub. I can help out as well if needed. No money required. ,1517961162.0
chrisgseaton,"There's a better way to run that benchmark - using the `benchmark-ips` tool which is designed carefully to allow for optimising implementations of Ruby to do their work and will allow for the JIT to warm up.

    require 'benchmark/ips'

    def calculate(a, b, n = 40_000_000)
      i = 0
      c = 0
      while i < n
        a = a * 16807 % 2147483647
        b = b * 48271 % 2147483647

        c += 1 if (a & 0xffff) == (b & 0xffff)
        i += 1
      end
      c
    end

    Benchmark.ips do |x|
      x.iterations = 3
      
      x.report(""calculate"") do |times|
        calculate(65, 8921, 100_000)
      end
    end

    raise unless calculate(65, 8921) == 588

Results:


    ruby 2.6.0dev (2018-02-07 trunk 62270) [x86_64-darwin17]
    Warming up --------------------------------------
               calculate     9.000  i/100ms
               calculate     9.000  i/100ms
               calculate     9.000  i/100ms
    Calculating -------------------------------------
               calculate    893.647  (¬±10.3%) i/s -      4.419k in   5.003980s
               calculate    872.846  (¬±12.7%) i/s -      4.275k in   5.000368s
               calculate    934.028  (¬±10.1%) i/s -      4.599k in   5.002686s

    ruby 2.6.0dev (2018-02-07 trunk 62270) [x86_64-darwin17] (+JIT)
    Warming up --------------------------------------
               calculate    10.000  i/100ms
               calculate    18.000  i/100ms
               calculate    18.000  i/100ms
    Calculating -------------------------------------
               calculate      3.174k (¬± 9.9%) i/s -     15.552k in   4.999483s
               calculate      3.180k (¬± 8.2%) i/s -     15.786k in   5.002768s
               calculate      3.085k (¬±14.8%) i/s -     14.958k in   5.002559s

    rubinius 3.84 (2.3.1 3970f17d 2017-08-02 4.0.1) [x86_64-darwin17.0.0]
    Warming up --------------------------------------
               calculate     3.000  i/100ms
               calculate     3.000  i/100ms
               calculate     3.000  i/100ms
    Calculating -------------------------------------
               calculate    114.830  (¬± 8.7%) i/s -    570.000 
               calculate    114.671  (¬± 9.6%) i/s -    570.000 
               calculate    118.078  (¬± 7.6%) i/s -    588.000 

    jruby 9.1.13.0 (2.3.3) 2017-09-06 8e1c115 Java HotSpot(TM) 64-Bit Server VM 25.144-b01 on 1.8.0_144-b01 +jit [darwin-x86_64]
    Warming up --------------------------------------
               calculate     9.000  i/100ms
               calculate    10.000  i/100ms
               calculate    10.000  i/100ms
    Calculating -------------------------------------
               calculate      1.083k (¬±11.0%) i/s -      5.330k in   4.983511s
               calculate      1.097k (¬±11.8%) i/s -      5.400k in   4.995296s
               calculate      1.091k (¬±12.0%) i/s -      5.370k in   4.998160s

    truffleruby 0.30.2, like ruby 2.3.5 <Java HotSpot(TM) 64-Bit Server VM 1.8.0_151-b12 with Graal> [darwin-x86_64]
    Warming up --------------------------------------
               calculate   112.000  i/100ms
               calculate   157.000  i/100ms
               calculate   188.000  i/100ms
    Calculating -------------------------------------
               calculate    352.284k (¬±15.6%) i/s -      1.646M in   4.979090s
               calculate    352.140k (¬±15.0%) i/s -      1.707M in   4.987553s
               calculate    360.077k (¬±13.6%) i/s -      1.755M in   4.988948s

Running that it looks like MJIT is over 3x faster! Which is very impressive and it's already doing better than both JRuby and Rubinius.

TruffleRuby is over 300x faster (I only mention it because it's my own implementation of a Ruby JIT), so there's still lots of rooms for optimisations, as the authors have already said themselves.",1517963821.0
thibaut_barrere,"Note that you can install the JIT version with ""rvm install ruby-head"" today.

If you need to enable the JIT with ""bundle exec"", this seems to work:

RUBYOPT=""--jit"" bundle exec xxx

More options with ruby -v etc (including ""--jit-verbose=1"")",1517958736.0
geraldbauer,"FYI: Trying to collect a list of Ruby 3x3 News & Articles @ Planet Ruby, see https://planetruby.github.io/calendar/ruby3x3  Just added Playing with Ruby's New JIT: MJIT. Cheers. Prost.",1518724582.0
ignurant,"Cool! It's funny, I just started learning about ES a few weeks ago, and have spent a lot of time writing a bunch of hacky ruby scripts that loads data from SQL Server into ES via Sequel. This is lovely to see as my intrigue grows!

One question:

    # https://github.com/jrgns/sequel-elasticsearch/blob/master/lib/sequel/plugins/elasticsearch.rb#L25
    
          @es_client = ::Elasticsearch::Client.new elasticsearch_opts

Do you intend for this to be `@es_client ||= ::ElasticSearch::Client.new elasticsearch_opts` ?

If not, what is the purpose of setting the instance var if you are just overwriting it every time you call the method? Help with debugging? Genuine question.

(Edit: And if so, mind if I make that tiny contribution so I can feel cool? haha)",1517958745.0
schneems,"I have two blog posts talking about why modules can be bad

- https://blog.codeship.com/good-module-bad-module/
- https://blog.codeship.com/when-to-be-concerned-about-concerns/

",1517950928.0
jrochkind,"As Metz says, ""it's just another form of inheritance"". Does that help? Later (around 25:30) she puts on a slide ""inheritance is for specialization, it's not for sharing code,""  pay attention to that part. ",1517940280.0
realntl,"I can't get behind this.

> REST APIs have a fixed structure defined for each API endpoint. They either return too much data on each API call or too little. For example, if only titles need to be displayed on a certain page, returning extra fields doesn‚Äôt make much sense. Similarly, what if we wanted to return only the distributor‚Äôs name? In traditional REST APIs it would most probably require sending another request to fetch the distributor information for that movie.

I stopped right there. There's a _huge_ presumption about REST APIs baked into that paragraph. Namely, that the hypothetical REST API in question is modeled after a schema that is _internal_ to the application, rather than being modeled after the needs of the web clients. This may be commonplace for rails APIs, that export a relational database schema, but that's not exactly an ideal practice. As a general pattern, this is called ""distributed objects."" It's the quickest, easiest way to staple a client and server together, but it's almost never an ideal. Go has a saying that rubyists would be well served to heed: instead of communicating by sharing data, share data by communicating (over messages). REST APIs can perform very well when they are used to transmit messages.

Think about Slack for a minute. They have desktop apps, mobile apps, and a web app that all deliver more or less the same experience. In this kind of scenario, the same HTTP APIs that work for mobile apps are going to prove more or less suitable for desktop and web apps. There's symmetry because there's really only one logical user experience, even though it's implemented in multiple clients.

GraphQL is a query language. It's for a specific use case -- when the needs of the clients differ dramatically. It offers maximum flexibility but at the cost of maximum complexity.

Query languages and REST aren't even opposing concepts, and I'm tired of proponents of GraphQL using a misunderstanding of both REST and the purpose of query languages to advocate its usage. I hate to be harsh, but in this case, the title of this article is an imperative telling everyone to use something for all the wrong reasons.",1517939488.0
nieuweyork,"Graphql is a fairly expensive way to create an API. It has its own processing cycle.

This doesn't mean that you shouldn't use it, or even that you shouldn't use it mostly, but be aware that most of the benefits that proponents of graphql tout fall into two categories:
1. Shared clients for the API
2. Baked in method for designing the API

It's good, but it's not the only game in town for more easily making better APIs. ",1517942328.0
DerNalia,Have you heard of json:api? (The speecification),1518034401.0
danimoth2,"Hello, I haven't really used GraphQL in production but I've tried it in a small project. I feel like its advantage is that it can consolidate 2 HTTP requests like ""GET apples"" and ""GET oranges"", resulting in just 1 request to the back-end. Am I correct in thinking so? Or is it like the same according to different metrics (time, possibly memory?)",1518133656.0
Mallanaga,I was hoping nokogiri wasn‚Äôt a dependency... I suppose that‚Äôs too much to ask. This is almost more of a de-serializer. Very cool. Good work.,1517929735.0
Coraranus,"To the people who are interested in this, is there a need to abstract this to allow for generic backends? I don't think this has to be tied to XML but for us there was never a need for anything else.",1517937043.0
aradabaugh,"You can think of the Ruby heap as a high watermark. It is how much your app has ever used until the process is restarted. The GC runs and frees some stuff out of that pool but Ruby still keeps it claimed. I will get to why in a sec. If you have 100mb high watermark and your app needs to allocate 11mb more it will ask the OS for 11mb more (I‚Äôm purposely light on details). Now you‚Äôre at 111mb watermark. Say that web request that caused that 11mb increase ends, GC runs and sees that 11mb is no longer needed, it frees the slots internally. You are now using 100mb of your 111mb watermark/pool. A new request comes in and your app needs 5mb more so now you‚Äôre at 105mb out of 111mb of your watermark and so on for the life of your app. Assuming you don‚Äôt have a memory leak, your watermark will get high and stay high but should stabilize. Your current actual use of it will depend on GC. Why does Ruby act this way? Because it doesn‚Äôt compact/defrag the memory. An object‚Äôs memory could be all over the heap so Ruby plays it safe and refuses to free memory. Ruby tries its best not to allocate so it will pull out any free slots in its heap for an object it can. It‚Äôs even worse for Ruby objects allocated with C objects in them (nokogiri). These are really unsafe for Ruby to free or move. Aaron Patterson has been working on compacting memory for Ruby and has made great progress. This could allow Ruby to one day actually truly free memory back to the OS. C objects are a big problem to it still as mentioned. Read his blog for more info.",1517895251.0
corolok,"these guys helped:

    RUBY_GC_HEAP_GROWTH_FACTOR:    1.25
    RUBY_GC_HEAP_GROWTH_MAX_SLOTS: 300000
    RUBY_GC_HEAP_INIT_SLOTS:       600000

by default `GC_HEAP_GROWTH_FACTOR` is 1.8, I think it's too much :)",1517955423.0
non-rhetorical,"Clarify one thing for me. By ""non-standard"" you just mean that it's weird, not that it's *malformed*, correct? 

Like, when you're at the parent element overtop (here, 'body') of all this, you can do `body.elements.map(&:node_name)`and it spits out `[""div"",""table"",""table"",""div"",""div"",""table"",""table"",""table"", ...]`, yes?",1517884889.0
ioquatix,"Trenni can parse tags into an event stream, and the low level parser doesn‚Äôt do any validation except SGML syntax. https://github.com/ioquatix/trenni/blob/master/README.md",1517884124.0
in0pinatus,"Have you considered using regular expressions?  
There's a good Stack Overflow answer about doing so [here](https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags).",1517890721.0
GetNickyWithIt,"Sounds like a gem of a job. Hope you got some great benefits Bundled in! If not, don't wanna derail your excitement! Congrats!",1517870681.0
tomthecool,"> What are some things you wish you knew before starting your first Ruby gig?

I *presume* it's a rails job (because most are)...

The main thing I wish I knew more about, before starting, is a wider picture of ""how the internet works"".

In the back-end, learn about the basics of web servers (e.g. apache/nginx); how SSL certificates work (letsencrypt in particular); maybe even a little about how DNS works (especially subdomains); and definitely get a good grounding in unix command lines if you haven't already. None of this is strictly needed for a job, but you'd be surprised how much a good foundational knowledge can come in handy!

Also, along the same lines, spend some time playing around with the developer tools in your browser - this is a *huge* and powerful set of tools; there's a lot to learn here, but you should at least get comfortable with inspecting network requests and playing around with CSS/JavaScript editors. Again, just having some confidence knowing your way around the tools can end up saving you countless hours in future.

Lastly, when it comes to the actual *ruby*, watch a whole bunch of tutorials (I can provide a list if you'd like, but there's tonnes of material out there!) about best practices. Ruby is a very easy language to ""hack something together in"", but it takes quite a bit more skill and experience to write something *good* in the language. In particular, be sure to experiment with the full ruby library -- don't just get bogged down in `if` statements and `each` blocks; it's a *very* expressive language.

If you think your code looks ugly, then it probably is; there's almost always a ""better way"" to solve it in ruby. So read the documentation, experiment, and ask!",1517872533.0
sshaw_,https://www.reddit.com/r/ruby/comments/7sjh65/just_got_a_new_ruby_job_what_to_do_to_really/dt6ny94/?context=2,1517876198.0
isolatrum,"As another commenter said, chances are you're going to be working on a Rails app, so some advice from someone who has worked on a number of those - be careful to keep everything well documented, well organized, tested, and comprehendable. In a big boiler like Rails it's easy for stuff to be a jumbled mess and lose track of what's happening where. I recommend trying to be as explicit as possible with your programming. In the Rails world there is a lot of ""magic"" gems and it's important to try and only implement features in a way that you really understand what's going on and you have full control of it. Also, if you're unit testing (and you should be), be careful not to introduce too many database calls into the tests (you can use fixtures an an alternative), or else they will grow really slow. For example, my current company's test suite takes 1 hour to run _if_ we split them up into 10 groups and run them concurrently. This is honestly a despicable situation and you should never, ever find yourself there. ",1517897085.0
nirse,"read these two books: 
https://www.amazon.co.uk/Rails-AntiPatterns-Refactoring-Addison-Wesley-Professional/dp/0321604814/ref=sr_1_1?ie=UTF8&qid=1517938240&sr=8-1&keywords=rails+antipatterns
https://www.amazon.co.uk/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330/ref=pd_cp_14_3?_encoding=UTF8&psc=1&refRID=RPRY329V1QV4P8C1AJE8
They are both a bit old, but totally valid. The one is more practical (and about rails, if your Ruby job is indeed a Rails job), the other more general on OO design.",1517938584.0
purephase,"Congrats Mike! Excellent product, and Faktory is sure to be a success.

Thanks for sharing.",1517860504.0
xraystyle,Nice. I've always been a fan of Sidekiq. Great product. ,1517879694.0
stanislavb,Maybe the most important piece of software after Rails in a Rails app :),1517891204.0
mperham,"Thank you for the kind words, all.  I want to note that feedback is very welcome for all three new releases.  

I especially want to know if there are any problems with the ActiveRecord caching integration.",1517948068.0
myringotomy,"Try jruby threaded. 

Also lua which in nginx can connect directly to redis. That's likely to be the fastest.",1517869260.0
ioquatix,Do you want to accept a PR for async-http?,1517884575.0
stanislavb,Nice work!,1517891377.0
testcore,Have you tried looking at what the post body is that's actually arriving at the server?  I.e. what exactly is being parsed (not what's being sent)?,1517803686.0
lostapathy,"It kinda depends what you want to do.

If you want to (and have the resources) to actually lay out a PDF 100% as a PDF, Prawn is the winner.

If you just need ""good enough"", or don't have the resources to do more, something like wicked_pdf (uses wkhtmltopdf under the hood) is brilliant for just knocking it out with almost zero effort.

I have done both, in the same app even.  Use wicked_pdf to do the quick and dirty stuff, but drop down into prawn where we needed something more accurate.",1517804139.0
horsebees,I‚Äôve used wkhtmltopdf but if I had to do it again I would use a wrapper for headless Chrome [like this one.](https://github.com/Szpadel/chrome-headless-render-pdf) . CSS differences between chrome and wkhtmltopdf caused a few mishaps. HTML templates were a requirement though so I couldn‚Äôt use a pdf library directly.,1517801971.0
geraldbauer,"FYI: Don't forget HexaPDF see https://hexapdf.gettalong.org and https://planetruby.github.io/calendar/advent2017/09-hexapdf    Cheers. PS: HexaPDF is the fastest PDF library (in rubyland), see the benchmarks, and it's coded with great care about optimizing memory usage etc.",1517817035.0
colindean,I've found wkhtmltopdf to be less accurate rendering than headless chrome.,1517803830.0
strzibny,"Author here. Would be interesting to do some tests with latest headless Chrome or such, but as long as you need to shell out from Ruby I think Prawn will win for long running processes such as Rails.  Also depends on the document itself. When I did the testing above making the document more complex (by adding more CSS) definitely slowed wkhtmltopdf even further.

However for me the real benefit was just using pure Ruby and so I would prefer Prawn even if it's actually slower.",1517830128.0
thibaut_barrere,"When I need accurate rendering control over tables (e.g. documents with tables spreading over multiple pages) or tight control otherwise, I  use Prawn.

I only use wkhtmltopdf for simpler scenarios.",1517846758.0
,"I have used both. Definitely use wkhtmltopdf if it gives you what you want. It's super simple.

If your requirements are larger, go for prawn.",1517852926.0
johnkarap,"Not sure about Prawn, but www.ZetPDF.com is pretty fast library",1518705924.0
iconoclaus,"why not store it in relational form in sqlite, using sequel? your efforts are better spent thinking about the domain relationships than on how to parse and serialize.",1517790690.0
RightWinger,Maybe JSON?,1517768698.0
sshaw_,"I'm just going to throw this out there for fun:  [GDBM](http://ruby-doc.org/stdlib-2.5.0/libdoc/gdbm/rdoc/GDBM.html)

",1517772262.0
jemminger,"Do you ever want to query it in the database?  If so I'd go with json, stored in Postgres jsonb columns.  MySQL probably has native json support now too.",1517804978.0
classhero,"> Known Issues
>
>     * Performance is decreased when Google Chrome is running

????",1517773245.0
Aesthetikx,"This is the gist of how I do it (just a ruby script, not piped in this case)

    IO.popen(""lemonbar -g #{width}x#{height}+#{offset_x}+#{offset_y} -F #{fg} -B #{bg} -f #{font}"", ""r+"") do |pipe|
        loop do
          pipe.puts ""whatever""
          sleep period
       end
    end
",1517776500.0
otakugrey,I have not known what lemonbar was before this. How are you using Ruby with it? All the stuff I see uses Bash.,1517806250.0
realntl,"I'll suspend my usual objection about what we call ""service objects"" actually being ""command objects"" for a moment just to say, that seems like a pretty interesting library. I'd be interested to study the effects of using it in a larger ruby project.

Wait, somehow I still voiced my nitpick. Ugh, what is wrong with me...",1517759562.0
decuplet,"Just a minor heads up, the Either monad was renamed to Result in the recent release for the sake of clarity.",1517748548.0
djolereject,"Could somebody explain what do you get from this that you don't have with Operation object typical for dry apps?
I honestly don't see it, but it might be that I'm missing the point.",1517783628.0
PoseidonInChains,">404
Page '/ferro/introduction/' not found

They certainly take the ""No HTML""-approach seriously.",1517761448.0
easydwh,I just fixed the trailing slash problem.,1517820378.0
feelosofee,"This looks like what web development should always have been like.

Thanks for your ideas and effort, I hope it gets a lot of traction!",1518769947.0
sshaw_,"üëç

Suggestion: Add `NobleNames.title(s)` (or similar) and allow one to opt-out of or in to `String#to_title`.",1517704074.0
BashCoder,"The whole premise is weak. As a mature, popular platform, Rails already has a prevalence of pre-existing answered questions (the graph proves this). And as an SO mod, I can attest that we are allergic to duplicate questions. Obviously, that means over time fewer new questions need to be asked. Because Google.

So for a project like Rails, counting new questions asked is likely the wrong indicator of popularity.",1517679983.0
,"Why do articles like this get published so frequently?

",1517678058.0
,"Rails is only getting better. If you are at an agency cranking out a new app every couple of months, then certainly you would want to switch things up and try out new stacks.

But working on an existing main app for my company I cannot think of any reason why I would want to leave Rails.",1517680692.0
musicmage4114,"What is it about people who write articles about programming and not proofreading? No matter the length or complexity of an article like this, there is always at least one incredibly egregious typo. It‚Äôs mind-boggling.",1517680584.0
musingswithawesome,"Yes. It is just mature. I'm sorry there isn't the excitement of having to write your own gem for everything currently. 

I actually can't wait for Rails 5.2 with ActiveStorage. Why don't you talk about that?",1517684661.0
whatsmyline,No,1517678889.0
zverok_kha,"First, it is really far from best Ruby code possible :) But the explanation goes as following:

* For each number in incoming sequence...  `a.each`
* If this number already happened, return it: `return value if counts[value]`
* Otherwise, mark it as already happened: `counts[value] = true`

If you rename `counts` to `already_happened` it becomes clear. Let's look at an example sequence `[2, 3, 3, 1, 5, 2]`:

* 2: happened? `counts[2]` -- `counts` don't have 2-nd element, and therefore returns `nil` (nothing), which is treated as `false`-y value;
* mark 2 as already happened: `counts[2] = true`. Ruby auto-expands arrays on setting too far elements, so now `counts` looks like: `[nil, nil, true]`
* First 3: happened? `counts[3]` is still not there, set it, `counts` is now `[nil, nil, true, true]`
* Second 3: happened? `counts[3]` is `true` now, so we just return it.

BTW, the first step to making the code better (after renaming `counts` ‚Üí `already_happened`), would be making this variable hash (dictionary), not an array. But in fact, the same algorithm could be expressed in more idiomatic way in Ruby.",1517675087.0
stoplight,In newer versions of ruby isnt it illegal to return from a block?,1517680142.0
robotsmakinglove,I feel like this article should've been published in 2015...,1517699959.0
Key720,"Great to see a write up on how to upgrade from Rails from 4.1 to 4.2 as I've been relying on http://guides.rubyonrails.org/upgrading_ruby_on_rails.html but that doesn't cover an area like common gems that don't support 4.2 in more detail. The layout of this article is also much nicer to look at and, thus, actually read too. Thanks!

(Though I feel this should've been in [r/rails](https://www.reddit.com/r/rails/).)",1517863296.0
pedrozath,"1. Formulate a proper question specific question, such as: How can I split a string into lines?

2. Throw that question on Google/Stack Overflow
3. Try at least the top 3 answers
4. If you still can't do it, come here and report to us and I'm sure someone here will help ya.",1517669293.0
GroceryBagHead,"Nobody is going to do homework for you. If you have any specific questions then ask away. 

Looking at that assignment it's clear you gotta figure out how to read files and parse strings. Start there.",1517648684.0
hehestreamskarma,"As someone who uses AMS, this is awesome :) 

Where all does Netflix use Ruby?",1517609343.0
ezekg,"I‚Äôve been using [jsonapi-rb](http://jsonapi-rb.org) in production for awhile now and the speed increase compared to AMS is phenomenal. Interested in hearing how this lib compares, speed wise.",1517633934.0
jrochkind,Can author give a few notes on what they did to make it so much faster than AMS?,1517645080.0
planetofthemapes15,"This is amazing, thanks for open sourcing this!!",1517617926.0
in0pinatus,"Looks nice.

I'm curious how much of the speed improvement is attributable to using the native code Oj library whilst active_model_serializers does not (AFAIK). I know that when I [switched my serialization](http://til.obiefernandez.com/posts/8c31a92080-rails-5-attributes-api-jsonb-postgres-columns) of some embarrassingly large jsonb attribute columns to using Oj that they sped up a fair bit too.
",1517617634.0
myringotomy,"You know what would be really awesome?

If the serializer could work in reverse too. When I give it a json it could upsert the record and all related records.",1517636149.0
thisrealorthisfntasy,Looks nice!,1517616818.0
mrinterweb,Does this do some of the same things jsonapi-resoures provides? I usually use jsonapi-resoures for projects because it does so much out of the box. ,1517692445.0
tenderlove,Wow!  This is great!!!,1517698541.0
AshwiniSukale,"does fast-json-api internally using AMS(active model serialize)? I saw gemspec file, so are we adding some enhancement over AMS here?
where I can find its documentation?",1520925633.0
riddley,"Is this helpful? 

https://github.com/thekompanee/chamber/wiki/Gem-Comparison",1517605092.0
thibaut_barrere,"Sharing it here in hope to encourage more folks to try it out. The more exposure, the more tests :-)",1517578831.0
realntl,You'll definitely need to use substrate if you want fast startup times.,1517629293.0
sshaw_,"What's the use case for this? 

You should add shell scripts that will allow one to autocomplete the gem name. ",1517618825.0
drbrain,"I agree here that #latlng is a better name for a method name than #to_a

However, the semantics of to_s, to_h, to_i are not different. These methods including to_a return a representation of an object, they don‚Äôt say ‚Äúthis object is behaves like this other object‚Äù (to_ary, to_str, etc. do say that).

The to_x methods are part of a conversion protocol to another representation, to_i on IO instances is the closest parallel to the to_a in this article. The to_xxx are part of a substitution protocol that allow you to implement an Array, etc., without subclassing.

For example, to_str should only be implemented when your class expects to have all the features of a String including gsub, =~, bytesize, etc.

If you have a useful array representation within your library you should define to_a because that is what the to_x protocol has always been for.",1517583072.0
sshaw_,"> You should not implement #to_a for your classes

This is a bit extreme. If your class supports being turned into an Array, using `to_a` is fine.

Here are gems where I used it:

* https://github.com/sshaw/normalize_country/blob/3803104b5a9ac307bdf4a442bdd7219911b66805/lib/normalize_country.rb#L24
* https://github.com/sshaw/optout/blob/bc19ff811aeee40ee918eb2a7960478815407a5e/lib/optout.rb#L434

> Moreover, selection of specialized method name almost always leads to a cleaner design

This is independent of wheather or not someone defines `#to_a`.
In your case it just so happens that your array representation could be generated by `#latlon`.


> I‚Äôll ask you this: what is the semantics of #to_a, if the object is not a collection?

I believe this is the case where `#to_ary` is appropriate, but off-hand I'm not sure where in Ruby core/stdlib it's used, like `#to_str` or `#to_path` (see below).


>  What about other #to_<x> methods?

    irb [2.2.5] (tmp)$ class Bar; def to_path() ""to_path""; end end
    => :to_path
    irb [2.2.5] (tmp)$ File.new(Bar.new)
    Errno::ENOENT: No such file or directory @ rb_sysopen - to_path
            from (irb):2:in `initialize'
            from (irb):2:in `new'
            from (irb):2
            from /Users/skyes/.rvm/rubies/ruby-2.2.5/bin/irb:11:in `<main>'


    irb [2.2.5] (tmp)$ class F; def to_str() ""123""; end end
    => :to_str
    irb [2.2.5] (tmp)$ File.new(F.new)
    Errno::ENOENT: No such file or directory @ rb_sysopen - 123
            from (irb):2:in `initialize'
            from (irb):2:in `new'
            from (irb):2
            from /Users/skyes/.rvm/rubies/ruby-2.2.5/bin/irb:11:in `<main>'


`#to_a` was at one time part of `Object`: http://ruby-doc.org/core-1.8.7/Object.html#method-i-to_a.
If you take a look at some of Ruby's many changelogs, there's a lot if interesting `#to_a` related changes.

For additional fun you may also want to see this: https://gist.github.com/sshaw/d01a5cc84f46d54c0566
",1517606463.0
ihaveaninja,"So I should not implement a to_a because it breaks expectations of those who do

    Array.new(myclassinstane)
Instead of

    [myclassinstane]
Did I get it right? ",1517583171.0
jrochkind,"i'm curious why people downvoted this, I found it a good article. ",1517612816.0
isolatrum,"i am inclined to agree. while i don't have a problem with someone creating a 'convert x to y' method, I think it's a little confusing (you could say a little too clever) to define these 'internal hook' type methods and use them without explicitly calling them",1517848174.0
tdammers,"They're making money on the promise that you won't have to think about servers and deployment and any of that anymore. Of course anyone with half a brain can install Linux on a VPS, and get a web server working in like half an hour, but it still takes time and effort, and once you're getting a bit more serious, you will have to think about things like backups, scaling, security, monitoring, logging, etc. You can still do all that yourself, but it's not interesting work, it's not your core business, you're not particularly good at it, and you'd rather not take a gamble on the risk of getting any of it wrong. It's not that people are too lazy, they just have better things to do.",1517568428.0
GroceryBagHead,Fascinating! Tell us more.,1517564991.0
jrochkind,"This guy is the only person I know who has tried both (assuming he's actually tried heroku?) and finds self-managed servers deployed to with capistrano _as easy_.  (Plus, for anything but the most trivial deployment, you're probably going to need some ansible or something similar in there too, in addition to capistrano-rails). 

Heroku is not cheap, there are certainly reasons to choose a cheaper option, especially if your staff time is cheap (or easier to get in a budget for whatever reason), or you scale really large.  Or you don't need/dont' care about having a reliable high-quality deployment I guess. But to say that heroku isn't (a lot lot lot) easier and anyone using heroku is a 'fool'... is insane to me. ",1517601473.0
,"IMO the ease of setting up staging environments makes Heroku worth it.

Add to that not having to worth about system maintenance and it's clearly worth the money",1517676351.0
CodeMariachi,"You're a fool.
If your argument against Heroku is capistrano, then Heroku would be enough for what you want to accomplish.
",1517693697.0
zverok_kha,"It looks pretty nice! I like the base API, it looks cleaner than other approaches to the problem.

I wonder, though, why don't you reuse RSpec matchers for matching the content?

    # before
    .with_content(a: expectations::Anything)
    # after
    .with_content(a: anything)

    # before
    .with_content(a: expectations::ArrayOf[expectations::Anything])
    # after
    .with_content(a: instance_of(Array))

    # before
    .with_content(a: expectations::ArrayWithSize[0..2])
    # after
    .with_content(a: instance_of(Array).and(have_attributes(size: 0..2)))

    # before
    .with_content(a: expectations::NullableOf[1])
    # after
    .with_content(a: be_eql(1).or(be_nil))

Not all of your examples are easily reproducible with built-in matchers, yet I still feel that composability is a way to go, so I'd separate ""new powerful argument matchers"" code from ""match json with content and path"".",1517566276.0
PikachuEXE,"I think for the methods inside
`Jikan::Query` can be changed to different classes

Also not sure what's the use of `@json` ivar
",1517555033.0
sshaw_,"Some quick thoughts: 

[Fix formatting](https://github.com/Zerocchi/jikan.rb/blob/87e5a55d2fb9b472c220bd5bae6afc31012d2e5b/lib/jikan/api.rb#L7)

[`#freeze` these](https://github.com/Zerocchi/jikan.rb/blob/6effd7ea314edda5472b7245a4eb4fd546d7eb9a/lib/jikan.rb#L7-L8)

It can prevent unintentional side effects . For example, maybe somewhere in your code you say `@selected_base.gsub!`. Now `BASE_URL` is broken for lifetime of the process. If it's frozen, a (runtime) exception will be raised. There's actually a comment you can add to your code so that Ruby will automatically do this. This is a better approach but I forget what the comment is. 

Use a library-specific base class for [your exceptions](https://github.com/Zerocchi/jikan.rb/blob/6effd7ea314edda5472b7245a4eb4fd546d7eb9a/lib/jikan.rb#L4-L5). 
Then, if the caller does not care about differentiating between exceptions, then can say `rescue Jikan::Error => e`. 

[Don't raise `NoMethodError`s](https://github.com/Zerocchi/jikan.rb/blob/6effd7ea314edda5472b7245a4eb4fd546d7eb9a/lib/jikan/manga.rb#L16).
See [this](https://www.reddit.com/r/ruby/comments/7nkid2/5_ways_to_deal_with_nil_headaches_in_ruby/ds40mmv/?context=0) for why it's bad. 

Using [`NotImplementedError`](http://ruby-doc.org/core-2.4.0/NotImplementedError.html) is quick, valid replacement but really in
this case there seems to be an underlying design issue. If the method is not available in this context then why is it even allowed to be called?
I'm not sure what to do without further studying your code.

Exceptions raised [by `HTTP.get`](https://github.com/Zerocchi/jikan.rb/blob/87e5a55d2fb9b472c220bd5bae6afc31012d2e5b/lib/jikan/api.rb#L52) 
should not be propagated to caller. You should handle these yourself and raise a `Jikan` related exception. 

Same goes for [`JSON::ParseError`](https://github.com/Zerocchi/jikan.rb/blob/87e5a55d2fb9b472c220bd5bae6afc31012d2e5b/lib/jikan/api.rb#L57). 

See my comments on exceptions [here](https://www.reddit.com/r/ruby/comments/7ttj4q/looking_for_constructive_criticism_of_my_gem/dti5275/?context=2)

No need to call [`#to_s` here](https://github.com/Zerocchi/jikan.rb/blob/87e5a55d2fb9b472c220bd5bae6afc31012d2e5b/lib/jikan/api.rb#L38). 
It's called automatically when interpolating variables in strings via `#{}`. 

",1517767304.0
gryfft,"What exactly are you asking? Is your question specific to a particular platform? Is your question specific to Rails? Are you asking for a resource to [assist with debugging Rails applications](http://guides.rubyonrails.org/debugging_rails_applications.html)?

Your question seems too broad to answer meaningfully. If you were looking for Rails debugging resources, I hope that link helped.",1517528038.0
GroceryBagHead,"Glad it's back. But it should've been open-sourced years ago. During years of non-activity followed by looong downtime there are a number of sites that solve the same problem now: AwesomeRuby list is one of them, Libhunt is another. So the question is, what does it bring to the table these days?",1517535751.0
zverok_kha,"Despite the fact we all loved and used ruby-toolbox at some point, I am a bit skeptical about a human-curated catalog of... ""all ruby gems in existence""?.. (And of those, less fancy yet more transparent solutions like ""awesome-ruby"" repos seem more up-to-date.)",1517522073.0
cliffregis,I am glad they are back and open source. ,1517530027.0
seven_seacat,This is where Ruby Together money goes now?,1517561864.0
4rch3r,So I think the issue you're running into is that most gems are assuming you have a JS environment in a webpage to work with... If you want to render to an image I believe the gruff gem (https://github.com/topfunky/gruff) could be what you're looking for?,1517523901.0
pedrozath,How would a Cartesian product of a Hash work?,1517509185.0
jawdirk,"You can also do

    (1..Float::INFINITY).lazy.flat_map{|a| [a].product([false, true], ('a'..'e').to_a) }

",1517519153.0
menge101,"This isn't specific to your problem, however I have found that Net::SFTP does a bad job of figuring out what version of the SFTP protocol to use, and/or has poorly implemented versions of SFTP* above 3.

In my work, I have monkey patched the maximum protocol version to be 3 and it has resolved many issues for me.

* it could also be that the SFTP server I was using had poorly implemented versions of SFTP above 3.  I just know when I forced it to version 3, everything worked as expected.",1517502573.0
geraldbauer,"FYI: The calendar is an open source page / project built with ... Jekyll and hosted on GitHub Pages. You're welcome and invited to add or update upcoming conferences and camps in the [data/conferences2018.yml](https://github.com/planetruby/calendar/blob/master/_data/conferences2018.yml) datafile, for example.",1517515795.0
SminkyBazzA,In the paragraph after the illustration the first three references to Object B should be Object A.,1517524924.0
jrochkind,"I've never done this, but googling around it looks like you can't uncompress a .zip as a stream, because of the nature of the zip format. It looks like you can with .gz though. 

Googling around further, I think this will be of interest to you: https://github.com/rocketjob/iostreams

Or look specifically at it's 20 line implementation for reading .gz as a stream, which apparently  the stdlib Zlib::GzipReader class does for you, trivially. (I wasn't successful in googling that directly!). https://github.com/rocketjob/iostreams/blob/f07909f7c8f284077e993d496b430fcc6ed25bb7/lib/io_streams/gzip/reader.rb

So without even using that gem, it _might_ be as simple as this:

    unzipped_input_stream = ::Zlib::GzipReader.new(io_stream)
    chunk_size = 1024
    unzipped_input_stream.each(nil, chunk_size) do |chunk|
       your_method_to_write_somewhere_else chunk
       # or output_stream.write(chunk) or whatever
    end


I haven't tried it. but this is the direction to go in. 

https://ruby-doc.org/stdlib-2.4.0/libdoc/zlib/rdoc/Zlib/GzipReader.html",1517459559.0
codeduck,"Here's a very contrived example.

Say you have a server that can only support one connection from your application.  If you create more than one connection, your server croaks.  Also, creating the connection is incredibly time-consuming.  Extra difficulty - your application does many things at once, all of which need access to the server.  So creating connections on the fly and closing them when done isn't a viable strategy.

The easiest way to solve this is to create the connection within a Singleton.  Singleton implies a contract - at most one connection will exist at any time.

(There are better patterns to do this. Singleton is kind of like killing a maggot with a sledgehammer)

The snippet of code you posted doesn't make sense, but it's difficult to understand what the original coder was doing without more context.  From the name of the variable it's likely the singleton is a state store of some sort, and it makes sense to share it across all empty squares.",1517444532.0
pedrozath,"I second @codeduck. The provided code sounds weird to me. Specially if you analyze it in semantic way. Singleton means one single point of connection, one single caching mechanism, one single instance. Why would chess pieces be one of a kind? Pieces may have their own x, y coordinates, possible moves, types, status (alive or killed). Can't imagine all that with a Singleton pattern.
",1517483944.0
jrochkind,"some people say it's never or almost never a good idea to use it. If you don't see where to use it, I wouldn't worry about it. ",1517854783.0
ashwinv11,Very cool! I made a little starter kit with Middleman and Webpack that supports offline mode via the OfflinePlugin. [Here's the repo](https://github.com/ashwinv11/tadka) if you're interested,1517466549.0
tinco,I don't get why they try so hard for this. Shouldn't they be able to just force a pure Ruby version of nokogiri? Or is nokogiri so dominant in benchmarks that that would negate their performance improvement?,1517467519.0
stanislavb,"do I understand this correctly that Truffle ruby gives performance improvements up to x7-x8 times over MRI 2.4? 
https://pragtob.wordpress.com/2017/01/24/benchmarking-a-go-ai-in-ruby-cruby-vs-rubinius-vs-jruby-vs-truffle-a-year-later/",1517454570.0
musingswithawesome,"Very cool. 

Does this mean we have to pay for Ruby now? I'm sorry, but Oracle has been tough to work with sometimes. They may squeeze my wallet for this comment. ",1517458688.0
ksec,"So what is left? Noko and OpenSSL is done. May be the only missing piece is install from RVM?

I cant wait to see benchmarks of Truffle Ruby with SubstrateVM running the discourse benchmark.",1518351646.0
chriscarpenter12,Link 404 for me,1517454248.0
GDP10,[Yay!](https://www.youtube.com/watch?v=TXtDuU6bqNo),1517433268.0
tomcopeland,I think various code analysis tools and whatnot have webhooks set up for every new gem (or every new release?)... so there's always an undercurrent of more or less immediate downloads after a release.,1517421816.0
sshaw_,Good question. ,1517618898.0
saturnflyer,"TL;DR: add `to_s` to your eager load and autoload paths so that you don't shovel Pathname objects into `$LOAD_PATH`.
I also added `$:.map!(&:to_s)` to my environment.rb for good measure.",1517419478.0
honeyryderchuck,"Claims: ""we will not go into comparing Active Storage with existing solutions, be it CarrierWave, Paperclip or Shrine, but rather try to make a beginner-friendly introduction to the framework"".

Two paragraphs later: ""This approach sets Active Storage apart from the competition. Paperclip, Carrierwave, Shrine‚Äîall these popular solutions require you to""",1517435076.0
janko-m,"> This approach sets Active Storage apart from the competition. Paperclip, Carrierwave, Shrine‚Äîall these popular solutions require you to add columns to existing models.

This is also written in the ActiveStorage readme, but it's not strictly true. With any of these solutions you can set up uploads on a separate `attachments` table, and link it with other tables via polymorphic associations. ActiveStorage does make it more streamlined, though.",1517440483.0
obviousoctopus,The direct upload doesn‚Äôt require webpacker. The js is already included. All it needs is a CORS policy on the server and direct_upload: true on the form file field. ,1517457880.0
geraldbauer,"FYI: The calendar is an open source page / project built with ... Jekyll and hosted on GitHub Pages. You're welcome and invited to add or update upcoming conferences and camps in the [data/conferences2018.yml](https://github.com/planetruby/calendar/blob/master/_data/conferences2018.yml) datafile, for example.",1517515843.0
gray_-_wolf,"	def wrap_text(txt, wrapper)
		wrapper + txt + wrapper
	end

but this is pretty basic stuff, you should really read up on ruby (or probably programming in general)

EDIT: after discussion below you should probably use /u/4rch3r 's version: https://www.reddit.com/r/ruby/comments/7u9tg3/wrap_text_method/dtj642y/",1517405217.0
4rch3r,"I would also checkout string interpolation as it's super useful:

    def wrap_text(txt, wrap)
      ""#{wrap}#{txt}#{wrap}""
    end",1517425446.0
Enumerable_any,"I used `method_source` to get the source code of a block and `ruby_parser` to parse it here: https://github.com/timhabermaas/ruby_monad/blob/a880fd3209425a023ce14a2c7ad8a73761078db7/lib/monad/syntax/do.rb#L25-L26

My use case was using Haskell's do notation in Ruby to escape callback hell for the monadic bind: https://github.com/timhabermaas/ruby_monad/blob/a880fd3209425a023ce14a2c7ad8a73761078db7/spec/monad/syntax/do_spec.rb#L21-L25

What are you building?",1517389761.0
gray_-_wolf,"    val = instance_eval(File.read(script), script)

> probably unsafe

afaik ruby doesn't have any sandboxing method, so you have to trust script B not to do anything weird anyway

EDIT:

run in this way, the script B shares interpret with script A. That might or might not be a problem (== GIL is in play). If it's a problem, you could just fork (and spawn subprocess if on windows) and get resulting value via https://ruby-doc.org/core-2.5.0/Marshal.html ;",1517375403.0
,[deleted],1517360648.0
,[deleted],1517354287.0
jrochkind,"Is there some way to automate this (even partially?)

I've been disapointed in rubysec not meeting it's potential. I don't think just asking for more occasional spare-minute volunteers is going to solve things. There have been PR's for CVE's that sat unmerged for weeks/months before. I think it probably either needs more dedicated staff, or more automation, or both. ",1517409829.0
ScootsMcGootz,"No experience on this myself, but I went to this [talk at RubyConf](https://www.youtube.com/watch?v=1mme7HiLqzA) and found it quite informative. One of the biggest issues people run into with this is reading and writing to the file system IIRC, but there are workarounds.

",1517327973.0
cray4K,You‚Äôre probably missing cacert.pem and/or SSL_CERT_FILE env variable pointing to that file.,1517299703.0
jaredlt01,Are you developing on Windows? Most likely the cacert.pem issue that cray4k mentions. Follow the top answer here: https://stackoverflow.com/questions/5720484/how-to-solve-certificate-verify-failed-on-windows in step 1 you don't have to use that directory. You can put the file in any directory just so long as you specify the correct system variable VALUE to the right path. Hope that helps!,1517303130.0
thibaut_barrere,"I'm not completely sure why yet, but I had apparently troubles while upgrading when using `passenger_pool_idle_time 0`. I opened a ticket https://github.com/phusion/passenger/issues/2020.

EDIT: it's apparently affecting the default installation (= when you use the apt package without providing your own configuration), says Vvangemert [here](https://github.com/phusion/passenger/issues/2020#issuecomment-361536317)",1517304115.0
friendnoodle,"> We have been thus far unable to compile Passenger on Ubuntu 14.04 ""Trusty"" 32 bit, using our build system. This is due to gcc using more than 3GB of virtual memory while trying to compile the latest codebase

what is even happening

passenger is bigger than emacs now?!
",1517433829.0
laerien,"Add your LICENSE, README, etc. files to your `spec.files` in `binance.gemspec` in addition to the `lib/` dir files you've already added so they ship with the gem.

Remove the `spec.bindir        = 'bin'` line, since those are Bundler dev files not your gem's executables. They shouldn't ship with your gem as bindir executables. (Bundler has the odd convention of an `exe/` directory, as opposed to the longstanding `bin/` RubyGems convention.) When you follow Bundler's way, use ``spec.bindir        = 'exe'` instead if you ship executable files. In your case you can just omit the line until you have an executable.

You might consider adding frozen string literal comments to all your Ruby files.

Congrats on cutting a nice-looking gem!",1517261922.0
sshaw_,"Very nice. 

Some ideas: 

* Tests

* Exceptions/encapsulation of gem/API internals

Faraday exceptions are passed to caller, etc... They should be wrapped in an exception (or exception hierarchy) specific to your gem. Otherwise client will do this: 


    begin 
      client.klines symbol: 'NEOETH', interval: '1m', limit: 1
    rescue Faraday::Error => e
      # something...
    end

Then if you choose to change to `Net::HTTP`, existing users code will break.  In addition, clients are unaware of what exceptions are raised. 

Would be nice if params uses Ruby conventions: `client_order_id` instead of `clientOrderId` and maybe even `quantity` instead of `executedQty`. In general your client should enhance user's experience when dealing with an API. 

* Use  `public_send` instead of `send`

This prevents calling methods that are not meant to be called. In general I'd only call `send` on classes I created. In [this case](https://github.com/craysiii/binance/blob/23533bb44bc2e4534950957fc1c7710c5db882f1/lib/binance/client/rest.rb#L100) it appears unnecessary. 

Nice to have: 

Debug option to output HTTP request/response (though I don't thin Faraday supports one of these). 
",1517284956.0
mencio,Don't forget to fix styling and other code quality things as well: https://app.coditsu.io/opensource/builds/commit_builds/1562a833-2aed-46ab-a136-127231795613/validations,1517299547.0
GroceryBagHead,"It's lacking tests. I get that it's an api wrapper, but you need to ensure that your methods do what they suppose to. Look into VCR to set up external api tests. You also need to test things that don't require mocking.",1517301250.0
hmans,Because you're a consultancy and you want to maximize billable hours by making things overly complex.,1517292343.0
mperham,Those samples are starting to look uncomfortably like Java/Spring code.,1517425959.0
jrochkind,"[bindata](https://github.com/dmendel/bindata) is another long-standing ruby tool for describing binary formats to read and write. It doesn't use yaml files though, for better or worse, and is not platform-independent. 

The pre-existing parsers for kaitai are nice. Who wants to add `woff`? :)",1517243126.0
wbsgrepit,"May want to add a little more guidance (or modify the examples) to ensure a safe and closed proxy.   It apears as though your examples both show unsuspecting users how to create a open proxy on your servers.   May be great for doing protocol conversion,  but also great for hackers looking for a stooge network.",1517509293.0
otakugrey,Thank you so much. I always wish that there were more GTK tutorials or Ruby. There are almost none.,1517219942.0
lpmusix,"At RubyConf 17 this guy demoed his software (pretty bitchin'):
http://sonic-pi.net/",1517193909.0
,[deleted],1517192079.0
vegankush,"Awesome! I will definitely use this... I'm wondering what ideas you have for representing wind/brass instruments since the notes are less visually obvious.

I'm thinking of how I might add a representation for trombone for example. There are 7 slide positions and trombone doesn't require transposition so it shouldn't be so difficult to add I'm just struggling to think of an easy way to represent multiple notes on the same position and indicating which are higher or lower in pitch.",1517194009.0
Paradox,"I really like what you've done with the TUI driven stuff. Very impressive work. Using something like chroma to come up with a color palette for the scale view is fairly inspired, and not usually something you'd see in a TUI app.

",1517183616.0
moseknows,I love this,1517189881.0
PMDevS,"This is amazing, thank you for working on this! Do you have any plans/interest in adding 9ths, 11ths and 13ths?",1517196297.0
equivalent8,"Nice job.

Also want to point out ""Sonic PI"" on Ruby Rouges podcast https://www.youtube.com/watch?v=0FsgNR3EobE",1517244216.0
hehestreamskarma,This is so cool.,1517177820.0
Zerocchi,"Really beautiful command line app. I love music, but I don't really know the theory and such and this is definitely a great starting point. ",1517206132.0
impurist,Very cool. ,1517219921.0
aspleenic,Very nice! there are quite a few ruby musicians out there. We had David Padilla of Michelada.io a few years ago at Nickel City Ruby and he presented a thing called banjo.rb - [video here](http://confreaks.tv/videos/nickelcityruby2014-live-coding-music-with-ruby),1517239962.0
DudeManFoo,This... and you... are bad ass.,1517626045.0
pedrozath,I created a room on Gitter for discussing the project. Feel free to join: https://gitter.im/coltrane-music/Lobby,1517261037.0
yolkyal,"I would get rid of those natural symbols if you could, I think they create a bit of a distraction, especially since you'd never see notes written out in that way usually.",1517395855.0
CaptainHondo,"Yeah, but I have yet to combine them.",1517217430.0
,Welcome Matt! (So sorry. I'll see myself out),1517173419.0
popchuckles,hello Matt,1517164272.0
JapArt,Hello Mat! I think you are doing a great decision. I started  building small web apps 5 years ago and now I have a business that supports my family. Keep always learning because there is a lot to learn. I wish you a lot of success!!!,1517172879.0
cliffregis,Hi Matt welcome. Make sure to check out [Ruby Doc](https://ruby-doc.org/) ,1517171928.0
geheimnisse,eyyyyyyy que pasa matt,1517200471.0
maxiedaniels,hello matt,1517168797.0
obviousoctopus,"If you‚Äôre starting with ruby, you may enjoy the exercises in https://github.com/JoshCheek/ruby-kickstart

They will teach you both Ruby and some computer science fundamentals, all in one. 

You may need to have someone set this up for you and show you how to run the tests. Once set, these are a lot of fun. ",1517462958.0
thibaut_barrere,"This bug [prevented the new rbspy profiler](https://github.com/rbspy/rbspy/issues/70) from being used on Mac OS X High Sierra.

This means that the brand new [mac-support](https://github.com/rbspy/rbspy/tree/mac-support) branch is now working successfully on Mac.",1517160063.0
a__b,This is deep,1517150351.0
tincholio,"They'll be well prepared to find new jobs...

At the job inteview:

- So, we'd like you to implement FizzBuzz, have you heard of it?

- I literally wrote the book on it!",1517161455.0
theGalation,"I haven't gotten fizz buzz yet but I like

    fizzbuzz = ->(n){
      [[
        [""Fizz""][n%3],
        [""Buzz""][n%5]
      ].join].find(Proc.new{n}){ |result| !result.empty? }
    }
    
    16.times do |n|
      puts fizzbuzz[n]
    end

Provides opportunity to talk about a few different things in Ruby. 

I've asked friends on why they would use FizzBuzz and it comes down to 'see if they can code'. 

There seems to be a stigma that Master & PHD degrees know how to research but not code. ",1517270343.0
miromanyth,This is awesome! I've been wanting to write a roguelike style game in Ruby and this is just the push I need to get rolling. Do you have any sample games up anywhere?,1517072618.0
otakugrey,"Neat, how does it compare to Gosu?",1517219372.0
amadman114,"Would love to give something like this a go, either with plain Gosu or with your gem. I'm a Ruby/Rails dev with no background in, and little understanding of, game development. What's the best tutorial you recommend for someone like me?",1517108084.0
jrochkind,"`def initialize(bar: Bar.new)`

As you've written that, if you don't pass an argument, and it tries to take the default value, `Bar.new`, then it will _raise_ because its missing Bar's required initialization parameter. You can't actually call `Bar.new` with no args, without getting an exception raised. 

So no, that's never okay. You have a default argument that actually will always result in an ArgumentError being raised if used. So you don't really have a default argument value for `Foo.new(bar:)` at all. The `bar` keyword to `Foo.new` is actually required, not optional.  So just write it that way. 

If you want it to be optional, but still result in a `Bar` instance -- then you need `Bar` to have a default value for `baz` initialization keyword too. Or you need the `Foo` initializer to choose something to pass in as `Bar.new(baz: reasonable_default_when_in_foo)`. Either there are are reasonable default values for these things -- or there aren't. If there aren't, then the caller has to pass something in. There's nothing more complicated about the situation than that. ",1517017243.0
ihaveaninja,"I avoid named parameters on mandatory arguments making it

    def initialize baz
       @baz=baz

    

But I bet you have a reason not to use this in the real implementation",1517007424.0
theGalation,"I'd appreciate any feedback! Was this helpful, difficult to read, make you curios about exploring RSpec?",1517000066.0
grokfail,"If the administrator needs to manage data which is on the website, their application will need to connect to the server that is running the website. 

A locally packaged rails application will not do this but would instead connect to a local database.

If that is the case, you might consider building your administrator interface in rails, and deploying a single site browser using something like nativefier to build an executable that just visits the url of the rails app.

https://www.npmjs.com/package/nativefier",1516976647.0
LegionSB,"It sounds like you have some other options going already, but just one to know about: http://shoesrb.com/",1517030924.0
kcdragon,"I'm surprised they are asking you to use Swing. It is not even the most up to date desktop framework in Java. I believe JavaFX is the standard now in Java desktop development.

You could use JRuby and JavaFX https://github.com/jruby/jrubyfx I saw a conference talk a couple years ago about that being a pretty viable option in the Ruby desktop app world since it leverages a mature desktop framework.",1516992427.0
Dinos_12345,"Apparently Ruby does GTK 0_0
http://iridakos.com/tutorials/2018/01/25/creating-a-gtk-todo-application-with-ruby.html",1517589693.0
feelosofee,"Check my answer here where I recently reviewed all the possible solutions:

https://www.reddit.com/r/ruby/comments/42xxsp/flammarion_the_nifty_ruby_gui_toolkit/czvtbli/",1517953211.0
GroceryBagHead,Woo. My gem is featured.,1516927500.0
hehestreamskarma,"Not going to lie, I always really loved Visual Basic. My first language was VB4. It was life changing.",1516921992.0
didroe,"For anyone else reading this, here is a formatted version:

    a = [""a"",""d"",""b"",""b"",""a"",""b"",""c""].sort 
    b = [] 
    y = 1
    i = 0 
    while i < a.length 
      if a[i] == a[i + 1] 
        y += 1 
        i += 1 
      else 
        b << { a[i] => y } 
        i += 1 
        y = 1 
      end 
    end

/u/elaitman1, to directly answer your question, you could do this:

    b.sort_by do |hash|
      hash.values.first
    end

But it looks to me like you might be able to solve the overall problem in a better way. Could you explain a bit more about what you're trying to achieve? Are you trying to count the number of times each letter occurs and return the counts in order?",1516911500.0
realntl,"> There always will be voices about the last form being ‚Äúobscure‚Äù and ‚Äúunreadable for novices‚Äù, but for most of us it is pretty idiomatic and play well with habits and intuitions we developed while processing collections in the same way (chaining the processing blocks with map, select, reject and others).

I don't know about this. There's a thin line between leveraging language features to write more idiomatic code, and over indulging them. Specifically, I look at this example and have some concerns:

    construct_url
      .yield_self { |url| Faraday.get(url) }
      .yield_self { |response| JSON.parse(response) }
      .dig('object', 'id').yield_self { |id| id || '<undefined>' }
      .yield_self { |id| ""server:#{id}"" }

I don't like how so much code happens in this ""paragraph."" Each one of those lines is connected to the other lines, so it's not exactly easy to study the code line-by-line. Particularly because the receiver changes after every line of code. And whenever I see such high code density, I almost always find incomplete tests, because there's actually a lot of permutations of possibilities. What happens if the HTTP request fails? What about a JSON parsing failure? Etc.

If someone instead wrote the same code more procedurally, as in the original example in the blog post, I would appreciate their discretion.",1516904448.0
zverok_kha,Just a few words on `yield_self` awesomeness and few (weird) usages following from the fact it can return `Enumerator`,1516903171.0
isolatrum,while i like yield_self i still find it a little too verbose to want to use it instead of reverse-order expression chains like `m3(m2(m1(arg)))`,1517246276.0
Pokeconomist,"Credits to #MeowChow from http://www.perlmonks.com/ for the original Perl idea (at least according to [here](https://www.cpan.org/misc/japh))

",1516887391.0
chandeeland,"""Just another Ruby hacker,""


hacker,""


r,""

,",1516902654.0
sshaw_,üëè,1516936156.0
_matthewd,https://github.com/SamSaffron/lru_redux,1516882793.0
jrochkind,"By ""efficiently"" you mean performance? Benchmark it and find out!  But I doubt it. I also doubt the performance differences will matter that much to most uses. But I'd regardless use someone else's mature, robust, and tested LRU cache solution though, if I could find a reasonable one, like the one matthewd links to. ",1516886940.0
funny_falcon,"You understand right.

Until 2.4 Ruby's Hash were really implemented as hash table+linked list. So it is were exactly similar to classic LRU structure (except you have to manually delete an reinsert items, as you correctly described).

Now it has different structure, but it preserves whole semantic. So, yes, using manual delete and reinsert you may efficiently use Hash for LRU.

Btw, there is mine https://rubygems.org/gems/inmemory_kv that could be used if your data can be serialized. It is a bit more memory efficient. And doesn't encounted by GC.",1517163780.0
ioquatix,This is awesome!! I have quite a few place I could use this. Looking forward to trying it out. Thanks for your efforts.,1516838542.0
cawil,I love the tty suite and have been using teletype on a personal project - thank you for all this excellent work!,1516852508.0
sshaw_,"This would be nice for a Markdown-based usage (sorta like Perl's [`Pod::Usage`](https://metacpan.org/pod/Pod::Usage)):

    require 'tty/markdown'
    require ""optparse""

    OptionParser.new do |opts|
      opts.on ""-h"", ""--help"" do
        $stderr.puts TTY::Markdown.parse(DATA.read)
        exit
      end
    end.parse!

    __END__
    **foobar** - command to do something

    ## Usage

    `foobar [options] file`

      * `-a`      This does foo
      * `-b``MAP` Mapping for something

    ## MAP

    Map is a list of blah pairs

    ## More Info

    - [Docs](http://example.com/docs)
    - [Bugs](http://example.com/bugs)",1516845478.0
electrostat,This is great!,1516862994.0
tobeportable,Will make for some great vim preview,1516864183.0
schneems,"The questions start off okay, then towards the end get into some trival details that people might not be familiar with.

A good interview activity would be code reading. If the interviewee has public code read through it with the interviewer and explain the problem, how it was uncovered, different solutions that were attempted, how the final solution became implemented, and then have them walk through the implementation. Can always ask for ""what could you do to make this better"" etc.

If they don't have public code, then the company interviewing can have some solutions to some ruby kata programs (like converting numbers to roman numerals) ready, have the interviewee attempt to read through the code. Give them the prompt ""there is a critical system that was built by one programmer who mysteriously left, you need to decipher what the program does, and how it does it"".

Even if they don't know a method or some specific syntax, pay attention to the questions they ask. The point itsn't to see how much syntax trivia they've memorized but rather how well can they communicate.

If you can communicate well, you can learn syntax. If you can't communicate, I don't care how much syntax trivia you know.

",1516853597.0
Johnsalzarulo,"WORK IN PROGRESS! I need your help - 

This guide is intending to help identify issues with a ruby on rails deployment unrelated to bugs. Things like server scaling, CDN etc. It assumes you are working in an environment with decent test coverage and no recent deploys have been made but you are getting that ""Shit the site isn't working"" text message.

Leave your comments here on what doesn't make sense / what I am missing. I'm planning on building this out into a robust guide including top tips and solutions for solving each of them. Thaaaaaaanx",1516820138.0
equivalent8,"to provide some context Cosmos DB is product from Microsoft Azure (with some similarities to AWS Dynamo DB ) ...Cosmos supports several types of API to communicate https://docs.microsoft.com/en-us/azure/cosmos-db/  ...but the nice thing for Rails developers is that you can just use Mongo API => use Mongo Mapper or Mongoid . But getting the connection on was bit tricky, that's why this TIL note",1516816591.0
,tldr -> no.,1516820222.0
this_is_not_nil,"Great work, and cool that Postgres have built-in features to support it.",1516819666.0
,Thanks for this!,1516864330.0
planetofthemapes15,"Very cool, thanks for posting!",1516866385.0
vtloc,"Great article, thanks for your sharing",1516892172.0
editor_of_the_beast,Haven't heard of Raiks üòê,1516805039.0
derrickcope,Mechanize,1516804834.0
zverok_kha,"The best tutorial is Facebook APIs official docs. They explain everything on tokens and auth pretty clearly. Start from here: https://developers.facebook.com/docs/graph-api, then apply the knowledge to koala :)",1516817047.0
gray_-_wolf,requires javascript... :/ I get fancy facebook stuff not working at all but all I get is a blank white page... bit overkill imho,1516817265.0
sshaw_,"In order:

* http://ruby-doc.org/core-2.5.0/doc/keywords_rdoc.html
* http://ruby-doc.org/core-2.5.0/doc/syntax/precedence_rdoc.html
* http://ruby-doc.org/core-2.5.0/doc/syntax/methods_rdoc.html
* http://ruby-doc.org/core-2.5.0/doc/syntax/modules_and_classes_rdoc.html
* http://ruby-doc.org/core-2.5.0/doc/syntax/exceptions_rdoc.html
* http://ruby-doc.org/core-2.5.0/Array.html
* http://ruby-doc.org/core-2.5.0/Hash.html
* http://ruby-doc.org/core-2.5.0/Enumerable.html
* http://ruby-doc.org/core-2.5.0/File.html
* http://guides.rubyonrails.org/
* https://relishapp.com/rspec/
* http://www.betterspecs.org/
* http://ruby-doc.org/stdlib-2.5.0/libdoc/json/rdoc/JSON.html
* http://ruby-doc.org/stdlib-2.5.0/libdoc/net/http/rdoc/Net/HTTP.html

Ultimately you should know this stuff very well. 

**Edit**: [Minitest](https://github.com/seattlerb/minitest) is also popular. Find out what your to be workplace uses and if it's Minitest then check these out: 

* https://blog.codeship.com/getting-started-with-minitest/
* http://www.rubyinside.com/a-minitestspec-tutorial-elegant-spec-style-testing-that-comes-with-ruby-5354.html
* http://www.rubydoc.info/gems/minitest

And bookmark these sites (but be sure to use the versions of the docs that match your codebase's versions):

* http://api.rubyonrails.org
* http://rubydoc.info
* http://ruby-doc.org

This will help when you're fiddling around with objects and methods in irb: https://github.com/ariabov/pry-toys
",1516764320.0
jawdirk,"I would recommend reading the documentation for Enumerable, Array, and Hash all the way through. Another good thing to do is read the source code of some widely used gems - try to understand the techniques that don‚Äôt immediately make sense to you. You‚Äôre not reading for comprehension, just to look for pieces of code you don‚Äôt understand. Each of these can be a small research project. This will get you used to reading other people‚Äôs code, start to build your sense of what code should/could look like, and demystify what important, successful programmers are doing.

Along the same lines do something like setting up a project using some of the technologies your next employer will be using on your home computer. Get good at googling obscure errors!",1516758673.0
theGalation,"Finished Chapter 4 of Effective Testing. Starting out with a Test File and using it as a base of operations was new. I think I like it. It reduces the cognitive load of where I am going and what I am doing. 

I appreciate any feedback.",1516747984.0
GDP10,Neat stuff! Reminds me of [this cool article](http://nullprogram.com/blog/2014/01/04/) about Emacs Lisp's guts.,1516970251.0
banister,"Quite interesting. It looks nice :) However, I take issue with:

> The key difference between pry, etc...Fir is that fir puts stdin into raw mode which allows us to provide features like autosuggestion a la fish, and automatically indenting/dedenting code as you type. 

The article is written as if Pry cannot do auto-indent/dedent, but it's had this feature for years. Further, with the correct plugin (`pry-cooline`) it also auto-colors input with every key stroke.

See here, code is both correctly indented on input and the text is colored *as you type it*: http://recordit.co/cwJKuFWfAk",1516780466.0
quote-only-eeee,"Cool! *Firre* would also be a good acronym for *Friendly and Interactive Ruby REPL*, as that is a diminuitive of sorts for ‚Äùfish‚Äù (‚Äùfisk‚Äù) in Swedish :-)",1518864284.0
Enumerable_any,"It's called the ""standard library"" and it is shipped with Ruby by default. Here's a list of all the things [1] which are part of the standard library: https://ruby-doc.org/stdlib-2.5.0/

[1] modules? files? libraries? not sure what the correct term is.",1516745515.0
joltting,"Things get even more interesting/odd when you consider, PrettyPrint is now auto required (as of 2.5).",1516817327.0
isolatrum,"Some of the ones I use most frequently are json, erb, ostruct, and benchmark.",1517246541.0
FatAmericanDev,"You had to install a gem unfortunately, get a look at this diva...",1516822885.0
rurounijones,"A reminder, just to be safe: 

""TruffleRuby is progressing fast but is currently probably not ready for you to try running your full Ruby application on. Support for critical C extensions such as OpenSSL and Nokogiri is missing.

TruffleRuby is ready for experimentation and curious end-users to try on their gems and smaller applications.""",1516763937.0
,"I'm curious if Jruby can use graal and have same speed. Any way, I guess this is one of the great hopes for speed for ruby. ",1516736794.0
schneems,"Site doesn't load for me. Not sure if it's on there or not but I recommend https://www.schneems.com ;)
",1516730003.0
derrickcope,"There is an online book that I have been having a good time using recently called Bastards Book of Ruby.

Ruby.bastardsbook.com

I needed something light after finishing The Well Grounded Rubyist.",1516789910.0
thisrealorthisfntasy,Reminds me of the schema/validation from http://dry-rb.org/gems/dry-validation/,1516725209.0
lygaret,"I've been working on a personal project and realized I had broken out a piece of utility functionality that might be useful to others. I haven't put together a real gem before, and thought this would be a worthwhile project.

`rack-params` provides a DSL for type coercion and validation of hash values. For example:

    def some_action(values)
      result = validate(values) do
        param :id, Integer, required: true
        param :title, String, required: true
        param :created_at, DateTime
        param :tags, Array, sep: "" "" do
          every Symbol
        end
        param :content, Hash do
          param :headline, String, required: true
          param :body, String
        end
      end

      fail unless result.valid?
      fail unless result[""tags""][""content""][""headline""] == ""Something""
    end

It also provides a mixin for the case of using a framework within Rack that provides `#request`, which overrides `#params` and allows `#validate` to not take a separate values parameter. 

    get ""/"" do
      validate do
        param :id, Integer
      end

      params.valid?
      params.errors[""id""]
    end

Any sort of code review, thoughts, etc. would be rad, especially around testing and the readme - I'm working on beefing up the RDoc now.

Thanks!",1516698904.0
ioquatix,"
Awesome, have you considered performance?",1516700726.0
lygaret,"Someone asked why (and then deleted their comment :/), but I wanted to throw this out:

We've all been in a place where there's something established that might do a thing better, but I'm pretty committed to the project this came from being 100% mine from top to bottom, since it has exactly 1 real user, and I'm feeling like more of a plumber than an engineer lately.

Thanks for taking the time, and if anyone gets a chance to dig into the code and find something you want to yell at me about, please do! You only get better when you ask...",1516727241.0
zverok_kha,"On a gem's page, at a very bottom right corner, ""reverse dependencies"". 

Example: https://rubygems.org/gems/sequel/reverse_dependencies",1516695368.0
andyw8,"Here's another way, using a recently added GitHub feature. Go to the repo then Insights -> Dependency Graph -> Dependents.

e.g.

https://github.com/collectiveidea/delayed_job/network/dependents",1516815818.0
jrochkind,"Ruby is as appropriate as anything, and yes, that is a typical Rails app. 

But you are almost certainly under-estimating the difficulty of creating such software, especially as someone with only rdbms/sql as prior programming experience. I think it's going to be much much more challenging and time-consuming than you think. It's like asking ""I've never really picked up a hammer before, but what kind of wood is best to build a garage? It doesn't need to be a very complicated garage, should be easy right?"" 

I've never used C#, but I'm sure that would work too. Couldn't say which would be easier.  I suspect neither one is that feasible.  ",1516660525.0
nfstern,"I think you'll have an easier time with it using Rails as opposed to C#.  

There are several CRM gems out there that might work for you with Fat Free CRM being the most popular.  It's actively being maintained.",1516660994.0
IAmScience,"Rails was originally abstracted out of the tools used to build the Basecamp project by 37Signals. Basecamp is precisely the sort of collaborative CRM software that you're talking about building, so I think Ruby/Rails is probably as good a choice as any if you want to go it alone. However, I would encourage you to look into something like Basecamp, instead of trying to build from scratch. Even what seems like a smallish application can get pretty overwhelming pretty quickly. I built a registration system for a small summer camp that I run, and it's at a point where I could really use some extra hands (my test coverage is abysmal, I have features I'd like but don't have time to build, I have bugs that I need to squish and don't have time to deal with). I wind up spending more time each year on fixing weird little problems, rather than growing things out. I'm not saying that what you want to do isn't possible, but even with something as easy-to-learn and straightforward as Ruby and Rails, it's a challenge. And there are pre-made solutions that might be better suited to your needs. ",1516693739.0
neumanrq,"Yes, Ruby could be a good fit for you. We have implemented a custom tailored CRM as a web application that anticipates our business processes for our medium size company. I can't make a comparison to other programming ecosystems, but working with Ruby and Ruby on Rails was (and is!) is very enjoyable yet productive. 

I'm pretty sure you can achieve the same using other languages and their frameworks. My advice would be: Pick a first simple feature that your CRM needs to serve and try starting off to build a minimalistic version it with Rails. I'd start off with a CRUD-like Mini-system, i.e. a web app that lists your customers in a really simple way (like in a spreadsheet) and where you can add, modify and delete single lines. From that on you can iterate making it more ""complex"". If you have, after starting off, the feeling Ruby isn't simply what you want or you don't like it for whatever reason - then at least you have learnt this and can throw it all away. 

Another hint on your thoughts of ""functional Ruby"". I'm really addicted to functional programming and Ruby definitely encourages you to make use of FP patterns. But of course Ruby is not Haskell nor Coq - Ruby is a multiparadigm language that is not purely based on functional programming. The good news are that Ruby offers a very nice paradigm mixture that, in my opinion, works out very well and functional programming is woven into the core language, you don't need any additional library (To make it more clear: Not every aspect of functional programming is perfectly adopted by Ruby - as I said, Ruby is not Haskel, which is completely fine!)

I'd encourage you not focusing too much on this question if you can write functional Ruby: Start finding a solution for your specific problem. If you ""think"" in a functional way and learn Ruby you will automatically produce functionally flavoured Ruby code. And this ""functional Ruby"" depends on your abilities, but again, nevermind: That's perfectly fine. You can't be perfect from the start. My experience is that even beginners without having much experience can write code that is influenced by functional programming, you don't need to be super-duper-experienced developer, you just need to learn to think in a functional way. ",1516687641.0
fickentastic,"Look up CRM's on Github, see if it's maintained and how many followers. You'd still need to implement, test and dba it. ",1516669016.0
tadrinth,"I wouldn't go for C#, but you may want to look at Django.  It's in Python, which was designed specifically to be easy to learn, and I have the vague impression Django apps end up scaling better than Ruby apps.  ",1516664989.0
in0pinatus,"This standard boilerplate in a Rails controller will be familiar to many:

    respond_to do |format|
      format.html { redirect_to @thing, notice: ""Updated"" }
      format.json { head :no_content }
      format.js { head :no_content }
    end

so I'd follow this pattern and write

    vertical_split(5) do |split|
      split.top { header }
      split.bottom { body }
    end

Some might say just being a Rails idiom doesn't make it a Ruby idiom, but it's easy to read, and it's open for extension.

Here's a tiny (but not robust) implementation of the pattern:

    class Collector
      def method_missing(part, &block)
        define_singleton_method(part, block)
      end
    end

    def vertical_split(n)
      collector = Collector.new
      yield(collector)
      ""n=#{n}, top=#{collector.top}, bottom=#{collector.bottom}""
    end

For a robust (but over-engineered) treatment see https://github.com/rails/rails/blob/master/actionpack/lib/action_controller/metal/mime_responds.rb",1516656963.0
isolatrum,"The closest thing I can think of is to make a chaining-syntax, for example:

    class Foo
      def a(&blk)
        blk.call
        self
      end
      def b(&blk)
        blk.call
        self
      end
    end
    
    Foo.new.a {}.b {}
    # or
    Foo.new.a do
    # ...
    end.b do
    # ...
    end",1516643677.0
bascule,"Two stabby procs?

```
vertical_split 5, top: -> { header }, bottom: -> { body }
```",1516640655.0
otikik,"I don't remember having to do this, but if I had to, my first impulse would be wrapping blocks into Procs and passing them as regular params. If all the blocks where ""of similar importance"" then I would wrap all of them. If one block ""stands out as the main action"" then I would leave that one as a block and pass the other(s) wrapped in Procs.

That said, ideally a method should do only one thing. Having to pass more than 1 block to it seems to indicate your method is doing more than 1 thing at the same time. Consider splitting things up into smaller methods.

",1516635471.0
jrochkind,"This seems interesting, but the docs are leaving me a bit confused about how it works. 

In the example ""Also, you can register more than one ability in one place and use string or symbol keys:"", I don't understand how these ablities are triggered -- do PostAbilities and AdminAbilities somehow _both_ apply at once?  Can you add to this example to show how you'd call the auth check, and what would be checked?",1516640851.0
Morozzzko,"Loved the library when I first saw it (a couple of days ago, though)

Got a question though

What's up with the naming? 
As far as I understand, `Abilities` are basically the same as `Permissions`. However, the latter word is used a bit more frequently.

What's the story behind the odd name? Or did I misunderstand the purpose of the Abilities?",1516638605.0
janko-m,Could you give a concrete example of both application and test code? I'm having a hard time visualising your problem from the description you provided.,1516630390.0
Enumerable_any,Why do you want to use stubs instead of real objects with the proper types? I don't see any benefit in stubbing [value objects](https://en.wikipedia.org/wiki/Value_object).,1516623810.0
decuplet,"A note of warning, do not build types on the fly. Types are stateless and their construction takes time, assign them to constants and reuse.",1516694947.0
cray4K,How can it be a gem if there‚Äôs no gemspec?,1516642909.0
isolatrum,I used this in a job interview and got 9999999999 job offers,1517246658.0
geraldbauer,"Do you have a favorite fizz buzz algorithm? Here's mine - the lazy enumarator to infinity! 

    require ""bigdecimal""
    
    module FizzBuzz
      def self.enumerator
        Enumerator::Lazy.new(1..BigDecimal::INFINITY) do |yielder, n|
           yielder << if    n % 3 == 0 && n % 5 == 0 then ""FizzBuzz""
                      elsif n % 3 == 0               then ""Fizz""
                      elsif n % 5 == 0               then ""Buzz""
                      else  n
                      end
        end
      end
    end
    
    def fizzbuzz
      FizzBuzz.enumerator.take( 100 ).force     
    end",1516653259.0
zverok_kha,"In my feelings, the sad answer is ""most of the time, you don't"". 

I don't see any active GUI projects currently. Ruby used to have `tk` as a part of standard library, which is kinda cool (it is exactly ""GUI framework for scripting languages""), but AFAIK it is at least not installed with default `rvm` ruby distributions anymore (and probably not that well supported?)

There was the cool [Shoes](http://shoesrb.com/) idea once, but I am not sure its current state: Shoes4 is rewritten to depend on Java/JRuby, and is in ""hey it is preview stage"" for years (though, it still seems to be actively developed).

For something experimental I'd probably try [flammarion](https://github.com/zach-capalbo/flammarion) (UI is in electron/chrome, but it is not a web framework, just check it out!), and for something dull-yet-production-ready my best guess would be [fxruby](https://github.com/larskanis/fxruby)",1516609636.0
aemadrid,I've been playing with [Ruby2d](http://www.ruby2d.com/) and it is active and promising. Worth a try.,1516642905.0
xiaomai,What platform(s) are you targeting?  i've used ruby-gtk in the past and it worked well.  Tk used to be part of the standard lib which should work everywhere afaik.,1516601133.0
TheProtagonistv2,"> error: sqlite3.h: No such file or directory

You're trying to install the sqlite3 gem but you haven't installed the library the gem depends on.

You can install it with `apt-get install sqlite3 libsqlite3-dev`

Running `bundle install` should work then.",1516592383.0
rurounijones,"Ruby is first and foremost an OO language. It supports functional aspects and you could write a pure functional ruby app but you would be going against the grain

If you want a functional language that is ruby'ish look at https://elixir-lang.org/",1516578684.0
codeprimate,"The syntax and ability to easily write declarative, functional, or object-oriented code lets you write in the way you want where you want. There is so little ceremony and the high level of the language eliminates so much boilerplate. Java and C# seem painfully verbose and structured in comparison.

Of course the downside is that large Ruby projects must maintain consistent conventions and implement thorough testing, otherwise they become incredibly painful to understand and unexpectedly fragile.

90% of the code I have written professionally over the past decade is Ruby, and I feel spoiled every day.",1516560872.0
xiongchiamiov,I don't love *maintaining* large Ruby projects (due primarily to trying to figure out where logic is defined). But there is something very odd about how **enjoyable** is is to write. I've talked to several other people and they all agree that it's just *fun* - but none of us have been able to pinpoint why.,1516557826.0
Xychologist,"The flipside of Ruby being fun to write is that it's fun for everyone in slightly different ways, resulting in a mash of coding styles. I have the joy of being one of a team maintaining a decade-old Rails monolith with about 50% test coverage and a succession of about thirty junior devs as previous maintainers.

Most of the time, it works. When it doesn't, finding the problem can be a nightmare. Fixing it can be a month's work, and it tells you nothing about whether it still works until you have QA try everything they can think of and report that they didn't cause any exceptions, which is still only a 'maybe'.

Ruby is a beautiful language, but I really wish it would punish beginners harder. It's so easy and fun to write crap code that 'works' that some people stay that level forever.",1516564873.0
nachoBA,"to me it only happens with ruby & smalltalk
coincidence?",1516560502.0
dr-drew,Check out [crystal](https://crystal-lang.org) it‚Äôs just as fun but more powerful!,1516566929.0
giantbears,i love it too! i was just talking about this with a co worker! i never get to use it at work (we do mostly java and python) and i wish i did because something about it just makes me happy,1516559552.0
,[deleted],1516589852.0
Zerocchi,Yeah I know how you feel. I primarily write in Java and Python before but I fell in love in Ruby because of how natural it is to write the code. For me Python is easier but Ruby feels just right. I don't know how to convey my feelings tbh but it's such a pleasure to write in Ruby. Hope it'll gain more trajectory thought. ,1516624412.0
mindaslab,I Love it too! There is something in Ruby that every one loves.,1516703522.0
sshaw_,"An old resource that folks may have forgotten or may not have been aware of.  Be sure to checkout the homepage and other languages' sections. 

And yes, I know about [Rosetta Code](http://rosettacode.org/). ",1516497011.0
geraldbauer,"Great resource. I try to republish the ruby samples at the Yuki & Moto Press Bookshelf in the next days (or weeks).  So far I have the first two chapters, that is, 1. Strings and 2. Numbers. See https://github.com/yukimotopress/examples/blob/master/01-strings.md and https://github.com/yukimotopress/examples/blob/master/02-numbers.md  on github. Cheers.",1516562026.0
brandononrails,"`bootstrap-sprockets` should come before `bootstrap` in your `application.scss`.

Also you shouldn't have `bootstrap` in your `application.js`, just `bootstrap-sprockets`.

Don't think that will fix your issue though (it might) because in your screenshots bootstrap is definitely being loaded. 

In your `app/views/users/new.html.erb` you don't have the proper bootstrap classes on your form fields. ",1516490235.0
,"Ok thank you
I fix problem by moving styles forms above the footer",1516491674.0
jrochkind,I'm curious if there are any advantages to SuckerPunch over Rails' now-built-in `:async` job processing. They both do roughly the same thing.,1516485383.0
sshaw_,"> range(1, 1000).reduce(0, Integer::sum);

Ah Java, you've come so far. ",1516495448.0
raghar,It's kind of funny how in example 3 half of languages use Scala though Scala is not among languages used. ,1516485973.0
,Half of the JavaScript ones could be solved with .map() ....,1516496993.0
torimus,"Sorry to say, but can't find anything *""impressive""* about these examples. Notorious, trivial and some not even one-liners despite being declared so.

Btw. Ruby's primes sieve #10 is quite unidiomatic with for/while loops.  I'd expect something like 1st example in [Rosetta](https://rosettacode.org/wiki/Sieve_of_Eratosthenes#Ruby).",1516531009.0
selfup,"The first one for JS (don't feel like doing a PR lol)

`Array.from({ length: 10 }).map((_, i) => (i + 1) * 2);`",1516497462.0
derrickcope,no#2     (1..1000).to_a.sum,1516500241.0
sshaw_,"> results = Nokogiri::XML(open(""http://search.twitter.com/search.atom?&amp;q=scala""))

Better to not depend on 3rd party dependencies if you don't have to, I think: 

    require ""open-uri""
    require ""rexml/document""
    results = REXML::Document.new(open(""http://search.twitter.com/search.atom?&amp;q=scala""))


",1516496262.0
Calavar,"It looks like you somehow installed a version that doesn't come with prebuilt binaries. What command did you use to install Gosu? You said `gem install ruby`, but that wouldn't install Gosu. Did you mean `gem install gosu`?

If you open up the folder that contains gosu, do you see a gosu.so or gosu.dll?",1516455153.0
zverok_kha,"Easy.

    $arr = [1, 2, 3]
    def a
      $arr.shift
    end
    a == 1 && a == 2 && a == 3
    # => true
",1516453018.0
rupeeonrails,"There are many ways to accomplish this. Here's one I think is easy to understand:

    class StupidInterviewQuestion
      def initialize
        @a = 0
      end
      def ==(b)
        @a += 1
        @a == b
      end
    end
    
    a = StupidInterviewQuestion.new
    puts (a == 1 && a == 2 && a == 3)
    # => true",1516453643.0
,[deleted],1516452051.0
meagar,"Prompted by the [recent popular Stack Overflow question](https://stackoverflow.com/questions/48270127/can-a-1-a-2-a-3-ever-evaluate-to-true) about whether this is possible in JavaScript, I assume.",1516461963.0
greevous00,"Yeah it's possible.  Redefine the default == operator to return true for everything.

Any language that lets you redefine basic syntactical stuff can produce *really* weird behavior.  That's why some people don't like dynamic programming languages.  In truth, whether that stuff is good or bad depends a *lot* on your team.  If you've got a team of numbskulls dynamic languages can be a nightmare.",1516467556.0
radarek,"    def a
      @a ? @a += 1 : @a = 1
    end

    puts (a == 1 && a == 2 && a == 3)",1516697124.0
in0pinatus,"In the end the Party would announce that two and two made five, and you would have to believe it.",1516515919.0
hanachin,"Easy, first get the == operand then change the receiver

    require 'continuation'

    def a
      callcc do |c|
        Object.new.tap do |o|
          o.define_singleton_method(:==) do |other|
            c.call(other)
          end
        end
      end
    end

    puts a == 1 && a == 2 && a == 3
    # true

TMTOWTDI, override == method by Refinements

    a = :hi

    using Module.new { refine(a.class) { def ==(*); true; end } }

    puts a == 1 && a == 2 && a == 3
    # true

And another one

    f = Fiber.new do
      Fiber.yield 1
      Fiber.yield 2
      Fiber.yield 3
    end

    define_method(:a) do
      f.resume
    end

    puts a == 1 && a == 2 && a == 3
    # true

and one more

    e = Enumerator.new { |y| y << 1 << 2 << 3 }

    define_method(:a) do
      e.next
    end

    puts a == 1 && a == 2 && a == 3
    # true",1516764911.0
leanucci,"If someone asked me this in an interview, I‚Äôd always say no. 

The only way to get that expression to evaluate to true is to mess with == method idempotency. 

Not a question I want to pass. ",1516467247.0
blueeyedviking,"Not really an IDE, but I recommend sublime text.",1516449292.0
cmdk,"I appreciate the approach and the time taken but I don‚Äôt think this would be the best Ruby to write. 

As for returning a lambda, the syntax is just confusing if you‚Äôre coming back to it. 

Again, I understand this was a comparison and I appreciate you writing it. Good job. ",1516540178.0
jgaskins,"Most of the time when you see functions being passed to methods in Ruby, it's in the form of blocks rather than `Method` objects or procs:

    def outer_function
      yield(10, 8, 3) * 15
    end

    outer_function { |a, b, c| a + b + c }

That's not to say that the article is wrong. If the code runs, it's definitely not wrong. :-) But this is closer to what you'll see in the wild.

We can still pass the block as a variable using the `&` prefix:

    def inner_method(a, b, c)
      a * a + 2 * b + c
    end

    outer_function { |a, b, c| inner_method(a, b, c) } # Explicit, passes args manually to the inner method
    outer_function(&method(:inner_method)) # Same as the above line, but forwarding args happens implicitly

    # Same example, but with a proc instead of a method
    inner_proc = proc { |a, b, c| a * b + c }
    outer_function { |a, b, c| inner_proc.(a, b, c) }
    outer_function(&inner_proc)",1516627814.0
geraldbauer,"The 10 things are:

- #10 Learn Ruby Conventions
- #9 Everything is an Object
- #8 (Almost) Everything is a Message
- #7 Ruby is Way More Dynamic Than You Expect
- #6 Objects are Strongly Typed, Not Statically Typed
- #5 Don't Worry About Interfaces
- #4 Mix it up with Mix-ins
- #3 Embrace Closures
- #2 `ri` is Your Friend, `irb` is Your Other Friend
- #1 Write Less Code
- #0 Ruby Makes Programming Fun Again

",1516382878.0
jeremymcanally,"I really miss Jim and his wisdom. :/  If you haven't watched many of his talks, there are several available on ConFreaks.  They're worth the time.",1516511950.0
zaphnod,"But... why?  So many cloud hosting options, why chose MS?  Article would be much improved by addressing the advantages Azure has over other options.  Off the top of my head, I can't think of any, but I admit I'm not well acquainted with Azure.",1516374727.0
theolajpme5a,http://www.earthclassmail.com are scamming people.,1516424716.0
Enumerable_any,"    $ any_good any_good
	       Downloads: 111
	  Latest version: 4 hours ago
		 Used by: 0
		   Stars: 7
		   Forks: 0
	     Last commit: 4 hours ago
	     Open issues: 0
     ...without reaction: 0
	...last reaction: ‚Äî
	   Closed issues: 0
	  ...last closed: ‚Äî


hmmm... :)",1516368336.0
zverok_kha,"Does this:

    $ any_good rails
               Downloads: 119,284,070
          Latest version: 1 months ago
                 Used by: 9,780
                   Stars: 38,303
                   Forks: 15,550
             Last commit: 9 minutes ago
             Open issues: 50+
     ...without reaction: 11
        ...last reaction: 2 hours ago
           Closed issues: 50+
          ...last closed: 2 hours ago
",1516346873.0
JustinCampbell,"Would be neat if it suggested alternatives/similar gems. Not sure how you would do this, since Ruby Toolbox (dead project) would be the closest thing to an API for that sort of data.",1516393933.0
yaroslavm,"We've done a really comprehensive service Gem rating service some time ago https://ossert.evilmartians.io/

Blog post and description: https://evilmartians.com/chronicles/open-source-software-whats-in-a-poke",1516447962.0
BrickedMuhPC,If it could give ratings (score?) to a gem based on the fetched info that would be awesome!,1516433033.0
AsFarAsItGoes,"First thought:

Nice side project, but I am not gonna use it... Whenever i am looking for a gem, i either already know which one I want to use, or I am going to look up the GitHub page anyways...

Second thought:

On the other hand, it shows all the stuff I find on github etc very compact, it would save at least (... quick calculation ...) 1 Minute a month!
This might become one of the tools I do not NEED, but use anyway. :)",1516382067.0
hehestreamskarma,What was the result when you tried chartkick?,1516342119.0
DerJuggernawt,Subscribed! ,1516311338.0
JustinCampbell,I‚Äôm super-excited for this,1516323900.0
chadmsee,Great idea. Subscribed,1516326559.0
Princess-Pineapple,Subscribed! What platform will the hangout take place?,1516387756.0
bokmann,"I‚Äôm excited for this, but it‚Äôs been done before.  There was the Ruby Hangout - https://m.youtube.com/channel/UCZKYKp38YY-hl5HlK1PRk1w",1516328153.0
,RemindMe! 20 days,1516346209.0
theGalation,"Finished chapter 3. Interested in any feedback. 

* Was this helpful or not?
* I'm not happy with the look but if you have specifics it's appreciated. ",1516309565.0
jamis,"Because everything in Ruby is an expression, you can make the first example work by putting the two terms in parentheses, separated by a semicolon, thus:

    x = []
    x.push( (y = 1; y) )

It's not the most readable, though. Mostly just useful as an insight into the way Ruby parses things!",1516302297.0
knrz,"Interesting... in your code example this also works, but I see what you're getting at!

    x = []
    x.push(
      y = 1
    )",1516301080.0
didroe,"You could also do:

    x = []
    x.push(begin
      y = 1
      y
    end)

But don't ;)",1516307179.0
notromda,That's a weird place to put a code block... I wonder if it's doing the equivalent of x.push(->{y=1;1}.call),1516303641.0
sshaw_,"> x.push(if true
>   y = 1
>   y
> end)

Maybe a better example is needed cause it seems to me that this is where the ternary operator can be used:

    x = []
    x.push( y = true ? 1 : nil )


",1516324537.0
GDP10,"In Lisp, you do this all the time. Pretty convenient stuff; never used it in Ruby so I'm glad to see it's possible.",1516401120.0
olivierlacan,Yay! Bonne id√©e. J'esp√®re que √ßa attirera du monde. :-),1516281598.0
geraldbauer,C'est fantastique!   For more conferences may I highlight the [Ruby Conferences and Camps in 2018 Calendar](https://planetruby.github.io/calendar/2018) @ Planet Ruby incl. Paris.rb XXL.,1516283456.0
pmurach,Really hope to attend this one! A good resource for future Ruby conferences is [http://rubyconferences.org/](http://rubyconferences.org/).,1516450312.0
Zyrjello,"In your example, we have to go all the way down to the base case before we can start returning results up to the callers.

Consider `range(1,2)`. On the first call, we say, ""the output of this function is the output of `range(1,1)` with `1` appended it"". Since we need to know the output of `range(1,1)` in order to resolve that statement, we evaluate it.

Well, it turns out the output of `range(1,1)` is an empty array, so now we can return back up the call stack and substitute that in. Now we can say, ""the output of `range(1,2)` is an empty array with `1` appended it"", so it's `[1]`.

What you might be missing out on is the `<<` operator. This operator appends an element to an array (it can do other things in other contexts, but let's keep it simple), so it's no particular mystery to someone who knows the syntax that the output of the function is an array.",1516244414.0
juliantrueflynn,"I just had a friend explain it to me in Slack. I'll try my best to explain it here, in case anyone is wondering what the answer is:

Since the base case is last in the recursion, all the previous recursions are building off of that. Each recursion is returning to where it was in the stack.

So, in my example problem in the OP it looks like this:

    [] << 1 << 2 << 3 << 4",1516244289.0
midasgoldentouch,So...why would I use this? What would I use this for?,1516253156.0
JbAviat,"If any security researcher finds an issue on your website, or application, the security.txt will enable her to reach out to you in an effortless way.
This improves efficiency and will help your company judging the relevance and criticality of the report since it will directly reach someone with security knowledge!",1516300664.0
bascule,"As a Ruby expert who's worked professionally in security and cryptography for nearly a decade, everything you just said terrifies me",1516259516.0
chrisgseaton,"> super secure ... sending them packets of Ruby code to execute

Seems like an unlikely combination of requirements.

",1516237526.0
frowning-at-you,"It's pretty much always a bad idea from a security standpoint to create a setup where your clients must receive remote code and execute it. This, at minimum, can open you up to remote code execution or command injection vulnerabilities, which are severe. You should examine what you're trying to accomplish and come up with a new method. Is there a reason the clients can't store the code and execute it when called with proper authentication?

source: I'm a security engineer with a ruby background.",1516291880.0
,[deleted],1516274530.0
thibaut_barrere,"Thanks for sharing! While it's a bit exotic, it's definitely something useful to share.

As a sidenote, you can I think use the [sequel](https://github.com/jeremyevans/sequel) gem with SQLLite & Ruby for more flexibility.",1516378933.0
billmoney97,"Exactly. Check out one of my gems as an example of using sequel with sqlite on MRI and JRuby in production.

https://github.com/steakknife/oui",1527810621.0
SpyMaster356,"You haven't explain anything about what Errbit does, just how to install it.

What problems does it solve? Any examples? Why should i add this to my toolbelt?

Also why are you suggesting that we should use our users as testers? That's just a recipe for a failed product.",1516228127.0
doctorfran,"The only way to use httpd with Sinatra would if Sinatra supported fast-cgi which I don't think it does. Generally speaking, httpd is used more of a static file server than a reverse proxy. However, if you're set on using OpenBSD tools, relayd would be what you're looking for.  ",1516223712.0
_matthewd,"You can also use (new in 5.1) `direct`/`resolve` to teach the router how to handle your form object directly: http://api.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/CustomUrls.html / http://guides.rubyonrails.org/5_1_release_notes.html#direct-resolved-routes

They're good for different use cases: `to_model` is perfect when your form object is a fairly straightforward presentation of a single model, and should be routed the same -- but `direct` gives you more power to route it differently.",1516204514.0
PercyLives,I like it and have subscribed. ,1516151579.0
sshaw_,"Rails-free zone is a nice twist, but it'd be nice to see stuff that I didn't see X days earlier on Reddit, Lobsters, RubyWeekly and similar etc...
",1516151996.0
,Nice job! The Rails free approach is greatly appreciated. Ruby is so much more than the single web framework that made it so popular. ,1516728179.0
geraldbauer,"Great idea. Keep it up. Added to the [Awesome News](https://github.com/planetruby/awesome-news) page @ Planet Ruby.  Best part - Great to see it's a Jekyll and thus, ruby, built website! Love to see more Jekyll and friends e.g. Octobook, Octopod, GitHub Pages, etc.) news bytes.  Subscribed! Looking forward to the next Ruby Tuesday.",1516173838.0
zverok_kha,"I love it! That's the kind of digests that are useful: a lot of personal comments and not a ""those three things that were everywhere (Reddit, RubyFlow, all newsletters...) last week""!

A small note: in Issue#2:

> ...Yuki Torii presented **his** custom build of Ruby, supporting pattern-matching.

Yuki is _she_ is in fact: http://rubykaigi.org/2017/presentations/yotii23.html",1516191121.0
jrochkind,Added to https://rubyland.news aggregator. ,1516303166.0
jrochkind,finally. ,1516159662.0
PercyLives,"Bad design, IMO. 

You should *always* be able to use keyword arguments. In the rare case that specifically positional arguments are required, provide a method for it, like Person.pos_init(...).",1516150372.0
thibaut_barrere,Julia Evans ([b0rk](http://twitter.com/b0rk) on twitter) is doing a great job writing a profiler & sharing what she learns. Can't wait to try the profiler out.,1516118988.0
honeyryderchuck,or just use sequel and never say you're sorry. ,1516142331.0
mencio,Did you look into http://rom-rb.org/? Ecto 2 is heavily inspired by it.,1516177974.0
in0pinatus,"ActiveRecord does supports context-specific validations:

    class Book
      with_options on: :price_change do |m|
        m.validates :price, numericality: { only_integer: true, allow_blank: true }
        m.validates :currency, inclusion: { in: %w(USD BTC CIA XJ6) }
        #...etc...
      end

Not the same as working with changesets, sure, but not completely absent either.
",1516141835.0
rabidferret,"> Ecto is not an ORM

That's not really true. 

> schemas are used to map any data source into an Elixir struct

That is literally the definition of an Object Relational Mapper",1516132712.0
Chesh,"> Changesets

They are super nice for a lot of reasons, but [AR does have validation contexts](http://guides.rubyonrails.org/active_record_validations.html#on)

> Validations use database constraints

I do wish Rails would do more with this, but adding an extra check in the ecto changeset has felt about on-par with rescuing database exceptions and adding the error to the model in AR (admittedly the former being more elegant)

> Preloading

After having used Ecto's preloading enough I actually think [AR is a lot more flexible here](http://blog.scoutapp.com/articles/2017/01/24/activerecord-includes-vs-joins-vs-preload-vs-eager_load-when-and-where) in terms of giving the user options to do what they need.

> Batch inserts

Has been added for Postgres in the latest Rails beta, although they have existed for MySQL for a while. Better late than never I guess?

> Repo.one

Nothing really like this in AR beyond `first!` which only raises for 0 results not more than 1.

> Ecto query language

[Arel](https://github.com/rails/arel). Although the Rails team tries to dissuade you from using it, it's great even on it's own outside of Rails.

Not meant as a rebuttal, just some added context. I love Elixir and Ecto. Great article!",1516166415.0
tomcopeland,"Regarding ""validations use database constraints"", there are some AR tools that help a bit with that, like [consistency_fail](https://github.com/trptcolin/consistency_fail#consistency-fail)
 and [active_record_doctor](https://github.com/gregnavis/active_record_doctor#active-record-doctor), and also [nullalign](https://github.com/tcopeland/nullalign#nullalign) by yours truly.

Regarding bulk inserts, I haven't used it but [bulk_insert](https://github.com/jamis/bulk_insert#bulkinsert) from Jamis Buck looks interesting.

That `one` method is interesting.  That seems like something that ActiveRecord could have; it'd be a relation terminator like `pluck` but would return a single AR record like `first` or raise an exception as the article describes.",1516135277.0
rabidferret,"> Ecto is not an ORM

That's not really true. 

> schemas are used to map any data source into an Elixir struct

That is literally the definition of an Object Relational Mapper",1516132720.0
tomthecool,Why do you need to *clone the repo* in order to run this? Make it a gem!,1516111862.0
RSimba,"Hey! 

Looks good, I try to run your app

But I cant find any gems like 'active_support'( activesupport maybe),
and 'yaml' on https://rubygems.org .    
->
'bundle install' doesnt work(",1516113816.0
cray4K,"Funny, followed you on GitHub after you starred my binance gem, and here you are :P",1516119984.0
menge101,"I get that its named similarly to rake, but that name is really unaware of colloquial homonyms/terminology.

Shovel, broom, trowel, scoop, shears, mower, pick-axe -  these are all better names.",1516138489.0
growlgrrl,"Hi I'm a fairly new Rubyist and I followed through the guide, but when I reached the part when I packaged the gem and then installed, I couldn't get it to run.

The equivalent to the line `steve@computer:~/src/how_i_start$ how_i_start` doesn't run when I install.

Any thoughts to what I am missing?

EDIT: I got it working. 2 Points to others following through

1) minitest was not already installed on my system ( I didn't follow the installation instructions as I already had Ruby).

Just add the line `gem ""minitest""` to your Gemfile and run `bundle install`

2) I couldn't get the gem to run from the terminal by just typing its name, but it would run if I used `ruby -I lib bin/<gem_name>`

",1516062437.0
geraldbauer,FYI: You can find an alternative let's build a ruby gem together with the hoe rake tasks @ https://github.com/yukimotopress/auto/blob/master/hoe.md Cheers.,1516095292.0
this_is_not_nil,"Cool, I hadn't heard of derailed_benchmarks before.",1516013495.0
pablonoriega,"Thank you Pawe≈Ç, lots of useful information in here!",1516017074.0
torimus,"Instead of squeezing usage of small non-leaking gems, you may replace Puma with less greedy servers like Thin or Passenger.
I've been battling the same issue and cut memory usage from ~512 to ~380 instantly. Equivalent config with 2 workers by 16 threads. RPS only slightly lower.
",1516250751.0
mperham,"It's not a great idea to run Sidekiq single-threaded.

     ---
     :concurrency: 1
     :queues:
      - default
      - [critical, 100]

I'd suggest this instead:

     ---
     :concurrency: 2
     :queues:
      - critical
      - default
",1516053826.0
bjmiller,you might want to look at net-ssh-telnet,1516008936.0
this_is_not_nil,I have found Net::SSH really buggy. It needs a lot of love.,1516021722.0
sshaw_,"Does it fail when you use the ssh command: `ssh user@host 'show version && show version'`?

If not, do you seen anything interesting when you run with `:verbose => true`?

    Net::SSH.start(host, user, :keys => keys, :verbose => true) 


> I now log in to every switch, give only one command, exit, log in again 

If `ssh` works, is it not possible to shell out to it:

    # stderr goes to process' stderr here
    output=`ssh user@host -o BatchMode=yes -i keys  'show version && show version`
    process_output(output) if $?.success?
",1516029918.0
CrackCrackPop,"Check the libssl version you are using and try to get another version instead of compiling one. 

If you are a linux beginner try to avoid compiling and just find another package that suits your needs. Compiling usually takes time and may not fix your problem. You usually need it later if you need to cross compile and can't find binaries for your platform.

My best guess is ' OPENSSL_1.0.2 not defined in file libssl.so.1.0.0 ' you need version 1.0.2 of libssl

If I remember correctly mint is based on ubuntu so you should be able to use that package repository.

https://packages.ubuntu.com/search?suite=default&section=all&arch=any&keywords=libssl&searchon=names

There it's listed. It's definitely available.

after installation you should be able to see something like this, note the 'Version:':

    root@mediaserver:~# apt-cache show libssl1.0.0
    Package: libssl1.0.0
    Architecture: amd64
    Version: 1.0.2g-1ubuntu13.3
    Multi-Arch: same
    Priority: important
    Section: libs
    Source: openssl
    Origin: Ubuntu
    Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
    Original-Maintainer: Debian OpenSSL Team <pkg-openssl-devel@lists.alioth.debian.org>
    Bugs: https://bugs.launchpad.net/ubuntu/+filebug
    Installed-Size: 3384
    Depends: libc6 (>= 2.14), debconf (>= 0.5) | debconf-2.0
    Filename: pool/main/o/openssl/libssl1.0.0_1.0.2g-1ubuntu13.3_amd64.deb
    Size: 1085740
    MD5sum: 07375744edec4ff8bae477fcf8f96e4f
    SHA1: aed2f166e2622ea34687f8848dce4b0cbf5d7568
    SHA256: e02817f2cbfe8955d681c97ef04c6544b6d3034a5a9b5f18fadb4549a0cfd51c
    Description-en: Secure Sockets Layer toolkit - shared libraries
     This package is part of the OpenSSL project's implementation of the SSL
     and TLS cryptographic protocols for secure communication over the
     Internet.
     .
     It provides the libssl and libcrypto shared libraries.
    Description-md5: 88547c6206c7fbc4fcc7d09ce100d210
    Task: minimal, ubuntu-sdk-libs
    Supported: 9m
    
    Package: libssl1.0.0
    Architecture: amd64
    Version: 1.0.2g-1ubuntu13
    Multi-Arch: same
    Priority: important
    Section: libs
    Source: openssl
    Origin: Ubuntu
    Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
    Original-Maintainer: Debian OpenSSL Team <pkg-openssl-devel@lists.alioth.debian.org>
    Bugs: https://bugs.launchpad.net/ubuntu/+filebug
    Installed-Size: 3402
    Depends: libc6 (>= 2.14), debconf (>= 0.5) | debconf-2.0
    Filename: pool/main/o/openssl/libssl1.0.0_1.0.2g-1ubuntu13_amd64.deb
    Size: 1080744
    MD5sum: be57bddf15f6e036ae2b9e452d4b8120
    SHA1: 15b85c5bf3d1ff89bba7279d06e9b52261b42ef2
    SHA256: 1cf80869ca9ab735ff2c1f103d408e0b30f685dee5aa4e385a3064bfbb936ac9
    Description-en: Secure Sockets Layer toolkit - shared libraries
     This package is part of the OpenSSL project's implementation of the SSL
     and TLS cryptographic protocols for secure communication over the
     Internet.
     .
     It provides the libssl and libcrypto shared libraries.
    Description-md5: 88547c6206c7fbc4fcc7d09ce100d210
    Task: minimal, ubuntu-sdk-libs
    Supported: 9m
        ",1515996699.0
cruyff8,Are you using the right gemset? Have you run `bundle install`?,1515990509.0
JustCoolHandLuke,"BTW the original post that I found this code is at :

https://www.reddit.com/r/ruby/comments/7618ud/i_just_finished_my_first_ruby_program/",1515964018.0
edendark,"Very cool! 

I noticed you used cmd/ctrl + click for multiple selections when replacing methods like `sprintf`. You could do this faster/more easily by highlighting an instance of `sprintf` and using cmd/ctrl + d to create multiple selections without clicking on each instance separately. ",1516107672.0
hehestreamskarma,This is amazing and we are not worthy.,1515963889.0
derrickcope,"Is this downloadable in a mobile form?

Edit: thank you for this",1515991532.0
Randy_Watson,Thanks for this.  I once saw Aaron Patterson give a talk.  It was pretty nuts.  The first half was about something like cat selfies.  The second have was about low level garbage collection.  ,1516029969.0
jstuckey,"Sorry for the bad formatting, that is not how the code was actually formatted when I wrote it. It just came out that way when I posted it.",1515948235.0
cavinkwon,"    def largest_prime(num, factor=2) 
      (num % factor == 0 ? num/=factor : factor+=1) until num == factor
      factor
    end
    largest_prime(600851475143) ",1515952684.0
derrickcope,"You could use the built in Prime class as well.

Edit: i am working on Euler too. I have done through 37 now. I would be glad to show you mine after you have your solution to compare thoughts. I am fairly new to coding.",1515992623.0
jodosha,"You did a great job, thank you!",1516272337.0
jdickey,"To the guy(s) who down-voted this: care to explain why?

To the folks who up-voted this, *thanks!* Questions and discussion/suggestions either here or on the issue tracker. Thanks again!",1515942902.0
urbanfog,Aren‚Äôt you missing the @bootstrap-sprockets in your application scss file? When doing the tutorial I also included the sprockets in the application.js,1515881110.0
banporkpie,What does this do that Pundit doesn‚Äôt?,1515884154.0
JustinCampbell,"I‚Äôm not 100% clear on your architecture/use case, but if you need to return the same static content (JSON) for many users but then periodically rebuild it, the fastest way would be to put a CDN in front of Rails such as CloudFront, Fastly, or CloudFlare.

If you can somehow put the invalidation logic into the filename (such as a date/etc), your cache expiration can be very far in the future, and Rails would only receive one request for the first user. This would also remove the need for S3.

I think going to DB is about as fast as going to S3, but the cost is in building the JSON response. Even if you didn‚Äôt use a CDN, you could use a cache like memcached or Redis to store the built payload.",1515864669.0
schneems,"Not sure what Data you‚Äôre storing but if it‚Äôs a json payload then maybe memcache might be a good fit.
",1515897886.0
jrochkind,">If I was using EC2 instances, I would just write the URL to a local file. 

OK, if I understand right you're suggesting just putting a _filename_, not the data structure itself, in a local file. Implying you think reading from a local file is faster than reading from a db?  Are you sure this is true? I think it may not be. 

Just put the filename in the db (or even better, a redis instance key, esp if you already have redis; or memecached, sure), and do the same thing?   Whatever you wanted to do with the file system, just do it with some store you have available on heroku instead -- postgres, redis, memcache, whatever.  I am not even sure the file system would actually be faster than these. 

That is, doing what you were doing before, but avoiding using the file system as a source of cached data. Alternately, like JustinCambell says, if you can find a way to leverage your CDN instead, that's definitely even better. ",1515979454.0
geraldbauer,"Hello, I've updated the awesome ruby meetups page @ Planet Ruby. For (easier) updating every contintent has now its own page - [Europe](https://github.com/planetruby/calendar/blob/master/meetups/EUROPE.md) ‚Ä¢ [America - North / South](https://github.com/planetruby/calendar/blob/master/meetups/AMERICA.md)  ‚Ä¢ [Asia](https://github.com/planetruby/calendar/blob/master/meetups/ASIA.md) ‚Ä¢ [Africa](https://github.com/planetruby/calendar/blob/master/meetups/AFRICA.md) ‚Ä¢ [Pacific/Oceania](https://github.com/planetruby/calendar/blob/master/meetups/PACIFIC.md). Updates welcome :-). Note: The online version is an all-in-one page again, see [Awesome Ruby Meetups](http://planetruby.github.io/calendar/meetups/).  Happy hacking together. Cheers.",1515870635.0
subvertallchris,"I used Neo4j with Ruby for many years. I am still technically listed as a co-maintainer of [Neo4j.rb](https://www.github.com/neo4jrb) but have not contributed much since sometime before the 8.0 release in August 2016, when I switched jobs and roles. Since then, I've been working with Postgres full-time and only used Neo4j briefly for a POC project that was not pursued by my employer.

My experience with Neo4j was mostly positive. Some pros:

+ The team working on Neo4j.rb are fantastic. Responsive, smart, helpful, dedicated. Brian uses it in professionally (I think some of the others do, too) and works hard to make sure that everyone has a good experience with it. I've never encountered another open source project that is as responsive.  
+ The Neo4j.rb gem itself is excellent. If you like ActiveRecord, you should find it easy to pickup. It's easy to pickup and very flexible.  
+ Cypher is a dream to write and read, IMO. It's deceptively powerful. I still prefer it to SQL.  
+ Neo4j, the organization, are great. I worked closely with many of the folks behind the curtain and they're smart, dedicated people who really want to make an excellent product.  
+ Data modeling and querying is so natural to begin with and then the Neo4j.rb library makes it even easier. I miss it all the time.

Now, my cons, all stated with complete respect to everyone who works in these areas or disagrees:

- Hot backup requires a paid license. To backup using the open source license, you must shutdown your database.  
- System requirements are steeper than PG. You'll probably need a beefier system to get adequate performance than you would with PG.  
- Limited options for hosting. You're either going to manage your own EC2 instance or you're going to pay a premium for Neo4j-as-a-Service. Postgres hosting, being a more competitive market, is simpler, cheaper, and more reliable. You'll find no shortage of tutorials on how to deal with Postgres, while Neo4j is a bit more sparse.  
- Performance isn't great until you have the kind of graphy problems that it excels at and a lot (A LOT!!!) of data. While you certainly can use it as a general DB, I don't think that it's worth it.  
- Deadlock during writes on busy servers are brutal. Maybe it's better now, but it was pretty hard to troubleshoot and embarrassing for me a few years ago. 
- Anti-RDBMS snobbery within the community was really tiresome. I was guilty of this for a long time, I drank the kool-aid right down. These fans will take every opportunity to trash JOIN and the rigidity of database schemas. I came to think it was an immature and ignorant way to make the product look better. The last meetup I went to was mostly this and I never engaged with the community again. To everyone who had to endure me acting like this, I apologize.

To answer your very specific questions:

- Did you hit any drawbacks? Yes, I think that's covered above.  
- Did it help you solve your problem easier than using PG, for example? That's a bit more complicated. Data modeling was faster since I never had to worry about migrations. I think it was easier to do rapid prototypes and experiment with changes to my data model, especially at the very beginning of a project. Any pattern matching, recommendation engine-y things that I wanted to do were infinitely easier to reason about and implement in Neo4j than PG. (Someone who's an expert with SQL might contest some of this.) None of that, however, is on the roadmap for my current job and the prototyping and data model experimentation benefits had diminishing returns once our schema stabilized and I started to value performance and predictability over flexibility. On the occasions that I still need schema flexibility, I just use JSONB columns in Postgres. 

So, in conclusion, I think it's an excellent product that comes with some baggage. If you're being told that your RDBMS is old technology that isn't intended to handle relational data, your schema is holding you back, and a graph is THE ANSWER for your modern data storage needs, I'd think long and hard. If you think you have an appropriate use case for it and are prepared to deal with that baggage, I think it's totally worthwhile.

**EDIT**

I was thinking about this just now and wanted to offer a few more thoughts:

PRO: Writing [unmanaged extensions](https://neo4j.com/docs/java-reference/current/server-extending/#server-unmanaged-extensions) using Java is sweeeeet. I read a book on Java on vacation and was able to start writing UEs when I got back. Seriously, so cool, so powerful. Solved a major performance issue for me. Being able to unit test them gave me so much more confidence than I had in any database query, be it SQL or Cypher.  
CON: Installing and upgrading UEs required database downtime. I have to imagine this is better now? I see an entry for [procedures](https://neo4j.com/docs/developer-manual/3.3/extending-neo4j/procedures/) in the documentation now, I'm not sure how this compares or if it fixes the downtime issue. 


PRO: [Neo4j Spatial](https://github.com/neo4j-contrib/spatial) is awesome. I never had a reason to really use it but I feel like it's so cool that it's worth mentioning.

Finally, I want to point out that my experience with Neo4j was entirely via Ruby. The performance issues I ran into were, from what I could see, largely due to HTTP, Ruby parsing JSON, and the cost of instantiating Neo4j.rb models. More so the first two than the third. I was under the impression that Bolt (the binary protocol) is/was supposed to help with this but, AFAIK, it's still known to be much slower than HTTP, or at least when using Ruby. I have to guess that this is partially because JSON parsing leverages a C extension while Bolt is implemented entirely in Ruby, but I couldn't say for sure.",1515884331.0
lukeasrodgers,"I have used orientdb and neo4j in production, not as a primary source of truth (this was mysql). Some notes:

* we found neo4j to be much more stable than orientdb
* the ruby libraries for neo4j are generally much higher quality and have better support (I say this as an author of a ruby client for orientdb)
* with orientdb's mvcc implementation, depending on your workload and whether you are using >1 node for HA, you will frequently have to retry writes due to distributed transaction conflicts. We were never able to find write retry settings that ""just worked"". I have heard from someone with lots of ""neo4j on ruby"" experience as well that this can be a problem with neo4j
* I believe that with ruby you will have a fair bit of query overhead due to communicating with the server over JSON. Not sure if there is binary protocol support for ruby neo4j client
* Main takeaway: unless you have a really good reason to do it (we had query patterns that were extremely slow and expensive on mysql but very fast on orientdb), I would stick with pg. ",1515867866.0
Delthram,"Neo4j and pg are very different dates stores. Neo4j is for graph data, meaning you not only care about the data but you also care about the connections and want them to have meaning. It's really useful for things like crm's where the connections to things have meaning. This is a very small niche of apps though. Most apps are better suited with pg.",1515856672.0
cjoelrun,"Make sure your data set is one that needs to be graphically queried. Relational databases like pg can query relationships just fine 1, 2, even 3 levels deep.
Make sure it‚Äôs worth it. You‚Äôll have to pay for enterprise licenses if you intend to make it production ready. Java has the best libraries I‚Äôve seen for it, others lagged in quality at the time I used them. And cypher queries are a learning investment for any team. ",1515857935.0
ClemDev,"Didn't really like it or see the benefit of it. Also for more complex queries Cypher can be a bit complex. I personally didn't see anything it could do that would be difficult to do in PG. Also the benefit of PG is hundreds of others have tried to do it before, and there are more docs/tuts/etc., whereas with Neo4j there's a lot less of that. YMMV and I certainly am not an expert or against it. I just didn't see the point of it on a project I worked on compared to PG.",1515851320.0
vanakenm,"Agree on the ""check that your model actually fit"". We had one use case where switching from a RDMS to Neo4j did lead to an impressive performance win, but the model was very specific (representing a massive code base with thousands of programs calling each others)

- Data was nodes & edges with properties
- Schema was flexible
- Most queries were about path (find all nodes with relationship to a specific node, through one, two or twelve edges)

This being said, I agree that most cases are better served with a RDBMS, and with the ""popularity matter"" aspect (more doc, more hosting options, more people with the skills, etc)",1516087991.0
prognos,What would you like the end result to look like?,1515798515.0
dev_bry,"I've had good results teaching beginners with https://rubymonk.com/

For Rails, https://www.railstutorial.org/book/ is the standard tutorial. I'm not really a fan of it when teaching experienced web developers as it's too basic. But then again if you're an experienced web developer, you should be able to get by using just the official guides at http://guides.rubyonrails.org/",1515794238.0
muddymindua,Try Programming Ruby by Dave Thomas. It‚Äôs a tad outdated but still covers most of the language and it‚Äôs regarded as a classic now.,1515794341.0
Tomarse,"If you already have experience with OOP languages, then [learnxiny](https://learnxinyminutes.com/docs/ruby/) is a great place to get an idea of general ruby syntax.",1515836078.0
netwander,"I think that the quite old ‚Äúruby programming language‚Äù, by Mats itself, is really deep and good for its pespective. Not free, and without any reference to Rails",1515868820.0
,[deleted],1515791879.0
realntl,"Why don't you _create_ opportunities to use ruby, the way early adopters did back in 2004?",1515809230.0
nanenj,"It sounds like you're making a personal choice to do something else.

That's cool.

You could make other choices, but if you're convinced alternately and you don't want to, then great.  Find something you love doing and do that.

I write a number of things in Ruby, because I enjoy writing code in Ruby.  Really is that simple. If you're not getting that joy, than hopefully you'll find it elsewhere.",1515909550.0
kulldox,"I hear you. I'm not the most experienced in Ruby, but I also feel like it is loosing ground. You don't find that many projects written in ruby, and somehow because of this reason, few do want to use it for new stuff.

Despite that, I do use it daily to automate stuff I'm doing at work, but hey, it is only me.",1515792080.0
laerien,"Mobile is walled gardens. Almost all languages are second class here. Use what your overlords dictate.

WebAssembly is here. It'll take a while but Ruby will play in this space.

Ruby isn't going to be competing for comprehensive Math and GUI bindings anytime soon.

For devops, tooling and services, I disagree with your assessment. Its wide use in this space is due to it comparing favorably with the alternatives.",1515792384.0
,"you can do GUI with jruby https://github.com/jruby/jrubyfx, I guess will be similar with truffle
android: https://github.com/ruboto/ruboto
rubymotion also.

But, they are second citizen :)",1515803015.0
molovo,Have you heard of [Crystal](https://crystal-lang.org)? Sounds like it might be right up your street.,1515801348.0
HighMaxFX,"In my humble perspective we should to pursue the same direction Python went: being a high level tier above some blazing fast engine made in C.

Tensorflow and Anaconda/pandas/numpy would be much more awesome in Ruby than in Python. 

Pure Ruby will always be slow and people will always complain about it.",1515846833.0
HighMaxFX,"I never saw people writing ""RUBY"". But I always got sick when people write ""LUA"". It's ""Lua"", for **** sake!!!!",1515836673.0
in0pinatus,"`:ruby`
",1515821937.0
geraldbauer,"To print the version in ruby - you use  :-)

     puts RUBY_VERSION
 
PS: it's a constant. Maybe in the future we can write ;-):

     puts Ruby.version
",1515837159.0
myringotomy,Lenovo Ubuntu done.,1515817670.0
hoyfkd,"The only laptops I will purchase are thinkpads.

Dell has shit service, and the only intriguing machine is the XPS 13 - until you touch the squishy keyboard that literally flexes while you type.

I have never owned anything made by HP that didn't self destruct, or have some form of engineering oopsie that caused it to fail.  

ThinkPad / Debian / Windows dual-boot for school if necessary.  I'm currently running the X220 I bought in 2011 with Debian.  I will likely upgrade this year to an X1 Carbon or an x280.  Or a t480.  So many to choose from.  

Why Thinkpad?  Generally good Linux compatibility.  Drain holes in the keyboard.  Tough as hell.  Best keyboards in the business.  Seriously, comparing Dell's to a Thinkpad is like comparing a Lexus to a Yugo.  My machine has had two beers spilled on it (separate occasions) and has been literally run over.  No issues whatsoever - since 2011.  

I know your question was about ruby, but IMHO, you can do ruby on anything.  You will be less frustrated if you do it on a ThinkPad.",1515839419.0
i_know_sherman,"Custom Linux desktop with Arch Linux, 10x happier than I was with Mac but it's not for everyone",1515828756.0
p_p_r,Linux Debian,1515820250.0
in0pinatus,"I used to be very happy with FreeBSD on T-series Thinkpads, although that was back when they were still IBM branded and the T61p was the flagship. Some fiddling required with power states, X server configuration and network drivers but nothing compromising.

Now though, they will have to pry this 2015 Retina MacBook Pro from my cold, dead arms.
",1515825028.0
leddy231,"I just use plain windows 10, because videogames and stuff. Works surprisingly well.",1515830661.0
Simaldeff,"A friend lended me his uk Dell XPS13 developer edition (the one that ships with linux) it was good times.
At the times I did ruby rarely and worked with Java and Python though. But I heard the XPS13 is getting a new version soon.",1515790574.0
holyjeff,I use Windows with vagrant (linux vm + docker),1515790732.0
ylluminate,"Been there; done that... Windows with a Linux VM might be a solid solution if you need a wide range of software other than just pure dev. 

I've had some really super success with Hackintosh systems if you choose or build them properly. 

My problem is that I always need so many other apps due to multitasking that I can't just use a *nix system. I've been using Linux, FreeBSD, and others for over 20 years, but being able to run all of my other apps aside from dev has been the real keeper for me to stay on macOS. Heck, I'd like to see Apple replace the kernel with Linux, but c'est la vie. :s

",1515787673.0
kobaltzz,"I think the main thing that you will find frustrations with is the hardware. Many PC companies have fairly junk quality hardware. I remember a lot of the early lenovo laptops had very questionable touchpads. The MSI laptops had some fairly crappy oversized ones that never worked well too. So your best bet is to find some hardware that feels good for you. You also want to take into consideration the hardware specs; CPU, Memory, Disk (SSD SATA or NVMe), GPU, etc. I wouldn't worry about the OS so much as you'll be able to use Windows 10 to do dev work (via Docker) or linux (Ubuntu, Fedora, etc). I think that you will find that the spit & polish is missing on a lot of systems though. My personal favorite brands are ASUS -> HP/Dell/Lenovo/MSI -> Everything Else -> Acer. Careful for U processors (similar to what's found in 13"" MBPs. They are low voltage and usually don't have much bang for the buck. Also, don't expect the nice battery life from the PC.

Almost all of this is subjective, but should be some things to think about when in the market for a new lappy.",1515787883.0
corolok,I've recently changed hdd to ssd in my 5 years old Lenovo laptop with 8gb ram and so happy. Ubuntu + rubymine work perfect :),1515813045.0
funkybaby,"Hokay: A Lenovo laptop with an i7, because it was the fastest thing I could buy with my budget. That includes adding an SSD and maxing out the RAM. Runs OpenSuse. The lights under the keys I find a bit silly, but overall this was one of my better purchases.",1515826924.0
peteyhawkins,"I bought a second ssd for my gaming pc over the Christmas break and installed Ubuntu, been using it for dev for the last couple of weeks, I‚Äôm enjoying it for sure. Trying to get used to not using macOS as I also don‚Äôt want to upgrade my laptop, experimenting on what I already have though before buying a new laptop.

Had to creep back to my 2014mbp this week though to work on an iOS app in swift, and our designers sometimes send me sketch files so I need a Mac hanging around for that.",1515848301.0
Zerocchi,"Raspberry Pi + Raspbian Core for now because my laptop burst...

Anyway, it was HP Pavilion dv4 and Ubuntu Mate before. If you come from MacOS I can suggest elementary OS. For laptop I would go with ThinkPad series cos I've hearing many good things about it. ",1515933634.0
banister,"Not sure this counts but I use a MBP hardware but i run elementaryOS linux on it. highly recommended, elementaryOS is a *beautiful* linux distribution, almost as pretty as OSX.

https://elementary.io/",1515958819.0
AmSpaceRabbit,"For a notebook/laptop, I'd recommend Lenovo.

However, I use a custom desktop with Manjaro (Arch derivative) that works amazingly well. You can select your desktop environment (I went with i3-gaps).

The Arch wiki and user repository are absolutely amazing.",1515964346.0
derrickcope,"Archlinux, bspwm, vim on refurbished thinkpad x220 i7. Hardcore, love the simplicity! ",1515993353.0
realntl,"System76 laptop with their specialized Debian based distribution.

It's nice to get the peace of mind knowing the OS is custom tailored for the hardware, the way Macs are.",1516025962.0
Abangranga,Ubuntu partition. That way you can have a windows machine that is twice as good as the Apple markups for the same cost,1516144886.0
gettalong,"I've been using Lenovo laptops with Ubuntu Linux for 9 years now. Before that I had a MacBook Pro but since nearly all the applications on macOS aren't quite that customizable and I found myself basically using applications written mainly for Linux I gave it up.

I would recommend buying a Lenovo laptop (HP is find but not quite as good in my opinion, Dell XPS laptops would be an alternative) but stay away from the consumer models like the IdeaPad, go for the ThinkPad X/T/W series, depending on your needs. They are much sturdier and can take a beating, I regularly drag around my X230 via the display.

A few years back the main problem with Lenovo laptops was the crappy display but that has changed. Nowadays you get high-resolution displays with a good build quality. The backlit keyboard is quite a nice feature if you are working in a dark environment. The chiclet style keyboards used currently are okay but not as good as the keyboards in models like the T410s.

I personally don't use a touchpad on laptops (only once with the MacBook Pro) since the ThinkPad laptops come with the TrackPoint located between the keys G, H and B. Using that you are normally much faster because your hands never need to leave the home row. Precision use is no and scrolling is also supported by means of using the middle ""mouse/touchpad"" key located directly beneath the space bar.

Also: Choose your laptop for your needs on the go! E.g. size, weight, battery runtime, etc. If you are at work or at home just buy yourself a docking station and use your 27"" 2560x1440 monitor together with your favourite keyboard/mouse combination. Your eyes, hands, neck, shoulders and back will thank you.",1515830014.0
hahuang65,"I'm just gonna say, the new XPS13 looks so sick, I am planning on getting one and putting Arch on it.",1515833278.0
fullstack-sean,"Super excited about this. I've been working in Python, scikit and Keras for the past few weeks and the syntax is so ugly.  ",1515866163.0
v_krishna,How is performance without scipy/numpy?,1515790794.0
otakugrey,Neat.,1515822451.0
ericmichaelmtz,Which models are currently implemented?,1515827646.0
pmurach,"In my university days, machine learning, and specifically text processing was all done in Python due to its many libraries. Ruby pales in comparison, quite often the best solution being interfacing through JRuby with mature Java packages. I really feel there is so much stuff that could be developed in Ruby outside of the 'web development' realm and hence I'm really glad to see this gem! All the best!",1515946118.0
2called_chaos,"This is not how it works. `Foo.const_missing` will only be called if attempt to lookup a constant **under** that namespace.

Basically `Foo::Bar`, given that Foo already is ""looked up""/defined, will call `Foo.const_missing` or fallback to the `Object.const_missing` method.

Also note that constant lookup is defined by the lexical scope of the code, basically meaning where it's written not where it's executed.

In cases of blocks for example constants will be looked up from the lexical scope of where the block is defined aka. written in the code. Even if you instance_eval or just call the block inside of a module or something it doesn't matter.

An example with inheritance, given a class `::Foo::Bar` that includes a module `::Helper` which has a method that attempts to use a constant from ::Foo::Bar

    module Helper
      def doit
        Baz.new
        # this will try in order
        #   * Helper::Baz via Helper.const_missing
        #   * Baz via Object.const_missing
        #   * fail with `doit': uninitialized constant Helper::Baz (NameError)
      end
    end

    module Foo
      class Bar
        class Baz
        end

        include Helper
        # this will try in order
        #   * Foo::Bar::Helper via Foo::Bar.const_missing
        #   * Foo::Helper via Foo.const_missing
        #   * Helper via Object.const_missing
      end
    end

    Foo::Bar.new.doit


Also might be worth a read: http://valve.github.io/blog/2013/10/26/constant-resolution-in-ruby/

I hope this is understandable :D",1515776226.0
grokfail,"It's because the constant lookup in the block is not resolving in the scope of Foo, but in the global object space.


        module Foo
          def self.const_missing(c)
            puts ""#{__method__}(#{c.inspect})""
            const_set(c, Module.new)
          end

          def self.run &block
            instance_eval &block
          end
        end

        Foo.run do
          puts "">> undefined: Foo::Test""
          pp Foo::Test
        end

        puts

        Foo.run do
          puts "">> undefined: Test""
          pp Test
        end


Output

undefined: Foo::Test

const_missing(:Test)

Foo::Test

undefined: Test

const_missing.rb:23:in `block in <main>': uninitialized constant Test (NameError)",1515777185.0
realntl,"I think the folks behind TruffleRuby deserve some recognition for delivering a realistic hope of a much more powerful runtime environment for ruby.

To be honest, when I talk to most people who now scoff at ruby, it's because they worked in big, messy rails apps for a few years and got sick of running into the same problems over and over.

It's funny, though, I don't ever have the problems they often cite. I don't end up with huge, out of control codebases, or issues with rubygems/bundler. Conversely, the deserters almost always pick up node.js or elixir, and when I ask about what they've done since quitting ruby, I notice that they often ended up building big, monolithic web apps built on an ORM.

Web development is the segment of software development that seems to be driven hardest by ""fashion.""",1515768511.0
adm7373,"As someone with Ruby and C# experience who is in the midst of the job interview process, Ruby is definitely not dead. There are a ton of companies in Boston that are committed to a Ruby/Rails tech stack and looking for developers with experience in Rails. ",1515777594.0
zverok_kha,"To be honest, I'd prefer Ruby to be ""not dead"" the Python way (find new applications for new things) than Perl way (still good for what it was good 10 years ago). In my feelings, Ruby is not dead but it definitely being sqeezed out of the list of industry's game changers. Which eventually will lead to death.

I don't think ""we are still relevant"" self-assurance is what we need, in fact. New things outside of ""better Rails plugins"" / ""better non-Rails web frameworks"" is what we need. ",1515772298.0
Abangranga,I think you all confuse 'dead' with 'not trendy',1515767386.0
egeeirl,"I think it depends largely on the market. Here in PDX, .NET used to be the big hot thing 5+ years ago. Now Node is huge and Ruby is starting to make a come back, particularly for smaller and startup companies.

Imo Ruby gets its popularity and infamy with Rails. When it was introduce, Rails was massive; ahead of its time. Now it is aging and generally slower than competing frameworks, especially in NodeJS land.

I have a strong feeling that once Ruby 3.x is released, Ruby will have a huge resurgence in popularity. ",1515788309.0
Mike_Enders,Ruby isn't dead and may even come charging back in 2018. The biggest hit against Ruby was performance and TruffleRuby will either put those concerns to bed or accentuate that performance wise its inherently flawed. What I do know is there is no reason for me to go anywhere right now. Not jumping away from one of the most productvie elegant langauges I have encountered in the very year that both TB and Crystal stand to make a big splash. Crystal might technically be another language but its so much like Ruby its almost like a different branch of Ruby (one which promises to do so much more than web apps).  Others can go play with langauges that have nowehre near the ecosystem.  I'll be building apps and getting to market.  ,1516266565.0
Witless-One,"Perhaps not a very good metric but #ruby on freenode is almost always inactive. 

Ruby will likely always be my favorite language but I think many industries are choosing Python now where they might have chosen Ruby before. I think ruby really excels in small web micro services and I don't think any language comes close to the overall ""developer happiness"" of Ruby",1515794804.0
lordmyd,"Whilst certainly not dead, Ruby adoption is declining relative to its main competitors - Node.js and Python. Indeed.co.uk for London and modulecounts.com show a consistent 3:1 for Python:Ruby. The same is true for Node:Rails in the UK. My fear is that TruffleRuby and 3x3 will be too late to reverse the trend.",1515896939.0
HighMaxFX,"Ruby is a fantastic language and it deserve to have a bright future.

I'm mainly a Java developer, then I made the choice of adopting Python instead of Ruby or Perl as my scripting language. Now I find Python boring as a hell, OOP support is bad, no metaprogramming facilities, and lambdas are not as powerful as Ruby's blocks.

I hope Ruby's popularity rise again, and a more powerful/fast runtime be developed. Maybe something like Lua's JIT, it would be awesome.",1516012364.0
banporkpie,I definitely see more ‚ÄúRuby/Rails isn‚Äôt dead‚Äù headlines than ones touting that they are dead.,1515783387.0
aspleenic,"Because, and perhaps this is my opinion, without a community, any language, hell any tech or tech philosophy, will die out. 

Ruby still has a strong core team working on it with contributions from the community - which features both old ‚Äútried and true‚Äù folks and new people coming in to contribute.

Without that community, there wouldn‚Äôt be anyone to build houses for, regardless of the weather.",1515948113.0
danshep,"Wait, sometimes Udemy courses AREN'T 90% off?",1515770577.0
urbanfog,Those subtitles though...,1515767397.0
pau1rw,$200!?  Or Google for free. Tough. ,1515771274.0
jrochkind,seems like a Rails bug to me. ,1515777349.0
Chaoist,"You need to:

1. [Install ruby](https://www.ruby-lang.org/en/downloads/).

Then, inside a terminal:

2. `git clone https://github.com/jmopr/job-hunter/tree/master/bin`

3. `cd` into the folder (it should be called 'job-hunter' by default).

4. Run `bin/setup`.

5. Run `bin/rails server`

6. Open up a browser.

7. Navigate to `localhost:3000`

That said, if you want to use the `angelapplier.rb` script you'll have to go through it and make changes since it looks to be tailored for the creator.

Good luck and Happy job hunting!
edit: woops, meant to reply to your reply.",1515750755.0
Chaoist,"Depending on what kind of code it can be as simple as booting up `irb`/`pry` or running `ruby <script>` or there might even be an executable script attached.

What are you trying to run?",1515747289.0
dosunx,I have no programming background or anything. I spent an hour researching how to run this thing I found on github damn. why is it so difficult? can't there just be an execute button ? All the posts and articles are for creating a ruby code or whatever. I just want to run it,1515747155.0
iconoclaus,"I‚Äôve avoided REST frameworks and gone with Sinatra for the most API needs. However, i‚Äôve very recently switched to Roda and couldn‚Äôt be happier. Similarly, for database needs i‚Äôve left ActiveRecord for Sequel. I find the Roda/Sequel combination for API/DB much simpler and performant. And plenty of plugins for both. ",1515745684.0
mycentstoo,I'd use rails but only the api application like this: http://guides.rubyonrails.org/api_app.html,1515742748.0
twinklehood,"Sinatra, maybe, if your project is tiny, and doesn't plan on growing or doing too complex things.

Hanami (formerly Lotus) is a tradeoff towards maintainability, with a lot more up-front work. 

Most likely you just want a rails api, as rails can scaffold all the boilerplate code quite nicely, and if super easy to get started with, compare to hanami or grape.",1515745552.0
jrgns,"I've got a lot of production code running fairly complex systems, all running the Rack / Sequel / Sinatra stack. I absolutely love it. Simple to setup, and highly configurable.

Roda is also great (it's from the same author as Sequel), but I found it's routing trees to be somewhat confusing and sometimes unintuitive. Better minds might get better milage though :)

Sinatra is unopinionated, though, which means you'll have to set up various features and integrations that you'll get for free through Rails API. I've written [Ditty](http://github.com/eagerelk/ditty) as my opinionated version of Sinatra, if you're interested.",1515754329.0
kmaicher,"Lotus is now named Hanami.
I would also consider [Grape](https://github.com/ruby-grape/grape) for pure API applications.",1515744720.0
janko-m,"I heard that [Sequel](http://sequel.jeremyevans.net) is very similar to Python's SQLAlchemy, so if you've been using that you might enjoy Sequel as well. But in any case I would recommend investing time in Sequel over Rails' ActiveRecord.

As for the web framework, I find [Roda](http://roda.jeremyevans.net) to be the most advanced one out there. It has very flexible [routing](http://roda.jeremyevans.net/rdoc/files/README_rdoc.html#label-Usage), and is packed with [features](http://roda.jeremyevans.net/documentation.html#plugins) which are all opt-in in sense that you only load the code for features that you use.

A lot of things have been built on top of Roda and/or Sequel:

* [ROM](http://rom-rb.org)'s SQL layer is implemented in Sequel, if you ever choose to go for it after Sequel
* [Hanami::Model](https://github.com/hanami/model), the persistence layer for Hanami (formerly Lotus), is implemented in ROM
* [Rodauth](http://rodauth.jeremyevans.net) is an advanced authentication and account management framework built on Roda & Sequel
* [dry-web-roda](https://github.com/dry-rb/dry-web-roda) provides structure for Roda apps, which scales much better than the Rails structure
* [Autoforme](https://github.com/jeremyevans/autoforme) is an administrative console for Roda/Sinatra/Rails and Sequel",1515749685.0
thibaut_barrere,"It's worth checking out Roda + Sequel for that type of stuff. Sweet, short and to the point.",1515762277.0
BashCoder,"If performance is a big issue for your app, I would consult [these metrics](https://github.com/luislavena/bench-micro/blob/master/README.md) ",1515772873.0
jdickey,"Having used both, my vote is for Hanami.

Much more consistent ecosystem that encourages good design and enjoyable coding of maintainable code. Far less implicit ""magic"" than Rails for you to have to work around/against in development and testing. Hanami also has a growing, welcoming community [on Gitter](https://gitter.im/hanami/chat) and elsewhere.

There are maybe four language/framework-or-library combinations that I've used in my nearly 40-year career thus far that have given me as much productive enjoyment as my work with Hanami to date. Enthusiastically recommended.",1515774300.0
__mr-moon__,Sinatra or Hanami + GraphQL might be interesting. ,1515761667.0
aspleenic,"For API work, Sinatra is the safest, most straightforward bet.",1515768362.0
harsh183,"The other comments make good suggestions and you should check them out. I also suggest giving Ruby on Rails + Grape a look, it gets a lot of work done for small code base sizes and decently performant if you code well. I've used this setup for making lots of REST APIs in the past (and it's still one of my first choices since frontend separation from backend is becoming more popular by the day). 

Also make sure that the solution you pick is not too complex or barebones, if you have a simple problem pick a simple toolset like Sinatra. If you have a fairly medium-large application, look into Rails and alike. Different libraries have been made for different types of applications in mind, so make sure to look into that.",1515775763.0
macclearich,"To amplify what /u/kmaicher said, Grape is spectacular for doing pure API work. Add grape/entities and it just gets better. You don't even need to embed it in Rails; you can set it up as its own Rack middleware and build stuff without any of the overhead that Rails brings.",1515777955.0
peterohler0,If you are looking for a super fast Ruby web server gem check out Agoo at https://github.com/ohler55/agoo. It's on rubygems.org. Related but very young is the WABuR framework.,1518287236.0
osxman,"Something like:

```
%w[north south west].exclude?(input)
```

or the opposite:

```
%w[north south west].include?(input)
```",1515675566.0
jrochkind,"To do that using `||`, you would have to do:

   if (input != ""north"") || (input != ""south"") || (input != ""west"")",1515676942.0
chrisgseaton,"> Was wondering if you can use more than one set of || in a row.

No, because || is disjunction of boolean values, not a disjunction of values which you can then test against another value. Some languages do have this though - I think Perl 6 calls it 'junction' (which is funny because it's a disjunction really).
Other people's suggestions in this thread look idiomatic to me.",1515676722.0
,[deleted],1515678550.0
realntl,"Have you ever looked at eventstore.org? I would use it over RabbitMQ for both inter-service messaging and event sourcing every day of the week and six days till Sunday.

(And I don't use eventstore.org really, either, but I'm not here to self-promote)",1515680486.0
damncabbage,"So when you do this:

    begin
      raise SomeErrorHere
      # ...
    rescue => e
      puts ""Bad Thing Happened: #{e}""
    end

... the kind of error that is caught is a StandardError (or any of StandardError's descendents). It's a shorthand for ""rescue StandardError => e"", and is very common.

On a practical level:

* SyntaxError doesn't extend StandardError, and so will simply pass through that ""rescue ... end"" block.
* To make things worse, SyntaxError is thrown when doing things like loading a script (it's a child of ScriptError). If you *do* catch it (and you can), you'll also be catching errors like *""loading a ruby script that has a syntax error in it""* which, depending when and how the capturing is happening, could be Bad‚Ñ¢.

Aesthetics:

Anyone actually using this library is going to have two choices when it comes to handling errors:

* Catching a generic exception type (eg. StandardError and all children) and presenting it in a generic way, or
* Catching specific error types and presenting them differently.

If you're going to make them look up the kinds of errors you're going to return anyway, you may as well make them specific to the application, to stop any potential *""is this Ruby complaining about a type error or that library...?""* kinds of questions.

**tl;dr** i'd make new exception classes that extend StandardError, for practical and aesthetic reasons

...

**Edit, after offline chat**: I've come around to your idea that the ""syntax error"" exception is one that *isn't* a StandardError. If you screw up a type signature, it's arguable the program is then *wrong*, in the same way that a compiled/type-checked program would have errors thrown before it had a chance to run. It's as close to a ""static"" /definition-stage kind of thing in Ruby as we can get.

(I'd still make new exception classes for both, to be clear, for the reasons listed later on in the original comment.)",1515655456.0
2called_chaos,"First take a look at what [buildin exception](https://ruby-doc.org/core/Exception.html) classes there are. Even though it could be considered to be a syntax error (your `String\Integer` example) `ScriptError` and their descendants are not intended for runtime user input exceptions (depending on what your `x` is). This is because rescuing `Exception` is considered bad practice so if you just want to rescue broadly you rescue `StandardError` and you should try very hard not to raise anything that isn't a StandardError caused by runtime stuff. I use NotImplementedError a lot though now thinking about it.

When I do command line tools or libraries in general I like to be more specific with my exception names but I inherit from the appropriate buildin class so that you _can_ go specific but you can also just broadly handle, say argument errors, easily.

As an example here are a few cases of one of my CLI tools where I use absolutely no generic class but forced myself to create more meaningful named exception classes. Note that they normally would be in their respective module but to show in one line what it ends up with they have their namespaces expanded):

    Colorize::UnknownColorError = Class.new(::ArgumentError)
    EventedResultset::SetAlreadyClosedError = Class.new(::RuntimeError)
    Worker::IO::PvWrapper::NoCommandError = Class.new(::ArgumentError)
    Container::SSH::CommandExecutionError = Class.new(::RuntimeError)
    SlotPool::SlotAllocationError = Class.new(::RuntimeError)
    SlotPool::PoolAlreadyClosedError = Class.new(SlotPool::SlotAllocationError)

    # Why argument error? Because it comes from a config file loaded at runtime.
    # If it would be a boot loaded/parsed file I would use ScriptError and descendants.
    Application::Container::AdapterNotFoundError = Class.new(::ArgumentError)

The goal was to see directly from the exception name where things go south without looking at the stacktrace. ofc you still have to but when I see `RuntimeError` it's basically useless information but `SSH::CommandExecutionError` tells me way more. You can argue that's what the message is for but as soon as you want to handle specific cases you find yourself substring testing the message string (especially if it's a library or something that others use, if you work in your app you can still change things if you need specific cases).",1515773485.0
damncabbage,"> Moreover, mapping an English phrase or clause to a portion of executable test code is a bit like using descriptive method names to organize and clarify your logic in Ruby, and that's a universally encouraged best practice.

But honestly, that's why I'd argue that people avoid it: why go for the (arguably fragile) overhead of mapping parts of specific English phrases to code instead, when you could write vaguely-Englishy descriptive tests with code instead?

(I know you can [embed code inside .feature files](https://github.com/rspec/rspec-core/blob/master/features/formatters/custom_formatter.feature), but I'm not sure what using them actually gets you at that point.)

The usual selling point that I heard back when Cucumber was hot was that non-programming business people could read _and write_ these cases. I've personally seen one place that had some tests and were read (occasionally), but I've never seen anyone matching that description writing them. I think others may have had similar experiences, and have decided the overhead of the *english => english-matching code => test code* indirection isn't worth it.

...

Back to the question:

As it is, I haven't seen any Cucumber on a project since 2014. I've heard of it come up in Q&A circles, but not in Ruby (or non-Ruby) groups for a long while. I'm in Sydney in Australia, if that's relevant.",1515657784.0
janko-m,"I do think that Cucumber is a very useful tool. In [tus-ruby-server](https://github.com/janko-m/tus-ruby-server), which is just an HTTP API, I first wrote the acceptance tests in Minitest ([server_test.rb](https://github.com/janko-m/tus-ruby-server/blob/f8869faae28f8b13891d2863c1b6dc8592799ac6/test/server_test.rb)), because I wanted it to just be code. It was horrible, it always took me too long to figure out what the test is testing, reading the code wasn't easy. I could have probably extracted ""features"" into multiple files, and added a bit more DSL, but I was thinking: why not just use a tool that's meant for this?

So I [ported](https://github.com/janko-m/tus-ruby-server/commit/66c9d2ed9eeefb0942fd7e54eb766fe9a9d2006c) all my acceptance tests to Cucumber. That was a big win. It immediately solved the readability problem, because no code is more readable than English, and it's just so natural to write HTTP interaction with Cucumber. I like that I can write exactly how I want it to read, and handle the implementation separately.

When acceptance-testing web applications, I think that Cucumber can be really useful tool to motivate you to make assertions based only on HTTP API interactions, because it forces you to think in a way that a client would interact. It's tempting to assert whether `POST /articles` created an article by checking `Article.count`, but that couples you to the implementation; it's much better to instead just visit the `GET /articles` page and see if the created article is listed.",1515665625.0
olbrich,I think cucumber / gherkin style tests (we mostly use Turnip as the runner so it's more rspec-like) make the most sense if you actually have non- or less-technical people who need to read/write them.  In our case product owners and QA will write/read them during story creation and verification.  We also use it mostly for BDD-style tests and still rely on rspec for lower level tests.,1515670930.0
impurist,"I am big supporter of using cucumber for testing from the outside in.
Describing user interactions and expectations with the UI in a set of easily readable step makes my development life much easier.
Translating business goals into tests is a huge win for our projects.
Advantages (IMO):
Reusable steps: A huge advantage over rspec, turnip, steak style functional tests.
Signal to noise ratio: The goal of the test is far easier to express and later read than using code only tools.   
I introduced cucumber at my workplace while testing some complex interaction with a search filtering UI. A less technical colleague on my team who was was handling a lot of the business analysis was able to express the business logic of the search filtering very easily. I then created all the steps to automate them. This was a huge win and ultimate got the project over the line. 
It is however important to focus only on the tests that provide test valuable business cases and ensure good regression protection. 
Also using the page model pattern to avoid duplicating css selectors through your test code is very helpful.  
On another note, Cucumber 3 has done away with regexes in step definitions and replaced them with interpolated strings. 
I have only just begun to explore this new step format so I can't say much yet. Although it does appear be more manageable.
I am currently testing a front end JS app with CucumberJS and Nightwatch. This is going fairly well. Although nightwatch no where near as solid as Capybara.
Hope this helps.",1516252414.0
blueeyedviking,"Just started a new job as a technical tester. Ruby is my weapon of choice, so that's what I am using. Also love Cucumber, so using that as well. Combining it with the parallel_test gem and a selenium grid is bloody awesome. Using Watir, Appium, REST, SOAP, and soon WinAppDriver, to drive test of almost every product we have. Organizing your tests in Cucumber using tags also makes great sense. I could go on üòä

I don't expect anyone from the business side to want to look at my feature files, but they would be welcome to do so.

So I wouldn't hold it against you.",1516299866.0
ncsupheo,"httpd isn't a great name for a utility. This conflicts with the ubiquitous Apache webserver. Along the same lines, `http` might not be the best name for a ruby module. Food for thought.

But i love the idea! Have a convenient http status code reference on a CLI util is a great and very useful idea. GJ. ",1515647844.0
WalterPecky,Nice! Ruby is a great language for creating CLI's.  ,1515654684.0
pmurach,"Command line tools in Ruby are my current obsession;-) I have developed a suite of libraries under **tty-** namespace(nearly 20 gems and growing). The tty site [http://piotrmurach.github.io/tty/](http://piotrmurach.github.io/tty/) provides links to all the current gems. I'm currently focused on finishing a **teletype** executable implementation to help in creating/scaffolding terminal applications. If you're interested, you can read & contribute @ [https://github.com/piotrmurach/tty](https://github.com/piotrmurach/tty). I hope you will create more CLI tools in Ruby!",1515713237.0
petepete,"Looks good. I use [cheat](http://errtheblog.com/posts/21-cheat) for this but it doesn't appear to be actively developed (and it [doesn't include the descriptions](https://i.imgur.com/IGW1i8S.png), but that's never really been an issue for me).

One thing that you might want to add is the Ruby symbol for each status; although looking at the list they are quite predictable.",1515674444.0
,[deleted],1515679078.0
Schrockwell,I ran this alongside Activity Monitor and ruby's memory usage keeps climbing‚Ä¶ working as expected over here.,1515643957.0
stumptowncampground,"1. In short, no. While Ruby may be able to do those things as well as any other dynamic language, it is not common in robotics, game dev, or ML. Machine Learning is dominated by python, Game Dev will vary based on the engine that is being used, but I'm not aware of any major game engines that utilize Ruby. I don't actually know much about robotics, but have not seen it associated with Ruby and I would think that python would also be popular here in addition to compiled languages like C/C++ or C#.

2. Ruby on Rails is specifically a web framework that implements many conventions and special features. There is a difference between learning Ruby and learning Rails. In my experience, learning Rails has not helped me do anything but work in Rails. 

3. I'm sure that there are projects out there in Ruby for all three of the areas you've mentioned. They may not be commonly used, and so the odds of finding a job with them is not likely, but that doesn't mean that it's something that you can't do.
",1515638247.0
joelparkerhenderson,"Jobs in the fields of robotics, gaming, and AI/ML tend to strongly correlate with lower-level faster-running languages (such as C++) or science-optimized scripting languages (such as python) instead of Ruby.",1515639022.0
JustinCampbell,"Ruby was prevalent in DevOps for a bit, but I think Go has superseded it for tooling.",1515673188.0
xaviarrob,"Ruby has libraries for these types of things but I wouldn't call it widely used for any of them. I see ruby used in two places, those being web dev (rails) and technical operations (infrastructure, particularly with tools like chef) our companies ops team all wrote in Ruby for most task we do (we all work in devopsish positions)

I've written some small games using Gosu which has a ruby port and it makes writing games fairly easy. ",1515643411.0
thibaut_barrere,"A large part of my Ruby work involves data processing (via [kiba](http://www.kiba-etl.org)), and ruby large amount of libraries for pretty much anything is great for that. So yes, there is room for non-web work here!",1515669433.0
,"Check out [awesome ruby](https://github.com/sdogruyol/awesome-ruby/).  
There's a lot of gems and projects outside of RoR. Machine learning, datavis and so much more.  

Also [RubyMotion](http://www.rubymotion.com) for cross platform games like PyGame in the python camp.",1515699220.0
__mr-moon__,"1. Machine Leaning (ML): There are many languages to work with ML out there, some obscure ones as well but the big player are Erlang and Python although Scala and Rust are also used. Ruby could be used for the task but it isn't popular because it is slow and lacks all the scientific libraries which these other languages have.

2. Game Development: This is a very large topic and there are many languages out there you could use depending on the complexity. You can use Ruby with the Gosu gem or Python but neither one is really popular. Python does have a small community of game enthusiasts but don't expect any AAA games. Most of the games build in Python are hobby projects. C++ with Unreal Engine and C# with Unity are two of the big players but there are so many more options that professionals use although I would recommend C# with Unity since it is very beginner friendly and you can build AAA games (I didn't dive too deep into game dev myself).

3. Robotics is based on AI,ML, Data Science and working directly with the hardware. What I saw this far is that engineers will use python to crunch data, build their ML models or the robots AI and finally implement all the low level aspects of accessing the hardware using C++ or even Python sometimes. Once again I didn't see Ruby being used for these tasks because of the libraries, etc. 

Where does Ruby excel ? Web Development and CLI scripts. 
Personally I love Ruby and prefer it over Python but Python is more widely used. I guess things would be different if there were all the scientific libraries in Ruby that Python has and if Ruby were faster. Maybe Ruby 3 might be a game changer.
",1515763035.0
stanislavb,"Apart from the spheres you've listed, and as far as I know, `mruby` is being used widely in Japan for embedded systems.",1515640238.0
dunderball,I use Ruby for web automation on the regular.  The language itself helps non-technical people to understand the tests that have been developed more easily.,1515698133.0
chrisgseaton,"Yes it's still relevant. If you want to contribute directly to the codebase then you might have to update your knowledge additionally, but apart from that it's fine.",1515630593.0
sillycatbear,Are many people using ruby 2.5 in production?,1515637716.0
msnicklas,"I applaud your effort but it just doesn't have the elegance of other cleanly defined testing DSLs. This, for example, hurts my brain:

    add ""Test Eval::truthy"", -> {
		(Nanotest.run silent: true do
			add Nanotest::Eval::truthy ""true""
			add Nanotest::Eval::truthy -> { true }
		end) == 0 and
		(Nanotest.run silent: true do
			add Nanotest::Eval::truthy ""false""
			add Nanotest::Eval::truthy -> { false }
		end) == 2
    }

To me, many people accept the downsides of Ruby in favor of clean syntax and readability (of course there are many other reasons, too). That code snippet just seems like you're using as many language features as possible without any real reason to.",1515616741.0
Valaramech,"Aside from the obvious learning aspect, is there a particular reason you didn't settle on [RSpec](http://rspec.info/)?  Your syntax seems extremely similar.",1515639860.0
editor_of_the_beast,"The file that you link to is really inconsistent, I'd recommend using `rubocop`.

No space after the `<`: 
`Nanotest.run(silent: true){ add -> { true } } <1`

Multi-line blocks with braces:

    7.times {
      add -> { false }
    }

Multi-line blocks with `do...end` syntax:

    Nanotest.run(silent: true, abort_on_fail: true) do
      add -> { false }
      add -> { var_test = true }
      after ->(x) { var_after = true }
    end

This block of code calls the exact same method (`Nanotest.new`) with and without parentheses:

    t = Nanotest.new silent: true do
      s = Nanotest.new(silent: true) {add ->(*args) {args == arguments}}
      add s
    end

Here you use `->` for a lambda:

    add -> { false }

And here you use the `lambda` keyword (as well as a magic number. I don't know what the `[1]` means here:

    Nanotest::Eval::succeeds(lambda do
      1 + 1 == 2
    end)[1].call",1515625589.0
kobaltzz,100% fool proof unless downforeveryoneorjustme.com is down or you ran out of internet. :),1515617025.0
tomthecool,"You should really make it clear *in the README* that this just [checks the response from querying http://downforeveryoneorjustme.com/<URL>](https://github.com/Gr3atWh173/is_down/blob/4ee9b555b8fe91df1e016db72219248e42008bf6/lib/is_down.rb#L18):

    Net::HTTP.get_response(URI(ISUPME + ""/"" + host)).body.include?(""is up"")

Also, a library like this should **really** be checking against a well-defined JSON response (or similar), not scraping an HTML response for a string like that. Your library is very brittle; it could easily break if `downforeveryoneorjustme.com` change the format of their page (e.g. changing the text, or using an image instead!).

I also *almost* found a major bug in the implementation: If the website URL starts with the letters `up`, your gem is *almost* tricked into always reporting the site as up! (Remember what I said about brittle HTML scraping??)

This is because, for example, visiting `http://downforeveryoneorjustme.com/up-this-is-not-a-real-site.com` contains the text:

> Is up-this-is-not-a-real-site.com down?",1515623624.0
realntl,"Interesting, though it missed what I perceive to be one of its biggest advantages -  the ability to produce native executables.",1515592228.0
mullsork,What‚Äôs a good editor setup for Crystal?,1515615897.0
,Interesting read. Thanks. :) ,1515590479.0
,[deleted],1515601372.0
anthem4truth,"I love ruby and crystal. I'm so grateful that on occasion when I need something faster I can use Crystal instead of Go or Elixir. Thanks to the Crystal and Amber Teams.

Worth noting that Matz from ruby has donated money to the Crystal project as well as given his blessing to use the ruby standard library in Crystal.",1515700406.0
p7r,"Posting this article here is a little obnoxious.

So, in response, here are the top 5 reasons for Ruby-ists _NOT_ to use Crystal and just keep using Ruby:

1. Very, very low learning curve. You already know Ruby.
2. Dynamic typing is a feature, not a bug. Compile time checking is useful, but so is dynamic typing. It depends on the type of problem you're solving.
3. Mature ecosystem with a commitment to performance enhancements and the ability to target JVM and other environments trivially through use of appropriate runtime.
4. The Web framework you want is already here. Love the completeness of Rails? Guess what, you've got Rails. Want something lighter, you've got Sinatra, Nancy, or build your own. Rack means you can choose your own adventure.
5. Ruby is not written in Ruby, but you don't care. If you wish to extend the core language, you can do so, but you can probably just extend it in Ruby, because it's ruby and everything is up for grabs.",1515589330.0
2called_chaos,"> *Updated by matz (Yukihiro Matsumoto) 12 months ago*  
> OK, accepted  
> This is because -l is older than chomp.
>
> Matz.

https://bugs.ruby-lang.org/issues/12926",1515591087.0
hehestreamskarma,"Congrats :) Ruby is wonderful.

Some nit-picking, though:

* 2 spaces
* for-loops are quite taboo in rubyland
* you're dangerous for extending string :)
* ... this should probably be its own object

The Ruby Style Guide, while not the police, is a great resource for learning ""preferred"" practices when writing Ruby, https://github.com/bbatsov/ruby-style-guide",1515525857.0
TomahawkChopped,"Check out mechanize and nokogiri to up your ruby game.

Also, everything u/hehestreamskarma said",1515538559.0
andygauge,Your first program overrides String?  That's actually pretty impressive.,1515522908.0
DudeManFoo,"Congrats on getting started.... it get's better from here...

One suggestion that I would like to make not only for you, but for everyone would be to use wget to download the file you will be working on. 

This helps in several ways. 

One, you are not depending on the network for your source material (and being nicer to the server). 

Two, when you or others fork your source, possibly years from now when the site is gone or changed they can still understand what was going on.",1515588193.0
ioquatix,Is writev just emulated using a loop on Linux? Or is it an actual syscall?,1515484985.0
janko-m,"> In Ruby applications we tend to do an awful lot of string concatenation before shoving, say, a piece of fully rendered HTML over a socket. This string mangling burns CPU and memory.

Has anyone compared the speed of `writev` vs multiple `write` calls? That's what currently happens when you assign an `#each` object as the response body in Rack applications, the underlying web server (Puma, Unicorn etc.) will iterate over the `#each` object and `write` strings to the socket.",1515493234.0
janko-m,"It's too bad that `IO#write_nonblock` didn't receive the `writev` optimization. HTTP.rb uses it instead of `IO#write` when user specified a timeouts, as that way the `timeout` standard library can be avoided.",1516963811.0
geraldbauer,Great articles series on Ruby 2.5. FYI: If anyone is looking for more article I collect [Ruby 2.5 - What's News?](https://planetruby.github.io/advent2017/ruby25) bytes at the Ruby Advent Calendar page. ,1515485420.0
in0pinatus,"Has anyone seen a clarification of what the ""big issue"" was causing bundler to be backed out of 2.5 release at the last minute?  https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/61416",1515449731.0
geraldbauer,"Hello, I've added three new snippets to the Planet Jekyll collection, that is, a liquify filter, a toc filter that auto-generates a table of contents, and a liquid tag example with custom includes directory lookup. 

Thanks to Stefan Baumgartner (@ddprrt) for initialy publishing / sharing the great snippets on the [Fett.eu](https://fettblog.eu) blog. 

PS: Add your snippets to the Planet Jekyll collection! Updates more than welcome.",1515427597.0
greymalik,"Some to consider: Design Patterns in Ruby, Eloquent Ruby, Metaprogramming Ruby 2, Practical Object-Oriented Design in Ruby, Refactoring Ruby Edition",1515432509.0
,"[The Well Grounded Rubyist 2nd Edition](https://www.amazon.com/Well-Grounded-Rubyist-David-Black/dp/1617291692?SubscriptionId=AKIAILSHYYTFIVPWUY6Q&tag=duckduckgo-ffab-20&linkCode=xm2&camp=2025&creative=165953&creativeASIN=1617291692) is a great resource for the foundations of coding in Ruby. It's pretty agnostic overall and is more about achieving a deeper understanding of the language.

[Beginning Ruby](https://www.apress.com/us/book/9781484212790) is another great book which works with v2.2 and does a nice intro and works through various projects to get you started.",1515417747.0
zverok_kha,"If you already have some programming experience (e.g., you do not have two tasks at once: grasp Ruby and grasp programming in total), I'd recommend ""classic"" Programming Ruby book: https://pragprog.com/book/ruby4/programming-ruby-1-9-2-0

Unfortunately, its last edition covers only somewhat outdated Ruby 2.0, but to ""taste"" the language it is still the best. After this just read through some interesting libraries (through, say, https://github.com/uhub/awesome-ruby and https://github.com/arbox/data-science-with-ruby), and official language docs: http://ruby-doc.org/core-2.5.0/ (it has docs for all versions, currently most used are 2.3-2.4, the most recent is 2.5.0), it is pretty extensive (though the ""file list"" style of TOC is not that friendly). I believe that will be the clearest path in described situation",1515417812.0
petercooper,Any book that covers 1.9 or 2.0 idiomatically and properly will be fine since the last large shifts in Ruby syntax came across those versions. Since then it's been more about performance and minor tweaks to syntax that don't break things (mostly).,1515626478.0
YoshiRulz,Two spaces T_T,1515426850.0
k4roli5,"First one. 
If I append a new statement, `git diff` shows changes in 2 lines when using the second approach.",1515418252.0
menge101,"From [Ruby Style Guide](https://github.com/bbatsov/ruby-style-guide/blob/master/README.md)

*   Adopt a consistent multi-line method chaining style. There are two popular
    styles in the Ruby community, both of which are considered
    good&mdash;leading `.` (Option A) and trailing `.` (Option B).
<sup>[[link](#consistent-multi-line-chains)]</sup>

  * **(Option A)** When continuing a chained method invocation on
    another line keep the `.` on the second line.

   ruby
  
        # bad - need to consult first line to understand second line
        one.two.three.
        four

        # good - it's immediately clear what's going on the second line
        one.two.three
         .four
    


I'm surprised there isn't a specific guideline for this.",1515418332.0
678,"    some_enum_one.map { |item| transform(item) }
                 .map { |item| second_transform(item) }",1515415876.0
jrochkind,"To me, it's clearly better to leave a trailing dot, so you know the line is continued. 

But rubocop on some open source projects is making me do the reverse, so clearly I have a minority opinion. I don't get it. ",1515422374.0
joesb,I use leading dot together with either parentheses or backslash new line. Got the best of both worlds.,1515439313.0
theGalation,"> And the advantage of (2) being that you can easily copy-paste the code in a terminal.

You might like the [fc](https://math2001.github.io/post/bashs-fc-command/) command.",1515421688.0
dar512,"Code has two goals 1) To compile into something useful. 2) To be understandable by someone else and/or future you. Which one makes it most obvious to you what's going on?  
",1515450162.0
isolatrum,"I personally tend to avoid indentation in most cases except for blocks/conditionals, and multiline method indentations:

    do_thing(
      long_var_1,
      long_var_1
    )
    
Why? Because although doing stylistic indentation might look nice, it can sometimes make the code harder to edit. And it also can make the code look disorganized, if there are many different statements indented at different (arbitrary) levels

 So, if I were to follow my approach, your second snippet would look like so:

    some_enum_two.
    map { |item| transform(item) }.
    map { |item| second_transform(item) }

Instead, I would prefer this:

    some_enum_two
    .map { |item| transform(item) }
    .map { |item| second_transform(item) }

it's visually clearer to me what's going on this way, since the leading dots provide a little bit of pseudo-indentation.",1515515613.0
thebmo,"we use your first example in my company, however it should be noted that monkey patching that into your console will not work. only the trailing method works (your second example). This can be pretty annoying to work with, having to change the periods around when working with consoles.",1515431607.0
4rch3r,"I would checkout the gem: https://github.com/mperham/connection_pool  which should be customizable enough to handle DBI.  Unfortunately there's no true 'native' connection pooling in Ruby (without writing it yourself), but this gem has worked for me in the past.  At the very least perhaps you can look at the internals and grab some ideas on implementation?",1515432614.0
jrochkind,"I think DBI doesn't get used a whole lot in current ruby community (which is some of why you couldn't find much googling).  

Not what you asked, but I'd just use [sequel](https://github.com/jeremyevans/sequel), which is high-quality, maintained, relatively widely used, and should handle common use cases reasonably without having to figure out custom stuff. (It does have connection pooling built in). ",1515439631.0
stanislavb,I've always wondered why this wasn't possible at the first place...,1515407020.0
isaacpriestley,"With self. It‚Äôs not an instance method. 

The context for those instance variables is different.",1515365416.0
phaul21,"I've mixed feelings about the explicit string arguments in those functions. The author makes a point that monkey patching standard lib Ruby classes is bad. I agree. But in Ruby it feels bad that these functions don't operate on self. They pretend that self is not there, but being Ruby self is just ignored, and the whole idea behind Ruby - to me at least - is to send messages to objects. Messages don't have to mutate the object - in fact it's better when they don't - so the functional part of the design is fine.

I know Math works similar, and I would go as far as that's a bad inconsistency that we got used to. Why Math.cos(1.0) if -1.abs?

If monkey patching is bad, why not create a Module and let the user mix it in wherever they want?",1515398988.0
binarygold,How would one use this gem? What is the purpose?,1515384677.0
cpt_bhloop,just what I've been looking for! Thanks!,1515351951.0
jrochkind,"Huh. I really don't understand what's going on here, does anyone, who can explain it?

If `Rails.application.routes.url_helpers` is meant to be a module that gets `include`d -- why can you call methods directly on it at all? Like, literally, technically what makes this possible?

And why would it be slower?

And do the comments by sgrif in issues on Rails suggest that `helpers = Rails.application.routes.url_helpers; helpers.some_method` somehow has different performance characteristics than `Rails.application.routes.url_helpers.some_method`? How is that even possible?  Ah, cause the module/object gets regenerated every time you call `Rails.application.routes.url_helpers` maybe? But didn't used to in older versions of Rails?  

This stuff has been a pain point in Rails for a while, alas. ",1515341494.0
in0pinatus,"I don't think this used to be the case. If I remember correctly, in Rails 4, `Rails.application.routes.url_helpers` was previously a singleton if called directly. But this caused weird issues like `url_for` not actually having the same semantics when called via the singleton, vs via `include`. Perhaps it changed in Rails 5 as part of the uplift to using helpers from controllers.
",1515374846.0
stanislavb,"OK, that was surprising. Thanks for sharing.",1515406961.0
babdulkarim,May I ask why you're doing this? Is this for monetary gain or do you hope to pass on knowledge to someone less experienced for the sake of it? ,1515300557.0
sioa,"Hey I am a Ruby beginner. I know a bit about sinatra, but not much about Rails. I have been learning programming as a hobby for around an year now and am trying to be employable as a professional developer within April of new year. I would love to help you out with your project anyway I can. ",1515318202.0
z-Routh,Are you me?  I had almost the exact same idea a while back and never followed through on it.  I'd be interested in pairing on it with you!,1515328087.0
Clan57,"I'm not in a position to take you up on this yet, but love what you're doing. Will save and follow up with you in the future to see if you're able to take anyone on at that time. Cheers and good luck with WellWish",1515333587.0
rbiddis1,"I love the idea of what you're doing and would love to get mentored by you. I'm trying to learn ruby as well. Although, I dont believe I have 8 hours a week in one day to spare. I could definitely use a local friend to get together with occasionally though.",1515340359.0
Kritnc,"I don't mean to hijack your thread but I would also like to mentor someone. I have about 3 years professional experience and 6 months of teaching at a bootcamp. I really miss the teaching aspect and would love to give back. I would not be able to spend 8 hours a week but I could check in a few times a week and then do some pair programming on the weekend. 

If anyone is interested feel free to reach out. I would specifically like someone who has a decent understanding of the basics and a possible project they would like to build. ",1515375157.0
Kodcx,"This is a great idea an offer. I am very interested in participating, and will follow-up for additional information. ",1515437381.0
thibaut_barrere,"I've been using [Kiba ETL](http://www.kiba-etl.org) (Ruby data processing framework) and [Sidekiq](http://sidekiq.org) together in production for a while now, to write flexible data synchronisation jobs.

While not complicated, it requires some considerations, so I have documented those & I'm sharing them today.

Happy to answer questions & I'm welcoming feedback if something isn't clear!",1515269759.0
Randy_Watson,"Yes.  They all have varying utility in the long run.  However, some are basically evergreen.  

Evergreen:

* Refactoring
* Design Patterns in Ruby
* Practical Object Oriented Programming in Ruby
* Ruby under a Microscope

Likely Evergreen:

* Metaprogramming Ruby 2 (Possibly new ways added, but the ways shown in this book will remain relevant)
* The Well-Grounded Rubyist (Third Edition is being written right now, but older editions should still be relevant)

Not Sure:

* All the JS stuff.  JS changes really fast, but JavaScript the Good Parts should still be relevant for learning vanilla JS.
* HTML & CSS - Newer CSS grid and flex variants are probably not in this book.  The other stuff should be good though.
* Programming Ruby 1.9 & 2.0 - This is the pickaxe book.  It still is relevant, but there are definitely newer ways of doing certain things that might not be covered by this book.
* Jumpstart Sinatra - Sinatra just went to 2.0 I believe.  I'm not sure how much has changed.  I only use Sinatra sporadically for small APIs so I don't know.
* If it says Angular and is an older book, it's out of date.
* Rails 4 books are out of date when it comes to frontend.  Rails 5 embraces JS frameworks.  However, the backend stuff should still be useful.",1515247973.0
dotnofoolin,The POODR book by Sandi Metz (3rd from the bottom) is a keeper for sure.,1515248020.0
whalesalad,Eloquent Ruby is one of my favorite reads of all time.,1515255343.0
lfv89,"Yes, but not only that. Eloquent Ruby and Metaprogramming Ruby in that order much contributed to my current Ruby knowledge.",1515253164.0
ruffertarian,JavaScript: The good parts is still very valid and a book anyone that writes JS should absolutely read.  It's short and concise and stops people form doing weird stuff with JS.,1515264045.0
midasgoldentouch,"Eh, most of them should be fine. The exact syntax may change but the concepts won't.",1515248112.0
majeric,The refactoring book is the single most important book you could read as a programmer.,1515262853.0
intelect0,"I‚Äôm currently reading Eloquent Ruby, loving it so far. Good to know I‚Äôm on the right path. POODR should be the next one.",1515266736.0
holyjeff,"I am interested in getting e-books for:
Design Patterns in Ruby
POODR
Eloquent Ruby
Metaprogramming Ruby 2
The Well Grounded Rubyist

Does anyone know what is the cheapest way to acquire them ?
Manning has regular sales on everything but getting stuff from Informit / Addison-Wesley is harder.
Suggestions ?",1515322533.0
geraldbauer,"Hello, may I highlight the [Yuki & Moto Press Bookself](http://yukimotopress.github.io/). Free books about ruby (online) - it includes a title on programming cryptocurrencies and blockchains that's missing in your ""future-proof"" stack :-).

Yes, ruby, sql, html and friends are ""future-proof"" - it's like the alphabet (a-z) or the digits (0-9) - with us for 1000+ years. Let's add some new number or letter anyone :-).",1515248002.0
muzfuz,"I recommend Well Grounded Rubyist to everyone learning Ruby.  It‚Äôll really take you through how the language works, which is arguably even more important than just knowing the syntax and some OOP concepts. ",1515252741.0
greymalik,There's a version of the Refactoring book that uses Ruby instead of Java that you might find more useful.,1515271788.0
pr0t3us,"Pretty much everything there EXCEPT for the  rails4, HTML/CSS, jquery and maybe the ruby 1.9 books are still relevant and good reads.",1515277285.0
MachaHack,"I'm assuming the Node.js, MongoDB and AngularJS book is covering Angular 1. In that case, it's out of date already. Angular 2 is a totally new framework compared to Angular 1, and both Angular and MongoDB have fallen quite out of favour. ",1515283293.0
Paradox,"If you buy the ebooks from PragProg, many of them receive updates.",1515288566.0
benignportmark,"Thanks for all the input guys n gals. Revived my appetite for reading some of these, the front end and dated framework stuff I'll get shot of. Always feels a bit wrong throwing books away though doesn't it!",1515349399.0
phaul21,This is a great presentation about the same topic https://www.youtube.com/watch?v=X2sgQ38UDVY,1515230592.0
disclosure5,"I don't understand the question. It's written as though it's a request for a community contribution, but it's clearly an organisation website.

Is this a job ad?

> but I'm sure since you are reading it 

Probably worth noting that because the site doesn't seem to be in English, a lot of users are *not* reading it.",1515199573.0
cocoabean,How much you payin'?,1515208071.0
bugo,Low effort shit post. This punchline is overused and not really funny. ,1515181210.0
geraldbauer,"Hello,
 I've started a new Awesome News page @ Planet Ruby that collects ruby news incl. 3x3, 2.6, etc., conferences & camps, libraries, stats & benchmarks incl optcarrot and more. How do you get your ruby news? How do you find libraries / gems? 

Anything missing? Updates welcome. 

Cheers. Prosit 2018!",1515168269.0
BDubbs42,"Would it help to represent the data you‚Äôre returning as an object? It could just be a Struct for now. Since it seems pretty complex, it could be helpful to think about modeling it this way. It also gives you a natural place to put behavior that is common to that data, rather than spreading that around. ",1515131257.0
ryanlue,"Clean code is about isolation of concerns and organizational/intentional clarity. It's virtually impossible to give you good feedback because it's not clear what the **intention** of the code is. Without any clue as to the intention of the code, from a refactoring standpoint, it might as well be minified. 

My first instinct is that these methods both overlap in their responsibilities and are trying to do too many things. I would also ask if your class needs to maintain all of this state, or if perhaps it could better be broken up into smaller classes.",1515141510.0
isaacpriestley,"Wouldn't it make sense to pass a hash out of the function?

    def my_func
       hash = {}
       hash[:a] = ""thing""
       hash[:b] = ""other thing""
       hash
     end

(there are even ways to improve this, using `tap` or other approaches, this is just a crude example)",1515104503.0
Paradox,"Well first of all you can't call `foo[:a]` because `return a,b‚Ä¶` returns an array of objects, not a hash. For some small functions this is probably acceptable, but for larger ones it adds comprehensional complexity, in that any programmer attempting to use the function needs to understand the order of its returns.

As /u/isaacpriestley said, I'd use a hash and just return it.",1515118487.0
phaul21,"Most of the time this is a code smell. But don't be dogmatic about it.
If in your mental model my_func returns an array of things - returns something that can be indexed, iterated etc., then the best code is the code that returns an array of things no matter what rubocop says. However if you don't want an Array of things just a bunch of unrelated things, then my_func should probably be split up each part only dealing with related things. If a,b,c,..f are components of a single thing, then that single thing should be an object. Different ways to deal with this, and in the first case returning an array is completely fine.",1515234753.0
dfvxkl,"Do not use CSS background attributes for images that are not actually backgrounds. 

For a presentational icon it is more appropriate to use the SVG data URI in a CSS content attribute of a ::before or ::after pseudo-element.",1515146125.0
jrochkind,"Useful, thanks!

> If you don‚Äôt want to use a data url in CSS, you can also render it as a normal image via <img > tag....

> In my case all of the elements being rendered were present in the vast majority of my pages, so it makes sense to put them in places that will be globally cached by browsers and my CDN.

Wouldn't an svg at some URL as the target of an `<img src` also be globally cached by browsers and the CDN?  (Assuming it's cache response headers are proper, of course). ",1515130698.0
lotyrin_work,"<use>? Lets you have them in your DOM for CSS color/animations, but also not duplicate content. You can polyfill for IE.",1515172564.0
owens_trevor,"Meh, feels like it's overcomplicating things for minimal (if any) benefit.

Check out inline_svg gem, super simple and easy to use.",1515311097.0
JumpKicker,"You're looking for join, documentation [here](https://ruby-doc.org/core-1.9.3/Array.html#method-i-join)

Basically, you say string = array.join, and join takes a string that you want it to put between every item. so array.join(', ') would return 'hi, hi, hi'. But array.join would just return 'hihihi'.

Hope this helped.",1515090420.0
jrochkind,"    string = array.collect(&:hi).join('')

which is a shortcut for:

     string = array.collect { |obj| obj.hi }.join('')",1515091710.0
doge_code,"    array = [""hi"",""hi"",""hi""]
    
    array.join #=> ""hihihi""
    

",1515090570.0
programmatisch,"You also could do:

array.inject('') { |result, elem| result + elem.hi }

See  https://ruby-doc.org/core-2.2.3/Enumerable.html#method-i-inject

This adds the result of the hi-method of each element of the array to result, which is initialized with '' (empty string).",1515105457.0
Paradox,"As many people have pointed out, you can use `#map` and `#join` to accomplish this.

However if you use both you have to iterate over the collection twice.

You can use `#inject` to iterate once and get what you want.

    [""foo"", ""bar"", ""baz""].inject("""") { |string, obj| string + obj.hi() }",1515117805.0
sizl,"i get what you are asking. maybe instantiating in the array literal doesnt work? instead of:

    array = [Test.new, Test.new, Test.new]

try
    
    array = []
    4.times.do |i|
        array << Test.new
    end

and then..

    array.each do |a|
        a.hi
    end
        



",1515136657.0
isaacpriestley,"Because the parenthetical statement is evaluating first:

    2.4.1 :006 > (hash[:names] ||= []) += [""name1"",""name2""]
    SyntaxError: (irb):6: syntax error, unexpected tOP_ASGN, expecting end-of-input
    (hash[:names] ||= []) += [""name1"",""name2""]

is equivalent to this:

    2.4.1 :007 > [] += [""name1"", ""name2""]
    SyntaxError: (irb):7: syntax error, unexpected tOP_ASGN, expecting end-of-input
    [] += [""name1"", ""name2""]
",1515090005.0
ngrep,"What's the purpose of:

    (hash[:names] ||= [])

Is this to give :names, if it doesn't yet exist as a key, a default value of [] before you append to it?

If so, perhaps you want to give your hash a default value:

    2.3.1 :017 >hash = Hash.new{|h,k| h[k] = [] }
     => {}
    2.3.1 :018 > hash[:names] += [""name1"", ""name2""]
     => [""name1"", ""name2""]
    2.3.1 :019 > hash
     => {:names=>[""name1"", ""name2""]}
    ",1515092596.0
jrochkind,"came out a while ago, and still no advisory in https://rubysec.com/ alas. I am losing faith in rubysec.com. It is a good idea. Apparently not enough people working on it. ",1515091855.0
brianlouisw,It might be helpful if you posted an excerpt from a section that you find confusing.,1515088030.0
nirvdrum,"I gave a talk at RubyConf this year on what the Substrate VM brings to the table for TruffleRuby:

https://www.youtube.com/watch?v=hIMldcAzd5o

It greatly improves our startup time and makes short-lived applications run in a reasonable amount of time (think unit tests). There's still more work to go -- we haven't hit all of our performance objectives yet. Since the SVM hadn't been open-sourced yet, we were developing against a closed-source project. As far as day-to-day development goes, I don't think the SVM being open-sourced materially impacts TruffleRuby. However, it's considerably easier for people to build TruffleRuby on the SVM now and test their projects out. We have some docs on how to build it yourself:

https://github.com/graalvm/truffleruby/blob/master/doc/contributor/workflow.md

I hope with it being easier to build we'll start seeing more uptake. Maybe get it added in RVM and thus as a test target in Travis.

In theory, the JRuby team could also benefit from the SVM. They require some functionality the SVM doesn't currently provide, but if they can resolve that you could also see JRuby with a substantially faster start time.",1515096783.0
chrisgseaton,Some documentation here https://github.com/graalvm/truffleruby/blob/master/doc/user/svm.md,1515082021.0
Mike_Enders,Does anyone have an educated guess at what this means for Rails?  What kind of performance boost in rails is the team expecting? and what would be a disappointment if not reached? ,1515270275.0
realntl,Is it really? That's pretty damned exciting!,1515081970.0
jdickey,"We've had great success in building small, independently deployable services using [Roda](http://roda.jeremyevans.net/), which I enthusiastically evangelise at every opportunity.

Once [dry-web-roda](https://github.com/dry-rb/dry-web-roda/releases) stabilises a bit more, it'll be a great system to wrap Roda with, using [ROM](http://rom-rb.org/) and the excellent [dry-rb](http://dry-rb.org/) Gems in a coherent, useful whole.",1514989763.0
SureLetsDoAnother,"You mean the `2.5.0` update?

LRTHW uses Ruby 2.0+ so that should be okay. It might not include the newer features, but you should be generally alright for learning how to program using Ruby.

The second version/edition of Learn to Program uses `2.2.2` so same goes.

I don't know if there's a more recent version of The Well Grounded Rubyist, but mine is Ruby 1.9. Without a version that is Ruby 2.0+ you should prefer another option. That's been the situation for longer than the most recent update, although it does add to the challenge.

**Edit:** I should have checked before posting. The newest version of The Well Grounded Rubyist uses Ruby 2.1. There *shouldn't* be any problems, just the missing coverage of some newer features.",1514958401.0
zverok_kha,"I'll tell you what. (More as a theoretical and generic answer, not targeting just current Ruby update.)

In my Ruby mentoring, I typically suggest PickAxe, and at some point even used to say first edition is OK (which covered an ancient Ruby 1.6, IIRC, but it is freely available from Ruby website), then started to insist on ""the most recent"" edition -- which is 4, covering Ruby 1.9/2.0. Of course, they are ancient too, now, but ""maybe not that different, concepts haven't changed a lot""? 

Bollocks. 

Ruby evolves, and if it is not Python 2‚ÜíPython 3 changes, the evolution is still steady. Not only ""new features you can learn later"" emerge, but our entire understanding of what is good Ruby code evolves, too. Core methods like `tap`, `yield_self`, methods-returning-Symbols, frozen Strings, Enumerable updates, are changing the basics of code structuring. Gems infrastructure becomes crucial for any interesting work. Community preferred style(s) got updated. Focus on functional features becomes valuable.

So, what books targeting outdated Ruby versions are missing is not this or that feature, but mostly the spirit of a modern Ruby.

TBH, currently, I firmly believe that what is (mis)represented [here](http://ruby-doc.org/core-2.5.0/) through a silent list of uncommunicative filenames, should be facelifted to be used as The Ruby Book, it has enough information and reasonably well-structured, and always updated alongside Ruby releases. ¬Ø\\\_(„ÉÑ)_/¬Ø",1514966858.0
jrochkind,nah. ,1515012533.0
cstansbury,"Ruby's conditional assignment

`||=`",1514930982.0
jawdirk,"Using & to pass symbols as procs, e.g.

    [1,2,3,4].map(&:odd?) # => [true, false, true, false]",1514931447.0
,"%w[value value value] for an array of strings

%i[value value value] for an array of symbols",1514931168.0
fullspectrumlife,"```
a = 10_000_000
```",1514938215.0
niborg,"Personally, I find that correctly using Ruby [keyword arguments and splats](https://www.justinweiss.com/articles/fun-with-keyword-arguments/) can really make your code elegant/expressive/flexible. It is also one of the first things that you should pick up when learning the language.",1514931150.0
zencephalon,Definitely the safe navigation operator: http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/,1514929624.0
jrochkind,My favorite ruby syntax is definitely the Block. It's what makes ruby ruby. ,1514934597.0
in0pinatus,"####1. Destructuring in assignment and parameter lists.

    response = [""Horse"", 37, [3,-1], foo: :bar]
    name, age, (x,y), *opts = response
#
    def list((head, *tail))
      case tail.length
      when 0
        head
      when 1
        ""#{list [head]} & #{list tail}""
      else
        ""#{list [head]}, #{list tail}""
      end
    end
    list %w(Bob Marge Jill Clover) #=> ""Bob, Marge, Jill & Clover""

####2. The implicit === in `when` statements that becomes equality for primitives, match for regex, is_a? for classes, call for procs and so on.

    def ticket_class(age)
      case age
      when nil; ""Unknown""
      when /‚àû/; ""Cthulhu""
      when String; ticket_class(age.to_i)
      when 100; ""Centenarian""
      when 18..21; ""Young adult""
      when ->(age) { age < 18 }; ""Junior""
      when ->(age) { age >= 65 }; ""Senior""
      else ""Regular""
      end
    end
",1514934612.0
ignurant,"This isn't a syntax thing, but it does feel special to Ruby. When I first learned about Enumerable `any?` `all?` and `none?` my code became so much more pleasant. 

    all_good = true
    items.each do |item|
      all_good = false if item != 'good'
    end
    all_good


Vs

    items.all? {|item| item == 'good'}

You can also hook this up with the :symbol.to_proc trick if the items have an appropriate method:

    numbers.all? &:odd?",1514952672.0
classhero,"The ones already posted are best, but honorable mentions for me:

* `super` without arguments to implicitly pass up the arguments of the call site method (vs `super()`)
* `if`/`unless` one-liners ",1514960001.0
Gman513,"After starting coding in C, Ruby's case statements are a dream. (None the least because they work on more than just integers)

    loop do
        input = gets.chomp

        case input
        when 'exit'
            exit
        when 'help;
            puts 'some help string'
        when 'mem', 'memory', 'ls'
            puts 'whatever was saved'
        when /^some_magic_(regex) = (this)$/
            mem[$1] = $2
        else
            puts 'unrecognized command' 
        end
    end

You have a basic ruby shell right there.

Edit: Got spotted forgetting an end statement. On the upside at least I didn't push a binding.pry to prod.",1514970965.0
DudeManFoo,"> [1,2,3,4,5,6,7] - [6,7]   => [1, 2, 3, 4, 5] 

is pretty cool",1514982932.0
otikik,"The spaceship operator:

```
<=>
```",1514942863.0
notorious1212,"*splat

https://endofline.wordpress.com/2011/01/21/the-strange-ruby-splat/",1514958136.0
,"For me some of the best have already been mentioned, %i/%w for defining arrays of words, if/unless, Symbol#to_proc with the & operator.

I'll add to that:

The simple ones that everybody forgets are actually really nice syntactic sugar: attr_reader/attr_writer

%r for defining regular expressions, so that you don't have to escape

    /.*\/.*/
    # vs
    %r{.*/.*}

I also like that you can create ranges with many different types, i.e.

    DateTime.now..Date.new(2018, 2, 14)
    1..9
    'a'..'z'

Also the exclusive rage (excludes the last value):

    (1...10).to_a # => [1, 2, 3, 4, 5, 6, 7, 8, 9]

kwargs, and specifically the fact that you can exclude the hash brackets from argument lists:

    def test(one:, two:)
      [one, two]
    end

    test(two: 2, one: 1) # => [1, 2]

Parentheses around block arguments when yielding an array:

    [[1, 2], [3, 4]].map { |(a, b)| a + b } # => [3, 7]

Which is expecially nice with each_with_object and hashes:

    { one: 1, two: 2 }.each_with_object({}) do |(k, v), hash|
      hash[v] = k
    end
    # => {1=>:one, 2=>:two}

Struct inheritance/struct constant assignment:

    # class User < Struct.new(:first_name, :last_name); end
    User = Struct.new(:first_name, :last_name) do
      def full_name
        [first_name, last_name].join(' ')
      end
    end

    User.new('John', 'Smith').full_name # => ""John Smith""

// Edit: This will be especially nice in Ruby 2.5 due to https://bugs.ruby-lang.org/issues/11925

Proc#curry:

    adder = ->(a, b) { a + b } # and the stabby-lambda is awesome too
    add_one = adder.curry.call(1)
    add_one.call(2) # => 3

The inheriting from module trick that you can see in use in https://github.com/dkubb/equalizer and other variants such as defining a capitalized method name (i.e. https://github.com/dry-rb/dry-equalizer/blob/master/lib/dry/equalizer.rb#L5-L7) or defining a self.[] method (i.e. https://github.com/rom-rb/rom-repository/blob/master/lib/rom/repository/class_interface.rb#L19-L24)

I'm sure I've forgotten a few.",1514981119.0
DudeManFoo,"Trailing conditionals is probably one of my favorites..

> thing.do_this if other_thing.thing_needs_done",1514983042.0
Gnascher,"I love the [safe navigation operator](http://mitrev.net/ruby/2015/11/13/the-operator-in-ruby/).

`Thing&.method`",1514932425.0
andygauge,%w{mon tue wed} to make building arrays of strings faster.,1514932609.0
SmellsLikePanda,?a for one single character (same as ‚Äúa‚Äú),1514928760.0
BeerNirvana,".tap to avoid temporary variables

",1514997402.0
morphemass,"A code base I'm working on (legacy) has an incredibly long service class called eg. TheCustomersConfigurationService with a class method key. I've been replacing this in new (encapsulation) classes with:

    Key = -> (v) { TheCustomersConfigurationService.key(v) }

and calling with:

    Key.(""lookupvalue"")

I'm currently pushing to get the class renamed to ```Key```, and ```key``` renamed to ```call```. Its just 3 pieces of the language (upper case first letter constants, arrow procs, dot proc calls) which just all feel so nice together. 

p.s. yeah, yeah, DI /agreed. We fight the battles we can.",1515019189.0
owens_trevor,"(not affiliated)

I've been looking for something like this, just stumbled on it yesterday on Hacker News.",1514905148.0
editor_of_the_beast,"I think #3 and #5 are the most important.

3) The Null Object pattern: Polymorphism is the answer to repeated conditionals. If you don't know what I mean by that, I can give examples, it's a well known refactor technique. Sandi Metz just came onsite to my company and did her 3 day course, and she recommends using polymorphism and null objects rather than using the &. safe navigation operator. When it comes to OO, I trust Sandi a lot.

She said many times throughout the course that if there's an if check before sending a message to an object (which I consider implicitly true when using the safe navigation operator), that's because the object is too stupid to just respond to the message! All of the messy conditional logic should be in exactly one place, and that's in a factory that creates the appropriate object - after that point, all of the objects should conform to the same interface no conditionals will be necessary. 

5) The Law of Demeter: This one I did not understand until recently, but it's really changed my life. The way I understand it is this: if you envision your objects and methods as a graph, adhering to the Law of Demeter means only working with objects that are one edge away, i.e. direct collaborators. 

The reason this is so important is that interconnections between objects and methods is basically the definition of complexity in software. It's what makes my brain feel like a pinball machine when trying to read code. To combat that, we have two options: either get smarter (which is biologically difficult) or make the code simpler. One way to make it simpler is by reducing dependencies, and the Law of Demeter is here to bound the number of dependencies that we create.

One way to see the pain of clear Demeter violations is if your tests are a pain to set up, i.e. tons of mocking of nested data. Usually that's because you have a long method chain somewhere (user.account.thing1.thing2.description). These method chains are what needs to break down - because you need to know the return type of each call. So each call in theory could actually be coupling you to another type. 

EDIT: formatting",1514901913.0
hmaddocks,"Don‚Äôt use the safe navigation operator. You are basically saying ‚ÄúI know this might be nil but, meh, let someone else deal with it‚Äù. Same goes for `try` in Rails. 
",1514904509.0
so_just,6) Maybe monad,1514892154.0
realntl,"I hate to be the contrarian all the time, but there's one approach to nil headaches that's the _most_ important: understanding how nil values can emerge unexpected. The _vast_ majority come from one of three buckets:

1. Dumb bugs that should be caught early via testing
2. User input (which by its nature can be all kinds of wrong)
3. Data access

The answer to #1 is testing, which the article mentions. The answer to #2 is validation. The answer to #3 is to be _disciplined_ about what gets stored in a database, as well as recognizing all possible permutations of data that can be returned when querying from a database.

The article mentions a few things that I think, if followed, might lead to less than desirable outcomes. The null object pattern, in particular, should never be used to reduce ""NoMethodError on NilClass"" exceptions, because those exceptions should still not be happening. If I'm writing a web app, and I've got a notion of `current_user` that is `nil` whenever the user isn't signed in, the Null Object pattern is a great way to improve the code quality and reduce cyclomatic complexity. But without employing that particular technique, a disciplined programmer should still be testing their web interface in both logged in and anonymous modes (except pages that require a login, obviously).

Going deeper, rescuing NoMethodError is a pretty egregious antipattern. In the blog post, the example code rescues NoMethodError inside a begin block that calls `orders.last.placed_at`. There are simply too many reasons for NoMethodError to get raised that have nothing to do with `orders.last` returning nil. It'd be better to simply call `orders.last.nil?` conditionally (even that is undesirable). A better approach is to encapsulate the data access in a query object.

The root cause of nil headaches is poor programming habits and techniques. Addressing them by bandaids in the form of patterns, lonely operators, rescues, etc. is just piling on additional poor programming habits as countermeasures.

So, the one approach that's the most important: always stop `nil` at it's _source_, at the earliest possible moment.",1514909478.0
sshaw_,"Rescue `NoMethodError`‚ÄΩ Please, do not do this! This leads to broken code that is hard to debug. This suggestion should be removed. 

Given the author's example:

    class User
      def last_ordered_at
        orders.last.placed_at 
      rescue NoMethodError => e 
        raise UserMissingOrderError, ""no order found for user with id #{id}""
      end 
    end


> The effect at runtime is that instead of a cryptic:
> ‚ÄòNoMethodError: undefined method ‚Äòplaced_at‚Äô for nil:NilClass‚Äô
> We‚Äôll get:
> ‚ÄòUserMissingOrderError: no order found for user with id 1234‚Äô
> Which, in this particular context, might save us a lot of debugging.

No no no no! 

This can mask a real error and introduce **a ton** of unnecessary debugging.  An assumption is made that *only* `nil.placed_at` will trigger the error, but in reality, one can introduce changes to  `#orders` or even `#placed_at` that can result in a `NoMethodError`. And, since we're rescuing it, no one will ever know (more or less) the code is buggy. 


",1514948590.0
hmaddocks,"6) Don‚Äôt return nil.  Try to prevent nils entering your system by ensuring you return non nil values from your methods.
",1514904383.0
andygauge,just monkeypatch Nil with method_missing that responds everything is fine.  But seriously I liked the Null Observer Pattern when I learned it from Sandi.  https://www.youtube.com/watch?v=OMPfEXIlTVE,1514918980.0
theGalation,"I've never seen the Null Object pattern implemented in any code base I work in. I'd like to start using it but I'm wondering where would you put that file in your project? In Rails everything tends to get dumped in lib so I try to avoid that.

What about nesting it?

    class User
      class NullOrder
        def placed_at
          'No order history'
        end
      end
    
      def most_recent_order
        orders.last || NullOrder.new
      end
    
      def last_ordered_at
        most_recent_order.placed_at
      end
    end
",1514959558.0
HighMaxFX,"Just my two cents:

Nil/Null headaches are avoided with discipline and testing. I personally don't need that Kotlin's bullshit in my tool-set.",1515661991.0
vladfaust,"0) Use static typed Crystal, which will check all those errors on compilation ",1514897801.0
firstpantsthenshoes,Nice work!,1514849309.0
limeblast,You've not really given much to go on. What are you hoping to achieve with a mentor? ,1514832709.0
jules2689,"If anyone has any questions about the gem, feel free to ask :)

I'm one of the developers who [worked on it](https://github.com/Shopify/bootsnap/commits?author=jules2689), though [Burke](https://github.com/burke) did most of the work. I can connect you to him as well... or you can join us to chat about this kind of thing with ~100 other developers from many companies working on Developer Productivity at https://chat.devproductivity.io",1514857412.0
,[deleted],1514824352.0
jrochkind,Does it still install `spring` too?,1514819913.0
Nwallins,For those wondering [How does this work](https://github.com/Shopify/bootsnap/blob/master/README.md#how-does-this-work),1514850438.0
,"I didn't find anything on using this in production other than ""it's possible"", but would be nice to speed up dyno restarts and the nasty queueing time. Anyone using it that way?",1514852446.0
DrVladimir,"The NES benchmark is cool... but damn that must be some unoptimized code. I remember playing emulated SNES games on a 486 at a playable FPS (no sound though, and color downsampling), and NES games ran fine. ",1514752637.0
rcterzi,[Towards the Ruby 3x3 Performance Goal by Vladimir Makarov](https://developers.redhat.com/blog/2018/03/22/ruby-3x3-performance-goal/),1522369160.0
UserElite,what makes is 3x faster?,1514725936.0
myringotomy,"Although I really applaud any effort to make ruby faster I really think time would be better spent working with the Crystal team to make crystal more compatible with ruby.

Crystal is already much faster than ruby.",1514790436.0
i_spot_ads,"we've been hearing this shit for years. Node is fucking +10 times faster in a VM than Ruby is on bare metal, just think about it!

while i really do appreciate the language design in itself, the speeds, even when x3 faster, stays waaay behind anything else out there (go, nodejs, python, etc).",1514775100.0
BLITZCRUNK123,"TL;DR: ‚ÄúI implemented Machine Learning in my Rails application. By writing a completely different application in Python.‚Äù

Unfortunately, that‚Äôs really our only option as Rubyists, for now anyway, while Python still has a much better ecosystem for scientific computation and ‚Äúmathy‚Äù stuff.

It‚Äôll get better though. There‚Äôs already a number of efforts to bring Ruby up to speed.",1514720824.0
678,"It would help if you described what you've tried so far and what exact issue you're having. Toml-rb's parse function outputs your data into a hash while retaining the original structure, so it should be fairly straightforward.",1514678694.0
svpersteve,"Loved Livable Code by Sarah Mei in Brighton this year, comparing a codebase to a home you and your team has to live in, and what matters more than rules is that you‚Äôre all comfortable in that codebase

https://brightonruby.com/2017/livable-code-sarah-mei/",1514671419.0
geraldbauer,"Some Vienna.rb / Linz.rb talks:

- [Blockchain! Blockchain! Blockchain! - Build Your Own Blockchains in Ruby from Zero (Scratch)](https://github.com/geraldb/talks/blob/master/blockchain_ruby.md)
- [Quik - The Missing Project Scaffolder for Ruby - Quick Start Your Ruby Gems, Your Sinatra Apps, Your Jekyll Sites 'n' More](https://github.com/geraldb/talks/blob/master/quik.md)
-  [New Horizons - Build Your Own (Static) Planet News Site with Pluto (and Ruby)](https://github.com/geraldb/talks/blob/master/planet.md)  

Happy new year. Prosit 2018!",1514714182.0
zverok_kha,"Nice!

I believe that [fast](https://github.com/jonatas/fast) (find-in-ast) gem could be pretty helpful in tasks like this. Also, inside-and-around Rubocop there are a lot work about AST analysis and editing, worth examination, for example their [NodePattern](http://www.rubydoc.info/gems/rubocop/RuboCop/NodePattern) idea, and, in general, the ""cop"" itself.",1514647068.0
amerine2,"I‚Äôm not hating it, but I‚Äôm curious why this is so highly upvoted in /r/ruby but has no comments and is a JavaScript library... :-/",1514658164.0
jstad,Upvoted as it fills into the existing JS ecosystem pretty well. For those projects where a full SPA adds unnecessary overhead for the project scope or deployment costs. ,1514662484.0
i_know_sherman,"I like that its written in typescript, Rails should go ahead and ditch coffee for it üòé",1515122626.0
typoglycemia,"Is this a [minimum spanning tree](https://www.hackerearth.com/practice/algorithms/graphs/minimum-spanning-tree/tutorial/) problem?

That's a classic problem for algorithms and data structures. [Sedgewick's treatment](https://algs4.cs.princeton.edu/43mst/) is on the web. Kind of amazing that such a valuable resource is right there with diagrams and everything. The criticism for Sedgewick used to be that it doesn't handle degenerate cases very well. That's probably been fixed with modern editions, but do a lot of testing with goofy inputs ‚Äî graphs with one node, that kind of thing.

The [writeup on Wikipedia](https://en.wikipedia.org/wiki/Minimum_spanning_tree) is really math-heavy, but looks very complete. (IANAGT (graph theorist))",1514572414.0
Tomarse,Can't you just traverse the tree placing each node value into an array?,1514568913.0
SgtBlackScorp,"Do you want to traverse the tree or get all possible 'paths' assuming you can only 'travel' in one direction?
For the former I recommend you read this:   
 https://en.m.wikipedia.org/wiki/Tree_traversal
The latter is more complicated",1514573923.0
ifatree,"hint: the terms you're looking for are ""depth first"" versus ""breadth first"". once you realize what those two mean in relation to the problem, it should be pretty obvious how to make each one work. the hard part will be figuring out which one is better for your needs.",1514586269.0
jrochkind,"google for stuff on tree traversal, it's a classic intro computer science kind of thing. Here's a few articles on it in ruby, I found just by googling ""ruby tree traversal""

https://rlafranchi.github.io/2017/03/08/tree-traversal-for-rubyists/

http://www.informit.com/articles/article.aspx?p=26943&seqNum=5",1514589506.0
moomaka,"Something like this:

    Node = Struct.new(:value, :children) do
      def initialize(value: nil, children: [])
        super(value, children)
      end

      def paths
        return [[value]] if children.empty?
        children.flat_map { |child| child.paths.map { |p| p.unshift(value) } }
      end
    end

    tree = Node.new(value: 'p').tap do |tree|
      tree.children << Node.new(value: 'c1').tap do |c1|
        c1.children << Node.new(value: 'gc11')
        c1.children << Node.new(value: 'gc12')
      end

      tree.children << Node.new(value: 'c2').tap do |c2|
        c2.children << Node.new(value: 'gc21')
      end

      tree.children << Node.new(value: 'c3')
    end

    pp tree.paths
    
    => [[""p"", ""c1"", ""gc11""], [""p"", ""c1"", ""gc12""], [""p"", ""c2"", ""gc21""], [""p"", ""c3""]]
",1514779040.0
PQQKIE,cool stuff. so nice to see a project that is well documented. thx.,1514545083.0
jchapin,Right on and well written. Committing and proposing small changes makes code review a heck of a lot easier and it also makes bisecting to find any unexpected issues easier. When a single commit alters 10 lines on 10 files... then you still have to dig through those 100 lines to find where things went wrong.,1514572484.0
TheFaithfulStone,"The only thing that I sorta-kinda disagree with here is this:

> Commonly developers will notice problems and refactor as they go - and that‚Äôs awesome! But those fixes should be done in a separate pull-request. 

I have never worked anywhere where this means anything OTHER than ""never refactor.""

""Fix it later"" == ""Fix it never""",1514842651.0
geraldbauer,"Great summary with examples and links what's news in Ruby 2.5. FYI: Added  ""New features in Ruby 2.5.0"" to the Ruby 2.5 News Bytes collection at the [Ruby Advent Calendar 2017](https://planetruby.github.io/advent2017/). For the record so far:

- Standard Gems 2.5.0 - Default Gems, Bundled Gems / by Jan Lelis, Idiosyncratic Ruby
- 10 New Features in Ruby 2.5 / by Junichi Ito, Ruby programmer @ SonicGarden.jp
- 10 More New Features in Ruby 2.5 / by Tom Lord, Software Developer from London
- Performance Improvements in Ruby 2.5 / by Jesus Castello, Ruby Guides
- yield_self in Ruby 2.5 / by Micha≈Ç ≈Åomnicki
- Improved stacktrace display in Ruby 2.5 / by Micha≈Ç ≈Åomnicki
- Ruby 2.5 Series / by Amit Choudhary, Mohit Natoo et al @ BigBinary
- What's new in Ruby 2.5 / by Nimmy Vipin, Red Panthers
- Ruby 2.5 is out - Let's benchmark / by Thomas Leitner, HexaPDF
- Changes in Ruby 2.5 / by Kir Shatrov, Production Engineer @ Shopify
- What's New in Ruby 2.5? / by Nithin Bekal, Programmer from Ottawa @ Shopify
- New Features in Ruby 2.5 / by Rodrigo Ponce de Le√≥n, Ruby developer @ WyeWorks",1514491800.0
Never_Again_2017,"If Ruby was actually documented, we wouldn't need to scrap together these various guesses about what's been changed.",1514523125.0
TheMoonMaster,"In general this is just another click bait article that says nothing new. 


There are some pieces in the article that are downright offensive though. Comparing writing your app in another language/framework to being trans is fucked up.",1514468293.0
zverok_kha,Wow. Can't even properly count how many ways it is fucked up. ,1514470712.0
angrystoma,"at my previous company we used [clockwork](https://github.com/Rykian/clockwork)

IIRC you basically set up a specific dyno in your procfile that only runs the clock scheduler, and you just use clockwork to kick off whatever sidekiq job at the interval you want.",1514440472.0
hehestreamskarma,"Start with this: http://railscasts.com/episodes/366-sidekiq

create a file in your app's root dir called `Procfile` with the following:

    web: bundle exec puma -t 5:5 -p ${PORT:-3000} -e ${RACK_ENV:-development}
    worker: bundle exec sidekiq -C ./config/sidekiq.yml

create config/sidekiq.yml with the following:

    development:
      :concurrency: 5
    production:
      :concurrency: 20
    :queues:
      - default
    :schedule:
      MyWorker:
        every: '1m'

bundle, commit, push to heroku

then scale the worker dyno,

`heroku ps:scale worker=1`

more resources:

https://github.com/mperham/sidekiq/wiki/Deployment#heroku

https://gorails.com/episodes/deploying-sidekiq-to-production-with-heroku

https://devcenter.heroku.com/articles/background-jobs-queueing

",1514443577.0
mapimopi,Use `$stdin.gets.chomp`?,1514433671.0
tk425,I think you want to ARGV[0].chomp,1514475730.0
OldTimeGentleman,What was the point of top level constant lookup? Seems to me like if you write Foo::Bar you _don't_ mean ::Bar. Why wouldn't it NameError in the first place?,1514453451.0
geraldbauer,"Great summary with examples and links what's news in Ruby 2.5. FYI: Added ""What's New in Ruby 2.5?"" to the Ruby 2.5 News Bytes collection at the [Ruby Advent Calendar 2017](https://planetruby.github.io/advent2017/). Cheers.",1514406177.0
GroceryBagHead,"Here's what I see with TravisCI running test suite:

- 2.2.7 - 22.00 seconds
- 2.3.5 - 22.39 seconds
- 2.4.2 - 21.45 seconds
- 2.5.0 - 17.26 seconds

Something is noticeably faster.",1514437487.0
geraldbauer,"Great article. Added ""Ruby 2.5 is out - Let‚Äôs benchmark"" to the Ruby 2.5 News Bytes collection at the [Ruby Advent Calendar 2017](https://planetruby.github.io/advent2017/). Great to see that Ruby is getting faster and faster (and HexaPDF too). Keep it up. Cheers.",1514388530.0
jonnyman9,Yay!,1514409280.0
qroshan,how about comparing with other languages?,1514410549.0
tomcopeland,"One nice thing is now ERB has `result_with_hash`:

    $ ruby -v
    ruby 2.5.0p0 (2017-12-25 revision 61468) [x86_64-darwin16]
    $ ruby -rerb -e 'p ERB.new(""Hi <%= name %>"").result_with_hash(name: ""Tom"")'
    ""Hi Tom""

This is more concise than having to store the params in a local variable and pass in a binding to `result`.
",1514386679.0
Morozzzko,"> Beginning with Ruby 2.5, bundler is now a part of Ruby‚Äôs core library. You‚Äôll be able to bundle install to your heart‚Äôs content as soon as you install Ruby.

If I recall correctly, the change was reverted. There was a short discussion [in a different topic here](https://www.reddit.com/r/ruby/comments/7m0vb4/ruby_250_released/drqkvc0/).

I saw your comments in the thread though.

Something doesn't feel right here",1514385868.0
tomthecool,"The Devise issue you mentioned was already fixed in master, back in October:

https://github.com/plataformatec/devise/commit/1009096172f2cbc86bcd54d053c89a09be67fb9f

I think it would be better to just suggest running off the master codebase (temporarily; not in production!) instead of manually re-applying the same fix.",1514377874.0
jrochkind,">  Dir::Tmpname#make_tmpname or Dir#tmpdir are no longer available

Doh! Why'd they do that?",1514400194.0
disclosure5,"Will confirm, both of my active gems I just set travis to test 2.5.0 and everything ""just worked"".",1514413011.0
joltting,"ActionCable is also experiencing a bug with 2.5 atm.

https://github.com/rails/rails/issues/31517",1514465671.0
laerien,`yield_self` can‚Äôt take any arguments so there's no need to pass `*args` along. It does return a sized enumerator if no block is given. Here‚Äôs a pure Ruby implementation: https://github.com/graalvm/truffleruby/blob/e4c2726f8588337bdd84dd42e4b107c50789ad19/src/main/ruby/core/kernel.rb#L472-L478,1514486360.0
comjf,"What if you wanted to print something like

    i = 20 loop do i -= 1 print ""Only #{i} more"" break if i <= 0 end

Now do you see why sometimes you'd need a away to do this? 

",1514369082.0
442401,"It will come in handy later on.

The text between the `""` double quotes is a String.   

We can dynamically insert text into that String with the `#{}` construct.

There is no hard-coded text in the String in your example, so in this case `print ""#{i}""` and `print i` will indeed give the same result.

Try adding some other text into the String and observe the result:

    print ""number#{i} """,1514369718.0
shingtaklam1324,"So, `print i` prints the value as a number (integer) and `print ""#{i}"" is string interpolation, where the `#{i}` is replaced by the value of `i`. So you can do things like this `print ""The number is #{i}"".",1514369467.0
chrisgseaton,"> it's just calling list on the argument that happens to be an array of key-value pairings, right?

Not quite. This is an array of hashes, that each contain a single key-value pairing. This is a bit strange and not very idiomatic. What's the point of the hash here rather than just a string? I'm surprised the problem has data like this, but never mind let's work with it rather than against it.

> I know in pseudo code what I'm supposed to do for the kata

Well post that pseudo code then!

> For each name in the names, do what?

You want to get the names as an array of strings. For each name, map it to the `name` key of the hash (this is that weird data structure I was on about - why have the name in a hash with a single key `name`?)

    name_strings = names.map { |name| name[:name] }

You want all but the last name and the last name separately:

    all_except_last = name_strings.take(name_strings.length - 1)
    last = name_strings.last

If there's just one name you just want to return that:

    return last if all_except_last.empty?

Otherwise join all but the last name with commas, and then join the last name onto that with an ampersand.

    all_except_last.join(', ') + ' & ' + last",1514336938.0
in0pinatus,"Recursion, recursion & recursion.

Spoiler: https://gist.github.com/inopinatus/c2db24261b5146bf03a9e92d385da447",1514441200.0
realntl,"```
collection.group_by(&:itself).transform_values(&:count)
```

Just remember, one programmer's beautiful is another programmer's bundle of confusion! It's very clever, though, I can't help but to admit. Cheers :-)",1514434582.0
defkathy,[awesome article! Check out my article about the latest features in Ruby](https://www.defmethod.com/blog/2017/12/26/ruby-25-rubys-christmas-release-is-here),1514319892.0
defkathy,[Awesome post! Check out my blog post about the latest features in Ruby 2.5](https://www.defmethod.com/blog/2017/12/26/ruby-25-rubys-christmas-release-is-here),1514319015.0
geraldbauer,"Great article. Added ""What's new in Ruby 2.5"" to the Ruby 2.5 News Bytes collection at the [Ruby Advent Calendar 2017](https://planetruby.github.io/advent2017/). Cheers.",1514367039.0
laerien,`yield_self` isn't similar at all to `try`. I think the author got `try` confused with `tap` and ran with it.,1514505351.0
mencio,Based on this PR work and twitter informational from Hiroshi Shibata a Ruby core team member. MJIT should be available with the next 2.6 preview release.,1514287085.0
mrinterweb,"Just 364 days before Santa brings Ruby 2.6, hopefully with MJIT.",1514305996.0
some_kind_of_rob,It‚Äôs about time! Hopefully this will be one of the biggest speed improvements ever to happen to Ruby. ,1514299505.0
ignurant,"Can someone eli33 what is happening under the hood that this implies? Is JIT something that Ruby already has, and is getting changed to this new implementation? Is JIT the process of converting Ruby source to the executable vm code at runtime? I don't have a strong understanding of what JIT implies beyond just in time. 

I want to be excited like all of you are but I don't know how yet :(",1514312859.0
geraldbauer,Fantastic news. I've started a new 3x3 news section in the [Awesome Rubies](https://github.com/planetruby/awesome-rubies) page @ Planet Ruby to track 3x3 news. Just getting started. ,1514303277.0
myringotomy,Typing next!,1514324166.0
neofreeman,Hope all goes well fixing perf issues on ruby and I can come back to awesome syntax land of ruby,1514310176.0
msq,"    dictionary.each do |word|
      puts word if string.include?(word)
    end

You want to check inclusion not equality so you output the word if it is in string (`String#include?`), not only equals it (`==`)",1514281117.0
jstad,"The pickaxe book is still the best language reference book out there. There are others I‚Äôd recommend to complement it, but it‚Äôs still a must read for Rubyists. ",1514249727.0
sihui_io,"The book on the left reminds me of a three-part post on the exact same topic I wrote a while back :D 

[Part 1: Code Blocks, Procs, Lambdas, and Closures in Ruby](http://www.sihui.io/procs-in-ruby-p1/) - 6 min read

* Definitions of Code Block, Proc, Lambda, and Closure
* Constructions
* Calling a Code Block/Proc/Lambda
* Passing and Returning Procs

[Part 2 Scopes, Universes, & Lunch Boxes; Procs vs Lambdas in Ruby](http://www.sihui.io/procs-in-ruby-p2/) - 5 min read

* Scopes, Universes, and Lunch Boxes [FUN STUFF]
* Differences between a Proc and a Lambda

[Part 3 Proc <> Code Block Conversion and Ampersand(&) in Ruby](http://www.sihui.io/procs-in-ruby-p3/) - 6 min read

* Proc <> Code Block Conversion and Ampersand(&) [FUN STUFF]
* A Code Block VS An Argument In the Context of A Method
* Behind the Scenes of [‚Äòhello‚Äô, ‚Äòworld‚Äô].map(&:upcase)",1514251997.0
delus1on,"I haven‚Äôt read the first, but POODR by Sandi Metz is possibly my favourite Ruby book. You‚Äôll love it!",1514239867.0
categorical,After you‚Äôre done with POODR check out 99 Bottles by the same author.  Everyone loves POODR but 99 Bottles is even better!,1514271753.0
23tux,I can also recommend Avdi Grimm‚Äôs book ‚ÄúExceptional Ruby‚Äù  and Metz & Grimm‚Äôs  ‚ÄúConfident Ruby‚Äù,1514277712.0
sonalkr132,I drew [this](https://i.imgur.com/WmsfWcq.jpg) when I was reading Practical Object-Oriented Design in Ruby. Sandi Metz is awesome.,1514290861.0
defkathy,[Check out the third edition of The Well-Grounded Rubyist! You can use the discount code **ruby3dm** to get it 50% off!](https://www.manning.com/books/the-well-grounded-rubyist-third-edition?a_aid=defmethod&a_bid=b2a9cb7e&utm_source=Newsletter+Subscribers&utm_campaign=31f62c6dc2-EMAIL_CAMPAIGN_2017_12_26&utm_medium=email&utm_term=0_ec54730539-31f62c6dc2-153221313),1514317676.0
citylims,"Practical OO design in Ruby is one of the best programming books I've ever read. I haven't written a lick of ruby in the past couple years, but I still make use of what I learned from that book. ",1514297155.0
TomOwens,"I'm a little disappointed that the inclusion of bundler into the standard library was reverted. Bundler was the only gem that I ever installed as a system gem, and I was looking forward to having no system gems and only project-specific gems.",1514206738.0
geraldbauer,"FYI: I've collected articles / blog posts about what's new in Ruby 2.5 over at the Ruby Advent Calendar [1]. The list so far includes:

- Standard Gems 2.5.0 - Default Gems, Bundled Gems //
  by Jan Lelis, Idiosyncratic Ruby
- 10 New Features in Ruby 2.5 //
  by Junichi Ito, Ruby programmer @ SonicGarden.jp
- 10 More New Features in Ruby 2.5 //
  by Tom Lord, Software Developer from London
- Performance Improvements in Ruby 2.5 //
  by Jesus Castello, Ruby Guides
- yield_self in Ruby 2.5 //
  by Micha≈Ç ≈Åomnicki
- Improved stacktrace display in Ruby 2.5 //
  by Micha≈Ç ≈Åomnicki
- Ruby 2.5 Series //
  by Amit Choudhary, Mohit Natoo et al @ BigBinary

[1] https://planetruby.github.io/advent2017",1514225081.0
janko-m,"> `rescue`/`else`/`ensure` are now allowed to be used directly with `do`/`end` blocks

This is really nice. The method-level `rescue` statement is one of the small details I really love about Ruby, it's great we'll be able to use it in blocks too.

> Enumerable#any?, all?, none?, and one? accept a pattern argument.

I didn't really find what was the change here, because I think the original proposal was different than the actual change that got merged. Does someone know?

> One of our most loved libraries, pp.rb, is now automatically loaded. You no longer have to write `require ""pp""`

Great!

> `IO.copy_stream` use copy_file_range(2) to copy offload

I love `IO.copy_stream` and use it a lot in Shrine, it's nice to see that there is a performance improvement, though from what I was reading the speedup is very small and only on certain disks.",1514237171.0
niborg,"Am I correctly understanding the API for kw args in structs?

    MyStruct = Struct.new(:foo, :bar, keyword_init: true)
    a = MyStruct.new(foo: 'FOO', bar: 'BAR')

",1514221711.0
megatux2,Christmas edition :) ,1514214048.0
defkathy,[Check out my blog post about bundler and the other latest features in Ruby 2.5!](https://www.defmethod.com/blog/2017/12/26/ruby-25-rubys-christmas-release-is-here),1514316962.0
Hell_Rok,I think you should just be able to do `str.gsub!('/')`,1514190380.0
tomthecool,"There **isn't** a back-slash in that string, so I don't know what you're asking.

    ""save $1.50 on moe\'s¬Æ breakfast bowls""

And

    ""save $1.50 on moe's¬Æ breakfast bowls""

are *exactly the same thing*.

Can you please provide a minimal, complete and verifiable example of your problem? What **exactly** are you seeing? What steps can I do to reproduce the same thing?",1514191959.0
JohnDSmall,"I'm playing with your Ruby blockchain stuff. It's very good. It's giving me a way to learn it without having to learn Go or C++ at the same time. But...

When I try running central bank from the command line as described in [blockchains](http://yukimotopress.github.io/blockchains) section 6. using

    centralbank

it doesn't work because centralbank is in the bin/ directory, so I tried (after setting chmod +x etc) 

    bin/centralbank

and then got an error I've never seen before

    env: ruby\r: No such file or directory

So I wrote added one space at the end of the shebang header line That removed the extra \r and I then progressed to

    bin/centralbank
    Traceback (most recent call last):
         (LoadError)h file or directory --
   
Because it doesn't know where the library path is. If I run with

      ruby -Ilib bin/centralbank

Then it's fine. 

So you need to do something to remove that \r at the end of the shebang line, and add the library path before the require. ",1523255291.0
kobaltzz,"I would say my dad. He was a chemical engineer and created some process improvements that were beyond its time. He engineered a solution for speeding up manufacturing which they were able to fill the orders of a massive demand (which no one else in the world was able to do). He would take me to the plants and let me follow him around when they had some production issues. He would simply glance at all of the pipes as he was walking through and come back to the hotel and draw out the entire design of the plant from memory and overlay his designs to show where they did not meet his design. Needless to say, childhood was not fun in trying to live up to those expectations.",1514084689.0
jdickey,"The best software developer I ever encountered was a woman I was privileged to work under for three years early on in my career (this was mid-80s). Not only was she fully buzzword-compliant for the day; not only could she write testable, bug-free code at least as fast as anyone else on the team; but she had a knack for looking at control flows and UI flows and seeing all the places where users could do something unexpected/""silly""/""impossible"" and come up with ways to prevent or recover from those, *without making the user feel like an idiot.* She'd been writing software since the IBM 704 was new and shiny, and made the transition to minis and PCs/Macs and back without skipping a beat. She made all of us on the team see that writing code *per se,* though obviously important, was rarely the most critical activity of a developer tasked with software for the real world.

I remember one time when the (large) company we were working for had high-school kids coming through on a tour and our team got tagged as hosts. During a Q&A session, one kid asked what he should study to ""get into computers like you"". She answered ""communications, sociology, psychology, philosophy, logic, languages, and at least one fine art. Taking a coding class or two wouldn't hurt, either"". Thirty years on, that's still the answer I give when kids ask me similar questions. ",1514094326.0
faster,"I worked with a guy who was unhappy with all available HTTP servers (it was 1996 and the landscape was pretty limited), so he took a vacation and came back with a C++ class that allowed me build a basic server in about 12 lines of code, and an app server in about 20 lines (not counting the app part). By the end of the week, he had it supporting HTTPS also. 2 more lines of code in my servers and HTTPS worked for me too.

Same company, different dev... we needed to support SMS messages, and we needed a way to test them that let us control the entire path. So the guy who was building the SMS handler build an all-software SMSC (back when they were all physical appliances). In about 2 weeks, while he was still hitting his dev milestones.",1514087919.0
Misaiato,I worked with Samy Kamkar (MySpace Worm) at Fonality for about four years. He‚Äôs beyond anything I‚Äôve met before or since. He‚Äôs well-known now with his YouTube and lectures at conferences. His skill with PERL is unbelievable. Samy isn‚Äôt 10x better than me - he is 1000x better than me and anyone else I know. True genius. ,1514136569.0
codeprimate,"Many of the ‚Äúbest‚Äù engineers I‚Äôve known had a talent for rapidly cranking out ingenious code that ended up being unmaintainable. The real 10x engineers embodied discipline and careful craft, inspiring the rest of the team to do their best. Two hands can only carry so much.",1514090850.0
DudeManFoo,"I have never met a 10x coder, but when I was a kid, I worked as a railroad contractor (all the live long day)...

We had a job that required a LOT of gravel... we had a small dump truck that was rail mounted. We would get a truck to dump a load of rock and we would 'reload' it onto the small truck... handling it twice... then it took 30 min to back the truck up and dump it and come back for another load... it would have taken 6-9 months at that rate to fill the tracks with rock.

My uncle showed up and called the hauling company and said bring us a truck every 3 min for the next 12 hours... he started by building a road to where the rock was ultimately going and we were done in half a day instead of 6 months...

I had to sign for each truck. When the day started, my signature was as pretty as a 15 yo high school girls... at the end of the day it was barely a squiggle... and it has been that way for the past 30 years...

I have been amazed and inspired by that ever since. I have used it in finance, coms, security, everywhere.

Sadly, my uncle has severe dementia now, but he was one of the greatest minds I have ever met.

EDIT :: To clarify, I have probably 'met' a 10x coder and not known it... I have seen them on Github, but I read 'met' in the literal sense.",1514087428.0
reconbot,"I've worked on very good teams and we've done some massive projects together. There are people I've worked with who are much more prolific than anyone else (in terms of what they touch, what they understand about the systems and what make design decisions about) but they are limited by the fact that they can't possibly do more than the whole team. 

In my experience a ""10x"" coder slow the whole team down but does a ton themselves. Only kinda useful in early stage startups when you need to ship or the company dies. 

Good coders make the whole team faster. If you can boost your coworkers 2x and there are 10 of you then you are better than any one 10x coder. And by the nature of a having a team build the product it wont be an unmaintainable mess that only one person understands.

I've worked with great engineers, they could deliver very fast when needed but spent most of their time teaching others and unblocking work.

Specifically; I worked with the youngest unix grey beard I've ever seen. (Late 30s at the time?) He was a ""systems engineer"" not a ""Developer"" but he knew more about how computers worked than most. He transitioned our development team from CVS to GIT (most of the industry was on Subversion at the time, github was brand new), lead a functional programming class that taught us principals of FP in the language everyone knew (perl was the lingua franca of our company), changed our deploy practices so it was faster, more reliable and more understandable and countless other things. He might have been more valuable than anyone else but not because of his output.

You might have guessed, but I think the quote is bullshit.",1514152676.0
tech_tuna,"I've known a few 10x engineers in my day (I'm an old shit).  Let's see, here's a rundown:

* Head architect at my first web company - the guy dropped out of Harvard before finishing his undergrad degree.  Really cool guy, a total genius but humble and approachable. Allegedly he could count and do arithmetic in hex in his head.   

* CTO/cofounder at a data analysis company where I worked.  This guy would literally walk out the door on a Friday and come back on Monday morning with a fully prototyped product.  And by prototype, I mean an MVP missing some documentation and a few unit tests.  He was an old school MIT/LISP wizard yet embraced, assessed and absorbed new tools faster than any 23 year old at a startup incubator.  I ran across his profile on StackOverflow not too long ago, he had something like 50k in rep points.  Also, cool guy.

* Another senior developer I worked with years ago, his name was Brian.  This guy kicked so much ass that the team coined the term ""Brian-ized"" for any chunk of code he touched, because he would jump in and rewrite (quite well) huge chunks of code at the drop of a hat.  People would literally say ""Oh what about the xyz library?""  And someone would answer, ""Oh yeah, it's good, totally Brian-ized now.""  He was perhaps the friendliest and most supportive 10x engineer I've ever known.  

I've worked with a few other super-gurus over the years but the above three were the rare ones who were also personable.  I lived and worked in Boston and Cambridge for over a decade and collaborated with a lot of Harvard and MIT folks.  FWIW, not all of them were geniuses.  :)

",1514147098.0
vtrac,"There's a guy in Austin who is widely considered one of the best engineers in town. I had the pleasure of working with him for 3-4 years, and even though he was always uber-nice, humble, and ever so helpful, I was always intimidated talking to him because I knew he was 10x as productive as me. The company went from being a startup to IPO, and at some point during the way we had a proper org chart. I remember seeing Shawn basically reporting directly to the CTO without any direct reports himself. He basically got to pick and choose whatever he worked on, and just about everyone a little bit of his time to come improve their code.  Shawn's fame is so great that at another large successful company in Austin, some (probably not a 10x) engineer introduced himself to others as ""I'm the Shawn XXX of this company"" (company names withheld to protect the innocent).",1514172331.0
egonelbre,"Based on reading on mastery, I would probably reduce it to these things:

1. Deliberate Thoughtful Practice
2. Experimenting
3. Studying
4. Learning from Masters
5. Experience
6. Balanced life

---

These principles are not exclusive to programming, all creative endeavours involve them.

1. Deliberate Thoughtful Practice -- it's important to realise that it's not sufficient to ""write a lot of code"". You have to think and constantly weigh trade-offs. If it feels like routine, it is not proper practice. If you don't feel tired afterwards, it's not proper practice.

2. Experimenting / Curiosity -- you need to try new/old things and repeat mistakes and so on. You can gain a lot of insight from walking in a new direction. It forces to be creative.

3. Studying -- you should read proper articles and books instead of relying on some blog-post that someone threw together in 30minutes. Articles / Books usually have several magnitudes of more effort put into them than blogs. It also means you should also learn different ways of learning and extracting information.

4. Learning from Masters -- can you imagine a master writer who hasn't a read a single book? Well, neither can I. Always study and analyse those who are better than you; how they work and approach problems. If at all possible, discuss with them, let them tear apart your thinking, processes or code.

5. Experience -- there's no substitute for real-world experience and concerns. When you are stuck in the nerd world and don't notice how you affect everyone else you will end up slowing everyone else down.

6. Balanced Life -- it might seem weird, but you shouldn't spend all your time on one thing. Many ideas are inspired from other things. Learn psychology, painting, music or whatever. Also, when your life is out-of-balance, your memory works worse, you have less energy, you are less creative and so on.

These principles should not be restricted to code... but rather should involve everything you do... (talking, writing, communicating, learning)",1514204935.0
BraveNewCurrency,"The ""10x programmer"" idea comes from a paper that tested a of a class full of students. In the real world, the difference is much greater. It's not 10x or 100x -- It's literally infinite if you measure from 'best' to 'worst'.

I've met plenty of people who have obviously contributed negatively to their employer because they were incompetent at their jobs. I've even had a co-worker like that once. Management was slow to fire that person, so my team spent months cleaning up all the messes this person made.

I've also known employers who think that the 10x thing is a myth. They see every worker as a cog, so they treat them that way. Nobody good will work for them (since good people have choices and know they can get a job anywhere). So the only employees that stay are minimally competent. So the employer creates a self-fulling prophesy, where all workers are the same. (It's called the Dead Sea Effect.)

The sign of a really good programmer is that they don't think at the keyboard -- they use pen and paper.",1514184611.0
calligraphic-io,"**Linus wrote Git in two weeks.**

That's what he said in an interview, and gives the impression that he must be an incredible genius to achieve that. But I think there must be more to the story; at the very least, he probably had all of the data structures mapped out long before he started coding.",1514140159.0
equivalent8,Does the guy in the mirror count ? :D,1514115091.0
tk425,That would be my boss. It's crazy if you've ever met one,1514132148.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/golang] [The best engineer you ever encountered?](https://www.reddit.com/r/golang/comments/7lwjh9/the_best_engineer_you_ever_encountered/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1514139197.0
,[deleted],1514153609.0
mighty_warrior,"I run a small team of what could be called 10x engineers. The main quality that allows us to stand out compared to other engineers is our ability to focus on an objective and ignore the irrelevant facts. 

I find a lot of engineers get trapped in scope creep. They try and understand the full system when they only need to learn the component. They try and fix every little problem instead of just the immediate issue at hand. 

Quality takes time and iteration. Nothing is perfect first pass. Rome was not built in a day. Once you learn that you start to move a lot quicker. You are going to leave shit code around sometimes. Hopefully you have a support structure that allows you to fix it as you move forward. ",1514150970.0
,10x people do not exist and I hate to see this crap spread here. I have met people producing value far beyond anyone else on a team and they all have burnt out or had a breakdown. The really good engineers are just good engineers who also know how to work in a group setting or lead that is pretty much it we don‚Äôt need to fantasize this 10x crap.,1514154344.0
Rogem002,"Have a look at [24 Pull Requests](https://24pullrequests.com/) - It's a bit seasonal, but searching for the tag should find projects (A good deal of them Ruby based) which need help :)",1514067548.0
midasgoldentouch,"Existing projects, or project ideas?",1514063679.0
zverok_kha,I published this post a while ago (but not promoted it on Reddit for some reasons): http://zverok.github.io/blog/2017-11-27-call-for-apprentice.html -- it lists some projects and ideas I'd like to mentor. All of them non-Rails.,1514108466.0
juanhermano,Hi! Interested in learning more. What is the project about?,1513984880.0
twiggyweasel,I‚Äôd be interested depending on the project ,1513987462.0
hehestreamskarma,"I wouldn't call it an alternative to Rails. It simply allows you to mount a DSL for creating API endpoints when you're using Rack. It can be used in conjunction with Rails, even (which I do for my namesake's project)

It's great. It has very little surprises and a low learning curve. It allows you to create very DRY components as well. ",1513963548.0
janko-m,"> especially its ability to exist within an existing Rails app to get the best of both worlds

Strictly speaking most Ruby web apps can be mounted inside a Rails app, because all major Ruby web frameworks are built on Rack, so any apps built with those frameworks are actually just Rack apps. Rails apps themselves are also Rack apps, though Rails is too invasive to mount inside another web framework.

> Grape-entity is my favorite library for generating JSON responses.

I'm actually rather interested in serializer libraries that can be used with *any* web framework or ORM; it doesn't seem that grape-entity is generic. I was very impressed with [Yaks](https://github.com/plexus/yaks), but it seems that [Roar](https://github.com/trailblazer/roar) and [jsonapi-rb](http://jsonapi-rb.org) are also great solutions.

> To those familiar with the Ruby web framework ecosystem, can you offer your thoughts on Grape, experience with it, and what makes it better or worse suited for your needs than other frameworks?

After using Cuba and Roda for a while now, I realized I find DSLs in general very limiting. In Cuba and Roda routing and handling the request are not separated, and it's all happening on instance-level, so you can use regular Ruby code, .e.g:

    class App < Roda
      # this block is call for each incoming request
      route do |r|
        r.on ""documentation"" do
          r.get ""authentication"" do
            # ...
          end
        end

        authenticate! # all routes below will be authenticated

        r.on ""posts"" do
          # ...
        end
      end
    end

I really like that flexibility, and I didn't yet find any limitation in that approach. But I have never used Grape professionally, I was just trying it out in a pet project when I was finding which web framework I want to use (as I didn't want to use Rails anymore).",1513968309.0
coreystout,I think it is the best book for explaining advanced features in ruby and I have read 10+ ruby books. Almost all it teaches works the same in ruby 2.4. I highly recommend reading it.,1513962101.0
SagaciousCrumb,"I haven't read it, bit the differences between 2.0 and 2.4 are small enough that 97% of what you'll learn there won't be impacted. ",1513959951.0
stikitodaman,I love eloquent ruby. It is my favorite ruby book and I make sure to reread it once a year,1513977403.0
AlonsoQ,"I would strongly recommend investing time in Ruby, even if you never plan to use it outside Rails. Understanding procs, in particular, will peel back the curtain on a great deal of Rails magic.

Once you finish Eloquent Ruby, check out Sandy Metz's ""Practical Object Oriented Design in Ruby.""",1513977728.0
asdascac23rvbz,"If you're looking for a book on up to date ruby, I'd recommend looking at the Well grounded rubyist which has a new version in early access https://www.manning.com/books/the-well-grounded-rubyist-third-edition .

I've read one of the previous ones and liked it.

As a tip if you want to get a manning book, follow them on twitter and wait for a discount code, they tend to come along fairly reguarly.",1513961505.0
ichbineinProgrammer,"It‚Äôs a great book, Ruby doesn‚Äôt change too much. I‚Äôd say until we hit 3.x that book is still useable ",1513999378.0
yaroslavm,"I would vote for Ruby Under a Microscope, a fantastic book and one of three must-reads we recommend for our applicants (others are POODR and a Postgres book)",1514046047.0
delus1on,"Definitely. The code is almost 100% still relevant and the principles are still spot on. 

It‚Äôs one of the best Ruby books you‚Äôll read. Also try ‚ÄúPractical Object Oriented Design with Ruby‚Äù by Sandi Metz. That one is my absolute favourite. ",1514031566.0
hehestreamskarma,"The changelog is pretty good. There's not much that has changed, though, really.",1513975180.0
jchapin,Agreed. This is one of the first things that I flip when setting up a new application. There was another developer I was working with that questioned the religious nature of using localizations for everything possible... until we had a client that vacillated on what terminology to use for a concept 3 or 4 times. Then the developer started to buy into why people should use localizations even if they aren't supporting multiple languages and to flip this setting on every new project.,1513895942.0
pwim,"In my experience, using Rails' simple I18n backend for anything more than localizing a gem is a mistake. If you want to ship your app in multiple languages, I'd recommend using something like [gettext_i18n_rails](https://github.com/grosser/gettext_i18n_rails). With gettext, it is immediately obvious what hasn't been translated, avoids the need to come up with arbitrary keys, and allows you to plug into other tools which help make translating easier.",1513903826.0
Chaoist,"I had this exact problem recently. 

Before running `bundle exec rake install`, you need to put your executable 'smokestack' under an `exe` directory instead of `bin`.

Or change your `spec.bindir` and `spec.executables` values in the gemspec file to point to `bin`.

This should fix your 'command not found' issue.",1513892523.0
janko-m,It seems that Cuba uses `Rack::Request#[]` in [`Cuba#param`](https://github.com/soveran/cuba/blob/f66109654ff1c16ee46060330738a902c7a1a7fc/lib/cuba.rb#L264).,1513896688.0
chrisgseaton,"> they are useful for someone with no CS background and who needs something recognisable on their CV

Possibly they aren't, because in some people's opinions any kind of certificates are a red flag. I'm not saying I think that, just saying that a lot of people do! Certificates are very corporate, and Ruby is not a very corporate community.

This is a Japanese website and certificates are more popular in Japan.

If you want to support them and have some resources to do so, what about funding to them to go to some conferences, get a guest speaker in like https://www.sandimetz.com/courses/, give them work time to build a protfolio. These things are more appropriate for the Ruby community.",1513863244.0
tensorflow_rb,"Hi Rubyists,      
I am Arafat, the lead developer of Tensorflow.rb and I have been an active member of this subreddit for quite a long time (I have even talked about this subreddit in my talk).           
I recently gave my first talk at Euruko 2017 on Tensorflow.rb.     
I admit I was a very nervous but I did what I could.     
I am looking for a review or just a general set of recommendations on my talk from all of you.    

Thanks a lot.
",1513843144.0
jrochkind,"If the other external systems use ""web hooks"" -- POST requests -- to trigger events, then it's basically just a web app, right?  You could just write a ruby API web app however you like -- sinatra, rails-api, one of the newer fresher ones, whatever.  

In Rails, I'd probably have a controller for each service, with an action for each web hook you expect to receive. What the action method actually returns as an HTTP response probably doesn't matter (unless the service making the POST request expects an answer, of course).  The action method would just trigger whatever behavior you want triggered on the other end -- using the API client for the thing you want to send to, or a local 'service'/wrapper/model object, or some combination, whatever makes sense for the code and behavior. 

There are certainly other fancier ways to do this, but this seems like the most straightforward to me, to get started. ",1513864678.0
mencio,Organize it with events and take Kafka as a backbone (https://github.com/karafka/karafka). That way  you could have independent microservices that would just react.,1513849112.0
paneq,"Salesforce allows you to configure webhooks which you can receive when the data is changed inside it. We defined our SOAP endpoints using https://github.com/inossidabile/wash_out that are triggered from the salesforce. For sending data to salesforce we've been using restforce gem.

> How would you go about organizing the logic and API Clients in the application

Write adapters around the incoming and outgoing data. Test the logic using fake adapters or record the networking interactions with those services::

* https://blog.arkency.com/2014/08/ruby-rails-adapters/
* https://blog.arkency.com/2015/12/in-memory-fake-adapters/
* https://blog.arkency.com/2016/11/rails-and-adapter-objects-different-implementations-in-production-and-tests/
* https://blog.arkency.com/2016/07/testing-soap-api-adapters/

> I've been looking into using a service object approach, but some of the API clients are already singletons.

What does it have to do with singletons?

I agree with the comment that using domain events and event handlers might be helpful approach, although I don't understand fully what your project tries to accomplish so hard to say.",1513873749.0
GroceryBagHead,That's neat. But how would you deal with 3rd-party assets like ActiveStorage stuff for example: https://github.com/rails/rails/tree/master/activestorage#direct-uploads,1513789355.0
honeyryderchuck,"I'm betting that rails with become ""sprocketless"" eventually, and your article is great research on how to have tomorrow today. Good stuff!",1513838465.0
greymalik,"I was excited by the first article in this series, but am surprised/baffled by where it ended up. Ditching Sprockets and separating the frontend from the backend both seem ""modern"", but I'd also expect the frontend of a modern app to be built in React/Vue/Angular, not ERB and jQuery.",1513862302.0
zverok_kha,"It looks like http://rubyconferences.org/ is the most maintained list of Ruby conferences currently. As both projects are opensource/opendata, why not join efforts? I mean, Awesome Events supports more event types, while RubyConferences are more supported by contributors. Therefore, maybe Awesome Events can import conferences list from RubyConferences?",1513795835.0
jrochkind,"If you give me a reasonable RSS feed, I might add it to rubyland.news. ",1513873224.0
jrochkind,"Hey, if you want to use a 'ruby' tag/category consistently to separate out ruby-related stuff, I'll add the feed for it to http://rubyland.news. ",1513781672.0
,[deleted],1513777218.0
FlockOnFire,"Wrong kind of rubies, dear spammer.",1513755041.0
pinkyabuse,All the minor improvements mean that Ruby 2.5 is shaping up to be a desirable upgrade. ,1513759948.0
Kalinon,Good job! Thanks for the hard work!,1513774978.0
Morozzzko,"Oh wow! Thank you!

It's awesome to see dry-web-roda getting the attention. Hopefully, this will get more people to use dry-rb gems",1513778047.0
Ugrum,Very cool. The dry-rb project is full of awesome stuff,1513892203.0
myringotomy,Swagger?,1513909043.0
sshaw_,"> I extend the Hash class. Sorry, it's fun.

Heh. Fun for developer. Not always fun for consumer. 

> { asd: ""asd"" }.complies_with? { asd: Integer }
> raises with the message ""data value for key 'asd' was of type String, should be of type Integer""

Methods that end in `?` should return `true`/`false` in cases like this. ",1513728111.0
jcouball,"Welcome to Ruby!

My first advice would be to run Rubocop on your code base prior to each commit and fix all offenses.

Rubocop is very opinionated so you might start out thinking that you will customize or disable some cops.  I'd advise against that for a while at first.  Treat fixing offenses as a challenge.

Running on your code base, I see 29 offenses.  The hard ones to fix meaningfully are going to be:
* Method has too many lines
* Assignment Branch Condition size is too high

Good luck!",1513734771.0
twinklehood,"Welcome! While I agree with the other post mentioning that you should not raise in the false-case of a predicate method, I think you could benefit from learning how to create your own exception classes.

The problem with how your code currently just raises StandardError with a string is that it's tricky to rescue. Let's say you have another compliance method that is succeeds or raises, `#must_comply_to!`:

    begin
      { herp: ""derp"" }.must_comply_to! { herp: Array }
    rescue
      # We can't make good assumptions because we don't know what went wrong
      # It could be a method-missing error for all we know.
    end


But if your class had a dedicated error class `SchemaMismatch < StandardError` we could

    begin
      { herp: ""derp"" }.must_comply_to! { herp: Array }
    rescue SchemaMismatch => e
      console.log ""Sorry, but you passed in a nonsensical hash!""
    end",1513757889.0
erandros,"shoutouts to /u/ignurant for introducing me to ruby
",1513720285.0
4rch3r,I would be careful copying code online 100% (looks like you grabbed dot_it https://github.com/gtarsia/schemval.rb/blob/master/lib/schemval.rb#L17-L29 directly from StackOverflow here: https://stackoverflow.com/questions/17451487/classic-hash-to-dot-notation-hash) but welcome!,1513736551.0
lunks,Does anyone know if this can be a self-hosted solution or is it only available via SaaS?,1513733238.0
stanislavb,"Seems like this is solving a real problem. Although, I'm not sure how many customers could benefit from it and would use it.",1513740296.0
prh8,"This article basically equates number of questions on stack overflow with popularity. At best, well, it's not the worst measure someone has used to proclaim Ruby (/Rails) is dying. But there are still tons of issues with it.

Let's consider other possible causes for declining stack overflow question frequency (article compares to Python and Javascript):

1. Rails has had a stable API, so a larger percent of potential questions have been answered. During the same timeframe, Python struggled through transitioning between 2 and 3, and the entire javascript world has been turned on its head. 

2. Developers who use Ruby/Rails haven't had their knowledge become obsolete. This is a twist on #1, but probably more applicable to devs experienced with these techs instead of ones newer to them (i.e. #1).

3. Ruby/Rails is possibly easier to pick up than Python and/or Javascript. Well again, the JS world has become dramatically more complex (just learn jQuery vs node/webpack/angular/react/etc). As for Python, maybe the lack of existing v3 code caused people to have a more difficult time learning it. Who knows.

In short, 1) more existing knowledge (which would mask new interest), 2) less obsoleted knowledge (which masks existing usage), and 3) possibly easier to learn (masking both new and experienced devs).

Yes, the Ruby world needs some improvements. But the majority of the article just sounds like others regurgitating the same proclamation without good reasoning.",1513746691.0
tk425,"Basically...as rails gets less popular, the people who only adopted Ruby because of rails are no longer using it.  
  
Ruby is such a nice language to develop in. All of us rubyists are going to happily produce lots of cool stuff with it, whether it's popular or not",1513701244.0
isolatrum,"so, what ruby really needs is... what? All you say is that it needs to be more popular, basically. ",1513811883.0
aarkerio,What ruby really needs is the DOM bindings in Webassembly. ,1513737680.0
systemnate,"I would not personally recommend using Cucumber.  It's annoying to find step definitions that already exist and you tend to get many duplicates over time.  Switching between the feature and step definitions is annoying as well, even with plugins.

I would instead train the product owner on writing good user stories.  You said they are fairly technical, so it should not be very difficult.  We use a Kanban board at work and when we do planning on a new project, we usually write the cards while we are hashing out the features for a new project (and as they pop up during stand-ups).  You could also do the same on Trello or whatever.



Edit: These user stories I would then write as very readable RSpec feature specs.",1513694729.0
JustinCampbell,"The best usage of Cucumber-style specs I've come across have been on open-source CLIs, such as GitHub's hub: https://github.com/github/hub/blob/master/features/

I've never seen Cucumber on a web project not become a slow and tangled mess.",1513699254.0
menge101,"Cucumber tests are fantastic if done right.  Their value really shines 6+ months after you write them, when you've moved into a different functional area.

I was a technical QA lead on a large project with 1000s of cucumber tests.  It was absolutely amazing how well it worked for us.  We had the project manager writing user stories,  which we would rewrite into cucumber features, and then enhance with additional edge and negative case tests.

It was very easy to take the cucumber features, show them to the product owner and get sign off that that represented how the system should behave.

But this requires a fundamental thing: your features and steps do what they say they are doing.  Cucumber lets you map a sentence to a unit of code, but nothing enforces that the code does what the sentence says it does.  You have to be extremely strict in enforcing that through peer review.

----------------------------------

This isn't what you are asking but:  

> The automated tests

This is a very vague term.  Unit tests, feature tests, integration tests, load tests?

> are up to interpretation of the developer

This is fine for unit tests.  This can be ok, for a senior developer that knows the full feature, for feature tests; this probably bad for anything else, IMO.

A second developer with a fresh point of view implementing tests at the feature and higher level is preferred.

If there are two developers, I'd have each one write the features and implement the steps, based on the project owners draft versions, for the others code.

IMO/IME YMMV etc.",1513700598.0
m-apo,"You might want to read this: https://news.ycombinator.com/item?id=7543994

Aslak Helles√∏y (creator of Cucumber):
> Cucumber is not a testing tool [1], it is a collaboration and analysis tool.
> Use it to document (in very broad strokes) the features of your system.
> It was never meant to be used as an exhaustive regression testing tool, or to replace unit testing.

James Shore (partipated in Fit, predecessor of Cucumber):
> I find it interesting, if not surprising, that the Cucumber community is discovering exactly the same issues that we did with Fit: namely, that it encourages brittle integration tests, and that people don't use it for its intended purpose of collobaration.

> I've come to believe that these problems are unsolvable.

> I worked on and promoted Fit for several years. Eventually, after some deep soul searching, I concluded that Fit (and by extension, Cucumber) is solving the wrong problem. The value of Fit (and Cucumber) comes from discussions with domain experts. The tools encourage a certain amount of rigor, which is good, but you can get that rigor just as easily by discussing concrete examples at a whiteboard.

> The actual automation of those examples, which is where Fit and Cucumber focus your attention, has minimal value. In some cases, the tools have negative value. Their tests are fundamentally more complex and less refactorable than ordinary xUnit tests. If you want to automate the examples, you're better off doing it in a programmer tool.

> Some people got a lot of value out of Fit, and I'm sure the same is true for Cucumber. They got that value by using it for collaboration and focusing on domain rules rather than end-to-end scenarios. My experience, though, was that the vast majority used it poorly. When a tool is used so badly, so widely, you have to start questioning whether the problem is in the tool itself.",1513715955.0
joelparkerhenderson,"Cucumber is a major help for long term projects because it's runnable documentation, and can be written at a very high level. 

Good cucumber scenarios read like user stories, and are written using business language and domain driven design language.",1513703146.0
tomkadwill,"I implemented cucumber on a previous project and this did significantly slow down our test suite (the tests were driven by Capybara).

I believe cucumber could work well if just used for core user journeys (eg. login, checkout etc). However, I‚Äôve yet to work on a project that got the balance right.",1513712680.0
jrochkind,don't do it. ,1513719918.0
jcouball,"I believe you are on the right track in thinking that Cucumber would be the right tool to use when a development team, product owner, and customer are all involved.

Aslak Helles√∏y did say ""Cucumber is not a testing tool, it is a collaboration and analysis tool.""  I would say that the purpose of Cucumber is to drive consensus between developers and customers.  The Gherkin steps form the ""contract"" and the step implementation verify that the contract is being followed.

My approach is to use rspec for unit testing and use Cucumber to drive consensus between developers and customers.  I try to keep the two separate as the serve two very different purposes.",1513736208.0
jcouball,"I'd recommend The Cucumber Book for your semi-technical product owner.  He should focus on the chapters that give advice on writing effective Gherkin and skim over the technical details. I find the ""Ubiquitous Language"" concept is one of the most important concepts for the product owner.

Next, The RSpec Book is a great book about outside-in, behavior driven development works.  It describes how to transition from user stores to Gherkin and where unit testing fits in.  Don't be fooled by the title.  As Uncle Bob says in the forward: ""You‚Äôve picked up this book thinking it was about RSpec.""  It is really about behavior-driven development.",1513737502.0
Jdonavan,"Here's the core question you need to ask:  ""Are my tests considered documentation?"".  If they are, use Cucumber.  If not, don't.

The tricky bit is they almost always say they want the tests to act as documentation but in reality they don't.",1513698533.0
Schrockwell,"IMO, most uses of OpenStruct are an anti-pattern. Just define a normal wrapper class and attributes and expose the wrapped data as an attribute.

> The class will encapsulate the attributes we know exist as well as add some state around those attributes is to introduce a class.

This just sounds like inheritance to me.

Also, that site pegged ALL my CPU cores. There's some funky JS going on there.",1513706219.0
,[deleted],1513694447.0
ckreon,"Great write-up! I really enjoyed it and appreciated the language comparisons/examples.

I‚Äôm a huge Ruby fan, so it‚Äôs fun to see things like this.",1513723541.0
thebmo,"Hey so I don't want to be that guy, but I just want to point out that in your invoice example, the model would most likely be created for a specific user you want to invoice (assuming you don't have a singleton implementation) so your class should always have an initialize method that would take your user object. exposing the user attribute set is bad practice. Here's a cleaned up example of how this should look in a production environment. 

    class Invoice < ActiveRecord::Base
      def initialize(user)
        @user = user
      end
    
      def process_data
        extract_address!
        # ..
      end
    
      def can_delete?
        user.is_admin?
      end
    
      private
    
      def extract_address!
        self.invoice_address = ""#{@user.country}, #{@user.city}""
        self.save
      end
    end
    
    invoice = Invoice.new(moderator_without_delete_permission)
    invoice.can_delete?
    # => false

I think it goes without saying that by exposing the user attribute on your instance, you are opening up your code to all sorts of potential bugs. Personally I agree with your feels regarding functional patterns but thought the OOP version should at least reflect best practices. Nice write up btw!

**e:** formatting

**e2:** also a super fun thing you can do with all ruby instances:

    class Invoice
      def initialize(user)
        @user = user
      end
      
      def foo
        puts @user
      end
    end
    
    invoice = Invoice.new(""steve"")
    invoice.foo
    # => steve
    invoice.instance_variable_set(:@user, ""WOOPS"")
    invoice.foo
    # => WOOPS

https://repl.it/repls/FaroffTenderXerus",1513732290.0
equivalent8,"I've created the article in 2014 but done large update today on 50% of the content so resubmitting it, it may be useful  for someone ;) ",1513684864.0
stowersjoshua,[My](https://github.com/ruby/ruby/blame/trunk/doc/contributors.rdoc#L606) very first contribution to Ruby Core!,1513699255.0
sshaw_,"`unshift` comes from [Ruby's Perl influence][1]. Also see [this quote from Matz](https://allauthor.com/quotes/77332/).

It's minor but IMHO needless core method aliases are one of Ruby's downsides.


[1]:https://en.wikipedia.org/wiki/Ruby_(programming_language)#Early_concept
",1513822169.0
herminator,"This is a rather complicated issue, which is caused by the fact that the expression can have a zero length match. See https://www.regular-expressions.info/zerolength.html

Ruby uses the Perl style handling of zero length matches (as does e.g. Javascript), while other languages (e.g. Python) use another solution.

Those two solutions are described in the section titled ""Advancing After a Zero-Length Regex Match"", specifically in the paragraphs starting with ""The simplest solution..."" and ""The other solution...""

",1513674056.0
madsohm,"That's a good question. Firing up `irb` we get this:

    irb(main):001:0> ""foo"".match(/(.*$)/).to_a == ""foo"".match(/(^.*)/).to_a
    => true
    irb(main):002:0> ""foo"".match(/(.*$)/).to_a
    => [""foo"", ""foo""]
    irb(main):003:0> ""foo"".match(/(^.*)/).to_a
    => [""foo"", ""foo""]

So they do indeed both math the entire `""foo""` string.",1513663958.0
riddley,Honest question: why do people use Nokogiri when Oga is around? Nokogiri's requirements take forever to build on my systems and I don't find the interface any better. What am I missing?,1513702075.0
hehestreamskarma,Can you provide a sample of the URL or the file?,1513657361.0
jrochkind,You need to provide more information to give anyone any chance of having any idea. What is the input? What is the xpath? What did you expect to get back instead of an empty array?,1513657616.0
ignurant,"As the others suggest, a sample would help greatly. But generally speaking, web data changes over time, and having too rigid of an expression will cause issues. 

Getting an empty array back leads me to believe you simply aren't matching what you think you are. 

Try to account for the most abstract way to describe the node while still being accurate. A great place to start would be to go into a pry session, load and parse the URL, and then try some expressions out. Specifically try some that have no way of failing. Like `page.xpath('//li')` and start working backwards. What you will likely find is that you get your targeted element back, and now you need to sharpen how you target it. It's also possible that you are coming across pages or variations you don't expect. Try adding a guard clause that checks for that empty array- when you come across it, dump the page to a file `File.write('bad.html', page.to_s)` (I think). Perhaps you are being blocked.",1513665007.0
ignurant,Can you run a linter on that title please?,1513627831.0
Paradox,Neat to see a ruby reimplementation of Figlet. Like the spacing options and API,1513624180.0
geraldbauer,Love your tty gem family / toolkit. Wondering if you're interested in posting an article to the [Ruby Advent Calendar 2017](https://planetruby.github.io/advent2017/)?  Let me know - love guest posts and the tty toolkit / gem family. Keep it up. Cheers.,1513617604.0
alejandrobabio,"Try [exercism.io](http://exercism.io), you will receive and can give feedback to others. For a more real-world experience try [agileventures](https://www.agileventures.org) and you will work on charity projects with others developers of the world.",1513595073.0
frederikspang,I'm quite for fond of codingame.com :),1513565561.0
Chaoist,You could take a look at AdventofCode 2017. If you need help with the puzzles there is r/adventofcode.,1513566839.0
fickentastic,Been a few months since I've been on Codewars but at the time you could most certainly see solutions.  The only caveat is forfeiting credit you might receive for solving the problem.  ,1513604433.0
4rch3r,https://projecteuler.net/ has always been my favorite :),1513626018.0
obviousoctopus,"My favorite is https://github.com/JoshCheek/ruby-kickstart

Starts very simple and moves onto computer science problems in ruby, all with tests and solutions. 

Fun, satisfying and addictive. ",1513665938.0
mre__,"Hey there, author here.
Steve Klabnik did a [talk on the same topic](https://www.youtube.com/watch?v=OM4dynVjxUw), but I thought it might be helpful to have an updated version with a side-by-side comparison of the syntax of Ruby and Rust. The list of examples is not exhaustive, but it should give newbies a good overview of a few Rust core concepts.",1513528188.0
herminator,"The section on select and filter is wrong an non-idiomatic on the ruby side. The first ruby example:

    even_numbers = [1, 2, 3, 4, 5].map { |element| element if element.even? } # [ni, 2, nil, 4, nil]
    even_numbers = even_numbers.compact # [2, 4]

is really non-idiomatic. This is where you would use `.select` in ruby:

    even_numbers = [1, 2, 3, 4, 5].select { |element| element.even? } # [2, 4]

It then goes on to say that ruby's select is equivalent to rust's filter_map, but that's not right. Ruby's select does not allow you to modify the elements being iterated over, while the filter_map example does just that.

To both modify and select elements from an iterator in ruby, you would need to combine map and select.

In fact, you first example of using map in combination with compact is an example of just that, as compact is just shorthand for `.select { |x| !x.nil? }`, or as would idiomatic ruby: `.reject(&:nil?)` (reject being the opposite of select). So the map & compact combination of the first example is close to filter_map

Your rust example of finding numeric string and converting them while filtering

    let maybe_numbers = vec![""1"", ""2"", ""nah"", ""nope"", ""3""];
    let numbers: Vec<_> = maybe_numbers
        .into_iter()
        .filter_map(|i| i.parse::<u64>().ok())
        .collect();

would in ruby look something like:

    maybe_numbers = [""1"", ""2"", ""nah"", ""nope"", ""3""]
    parsed_numbers = maybe_numbers.map{ |x| Integer(x) rescue nil } # [1, 2, nil, nil, 3]
    final_numbers = parsed_numbers.compact # [1, 2, 3]

",1513588479.0
rooood,"Nowhere in the article is stated that this gem is made specifically for Rails, but all the configuration is for RoR. Can it be used with Sinatra, for example, or another Ruby web framework?

If it's intended to be used only in Rails, isn't this gem going to be somewhat redundant in the near future, when Rails 5.2 is released with ActiveStorage? ",1513529912.0
jrochkind,"There are a couple existing ""progress bar"" gems which will also give you ETA. 

https://github.com/jfelchner/ruby-progressbar

https://github.com/piotrmurach/tty-progressbar",1513478460.0
hehestreamskarma,"Any reason why you didn't use a block? Just curious :) 

    ConsoleProgress::ETA.start(100) do |eta|
      puts eta.progress
      sleep(2)
    end
",1513470347.0
jawdirk,"I'm a senior-level ruby software engineer.

Writing tests has many benefits, but many of them are related to working with a team where everyone is working on the same code base. So if you don't understand the value of tests that might be part of the reason.

I would start with rspec because, in my opinion, it has the best benefit/work ratio.

There are more philosophies on testing than you can shake a stick at. That said, here are some of the chief benefits that I expect to get from testing:

1. Less chance of random minor bugs, because sometimes you will catch things in testing you might not notice immediately in production.
2. Peace of mind. If you write a test that can only pass if your code satisfies a specific need of your customers/clients then you know you are satisfying your customers/clients in that way.
3. Better interfaces in your code: writing a test is similar to being a client using the API which is your code. If you find it difficult to write a test for your code, maybe you can improve your code by making it easier to write the tests. That will especially help other people who are trying to reuse your code.
4. Tests are the best form of documentation for how your code works. Again, this is helpful if other people need to understand your code and they don't always have immediate access to you.
5. A baseline for knowing you haven't broken existing code with an aggressive change or refactor. Most importantly, if everyone on a team is writing enough tests to have good coverage of the code, you can be reasonably sure you aren't breaking code you know nothing about when you make a change with broad impact.

So, the short answer to how to write tests is, write tests that have the benefits that matter to you. I would recommend the following practices to achieve the above:

1. Ensure your tests cover every code path that a) is important to your customers and b) could have a bug in it. If it doesn't satisfy both of those requirements, writing a test will probably not benefit you (at best it will be harmless, at worst, it will cost you lots of time to run it and maintain it). Don't test every little thing unless it is going to cost you money if you don't. That said, be 100% sure that you aren't tricking yourself by writing a test that doesn't actually reach the code you are trying to cover.
2. Try to avoid writing tests that test how your code works. You may need to change that later and you don't want your tests to break because of that. Instead write tests that ensure you are satisfying something your customers want/need. If your code is organized well, you should be able to test something real, even at the lowest levels in your code. If you can't connect the code you wrote to something real, that's a code smell. Try to refactor so you don't need that code. Don't make your tests too specific. Does it matter that your code raises an exception with a message ""The friend_id is invalid,"" or is it enough that it raises a validation exception? Maybe later you'll decide you don't need friend_id at all.
4. Make sure your tests are deterministic. If a test randomly fails, it's usually better to delete it if you don't know how to fix it. If your tests aren't 100% green when nothing is broken, they are going to be more trouble than they are worth.
5. Avoid stubbing when possible. If you are forced to stub in your tests, that is a code smell unless you are testing something that is a true external dependency (like an external API, or something that randomly fails). Instead, strive to have good test data. Good test data is the cornerstone of good tests; when all is said and done, maybe it is the only thing that really matters.

My thoughts on some techniques you will encounter:

**Test-driven development**: try it out at least a couple times. It is often more trouble than it is worth, but it will train you to know the difference between code that is valuable, and code that isn't.

**Red-greening tests**: This is especially useful for writing tests for code you didn't write. It's also super useful if you have any doubt about what code path your test is using.

A simple way to structure an rspec test that I have honed over the last 10 years:

* Start with a describe block for the class.
* Use a let block to instantiate the class, e.g. ""let(:widget) { Widget.new(color, properties) }""
* Make a describe block for each public method in the class, e.g. ""describe 'wind_up' do #...""
* Use a subject block that invokes that method call on the class, e.g. ""subject { widget.wind_up(direction) }
* Within each method-level describe block, make a context block for each situation, e.g. ""context 'clockwise'""
* Nest these as deep as you need to, e.g. ""context 'blue'"" inside ""context 'clockwise'"" for winding a blue widget clockwise.
* If you can, only use let blocks to differentiate the contexts, e.g. the 'blue' context just has ""let(:color) { 'blue' }"" and the 'clockwise' context just has ""let(:direction) { 'clockwise' }

So, all together:

    describe Widget do
      let(:widget) { Widget.new(color, properties) }
      let(:properties) { {who: 'cares'} }

      describe 'wind_up' do
        subject { widget.wind_up(direction) }
        context 'clockwise' do
          let(:direction) { 'clockwise' }

          context 'blue' do
            let(:color) { 'blue' }
          
            it 'energizes the widget' do
              expect{ subject }.to change{ widget.energized? }.from(false).to(true)
            end
          end
        end
      end
    end

",1513465484.0
jrochkind,"So, you obviously _do_ test. You just don't write automated tests. But you test things manually. How else do you know if the thing you just did works, or if it broke something else? You exersize the software yourself, manually, to see if the feature you added worked, or the bug you fixed is fixed, and that the rest of the main functionality of the thing still works.  Whether in irb, or on the command line, or in a web browser, whatever. 

In my experience/opinion, the best way to get started testing when you are quite experienced with writing code but not with testing -- is to automate what you're already doing. Whatever you would be doing manually, write an automated test to test it.  When you write a new feature, or fix a bug. 

Will this necessarily get you to the most efficient or maintainable tests? No. But it'll get you started down the road, and the value of those tests will be obvious when you can just run the test suite and know everything is working, instead of having to test it all manually, giving you the motivation to keep going.  Then when you realize the tests you are writing are painful in some ways, you use those same skills you have at writing extensible, idiomatic, clean code -- to refactor the tests, or improve your future tests. Tests are just code after all. But now you understand what pain you are trying to avoid, what makes test code clean or not. And you understand what people are talking about when they write about testing, and what to take from it. ",1513477947.0
jeremywoertink,"Wow! Glad I‚Äôm not the only one. I‚Äôve held CTO, Sr dev, and all different level positions. Have more than a decade experience, but for the life of me, testing is stupid difficult to grasp. 

 I have got a ton better about it lately. The main thing I‚Äôve learned is each component should have one job. You test that this component does it‚Äôs job in a perfect scenario, and it knows what to do in a not so perfect scenario. If you find a bit of code that‚Äôs needing to do more than 1 thing, then it might be time to rethink how the code is written. ",1513462301.0
amarian1981,This video helped me https://youtu.be/URSWYvyc42M,1513463956.0
editor_of_the_beast,"I used to think TDD was crazy, as my first company only had giant integration tests that no one knew how to run or add to. At my newest company I'm fortunate that we have a strong testing culture, and even more fortunate that we have several senior engineers who believe fully in TDD and that's how they develop. 

The best thing for me was to pair with someone who believes in TDD. The simple fact of having another person there writing the code with me means any liberty or shortcut I'd potentially make on my own is much less likely to happen. It's really an amazing psychological effect - even if they don't say anything, I'm more likely to do tings the ""right"" way. So one thing I'd recommend is to find someone with experience in TDD and pair with them.

If there's no one with that experience in your office or network, you could consider a consultant. We didn't have a TDD consultant come on but we've had some problems with some really brittle legacy code and with the quality of new code we're putting out on top of it, so we actually were able to get Sandi Metz to come in to teach her OO design course. She is a huge proponent of TDD and while the course wasn't on TDD itself, tests were front and center in the entire course. I'm sure there are courses / consultants that specialize in testing practices.

Lastly, I think this is fairly normal honestly. I think the first company you start at out of college can really shape you, and if they don't write tests and still have a business that survives it's going to be hard to justify writing them. Because it seems like extra effort. 

Doing real TDD and writing lots more tests is having the opposite effect for me though honestly. I feel like it's programming on easy mode. The tests end up serving as a kind of checklist. I just keep making them pass one by one. And at the end of it I've implemented something complicated that I couldn't see in its entirety from the onset. 

Don't feel bad - just give it a try.

EDIT: wow, I've never received gold for a comment before. Thanks!",1513468035.0
lukeasrodgers,"My advice (which would be very different if you were a junior programmer, or new to ruby) is to start by writing tests for known bugs. 

If you discover a bug in production code, write some test setup that reproduces it, set an expectation/assertion that the test will pass, run the test, see that it fails, fix your code, re-run the test, see that it passes. This is similar to TDD red-green refactor cycle, except you're doing it after the fact, instead of as you develop a new feature.

The benefits of this approach for your case, I think, are: a) you've fixed the bug!, b) you have at least one test now, which provides clear value against regressions, c) debugging and bugfixing is often easier when you have a test environment that can do the necessary setup and teardown.",1513473373.0
tincholio,"Before you start, read this to get a better starting point: https://rbcs-us.com/documents/Why-Most-Unit-Testing-is-Waste.pdf
",1513493928.0
theGalation,"I never learned to test in my college program and no one in my companies did it either. I had no idea how to start and had no confidence in what I was doing.

https://pragprog.com/book/rspec3/effective-testing-with-rspec-3

This book helped me start and I now test most things I write. ",1513486628.0
JustinCampbell,"It can be helpful to practice TDD outside of a real codebase. Do a kata such as Conway‚Äôs Game of Life/etc, TDD it for ~45 min, then throw it away and try again. It‚Äôs much easier to get better at testing when you‚Äôre not also worrying about a production company problem.

Also just so I‚Äôm clear: TDD for me is not writing a line of code unless it makes a test pass.

PM me if you‚Äôd like to pair sometime.",1513489511.0
,"People at coding bootcamps learn TDD and yet apparantly people in senior roles do not write tests.

This is a company culture problem. If I were to apply somewhere and found out there is no TDD in the process this would be a huge red flag.

This is not an attack on you OP,  but on the companies that let you get this far without writing tests.

It is good you realize this is a problem now and you are taking steps towards becoming a better developer.

Someone else already responded comprehensively, but I personally know that I am a much better programmer because of how tests force me to approach objects and methods.

I do understand how it is difficult to grasp and I recommend not going to TDD directly. Just start writing tests for your working code. Then write tests for the edge cases. If you start seeing a lot of edge cases it's a good indication to make your methods simpler.

After writing tests for some time you will naturally find a fit for TDD.

One of the great things about TDD is what Corey Hanes said. It's wish driven development.

Start writing a test for a new method with the name of that method you want and what you want that method to return.

This is what makes writing clear software so much easier. You will naturally design your interfaces by ease of use and readability.",1513519840.0
alejandrobabio,"I guess you want the security net that tests can give to you. BTW, there are no warranties, just feel more confidently about the changes that you are delivering. So, what to do?

For legacy code, you should add only integration tests, and only for the happy path (when all goes well, do not test errors yet). But that is a lot!. So, you should apply the [Pareto principle](https://en.wikipedia.org/wiki/Pareto_principle): The 80% of your application usage goes over the 20% of the code, and on the other hand, the other 80% of the code is used the 20% of the times. These integration tests should test each functionality end to end, from the visit of the page, completing a form and receiving the response. If you do it well, you will have a 20% of ""code"" coverage by tests, and an 80% of ""use"" coverage by tests. Then, you can move to production knowing that you did not break any of the critical functionalities. And after that, you can start testing the error responses, but do not add all the possibilities, just one for each form (the most frequent perhaps). And the other 20% of app usage, but it is the 80% of your code so you should apply the Pareto principle again (and it works with 90/10 too).

For new code, well, you should try to write the integration test of the happy path too, then the app code, tweak and repeat. It's not easy, and the development time is usually the double of the same task without tests. But worth it.

Think about this: **If you only add one test to your app, the one for the most used transaction it will be a huge improvement**.
",1513638166.0
tomkadwill,"I think it‚Äôs really brave to admit this when there is so much stigma around not testing in the Ruby/Rails community. 

I originally came from a PHP background where there was not much testing. I now work on a Rails codebase with 100% test coverage.

For me, the biggest benefit of automated testing is knowing that I haven‚Äôt broken other parts of the system. Things still break but I think about a test suite like turning a screw. Each time I find a bug and write a test for it, I‚Äôm tightening the screw. That‚Äôs one less bug that can re-appear (assuming I‚Äôve written the test well).

If you ever get the chance to start a codebase from scratch, install a code coverage tool into your CI pipeline. This way you have to maintain 100% code coverage and you‚Äôll be forced to start writing tests. Before long, it will be a habit.",1513506227.0
impurist,"Checkout Sandi Metz.
Great info on what to test and what not to test in her book
Pratical Object Oriented Programming in Ruby 
http://www.poodr.com/
Another commenter has already posted a link to her testing talk. 
This one is also awesome. 
https://www.youtube.com/watch?v=v-2yFMzxqwU
I am teaching my colleagues Cucumber in my current Senior Developer role.
Taking an outside in approach to testing the UI down to testing the objects with Rspec.   ",1513660004.0
bhserna,"What I have found very useful is to take the specification of the feature and try to ""rewrite"" the specification with the description of the tests. And then ""implement"" the tests with code.

The problem that I have found many people have is that is not easy to know where to test the behavior... They don't know if they should write system tests, controller tests, model tests...

I wrote an article comparing three different ways that I have seen... maybe it could help you http://bhserna.com/2018/3-different-ways-of-testing-your-rails-app.html",1517101000.0
tk425,I think what you're missing is TDD. (Which will only work for new code) watch Uncle Bob's stuff on it.,1513461768.0
GroceryBagHead,"Now I'm very curious about 500 star ruby gem with no tests. Cough it up.

Testing is not hard at all.

- You write a method that does something
- You test that method by sending something to it and asserting that you're getting expected result back.

That's pretty much it. Then you add your integration and system tests as needed. 

Tests ensure that my software not a complete shit. And when something goes wrong I can locate and fix bug in no time because I have massive supporting test suite. 

Also RSpec is shit. It offers nothing I'd need and it runs much much slower. Add some Factory~~Girl~~Bot and it's takes minutes to run like 100 tests. I tried my hardest to understand why I would want to use RSpec over Minitest. Every time I need to write a test for some open-source project that uses RSpec... it's a pain. `expect(foo).to equal(bar)` is better than `assert_equal foo, bar` I guess.",1513481676.0
z4yz4y,Omg. Same! ,1513464740.0
hernanat,"Assuming your arrays are ordered as written above, try:

```
array1.zip(array2).map(&:flatten)
```

https://ruby-doc.org/core-2.4.2/Enumerable.html#method-i-zip",1513380492.0
riddley,"This might be an unpopular opinion, but don't live your life with [primitive obsession](http://solnic.eu/2012/06/25/get-rid-of-that-code-smell-primitive-obsession.html) (not my blog). If you have a need to do stuff like this, you're likely overlooking a needed object.",1513607662.0
mperham,"It speaks volumes that Ruby has seemingly dozens of gems which reinvent Net::HTTP client functionality.  No one who actually uses the API is happy with it.

To be kind though, HTTP is a large, complex protocol; creating a simple yet powerful facade on top really is a difficult engineering problem.",1513371447.0
janko-m,"I also had a bad experience with Net::HTTP, mostly because of its inconsistent API, low-level exceptions, and messy codebase. I decided that Net::HTTP is just not worth it, for any use case, I don't care that it's bundled in with Ruby. That also crosses out any derivatives of Net::HTTP like HTTParty and RestClient; it's just not a good idea to build on top of something dirty (for Faraday it's great that you can switch to a different adapter).

Typhoeus is definitely nice, the automatic keep-alive that comes with libcurl itself. I also had a good experience using Faraday with the Typhoeus adapter for parallelizing requests.

--------

However, the HTTP library that has recently won me over is [HTTP.rb](https://github.com/httprb/http). For me my use case the possibility of streaming requests and responses was the main advantage, as I wanted to use it for file upload/download.

    HTTP.post(""http://example.com/upload"", body: io)      # raw streaming upload
    HTTP.post(""http://example.com/upload"", form: { ... }) # multipart streaming upload

    response = HTTP.get(""http://example.com/file"")
    response.body.each { |chunk| ... } # streaming download

Another thing that's excellent is the [timeout support](https://github.com/httprb/http/wiki/Timeouts), which might interest you. In addition to classic per-operation timeouts that are found in our HTTP libraries, it also allows you to specify ""*global*"" timeouts. This means that instead of limiting the time of a single read system call, you can limit the time for the whole response to be read, regardless of how many read calls was required to retrieve it. Small HTTP calls requests/responses are probably sent/retrieved in single write/read call, but it's nice to not to have to think about how large HTTP calls you'll be making now or in the future.

    # per-operation timeout
    HTTP.timeout(write: 2, connect: 5, read: 10).get(""http://example.com"")
    # global timeout
    HTTP.timeout(:global, write: 1, connect: 1, read: 1).get(""http://example.com"")

It also has persistent connections, you just have to explicitly specify that you want to use one:

    http = HTTP.persistent(""http://example.com"")
    # ...
    http.close
    # or
    HTTP.persistent(""http://example.com"") do |http|
      # ...
    end",1513373861.0
testcore,"Last time I looked at the code in Net::HTTP, I slammed the laptop lid closed before my eyes caught on fire.

Whoever wrote it thought that a Java-like approach was a good idea. This gem needs to be rewritten wholesale.",1513365351.0
cruyff8,Is there a license reason ruby (and other open-source projects) don't simply incorporate [libcurl](https://curl.haxx.se/)?,1513368304.0
jrochkind,"A wrapper for a wrapper? Isn't Faraday already a wrapper?

I like HTTPClient. Which is not based on net-http, it's independent (pure ruby) code. I wish it got a little bit more maintenance, but it's better to me than all the alternatives. https://github.com/nahi/httpclient

It is kind of ridiculous that in a language with so much web use, we don't have a good stdlib or consensus third party http client! ",1513378429.0
internetinsomniac,That's good to know. We've found much use of always setting both read and open timeouts as well.,1513368270.0
Oranges13,"So here's a question. My main usage of Net::HTTP at the moment is through another gem for SOAP requests (don't ask - it's a terrible Microsoft product I have to communicate with) and I settled on Savon.

Is there an alternative SOAP gem out there I could use that implements one of these better and faster alternatives? I've noticed really slow timeouts sometimes as well and maybe this is why.",1513371903.0
cmdk,Seems pretty confusing. How do I get started? Do I need to be a paid member? ,1513322587.0
ignurant,"I am a full on rubyist, but it would make much more sense for them to support python, at least for right now. They already have python support in their other tooling, including now even SQL Server.

I do wish Ruby was in there as well.",1513309628.0
,"Sorry, I think Python is the right choice here. Perhaps, not the right choice, but you're going to have a hard time convincing me something else is better.

Python is already well established in academia as the choice for relatively non-technical people. It's easy to learn. Easy to use. 

Importantly, Python doesn't have some of the implicit nasties that Ruby does (for example, Python requires parentheses on all function calls). That can make it a bit easier for beginners and novices to read code.",1513344128.0
malice8691,I think python would be better than ruby. Its easier to learn.,1513295892.0
cheald,"Python is a much better choice than Ruby, because it is already the scripting *lingua franca* for data science and academia, and it has a ton of scientific computing packages that frankly don't exist in the Ruby ecosystem.

I love Ruby, but I also love Python, and Python is clearly the better choice here.",1513353337.0
disclosure5,"I've seen this posted around the place, but ""a request on uservoice.com"" is a long way from Microsoft considering it.

There are a lot of things I'd rather see Microsoft do.",1513310190.0
derrickcope,"I'd rather they use perl or ruby, something more Unix like. I am not a fan of python.",1513311467.0
schneems,Try it on Heroku https://devcenter.heroku.com/changelog-items/1345,1513300900.0
jrochkind,"I'm not sure what it means when a feature is tagged 'experimental', in an RC release? Like, it might not make it into the final release? It might make it into the final release but then be reverted before subsequent releases?

Anyone know?",1513286778.0
murjax,">""rescue/else/ensure are allowed inside do/end blocks.""
 
Are there any advantages to being able to rescue inside a block? It seems convenient at first glance, but my instincts tell me this would be a code smell if I saw that in production code. ",1513309663.0
BaconGlock,spam,1513707459.0
hehestreamskarma,"This is really cool. 

What was the biggest technical obstacle you encounted when writing this? What did you learn the most about?",1513236513.0
sshaw_,"> i know i can rails console and type in def mymethod ..stuff end and it works, but i dont want to have to def the method every time i run this project

In [my `.irbrc`](https://github.com/sshaw/dotfiles/blob/master/irbrc) I look for [an `.irbrc` in the current directory](https://github.com/sshaw/dotfiles/blob/d8b9f04d45640e3dbdcbfadcb13efefb087e520d/irbrc#L114) and load that. 

In this ""local irbrc file"" I have stuff like the following: 

    Here = Some::Long::Namespace::Here

    # When I need a user to test with 
    def sshaw
      @sshaw ||= User.find_by(:username => ""sshaw"")
    end

    # When I need some listings to test with
    def recent_listings
      sshaw.listings.where(:draft => false).order(""created at desc"").limit(5)
    end

Hope that helps. ",1513213011.0
jrochkind,"I'd put them in a separate file(s) and `require` it. If you want it to be auto-required every time, you can put the `require` in your .irbrc, as /u/sshaw_ suggests. 

For it to be `require`able, it has to be in your load path. Which usually includes the `./lib` dir, and the `./lib` dir of any gems too, if you want to distribute as a gem.  Not totally sure if that will work to just `require 'name_of_file'` in the .irbrc, if it will modify your load path to include gems and such before .irbrc. _Probably_ yes if you launch as `rails console`? Try it and see. 

I think what you are trying to do, a ""console application"" as you call it, extra things that will appear in the REPL, is not something commonly done, so you're kind of inventing your own path. Which is fine!",1513277087.0
MrNobles903,"i know i can rails console and type in def mymethod ..stuff end and it works, but i dont want to have to def the method every time i run this project... i dont know if im not wording my question correctly r what. the obj is to be able to rails console and start typing the commands im defining .... ",1513193464.0
tk425,I can't emphasize how much you will hate this in actual practice,1513219380.0
ArtVandalay7,"Very little. My experience with ruby is that it has an amazing community, an attractive and ever-growing feature-set, and more resources for learning for free than I know what to do with. The only thing that worries me about Ruby is the idea that people give these ‚ÄúRuby is dead‚Äù claims any merit whatsoever. Every Ruby meet-up I attend has the venue at capacity. People just don‚Äôt write trendy medium articles on it so much anymore because the industry knows full well how good it is.",1513168347.0
Floppy76,"I've been a Ruby programmer for 10 years or so. 

I strongly suspect ""Ruby is dead"" because it's not the new hotness any more. Now it's a mature platform with great tooling and a fantastic ecosystem, and as such will continue for a long time. 

But, also, it's losing out to uglier languages, sadly - it does feel like fewer people are learning it now, as opposed to JS or Python.

Languages don't really die, fashion just moves on. PHP is probably dead too, but still runs a vast amount of the web.

EDIT: And even if Ruby is dead, because of Ruby every other language has had to up its tooling game. Without Ruby, no npm, pipenv, composer, etc, so the influence will live on for a very long time.",1513176992.0
,[deleted],1513169957.0
Ugrum,"One thing I am currently a bit annoyed is the apparent lack of interest to improve the tooling/ecosystem outside of Rails.
Sure there is Roda, Sinatra, Sequel, Dry-*, Trailblazer, Rom, but there some minor issues when trying to tie all of this together.  
My inexperience with this ""alternate ecosystem"" sure adds a lot to that.",1513182982.0
derekkraan,"1, 3, and 4 (soon to be 1 and 4).

I'm not worried about the future of Ruby because I'm already moving on to Elixir.

Ruby was great (for 6 years, in my case) but after being exposed to Elixir / Erlang I've discovered that that's where my preference lies. I'm quite certain that I won't be starting any new projects in Ruby. (Unless a client asks for it and Elixir work is otherwise in short supply).

Nothing against Ruby, I'm glad it exists, I'm glad that other languages have cribbed so much from it. But I'm not sentimental about it in the least.",1513182522.0
Craftkorb,"Ruby isn't dead, not at all.  Don't feel like calculating numbers, but just from my memory the #ruby channel on Freenode had above 1k people in it a few years back, but is down to 760-ish now.  It is much quieter in there than 3 years ago.

The tooling is mostly fine.  I'm lacking a classic debugger (Real breakpoints etc.), but that is mostly covered by `binding.pry`.  Apart from that, boy was it refreshing after coming from C++ that to add a depenency, all I had to do is dropping a line in the Gemfile.

Another trend I see is to doing more data analysis, at which Ruby was never really good at by itself.  Math-oriented people always seemed to prefer Python for that stuff.  No idea, but not my area of expertise.  This seems to be one big area though where Ruby ""is missing out"".

Let's talk about hype.  The hypetrain is long gone.  And you know what?  This is actually a good thing.  Those who only stick to the train don't really learn the intrinsic ins and outs, they cover their bases and move on.

And last, there are of course the ""new languages"" emerging.  Many people switched over.  And this actually makes perfect sense: Choosing a language shouldn't be a popularity contest, but what (in your context and scenario) makes the most sense.  And truth is, for some things Ruby was pretty good, but other options are simply better!

* **Go**.  Everyone knows of it by now, it seems to be especially popular for web development focusing on micro services.  I never got why a system programming language (Go claims to be one, I never much tried it so can't comment) is so popular for web development.  I guess it's mostly its take at concurrency (Go routines, channels aka CSP).  Backed by Google which helps to gain favors from the ""Google is the best thing ever"" crowd.  **Better than Ruby** in the regard that it has a modern answer to concurrency and has real parallelism.  
* **Rust**.  Automatic memory management without a runtime garbage collector.  Pretty cool, though makes it harder to use for the developer.  On the upside, this annoyance is used for good in their concurrency model. Backed by Mozilla.  **Better than Ruby** in the regard that it's type and memory safe, potentionally faster than C.
* **Elixir**.  Always felt like this mainly appeased to the Rails faction.  That Elixir and the Phoenix framework is developed by Rails core maintainers helps here.  **Better than Ruby** in that OTPs whole foundation relies on robustness and many-machine concurrency. 
* **Crystal**.  This is where I currently am.  It's the result of an ""what if Ruby was compiled"" experiment.  As such, it features things like union types (Which sets it apart from other languages easily).  It solves the *One Billion Dollar NULL issue* simply through its type system.  Packed with a powerful macro system to allow for the interesting parts of Rubys metaprogramming patterns (Ran at compile time), many Ruby programmers should feel at home.  **Better than Ruby** in that it's magnitudes faster and the *language design* feels more mature.

",1513208543.0
sjs,"Performance as a web server. As soon as you have a lot of traffic it becomes pretty expensive to run Ruby. Maybe your service doesn‚Äôt involve high request volume and it never becomes an issue, but when it does it sucks that the only solutions are cough up a lot of dough every month, or rewrite the hot code in another language (or the whole thing if splitting it up doesn‚Äôt make sense).

I like Ruby as a language (a lot actually) but it has some deficiencies. The module system isn‚Äôt as robust or flexible as say Python‚Äôs. I think it was a mistake to expose symbols instead of automatically interning short strings like Python. Having 2 syntaxes for hash literal keys is kind of silly. These are small issues but there are a lot of them. The 2 block syntaxes have different associativity precedences. The GIL prevents true parallelism. Blocks and procs and lambdas, oh my!

It‚Äôs a really nice language when you know it but there are a lot of rough edges. Sure it‚Äôs not PHP levels of bad because it was designed, but it‚Äôs not perfect by any means.",1513180805.0
plainprogrammer,"Not a lot. Ruby is still an incredibly pleasant language to work with and the community is vibrant and diverse. Moving forward the big things Ruby lacks are available, just not easily or in the CRuby implementation right now.

Concurrency is available in JRuby and anyone who doesn't seriously consider JRuby for production workloads is missing out. There are tools like Celluloid that are mature and available to provide Actor-based concurrency and a few good options for Evented architectures. There are interesting proposals to get CRuby more robust concurrency options, but if that is a must then JRuby is already ready to go.

Another market-oriented gap that Ruby suffers from is in relation to Data Science and Machine Learning. Fortunately, that is an area that is also seeing movement. There are ways to build Ruby on top of Python's more mature ecosystem, but there is also the SciRuby and other projects developing the fundamental tooling. And, again, if you use JRuby you have access to anything that is available for the JVM as long as it provides Java interoperability.

So, I don't see a lot of things that make me worried about Ruby. It is no longer a trendy choice. But, that is probably a good thing since trends change quickly and not always in ways that are actually good in the long-term. Ruby is now a more conservative choice for certain kinds of work since the tool space is relatively mature and advancing in a more methodical manner.

My Background: I've been using Ruby since 2006 and came to it from a PHP and Perl. I picked up Rails for the first time in 2007 and both Ruby and Rails have been at the center of my career since that time.",1513185216.0
hirolau,"1.

Most of my work involves a lot of data manipulation and task/workflow orchestration. In that area, the Python libraries are just way ahead of Ruby. I am worried Ruby will fade more and more as it falls behind in the data manipulation area.

",1513190628.0
starwarsholidayspeci,Becoming an obsolete developer if you don't know JavaScript or lack experience.,1513167962.0
siplux,"While I imagine this is somewhat contentious, I'd say that compilers have improved to the point where lacking types isn't really an advantage anymore. I am unaware of any new language in development that is dynamically typed, [Crystal](https://crystal-lang.org/) as a particularly poignant example.

These days I'm spending a lot of time in Kotlin (recreational). I find it a joy to work with and would probably reach for it for similar tasks. That they're working on LLVM and JS targets makes it even more attractive.",1513186966.0
ksec,"We need to define a few things up front. 

When people say Ruby is dying or dead, what dying or dead actually means is Ruby is not growing. Lot of people left Ruby, even the prominent ones, but there are also lots of new faces, as DHH likes to mention. 

Languages dont die, especially when they are open sourced. Perl is still not dead, nor PHP.  But consider if a languages is slowly moving towards irrelevant, then it is certainly considered dead. In this case Perl is an example, while PHP still has vast majority of the Web programming. In any case, the Job Pool is an easy indication, and no matter how you spin it, the Job Pool for Ruby Rails is definitely shrinking. 

The problem is Ruby at its 1-2% low level of usage, should really be growing a lot. You dont see large web scale company using it, Python has Google, Dropbox, for example, using it as well as contributing to its development. Ruby doesn't have any of that, and it isn;t trying to get being used for large corporate either. Its whole ecosystem is bond to Rails. Even the Release note of Ruby often mention Rails and nothing else. It seems at the moment Ruby is an Rails languages rather then vice versa.   

When people say Ruby Rails dont scale, what they really meant was Ruby Rails dont scale cheaply compared to all others. Cookpad does close to 20,000 RPS, Shopify manage 80,000 RPS, and there were once information about China's Railway ticketing system using Rails that does 400,000+ RPS, it was basically the whole China DDOSing the system. So Ruby Rails scales, but at what cost?  

The Web is largely divided into two camp, one if the pay by user and SaaS model, much like Basecamp which Rails originate from, the other is Ads to user which needs to reach a critical mass before it starts to paid itself. The latter is the one much more popular and which Ruby Rails is having problem, because scaling to that critical mass requires substantial investment into infrastructure, and its cost structure is not very attractive. DHH used to say Moores law is helping them to grow, but that has no longer be true for recent few years, not to mention the Goal post of sustainable advert or per user revenue on a freemium model is getting larger then the speed of Hardware improvement. For example, on Stackoverflow Engineering blog, shows a fully optimize ASP.NET could do 10x more then Ruby at 10x Faster Speed while using 1/10 of Servers. 

There was a talk sometime ago about Go Vs Ruby, where Ruby was likely 30%+ more productive up front, it was 10x slower, 300% more maintenance work afterwards. 

To put this simply, the maths and scale of economy doesn't work very well for Ruby And Rails on many applications.  

If you watched some Conf Video, Matz has went from Ruby is fast enough, good enough, to Ruby needs to be faster, Ruby needs concurrency. From Ruby is my languages, to Ruby is communities languages. The closed development circle of Ruby means it has seen much less contribution from outsider compared to Python. When Ruby needs all the help it gets, not having the conversation and development in open and easy to follow doesn't really help. Although I understand the resistance to GitHub, but certainly GitLab is an alternative. 

I also dont believe backward compatibility is the most important factor for 3.0. Ruby has quirks and in some cases far too many choices, and if MJIT is really faster, it should be used as an incentive to move the ecosystem forward. Making breaking changes at the MJIT support level. Taking the chance at changes to fix and improve things. While Matz have said they dont want another Perl 5 / 6 and Python 2 / 3 problem, but i believe this is different. Perl 5 / 6 is literally a completely different languages they might as well call Perl 6 something else. While Python 3 offer changes while giving no immediate benefits to its users. JIT is a very good chance to use as bait and rethink what Ruby in the future should be.

The biggest problem often is Ruby as a communities dont see any of these as problem until it is too late. People flock to Go not only because of its performance, but because it can be easily deployed, and deployment isn't something even on Ruby's Roadmap. Ruby on Windows still isn't as easy as any other counterparts. And it is too late to join the Data Science race. Sidekiq developers gained their success using Ruby has has now moved to Go, the same as Hashicorp.          

I know this may be a little harsh, of course Ruby dont owe us anything, you are free to use and move on as you like, but it is sad that Ruby doesn't grow bigger, it doesn't need to take over the world, but it should have a slightly larger presence and usage across different domain. Luckily Ruby will always live on in the form of Elixir and Crystal. 
",1513485128.0
thisrealorthisfntasy,"I am 1, 2, 3 and we'll probably keep using Ruby/Rails because we're a small team of young developers with significant time invested in Ruby and are now pretty productive. That being said, more and more products deeply involve integrating with systems over JSON API and if we were starting today we'd probably pick a front-end framework (react/angular/vue) and deploy node apps when needed. We are starting to implement a front-end framework now and I can imagine that once we're proficient we may slowly switch to just JS. I haven't built a big node app tho, so maybe I'll hate it. IDK.

Edit: point being that for a small young team, it'd be nice to be proficient in just 1 language/ecosystem rather than 2 ",1513171087.0
subvertallchris,"Been using Ruby full-time on the backend for 4-5 years. First language I used professionally. Also use TypeScript, Python, and Java professionally now.

I am concerned about the slow response to the language‚Äôs longstanding performance, parallelism, and static typing issues/needs. While Ruby 3 has a goal of addressing these, I won‚Äôt really believe it until we have tentative official word of the branches or approaches that will make it into master. In the meantime, alternative languages are drawing heavy inspiration from Ruby and its ecosystem, closing the gaps in developer experience, and offering more and more reasons to switch. I think it‚Äôs unfortunate that many of us will feel forced to give up the language and ecosystem we know because it didn‚Äôt stay current.",1513220622.0
katafrakt,"There was never a better moment for Ruby world than now. We have started adopting dry.rb, Trailblazer etc., we started to look outside of ""Rails ghetto"" (Hanami, Grape, Rack-App etc.), we have a perspective of getting Truffle Ruby production ready... Of course this chance might be wasted, but the language is far from being settled, let alone dead.

It's no longer ""hip"", that's true. But it's a good thing. We don't need ""cool"" solutions, we need ones that work, are based on solid foundation and are well-designed. Hip does not provide that.",1513256998.0
kerrz,"I'm worried it will-go/has-gone the way of PHP.

At my business, our main product is several services split up between PHP/Symfony and Ruby/Rails.

In small pockets, PHP is still wonderful. But worldwide it's looked down on as being slow, insecure, unsupported, etc. All a tough mix of fact and fiction.

But Ruby picked up a lot of the PHP crowd in the 00s, and while Rails made it new and hot and accessible, people flocked to the platform. Now, they're flocking elsewhere, and Ruby is left with a tighter, more-experienced community, but it's definitely a smaller one.

There are ups and downs to that, don't get me wrong. Being able to reach core contributors and get changes made? That's awesome. Knowing that your platform is stable and going to be supported for the next decade? Excellent.

But the same is true of PHP, and it gets shit on every day.

To be honest, if I hadn't inherited a Ruby app 2 years ago, I probably would have skipped Ruby entirely, and moved over to Go/NodeJS/etc. as 2 years ago people were already calling Ruby as dead/dying.

I do not think it's dead/dying. I think it's maturing and stabilizing.

In a perfect world, it'll become the next Java/Cobol, which people rely on for decades and praise for ""ain't broke, don't fix it."" But I really do worry it's becoming the next PHP, which is more ""ain't broke, needs a major overhaul anyway...""",1513171505.0
gordonisadog,"Most of the new devs who in the past would be learning Ruby are instead learning Python. It's a shame that Python ended up winning this war. Ruby really is a much more elegant language, but that's how things go sometimes.",1513176910.0
uptownjimmy,"The thoughtfulness and self-awareness of a lot of these answers is one of the reasons the Ruby community attracts a lot of people, and will continue to do so. A lot of the best people I've met in the programing industry have spent years of their lives in Ruby, at one point or another, and it shows. 

Ruby ain't going anywhere any time soon, fwiw. It's not the new hotness anymore, but if JS on the server is the new hotness, I'll hold off for a while longer, as it still feels like the Wild West over there.",1513189305.0
DuroSoft,"Crystal, but in a good way ;)",1513202154.0
d_impious,"Hi,
1- fully hobbiest... i code at work c# and a dynamic language at home just for stupid programs\fun.

honestly, and i'm sorry because i do like ruby over all other dynamic languages ( well i had an affair with perl in the 00's), i do think it's dying in the sense Perl is dying (sorry perl fellows). The new kids on the block are go (from google... which i tend to avoid whenever i can nowdays) to python or js. There won't be enough new kids to keep the language ""fulfilled"" within 5 years.
I do check Tiobe regurarly because i'm a fool but the better approach for me is this: https://www.nostarch.com/upcoming.htm  -- there is go, there is python there is no ruby. Which ruby book was launched last year ? ( the site was a pointer, what i mean is, what new books are there  ? ). Another pointer is the new tutorials on the subject, i do like rubyflow.com and it's enough! But for instance the absence of railcasts must mean something... no ?

Sadly, when ruby was at the top if people looked beyond Rails, i do think ruby would top python right now.

Hell, even i've playing more with python lately just because... because i love monty python eheh and everyone uses it more than ruby and perl. The literature is for python for the new trending things... 

Now, one thing that 'annoys' ( people are free to write how and in the way they want, obviously :) me about ruby is that some blogs about the language itself being in japanese. I mean, to read the language code you 'can think' in english, to read the opinion of the founder you have to learn japanese. I doesn't makes sense to me. This is of course not a problem, just a ""i don't get it"".

my 0.2 cents 

",1513203712.0
,"I still think this is a good language to start learning programming with. You can enjoy the syntax, learn concepts, then just grab js and go. ",1513305606.0
derrickcope,Ruby was just ranked 4th in the github programming languages report 2017,1513331221.0
lordmyd,"Ruby, along with Python, featured in some of the coding scenes in Mr. Robot so it must still be fairly hip.",1513393484.0
iansowinski,"I feel like income of new developers is quite small compared to JS and Python. Don't get me wrong - I am junior, Ruby was my first language, but I feel like most of my friends who are starting their carriers are taking python. ",1513173239.0
joanbm,"Hello,

I think you may join contest of the most purposeless question of the month !

Strive to spend (waste) time by (not) solving a (virtual) problem ? Bravo.


",1513181342.0
BashCoder,"I know this isn‚Äôt a Ruby answer, but the bigger the file, the more I would simply use this Unix command: 

sort -u file_with_dupes.txt > file_without_dupes.txt",1513119472.0
jrochkind,"You need to know all the lines to know which are duplicates, somehow. 

Certainly the easiest way is to read them all into an array, and just use the built-in `uniq!` method. Then write em back out. 

I'm not sure if your proposed solution has any advantages over that simple solution, although it should work too. But I don't think your proposed solution really gains you anything, in maximum RAM use or performance. I don't think there's any benefit to doing it that way, unless there's one I'm missing?

If you really need to minimize RAM usage, a much more complicated way would be to: read the file one line at a time, for each line take the SHA1 checksum of the file, and check to see if it's in your ""already seen"" array (or Set); if it is, skip the line, if it's not, output the line and add the SHA1 checksum to an 'already seen' set. You still need enough RAM for all the SHA1 checksums though. 

I suppose you could also store 'seen' lines or checksums somewhere _other_ than RAM, but which (unlike a plain file) is indexed, like a database. Much slower, but will use constant RAM regardless of file size. 

I don't think there are going to be any other sorts of solutions. If the files are reasonably sized (less than a meg?), I'd probably just read em into RAM and uniq! em. 

Oh, if you are willing to SORT the lines first, losing original order, then of course it becomes much easier, because any duplicate lines have to be next to each other after being sorted.  So you can then go through the lines one by one, and you only need to store/look at the immediately previous line to decide if the new one is a dup. ",1513114603.0
bradtech,"was able to accomplish what I needed by 

    IO.write('C:\\utilities\\domains.txt', 
    IO.readlines('C:\\utilities\\domains.txt').uniq.join(""""))


thanks for the help everybody appreciate the advice. ",1513195947.0
aspleenic,Flatiron School might be a nice place to start,1513111140.0
smithssummer,"I know you were looking for inperson, however my cousin learned ruby enough to get a job, from Treehouse online.  https://teamtreehouse.com/",1513165742.0
thecoolbrian,https://www.edx.org/course?search_query=ruby,1513190605.0
smithssummer,"I feel like a cranky old man, but I still like server rendered pages. I'm glad rails is adding features to have realtime sites while still serverside rendered",1513180130.0
editor_of_the_beast,"I actually see this being useful now. I thought it would only be used in method definitions at first, like yield. Then I thought it looked exactly the same as tap... but it's different because the value returned at the end of the block given to yield_self is returned, unlike tap which returns the receiver itself. Nice.",1513219162.0
non-rhetorical,Ooooh,1513406065.0
geraldbauer,"Hello, reminder: you're more than welcome to send in your articles (about your library / gem of choice) too!",1513070020.0
iconoclaus,"thanks for the simple and helpful video. i‚Äôd love to see a follow up video giving a short example of how this immutable object is advantageous the first mutable iteration.  basically, a demonstration of one or more of the points you concluded with.

you have a very clear and elegant way of explaining things and i‚Äôm definitely going through your other videos soon.",1513179858.0
,"* THe pick axe book
* Learn Ruby The Hard Way
* The Well Grounded Rubyist 
* Read the side panel",1513023104.0
Muchaccho,[The Well Grounded Rubyist](https://www.goodreads.com/book/show/19484917-the-well-grounded-rubyist) is my favorite.,1513076372.0
sihui_io,"* Eloquent Ruby
* https://rubymonk.com",1513050838.0
smithssummer,My thought on stubs is that a lot of time they masks so much functionality they aren't as useful. I kind of like how rails gives a full environment with a database for tests.,1513167012.0
lotyrin_work,"Upgrade rails, use [encrypted secrets](https://www.engineyard.com/blog/encrypted-rails-secrets-on-rails-5.1) and you can manage a single RAILS_MASTER_KEY environment variable with Heroku.",1513014489.0
Digues,Good stuff! I learned these patterns in school but never got to actually see them written in Ruby. ,1513023856.0
przemosk,great work ! :),1513087756.0
startup_sr,"Hi Sihui,
I really enjoy your posts taking real life analogy in a funny, interesting example and explaining in a very smooth and elegant manner. 

It will be great if you can also make a few blog posts on how to ace a job interview intended for junior-to-mid level Ruby on Rails developer. Thank you. Great work. Keep it up.",1513112329.0
excid3,This would be handy to have in Administrate as well. ;),1513015808.0
notromda,Does it handle nested forms/nested models?   This is one area that rails errors get really nasty.,1513019688.0
jrochkind,"Nice work, these are exactly the annoying things about the error API. 

I wonder if some of these things might make sense as PR's to Rails?  You'd have to think about backwards compat and how/if to handle it, but I think it might be worthwhile. ",1513090897.0
kmaicher,`Hash#slice` is my favorite.,1513006131.0
J-_-L,"Thanks for the research!

I totally agree with you on ""all of these many incremental changes add up, and are what makes modern ruby such a robust, stable language.""",1512998755.0
lone-scientist,`Hash#slice` and `SecureRandom::alphanumeric` will really come in handy.,1513021382.0
Jiggins_,"> String#casecmp and casecmp? now return nil for non-string arguments

This sounds like a step backwards to me. It seems wrong to not use `TypeError` for a type error.",1513022577.0
gray_-_wolf,"Yeeeey, bug reported by me is in the list (#14095) `ÔºØ(‚âß‚ñΩ‚â¶)ÔºØ`",1512993566.0
skryking,are the unicode 10 characters acceptable as variable names?,1513014472.0
damireh1,Huh does 2 years experience with ruby count as senior in SF?,1512991549.0
hehestreamskarma,Any love for someone in Moscow?,1512956035.0
ioquatix,"I love this kind of thing. I also wrote [`async` in Ruby](https://github.com/socketry/async) and [in C++](https://github.com/kurocha/async) they both follow a similar model and it's been proven in both development and production to be a great model - both easy to use and efficient. IMHO futures are a slow and leaky abstraction, so I'm glad to see more people following the implicit evented model. Ruby has a few hangups because it is garbage collected while C++ can depend on scoped initialisation/destruction which provides strong guarantees about the order of operations and lifetime of resources, so Ruby has to keep an in-memory tree of tasks, while C++ can maintain this safely on the stack.

I had a go with both `lightio` and `async`, just essentially [copying the task you have in the README](https://gist.github.com/ioquatix/c8be70a7ca73bc30f73d3a0e551376cd), and the performance is pretty close! I see you are using NIO so that is to be expected. That's awesome thought.

One of the things I wanted to avoid with Async is global state. I see you've implemented [per-thread IO selectors](https://github.com/jjyr/lightio/blob/e06810be80815df44fb768a7716944e23cbfea1c/lib/lightio/core/ioloop.rb#L55-L64) - `async` deliberately makes this explicit - you must use [the entry point `Async::Reactor.run`] (https://github.com/socketry/async/blob/a796eadaa9b1afe18ca6f42080f597473a7a23c4/lib/async/reactor.rb#L38-L61) around any code you want to be asynchronous. Nested invocations return a task, which you can wait on or terminate, so nested servers are super easy to implement, and [look something like this](https://gist.github.com/ioquatix/2e522ae91c79a9aa69e3518d18b5d7f2).

The benefit of this approach is that you don't have implicit global state. The downside of this is that you essentially make the API more complex to use. You could argue being explicit actually makes it simpler, but I agree it's more complex because there is at least one more moving part you have to take care of. The benefit of being explicit is that the lifetime of the reactor is very clear and in the case of forking servers, multiple reactors, nested servers (e.g. running a DNS and HTTP server in the same reactor), it becomes a significant benefit and keeps the code very tidy.

Anyway, I'm keen to see where you go next with this project. If you are interested we could move your project to the `socketry` org which is a place where we've been hosting all libraries that integrate with NIO.
",1512943542.0
bascule,Curious if you've taken a look at [Async](https://github.com/socketry/async),1512927921.0
BoWild,"I'm curious as to the target audience / use-cases you envision for this gem.

If you were offering an `nio4r` alternative, your ""target audience"" might have been clearer (server authors). However, you're clearly building on top of `nio4r` while still providing access to fairly lower level state and information.

For example, `nio4r` clearly provides access to lower-level polling engines provided by the OS (both for local IO and networking IO). The use of `nio4r` required understanding of the the differences between Networking and local IO engines, so it can be properly used when writing servers and such.

On the other hand, gems like `iodine` (I'm the author) attempt to abstract the network layer as much as possible, providing a ""protocol"" based API rather than network details. The target audiences are web and other network application authors, that can ignore connection management and focus on the protocol and the application at hand.

Where do you see LightIO fit in? What will it be used for?",1512967592.0
geraldbauer,"Hello, reminder: you're more than welcome to send in your articles (about your library / gem of choice) too! ",1512902415.0
hehestreamskarma,"StackOverflow might be a better place for this.

https://www.google.com/search?q=While+executing+gem+...+(Errno%3A%3AEACCES)+Permission+denied+%40+rb_sysopen+site%3Astackoverflow.com",1512891241.0
baseball2020,Have a feeling library ruby might be protected. Anyways I always prefer to run via rvm. Which ruby did you install w rvm?,1512892613.0
kwhittington,"    a.select { |string| b.any? { |word| string.include?(word) } }
    #=> [""foo is available""]

This is using [Array#select](http://ruby-doc.org/core-2.4.1/Array.html#method-i-select), [Enumerable#any?](http://ruby-doc.org/core-2.4.1/Enumerable.html#method-i-any-3F), and [String#include?(other_str)](http://ruby-doc.org/core-2.4.1/String.html#method-i-include-3F).",1512864047.0
qwalrus,"You probably need to get used to reading the documentation on ruby-doc.org. What you want to do is something like:

    a.each { |i| a.delete(i) unless i.include?(b[0])  }
",1512864150.0
derrickcope,You can subtract arrays.,1512902096.0
greymalik,Anyone happen to know if hexapdf can change the metadata (specifically the title) of an existing PDF? I haven't been able to find that capability in other libraries and I'm not having any luck finding it in their docs either so far.,1512825147.0
cyberferryt,This library sounds great.  How does it compare to something like Prawn?  My specific question - can you embed graphics and/or text into an existing PDF document at specified positions?,1514117578.0
lucidsensai,I'm looking to scale a page size. Is this possible in HexaPdf?,1515633105.0
geraldbauer,"Hello, reminder: you're more than welcome to send in your articles (about your library / gem of choice) too! 15+ days to go.",1512822381.0
sshaw_,"Fun idea, though I'll be sticking with `less` üòâ

Comments/criticisms  (sadly, I see some of these things being done in tooooooo many Rails and Ruby projects):

1. You're not [closing the log's filehandle](https://github.com/kirillshevch/logs/blob/8d2ca381412c48d72c0cbfae7ccd0fbfceed74fd/app/controllers/logs/concerns/logs_loader.rb#L14). Maybe this will be GC'd and closed, or maybe you'll cause the including application to run out of file descriptors.
1. [The way you're viewing a ""page""](https://github.com/kirillshevch/logs/blob/8d2ca381412c48d72c0cbfae7ccd0fbfceed74fd/app/controllers/logs/concerns/pagination.rb#L21) may cause an out of memory error
1. [This is why I don't like concerns](https://github.com/kirillshevch/logs/blob/8d2ca381412c48d72c0cbfae7ccd0fbfceed74fd/app/controllers/logs/logs_controller.rb#L5-L6): `index` and `show` are empty, I have to look at *2* different files for what really should be in the controller and/or those methods. And, more importantly,`Pagination` depends on `LogsLoader` and, the ""interface""? An instance variable named `@logs`, which is dependent on the order of `before_action`, which is dependent on the order of the `include` üò∞
1. You're [bringing in HAML](https://github.com/kirillshevch/logs/blob/8d2ca381412c48d72c0cbfae7ccd0fbfceed74fd/logs.gemspec#L18). While HAML is great, one's project should't have to now depend on it just to view logs
1. The gem name, `logs`. While I cannot believe it was not taken I'd hope that it would have been used for something besides a Rails Engine for viewing logs. But that's just me...  :)
 

",1512837744.0
jrochkind,"You can, but I find it easier and more enjoyable to use Sequel from a non-Rails app. ",1512835765.0
aarkerio,"1) Webpacker is an anti-pattern: pollute the ruby sphere with JS and pollute the JS sphere with Ruby because you don't wanna read the Webpack tutorial.

The gem doesn't add ANY value to the project and only add a new layer of complexity.   

",1512780608.0
midasgoldentouch,"I thought the original article was interesting. The second post is expected to contain the meat of the code. I'd like to move an open source project I work on towards using components.

For the record, my day job implements components, but everything is done via ruby, not JavaScript.",1512782880.0
otakugrey,Neat!,1512767242.0
geraldbauer,"Hello, reminder: you're more than welcome to send in your articles (about your library / gem of choice) too!",1512760637.0
mr_sudaca,you can use something like [Faraday](https://github.com/lostisland/faraday) to connect to the db,1512741954.0
mrspuff,"I use a library called vcr that records and plays back net requests and responses. There is a port that can be used with java https://github.com/betamaxteam/betamax
I searched for vcr java",1512712179.0
Enumerable_any,"This might be what you're looking for (it's a more lightweight approach than a docker container): https://github.com/wconrad/ftpd (found it by googling for ""ftp ruby"")",1512695075.0
masterwujiang,"If you just use ftp to get data, then you can implement by your own, it only requires about 4 ftp commands.",1512711899.0
kcdragon,I've used a Gem called fake_ftp in the past with success. Give it a try and see if it works for you.  https://github.com/livinginthepast/fake_ftp ,1512718895.0
IllegalThings,"Had to do this for SFTP a little over a year ago. Ended up stubbing the calls to Net::SFTP, and writing some integration tests with rspec tags that I‚Äôd only run against a real SFTP server to verify I‚Äôm using the Net::SFTP api correctly. ",1512752452.0
shayhtfc,"Hmm,

I think you'll be wanting something along the lines of

    write_line = true
    domains.each do |d|
      write_line = false if line.include?(d)
    end
    write_file.write(line) if write_line

Someone will probably come along in a second with a much more elegant solution",1512678159.0
codeprimate,"  I would do it like this:

    # Define variables, because literals are evil 
    domains = %w{example.com foobar.local coder.dev}
    inputpath = 'C:\\utilities\\domainbak.txt'
    outputpath = 'C:\\utilities\\domainsnew.txt'

    # Read lines from inputpath into an array, removing trailing whitespace
    source_domains = File.readlines(inputpath).map(&:chomp)

    # Open the outputfile with a block so that the file handle is automatically released
    File.open(outputpath,""w"") do |outfile|
        # Write to file: source domains which are not included in the domains array, separated by line-feeds
        outfile.puts source_domains.select{|d| !domains.include?(d)}.join(""\r\n"")
    end
",1512699985.0
menge101,"Is there a requirement to support text files that are too big to fit in memory?

If not, then I'd stop thinking in terms of the text file at all.

Just read the whole thing into memory operate on the array, then write the whole array out to file.

IMO, I wouldn't even read and write to file, i'd leave that to shell input/output redirection.",1512741101.0
smithssummer,"oh super cool i started to get into ethereum dev, its nice to be able to understand how blockchains work by seeing a ruby example",1513180181.0
xc68030,Doesn‚Äôt look too bad to me. I would use `case` statements instead of the `if/elsif/else` clauses. ,1512648495.0
menge101,"I would separate your user interface form the game logic.

I'd also define initialize and put everything that is in start under it.

Also, define the option set for weapons in one place and reuse it.",1512655924.0
timheilman,"Congratulations!  Neat game.  Isn't it fun?  I'll quote from the following people in their excellent textbooks:

* Sandi Metz in {Practical Object Oriented Design in Ruby}
* Robert Martin in {Clean Code}
* Martin Fowler and Kent Beck in {Refactoring}, and 
* (for state/strategy) {Design Patterns} by the Gang of Four, as they're called.

No piece of code is perfect.  Metz: ""This improve-it-now vs improve-it-later tension always exists.  A good designer understands this tension, and minimizes costs by making informed tradeoffs between the needs of the present and the possibilities of the future.""  The future of this code is probably not very long, and the needs of the present are met, so I'd say you don't need to do anything more.  But if you did...

In a larger program, you would want to use attr_accessor or attr_reader rather than accessing instance variables directly with @ (per Metz: you want the dependencies of a class's methods to be *exclusively* upon other methods, not any variables, even when the variable is declared within that very same class).

Robert Martin tells us only to use *verb*s or verb phrases for method names, not nouns nor noun phrases.  So ""weapon_player"" and ""weapon_computer"" ought to be renamed ""choose_player_weapon"" and ""choose_computer_weapon,"" or some other verb phrase.

Question marks are used traditionally in ruby to terminate method names which return a boolean value.  play_again? does not, so it's not conforming to general Ruby style.

The recursion in play_again? is harder for my cognitive apparatus than would be a while loop whose condition is a method which retrieves the user's answer, but this is the largest CS flame war of all time, with most people agreeing with me but the opposite camp yelling louder to compensate.

Also, my cognitive apparatus has a harder time with run_game than it should.  Long conditionals are a Beck/Fowler code smell, and their solution is ultimately a refactorization called ""Replace conditional with polymorphism,"" although you must first do refactorizations ""Extract Method,"" then ""Move Method,"" to the class which represents a type code the long conditional depends upon, then decide on an inheritance strategy with either ""Replace Type Code with State/Strategy"" or ""Replace Type Code with Subclasses,"" then you can do the ""Replace conditional with polymorphism.""   Eventually you would wind up with something akin to:

    if computer_weapon.beats(player_weapon)
      puts ""Unlucky #{@player_name}! You lost!""
    elsif computer_weapon.ties(player_weapon)
      puts ""It's a tie!""
    else
      puts player_weapon, "" beats "", computer_weapon, "" - you won #{@player_name}!""
    end

This is the way a human thinks about it, and so it will be easier to understand and thus easier to maintain if it's phrased this way in code.  But that only matters, again according to Metz, if the cost of eliminating the possibilities of the future is less than the cost of meeting the needs of the present in a way that conditionals are replaced with polymorphism.  Good luck!",1512675066.0
catsinspacesuits,"Thanks so much for all the feedback! A lot to digest here, but I'll look into making some improvements based on this advice. :)",1512780709.0
lintmountain,"Rock paper scissors is a nice fit for a ""results matrix"" 

    win_matrix = {
	paper:    {scissors: :lose, paper: :tie,  rock: :win},
	rock:      {scissors: :win,  paper: :lose, rock: :win},  
	scissors: {scissors: :tie,   paper: :win,  rock: :lose}
    }

You then index into the matrix using the hands of the two players: 

    player_1 = :rock
    player_2 = :paper

    win_matrix[player_1][player_2] #=> :lose

If you want to go more advanced you can then use dynamic dispatch in ruby to dynamically call either a :win, :lose or :tie method (supposing those methods exist).

    result = win_matrix[player_1][player_2]
    send(result)




",1513004302.0
d_impious,"Althought not deep, i'm enjoying these posts. Keep it up.",1512680747.0
jrochkind,"1. It is probably not a ""given"". It probably depends. 

2. Three entirely separate instances (ie three separate processes) will use 3x the RAM in any language.  There are ways to try to use fork-and-exec and [""copy on write"" shared memory](https://www.speedshop.co/2017/10/12/appserver.html) to reduce this, so unchanged memory locations can be shared between instances. The popular ruby web app servers all do this. MRI several versions ago was changed to support this better. I'm not sure what other language communities do with regard to this.   The other alternative would be _not_ to run three instances, but to try running one instance with multi-threading instead (the difference between processes and threads is precisely shared memory) -- but unfortunately MRI ruby's ""global interpreter lock"" puts some limits on the usefulness of this. More modernly designed languages are unlikely to have this multi-threading limitation. 

",1512656685.0
jamatthews,"1) The split between interpreted/compiled is not as important as the split between GC and non-GC langauges. Go, for example, can be an absolute memory hog as the GC is tuned for extremely low latency at the expense of high memory usage.

You can restrict the memory usage of Ruby by tweaking some environment variables.

As a side note, using a compiled language for a web app is generally a pain in the ass. Ruby + Rails makes everything 10x easier than using Go and having to use code generation etc for the ORMs, which barely work properly as it is. Unless you desperately need the performance, it's not worth it.

I recently built a web service in Rust. It was only 4-5x faster than the Ruby version and a total nightmare. Before that I had a similar experience with Go.

2) Concurrency in MRI Ruby is both simpler and more complex than other languages. Just like NodeJS, you need one MRI Ruby process per core, however, unlike NodeJS, you can use standard threads and blocking IO in Ruby. For applications which don't spend 99% of their time in IO, this has little downside performance wise and is a lot easier to understand.

Memory usage is not normally such a big issue for a modern Ruby app. The sharing you described can be achieved by using forking, when set up properly, but it's often completely unnecessarily as you can easily fit one process per core into RAM.",1512645748.0
hehestreamskarma,"1. JIRA will always consume more RAM than my blog. Unless my blog is wrong.
2. RAM is cheap compared to development; does it matter?",1512682363.0
jibbit,"I don‚Äôt know, Sinatra is almost the perfect introduction to Rails.. learning Rails to get started with Sinatra doesn‚Äôt sound wise. A good understanding of Sinatra will help a lot as Rails is much, much larger and will introduce many more concepts than Sinatra - it‚Äôs easy to become overwhelmed.",1512637240.0
GroceryBagHead,"It is a good start. Rails is more complicated than Sinatra, but there's way more people using it. So there's more help available.",1512634245.0
geraldbauer,"I'd say if you want to start with Sinatra (you don't need a Rails primer). The Rails Girls have a little Sinatra getting-started guide titled [""Create your first voting app with Sinatra""](http://guides.railsgirls.com/sinatra-app). Cheers.",1512638857.0
elcravo,I found the [rails for zombies](http://railsforzombies.org/) video series extremely helpful to understand how rails works.,1512654060.0
petercooper,"FWIW, Sinatra hugely inspired Express.js and much of the current Node.js approach to building webapps, so the approach of just throwing routes and views around without much prescribed plumbing  or testing is certainly on trend.. and if it works for you and your project, it's a fine way to go.",1512658169.0
robotreader,"Is sinatra confusing you or is web app design confusing you?  Sinatra is definitely a lot simpler than rails, so you might be barking up the wrong tree. ",1512642741.0
,[deleted],1512668253.0
Serializedrequests,"Sinatra is much simpler and doesn't even include a database by default, but ends up being complicated in different ways because you will need to understand a lot more ""bare metal"" elements of the Ruby ecosystem (such as Rack) to deploy your app. If you use it long enough, you will get better at it, and get better at Ruby.

Rails is definitely huge and complicated, but if you keep using it and following the guides you will get better and better as well, and it takes care of way more important things out of the box that you don't even notice until they're gone.

Honestly, I made a Sinatra app once and it just turned into Rails once I got it to do anything useful. I had to create a lot of Rails-ish stuff myself and learn how Rack works and set up a database connection manually. It was a great learning experience, but I wish my final app was a Rails app because it would be a lot easier to deploy and keep working. It took me hours just to get logging working, and the lack of database connection pooling (unless I set it up myself) is a nightmare.

",1512662615.0
andygauge,"I spent years working on Rails before I found Sinatra. I now use Sinatra more. Typically if I need a database back end I use rails and for pure processing apps and endpoints I use Sinatra. Both work well for me in those camps. It would be my recommendation to evaluate your requirements to choose a framework. If you want to serve dynamic information, how do you foresee that information recalled. Those decisions are formed by how the user interacts with the app. 

so ask yourself what you want to make not how it will work. ",1512674639.0
danimoth2,"Hi, I started with Sinatra 3 years ago when I was learning Ruby. It's nice because you get to work with a few files to begin with. I also read Jump Start Sinatra and I might have watched a Railscast about it, but it's so long ago hehe :)

In case you would like more structure on how to learn the things:

- Tried to make a simple webpage rendered by Sinatra.
- Add some styling to that page.
- Make more pages and extract the shared thingies between those pages to another file.
- Add some gems to the Gemfile (I think I added shotgun first so I don't need to keep on restarting the server).
- Add a way to access a database. I found Datamapper (Rails uses Activerecord which I learned eventually).
- Find out that there was something called activesupport which has cool methods so I don't need to implement those things again.
- Add a way to generate PDFS. I added the Prawn gem and I was giggling when it finally worked :).

Small steps :)",1512774766.0
honeyryderchuck,"I completely ignored the Hash#fetch_values introduction. In a way, mostly because there's already Hash#values_at, which already did that, but without the block argument. I still don't understand why the block functionality just wasn't introduced in the already existing method, as Hash already has quite a lot of very similar methods. ",1512582806.0
jrochkind,"I remember when Rails said they were deprecating HashWithIndifferentAccess and would stop using it. Way back in maybe... Rails 3?

Well, that sure didn't happen. ",1512595058.0
geraldbauer,"Hello, reminder: you're more than welcome to send in your articles (about your library / gem of choice) too!",1512552139.0
lotyrin_work,"For a small flat-file based application like this (with no database) I would probably just have all my data like People loaded in RAM at start-up. Unless the people won't fit in RAM, or theres very little chance of having to go through my list more than once, it's probably faster to just greedily front-load initializing them all.

At application load time, simply parse every line of the file, create a Person with the params of that line, then have a collection named something like People that has a method find() that takes a username and returns the Person instance which matches (probably using an internal hash of username to Person).

Even for a little app like this, even if it's not going into real-world use, I'd suggest always practicing password hygiene, and have the passwords in the serialized file be some hash of the user's password, you can add a method like person authenticate(password) for comparing a provided password to the hash.

Now your login method can be DRYed up (no duplicate logic for each user type) and conveniently reads something like it would with an ORM like ActiveRecord.

If you really want to practice with seeking in a file and loading things on demand, or if you think it'd be faster in your use case, then I'd do exactly that, People.find would open the file, loop over lines (read one line at a time), compare the line to the passed arguments (username + hash of password), then if it matches parse the other values of the line into a Person and return that Person.

If you want to gain anything out of that kind of practice though, after it gets to where it's functional, think about how the file is structured and ordered, and if you can come up with a way to design the file format such that you can find where a record starts or ends without reading the whole thing looking for record separators (record length indicator or fixed width records), jump around the file more than one record at a time (fixed width records or an index), or find a specific user record based on username without having to read and check every record (sorting records + binary search or an index).
",1512542685.0
sshaw_,"> The wrong type was passed as an argument

Lately I've been leaning towards using [`TypeError`](http://ruby-doc.org/core-2.4.2/TypeError.html) for this. ",1512522020.0
FooBarWidget,Interesting! Is there a way to be notified about when your blog post goes live?,1512497345.0
musicmatze,Would love to see the results as soon as this is ready!,1512511478.0
ckib16,So great to see articles like this. There‚Äôs a huge unmet demand to show how to use modern JS techniques within Rails apps. ,1512530218.0
midasgoldentouch,"An interesting post. Our Rails app does actually use components in a similar manner, but I would like to know how you get started with creating them.",1512487002.0
greymalik,This is great. What's the schedule for part 2?,1512488050.0
DudeManFoo,great article... but it reminds me how much I hate web dev... :(,1513741047.0
andrzejkrzywda,"A big recommendation from me - this book teaches how we can do good OOP with Ruby. Recommended to juniors and seniors!

I learnt a lot from it.
",1512503579.0
equivalent8,https://www.sandimetz.com/99bottles/,1512478723.0
HerrSubset,Some reviews: https://www.goodreads.com/book/show/31183020-99-bottles-of-oop,1512494522.0
limeblast,"I'm reading POODR right now, and plan on moving to 99B as soon as I'm done. ",1512507680.0
geraldbauer,"Hello, reminder: you're more than welcome to send in your articles (about your library / gem of choice) too!",1512464791.0
coldtub,Doorkeeper gem to set up Oauth provider,1512970296.0
,Take a look [here](http://api.rubyonrails.org/classes/ActionController/HttpAuthentication/Token.html).,1512454716.0
midasgoldentouch,"This is interesting, but I'd like to see an example of where this would be beneficial.",1512454206.0
sprayAtMeBro,"This is a great idea, thanks! (We do something similar (in Python) but it's not nearly as pretty.)",1512457170.0
selfup,Hey this is neat! Thanks for sharing,1512475242.0
PikachuEXE,"I am using jemalloc already
But good to know one more reason to stay on it!",1512437818.0
mbs348,What would be reasoning for not main lineing Jemalloc?  Just historical compatability things?,1512497403.0
FooBarWidget,"I tried glibc malloc tuning a while ago but all I've found so far is a reduction in virtual memory, not RSS. Are you getting different results?",1512479391.0
zverok_kha,"Can do this:

    results = WhatIs.these('Warszawa', 'Kharkov', 'Moscow', 'Bela Crkva')
    # => {
    #  ""Warszawa""=>#<ThisIs Warsaw [img] {52.233333,21.016667}>,
    #  ""Kharkov""=>#<ThisIs Kharkiv [img] {50.004444,36.231389}>,
    #  ""Moscow""=>#<ThisIs Moscow [img] {55.750000,37.616667}>,
    #  ""Bela Crkva""=>#<ThisIs::Ambigous Bela Crkva (6 options)>
    # } 

    results['Kharkov'].describe
    # => Kharkiv
    #        title: ""Kharkiv""
    #  description: ""city of Ukraine""
    #  coordinates: #<Geo::Coord 50.004444,36.231389>
    #      extract: ""Kharkiv (Ukrainian: –•–∞ÃÅ—Ä–∫—ñ–≤, pronounced¬†[Ààx…ërkiuÃØ], Russian: –•–∞ÃÅ—Ä—å–∫–æ–≤, translit.¬†Khar'kov [Ààxar ≤k…ôf]) is the second-largest city in Ukraine.""
    #        image: ""https://upload.wikimedia.org/wikipedia/commons/a/a8/Kharkiv_montage_%282015%29.png"" 

    results.values_at('Warszawa', 'Kharkov', 'Moscow').map(&:coordinates)
    # => [#<Geo::Coord 52.233333,21.016667>, #<Geo::Coord 50.004444,36.231389>, #<Geo::Coord 55.750000,37.616667>]

    results['Bela Crkva'].variants
    # => [#<ThisIs::Link Bela Crkva, Banat>, #<ThisIs::Link Bela Crkva, Krivoga≈°tani>, #<ThisIs::Link Bela Crkva (Krupanj)>, #<ThisIs::Link Topliƒçka Bela Crkva>, #<ThisIs::Link See also/Bila Tserkva>, #<ThisIs::Link See also/Byala Cherkva>] 

    results['Bela Crkva'].variants.first.resolve
    # => #<ThisIs Bela Crkva, Banat [img] {44.897500,21.416944}> 

...and some other stuff. Library and binary, works with any language Wiki. I use it to resolve user-entered toponyms (in many different forms) to map locations, Wikipedia seems to be pretty good for this.

WDYT?",1512407455.0
tk425,Beware sql,1512446490.0
angelbob,"Hi! My name is Noah Gibbs, and among other things, I'm working on Ruby 3. Several people here have mentioned most of what I will, but I'll confirm those and mention a few more.

The main announced thrusts of Ruby 3 are performance, concurrency and typing.

For performance, the work is primarily occurring in the normal Ruby trunk. Matz has announced that he wants Ruby 3 to be three times as fast as Ruby 2.0.0, and there has been great progress in that direction. I'm the author of [Rails Ruby Bench](https://github.com/noahgibbs/rails_ruby_bench), which is (surprise) a benchmark checking Ruby's performance using a big highly-concurrent Rails app. You can see the results on [the](https://appfolio-engineering.squarespace.com/appfolio-engineering/2017/5/12/has-ruby-helped-rails-performance-other-than-garbage-collection) [engineering](https://appfolio-engineering.squarespace.com/appfolio-engineering/2017/8/21/rails-and-discourse-startup-times) [blog](https://appfolio-engineering.squarespace.com/appfolio-engineering/2017/11/29/how-much-faster-is-ruby-250-preview-1) for [Appfolio](https://appfolio-engineering.squarespace.com), which sponsors my Ruby 3 work. You can also look up [optcarrot](https://github.com/mame/optcarrot), which is the other major Ruby 3 benchmark. Mine is Rails-based, while optcarrot is primarily a CPU benchmark. On the [Rails-based benchmark](https://github.com/noahgibbs/rails_ruby_bench), Ruby 2.5.0 head-of-master is around 165% of the speed of Ruby 2.0.0, so progress isn't bad. The [optcarrot numbers](https://github.com/mame/optcarrot/blob/master/doc/benchmark.md) are also quite good.

In addition to normal ""let's make slow things faster"" performance work, there are the two JIT branches mentioned below - Takashi and Vlad have been working independently and together, and at this point it looks like [Vlad's JIT implementation](https://github.com/vnmakarov/ruby/tree/rtl_mjit_branch) is likely to make it into Ruby 3 in around a year, if nothing changes (this is *not* a formal announcement, just a wild prediction, do *not* take it as guaranteed ;-) )... Though possibly without his changes to the way Ruby handles its bytecodes. They're faster, but less compatible and would need more stability testing. [Takashi's YARV-MJIT branch](https://github.com/k0kubun/yarv-mjit) is *just* the JIT without the register-based VM bytecode changes.

For more Ruby 3 progress, I highly recommend looking up [RubyKaigi 2017 videos on YouTube](https://www.youtube.com/playlist?list=PLbFmgWm555yaJalSEHY17E96ChjY-kF2D) and [RubyConf 2017 on ConFreaks](http://confreaks.tv/events/rubyconf2017). They record all the major Ruby conferences, and a lot of the proposals and status updates have been happening as conference talks. The talks are all available entirely free, though some of the RubyKaigi talks are in Japanese :-(

In particular, Takashi Kokubun [gave a *great* YARV-MJIT talk this year at RubyConf](http://confreaks.tv/videos/rubyconf2017-llvm-based-jit-compiler-for-mri), just a few weeks ago. There were several different gradual-typing talks at RubyKaigi and one by Soutaro Matsumoto (no relation) at RubyConf.

Unfortunately, the Guilds-based concurrency stuff that you're curious about is *not* in Ruby trunk. There have been a few good blog posts about it (I like [this one](http://olivierlacan.com/posts/concurrency-in-ruby-3-with-guilds/).) Koichi Sasada, the author of the current Ruby VM, is currently working on it. My understanding is that there's not a current version being shared around. I don't have a good feel for where that's at.

As of RubyKaigi, Matz has said he's not wild about any of the existing gradual-typing proposals, so we're basically at ""still figuring out the spec"" on that one. We've had some on-paper-type proposals and some early implementations, but nothing is currently close to getting included as a standard part of the language.

And those are the big three, as far as Ruby 3 goes: performance, concurrency, typing. There are some small things ""in orbit"" around them like static analysis proposals for typing and benchmarking for performance.

But that's basically where things stand.
",1512408644.0
xc68030,I waited 15+ years for a successor to Perl 5 after Perl 6 was announced. I gave up at about the 7 year mark and declared Ruby *my* Perl 5 successor. Never looked back. ,1512414190.0
yespunintended,"The work on the MJIT branch is available in https://github.com/vnmakarov/ruby/tree/rtl_mjit_branch

I don't know about everything else, but some of those changes can be only ideas at this moment. ",1512398512.0
kmaicher,"AFAIC there is none. Ruby 3 is an idea, toward which the current Ruby MRI development (2.4, 2.5, etc) is heading.",1512397569.0
otakugrey,"So, it seems to be a thing that takes your .txt files and turns them into .md files for Jekyll. Am I missing something? Why not just write into the .md file in the first place?",1512777788.0
geraldbauer,"Hello, reminder: you're more than welcome to send in your articles (about your library / gem of choice) too!",1512391642.0
tylerhunt,"I believe the command you're looking for is `gem build GEMSPEC_FILE`. If you gem is called ""x"", there should be an ""x.gemspec"" file defining it. The build command would then be `gem build x.gemspec`, and it will output the built gem into the same directory as the gemspec (if the gem's version were 0.1, the filename would be `x-0.1.gem`). There's no command line option to have this file generated in another location.

If you're using Bundler to manage your gem (`bundle init` is a great way to create new gems), you'll also have a Rake task to build your gem‚Äî`rake build`. This calls the same `gem build` command under the hood, and then uses Ruby's FileUtils to move the file into the `pkg` directory for you.",1512506720.0
djh3315,Just look at all the wonderful hash/array methods and you'll be ready to start writing 1 line solutions to any problem you have! In all seriousness i've found the best way to learn a language (as an experienced developer) is to do a coding challenge in that language. The Advent Of Code challenge is a fun one currently going on! (https://adventofcode.com/),1512391999.0
losangelesvideoguy,"Just get the pickaxe book and skim over stuff you feel comfortable with. There are a lot of concepts in Ruby that will change the way you approach solving problems (as there are in pretty much any language), and that's the really important stuff to learn.",1512386302.0
uptownjimmy,"There seem to be several well-regarded Ruby/Rails texts that are aimed at intermediate-to-advanced programmers, and they're all on my current reading list: 

Eloquent Ruby - Olsen
Metaprogramming Ruby - Perrotta
The Rails 5 Way - Fernandez
Practical Object-Oriented Design in Ruby - Metz
",1512412064.0
Grimnur87,"I started with learnXinYminutes.com/ruby and devdocs.io.

Started solving problems and never really needed much else.",1512392221.0
iconoclaus,"Do the basic tutorials to familiarizeyourself with the syntax, then get a copy of Russ Olsen‚Äôs Eloquent Ruby. It‚Äôs exactly what you are like looking for. Until i found this book, i was coercing Ruby into a bad version of my previously learned languages. ",1513404098.0
realntl,I always enjoy reading about techniques that apply equally to any programming language. It's something I wish people balanced with their desire to learn new programming languages. Event sourcing is a whole new paradigm for thinking about both software design and architecture -- and it actually brings a lot of benefits I hear FP enthusiasts talk about _for free_.,1512334368.0
remigijusj,Chewy is a very useful gem to use for Rails & Elasticsearch integration: https://github.com/toptal/chewy,1512330071.0
geraldbauer,"Hello, you're more than welcome to send in your articles (about your library / gem of choice) too!",1512291873.0
mikekreuzer,Fork it & fix it. Nobody's going to mind a whole new (working) gem.,1512285328.0
Morozzzko,"You should read the original gem's license to make sure you're not violating anybody's rights.

You could take a look at [Roda](https://github.com/jeremyevans/roda) as an example. Roda is a fork. The author updated license copyrights and the `authors` section of the gem. 

If you want to use this gem via repository link (i.e. `gem 'my_awesome_gem', git: '...'`), then all you should do is bump the gem version.

But if you want to publish it to RubyGems, you should change the name and version, update the `authors` section, and credit the former maintainers and contributors.",1512290871.0
DudeManFoo,"I agree with most everyone else here on the way forward, but I would like to emphasize to the entire community a few things...

* 'IDK if this question is stupid'... it is not... everyone starts somewhere and because people on the interwebs are quick to shoot someone down, people who have talent and a willingness to hop in are all too often intimidated and never even start down the path of contributing... The Ruby community has always seemed like a refreshing exception to this btw...
* 'I have never published gems either' ... I have only published one... and while people say ""it's easy"", it is not nearly as easy as it should be... One thing that would be of great help (I am not qualified to do this) would be if someone that is a prolific and good gem creator would do a great book (are you here prag press?) on creating gems... including how to be kind / respectful to authors who have abandoned projects... and how authors could tell future people that it is ok to take over the code
* People should feel confident about forking or taking over projects!!! I created a gem because I wanted other people to contribute or do a better job than I... AND so I could include it in multiple activerecord projects easily... but I put it on github for everyone to use and abuse... you may run into a tyrant here and there... but they are few and far between... and if they give you a bunch of crap... and you have done nothing to deserve it...  then you are free to defend yourself... I will defend you as well.
* and just so you know... as someone over 50 who understands I will not be here forever... people die... [Jim Weirich](https://www.wikiwand.com/en/Jim_Weirich) the guy who created gems ( and Rake / Ruby Koans / Builder / and did a whole lot of other cool stuff) suddenly died of a heart attack... if people like the OP did not jump in, we would all be screwed...

From another perspective, 95% of the ruby programming community ( and most other communities ) think people who write the packages we all use are magicians anyway... and they see the people arguing about the code much like the ancients would have seen the greek gods of old battling in the heavens ... they think it is all above their heads... don't worry about jumping in... hardly anyone is looking anyway... 

AND LASTLY

Thank you to people like the OP who overcome their fear (many of us are VERY introverted) and putting yourself out there...",1512315438.0
jrochkind,"I'd add myself as an author, leaving the former author(s) there too.",1512279959.0
,"Chances are that if you fork the gem and re-publish it other people will find it useful too, you will probably end up doing a fair bit more work on it than you have to date once issues start getting logged, so you should add yourself as an author, as well as leaving the original author there for recognition of creating the original. ",1512290962.0
peteonrails,"[Here is how I did it 9 years ago] (https://github.com/peteonrails/vote_fu)

[Here is how the guy who took over my project did it a couple years afterwards](https://github.com/bouchard/thumbs_up)

TLDR: As long as the license was MIT or similar, and for good measure you mention your prior authors, you're in the clear. 
",1512362546.0
,"What about inheritance?

Abstract the class variable and methods to a parent class (say Animal) then have all the other classes inherit from Animal.

Maybe I'm missing something in your explanation but this is why inheritance exists, no?",1512239203.0
rubyrt,"First of all, do not use class variables for the mentioned issues. Then, the most quick and dirty approach (i.e. if you are doing some form of runtime analysis) would be

    ObjectSpace.each_object(Dog) {|d| p d}

However, if it is part of your design that each class tracks instances created then you should make that explicit. For example you can use this technique:

    module InstanceTracker
      def new(*a, &b)
        super.tap {|o| printf ""Created %p\n"", o}
      end
    end
    
    class Dog
      extend InstanceTracker
    end
    
    3.times { Dog.new }

However, there is a gotcha: when stuffing instances in an Array GC will never remove them. This interacts in bad ways with the language's design. You probably want to use an Array of `WeakRef` then which you clean from time to time.",1512247871.0
sshaw_,"    ~/code/ruby/itunes_store_transporter_web >cat /var/folders/fn/5bmn_rf52x54hj7lxsw5c7ch0000gn/T/scratch.rb
    class A
      @as = []
      def self.create
        @as << new
        @as.last
      end

      def self.instances
        @as
      end
    end

    class B < A
      @bs = []
      def self.create
        @bs << new
        @bs.last
      end

      def self.instances
        @bs
      end
    end

    require ""pp""

    10.times { A.create }
    1.times { B.create }

    pp A.instances
    pp B.instances
    ~/code/ruby/itunes_store_transporter_web >ruby /var/folders/fn/5bmn_rf52x54hj7lxsw5c7ch0000gn/T/scratch.rb
    [#<A:0x007fe5529b0ea8>,
     #<A:0x007fe55287fcc8>,
     #<A:0x007fe55287f5e8>,
     #<A:0x007fe55287f520>,
     #<A:0x007fe55287f3e0>,
     #<A:0x007fe55287f2c8>,
     #<A:0x007fe55287ed28>,
     #<A:0x007fe55287ead0>,
     #<A:0x007fe55287ea08>,
     #<A:0x007fe55287e968>]
    [#<B:0x007fe55287e300>]",1512262304.0
leddy231,"you might be interested in class constants, they inherit like you expect them to do. (inherited, but overrideable).

    class Animal
    
        def initialize
            @all = self.class::ALL #reference to the all list
            @all << self
        end

        def destroy_all
            @all.each do |x|
                x.destroy
            end
        end

        def destroy
            puts ""I am dead""
        end
    end
    
    class Dog < Animal
        ALL = [] #Important!

        def call_friends
            puts ""I have "" + @all.size.to_s + "" friends""
        end
    end
    
    class Cat < Animal
        ALL = [] #Important!
    end
    
    Dog.new
    Dog.new
    Dog.new
    Dog.new.call_friends
    Cat.new
    Cat.new
    Cat.new.destroy_all


    I have 4 friends
    I am dead
    I am dead
    I am dead",1512318105.0
geraldbauer,"Hello, you're more than welcome to send in your articles (about your library / gem of choice) too!",1512232718.0
availableName01,"things Ruby really needs:

* dump all stracktraces of all current threads (already possible)
* tell me which one of those was running at the time of said dump",1512232402.0
naakhtkhen,The best thing I can see is having a ustack helper that allows dtrace to generate flame graphs.,1513290189.0
keyslemur,OP here - Still trying to come up with more fun ways to play with this one :D,1512206199.0
ImaginaryEnds,"So I did the codecademy site as well as Learn Ruby The Hard Way. I absolutely learned more from the latter, especially not doing much programming before that. I'd built some stuff in Ruby on Rails but as many people can tell you, that's doable without knowing much about Ruby.",1512159721.0
rArithmetics,"great to do, but you will obviously need to do more than that to get to writing programs. I did lots of the beginner programs from lot of sites when I was getting started, and its always great to learn something 3 times to really cement it. Just keep in mind it wont get you to actually writing your own scripts, more just understanding what oyther people are doing when you read their code. 

Odin project for ruby is a great pathway for fuller learning ",1512348771.0
drbrain,"Yes, this is the right path

You can process faster with `Resolv` if you multithread as some names may not be resolved quickly, but don't do that until you have a working single-thread program",1512157204.0
bradtech,"Do you know if there is a way to auto populate a ruby hash key pair value with output of multiple variables.  Trying something like this. 

vips = ['127.0.0.1','127.0.0.2']

domtoiphash = {}

domains = File.read(""C:\\utilities\\domains.txt"")

domains.split("" "").each do |domain|
   
addresses = Resolv.getaddresses(domain)

domtoiphash = hash.new

domtoiphash[:ip] = ""#{domain}""

domtoiphash[:addresses] = ""#{addresses}""






",1512160820.0
bradtech,I'm having issues with keeping the formatting of the original file format the same after resolving the ip addresses.  When it gets passed to an array and writes back to disk it removes the formatting which is needed. Not sure if there is a way to keep the original text file in place & overwrite with the same formatting only removing the domain names that didn't resolve to the VIP array. When it writes to disk now it pretty much just writes the array as is. Maybe I should have approached this with doing a file.read and file.write going through line by line instead of storing as an array minus the domain names that didn't resolve to the VIP array. Open to opinions.   ,1512586762.0
ignurant,"This was one of my favorite presentations from rubyconf. It was playful and interesting. One of his Grand Points was: ""oh snap, I just used Ruby to solve a real, personal problem, instead of work demands, I feel cool."" 

He's right, that is a really cool feeling. My first ""personal solve a real problem app"" was to analyze my different health insurance plan scenarios between the six different potential options between my and my wife's employer. Ruby made it pretty clear what option to pick, where previously I was overwhelmed by the ridiculous menu of options. I feel cool.",1512152835.0
hehestreamskarma,"The easier way would have been to just contact lettermelater and ask them to change the date.

But that would have been no fun.",1512156726.0
xxxmralbinoxxx,Saw this presentation at RubyConf and really enjoyed it. Definitely worth a watch! ,1512158520.0
poppyfeld,Fun talk!,1512162603.0
dancesnitch,What is the presenters name? ,1512164381.0
DarkWiiPlayer,"Since I was never really able to get into TDD, because most frameworks are huge and come with their own syntax you need to learn before being able to use them, I decided to just write something myself that allows me to write ""if <something> then <abort and print stuff>"" logic in a nicer way, and somehow ended up adding more and more stuff until I ended up with this.

I've never really used any testing frameworks, so I really don't know what is and what isn't necessary, but I'm sharing it here for people to take apart and tell me why it sucks (or possibly give nice feedback :D) and possibly even use, though I doubt that last part.

Anyway, please tell me what you think and if anything needs to be improved (keep in mind though that this was only really meant to be used by me before some feature creep happened)

EDIT:

* I know there's a LOT of other projects called nanotest, but I didn't know until after I decided the name.
* Yes, the readme file is missing some stuff. I just haven't gotten around to writing any of that yet.
* The selftest.rb file is poorly structured and some tests are built to fail while others aren't. I know, just deal with it :)
* Of course the args module is almost empty, that's because I deleted most of it and haven't had the time to re-implement it with some more useful stuff.",1512136543.0
geraldbauer,"Hello, you're more than welcome to send in your articles (about your library / gem of choice) too!",1512232740.0
2called_chaos,"Nice read and I like the analogy. But may I ask a serious question? What is it with the scalability? For what people are these articles?

According to Alexa (yeah I know) we powering a site in the top 30k with 1 load => 2 wwws (+DB) with a nginx+unicorn setup. And we are talking 50‚Ç¨/month servers.

And we have so much leeway to take off some load like

* giving database it's own server(s)
* add more app servers (view rendering is still the slowest thing)
* serving assets over a different (load) machine (we already use a different domain) if the gigabit connection becomes the bottleneck

I never even thought about overhead or ""waiting time"" between the machines. Surely it's a thing for google, amazon, etc. but I doubt that this is the article's target audience.",1512151855.0
geraldbauer,"Hello, you're more than welcome to send in your articles (about your library / gem of choice) too!",1512135529.0
equivalent8,"heh,  the Attack is calculated using data from Honybadger (error monitoring tool). The website is clearly a company propagation stunt but still good idea :) ",1512132114.0
,"A lot of this information already exists in tools such as [rubocop](https://github.com/troessner/reek) and [reek](https://github.com/bbatsov/rubocop).

In general, the concepts are fine, but the examples could do with some work (admittedly, it says as much itself). There is quite a lot of non-idiomatic Ruby.

The section about getters and setters is a bit confused. As well as being non-idiomatic (in ruby you would defined `x` and `x=` instead of `set_x` and `get_x`), the advice not to use `attr_accessor` is bad. The example code is exactly the sort of place you should define an `attr_accessor`, or just an `attr_reader` if you really did need to validate the new value before setting it. There is a link to a good article about why you wouldn't want to use them, but the issue the article has is not with the syntactic sugar of `attr_accessor`, but with exposing parts of an object that shouldn't be exposed (I would argue its an extension of the [law of demeter](https://en.wikipedia.org/wiki/Law_of_Demeter)). Hand defined getters and setters will lead to exactly the same issue.

Also, you should avoid setters as much as possible. Its much better to define all the values up front and use an object that can't change than it is to pass around an object that could be in a partially completed state. I will admit there are times when they are needed though.",1512116262.0
zverok_kha,"Porting code style recommendations from another language, while ignoring all existing in Ruby code styles and tools? 

Promising idea!",1512119074.0
Enumerable_any,"The bad example for [side effects part 1](https://github.com/uohzxela/clean-code-ruby#avoid-side-effects-part-1) doesn't work since `name =` defines a local variable and the right side tries to access that local variable which is set to `nil` by Ruby. Even without that strange `a = a # => nil` behavior it would still not work because setting a local variable in Ruby will always shadow the outer variables. If you really want to use global variables you need to use them explicitly: `$name = ""foo""`.",1512128347.0
Enumerable_any,"> In Ruby, primitives are passed by value and objects/arrays are passed by reference.

This is wrong in two ways:

* Everything is an object in Ruby (TM), there are no ""primitives"".
* Everything is passed by value, but these values are references to objects.

Call by reference would allow you to do this:

    a = 2
    
    def foo(b)
      b = 3
    end
    
    puts a # prints ""3""

See also this StackOverflow answer for Java (which works the same way): https://stackoverflow.com/a/40523",1512128748.0
hehestreamskarma,"StackOverflow and Google might be a better place for this.

https://www.google.com/search?q=Watir%3A%3ABrowser+unable+to+find+chromedriver",1512089807.0
andrevan,Try the chromedriver-helper gem https://github.com/flavorjones/chromedriver-helper,1512104077.0
