author,comment,timestamp
cmcaboy,"Downvoting this for the non-descriptive title and the poorly constructed description.

&#x200B;

You will want to reference the documentation of a navigation library. If you are using React Navigation, check out stack navigator. You could also use a modal.

&#x200B;

&#x200B;",1543606914.0
xrpinsider,Did you try React Navigation V3? It may be fixed in V3.,1543680718.0
kaberc,"Definitely Animated-API, animation's native-drive and wix'es react-native-elements. Also you could try typescript.

Sometimes they require some basic knowledge in swift and android java.",1543587721.0
upkeys,"Yes i'm with that, getting used to the way of manually liking an app in xCode can save you a lot of headache later.",1543602568.0
rickisen,"Redux!

I see way to many people out there who claim to know react, but have no experience with redux, like wtf. 99% of all react apps use it, it's almost synonmous with react-app. Add to that, it's also very tricky/dangerous to try and figure out whilst at the same time using it for real.

After that, react-navigation or some other navigator based routing lib. routing/navigating works quite differently from webapps, so it's good to learn.

Also get familiar with the debugger, hot-reloading and when it works/not works. Seen a lot of devs who really struggle with working on react projects because they keep using a slow/bad workflow. Check out react-native-debugger, it's awesome when you get the hang of it.

Also, if you are using create-react-native-app, or expo. Try ejecting your app and install some libs that require linking. And checkout how you build the app in xcode/android-studio, and maybe change the splash screen etc. Just so you get a feel of how complex react-native without expo can be like.",1543590740.0
mazzaaaaa,"I know it might be late but a few months ago I worked on a similar thing. 
I used react-native-gesture-handler and reanimated in that specific case but you *should* be able to do it with Animated and a classic PanResponder.  

I’ll try to find the code.

Btw from my experience you should always use useNativeDriver from the beginning if you’re planning to work with animations (especially if they’re tied to gestures). 

Also, William Candillon’s YouTube channel has a bunch of useful video on the subject: https://www.youtube.com/user/wcandill

Edit: well, my bad, I didn’t read the conclusion. 
Glad you were able to make it work :)",1543647726.0
kaberc,What is your experience with the native-driver? Was it just add-an-option thing or was there some difficulties?,1543587208.0
sregg,The video has been removed by the uploader,1543594941.0
sregg,It's here now: [https://www.youtube.com/watch?v=cA0A9eYPNpQ](https://www.youtube.com/watch?v=cA0A9eYPNpQ),1543595039.0
RarePush,is it worth watching or just a rehash of their blog posts from when they announced they think RN sucks now?,1543630924.0
Interloper949,"Yes, in my experience you get a lot of errors with gradle. Doing a 'gradle clean' fixed most of them for me.",1543541029.0
nickmcsnapz,Gradle issues are not really any different from RN to native Android.. you still have to understand Gradle both ways.,1543556143.0
VIM_GT_EMACS,"And if its any consolation, it is my experience as well with iOS. It is something you will need to build up a thick skin to if you want to do RN development. I was pushing for us to try and do more RN at work, and it could still potentially work out well one day clearly other teams have overcome obstacles with RN. For now though, I do Swift for apps at work and RN for my personal pet projects.",1543544914.0
ahartzog,Yes,1543549981.0
shubhamdeol,"I am developing react native apps, since last 5 months, We are a startup and I am the only one front-end developer there, I face problems daily. One thing is sure, expo is doing great work to help us manage our project well, Project looks so clean with expo. I never got stuck in any bug for more than 3 or 4 hours. We have three apps, one for users, one for the merchants and another third one for delivery pilots. our user app got 700 downloads in one day, and it did not crash even at a single place. which I am very proud of. 

There are few features for which we need to detach our app from expo, honestly, I don't want to detach,but sadly we are gonna detach. now we have to deal with all the java and swift mess.  ",1543555617.0
imizaac,Simulators are the worst. It might be better if you only test on device. ,1543566664.0
kbcool,"It sounds like you're probably just thinking about it the wrong way. It's not a camera library's job to deal with rotation, cropping and other image manipulation. It's just there to help you take and/or find images.

Once you get past that you will find there's a decent ( I'm not going to say it's amazing) ecosystem for image manipulation.

One of the simplest yet I think coolest ways is to simply render the image in a view and apply whatever styling you want to it then use https://github.com/gre/react-native-view-shot to capture an image of the view and save it to disk or keep it in memory as base64.

There are other ways to do it but for you it sounds like it's the one package solution.",1543558054.0
HumbleX,"If all you need is rotating an image, js give it a style with the rotation and the degree of rotation. ",1543529271.0
VIM_GT_EMACS,"you pretty much summed up one of the reasons why i scrapped RN for a current project and just did it in swift :(

camera and sound shouldn't be so damned tedious and difficult to work with in RN. ",1543529383.0
wolux,"Turns out I was missing these 2 lines in the `android` section of `app.json`:

    ""publishBundlePath"": ""android/app/src/main/assets/shell-app.bundle"",
    ""publishManifestPath"": ""android/app/src/main/assets/shell-app-manifest.json""
",1543572438.0
brentvatne,hey there! can you post this to [https://forums.expo.io/](https://forums.expo.io/)?,1543538571.0
thistoohard,Stop using Expo. Shit is trash. ,1543528768.0
LEO_TROLLSTOY,"I don't have a solution for you but I do have advice from experience.
My bet is that you are getting unexpected response from firebase and Im betting your Firebase config is wrong for production mode so its not returning you whatever should be in ""o"" object, but its returning you error message or null. Doublecheck is your FB production config on device is ok and your FB config on the server. Make sure all used keys are production keys (and dont have some limitations) and that all url's used are production url's and all the flags are correct. Turn off any sandbox mode there might be both on production and in app config files

Im 70% sure its a FB production config issue rather than some JS or Native thing.

Also,  dump response from FB into logcat as that would be a step forward to finding the issue: react-native log-android",1543487940.0
brusername,"I must have done somerhing right/wrong now... Been trying to set some config in Android Studio, and now the react-native run-android from terminal there returns the very same error on my device: undefined o.lengrh thingy.

Seems to have recreated the standalone apk install error also when I run the command which installs directly from Android Studio.... So now nothing works..haha...hmmm

So in a way... It might seem like a minification error. As of the release version of apk seemd to be minified, and now the Abdroid install version also seems to nag about the minified o.length
",1543506211.0
jshgn,Without looking at any code I recommend using https://github.com/SoftwareMansion/stack-beautifier/blob/master/README.md to see the real stack trace.,1543506870.0
cmcaboy,"I had this issue as well, but it ended up being an issue with my environment variables. They were not getting passed to my apk build process. After solving, it worked just fine.",1543511319.0
piggerty,"I’ve had this happen to me before due to how production builds are bundled. For example, the debug builds are lenient in that if you forget an import in one file but do the import in another file it may still work but it’ll crap out in production. 

Eslint should catch most of those...",1543520674.0
krondog4090,"did you look at possibly updating fb to : ""firebase"": ""^5.5.5""?

i'm still trying to debug on my end",1543502914.0
brascene,"According to the article content, the title should be just 'Flutter'.",1543483773.0
julamme,"I'd like to add to the comparison chart that:
(Obj-C/Swift and Java/Kotlin for native modules) also applies to Flutter and that Flutter can be ported to desktop too (https://github.com/google/flutter-desktop-embedding)",1543487213.0
cmcaboy,The article doesn't load for me... downvote. Sorry!,1543511493.0
kbcool,Still waiting for RN vs Visual Basic article ,1543559396.0
ccheever,"hmmm.... from looking at the screenshot you posted, it's possible that some resource that needs to be deleted or changed is still being locked by the operating system. restarting your computer might fix that. did you try that?

&#x200B;

if you tried that and everything else you listed, can you share the versions of stuff you have installed and a more complete log of your error messages and what you did? it's hard to tell what's wrong from your description, esp. since things were working for you earlier.",1543481460.0
HumbleX,"Try installing expo cli with -g (globally) tag coz it may not be recognised if you not calling it from an expo project. 

Ps: don't really work with expo 😓",1543482620.0
cmcaboy,"The following recommendation is just my opinion based on my own experience.

&#x200B;

If you have the time and resources to learn/use graphql, I would recommend doing so. It has so many benefits, including the reduction of complexity on the client. Your client (or clients) will just need to access a single endpoint and you get to tell the backend exactly what you want so there is a reduction in network bandwidth. In addition, some of the graphql clients are very rich in feature functionality. For instance, Apollo client offers client side caching and optimistic UI out of the box, which are both very powerful. One of the downsides is that since it is new, the documentation isn't as good and there is not a lot of stackoverflow content thus far. So if your engineers are not as proficient, it may not be a good choice as you may end up in no-mans land with some of the issues you run into.

I tried serverless with Firebase Cloud Functions (in beta at the time of my use), but the response times were too slow and I was unable to use subscriptions with it so I switched to a dedicated server. Most of the serverless vendors do not support GraphQL subscriptions at the time of this post so please keep that in mind. You may consider using one of the BAAS vendors, such as Hasura, PostGraphile, Appsync, etc if you don't want to manage your own backend. Prisma is good if you want a wrapper around a postgres database.

A few other things you should consider in my opinion

1. Automated deployments - Fastlane seems to be the go-to solution for this
2. Codepush for over-the-air-updates
3. A/B testing tool - Codepush or firebase remote config (I haven't done this quite yet).
4. A crash reporting solution - I use Sentry, but you could also use bugsnag or crashlytics (not recommended for RN)
5. Performance monitoring tool - Firebase Performance + React Profiler component work well here.
6. Push Notification Service - Firebase Cloud Messaging or Onesignal work well
7. Typescript! - Not required, but it can make you more efficient in the long run.
8. Automated tests - Jest and react-native-testing-library work well.
9. A CI tool - Valuable for teams. Bitrise is great so is travis/Circle although my experience is limited.
10. react-native-config - This allows you to easily switch between mock/prod environments. However, I would recommend looking for alternatives as it seems the library has been abandoned.

I hope this helps!",1543431756.0
Laboratory_one,"I’d use redux for my data layer because I have experience with it. But I’d want to use graphql. 

I feel like there’s so need for css-in-js since RN implements a subset of js. And there are a lot of gotchas regarding this when you’re cross platform. But styled components are nice. 

For a backend, likely firebase. If I had to have my own API, I’d roll it from node. If it had to by highly concurrent, I’d try Go. 

",1543469580.0
waybovetherest,"if you're building a large scale app, you are better off not using expo",1543426176.0
kdesign,"Whatever you choose, I would not use expo. You are already locking yourself into one abstraction layer which is RN, I would definitely not add one layer on top of that which is Expo.

Also GQL is nice and all, but if you are only serving your app, it’s really not worth the effort, imo. Perhaps it’s well suited when you have multiple channels (web, mobile etc) powered by the same back-end. But for a single channel, you are again adding an abstraction which will backfire in the future.

Also, I would not go with plain JS. So for both the back-end and front-end I’d use TypeScript.",1543428999.0
kbcool,Just a note this gets asked a LOT here so if you want more answers search the archives.,1543440409.0
nohtyp,I always start with react-native init. Never needed Expo or anything else really. ,1543428140.0
jacobp100,I use `react-native init` because I almost always end up writing native code too,1543438254.0
anewidentity,"Ejecting an expo app is extremely unsupported. They leave you behind, with no instructions on updates. Some projects that were on an ejected expo app would take us a month of a developer's time just to keep updated with the version that expo supports. They switch everything, including folder structure, all of the content of build.gradle, and ios project file with no information on what is changed and how to update currently ejected apps.  For example, the update from Expo 23 to 24 is literally impossible (with no exaggeration) We ended up switching to \`react-native init\` after a month of two developers trying to update expo for an entire month and failing.",1543451432.0
boki345,"Good question and I do not want to hijack the thread, but my question is also closely related to the TS's question. If we want to make an open-source component that can be consumed by the community can we build it with expo or should it be done with react-native init?",1543426193.0
davidpaulsson,Those xcode errors are likely due to the new build system that's default as of xcode10. You can use ”legacy build system” in your xcode project settings and it should work. I don't think expo’s fork of RN supports the new build system yet (RN 0.57 does though).,1543432503.0
cmcaboy,"It looks like this is a post from an affiliate marketer. Are these allowed? If so, I'll start marketing my own courses here.",1543427020.0
IminPeru,how good and up to date is this compared to the one by Stephen Girder from Rallycoding?,1543425222.0
serious_case_of_derp,I like Max as the teacher but can any one vouch on the quality of the course?,1543425655.0
xrpinsider,"Lets say that your array is within the constant data. Inside data there’s an array called people.

The data for the Flatlist would be data.people. 

The example you gave by the way isn’t a array with objects, its an object with objects.",1543419562.0
icekeymon,"You need to analyse Expo to determine if it's right for you. Do you foresee that you'll be ejecting? If so, don't use it. If you're comfortable with the APIs provided by Expo and they fit your requirements, use it.",1543414875.0
anewidentity,"You need to list your app features, as in what it needs to do, if it needs in app purchases, camera, microphone, Bluetooth, etc and how it uses them so that anyone can help you. Are you building an mvp? Hoe big is your team? How much budget do you have? ",1543416448.0
HeerouYuy,"depends on the library, some require cocoapods, do you want to use a particular library? or do you have a problem with cocoapods?",1543415862.0
HighFibreDiet,"If I have a Podfile and I want to link without using Pods, I usually rename my Podfile temporarily, run  react-native link, then change it back. A bit hacky, but it works.",1543422307.0
ahartzog,"I found that cocoapods just added a layer of devilry and confusion; I'd avoid it unless absolutely and explicitly required by a library.   


Everything we've used in our sizable project has linked just fine with the react-native link manager (it has a name, I just can't recall it right now)  


I think most of the references to cocoapods refer to a slightly older era when cocoapods WAS the preferred way to manage iOS dependancies. ",1543419524.0
PuzzleMeAJigsaw,"I'd suggest doing some free tutorials or have a read through React webpage on how it works and all, it won't take long and will give you a basic idea of how React is meant to work. That's what I did when I started using React at work and it helped LOADS. Also good to know the lifecycle - this page has decent info on both state and lifecycle [https://reactjs.org/docs/state-and-lifecycle.html](https://reactjs.org/docs/state-and-lifecycle.html); 

&#x200B;

Short answer though, a state is tied to your single component - you can hold that components data, visibility in the state. Props are used to pass data from parent to child or by the component itself. You can change state within the component itself - but you cannot change the props directly. ",1543402259.0
demoran,"Props is data a component expects outside of itself.

State is data a component expects inside of itself.",1543409964.0
nickmcsnapz,"1. Use state in a component
2. Pass state down to a component inside the above component
3. That state now becomes this.props in the component that it got passed down to.

That's pretty much it. Props are just state passed down.",1543407392.0
GoyaKing,"In order to conceptualize state and props you must understand how components work on a web page. For example, you want to nest components when possible to have disjoint web views. Visualize that, a facebook friend list is one component that displays another component that displays the friends name. Where the list is the parent component and the name display is the parents child. Parents pass pops to their children if you choose to. Every component has a state if declared to have one.",1543438593.0
lwansbrough,"Finally, now I can put my React in my React using React Canvas.",1543391081.0
jacobp100,Awesome! What are the trade offs vs a web view? Does this trade rendering performance for memory usage?,1543415932.0
kbcool,"The post title is very misleading. It's not a native canvas implementation it's a JavaScript implementation.

Not the first either. Plenty of prior examples.

Also, as usual, you're tied into the expo ecosystem as per ""the evil masterplan"" so most people will pass on it. ",1543380020.0
ahartzog,"Upgrading JSC is super easy and massively increases performance. 

The only downside is that you’ll no longer support devices running anything below android 5.0 lollipop

I’d recommend moving forward with mobx 5 and updated JSC",1543375765.0
boomdoodle,"I came from using redux to my first project with mobx last week and ran into the same problem. You need to add es/symbols to your android index. I also downgraded to mobx 4 and can’t say I miss anything from 5 just yet. 

I also gave up on using decorators and use functional syntax instead - I don’t think it is related to the downgrade, I just didn’t have time to fight the build system. 

Another thing we found during development was that passing parts of the store as props didn’t cause rerenders quite as we expected so we ended up importing the store instead of passing it as props. ",1543378486.0
anewidentity,"No. You can eject and use third-party camera libraries, or fork one and make whatever native changes you want to do to it. ",1543416520.0
ramzez_uk,Right. You can also just eject and use it for other things. ,1543356904.0
tizz66,"I assume that color gets applied to an image inside RideTimeIcon? If so, you'd color it by using `tintColor` instead - `color` is just for text.",1543348475.0
pyzez,"You can use both MobX and Vanilla React, as well as Redux. Is there any reason in particular you want to use MobX?

It sounds like you want Redux. You have access to the store on any screen. 

Check this guy, he's a legend. 
https://www.youtube.com/watch?v=_MQq2d63jTU",1543356955.0
VIM_GT_EMACS,im still wondering why Wix used my little pony demo images for react-native-camera.,1543361730.0
Ambitious_Individual,"Prior to registering RNN's \`AppLaunchedListener\` I import a `registerNavigation()` function from a `./navigation` folder handles registering all of my component views. When registering each component view I use RNN's `registerComponentWithRedux` which happens to work perfectly fine with MobX.

I also keep one `RootStore` which contains all of my other stores. Then in my `App.js` when I register the \`AppLaunchedListener\` I hydrate my store(s) (from `mobx-persist`) and then check if the user is logged in. If they are I show the Main root with tabs otherwise I show the Auth component.

This allows me to inject the store into any component I want and I can also access any store through the RootStore.

See a quick code example I whipped up here: [https://codesandbox.io/s/8xz481jlj2](https://codesandbox.io/s/8xz481jlj2)",1543375636.0
boki345,What do you think is the biggest challenge to mastering animation in React-Native?,1543619243.0
HumbleX,"If you want to do a project in react native and use MobX.. I can't be of much help. But if you are open to learning and familiar with react state and props concepts then give a try using react native + react-redux. 

You can always get the boiler plate and set up really quickly too. Btw
Redux has one global store so no more injecting screens and no more mutable state. 
You can think of it as a big state object which is your single source of truth.

Most people would argue that React and Redux themselves have a good learning curve, but both together can be overwhelming. So as alternative use MobX if you are new to React.",1543347560.0
tizz66,"If you need the parent to be informed every time the value changes, I would say option 2 is probably fine. It would follow that if the parent needs every change, it's going to act on that change and rerender anyway.

However, if the parent just needs the value entered once the user is finished (e.g., when submitting a form), you could pass a callback function to the child component that is only called when the parent is ready to submit/process the value (or perhaps onBlur if that'd suffice).

This is more of a general React question, so you might also want to crosspost to /r/reactjs and you'd probably get more suggestions there :)",1543345247.0
realbriank,https://reactjs.org/docs/lifting-state-up.html,1543345709.0
fragglerock,"I have seen similar looking errors...

I think I cleared them by deleting the build folder in ""android\app\"" and also I think something was locking files in there (the folder was in dropbox maybe) and that seemed to cause issues. Could have been anti-virus though..

If you use `react-native init mysuperproject` does it work (ie is it Expo being weird?).",1543336220.0
realbriank,"Not sure what your issue exactly is but I have two general tips for react-native on windows. First is installing https://www.npmjs.com/package/windows-build-tools. This helps make sure node libs get installed properly.

The second is that you are probably using git and you might as well use gitbash. Using a unix-style command prompt might help some things.",1543339732.0
aryojaam,"I have a similar problem on Linux and I think is a watchman issue. Have you tried `watchman shutdown-server` and running expo again? I have to fix it like that every time cause I think I didn't install watchman properly (tried many installation guids, no succes) ",1543343383.0
forwinderr,I can’t pull a —version ,1543343577.0
anewidentity,Already posted below,1543343763.0
localhost8100,"There is more efficient way to do this. You can create bridge between obj-C and react native and perform device check in obj-C. It will give you device details instead of doing it this way. 

",1543348543.0
MrsRedBull,"You really should be using the iOS safe space measurements instead. Explicitly checking the device like this is rarely the correct solution. As it will most likely break in the future.

For example, when Apple renamed Plus devices to Max a lot of apps landscape functionality broke because they were looking for “plus” in the device name. Looking at you Microsoft Outlook team. Where the apps that properly used screen size classes just worked.",1543349446.0
saghul,Doesn’t SafeAreaView already take care of this?,1543351452.0
srg666,If you're using your own domain then just setup certbot. There's really no justification for not using https in 2018. ,1543344161.0
m-tymchyk,"If you create iOS application, you need to add new domain at `App Transport Security Settings -> Exception Domains` in your `Info.plist` file.

[https://ibb.co/bsCkX8j](https://ibb.co/bsCkX8j)",1543332367.0
davidpaulsson,By default all HTTP requests are blocked on iOS. ,1543338579.0
alien3d,"Create cert from here  [https://letsencrypt.org/](https://letsencrypt.org/) .[***Alternative***](https://www.google.com/search?rlz=1C5CHFA_enMY775MY775&q=Alternative&spell=1&sa=X&ved=0ahUKEwi56u2ykvbeAhXGT30KHZu0CbcQkeECCCsoAA) get a domain and cheap ssl from namecheap and host vps.

\*\*If you wanted to host yourself.",1543375710.0
alien3d,"If  just want to testing local and osx and latest mojave .This page might help you a bit . 

[https://donatstudios.com/Self-Signed-Certificate-On-macOS-Apache](https://donatstudios.com/Self-Signed-Certificate-On-macOS-Apache)

&#x200B;",1543379468.0
ahartzog,"You can run dev builds directly while connected via usb sure. 

The next step, unless I’m missing one, is to upload it to the App Store via archive in Xcode and then release it via test flight. This is a nightmarish road filled with pitfalls.

Maybe expo has something simpler though?

Good luck!",1543292178.0
mikeswelch,AFAIK you cannot do this without a Mac.,1543292276.0
pitbullprogrammer,"Not legally.

To run Xtools (which you use to run your IOS app) you need genuine Mac hardware, per the Apple EULA (end user license agreement).

The closest you can do legally is rent usage on a Mac in ""the cloud"". I have no idea how frustrating this is but I never tried it since it sounds like a nightmare.

This is 95% of the reason why I bought a Mac- I wanted to develop for both Android and iOS.",1543294901.0
HootenannyNinja,"If you want to test it with prod settings you can do an archive, then in the organiser export using the development settings. Once that is done dump the file into the device in itunes. You can also use a service like diawi which can make things a little simpler.",1543356799.0
yonnyy,"React Native is pretty nice, but if you run into a problem and you have no idea of programming or ios hardware or how the things generally work, it will be hard to under stand and fix those problems. Althogh javascript is a nice language to know. 

Python is a great language to start with, but i don‘t think that you can use it to build apps. Instead python is very common in machine learning and AI, if that sounds nice to you, you should give it a try. 

If you insist on building you iOS app and you have to learn a new programming language, i would go with swift. There are a lot of tools to get started with it and some very nice tutorials. And of course a lot of information from apple itself. ",1543268723.0
alien3d,"React Native is nice if you have javascript background but if you have 0, i don't think it was good idea. Learn javascript  then es6,es7 then react then react-native. 

If you have little background learn  swift and kotlin and then learn back react-native, because it much easier for familiarisation between both world.Don't over think easy learn react-native so you don't need to know android studio,xcode nor you can't run away on it. ",1543301767.0
devsethwat,"I think you should start coding for iOS if that's where your interests are at. You'll have a lot of fun learning if you work toward something you enjoy. I wouldn't worry much about which language you're working with, you'll learn a lot of fundamentals that are common to all programming languages no matter where you start.

Do what you enjoy! Sounds like that's iOS!

If you're serious about investing some time, look into Udacity, they have great bottom up courses.",1543281104.0
michaelalex3,"I’m a software engineer and in my day job I mostly do java/groovy.  I’ve been learning RN on the side because it interests me.

I would not recommend it if you’re just getting into programming.  It’s not that the concepts are crazy difficult, it’s just the constant errors that you’ll run into that can be difficult to debug.  It seems like at least once an hour I’ll run into some weird error that leads me through a trail of GitHub issues to finally find a workaround.  This isn’t as bad when you’ve been programming for a while, but it’ll be really difficult when you’re just starting.

I’m not sure if Swift is better since I haven’t used it, but I’d assume it is.  If I were you I’d start with that.

Edit: if you don’t specifically want to make an app and just want to learn programming in general I’d say just learn python ",1543503352.0
dip-my-nuts-in-sauce,"The error tells you exactly what the problem is. You don't have GIT installed on your PATH. First, make sure you have git installed. If not, install it and try install react-navigation again. If you already have it installed, google ""how to add git to windows path"".",1543244289.0
fuck-yeah-guy,"holy shit man, just read the error. It clearly says NO GIT. install git. done.",1543247315.0
ab032tx,[https://stackoverflow.com/questions/49687848/fail-to-install-react-navigation-getting-git-not-available-error](https://stackoverflow.com/questions/49687848/fail-to-install-react-navigation-getting-git-not-available-error),1543244800.0
dieselpowa,Do you know how to read?,1543249051.0
thistoohard,"Shouldn’t load 1,500 map markers at once? This is the dumbest article. It’s all common sense. ",1543320609.0
xrpinsider,"I’m not sure if you can cover the system keyboard, but my guess is a hard no. It wouldn’t make any sense.

You can however make a custom keyboard and let people use it in their system settings.",1543217548.0
PuzzleMeAJigsaw,"I don't know of a react-native way, but you could technically 'hack' around the issue, with having a stylized view (that looks like an input field) and on click of that view - you bring up your own implemented keyboard view, rather than having an input field that by default being up system keyboard. ",1543222499.0
killerbytes,That would make a nice keylogger ,1543239707.0
TheKingHasLost,"I haven't tried this, but Wix's [React Native Keyboard Input](https://github.com/wix/react-native-keyboard-input) seems to do the job.",1543242065.0
denisinla,Try looking into redux-saga/reselect for a project like this.,1543207081.0
ydsood,Little confused when you say each timeline. Are there multiple timelines being maintained on the front end for the same user ?,1543239772.0
jahans3,"For most cases data like this should not be put in the global state. Ideally you'd want all the initial data returned in the first API response (e.g. number of likes, number of comments, and a couple of comments to preview), then larger bits of data fetched later (e.g. all of the comments). If you wrote the API yourself I'd recommend changing it so it does the above, as this minimises requests needed to be sent from the client and will make your front end logic more simple.

I second the suggestion of using Reselect (if you must use Redux) as it memoizes data and since you're doing expensive tasks you'll need this as your app grows. Ideally though, you would restructure your API and likes/comments would live in the local state of each post component.

Also I think your understanding of asynchronicity in JavaScript may be a little off. You can't merge things in an asynchronous way, JS is still single-threaded and merging two sets of data will always be a synchronous task. When something happens asynchronously the result still needs to be handled in a synchronous way, if that makes sense. Lets take something async like a network request, that takes an indeterminate amount of time to resolve and obviously we don't want to lock up our app so we carry on with the flow and leave a handler to call when we the request resolves. When that handler is called it is added to the call stack just like any other function, unfortunately if you want to make things ""async"" arbitrarily you'd need a multi-threaded language or would have to create a service worker (which is overkill in this case).",1543241600.0
pyzez,"Use axios. Use await /async on the functions if necessary. 

Handle your errors. ",1543219529.0
gimmeasandwich,what?,1543189007.0
HumbleX,"React is for the web and react native is for mobile applications. Both use the same concept of components which allows more modularity.
Both are the same just used for different platforms. ",1543192447.0
ramzez_uk,Check number of stars. Check what issues it has. Check when it was last updated. That’s the checklist I follow. ,1543179054.0
xrpinsider,"You don’t want to start using dead libraries and this one looks pretty dead to me. There hasn’t been a release in over one year.

Do you really need the options they provide? If you do, why not fork the library and continue updating it yourself.",1543179012.0
jestzisguy,See if any of the widget libraries (e.g. NativeBase) have what you want.,1543182431.0
janithaR,Why not just try them all and see what fits your use case best?,1543195756.0
too_much_exceptions,"Look into gh repo: number of stars, number of issues and community around it.
Along with these criteria, I tend to select the ones that: 
• Have a good Android support, or no major issues with Android
• Good performance
• Easily replaceable and keeps my code clean.

Regarding native base, it depends a lot on my use case.  If I only need a single small component, I tend to author it.",1543184380.0
stevula,"If it’s any consolation, I’ve been using react-native-slider since January without any problems.  Then again, we haven’t updated React Native at work since January either and our use case is pretty simple. 

It’s a good idea to stick to native builtins when possible. If you can’t do that, try to stick with pure JS implementations. Be very conservative about bringing in native dependencies. ",1543191927.0
ogv11,"When I need libs from 3rd, I always try pure JavaScript implementations, it's the only one I can edit myself if necessary haha",1543195725.0
icekeymon,"I use [https://js.coach](https://js.coach) to find a list of libraries. It's sorted by popularity and gives you an option to see stars, number of downloads from npm within 30 days, number of dependencies and which platforms are supported. ",1543312344.0
fragglerock,"Thanks for your input, lots of good ideas... It is good to think about this more than ""suck it and see"" :)

",1543197224.0
tinyOnion,think long and hard about adding a dependency if you can avoid it. dependency hell is a thing.,1543198876.0
tizz66,"I'm not sure I follow - why are you creating new routes for every category? Normally you'd have one screen for your `List` view and another for your `View` view. When you navigate from the `List` view to the individual category, you pass in the category ID as a param, and then show the appropriate items by filtering from your store (redux, context or whatever you use).

This still gives you a lot of flexibility. Each of your category views can be different - just render different components in  the category view screen, depending on the category.

All that said, you can create dynamic navigation if you definitely need it. Create a component that builds your navigation, and do something like:

    buildNavigation() {
    	// Build your StackNavigators however you like, by mapping over
    	// your redux store, props, etc.
    	return createStackNavigator( ... );
    }    
    
    render() {
    	const MyNavigation = this.buildNavigation();
    	return <MyNavigation />
    }

When I do this, I actually store the navigation structure in the component's local state, allowing me to precisely control when it updates based on the changing app environment at runtime (e.g. a user logging in, or toggling some app settings etc.):

    render() {
    	return <this.state.MyNavigation />
    }",1543188481.0
LilSnippets,"From the error it looks like you might've done something like`AppRegistry('AppName', () => MainAppComponent);`

Which is invalid. Ensure (probably in your main entry index file) you register your main component as `AppRegistry.registerComponent('skimitar', () => App);`",1543161638.0
thistoohard,Stop using Expo. Simple. I don’t understand why people even bother with it?,1543205589.0
xrpinsider,"You can stop using Expo at any given time, but these problems are not Expo’s fault.

Expo works perfectly and if you get those error messages all the time the problem may be within your WiFi network.",1543155180.0
anewidentity,You could try moving away from expo but expect 10x more problems like this. ,1543240374.0
pyzez,"What's the problem dude? It's good stuff. I haven't ran in to the 'please go to home and try again' with what you're talking about. 

Yes, we need to reload a lot to get it working - that's the nature of coding. Are you redirecting to the right screen? ",1543152758.0
TakinALickin,I had some trouble at first too.. Just soldiered through and it started working decently.,1543187835.0
gonzalolog,"OP it's right but quite vague to explain, because he's right, expo client it's kinda bad, sometimes it works awesome but sometimes it doesn't work at all, like showing old copies, not connecting, blank screen

Most of those problems just solves by restarting expo and the client
I've heard that expo it's the best option until it starts to get nuts ",1543162819.0
funkyfourier,"It is impossible to foresee the future. Who knows what Google and Facebook are planning or having up their sleeves. Also, we do not know if some other company or OSS project pops up at some point with something new that wipes the floor.

I have just finished my first app (at work) in RN. I have investigated Flutter a bit, but not used it, and here's my conclusion so far:

RN's strength is that it uses native widgets. You can piece together pretty much anything. Use RN as an UI for your game? Fine. Use RN only for some parts of your app? Fine. Discover some native iOS/Android widget you want to use in your app? With some glue work, fine too. None of these things would be as easy, or even possible, in Flutter.

But that strength comes at a cost. I have never struggled as much with dependency hell as I have in RN. First you've got the javascript modules managed by NPM. For the most part that works fine. But then there are native dependency managers and build systems in Android/iOS where complications more often happen. Run react-native link, move fast and break stuff. 

It must be said, though: Once the dependencies and build systems are worked out it works pretty well. I am liking JSX a lot and ES6 makes javascript a lot less horrible.

I think Flutter's strength is that it is self contained, kind of like a game engine. The consequence of that is that you can't just take any native iOS/Android component and slam it in there. One great example is slippy maps. On the other hand you probably won't have to deal with dependency and build issues nearly as much as with RN, and performance will be top notch as opposed to RN which uses the horrid javascript bridge to communicate with the native layer. For apps which just needs an UI it seems to be a no brainer.

Once Flutter's ecosystem comes on par with RN's javascript libraries and native widgets, I cannot see why it would not be preferrable to RN in every way. On the other hand: In the meantime RN's dependency management and build systems probably will have evolved and become easier to use. There is also talk about improving performance of the javascript bridge.

So yeah, I think we'll stay with RN for a while, but I am keeping an eye on Flutter but also on further delevopments of RN.",1543145911.0
andrioid,"Here's a thought exercise: **Imagine if the two projects lost their funding.**

React Native has a bunch of large companies using it. Microsoft might adopt it if Facebook stopped funding it or some of the other contributors might pick it up. If nobody funds it and you had to maintain it yourself; Swift/ObjC/Java/Kotlin + JS skills aren't that rare.

Flutter has Google and Alibaba. Maybe Alibaba would adopt it if Google decided to stop funding it. If nobody funds it and you had to maintain it yourself; Dart and Flutter internal skills might be harder to find.

Personally, I am terrified of using Google projects that solely rely on Google. They have the focus of a toddler on sugar-snaps and might pivot at any given moment. On the other hand, Facebook has a pretty great track-record in involving others into their open-source projects and they haven't killed anything of interest (to me anyway).

So, decide for yourself. You can't know what will happen in 5-10 years. Just remember that you're \_adopting\_ libraries and tools, and you can't always rely on those who made them to maintain them.",1543157825.0
Guisseppi,"I think after this year’s announcements React Native has a solid roadmap, to get some background of the current issues with RN vs native apps watch [this talk by James Long](https://youtu.be/ZXqyaslyXUw) and to checkout how they are solved in future RN releases watch [this talk](https://youtu.be/UcqRXTriUVI) ",1543158421.0
mrbojingle,"React Native has an advantage in the sense that you can make use of React on the web too and it's very popular. Even if it fades from fashion for creating new code, there's tons of old code using it, so it'll still be around in 5-10 years just like jQuery is still around now. 

&#x200B;

&#x200B;",1543156288.0
JediBurrell,"This popped up in my Google feed and I figured this was /r/FlutterDev, all the bias towards RN makes sense now. Most of the comments are fair, but there's also a lot of FUD around Flutter going on here.

I'm not going to comment on either, I can't answer the question, but Flutter isn't suddenly going to go away. Flutter is the official framework for Fuchsia, unless Google decided to can both products it's here to stay.

~~The newly released Google Home Hub is running Fuchsia. It's still a work in progress, but it's also already being sold to the masses.~~ Again, not commenting on RN, that is also being shipped by major companies. But be realistic, neither of these are going anywhere any time soon.",1543197220.0
vosper1,[This comment](https://news.ycombinator.com/item?id=18518930) (not mine) highlights a number of serious-sounding issues with Flutter that the dev team seem unwilling or unable to address.,1543170909.0
kodijo," React Native has some very strong upsides:

- it uses JavaScript/typescript, I'm not sure that many are going to jump that gladly and easily on Dart
- it leverages native widgets. If your app is installed on more recent versions of the OS it will still feel native, instead with flutter you might spot inconsistencies (it uses custom made widgets)
- community and support in RN are huge

What might be working against RN though is it's fragmentation and not so great documentation (sometimes) and ""everything is hacked together with stitches"" feeling.

I think they will both coexists and be found useful in different scenarios by developers but I feel that Flutter, if it matures well, will appeal the Enterprise world a bit more, similar to what happens with angular vs react.

The Google approach is often more grounded and reliable than the competition. 
",1543145912.0
janithaR,"The questions you are asking are so broad I don't think even Facebook or Google would know the answer. As a developer asking these types of questions are now becoming more and more mundane. Had it been early 2000s and someone asked C or Java then it would've mattered but nowadays programming languages and frameworks popup like mushrooms it's hard to keep up. A good programmer nowadays should be flexible in terms of what programming language they use. It is no longer the case that one should master the ins and outs of a programming language, unless, there's a strong reason for it. It is more of a case of how good of a programmer you are. And no it has nothing to do with a programming language. Betting on a language to be successful in the future is futile.

If I were to pick one person in 5 years to be in my team, I'd go with the guy who knows algorithms, knows how to structure data, be efficient, be adaptable, analytical and knows the importance of testing rather than someone who claims he's a guru of a particular language.",1543156404.0
congalala,None of the above.,1543144179.0
iakar,I am currently learning Dart & Flutter but I too am worried about how long Google will support it. A few days ago I logged in to my google inbox which I really like and was asked if I would like to taken to gmail. I have not used gmail since inbox was introduced and now they are killing it on March 29. They just recently killed G+,1543174949.0
bartturner,Would definitely say Flutter as the native GUI for Fuchsia.,1543247094.0
codyswann,"What powers the Internet? HTML, CSS and JavaScript?

What is primarily HTML, CSS and JavaScript? React Native

Don’t believe anyone who tells you these technologies are going anywhere soon. As the internet grows, these technologies will only grow as well. 

In fact, I see native development dropping away altogether as soon as Apple caves and removes their artificial constraints. 

In the meantime, React Native is the perfect bridge between the two. ",1543145975.0
eugeniu,"This might not be a very popular opinion on this sub, but the only frameworks that we can say will still most likely be supported in 10 years are the native iOS and Android frameworks.",1543160531.0
vladkon94,"I'm using RN as daily driver at my work, but in my opinion Flutter is more future proof because:

1. It's made by Google, who is distributing Android OS, which installed on 85% of devices around the world. This means that there will be the best optimization for Android devices (hope for iOS too).
2. FuchiaOS (Google's OS which in active developing mode) apps are developed on Flutter
3. Flutter is more performant and can be used for desktop developing in future",1543144470.0
nickmcsnapz,Public API? Huh? ,1543223264.0
hofdid,"React-native-sound.

https://medium.com/applantic/getting-started-with-sound-audio-in-react-native-e1dc2fd50b78",1543118870.0
silencer07,"I dunno. With zero experience in programming, you will have a hard time not learning react, but fixing crashes and bugs as you go along.... IMO react native is an advance framework as you need a bit of working knowledge for both IOS and ANDROID native parts. and that will be a tall order  


OTOH, if you try developing ionic 5 development, you can live with plain JS(Maybe a 5% config work because deployment to appstore) because it runs on webview instead of native conversion of the react native. I think ionic is more beginner friendly and not too bad for pet projects....

&#x200B;

My tip to new learners, when you search for a particular error in google, make sure to turn on ""Past year"" only searches in settings. some of the fixes 2 years ago does not apply anymore and may exacerbate the problem.",1543104934.0
pyzez,FreeCodeCamp - you need to understand the fundamentals of JS before moving on. Some learning of how algorithms will help too.,1543103434.0
frostbyte650,"Hardvard posted their CS50 course on edx completely free & it's incredible

https://www.edx.org/course/cs50s-mobile-app-development-with-react-native

If you don't know any programming you should take their intro course first but they do a great job teaching js in this course imo",1543123365.0
0root,"I had very minimal experience with JS. Most of my experience with JS was doing simple things with jQuery or vanilla JS. My progression went something like this. 

Start reading up on JS basics like arrays, 'this' keyword, functions, etc. At the same time I installed react-native and tried setting it up, changing the default Text component, loading my own images and all that. When I tried to look at basic examples online I noticed some of their functions had weird syntax I had never seen before. That was my introduction to arrow syntax and ternary operators. In short, it was usually read js basics, practice js basics, try to do it in react-native.",1543133710.0
banjer,"There is no perfect, predefined path to learning how to code and build apps. It’s continuous learning and trial and error. So don’t get too frustrated when you feel like you haven’t found the “right path”.  

That said, start with online code camps like [codecademy](https://www.codecademy.com) and learn JavaScript and keep progressing. I would suggest learning basic web development using js + html + css. React Native doesn’t use html and css per se, but learning the basic concepts of web dev would be a great start.

Once you have some of that learning and experience under your belt, then start looking for React tutorials for web development. That will help you to understand how to build things as components and the component lifecycle. Then you can move to React Native and mobile development.

Start small. Break down your goals into small pieces and get those small pieces functioning first. Oh and don’t forget to have fun!





",1543161943.0
SynthesizeMeSun,"Yo! There are a lot of free tutorials on youtube for those getting started! Here's some one from me that will help any beginners: [https://www.youtube.com/watch?v=eHnHLCGXRZQ](https://www.youtube.com/watch?v=eHnHLCGXRZQ)

  
There's also some great videos from one of the engineers at Expo (a great React Native toolchain for beginners). Here's the channel: [https://www.youtube.com/channel/UCx\_YiR733cfqVPRsQ1n8Fag](https://www.youtube.com/channel/UCx_YiR733cfqVPRsQ1n8Fag)  


Let me know if you need any help man! Would love to see what I can do further than this. Have a good one :D",1543373965.0
Chawki_,"Create your own path .learn what you love and what you want create your own projects if you stuck,there are  numerous resources to ask help.",1543406141.0
hicksyfern,"Don’t pass index to RideItem, instead pass a prop that directly controls the background color. Your RideItem shouldn’t really know it’s in a list, which means it should not have an index prop.

Another way would be to render the RideItem inside a View with the background color set inside renderItem.",1543106109.0
xrpinsider,"You can create a function that checks if the index is even.

\`checkIndexIsEven =  () => return this.props.index % 2 == 0;\`

Just call the function and add the styles you want, much easier. I'm not sure if there is anyother way.",1543094996.0
anewidentity,Random jobs? What's your budget like? ,1543108574.0
gianpaj,"depend on the budget and hours per week, and length of contract",1543140775.0
tghmember,PM me!,1543270337.0
krish30990,Is it still open for sending in requests ? ,1543760002.0
ankittale,I am interested in this ,1543085666.0
Lynx_Mk86,"It depends what you are making I guess. All of these are tools that you *can* use to make your app.

Are you only making a native app? with no back-end? Then you don't really need graphql, meteor (which is a framework built upon node), node, firebase or any database such as MongoDB or mySQL.

Every app has different requirements.
Do you want log-in functionality where you store users? then you'll probably need a back-end which connects to a database.

From your list it isn't really clear if you actually understand what these different words mean so I'm not sure if my answer helps...",1543066512.0
ChronSyn,"1) GraphQL only if you're using a graphQL endpoint for data. You can always do this with Fetch too.

2) Meteor - see above

3) Redux or some other state management unless you're not planning on having your UI adapt to any dynamic data or conditions

4) MongoDB client-side library only if you're using a MongoDB DB server and HTTP isn't an option, unless it's using a client-side mongoDB library.

5) Firebase only if you're using a firebase functions or libraries.

6) This is not a react-native library but is needed to run most of the development stuff.

7) SQL is a language used my SQL databases, and so it's not something you ""include"" in your app.


I'd honestly research each of them. It seems like most of your questions can and are answered by simple google searches. You also haven't ""finished"" react native if you're asking these questions (also because it's simply not possible to actually finish learning development because the different libraries, frameworks and environments we are using right now are always evolving and having new things added to them).",1543096472.0
TruthBeToldLol,I think learning Meteor as backend + React Native is good for a beginner,1543327254.0
clarkinum,"You can use asyncstorage, and context instead of all of those things which both already come with react native",1543094290.0
davidpaulsson,No.,1543259261.0
xrpinsider,This looks like a strong stack but where does MySQL and SQL come from? You are already using MongoDB?,1543066261.0
psyzahef,Never had this problem,1543088503.0
,[deleted],1543038977.0
brentvatne,"you can use react-native-svg without ejecting, it's included in expo-sdk, you don't even need to install it :)",1543538781.0
xrpinsider,"You should remove the item from the array and pass it to the Flatlist, but I see one problem here. You are trying to mutate the state directly with this.state.number++/—. You cannot do this, instead use setState({}). ",1543008292.0
kbcool,Look at the resizeMode prop. ,1543011927.0
gui_ACAB,"You've to install git, the error message says: **no git binary found in $PATH.**

Get it here: [https://git-scm.com/download/win](https://git-scm.com/download/win)

I'm not sure about Windows but you may have to add it to $PATH (in the system environment variables).",1542986345.0
redpopcornpanda,Huh. It seems like app center should support it since that is a ms product ,1542993482.0
ywongweb,"XCode 10.1  
detox 9.1.2  
react-native 0.57.5  

edit:  
[Great talk](https://www.youtube.com/watch?v=aXjhSTJlyOo) about the capability and future of Detox.  
  
Bonus for the adventurous   
[Kompot](https://github.com/wix-incubator/Kompot) for react-storybook like component e2e test, also based on Detox

Detox's [example project](https://github.com/wix/Detox/tree/master/detox/test/e2e) is also a great learning resource or cheatsheet on quickly finding out how to do X.

",1542967286.0
flyinvoke,"Great, considering blog post or repo? ",1542981285.0
nijolas-wilson,"I have tried detox in multiple apps, and appium most recently, and am constantly running into issues with selectors - especially trying to get things cross platform.

I have yet to see these tools as a viable solution to automated testing just due to the brittle nature of hacking things to get the tests to work.

Is this something you have achieved at scale (i.e. many and varied tests) and sustained over time (i.e. through RN upgrades, feature changes, etc)?

Is it really viable consistently over the long term?",1543017142.0
upkeys,Great,1542980936.0
janithaR,Excellent. I just got to know of detox.,1542990485.0
arndomor,"Love detox. Also while your are there, fire a command and grab some screenshots for your App Store listing too. I have this and Fastlane frameit with localization setup for ZenJournal and the result is pretty sweet. ",1542998887.0
ponte_vecchio,Anyone know if you can control inside webview as well?,1543024070.0
Gvsh_,"Subscribe

Like

Comment 

Join the Squad

&#x200B;

Instagram: @ohthemreactions",1542950835.0
chrisftasian,what is this,1542951798.0
chrisftasian,"this is a thread about the react-native fork of reactjs, which is for cross platform mobile development",1542951939.0
kbcool,Joining in support but bloody hell discord is discoordinated. There's a million discord channels for react Native and that's the problem. There is no such thing as the one #reactnative like there was with irc back when I was a little baby.,1542950322.0
Chronic8888,"Beyond simple apps that just display data and take simple input, React Native is years ahead... things like maps and GL for instance have barely any support on Flutter. ",1542940683.0
LilSnippets,"1. OSS repository should be more approachable. I found it hard to contribute as it is not easy to navigate it. I love what react (not native) team did when they split their repo into nice packages, made it really neat and easy to understand.
2. Releases need to become more stable and upgrade process should have less friction, I think facebook team are working on this with Fiber rearchitecture, slimmening and efforts for facebook to consume OS API instead of internal one.
3. This is personal opinion, but native codebases of generated apps should utilise more modern practices. We saw it recently with android upgrades to min sdk version and gradle. I'd also absolutely love to see Swift and Kotlin become primary native languages used for native implementations, as I strongly believe those are much easier for JavaScript developers to pick up compared to Java and ObjC.
4. This is probably not as important, but first impressions do count and if we compare current landing page / doc website of react-native to some competitors like [https://flutter.io](https://flutter.io/) , [https://www.nativescript.org](https://www.nativescript.org/) and [https://ionicframework.com](https://ionicframework.com/) its clear that react-native website feels a bit dated.
5. Issues in github repo should be resolved or closed a bit quicker and there are always a lot of hanging PR's that are not merged for a long time.

In general I think facebook team is aware of all these points and are working hard to resolve them. Its a big project, so it will take time, but I am excited for the future of react native :)",1542917939.0
jdeath,"Check out the RN blog and updates, you’re missing out on a lot of information if you don’t. 


>>> At Facebook, we're using React Native more than ever and for many important projects. One of our most popular products is Marketplace, one of the top-level tabs in our app which is used by 800 million people each month. Since its creation in 2015, all of Marketplace has been built with React Native, including over a hundred full-screen views throughout different parts of the app.

http://facebook.github.io/react-native/blog/2018/06/14/state-of-react-native-2018


And check out the road map: https://facebook.github.io/react-native/blog/2018/11/01/oss-roadmap",1542932611.0
HisAwesomeness,"This question comes up every few days. Flutter is still in baby shoes. Many features missing. I see 0 reasons to switch. The more packages are us3d in production apps, the better and more robust they become. RN simply has the edge here and will probably keep it unless Facebook fucks something major up",1542966231.0
thistoohard,No one will use flutter because fuck dart. React Native won. Ionic4? Lol. ,1542941573.0
ryan4664,Lol what? Are you asking someone to build a community for you? ,1542911451.0
SynthesizeMeSun,"Yo! Head over to /r/expojs!! I'm a mod there.

&#x200B;

It's a small community & growing. We'd love to answer any post. Hope you're great man :D",1542913366.0
xrpinsider,"I’m not sure if its possible, but I would like to point something out:

The ‘webstorm console’ as you call it, is just a normal command prompt from your computer. So I don’t think it is possible but I could be absolutely wrong!",1542907562.0
xrpinsider,Can you enable element inspector and click on it and show us what you are seeing?,1542907618.0
Mr__Data,Did you installed git?,1542905942.0
adi_tdkr,"I deleted node modules and yarn.lock as package.lock was not present I removed yarn.lock. \`react-native start\` , starts the bundler but while doing react-native run-android it gives error see screenshot below:  [https://imgur.com/a/oQi9Xew](https://imgur.com/a/oQi9Xew)",1542947103.0
adi_tdkr,I solved this issue by removing node modules and removing yarn.lock file but now I am getting error can you please help me here: [https://www.reddit.com/r/reactnative/comments/9zm590/getting\_error\_in\_buildgradle\_while\_setting\_up/](https://www.reddit.com/r/reactnative/comments/9zm590/getting_error_in_buildgradle_while_setting_up/),1542978252.0
redpopcornpanda,"The nice thing about firebase is that it gives you 

1. Built in auth
2. Built in push notifications
3. Built in real-time data support

All of these are really important for the apps you are talking about, and they're really easy to do with firebase.

Firebase is bad at: 
1. Having structured data (there is no schema)
2. Doing advanced things with the database on the backed.
3. Queries (can't do joins or really anything moderately complex like SQL can handle)

Generally i have not needed extremely advanced stuff with the backend, and I have been able to handle ""joins"" client side.

If you are not comfortable developing a lot of backend stuff and just want to focus on the app, you'll probably want to stick with a cloud solution. You'll have to put a ton of work in to develop a custom backend when cloud services do the same thing for you for a he most part ",1542920454.0
jahans3,"Firebase is a good option, so is AWS. They’re the top two IMO.

It really depends what your requirements are, usually you’ll end up with a mix of cloud services and in-house code. For example I’ve written a node server that talks to DynamoDB and is hosted on AWS.

If you’re building a messenger app you might want to think about using a third party service. Real time chat is surprisingly difficult to *really* nail down, you could build a simple chat app in minutes but once you dig a bit deeper things can become complicated. I remember having to implement read receipts as a graduate developer and I still have nightmares 😅",1542910750.0
kbcool,"Prisma formerly known as graph cool is also good. Graphql and remote functions.

Good luck understanding their marketing material but underneath it all is what i said above and a very nice UI.

https://www.prisma.io",1542921584.0
razmanoa,"It's better to use Node.js if you are thinking about a chat app.
Node.js have a very interesting performance with socket.io.",1542904321.0
upkeys,I recently looked into the same and wanted to not use a service like firebase etc. I ended up using express with mongoose and that seemed to be working really well.,1542909184.0
LEO_TROLLSTOY,Whats wrong with built in Share?,1542904482.0
nickmcsnapz,"Share the URL, not the file, and load the URL for the PDF in a WebView ",1542943767.0
always_noob_dev,Clear expo cache,1542903578.0
Gagnondorf,"Sometimes, this happen when you have a infinite loop in your code or a bad behaviour that does not create errors.

Classic and basic example: Calling setState() in a ref of a component without conditions or calling setState() in componentDidUpdate()

Edit: What does it say when you check the Error Log?",1542907599.0
janithaR,My suggestion also is to wait. The react team themselves said very clearly not to get on with hooks just yet. They aren't done with it. I'm yet to learn about Suspense and a React.lazy so no comments on those.,1542892383.0
jahans3,"React 16.6 is now supported by RN, 16.7 support is hopefully coming soon but I haven’t seen anything on dates yet.

As you’ve seen in the Github issue you need to build and copy across the new renderer to support hooks, you’d have to write a script to automate it as part of a build process but even then hooks are in alpha so I wouldn’t recommend using it in production code.",1542886849.0
kbcool,If you don't want expo use react-native-cli ,1542921713.0
thistoohard,"Good. Stop using that trash. 

Edit:Expo blows. Develop normal. ",1542887976.0
pascaloliv,"Actually, Create React Native App uses Expo-CLI under the hood. ([More details here](https://forums.expo.io/t/is-create-react-native-app-retired/14452/2)).  
The two projects has been merged in September ([https://blog.expo.io/expo-cli-2-0-released-a7a9c250e99c](https://blog.expo.io/expo-cli-2-0-released-a7a9c250e99c)).

You can now use [Expo](https://docs.expo.io/versions/v31.0.0/workflow/create-react-native-app). 👍",1542884318.0
a_atalla,yes if you want expo use expo-cli,1542881453.0
thistoohard,+1. Save server money on dumb users. ,1542888168.0
cmcaboy,"I wouldn't recommend updating the entire Flatlist with each upvote. It is too expensive resource wise. However, I would recommend updating the upvote on your server as it sounds like you want that data to persist.

Perhaps you could incorporate an optimistic UI approach.

When the user commits the action, do the following:

1) Update the FE immediately

2) Update the server

3) If the server was updated successfully, the update is complete; No further action required.

4) If the server returns with the failure, revert the FE change.",1542925517.0
kbcool,"newArr is an array you're trying to access it as if it was an object.

If you want to render an image for each array entry then loop or map your array into a variable then render that.

Here's a link with various ways of doing it (I like the array.map method the best)

https://stackoverflow.com/questions/32157286/rendering-react-components-from-array-of-objects",1542857568.0
boki345,"It's late, but would something like this work?
           
       newArr.map((obj,index)=> <Image source={this.props.obj.married ? marriedPic : notMarriedPic}>",1542860594.0
loshorse,Hi. I would say the best way to demonstrate your skill set is by building a use project with the technology that you can use for your portfolio. I done it in the past with frameworks like Angular and it’s gotten me a job. Once you build something and know the ins and outs of the technology you will be able to speak to it in the interview. ,1542843571.0
xrpinsider,So you want a full stack developer that can normally earn anywere between $60/$110k / year to work for free on your ‘amazing’ startup? Or am I understanding this wrong?,1542874368.0
skizzoat,"been there, done that. if you want quality coders, you‘ll need to pay them properly, that‘s the way this goes. i personally am done with people promising that their startup will generate loads of money, and none of my coder colleagues are willing to work for free any more just because somebody says that it‘ll work in the future. anyway, good luck finding some slaves, eeeehm coders.",1544349603.0
silencer07,Message sent!,1542868004.0
JohnnyHopkins77,"I mean if styling related issues are your main concern, you should be in an okay boat. State management becomes kind of a preference thing once you move into complex issues, typically the guy doing the heavy lifting decides that for us.

There are plenty of dev tools listed in awesome-react and awesome-react-native on github. Those pages have a bunch of component libraries, tutorial videos, and community links on top of just tools to help speed up the process.

Imo animations should get scrapped until everything else is working smoothly. Just an opinion though. ",1542837666.0
matt_hammond,"To a person that gets things done and working right, animations are such a complex thing that really seems to add little value to the product.

However, there's this great library called react-native-pose that makes animations really easy (as long as they're not too complex). Maybe you can ask him to take a look into it.

About the paddings and other design stuff... Well just point out the margins and paddings and tell him you want it exactly like that. ",1542918101.0
NicksterW,"Brilliant, thank you so much.",1542879996.0
cmcaboy,You can do OTA updates with pure RN as well with Codepush.,1542833142.0
kbcool,"Sounds like you need a library but there's a surprisingly large number of things you can draw without one. I must have posted this article ten times but it's still gold.

https://codedaily.io/tutorials/22/The-Shapes-of-React-Native",1542856565.0
funkyfourier,"As far as displaying SVGs or other shapes RN has solutions for that. OTOH, as far as creating an interactive drawing canvas I'd be a bit more worried. To achieve an optimal performance that would have to be a native element specific to Android and iOS. What I think I'd do is to create that using some simple game engine, like OpenFL for example, and then making a RN element out of that to control it from JavaScript.

There may be other solutions out there, but for the moment that is all that I've got.",1542864984.0
menge101,"Did you google [react native svg](http://lmgtfy.com/?q=react+native+svg)?

It exists.  A library specifically created for rendering SVGs in react native.
",1542855160.0
ramzez_uk,I would also mention that even upgrading pure react native app with native models is not trivial most of the time. ,1542831158.0
jameside,"Hi, I work on Expo (one of the co-founders) and want to help you get to a good place. I'd also like to share a bit of our future roadmap, particularly around structural changes to how Expo works to sustainably address the fundamental causes of some of the issues you might have had.

**Getting help:** It sounds like Expo worked really well for you until you ejected and then issues arose and they were hard to diagnose; sorry about that. We need to further make ExpoKit be a transparent library that is debuggable if you need to diagnose an issue. In the meantime, you may want to post in the Expo forums so we can help you out. They're more active than the community Slack channel and are better since people can respond asynchronously and if you've asked a widely applicable question, the thread will also help others in the future.

The Expo team tries to respond to most of the threads within a day or so. We continually want to make Expo better and help developers build high-quality apps, which is partly why it's free. It's almost Thanksgiving in the US so this week will probably be slower than usual. For dedicated support, these are some consultants who could help: https://expo.io/consultants.

---

**Custom native modules:** As you've mentioned, features like in-app purchases require custom native code that doesn't come with the Expo client. In the case of payments specifically, we also can't include IAP support in the Expo client because the App Store reviewers require an app to have IAPs if it includes IAP code, even if that code is never run. There's also a very long list of requests for various native modules on the [list of feature requests](https://expo.canny.io/feature-requests). Given the cost of maintaining an already long list of modules, the sustainable path forward is to dramatically improve the ExpoKit workflow and support custom native modules.

With ExpoKit as a first-class workflow, this means you'll no longer ""eject"" to ExpoKit. Ejecting -- borrowed from create-react-app -- implies going off the beaten path and entering less supported territory. We are looking to make the ExpoKit workflow as or even more supported than using the Expo client app from the App Store or Google Play. As with all development, this will take time but is a fundamental improvement for professionals who need to write custom native code.

**Developer improvements:** One way I think about code comprehensibility is it's often bimodal: either you don't need to think much about the code's inner workings (ex: JS VMs, SQLite) or you need to be able to dive in to the code and understand the root cause of behavior you're investigating (ex: your application code). In between is the uncanny valley of code that feels like a black box but one you need to dive into (ex: React Native, UIKit). ExpoKit can feel like this too, so in addition to making ExpoKit a first-class workflow, we're also working on making ExpoKit easier to understand if you need to dive into it.

Also, several of the issues you might encounter with Expo often come from software that is part of Expo but not maintained by the Expo team. A lot of the work we do with each React Native upgrade is to paper over the RN developer stack (ex: the packager), but several of the issues still leak through. This isn't to shift blame and it's ultimately the Expo team's responsibility to provide a high-quality, professional developer experience regardless of the dependencies Expo uses, but to explain that we're also working on choosing more stable and robust dependencies like TypeScript and the core bridge of React Native and looking to replace the less stable parts of the supply chain, so to speak.

If you find this comment interesting, you might also be interested in a post from a few weeks ago about [Expo for Professionals](https://blog.expo.io/expo-for-professionals-218b7937fafb), which talks about similar work in more depth.

Since it's almost Thanksgiving, I'd also like to say I'm thankful for the enthusiasm and understanding from Expo developers. It's especially great to see fellow developers help each other out. Happy Thanksgiving all 🦃",1542832656.0
too_much_exceptions,"On each RN projet a was involved in. I do some 
research in order to ensure that expo covers the features we need to implement, and some needs that might rise in the future.

Expo solves many painful issues, but one must be aware of its limitation.",1542831390.0
ChronSyn,"> Expo really sucks

It doesn't, but it does have limitations. What would really suck is if no one had made the effort, or if the project was extremely broken for it's intended purpose. Their docs give reasons why you might not want to use it - https://docs.expo.io/versions/v31.0.0/introduction/why-not-expo

Admittedly, when you eject, there's more complexity involved especially when upgrading to a new version.

If you have issues upgrading, one thing that's worth considering (albeit sort of a last resort) is keeping all your core screens, logic and navigators - things which won't really be affected by the upgrade, and then generating a new expo project with the new version of the SDK, adding your files back in, ensuring it runs and functions, and then possibly ejecting again. It's quite hacky and I'd reiterate that it's a last resort, but that then ensures you've got a clean project running on the version of the SDK that you want.

Now, as for the community side of things.

The slack channel has more people asking questions than people answering, and there's a lot of people that just don't read the docs first, or even Google. Sure, a lot of the eject and native stuff isn't covered, but people don't read the docs for the basic stuff, and then wonder why there's so few people answering questions. Plenty of people ask questions but then don't give a damn about helping to provide an answer to questions they may well be able to assist with.

I've even see multiple people get angry because they didn't get an answer straight away, with one such instance of someone complaining that ""the community sucks"" because they didn't get an answer in 15 minutes on a Saturday afternoon when most people in the US are still waking up, and most people in Europe are enjoying their weekend.

Then there's people with regular react-native questions who believe that the answer is something that only those who know Expo can answer.

On top of all this, there's generic ""I have an issue with my project, can you help?"", instead of saying ""Can anyone see any issues with this code?"". It's a case of being efficient when asking for help in these cases. I'll happily help people who can jump straight into their problem with some relevant information, but I'm hesitant to help people who first ask if we can help without giving us any context on what specifically they need help with because they're less likely to be able to efficiently provide information I might need to help them further resulting in a much longer time to resolve it.

In many cases, if the answer isn't in the docs, it's often found on the first page of a Google search, often with code samples. Things like ""How do I render a list of items"" isn't an expo question, and it's covered in the FB React-native docs. We'll still try to help, but it's the sort of question that shows the asker has done no research.",1542827996.0
HisAwesomeness,"Have to agree with you on that.

Fortunately I got one advice from a friend, who decided to build a simple RSS feed reader on RN before I started my first project:

> Don't bother with expo. You'll have to eject sooner or later. And the ejection process can be a pain in the ass.

Look at it like training wheels (that require considerable effort to get off). Sure it's nice for tutorials and tinkering around with RN. But for anything serious (i.e. business relevant) I'd recommend not using it at all.",1542827204.0
arndomor,"I have also ejected not long after. It’s really not that hard to find replacement components. Expo is also trying to open up its own packages from their last announcement. It took me probably six hours. Remember to download all the keys for android. The end result is the ipa shrinked from 24mb to 4mb. I now have Fastlane and detox setup for one command deploys to App Store and so much more freedom to use whatever native packages there is. 

It does provide a good playground for starters. But I do question the business model with Expo and the value they have to provide to devs going forward. If they open up and be more modular, they will have this pressure to compete with ejected alternatives and the freedom. But how will they make money by providing additional value?",1542842404.0
qudat,What's the most frustrating to me is https://github.com/react-community/create-react-native-app has been archived and instructing people to use `expo-cli`.  So at my company we `init` and then immediately `eject`.,1542852904.0
coolnat,"THANK YOU! 🎉 I always get downvoted for saying it, but I think that Expo is a trap. It definitely shouldn’t be promoted as the main way to develop on the react native website.",1542843937.0
gonzalolog,"That gap between expo fucking sucks and it's fucking good, it's too damn small in my short exporience",1542827997.0
FezVrasta,So you picked a tool that wasn't right for you and you are blaming it. Okay ,1542838954.0
lepton,Expo was giving me mismatched version red screen errors so I was forced to migrate my apps to bare-bones React Native.  I didn't want to but I had to.,1542857727.0
realbriank,"I can see how expo can make react-native seem more accessible for new people. But honestly I think people are better off if they never use it. Unless maybe your app will only be a proof of concept before you switch to making a pure native app, then maybe expo is worthwhile.

Otherwise it's like living in a weird limbo world until you want to make a real app.",1542828013.0
darkermuffin,"Good choice. 

**A few more problems :**

I steered away from expo after finding out that they don't have in-app purchases. 

Their build sizes are bigger compared to non-expo (yes I know that the latest expo has reduced build sizes but still larger than pure RN)


The only good thing expo works for is to cut down time on finding good external libraries that actually works. 


But you can find many compiled lists of working plugins on GitHub. 


All in all, it's good as a solution, but still very early and not complete. 

And not complete enough to not use it.

I'll never use it until it's complete. And it would never be because you cannot add native code 

now don't tell me there is an option to eject and do additional structure setup. Because I don't want to manage pure rn config AND expo config. 


I'd just deal with pure RN annoyance, and that's enough. 


So all in all. 

Don't use expo, and save yourself some time, money and pain. ",1542830394.0
ogv11,"Expo  is great , I'm developing an app with it and things were going smooth until I hit a problem with keyboard avoiding view and Android.. I will probably have to eject cause the issue is old and no one fixed yet. :/",1542835532.0
_Pho_,Honestly I agree. It seemed like a really cool thing to consolidate a lot of the unwieldiness of the framework. It did the opposite. ,1542864057.0
yarism,I use expo for quick prototypes or testing a new lib. Wouldn’t use it for a full app but great to just throw something up and share it,1542871513.0
MarkOSullivan,"> Here starts the pain. Every time a new update is out there are a lot of issues. We updated to Expo 31 last week and still didn't manage to fix all the troubles for all the people in the team.

&#x200B;

I don't think that is unique to Expo, I believe that's a RN problem really.

If anything I think Expo does a fantastic job at simplifying RN and making it more friendly for devs to pick up and use quickly but you should check what all Expo provides before using it in case a feature you plan to implement doesn't work for it.",1542915937.0
Noitidart2,"I think they should make all expo stuff available for non-expo RN. I never liked how they made such atie-in into Expo. It's like a different world from RN. They should have just spent that time on making really great modules for all RN.

&#x200B;

The live editor for quick trying stuff is the only part of Expo that I use.",1542828316.0
Chawki_,Programming mint Stands for suck,1542860578.0
incarnatethegreat,"Well, it's either you put together an environment that doesn't use Expo, which I found to be insanely frustrating, or use Expo and get it to a stable setting, which took me way shorter than the aforementioned. ",1542827175.0
Norwegian666,"Pretty ridiculous expecting expo to support in app purchases, any proper mobile developer will back me up. ",1542857755.0
Gitanes,"Welcome to react native development. Unlike proper native android/ios development, it saves so much time!!! /s",1542827240.0
kbcool,I highly doubt it needs porting based on its dependencies. Might just need a polyfill or two or try installing rn-nodeify first.,1542856741.0
therealabeltesfaye,I have got the port working but some stuff still remains. Here is the incomplete code in case anyone is interested: [https://github.com/AbelTesfaye/ytdl-for-react-native](https://github.com/AbelTesfaye/ytdl-for-react-native),1543132566.0
spoko22,"[https://developer.mozilla.org/en-US/docs/Web/API/Fetch\_API/Using\_Fetch#Uploading\_JSON\_data](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Uploading_JSON_data)

&#x200B;

replace POST with PATCH. Voila",1542822302.0
ChronSyn,Have you checked the docs for the fetch method on Mozilla developer network?,1542822083.0
xrpinsider,"Fetch allows two parameters to be given. One is a URL and the second (optional) parameter is a object. Within that object you can say :

method: ‘PATCH’

And that is all you’ll need. (You may need some headers too).",1542876469.0
DiscDres,Any way you can post some of the code?,1542813868.0
jahans3,"Not 100% sure I know what you're asking, but you would have a server that handles all this stuff.

Uber customer would send a message telling the server they're looking for a ride at a location.

The server then finds a driver in range and both users will be connected (via the server) in real time using something like a web socket.

If at any point information needs to be exchanged, like updating the position of the driver's car or sending a message, this will always need to be sent to the server which then sends it to the driver/customer.

Now you have an API that can handle the communication it's up to you whether you want to use a single app with a different interface for drivers and customers, or if you want separate driver and customer apps.",1542782519.0
Laboratory_one,"I would have the apps make network calls to an API to make this work. This would likely be most reliable if you assume having a phone connection means having a data connection. If you wanted this to be real-time, you could use a web-socket instead of https calls.

&#x200B;

If you wanted to go device to device, you could communicate via bluetooth. In this case, you'd need to consider a bluetooth handshake, and that bluetooth is on.

&#x200B;

Was there a specific application you were considering?

&#x200B;",1542778638.0
skizzoat,Use [Firebase](https://github.com/invertase/react-native-firebase) for this. I just recently implemented a live chat using [react-native-gifted-chat](https://github.com/FaridSafi/react-native-gifted-chat) and with the right structuring of your communication data in the realtime database plus some database triggers (Firebase functions) you can implement „listening“ to a channel that is updated every time a message needs to be sent. ,1543112778.0
alexandr1us,I use AppCenter for both iOS and Android. It's dead easy,1542798802.0
blah_face64496,Ooh this could be really useful thanks! :),1542797763.0
cmcaboy,"What is the difference between bitrise and fastlane? I've been using fastlane for a while, but I have not used bitrise yet.",1542833694.0
jamminnzzz,"Not too sure of many apps that are open source that you can learn from but here is a list of some awesome components - https://github.com/madhavanmalolan/awesome-reactnative-ui

One of the biggest open source projects on React Native right now is status.im - https://github.com/status-im/status-react

You can checkout their repo for what they have done.",1542740173.0
wadeuk3,F8 was created by Facebook and released as open source for people to review.,1542747540.0
cmcaboy,Max's course on React Native looks good: [https://www.udemy.com/react-native-the-practical-guide/](https://www.udemy.com/react-native-the-practical-guide/),1542833855.0
always_noob_dev,"[edx.org](https://edx.org) has a course on react native, you should check it out.",1542740629.0
brusername,"Does anyone know what this means? Everythin works like a charm on local avd/emulator, but when I push the apk (release build) to my phone, it's nagging about about a o.length???

Using js firebase, not android sdk, have created a signed application ++

The funny part, is that I can se my heading/navigation on the screen, but when it tries to connect to firebase it loads for some time - got spinner - and then the red screen of horror pops up.

Having a hard time debugging it and figuring it out.

Please help🙂

P.",1542730169.0
Ashoat,Did you run `console.warn` somewhere?,1542749930.0
theWindInYourButt,Did you clean and rebuild the project in Android Studio before installing the app?  What happens if you run the apk on your emulator?,1542777089.0
brusername,"Thanks for the comments guys. In real frustrattion I managed to post the debug version on device, which tried to get a response back to localhost server....anyways

That wasn't the real problem 🙂...

The problem is find out what makes the release version force closing on device: applicagion has stoppet.
When trying to get android logcat to fetch info from pysical device, it gives me nothing to go on.

Gonna try again tonight, and post any potential error messages from logcat if anyone cares to take a look?

Sorry for the last frustration 'error' 🙂",1542811165.0
matt_hammond,Can you list the dependencies you're using in your app?,1542822582.0
brusername,"Damnit. Gotten past the full crash, but...now it actually gives me that red screen I Had before on the release apk as well. I had one wierd setring in grradle with not setting index.html; which now is ok. The release apk now also return the red screen with: E/ReactNativeJS: undefined is not an object (evaluating 'o.length'). Any ideas?

Her are my dependencies: 
""dependencies"": {
    ""firebase"": ""^4.0.0"",
    ""react"": ""16.6-alpha.8af6728"",
    ""react-native"": ""0.57.4""
}

Any suggestions?",1542875702.0
brusername,"So sorry guys. Writing on my phone, so gonna do a read over for each post.
But, do anyone have any clue why the app fails like it does?",1542876297.0
brusername,"So weird... The debug version installed through android studio with react-native run-android works like a charm on physical device. But how to create an apk I can copy and install manually? Everytime I try a manual install, app chrases on launch",1542885381.0
marcus5914,Check this one: [https://github.com/wix/detox](https://github.com/wix/detox),1542736377.0
menge101,Have you looked at [appium](http://appium.io/)?,1542730087.0
Fossage,What specifically is not working?,1542725109.0
mealsonwheels226,It might help to post the whole file. I don’t see anything that hasn’t been mentioned but if it’s not saving it might be helpful to see how you’re triggering your save call.,1542736236.0
redpopcornpanda,"Which part doesn't work? Does it fail to read anything from async storage? Does it fail to set anything to async storage? What behavior happens when your run the code? When you set the todos to storage, what is the value of them if you console.log the todos array? Are you adding todos to the array somewhere?",1542729264.0
redpopcornpanda,"I thought this was about build (compile) times :(

",1542729432.0
redpopcornpanda,"I don't know much about expo so this could be BS

But your bundle URL is pointing to 1. Expo and 2. Some IP address. I think you need to point that at whatever your node packager server is (the docs have info about setting bundle url)",1542729594.0
Omnisovereign,"Bet this uses Firebase Web API, as to use the Native Firebase API you need to eject from Expo.

Firebase Web API doesn't have as much features as Native, and one should go Native if you wish to integrate with Firebase. Check this package out: [https://rnfirebase.io/](https://rnfirebase.io/)",1542720123.0
GetTheHeckOuttaHere,Premium article on Medium.. for anyone that clicks and doesn't wanna waste their free previews. ,1542712559.0
BlenderDude-R,"There is no programmatic way to open the bluetooth menu. HOWEVER; set [this](https://developer.apple.com/documentation/corebluetooth/cbcentralmanageroptionshowpoweralertkey) to true in your app delegate.m and it will prompt the user if they want to change their bluetooth setting when the bluetooth API is called. If the user wants to, then this dialog provided by Apple will redirect them to the bluetooth settings pane.",1542683194.0
sregg,"I'm using Reactotron to switch from my app and the storybook UI:

[https://github.com/infinitered/reactotron/blob/master/docs/quick-start-react-native.md](https://github.com/infinitered/reactotron/blob/master/docs/quick-start-react-native.md)

[https://github.com/infinitered/reactotron/blob/master/docs/plugin-storybook.md](https://github.com/infinitered/reactotron/blob/master/docs/plugin-storybook.md)",1542679935.0
ExoMemphiz,"If it's just something small, I can help you make it.

&#x200B;

PM me if you want",1542727689.0
ankittale,Ivan do that I know React Native and it's implementation,1542766649.0
WellIllBeJiggered,Thank you all for your interest. I have found a developer to work with.,1543255865.0
kbcool,Tip: you'll get a better response if you include your code and cross post it on stackoverflow. From your question it's entirely unclear what's going on and what you are trying to achieve.,1542695536.0
bytematic,Swipping?,1542668795.0
vforvasile,great job!,1542718098.0
too_much_exceptions,"As usual ! 

Great 🙏",1542721186.0
brascene,"Can someone explain what's happening in this part of code? 

I know for const { profiles } = this.state; , but the second part with array, I can't understand this..

const { profiles: \[lastProfile, ...profiles\] } = this.state;  
",1542726911.0
nickmcsnapz,https://github.com/meteor-factory/react-native-tinder-swipe-cards,1542657043.0
ramzez_uk,I believe a lot of the people using this one [https://www.npmjs.com/package/eslint-config-airbnb](https://www.npmjs.com/package/eslint-config-airbnb) ,1542643265.0
redpopcornpanda,I like using [JS standard style](https://standardjs.com/) with react-native and flowtype plugins. 100% recommend using Flow or Typescript if you don't already,1542650407.0
redpopcornpanda,"I have both in my codebase. They don't really attempt to solve the same problem per se. Redux saga is usually about listening for redux actions by running a saga which can then get stuff from the state, put stuff to the state, and run asynchronous code. 

Async/await is just a way to handle promises better.

Sagas aren't just handling promises better, there are a lot of advances features including queues, a forking model, and threading concepts.

If you could write the same code with async/ await or a saga, you should probably just use async await because sagas apparently have a steep learning curve and are definitely harder to reason about.",1542643208.0
Laboratory_one,I prefer redux-saga. It allows you to handle errors and chain actions within the redux parading. It also allows you to write synchronous looking code. It makes complex action sequences simpler. ,1542642620.0
Tall-Paul,"As someone who has recently switched I can say using redux thunk with asymc/await was great in that I knew it and got work done with it. A friend recently got me to checkout redux saga and I have to say it has made my work flow much simpler.   


I love that you can slowly start cutting out redux thunks one at a time and mix both, but for the more complex work flows I am not doing this werid async dispatch call and hoping that the next dispatch after it actually would execute the next step. While I know with redux saga when I say yield it is actually meant to be used that way and will wait for the promise to resolve.   


I would say give her a whirl, but some of my favorite features are the ability to listen for dispatched types and say hey you saw an error dispatched? log it and if there is an error message attached show a toast message. ",1542638988.0
RShovon,"Simply what you can do with `async/await` you can achieve the same with `redux-saga` (but opposite is not true), which also means you have to learn more in saga than in async/await. 
If you are mostly doing synchronous calls with simple asynchronous operations `async/await` can do the job. Saga comes handy when you need complex async operations. You can [look at this](https://stackoverflow.com/a/34933395) for more insight.

Saga also provides helpers like `takeLatest` (this one is used to take the latest action, if there are multiple), `race` and others which you can use in certain scenarios which is provided out of the box. mainly this is so because in saga you can control the action flow i.e. start and abort as you like which is not possible in async/await.

Also there is testing where `saga` is easier. There is no requirement of stubbing. You simply need to match objects in your tests by controlling the generators.

Also in case of readability, IMO saga looks simpler because of its sequential code.",1542650643.0
xrpinsider,What is this?,1542657793.0
HootenannyNinja,"I would move your setModalVisible() up to the parent component and then set the modals visible prop through a passed down prop in componentDidUpdate()  


You will also need to pass the setModalVisible() down through props to the navigation if that is in a different component.",1542670670.0
smashway,"Hey there, excellent example.
I really liked how you explain everything in your readme file.

Redditors who are looking for a job, take inspiration from this! 

Obviously, OP is not a newbie, but this is reproducible.

It is a fine example of a well structured repo that demonstrates understanding, analytical thought, problem solving, a willingness to learn new things and synthesize them.

It would definitely separate you from your competition in my eyes.

",1542637686.0
NaveNocab,"BTW I made the tutorial, just wanted to clear up some questions I've been seeing around lately. 

First: on iOS and on Android, if you change a system permission the app will restart. This means there is no need to observe AppState changing. 

Next: the Linking API has a URI scheme for opening the settings, this is the best (really the only) way to approve a pemission that was denied.

Finally: make sure to change the permission message before submitting to the App Store. This will save you from a lot of heartache in the future, be very clear about what you want to do with said permission. 

Bonus thing: a lot of popular apps (like Google apps) have a modal that says ""... Give us permissions ..."" Before actually prompting a user. The reason for this is that if the user denies the permission in this fake modal, then you can always show it to them again later. If a user actually wants to use the permission they will approve two modals. But if they don't, you can try and make the permission usage more enticing. 

Hope this helps 😁",1542617151.0
da_video_live,"Nice, thank you for the tutorial. It was informative and fun to watch. I like the little inserts 😀",1542660973.0
xrpinsider,"Your question is really unclear.

- Where does the error occur?
- What react navigation version?
- What kind of navigation are you trying to do?

No wonder the question has a few downvotes. Please provide people with more details.",1542609738.0
devofallthingsjs,"You typed:

'npm install --save react-navigaion'

should it not be:

'npm install --save react-navigation'

Look at the spelling of ""navigation"". Maybe this is the problem.",1542659649.0
tizz66,"A screen has the isFocused prop (`this.props.navigation.isFocused`) when the user's viewing it. Check that in your componentDidUpdate method, and clear your state when that changes to false :)",1542590512.0
ck3g,"You can consider using Switch Navigator instead of Stack Navigator.

&#x200B;

The docs explicitly mention that it fits better for authentication flow:

&#x200B;

\> The purpose of SwitchNavigator is to only ever show one screen at a time. By default, it does not handle back actions and it resets routes to their default state when you switch away. This is the exact behavior that we want from the authentication flow.

&#x200B;

[https://reactnavigation.org/docs/en/switch-navigator.html](https://reactnavigation.org/docs/en/switch-navigator.html)

&#x200B;",1542616928.0
thistoohard,What’s up with gesture handler?,1542566553.0
Mezostein,"With the new react-navigation 3.0 you need to install react-native-gesture-handler manually:

    npm install --save react-native-gesture-handler
    react-native link

Have you done it?",1542556233.0
XiMingpin91,Might be worth removing any Carthage dependencies and replacing them with Pods,1542521298.0
lefooey,"Re-run `react-native link` and then check the linking section under Link Binaries With Libraries. 

https://facebook.github.io/react-native/docs/linking-libraries-ios.html",1542521836.0
HootenannyNinja,Did you make sure to switch the bundle being referenced in AppDeligate.m?,1542670831.0
ryan4664,Try searching on YouTube. Super easy ,1542524895.0
mshenoy,"This channel has lot of videos related to react native
https://www.youtube.com/channel/UCiNWv52iO_OAdZ12kslG4Cg


This one is also good
React Native Tutorials: https://www.youtube.com/playlist?list=PLYxzS__5yYQlHANFLwcsSzt3elIbYTG1h",1542500600.0
frostbyte650,"https://courses.edx.org/courses/course-v1:HarvardX+CS50M+Mobile/course/

Harvard posted their full course, with projects on edx for free. Currently taking it and it's amazing.",1542527926.0
LordRaiders,"Not free, but really cheap on Udemy. I really enjoyed this one. It's not only copy pasting his code. He also explains why something works, and how he came to that solution.

[https://www.udemy.com/the-complete-react-native-and-redux-course/](https://www.udemy.com/the-complete-react-native-and-redux-course/)",1542544046.0
Tynzo,Reactnative.guide is pretty good!,1542576738.0
RedHotBeef,Maybe say a little more about your project? ,1542506114.0
indapublic,I'd like to hear more about this task,1542541308.0
ExoMemphiz,"What do you need done?

&#x200B;

PM me the details.",1542729076.0
Pr0ducer,"Before my current gig, $50/hour was reasonable, but that would now be a pay cut. For a side gig, I'd have to ask $70/hour.  However, I'm not really available right now, just giving you a ballpark idea.",1542551188.0
MusikSein23,Nice! You can also use the react native cli to setup a typescript project by running the bash command: `react-native init <ProjectName> —template typescript` followed by `cd <ProjectName> && node setup.js` :) ,1542494006.0
ogv11,Nice !! I think I will try typescript on my next project,1542472267.0
Noitidart2,"Android updated gradle. Went from 2 to 4. Google Store is requiring API 26+, which RN has updated.

You haven't missed much, they have been on release cycle of like 4 months for 57 to finally come out.",1542462507.0
menge101,"(all sarcasm)

6 months?

We've all stopped using react native, we now use wreact-natural with tight-script, which is a reference implementation of ECMA20181117133000073.

",1542497493.0
arvigeus,Create React Native App got retired and is now succeeded by Expo,1542464800.0
,[deleted],1542462579.0
Tougun,"So first☝🏽 you grabeth the data 🧠🧠 and then ✌🏽you use AsyncStorage🗑⚰️ and give it a key 🔑 and the data 💿 
That’s it😦😮😓😱",1542484905.0
SirOliverz,AsyncStorage: https://facebook.github.io/react-native/docs/asyncstorage,1542459668.0
redpopcornpanda,Usually I think I would just have is selected a property of the object. I haven't had large lists with that so I can't speak to performance,1542474820.0
matt_hammond,"If multiple items are selectable I'd have a selected attribute on the list object.

Whatever you do make sure you optimize the list item component with shouldComponentUpdate.",1542553137.0
Sync0pated,"Great quick summary, coincidentally fitted right into my schedule of learning redux. Although I would recommend [unstated](https://github.com/jamiebuilds/unstated) as a replacement for anyone looking for less complexity & boilerplate with a lot of the same flexibility.",1542411124.0
matt_hammond,"When you call a thunks from a component it returns whatever you return from the inner function.

You can use this to simplify your code and write a lot less boilerplate. You can return the promise and only handle the success action in the global state - the start and the failure action can be handled in the local state as you don’t have to react to them on multiple places most of the time.

    const getQuote = () => async dispatch => { // async functions always return a promise
      axios.get(...)
      dispatch(getQuoteSuccess) 
    }

    //component
    onClick = async () => {
      this.setState({ isLoading: true })
      try {
        await this.props.getQuote()
      } catch(error) {
        this.setState({ isLoading: false, error })
      } 
    } ",1542464352.0
turbojoe26,"Personally I like to make custom components. But only when I have a designer create designs. As a front end dev you’d think I have some design sense but I don’t. So if I don’t have a designer I’ll use a UI framework.

A UI framework is also pretty awesome if you’re just messing around trying to learn RN. Because then you can focus more on functionality while you learn. ",1542375901.0
ahartzog,"Assuming you're somewhat new, I'd definitely recommend Native Base. You'll spend a lot more time learning the important things about RN (config and environment) and less time fighting UI gimmicks. ",1542375952.0
LEO_TROLLSTOY,I am using native base with custom designs. That lib is exceptionally customizable,1542376046.0
nijolas-wilson,Use Native Base until you can answer the question yourself.,1542384035.0
cmcaboy,"Depends on your requirements. You won't have as much flexibility with Nativebase, but it can speed up your development. Custom UI has almost unlimited flexibility, but they take more time to build.

In my opinion, if you are trying to test product-market fit or some sort of user hypothesis, try your best to use a UI framework like Native base. They satisfy most requirements. If you already know there is a fit, move forward with a custom approach.

And as always, try to modularize your code, which will make switching less painful.",1542385703.0
xrpinsider,That is really a preference question. Is there any specific use case/design?,1542374843.0
Tall-Paul,I started out making most components myself and each was it's own thing until I felt comfortable enough with how everything worked that I could make my own custom library and that has been a God send.,1542393008.0
Tall-Paul,I have learned a lot and recommend it once you have a grip on the basics. If you need a hand or want a review let me know. Also biggest improvement I saw was changing these from functions to pure components speed up the app significantly. The nice thing is I only had to touch this library and not every page.,1542402620.0
nathvarun,"Native base is pretty awesome. It will help cover quite a few edge cases and issues that you may face on Android and specific devices like iPhone X/Xs etc.   
Especially if you are a solo dev go ahead and use their ui kit it will help speed up your development.  
Also there's nothing stopping you from creating custom components as and when you need some serious customisation. 

For a practical example i had created this instagram ui clone using native base.

You can check it out to see how easy it is to get going - [https://www.youtube.com/watch?v=cgg1HidN4mQ&t=32s](https://www.youtube.com/watch?v=cgg1HidN4mQ&t=32s) ",1542403875.0
kevwhy,"I think it's good for getting started, especially if you're new to React. It contains lots of useful UIs.

However, RN faces performance drops easily when the JS code is not handled well. So I would vote for building custom components since it will be easier when debugging / tweaking.",1542420855.0
HootenannyNinja,I've used it on a project recently and did find some of it handy. We started off thinking we would use it for a lot of things and in the end just ended up using 3 or 4 of their components so don't go into it assuming you have to use everything and don't be afraid to write your own custom components next to NB ones.,1542671283.0
Apallon,You could split at “=“ and do some alterations to the 2nd index,1542375148.0
wjziv,"Any Javascript solution should work for you.

`var str = ""``https://www.youtube.com/watch?v=hlalkAUkwqE&feature=youtu.be``"";`

`var i =  str.`[`indexOf`](https://www.w3schools.com/jsref/jsref_indexof.asp)`(""v="") ;` 

`var res = str.`[`substring`](https://www.w3schools.com/jsref/jsref_substring.asp)`(i+2,` [`11`](https://webapps.stackexchange.com/questions/13854/are-youtube-codes-guaranteed-to-always-be-11-characters)`);`

I chose to look for where 'v=' is because, I *think* I've seen it moved around in the past. If not, you could just use string.substring().

Just be wary of the use of that '11' in the future, and perhaps replace it with something more useful, right now.",1542375714.0
ChronSyn,"Just to expand on others options, you can get all URL params with something like this;

    const data = ""?a=q&2qeqwe=we""
    const params =  Object.entries(data.split(""?"")[1].split(""&""))
                      .map(x => x[1].split(""=""))
                      .reduce((cache, pair) => {
                        cache[pair[0]] = pair[1]
                        return cache
                      }, {});

Alternatively, if you prefer to use lodash, you can remove everything from `.reduce` to the end, and then wrap the rest of the function in `_.fromPairs()` (e.g. `_.fromPairs(Object.entries /*rest of function*/ , {}))`) .

For example, if you have a string like something like `const data = ""https://www.youtube.com?v=hlalkAUkwqE&feature=youtu.be""` to the function, you'll get an object with keys and values;

    {
      feature: ""youtu.be""
      v: ""hlalkAUkwqE""
    }",1542397393.0
xrpinsider,"Its not unclear how long Expo will remain free. It will always remain free. Everything is open source so if they will stop being free, people will just make their own Expo.

The app size has been reduced because in SDK 31.0.0 you are now able to use single SDK’s only. So 20/30mb’s at minimum isn’t true anymore.

I’m not sure why ‘installing the Expo app on every test device’ is a con. 

The rest of the article is great! Thanks.",1542380180.0
omarketsell,"Dook: ""How do we market our body shop?""

Marketing Expert: ""Content marketing""

Dook: ""What should we write about?""

Marketing Expert: ""Anything"".....(it doesn't matter  you're paying me whether this crap works or not)",1542428139.0
bensinjin,"Easy, replace “div” with “View”",1542333875.0
kbcool,"I'm surprised no one has mentioned the native aspect. Sure the React parts going to be a breeze but unless you're building the most basic of apps (stick with expo for that) you are going to have to get your hands dirty in native build systems etc eventually. 

Unless you have experience with them it's going to be  pretty steep learning curve. Can't offer any advice here except to say be prepared to be frustrated and don't be afraid to do a 101 course in how to build an iOS app and an android app first. It may actually help a lot rather than trying to work out through trial and error what you are doing.",1542348677.0
Tegno,Fullstack.io their react-native book is incredibly well written. Seriously. It’s all you’ll need. I can’t recommend their work highly enough.,1542337108.0
chrismellor08,"It’s almost the exact same thing, bro ",1542339169.0
umang-31,"React native is used to develop mobile applications for Android and iOS platforms. It is based on JavaScript just like react so the logic remains kind of same. Though, there are react native components that you need to know that are specifically designed for mobile applications. In short, if you know React then learning react native won’t be a problem. Just go through the documentation and you’ll get an idea.",1542336190.0
nickmcsnapz,"Use the Ignite boilerplate, it's awesome! ",1542351764.0
abby_cohen_221,"I wouldn't call it ""easy"" but definitely smoother if you already know React in general. The same basic concepts apply: state, props, render, etc. The challenges are understanding how to deal with the various mobile operating environments. Configuring the Xcode .plist for example can be a pain and other such platform-specific issues like that.

This tutorial is a good place to start for RN if you already know React: https://www.turbo360.co/tutorial/react-native---instagram",1542391613.0
mattMEGAbit,I didn't know React when I started React Native. I found the documentation helpful and the community is great. I say just jump in! I love it!,1542557493.0
kbcool,"This has been asked before and the short answer is you need to create a polyfill for RN native libs that implements the web audio standards so your code runs across both. 

Never got the long answer as the person asking never got back. Would have been nice if they had written it and shared.",1542348840.0
Veranova,"Do you want the header to always be 20% of the height of the view, or not? It's not really a catch all answer, you need to assess the differences in behaviour for yourself.",1542323119.0
redpopcornpanda,"Most headers are a fixed height. It's 100% up to you. There isn't a ""better"" solution in this case, they both just provide a different look. If I want an element to always stay the same height and never expand, I would use the second solution. Flex is for layout when you want things to have dynamic, responsive sizes",1542325970.0
Tall-Paul,I highly recommend the options of flex 0.2 and 0.8 because scaling to tablets and other screen sizes will bite you in the ass later if you use a lot of hard coded numbers.,1542370529.0
SimonTheEngineer,"Probably worth mentioning what you’re using the header for. If it’s something like a nav bar then I’d go with fixed header and probably the right option 90% of the time. You don’t really want elements scaling with device size... that’s the whole point of a larger device that can fit more content on the screen.

Again, it depends on what your use case is.",1542404513.0
xrpinsider,What node and npm version do you have?,1542311537.0
devofallthingsjs,"What version of expo are you using?

`expo --version`",1542312025.0
forwinderr,The latest. I updated node 11.1.0 npm 6.4.1,1542311635.0
mfjp,"would definitely love to hear if anyone has resources on this too   


we go sketch -> zeplin as well ",1542319574.0
ChronSyn,"I've not found a solution that can transform zeplin designs to code that's satisfactory. They either don't do satisfactory conversion, cost a lot, or a combination of both. The solutions out there all run on Mac which isn't such a problem since I work with Mac, but at home my main machine is Windows.

I work for a small company (i.e. ~10 employees) in the UK, and we have 2 designers and a few others who focus on design but are also working on code too. The rest of us are primarily developers.

Our designers use the same Sketch --> Zeplin workflow as yourselves. We, the developers, then build a layout from scratch based on that. The most important thing to this is ensuring you have some basic architecture setup for serving screens - using expo, or CRNA, is a good place to start unless you already have a boilerplate. On a good day, I can pump out 3-4 screens with basic logic in each and match the designs that have been done.

Sure, it's a manual process for conversion but the reasons stated at the start are why. Given a adequate tool, I'd probably opt to convert using it, but writing screens is one of the least difficult parts (even doing it in TypeScript when you add in state and type definitions is only a minor inconvenience).",1542398523.0
xstheknight,Following this post ,1542347828.0
corey_brown,The layout is the easiest part of React Native IMHO,1542368347.0
indapublic,Have two apps in app store and google play. Not working with expo.,1542541470.0
matt_hammond,"I have 4 apps on the app store. All built with Expo. There's also a 5th one on the way, and a lot of experience with apps made with pure react-native init. You can shoot me a PM with the details. ",1542386071.0
RedHotBeef,"You're passing an argument to checkLogin, but the function as you've defined it isn't expecting to receive an argument. Why? ",1542310691.0
devofallthingsjs,"You probably have to bind \`this\` to \`checkLogin\`. or, perhaps the component has not mounted yet and \`this\` isn't defined yet.

&#x200B;

try console.log(this) before using it... maybe its undefined.",1542310629.0
xrpinsider,What happens when you \`console.log\` the \`props\`?,1542311436.0
redpopcornpanda,If you `console.log(this.props)` right before you call `this.props.navigation.dispatch` you can see if props is actually defined in that context. I'm almost certain it won't be. Usually the way to fix that is by using arrow functions in the class body or to bind the function to the class in the constructor.,1542319237.0
SizzlerWA,"Yeah but JavaScript and React Native actually increase productivity!  Swift, not so much ...",1542346689.0
adamjnav,"Hey Egidio,

Would it be possible for you to create a post on our forums ([https://forums.expo.io/](https://forums.expo.io/)) with your entire app/build.gradle? It will definitely help us get to the bottom of this faster!

&#x200B;

Cheers,

Adam",1542305703.0
xrpinsider,"You can do:

props.image ?
<Image/>
:
<Icon/>",1542264191.0
hcv,"It's not directly relevant to your question, but `<Image />` components support a property `defaultSource` which lets you set a loading/fallback image.

> [`defaultSource`](https://facebook.github.io/react-native/docs/image#defaultsource)  
>
> A static image to display while loading the image source.",1542275656.0
spira_mirabilis,"You can use an inline ternary operator:
```
(props) => (
  <LinearGradient
    // ...
  >
    {props.image ? (
      <Image style={styles.image} source={props.image} />
    ) : (
      <Ionicons
        style={{ backgroundColor: 'transparent' }}
        name={props.icon}
        size={200}
        color=""white""
      />
    )}
    // ...
  </LinearGradient>
)
```
Take a look at this doc: https://reactjs.org/docs/conditional-rendering.html",1542274475.0
MetorFinis,"Hey,

Are you looking for full time position or for a small help?",1542237906.0
kbcool,"To the reader: If you are based in the states please don't take this. You can get and are worth a lot more.

To the OP: this isn't a jobs board please remove and take it to one of the jobs boards.",1542241787.0
skizzoat,"I‘m personally not the biggest fan of the format of an ebook to learn something, there are better ways of transporting information if you ask me. A well-written series of blog posts might be a thing that‘s easier to maintain in the long run (things change fast in the JS/React world). Nevertheless, I think a lot of people would be interested in it!",1543113913.0
dudovcic,.,1542756081.0
kbcool,"Anything is possible. I've certainly seen people doing SMS 2FA

",1542241941.0
davidpaulsson,I love these series! 👏,1542271205.0
thisisafullsentence,I got pretty far in programming without math but videos like this make me wanna learn a little trigonometry. ,1542210792.0
xrpinsider,Have you tried [this](https://stackoverflow.com/questions/41477241/react-native-xcode-upgrade-and-now-rctconvert-h-not-found)?,1542201632.0
NaveNocab,"I think it's pretty tricky. Most people are using react-navigation with expo and because of the new primitive react-native-screens it has become very performant (basically just as native). That installation would only require a npm install, then adding a reference in the podfile and build/settings.gradle, then linking in the expoview/**/MainActivity.java",1542616228.0
saugoof,"It lists groundbreaking features such as ""Find and Replace"". That's really noteworthy...",1542175047.0
prometteur123,Thank you for sharing!!,1542355602.0
saghul,"How well does updating running apps using OTA work? Wasn’t that not allowed by Apple?

I’be been using RN for a couple of years without Expo but this looks really interesting!",1542217679.0
contrarianism,"Expo sucks.  Don't use it.
",1542170081.0
the-sprawl,"Useful summary from the article:

>	TL:DR; Should I learn React Native or Native?
>	
>	Answer: Use React Native. If you’re 100% new, learn React Native and strive to learn the Native integration as needed. If you’re familiar with Native, learn how to be a maestro with connecting native libraries to JavaScript, and thusly empowering reusable API.",1542147878.0
alien3d,A simple nice article. ,1542246983.0
lakesObacon,"Great article! I feel like there needs to be a third ""react native only"" implementation example though to show what you're given out of the box. It would really bring the post full circle.",1542187670.0
sregg,"I'm using axios interceptors to intercept 401 InvalidToken response on any API request and refresh the access token using the refresh token.

And I'm doing that inside a Redux Middleware:

[https://gist.github.com/sregg/1659c0204192f2c6d24f2f2f799463bc](https://gist.github.com/sregg/1659c0204192f2c6d24f2f2f799463bc)",1542141686.0
throwawaitnevermind,"Anyone who wanted to could correct me, but I believe that the general way of handling this is actually to register the token on a back-end somewhere, implement custom logic to ""expire"" a token based on your own preferences, and then request a log-in once again when your back-end index of the JWT has ""expired.""

You may want to just ignore the expiration time on Laravel tokens to accomplish this, or set them to the same timeframe as your backend, or just request tokens without an expiration at all.

If your device is secure and the token is stored there, you really don't ""need"" to reauthenticate the user ever.  This is different in use-cases where authentication is more important, but remember that there really is nothing different about validating a stored token and validating a user's password-- **except if there is a chance the token has been stolen by a third party.**",1542149897.0
kirisafar,"A bit late, but I use MomentJS to calculate if the token is expiring soon or is expired, then I renew.",1542389085.0
tizz66,"I don't think redux is appropriate for this unless you're already using it elsewhere. A simple method that is called to send the parent the updated value would handle this. In parent:

    ...
    <MyDatePicker onValueChange={(date) => this.setState({ date })} />
    ...

In child:

    componentDidUpdate({ prevState }) {
    	if( prevState.date !== this.state.date ){
    		this.props.onValueChange(this.state.date);
    	}
    }

Of course, if you don't actually need the date at all in the child itself, you could just bypass local state in the child and call `this.props.onValueChange` in the handler for `DatePicker`.",1542137991.0
engelbrekt92,"I think you should be able to create a reference for the parent and pass it in as a prop. That way you would be able to access it. Seems like bad practice though.

A good practice would be to use Redux, might add additional (redundant) complexity, if it’s just for this case.

A middle ground might be to create a store class which can update and store  the data for you. That pretty much is Redux though.

Might be better options out there as well.

TLDR; use redux",1542136463.0
Tynzo,"Hi, you can use ReactN, it’s a very simple state manager, you just have to replace « react » by « reactn » in your react import and you can then use setGlobal which will allow you to access global states from anywhere :) https://link.medium.com/ALILwCuYOR",1542144940.0
tnicholson,Call done() at the end?,1542154879.0
lakesObacon," I think it is fantastic. I view React Native as a method of sharing business logic across platforms. You will always need platform specific code to implement the best UX in your views, but that platform specific code can stay as view code. Non-view service logic can then be shared across views, no matter how platform specific your views need to be. 
",1542108175.0
ohadron,"In my experience there is surprisingly little platform-dependent code that I actually _needed_ to write. Whenever it did happen, I either put it directly in the view code, or created platform-specific components if it was something more complex. Your mileage may vary depending on how visually and logically you need the apps to be, but in general - it's quite straightforward.",1542110217.0
BlenderDude-R,A really nice feature is that if a component has a different style on the different OS’s you can name the component as two different files. One as “.android.js” and one “.ios.js” and the bundler will automatically use the right file for the platform!,1542130961.0
anewidentity,"There are no if-defs like in C. I really miss those from the days of writing code for Xbox and PlayStation, but you can always use an if statement, or ternary operator in css. 

As someone else mentioned, you'll rarely have to it. If you use third party packages they usually do that for you",1542115432.0
CreativeAnteater,"On separating platform-dependant code:

You can write native code and a linker that allows you to call it as a JSX component from within your js code. I do this whenever I need some native code to run (although that is very infrequently since there's usually an npm library that already does this for me so I just have to install and use it)",1542171453.0
janithaR,"In my case, many of the platform-specific code was already dealt with by modules I have integrated. React Native is so convenient you just write all your business logic and views separately and that's about it. As long as you can't find a module to achieve what you are looking for there isn't any particular reason to write platform dependent code.",1542128882.0
DanmCanIJustComment,"Wait, what is Xiaomi?",1542162445.0
kbcool,"Did you install any new packages  or write any new code since? Does it run in debug mode still? A white screen in release probably means you are getting the red screen of death in debug mode but these aren't shown in release mode so a white screen is quite likely the result of a red screen.

Try opening xcode and cleaning the product and re-run. Have a look at the output in xcode. Quite likely you're hitting a fatal error and there should be more details there.",1542087256.0
xrpinsider,"This usually happens when a error occurs in your app. In development the app will display the well known red error message, but in production it will show nothing but a white screen.

First of all, you should make sure no such errors occur and people found that using [error boundaries](https://reactjs.org/docs/error-boundaries.html) helps with this problem.",1542099877.0
kbcool,"It has a free tier which is generous enough for a small app.

https://firebase.google.com/pricing/

Whether it's as good as a good CDN for end user performance I'm not sure as I've never used it but it seems at least comparable to S3.

If you need to change file content quickly for end users I would check if you can invalidate content quickly or set low TTLs.

It's hard to answer your question better without traffic volume and functional requirements. Eg do you need ultra low latency for buffer free video streaming? In that case it may not be good enough as you would need an  Akamai level CDN in that case.",1542087738.0
too_much_exceptions,"If you are using react navigation you can achieve something similar with “react-navigation-fluid-transition” package 

https://github.com/fram-x/FluidTransitions
",1542050934.0
wcandillon,"This video tutorial should give you an idea on how to implement such shared transition in React Native while staying on the native thread: [https://www.youtube.com/watch?list=PLkOyNuxGl9jx02vhWRCSPwbcSRvV9wWh1&v=UbedXievYGI](https://www.youtube.com/watch?list=PLkOyNuxGl9jx02vhWRCSPwbcSRvV9wWh1&v=UbedXievYGI) 

Of course in the case of the Apple of the day example things are a bit more complex but it's really the same idea. And then also we need to consider using this animation as a transition in react-navigation. These are topics that I hope I will be able to address soon on my YouTube channel.",1542046543.0
kbcool,"You can use conditionals inline in jsx to display components.

https://reactjs.org/docs/conditional-rendering.html",1542097946.0
attic_sardines,Just wanted to say I love your videos! ,1542033509.0
too_much_exceptions,"Magnifique !
T’es un seigneur

Edit : sorry guys I had to tell him that in French. His is the best ! ",1542043898.0
captaincryptoshow,You on Twitter at all?,1542062368.0
straightouttaireland,"Well done, great to see that you accept requests from people on this sub.",1542067304.0
kbcool,"Fake it?

 Is there a reason why the stuff underneath actually has to be underneath? Could it not be inside but  the appearance is that it's underneath ? Or do you need to be able to scroll through it or something ?

Also have you tried a hairline border?",1542057314.0
sourtargets,"Never heard of anyone wanting to implement a feature that triggers on list movement stopping - even when people do stop scrolling on lists, they tend to keep their finger on the list to kind of ""lock it in place"", essentially never stopping the scroll action. I'm interested, could you provide the use case for this?",1542021149.0
chmiiller,I'm also having this.,1542105357.0
xrpinsider,"Seriously? Are you on this subreddit?

All you did was add a prop that already exists... mod please delete.",1542021449.0
redpopcornpanda,"you need to be more robust with state checking. It sounds like you listen to the `onAuthStateChanged` handler, which is great, but you should check for that AND for your other nav to have been completed. You could pass a handler from the top component down into the last screen of the registration nav which sets the state of the top component to have `didFinishRegistration: true`. Then, just conditionally show your main nav based on that. E.g:

    // Default state:
    state = {
      didFinishRegistration: false,
      firebaseLoginComplete: false
    }
    
    // Earlier in the class:
    _onLoginFinish = () => {
      this.setState({didFinishRegistration: true})
    }
    
    componentDidMount() {
      firebase.auth().onAuthStateChanged(user => {
        if (user) {
          this.setState({ firebaseLoginComplete: true })
        }
      })
    }
    ...
    
    // Part of the render method:
    {this.state.didFinishRegistration && this.state.firebaseLoginComplete
      ? <SignedInComponent onLoginFinish={this._onLoginFinish} />
      : <SignedOutComponent />
    }

Of course, it is also possible to do this via redux if you use that. Then you don't have to pass a handler all the way from the root view to the final login screen.

One word of warning. This solution does not handle persistence - since `didFinishRegistration` defaults to false, it will show the log in screen every time the app opens. You could persist with async storage.. or if you use redux, I recommend redux-persist to persist your entire state to storage. Then just store this local state in redux instead and it'll persist automatically.

[This article](https://medium.com/react-native-training/react-native-firebase-authentication-7652e1d2c8a2) may be helpful to you as well.

Also, this sort of problem is asked about all the time, so some good searching will turn up even more solutions!",1542050900.0
Zeppelin2,Use `SwitchNavigator`,1542001782.0
iamitkhatkar,Make uid of user as document id in your user collection and when user signup or sign in you can check whether the data is there in database with that uid if it is then user is old if its not there then you can perform next step. ;),1542049517.0
redpopcornpanda,"Yeah. I use redux persist and react navigation to accomplish this. In the root of the app, you can either see the logged out nav stack or the logged in nav stack. 

When the app first opens, there is no persisted with information, so it displays the logged out nav stack. Through this, the user can sign up or create an account. When that is successful, I have user information persisted and the state updates in the root component to now show the logged in stack.

Subsequently, the user info is persisted (such as UID or api token or whatnot) and since I have it I can show the signed in stack. 

If I tap sign out, I reset the entire state of the app, which wipes the user info etc from the state and that causes the signed out view to show.

I do use react native firebase along with this and being able to listen to auth state changes is very nice and can help implement this flow. Once the initial setup is done, you would probably not need to put much effort in to maintain it. At least we haven’t.

I do also use redux saga but it’s not necessary. You can call all the needed functions from react classes if you desire.

I feel like option one could be implemented in a non-hacky way. 

If you’re gonna use firebase, and if you want to use anything beyond really basic firebase stuff, then you definitely want to get react native firebase working. If you don’t use it for a lot then the web package is fine but it probably wouldn’t be worth it in the long run if you rely on it for a lot. 

Also I would definitely use redux persist and that’ll save the redux state to async storage and you won’t have to worry about doing it manually. ",1541984484.0
wcandillon,Not sure if it helps but I've made a live coding session where I add Firebase authentication into a React Native Project: [https://www.youtube.com/watch?v=0TlOhmdl3-M](https://www.youtube.com/watch?v=0TlOhmdl3-M),1542004842.0
notseanbean,"I use Redux and the Firebase web API (and redux-persist).

I don't have much of any logic/flow in my React components. My firebase authentication stuff is in vanilla JS classes / functions.

I have an `auth` Redux tree with actions for login, logout, provider errors and set user. My displayed UI is a result of the state of my Redux store. If Redux says logged in - show an authenticated component tree. If not logged in, show an unauthenticated component tree.

I have an `onAuthStateChange` listener that I give `store.dispatch` to so that it can dispatch appropriate auth Redux actions.

I call `signInWithEmailAndPassword`  /`signInAndRetrieveDataWithCredential` when forms are submitted; these trigger events picked up by my `onAuthStateChange` listener, which trigger Redux dispatches, which triggers Redux store updates, which rerenders UI.",1542051539.0
cmcaboy,TL;DR,1542038386.0
xrpinsider,You don’t need a third party component for this. You can just use the [FlatList](https://facebook.github.io/react-native/docs/flatlist)/[SectionList](https://facebook.github.io/react-native/docs/sectionlist) component which renders all the categories where one category is a FlatList with the prop [horizontal](https://facebook.github.io/react-native/docs/flatlist#horizontal) on true. That horizontal FlatList will render items of that category. It’s that simple.,1541968023.0
zerodashzero,Excited to try this. Will give feedback if any.,1541998304.0
Delphicon,"As someone else mentioned Expo is an option but it can only take you so far, if it has everything you need then that's great but if not then you're back to managing the Android and iOS parts of your project. The good news is that your problems are probably pretty easy to fix for someone with experience, the bad news is you don't seem to have anyone who knows the platforms that you're developing for. If you're serious about mobile and can't use Expo then you need some mobile developers or at the very least someone needs to learn mobile development.",1541976412.0
xrpinsider,"If you want to work multi platform in a team without having to worry about gradle and other things, I would totally recommend using [Expo](https://expo.io). 

Thanks to Expo you don’t have to worry about native code and native configuration. In my experience this saves me **a lot** of time since I only experienced bad things when programming with Android Studio and Java.

Cool things about Expo:
- Its 100% free.
- Great community.
- No mac needed to test/deploy iOS apps.
- APK’s and IPA’s are build for you. Or you can build them yourself with the [Turtle CLI](https://docs.expo.io/versions/latest/distribution/turtle-cli).
- Great API on top of the React Native API.
- New things are added continuesly. You can see feature requests [here](https://expo.canny.io).

Bad things about Expo:
- You cannot write native code.
- You cannot use libraries that use native code.

Personally, I **love** Expo and the idea of Expo. I hope you may try to use it!

Cheers.",1541959364.0
janithaR,"Did you clean build cache and retry? This exact thing hasn't happened to me but once I had a similar issue and cleaning the build cache, restarting XCode did the trick for me.",1541941948.0
Veranova,"It's probably some issue with the release bundle. I've had issues before where deprecated APIs have been present in dev but not in release (it's weird)

Have a look at the device logs for a proper stack trace. You can access the logs for a connected iOS device through xcodes devices menu, and in android using ’adb logcat’

These logs are just the devices internal console so can be noisy but you can track down your app's own logs just by watching them play during interactions.",1541950726.0
janithaR,"If I were to do this I'd be creating an array of objects with an array of 4 song items. And put that as a data source for a horizontal FlatList who's height is 4 times each song item component's height. And don't do this, especially for FlatLists.

 `<Button onPress={() => Linking.openURL(url)} price={price} />` ",1541940544.0
oswaldalee,"For reference, here's how I'm rendering the data in the `SongItemHorizontalScroll` component:

       <View style={containerStyle}>
          <Image
            source={{ uri: thumbnail_image }}
            style={albumImageStyle}
          />
          <View style={songDetailButtonContainer}>
            <View style={songInfoStyle}>
              <Text
                style={{ fontSize: 12, lineHeight: 14, width: 160 }}
                numberOfLines={1}>
                {title}
              </Text>
              <Text
                style={{ color: '#666', fontSize: 12, lineHeight: 14, width: 160 }} numberOfLines={1}
              >{artist} - {album}</Text>
            </View>
            <Button onPress={() => Linking.openURL(url)} price={price} />
          </View>
        </View>

&#x200B;",1541933738.0
xrpinsider,What happens when you wrap the FlatList in a view with a maximum height?,1541938782.0
hutxhy,"Couldn't you just use a ScrollView with horizontal set to true, and have each component child be a wrapper around these cells? ",1541950435.0
kbcool,"What are you trying to achieve ? The result from your screenshot or....

Do you  want all image containers to be of equal width and height and the image just uses what it can.

What you sent a pic of is achieved by fixing only the image width. 

If you want all the containers to be an equal height then specify the width and height that you want on the image component and use resizeMode=""contain""

",1541922976.0
DeadPlutonium,"FWIW this is typically called a “masonry” layout, Pinterest being the most well known example of it.

I think this should be fairly straightforward with the proper flex layout/box model size styles.
Before flexbox and CSS Gris on the web this was a nightmare to solve.",1541951762.0
xrpinsider,"I’m not sure if you even want to render all of those 600 items at once. Why not use the onEndReachedTreshold prop and onEndReached prop? With those you could say:

Get more items when the user is at 70% of the FlatList.

In the above case the onEndReachedTreshold would be .7 and the onEndReached would just add more items to the array. 

Rendering 600 ‘simple’ items to the user at once is not want you want. Make sure the renderitems are purecomponents and I suggest you to read [this](https://github.com/filipemerker/flatlist-performance-tips).

Edit: you should set removeClippedSubviews on true if you plan on rendering those 600 items at once.",1541880978.0
Charliecoook,Should render just fine as I believe that flat list does some lazy loading,1541880582.0
JStheoriginal,"Nice! We have an app where I work that has 15-20 reducers as well, so I’m going to see how this helps speed up interactions. Thanks!",1541864602.0
brentvatne,"thanks for writing this, i agree it can be useful! any chance you could submit a pr to docs to add some information on this?",1541882560.0
nijolas-wilson,"I built this exact function about 2 weeks ago! I might switch to your package now.

I did build another HoC that just did `console.count` on render and whacked it on everything. It was _very_ handy for diagnosing re renders.

I also found a list of PureComponents being fed arrow functions that code review had missed... Oops.",1541882139.0
rickisen,Won't this just create laggy screen transistions though?,1541876526.0
GantMan,When will we see a `useRenderWhenFocussed` hook!?  :D,1541869675.0
janithaR,Was `withNavigationFocus` introduced in V2 of react-navigation?,1541867300.0
yeager-eren,"might be an off topic, i've first seen this in dev.to website, i'm really surprised it's freaking fast. i checked the chrome devtools network tab and saw that whenever you hover on to a link, it will request its content already regardless of you clicking it or not.",1541869477.0
notseanbean,"I found the easiest jumping off point to getting test coverage was to start off testing any utility functions or classes you have rather than components.

Let's say you have a file `names.js` that contains `export function transformName(source)` that returns a string.

Create a folder `__tests__` where your file is, and put a file `names.test.js` in it with content similar to this:

    import { transformName } from '../names';
    
    const tests = [
      { source: 'a string', expected: 'a transformed string' },
      { source: 'a different string', expected: 'a different transformed string' },
      ...
    ];
    
    tests.forEach(({source, expected}) => {
      test(`transformName(${source}) is ${expected}`, () => {
        const result = transformName(source);
        expect(result).toBe(expected);
      });
    }):

And you're off to the races with unit tests. Repeat for every utility function you have. I soon you realised that the best way to write a utility function was to *write my tests first* \- Test Driven Development!",1541851443.0
davidpaulsson,I'd suggest the official guides to get you started https://jestjs.io/docs/en/getting-started,1541849169.0
Qu4dro,"We had some issue with this happening in production in our app. It was even more painful for our users because the devices they use are heavily locked down with MDM software, to the point to where they can't use most hardware buttons. We found these white screens to be caused by unhandled errors that arise during a rendering cycle, and error boundaries were the fix for us. [https://reactjs.org/docs/error-boundaries.html](https://reactjs.org/docs/error-boundaries.html)

&#x200B;

I wrapped the entire app around a single error boundary that shows a friendly message to the user, records the occurrence in our error reporting dashboard, and forcefully remounts the root app component to simulate a restart. It's a rather crude solution, but it works, and it's a far cry better than forcing the user to call tech support to have their device reset. The nice thing about how error boundaries work is that we can put narrower error boundaries further down the component tree if we ever need something more granular.",1541800521.0
clearing_,Check out Bugsnag to diagnose these more easily in the future.,1541809558.0
xrpinsider,"Its literally documentated on the Expo [site](https://docs.expo.io/versions/latest/sdk/camera).....

There’s a proptype called flashMode which you can manipulate. Please read the docs first before asking question, saves everyone’s time.",1541781718.0
nijolas-wilson,"You can just switch your current scheme in XCode to release mode but the best way IMO is to rename your default scheme to app-debug or whatever and create a new scheme in XCode that builds in release mode and call it app-release and then make them both shared so they get checked in to source control with the project. That way it's super easy to switch between them and super easy to target with build tools like TeamCity if you use them.

Go Product -> Manage Schemes in XCode to do this. Can give a more detailed description of you need.

You do NOT need to change any code as one poster suggests. I recommend strongly against changing any native code if you're new to the framework.",1541768078.0
justpurple_,"As someone that‘s just recently begun developing RN apps, I‘d like to know that, too. Could you update the thread in case you find it out?",1541756149.0
xrpinsider,So you would like to show the iOS app on your iPhone like a real app? I’m not sure what you want the text is really unclear.,1541764884.0
CreativeAnteater,"I don't understand, why don't you build a release version if you want to demo exactly what it will look like and how it'll work?",1541765963.0
vafada,https://facebook.github.io/react-native/docs/running-on-device#4-build-app-for-release,1541768322.0
janithaR,"From what I understood, what you're trying to ask here can be interpreted in two different ways.

1) Are you talking about your app running on two different configurations? Such as the beta version and the production version of your app.

Or

2) Are you talking about a \_\_DEV\_\_ false, optimizations ON React Native app which still can reflect code changes just by refreshing the app?",1541784387.0
CLswimmer411,"[This page](https://facebook.github.io/react-native/docs/running-on-device) in the React Native docs have a good guide on how to do this. Just follow the ""Building your app for production"" steps.

&#x200B;

Basically two important changes–

1: Change your existing scheme to the release variant.

>go to Product → Scheme → Edit Scheme. Select the Run tab in the sidebar, then set the Build Configuration dropdown to Release.

&#x200B;

2: If this code in your `AppDelegate.m`:

    NSURL *jsCodeLocation;
    
    jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@""index.ios"" fallbackResource:nil];

Change it to this:

    NSURL *jsCodeLocation;
    
    #ifdef DEBUG
        jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@""index"" fallbackResource:nil];
    #else
        jsCodeLocation = [[NSBundle mainBundle] URLForResource:@""main"" withExtension:@""jsbundle""];
    #endif

>This will now reference the main.jsbundle resource file that is created during the Bundle React Native code and images Build Phase in Xcode.",1541766605.0
LEO_TROLLSTOY,"Do you have permissions to write to the output folder? Aside from that its alnost impossible for the gradle to build old version as it is no longer on the disk. But, you might have cache problems in metro bundler. Maybe it doesnt reset cache on packaging",1541766534.0
CreativeAnteater,"Delete the release apk, delete your bundle, rebuild your bundle, rebuild your release apk and try loading it again.

I had this problem late one night and sorted it by just manually moving the apk onto my phone and installing it that way. If this isn't a recurring problem that's a useful one-off fix.",1541753336.0
coreystout,Any chance you changed something in your app/build.gradle? I changed my jsBundleDirRelease directory by accident when messing with Bugsnag source maps and experienced the same problem as you.,1541789351.0
janithaR,Define a custom script that chains this with 'gradlew clean'?,1541807613.0
jonathanpwheat,"I literally fought with this issue for 4 hours tonight, found your post looking for answers.  I had initially copied my project to a new directory and then added new features to it.  Everything worked great until I built for release and I would get the old version of the app on my device.  /u/CreativeAnteater had the solution that worked for me - Try deleting and recreating the bundle, here's what you do

From the project root

* Delete this file: ./android/app/src/main/assets/index.android.bundle 
* Rebuild it with : react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res 

One caveat on the Rebuid step- Depending on how you wrote your app, you may need to change index.js to index.android.js

FWIW I also deleted the entire build tree too.",1541996572.0
kbcool,"Off the top of my head you actually have to use a single dash in front of variant ..yes that's stupid.

I usually just cd into Android directory and do ./gradlew assembleRelease and adb install to save uncertainty and run iOS production builds directly from xcode. You shouldn't have to but the command line tooling is a bit crap for some things.",1541746779.0
xrpinsider,"Can you show what your code is? 

PS: I’m waiting for Expo to intergrate background tasks, its already [in progress](https://expo.canny.io/feature-requests/p/background-tasks-support).",1541719922.0
menge101,"From my point of view hearing about the developments with gestureHandler and reanimate, its clear that people are doing serious work to bring the native component strengths to reactnative.

Reactnative isn't static, its constantly growing.  It may lose ""next big thing"" status, but thats not a bad thing.",1541704273.0
TheTraceur,"I don't think React Native is going anywhere. It is still under active development at Facebook and they just released their Roadmap for the the project earlier this month: [http://facebook.github.io/react-native/blog/2018/11/01/oss-roadmap](http://facebook.github.io/react-native/blog/2018/11/01/oss-roadmap).

&#x200B;

While there are other ways to build cross-platform native apps (like Flutter and Native Script) they all face the same challenges as React Native, but have not been around as long and don't have the same community support (from what I can tell).

&#x200B;

In my opinion the biggest reason React Native isn't going anywhere is because React as a framework is taking over web app development and makes life so much easier and I can re-use that knowledge to make a native app. Using a different framework or even coding an app natively would require me to learn a whole new paradigm and maybe even a new programing language. I would much rather stick with my warm fuzzy React blanket.

&#x200B;

\*Edit - As far as AirBnB goes, React Native, Flutter, and Native Script will never be as good as creating a fully native app. But building for two platforms requires more time, effort, money, and programers. AirBnB is a huge company that can afford to support two platforms. I think we will see a lot of companies start with React Native to get their product to market faster, then switch to fully native later if they need too.",1541706177.0
Bladestangen,"I’m a Project manager at an app team at Isobar Copenhagen, where we’ve been steadily growing an app team from 1.5 to 6 full time devs over the course of 18 months (with 2 positions open and 2 web devs helping ad hoc) and to us, we fully believe react native has a longer term viability.

We’ve been both migrating existing projects as well as building new on react native. Both small-scale marketing/gimmicks, as well as large scale betting & banking solutions.

To us; RN offers both crucial cost reduction in terms of fully-native competitors, that give us an edge in both cost, maintainability, as well as recruitment due to the talent out there comfortable with js.

Sure, AirBnb’s exit cast some shade on it’s promise, but as others have mentioned; their needs & scale exceeded the main advantages that RN offers to most, since they can afford duplicate teams for iOS/Android. But as I always say; it’ll cover the needs of the vast majority projects that aren’t focused on bleeding edge technology or highly specialized iOS/Android featuresets.

So yea; I’m sure it’s got a promise for the long term due to community support and its openness to always be able to bridge fully native code in case RN has shortcomings not possible to bypass to cover (client) needs.
",1541712056.0
Veranova,"React is definitely here to stay, people who use it love it, and I think it's increasingly considered to be one of the best UI libraries that's been created.

React Native is very tightly coupled to React, and there are some huge benefits of using it, but there are definitely some huge problems with the ecosystem and I'm not sure Facebook is doing enough to address them. They're rebuilding some core tech to improve a bunch of bugs, but the Android ecosystem is so fragmented it's proven a nightmare in my experience, and the packages ecosystem for react-native is full of poor maintainer-ship and yet more bugs.

Additionally the process of upgrading a react-native app to a new RN version is a mess of dependencies breaking on both platforms, and takes days to get working every time.

This all said, aside from building your app as two separate native apps, I don't think it's possible to have a better solution. RN is getting more mature every release and it will take a long time for competitors (Google Flutter) to truly catch up, and the ability to use web technologies to build for native can be really beneficial. React has enough staying power that I think companies with less resources will stick with it for a long time to come, and hopefully it will be mature enough at some point that the next AirBnB chooses to stick with it.",1541705063.0
Bellaamyy,"What did Airbnb went to? 
We are using React Native and it's the best we could find at the moment. If there is a better solution to have natively compiled App to both platforms I'm happy to hear more about it.",1541705822.0
HisAwesomeness,"You have to realize that you are posting this question in a forum that is dedicated to react native, and visited most likely by react native devs. So your answers are going to be biased.

Head over to /r/flutter and you might find some who believe RN is about to die.

Also, if you see any react native devs looking for a job, send them my way. We are hiring",1541718474.0
foulplay2,"At least in Detroit, the market for react/react native developers is huge.  GM was just tons until the cuts last week.",1541707179.0
drowsap,"Airbnb dropped React Native because they had a pretty bad code base full of bugs and untyped JS.  They also wanted to make a hybrid app which is currently pretty hard to do if your expertise is mostly in native and not native and JS.  You should checkout out Words with Friends article on how they converted to use RN, it's a pretty stellar use case https://medium.com/zynga-engineering/why-how-words-with-friends-is-adopting-react-native-b24a405f421c.

I think the Android argument is a bit baseless unless they had some really specific use case. For the most part it works similar to iOS.",1541725341.0
Laboratory_one,"IMO I think it works very well with Android. I normally don’t have to write any special code to accommodate iOS or Android either. It’d be interesting to hear the complaints. 

I also really like development with React Native. There’s so storyboards and outlets to drag around. It’s all just code. No need to mess around in a UI, except when when doing native-level things. 

As for AirBnB, their use case is far beyond most organizations. In their multi-part blog posts talking about their decision to stop using React Native, they recommend it to others. 

To your final point, flutter does look promising. ",1541714154.0
codyswann,"The over reaction to AirBnB migrating away from React Native never ceases to amaze me. Reminds me of when Twitter migrated their backend from RoR to Java.

&#x200B;

We do realize that 99% of apps out there don't have the same requirements and workforce as AirBnB and Twitter, right?",1541718926.0
kbcool,"And this is why like builders (of houses etc) you need to get ten opinions or quotes from tech people. Your friend was clearly talking crap, probably to try and sound relevant.",1541714265.0
Jaymageck,"At some point I think we'll get something like Flutter that uses its own UI engine, but with React and JS instead of Dart, and it'll kill RN because it'll help minimize the cross-platform UI issues.   


I doubt Flutter will ever beat RN while its using Dart, because even if Dart is a good language, JS is not going away and the demand to take web devs and have them easily switch to native is there. ",1541717154.0
arvigeus,"I wish PWA will take over the native development. People hate installing apps, developing one is complicated process. Really less than ideal unless you are huge.",1541713526.0
nijolas-wilson,"It's not going anywhere IMO. The reason AirBnB dropped it is they're big enough now to not be in the lower end of the market where a lack of technical resource means React Native utterly dominates the cost/benefit equation.

In Brisbane, Australia, React Native is in active use and is growing. The main factors are an active startup scene where RN pays the bills, and the local mobile game development industry that's soaked up _most_ of the native devs (especially iOS). That's how I understand it, anyway.",1541726668.0
craftgear,"The inherent reason why I bet on React is not because it is pervasive but it seems to me that the React core team and majority part of the community are oriented to more functional ways to build UI.

&#x200B;

The same goes to React Native.

&#x200B;

Yes, RN dev experience is not pleasant at all and yes I hear that Flutter may have better dev experience.

&#x200B;

But I still keep on betting React and React Native to survive in the era of coming functional paradigm.

&#x200B;",1541732004.0
Gitanes,"React native is a huge improvement from the previous gen (Ionic, Corova, PhoneGap, etc) of javascript libraries for building IOS and Android apps. But the tech is not quite there. There is huge compatibility issues with Android and the debugging experience is just awful with it. If you need to build a small simple app, react native will do just fine. But for anything more complex I would stick to proper native (Java/Swift) development.",1541716305.0
Mael5trom,"Our team recently decided to go from native to a hybrid solution for dev efficiency, and ended up choosing Flutter after an evaluation with that and React Native. The biggest thing for us was the team make-up - I'm the only primary web dev, while we have 3-4 mainly mobile devs. Dart is more like what they are used to, and Flutter isn't hard to learn. 

The other big advantage was that Flutter/Dart doesn't have the JS bridge and so performance is always going to be as close to native as a hybrid app can be. Most evaluations put it significantly better in this regard than RN.

That all said, and our decisions not withstanding, I don't think RN is going to die. I think the desire to be able to build with web technologies is there, and the ability to share code between the web and mobile (even if just the business logic layer) is really nice (if you also use React for the web).

I think there is room for a number of different solutions and hope that they will all push each other to improve, which will only benefit everyone using any of the tools long term.",1541741928.0
imizaac,"We still use Cordova with React. 

It'll be out there in the wild for a long time after it losses the next best thing status. ",1541743627.0
janithaR,"As a senior Android developer of 6+ years experience and iOS developer of 3+ years experience, I was managing a project which was done for both Android and iOS alone. Managing the two codebases for both platforms and implementing new features reached a boiling point and I decided something has to be done. I informed of my decision quickly to my stakeholders in November 2017. As a native applications developer, I absolutely hated the idea of adopting any hybrid technologies as they do not produce high-end results. But out of desperation to reduce turn over times I decided to take the bullet and look into ways of developing the future iterations of the application faster.

That's how I got to know of React Native. I immediately liked the idea of how it renders native components and javascript was simply a layer which describes the UI. I asked for two weeks break from my stakeholders and started cracking at it and had my end goals set. When I started doing my proof of concept I was beyond ecstatic to realize how efficient it is to create UIs! The application that I intended to convert to React Native was simply consuming a web API and what I could do with React Native is more than enough to achieve it. The performance was not as satisfactory but I soon realized I wasn't a very good javascript developer. Nonetheless, the stakeholders were still happy with the outcome in a short period and I have already released my app to both marketplaces over a month ago. Now I'm learning ins and outs of javascript so I can write high-performance code and get that 60 FPS throughout my application.

Right now I wonder whether I'd be as competent in developing native applications for Android and iOS. In fact, I'm writing the comment just after finish interviewing a new guy for Android development. It'll be difficult for me to keep updated with Android, iOS and React Native at the same time but in my opinion, focusing a major part of my efforts towards React Native is certainly worth it. As it stands today, it is very well capable of producing apps which aren't demanding every ounce of performance. So without even any major re-architecturing React Native still stands well above any other competing technologies and that says a lot to me. It wouldn't certainly die anytime soon.",1541745497.0
Yellowbyte,"""Doesn't play nice with Android"" is a bit of a blanket statement. The community in general does seem to forget about Android and put iOS first on many things. But React Native itself is always improving. 
As for AirBnB dropping it, they were mainly using it in a modular fashion, adding RN sections to their preexisting native application, which isn't at all the same as writing a purely RN app. 
Overall, don't expect this to be a 'bit-coin type' bubble. RN is still far ahead of any cross-platform development tools, don't expect the demand for it to dwindle. :) ",1541747139.0
Delphicon,"One thing you have to keep in mind with AirBnb was that they were using it inside of their existing native app which makes things WAY more complicated. They also have the resources to hire full Android and iOS teams. I've been there and recommended that the company just stick with their native apps.

As for not playing well with Android I wouldn't say that at all at this point. A year or more ago, sure but Android support has caught up. In general Android is buggier but that's because of it's fragmented ecosystem and hacked together core framework. That's the case regardless of React Native.

In my opinion this technology hasn't even hit it's stride yet. It's technically still in beta and there are some big improvements coming up but the real game changer is when you start sharing code with the web. The tools around that are still in their early stages but that's the future.",1541809527.0
cmcaboy,The title reminds me of the standard Quora type clickbait questions.,1541941108.0
alien3d,"i'm dropin out react-native. As i mention here before, i will do react-native if they are no third party plugin and simple requirement. If need quick changes iteration plugin which need to support. No more.Don't want to waste time more on node modules  gradle error .",1541755717.0
o_T_o,"I think android will die sooner then RN. Android is shit os with shit programing environment. And its still easier to do simple android app with RN then with native android. 

Unless its very specific, RN can handle a very huge chunk of the development scope. ",1541718284.0
cmcaboy,"Redux or an equivalent state management solution would be your answer. The react context API may also work. The only alternative would be massive prop drilling, which can be a hit to performance.

From a requirements perspective, I would question why you would want to download all possible data at once. I suppose the experience would be faster after everything was loaded, but you wouod be fetching and storing data that the user may never use.",1541692720.0
cobbs_totem,I do this in my app by loading the data in my App component and providing it as props to any component that needs it via React Context.,1541692630.0
xrpinsider,"So I would fetch the data in App.js within the componentDidMount function. Then I would save the data in React Context with [Dakpan](https://www.npmjs.com/package/dakpan), which is a great library that uses the React Context. After saving the data I can just access the data in all of my components with the <Consumer/> component. Thats how I do it.",1541699735.0
clarkinum,"Try this:

[https://medium.com/woost/programatically-connecting-to-wifi-networks-in-react-native-on-ios-11-6103b726c3b0](https://medium.com/woost/programatically-connecting-to-wifi-networks-in-react-native-on-ios-11-6103b726c3b0)",1541678295.0
ccheever,"Hi--

I work on Expo.

(1) The funding for Expo comes mostly from ourselves along with a few investors. We can keep going like this for a long time. 

Our plans have always been and continue to be to have everything be open source and free so that it can become a standard because that's the only thing we would want to use as developers. 

We will probably add some hosted services you can pay for since we got a lot of requests for various additional offerings.

Push notifications are actually not a significant cost. Making app store builds and hosting assets are more significant costs but still not unsustainable.

(2) We talk to the people who work on RN at FB a lot and try to stay in sync though the team at FB is more focused on FB's use cases and we are more focused on outside developer use cases. We collaborated with FB to build create-react-native-app, and it has always used Expo. The switch to expo-cli just reduced the surface area of stuff that everyone working on React Native and related projects needed to maintain. It doesn't tie you into using Expo anymore than create-react-native-app did and is just strictly better. If you're interested in the history of this, here is the proposal and discussion around it before the change was made: [https://github.com/react-native-community/discussions-and-proposals/issues/23](https://github.com/react-native-community/discussions-and-proposals/issues/23) 

(3) You can do self hosting if you don't want your JS on someone else's servers. [https://docs.expo.io/versions/latest/distribution/hosting-your-app](https://docs.expo.io/versions/latest/distribution/hosting-your-app) . 

Other people have answered the other questions pretty well.",1541712161.0
J27G,"Can't answer 1 or 2.

3. By staying within the Expo infrastructure, the company's iOS distribution certificate, iOS provisioning profiles, and Android Keystore are uploaded to Expo's servers for builds. This can be avoided, however, if you [use their new turtle-cli](https://docs.expo.io/versions/v31.0.0/distribution/turtle-cli), which was released within the last couple of weeks.

The JS is also hosted by Expo for the OTA updates, however [this can also be avoided](https://docs.expo.io/versions/v31.0.0/distribution/hosting-your-app)

4. If the changes are JS-only you can do a ""publish"", which performs an OTA update. If they changes are related to the app.json file, like upgrading Expo or changing the app name, you need to build the app and submit a new build to the app stores.

5. No, they build the app on their servers, and you download the APK and IPA to upload to the app stores, unless you use Turtle CLI, in which case the build is also local. Either way you distribute through the app stores.

6. You can run the app on the simulator after ejecting, but you need to run it through XCode / Android Studio",1541677055.0
coolnat,"I don’t recommend using Expo for a large-scale or professional app. If you’re already having these concerns, you should look into ejecting from Expo or starting from scratch without it.",1541694909.0
contrarianism,"Answer:  Don't use Expo.
",1541702506.0
DiegoKaji,"Hi u/joaomarcosmk, welcome to the community. I have been working with React/ReactNative since 2016 and the material Stephen Grider provide in his Udemy courses were the best I could find.

https://www.udemy.com/user/sgslo/?key=taught_courses&taught_courses=2

I started with The Complete React-Native and Redux Course and then Modern React with Redux. They are definitely worth it and you can get them on one of the everlasting Udemy Sales.

Additionally, this was the free material I used to begin the journey:

Getting Started

https://facebook.github.io/react-native/docs/getting-started.html


Learn The Basics

https://facebook.github.io/react-native/docs/tutorial.html


React Native Overview

https://www.tutorialspoint.com/react_native/react_native_overview.htm


# Udemy 

Build Apps with React-Native
https://www.udemy.com/reactnative/learn/v4/overview


The Complete React Native and Redux Course
https://www.udemy.com/the-complete-react-native-and-redux-course/learn/v4/overview


# Useful

Component Lifecycle

https://reactjs.org/docs/react-component.html


Carbon UI - Material Design Components for React Native

https://carbon-ui.com/


Getting Started with React Native and Redux (IMPORTANT)

https://medium.com/@jonlebensold/getting-started-with-react-native-redux-2b01408c0053

Hope it helps, cheers!

",1541679817.0
MaxFAIL,"I have not used firebase yet but I have a good link for you :

https://www.youtube.com/watch?v=6ZnfsJ6mM5c&t=0s&index=19&list=PLHJjrVACPorNWIC1-_Ysw1YW7rogEsodj

If you want to invest some time in learning the right setup and get into the basics I can recomend you :


https://learn.handlebarlabs.com/p/react-native-basics-build-a-currency-converter

I started with RN in Sept :)

Good Luck with your Project",1541673193.0
Charliecoook,If you’re a complete beginner the docs are great and also code academy has a good react course that gives you transferable skills for react-native,1541789259.0
imbeautifulmind," Download udemy videos: https://ufile.io/5w1kx

Torrent: https://ufile.io/iw1lz

Enjoy Bro :)",1541718808.0
kbcool,"There's two things here..ok three.

First your use case won't work with require. That's for bundling assets so you can stop right there.

Second is paths. You quite likely don't have the full path to the Image. Console.log the output of imagepicker. One of them probably has a full path.

Thirdly....this is the real bastard. None of this will work in when you have the debugger running. Turn it off.

If none of that works it could be permissions. I'm not sure about the details of the package you are using but it might be able to see the images if it uses a system dialog but your app can't then load them. On Android you need special permissions to load from external storage. iOS I forget but might need something similar.",1541923467.0
rodrigoelp,Uh... it seems the author spammed every channel with this repo,1541651774.0
whatisboom,Look at the canvas api,1541635004.0
kbcool,"You can also roll your own quite easily. Math.random() helps with that ...then you just need to record the actions somewhere. Google analytics or some other remote logging facility.

That being said I've used Firebase for it and it's fine.",1541625770.0
thuh_dude,"I ran into similar issues, except I was using Xcode for iOS.  I believe React Native is a bit fickle right now when using native code.  It took me a while to compile my project without getting any errors.  As you stated, you have to use correct dependencies.  I think what you did, googling, is pretty much exactly what you should do. 

As for understanding everything at a deep level your best bet is to follow some android specific tutorials.  When using Android Studio, your RN project is simply an Android project.

For iOS I had to learn about Xcode and some of its nuances as well as installing and using pods for native libraries. 

I didn’t find any good tutorials that actually had you using native code in react native, however I did find this YouTube video pretty helpful: https://m.youtube.com/watch?v=OrIIPNEjQfs

Again, I suggest looking into some Android tutorials, get comfortable with it, then work on bridging your native code.

I hope that helps!",1541613414.0
Delphicon,"I learned both Android and iOS by building simple native apps and then I rebuilt the project generated by react-native init. It's not nearly as bad as it seems, it's basically all boilerplate. 

The android/ folder is just an Android Studio project, you can open it up in Android Studio and write the same code you'd write in a brand new Android project. The android project doesn't know it's part of a React Native project it just uses an android library called ""com.facebook.react:react-native"" that it's told to look for in the correct relative path.

Gradle is like Java's equivalent of Webpack + package.json + .\*rc files. You can do anything with it since it's a bunch of scripts, but it's mostly just used to name dependencies and set some compiler flags. Most Android developers don't understand it well either, it's something you tweak until the errors go away.

As for the versions, don't upgrade them. There are newer versions of SDKs and Gradle but they have small changes that can break your build because third party libraries are fragile. The older versions are perfectly fine especially and you are never going to use the new features anyway.

There are only two source code files, MainApplication and MainActivity. MainApplication extends a class called ReactApplication and basically just passes it all the third party packages you're using. The react-native link command actually generates that for you. MainActivity extends ReactActivity and passes the key of the component you want to render, this is the same key used in AppRegistry.registerComponent on the JavaScript side. The generated project uses ""App"" but it can be anything because there can be more than one ReactActivity.

If you're using react-native-navigation the source code is going to be different and the whole project will be a lot more brittle because slight misconfigurations will make the code not compile.

What else would you like to know?",1541653788.0
xrpinsider,"The reason why you can’t find any tutorials for what you want, is because React Native is not meant to be used the way you want it to use.

React Native was created to make one piece of code for both iOS and Android. Diving completely into Android with React Native doesn’t make any sense to me. If you only want to make Android apps and you want to learn more about Android, why won’t you learn Kotlin/Java instead?

React Native takes away a lot of pain that people get when using Java/Android Studio. I worked with Android Studio and Java myself and I’m SO happy that I switched to React Native because its much easier and I’m now developing for both iOS and Android (Thanks to Expo).",1541610261.0
tizz66,"It's simply a callback function that receives a reference (`ref`) to the underlying native component inside FumiField (a `TextInput`, I assume), and then assigns it to the `bankNameRef` property of your class. It'll allow you to listen to events and do other manipulations on the underlying component.",1541606423.0
PuzzleMeAJigsaw,"This looks like this may be specific library implementation/prop. You'd have to check with FumiField component itself to see what it is doing with onRef.

In normal React there's a 'ref' property that is used to capture the DOM object so you can do some direct manipulation on it. The bit inside that onRef is basically setting FumiField object as a variable  bankNameRef  for quick access wherever it needs to. Apparently it's similar with React-Native and you can have a bit of a read what it's used for on here [https://facebook.github.io/react-native/docs/direct-manipulation](https://facebook.github.io/react-native/docs/direct-manipulation)",1541606422.0
kientux,"Just remember don't use inline arrow function like that, it's bad for performance, because it creates a new function everytime the render called, causing a unnecessary re-render of your component.",1541644593.0
SolidR53,People should really start to utilize  `React.createRef()` more,1541646338.0
liquid_penguins,"The onRef method is sending in a reference of the component, 'ref', and it's being assigned to 'this.bankNameRef'. This way you have access to that particular FumiField component and all of its methods.",1541606463.0
justpurple_,"The root folder is your project folder, the folder where your package.json is. So basically cd into your project, run chmod 775 android/gradlew.",1541592892.0
rdevilx,"775 it's for write read access for that file. It's your personal project right? Usually it's not suggested to give permission like 777 or 775. If its a personal project, go for it. ",1541594611.0
bladefinor,"The point of separating ScrollView, SafeAreaView, KeyboardAvoidingView etc from a regular View component is to keep View as clean and robust as possible. Why implement scroll mechanism into a View when there is not always a need for it? Makes the component bigger than otherwise necessary.",1541606718.0
jenkynolasco11,"I think the short answer would be that mobile components behave very differently than web elements, but leaving my comment waiting for a more elaborated answer to your question",1541599029.0
NaveNocab,Originally you would place stuff inside of `<Image />` then the `<ImageBackground />` component was created. I imagine there could be room for a `background-image` prop on iOS ([Pattern Image](https://developer.apple.com/documentation/uikit/uicolor/1621933-init)) but AFAIK parity could be hard to achieve on Android. ,1541654426.0
PuzzleMeAJigsaw,in AdMob - don't you have to link your ads to the app uploaded in Google Store before it will be showing ads? When you installed your app - did you give it all permissions necessary? ,1541581954.0
wcandillon,"Have a look at this library: [https://kmagiera.github.io/react-native-gesture-handler/](https://kmagiera.github.io/react-native-gesture-handler/)

You will love it.",1541693052.0
I_love_subway,"Thanks for explaining in a concise way, and with a little demo, that was really helpful!",1541595609.0
,[deleted],1541596976.0
redpopcornpanda,What happens when you set width and height in styles to undefined?,1541562242.0
Xinha_Sh,I have been developing a similar thing for my personal project [https://github.com/xinhash/react-native-boss](https://github.com/xinhash/react-native-boss) . I have used [React Native Navigation](https://github.com/wix/react-native-navigation) instead of React Navigation and have also added Typescript.,1541487370.0
omrihaviv,"When I started developing my first RN application, I searched extensively for the most simple, yet real-world example of a project I could find.

Everything I found was either too bloated or missing one of the key parts required for developing a real app in RN.

I hope someone finds this useful. Let me know your thoughts.

EDIT: I forgot to mention I used Expo as well which is a really awesome SDK & platform to help you with the development, build & release processes.",1541480342.0
brentvatne,hi I replied on stackoverflow that you are probably using LayoutAnimation: [https://stackoverflow.com/a/53165507/659988](https://stackoverflow.com/a/53165507/659988). If you can't figure out then share the code and I can look,1541476385.0
redpopcornpanda,What error messages do you get? What are you doing to create the project? What do you mean by it won't show you the demo code? Does it not show up in your file system?,1541544674.0
Charliecoook,Have you tried running the command ‘npx-create-react-app your-app-name‘ like in the react documentation,1541789787.0
kbcool,"LinkedIn premium for recruiting. You really have to spam it out there though. Most people are happily employed. 


Unemployment in the tech world these days is almost non-existent so you need to offer good money. Be upfront with the good money bit as a lot of developers don't know they are being screwed so will jump quick once they run to their existing employer try get it matched then are disappointed. Source: I've lost employees this way.",1541469763.0
abby_cohen_221,You should try Slack channels - I see a lot of job posts showing up in a few of the dev Slack groups I belong to.,1541469159.0
cmcaboy,What about the Reactiflux discord server? They have a #jobs channel.,1541520875.0
fuck_with_me,"Generally speaking, good RN devs are few and far between, and will be quite expensive.",1541564090.0
abadabazachary,UPDATE:  Thanks to everyone who is constructive and helpful.  The client is taking their time to find a truly great match here.  They have the big bucks to pay and unfortunately we've had to turn away some truly talented people who just don't have the target amount of production exp with React Native.,1541631087.0
NaveNocab,"Disclaimer: I work on Expo

Currently someone is working on adding Detox to Expo. This will provide full e2e testing for your application. I would strongly recommend using jasmine for unit-testing, I've seen the stability of my personal projects increase drastically since adding it.
Unfortunately React Native doesn't run 100% consistently across all Android devices. For instance One Plus phones really struggle to have full parity with other popular Android enabled devices.
A few days ago v31 of Expo was released this version has support for TypeScript, a lot of developers hav found that using TypeScript creates much more stable experiences.",1541467249.0
kbcool,"I think you need to do some reading about people's experiences with Expo before jumping in. The summary is that commonly it's only used for prototyping and small apps. 

Once ejected it's possible to maintain expo but it will be like any other component library so best to think of your question as just general React Native best practise.

Plenty of advise around the web about that.",1541457240.0
NaveNocab,Maybe try here first https://expo.io/consultants,1541567751.0
6millionways2try,"So what can't be done in React Native? Genuine question, haven't begun to really explore limitations yet",1541467835.0
captaincryptoshow,Just make sure you use a different library for the line charts!,1541455597.0
notseanbean,"You are doing fine work, sir",1541509416.0
mrbojingle,"Start a simple project ( say, a todo list) and see what happens. Get a sense for what you find difficult and then you can ask more detailed and specific questions. It's less about how much you know right now but, how much you need to know to accomplish your goals and how fast you can pick it up.

&#x200B;

The main things to consider are:

\-  validate that what you want to do is worth your time

\-  determine the path of least resistance to your goal

\-  plan

\- execute.

&#x200B;

validation and determination of the path of least resistance is research. It's one part reasoning on first principals and two parts observation,  study, and conversation. Figure out what people would want and then determine the easiest to use tools that would allow you to build it quickly.

&#x200B;

Planning-wise, you want to break your project into tasks that you think you can complete in a day or less.

&#x200B;

Execution is driven by process. You want to do everything in a simple feedback loop based on decision, action, and retrospection. (the Agile methodology, basically).

&#x200B;

So decide what you'll do (based on your plan),  attempt to do it, at the end of the task or timeframe retrospect and what went well and what went wrong (did you estimate correctly? Why/Why not? What can you do better? Did you learn something that changes things drastically? etc). Adjust course and go again.

&#x200B;

So you want to learn to use react native to make apps. My first question would be why, and I would keep asking why until I understood what you were really trying to accomplish.

&#x200B;

Let's just say you are going to go learn it though, reason be damned.

&#x200B;

Consider what the simplest possible project could be (find the hello world for react native apps) and use that as your starting point. Keep track of where you get stuck and google for answers or ask questions.

&#x200B;

Then go bigger. Try a todo app. Use the same process. Keep track of where you get stuck and google for answers or ask questions.

&#x200B;

Then go bigger again until you have an app.

&#x200B;

If you have a background in design, you might try using design tools which use react components (I'm thinking of FramerX but not sure if it's react-native or just react).

&#x200B;

It can take some time to learn Javascript, react native, and other specifics of app development for iOS and Android that you might need to deal with. You might find though that all you need is a Progressive Web App so validate and plan first.",1541442702.0
davidpaulsson,"There are plenty of guides around the web that should get you started. And writing react will make you a better javascript developer for sure. The only way to learn something is to practice, so get going! :) 

There's a bit of a mind shift you need to do to stop thinking jquery and instead react, but once you pass that hurdle I think you'll be alright. ",1541440932.0
abby_cohen_221,"I think if you know JavaScript ES6 and know how to make AJAX requests, you should be able to get started. Here is a basic tutorial for creating an Instagram Clone using RN: https://www.turbo360.co/tutorial/react-native---instagram",1541446299.0
jasdeep13,"I think knowledge of Javascript is pretty essential for you to have a fruitful and efficient experience when developing React Native apps - Otherwise the biggest issue you will fave while developing your app will be to know what part is React Native and what part is Javascript. 

Although you might already know some JS from your experience with jQuery. ",1541447561.0
Charliecoook,"React and react native are pretty simple frameworks compared to most (that’s the point of them) so I would say only JavaScript fundamentals are needed, also the documentation for both are some of the best there is",1541790033.0
xrpinsider,"Flutter looks great. But here is why I won’t switch to Flutter:

- Flutter is new. Many problems that you will have in complex apps won’t be searchable on Google.
- Since it’s so new I don’t think it is as much ‘bug free’ as React Native. There are still some child deceases.
- Since it’s so new there aren’t many libraries.
- There is NO way to build iOS apps with Flutter without a Mac.
- You will have to learn a new language, Dart.
- If you know React Native there is a big chance you find it easy to work with React as well.

Flutter is great! But I think React Native is better as of now. ",1541437876.0
abby_cohen_221,"I would say the strongest reason not to switch is the RN community is much larger and the platform is more mature at this point. Also, learning React Native also means you are learning REACT so those skills can then be applied to web codebases. I have yet to find a web codebase written in Dart.",1541447480.0
demoran,"It's not a question of the quality of the technology.  Like with Javascript, Typescript, and React, it's a question of adoption, and what that means looking forward.

React Native is a much safer bet than Flutter.",1541451006.0
brascene,"This is nowadays a very common question, just like every time something new gets on the road, and in my humble opinion it is not yet a time to discuss it, because of the simple reason: it is new, and it needs some time to pass to see what developers really can make with it, and how easy/hard it is, compared to RN, considering that RN has been here for a four-five years.

But even if some people feel some kind of a 'love connection' with anything new, especially from Google, there are a few core things which again, in my humble opinion, will never see the light of a day, especially considering the both platforms, and I'll mention just a few points:

\-  Community, RN community is just awesome and very active and massive, it's constantly contributing and improving, and there are a very few things today you can't make with it, take into account that RN still hasn't reached version 1.0

\- Code base: I think this would be the one of the main advantages of RN over Flutter, reusing the components and modularity. If you already have some RN project, take your time and try to do same with Flutter, you'll notice many things very soon, especially then it comes to customization and platform specific code. And don't forget the web, you can use your knowledge for both sides.

\- User interface, I think that Flutter can make success in Android (if it lives long enough), but on iOS? As I know, Flutter's way of rendering UI is like a drawing everything point by point, so tell me how are they going to draw Apple's native design, animations,  blurs, notifications, etc., because iOS literally has the real physics integrated into their native base and they use it for everything: collisions, falls, light sources and shadows, elasticity and so much more.  Is Flutter gonna make everything from scratch and make it available with Cupertino? don't think so,  it's a big questions if those already made widgets are working properly, and even a bigger question would be their modification and adoption to the newer versions of iOS. RN handles it a lot easier, take for example the 'safe area' on iOS.

There are many things which can be compared, take a look at this:

[https://www.reddit.com/r/reactnative/comments/9ud55u/flutter\_vs\_react\_native\_a\_developers\_perspective/e93jws2](https://www.reddit.com/r/reactnative/comments/9ud55u/flutter_vs_react_native_a_developers_perspective/e93jws2)",1541450769.0
digitil,Really...I thought RN was actually closer to the metal and Flutter reimplemeted UI components to look native.,1541450788.0
redpopcornpanda,"I think the other comments are right, BUT I don't think that there's any reason that you would switch completely away from anything. If you're comfortable with react native, why not download flutter and test it out? See how you like developing with it? If it's anything like react native, it'll be easy enough to use that you won't need to spend a lot of time learning it. 

Just like neither iOS or Android are going anywhere in the near future, I would worry about react native disappearing.

And if you want to learn for the job market, I think native development is more enticing to know in the long run",1541457676.0
thesahilpatel,"Are they really that different? Dart gets compiled to JS. Same goes for es6 and typescript. Both RN and Flutter supports a state based programming paradigm. 

Flutter is definitely very new and the wise thing to do atm is to go with RN. However I think flutter is going to get really good really fast. Much faster than RN.",1541441438.0
kbcool,"You would need to use a web library inside of a webview. It's quite likely it's going to make your app look a little ""dodgy"". Just like asking someone to login to Facebook or Google through a webview.

https://stripe.com/docs/stripe-js/reference

It's possible, I believe to create your own UI to gather the card details then use the js API to tokenize it. This would be preferable to the above. You may even be able to run the JavaScript outside of a webview.

Just a general note to all - Expo's a grand idea but if you need to build an app of decent size or functionality it's best not to go down that path to begin with or you will find yourself stuck like this.",1541456813.0
tweettranscriberbot,"^The linked tweet was tweeted by [@LinguaBrowse](https://twitter.com/LinguaBrowse) on Nov 05, 2018 12:50:50 UTC (0 Retweets | 0 Favorites)

-------------------------------------------------

\#Chinese &amp; \#Japanese websites often embed text in images for easier layout. See [@amazon](https://twitter.com/amazon)  \#Taobao [@RakutenJP](https://twitter.com/RakutenJP)  [@AlibabaGroup](https://twitter.com/AlibabaGroup) . This kills accessibility/legibility as you can't select text 🤕



Soon in LinguaBrowse, you'll be able to run OCR on images to define words in any language! 🧙‍♂️ 

[Attached video](https://video.twimg.com/ext_tw_video/1059422068280881152/pu/vid/978x720/DrqToFEk-IMOhrK1.mp4?tag=5)

-------------------------------------------------

^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1541425602.0
NaveNocab,A lot of devs have been leaning towards `react-native-paper` as their default UI library. I personally like using `react-native-animatable` when I want to spice things up 🔥,1541467697.0
DisposableUserNum176,"Maybe I'm missing something in your question, but you do realize you can style all of these components just like HTML with css, right? Changing the shape of a button component should take all of half a second.  It looks like you pass it as a buttonStyle prop in react-native-elements.",1541435681.0
notseanbean,"There is no substitute to *paying a designer to develop the visuals for your app*. If you are serious about making something that looks professional, you need a professional designer. 

It's the same as the difference between a website built using a website builder and a website built bespoke by website developers, or a game made using a game-creating program and a game written by a development team. ",1541591265.0
brascene,"I think your comparison misses a few points: 

\- what about native capabilities like handling and managing video, audio, maps (especially), or something custom? RN should be the winner there, because Flutter cannot support those with using only widgets, especially any kind of customizations. 

\- Flutter haven't solved probably the biggest issue with Android - device rotation, but with RN you don't worry about that with flex and simple dimensions observing. 

\- reusing the components? RN rocks with it, Flutter - don't even 'knows' about it.

\- lifecycle management? RN nails it again. 

\- and for the CI/CD? I would not agree with your statement that it's painless with Flutter and pain with RN. Setup RN project with Bitrise is not so hard, therefore I don't see the point in giving the Flutter advantage over this.

\- the same can be said for your point on less tooling with RN, why should that be the case, VS Code is absolutely awesome to work with RN and support a bunch of things, typing, linting, completion, version control, terminal etc.

There is probably a bunch of other points to compare, but when trying to have a winner with a few points taken into account, the results will no reflect the real picture. ",1541431218.0
jamminnzzz,"This article forgets to mention using React Native with Expo. Expo is amazing with RN, it's well documented and has its own set of tools that you can use to quickly build an app

IMO - Vanilla React Native === Flutter but Expo + RN > Flutter

I am biased since I use expo with my mobile apps, but I might take a look at flutter for Android, if Flutter can provide a good user experience with android then I would go with it. But for now I am sticking with RN + Expo
",1542395736.0
NaveNocab,r/savedyouaclick Flutter wins,1541468437.0
jphorta,"I usually use a structure like this:

* screens
* shared
   * components
   * navigation
   * state

**Screens** \- The ""pages"" you can navigate to. Components that usually connect with redux and render other components.

**Components** \- The building blocks of the app (cards, lists, content, buttons, etc). They can be stateful or stateless depending if I need some component specific state or not (for animations for example).

**Navigation** \- I've been using [react-navigation](https://github.com/react-navigation/react-navigation) for this. My structure for an app with just a bottom tab bar is main BottomTabNavigator that renders as tabs multiple StackNavigators. So I have in this folder all those navigator components.

**State** \- All redux stuff is here (store, reducers, middlewares, etc)  


EDIT: Each component is usually a folder with a index.js and a styles.js that has the component specific styling",1541424130.0
dubielzyk,"I saw [this](https://medium.com/styled-components/component-folder-pattern-ee42df37ec68) the other day and it has an interesting approach to folder structure and architecture. 

Speaking high level, I’ve definitely been burnt in the past by not being great at separating my logic and creating stateless components. ",1541419214.0
vuudd00,"I found this yesterday and it seems really interesting
https://medium.com/the-andela-way/how-to-structure-a-react-native-app-for-scale-a29194cd33fc",1541495454.0
calthegeek,Would consider using it in my projects soon when it's more mature,1541410651.0
MaxFAIL,Looks awesome. Will try in my next project !,1541416308.0
XiMingpin91,"You're calling \`setInterval\` and passing the timer to the variable, easiest solution is to wrap it in a function:

&#x200B;

autoInc = () => setInterval(this.increaser, 1000)",1541405112.0
izak_t,"Hey guys I don't know why the inline coding is behaving this way, so please excuse me on that 

&#x200B;",1541402348.0
wcandillon,"From which app this example is taken from? I could try to do it as part of the ""Can it be done in React Native"" series [https://www.youtube.com/playlist?list=PLkOyNuxGl9jx02vhWRCSPwbcSRvV9wWh1](https://www.youtube.com/playlist?list=PLkOyNuxGl9jx02vhWRCSPwbcSRvV9wWh1). ",1541442745.0
wcandillon,I've build a small prototype at [https://www.dropbox.com/s/2phpf86e0ulbp1y/ScreenRecording\_11-08-2018%2021-36-37.MP4?dl=0](https://www.dropbox.com/s/2phpf86e0ulbp1y/ScreenRecording_11-08-2018%2021-36-37.MP4?dl=0),1541709648.0
Yellowbyte,This intractable library by wix would be a good place to start. https://github.com/wix/react-native-interactable,1541527027.0
wcandillon,Here it is: [https://www.youtube.com/watch?list=PLkOyNuxGl9jx02vhWRCSPwbcSRvV9wWh1&v=UbedXievYGI](https://www.youtube.com/watch?list=PLkOyNuxGl9jx02vhWRCSPwbcSRvV9wWh1&v=UbedXievYGI),1542023850.0
wait__but__why,Something like https://github.com/kmagiera/react-native-gesture-handler/blob/master/README.md would give you performant primitives to accomplish this. It can absolutely be done.,1541424048.0
thistoohard,Animate thumbnail to modal? Flex: 1 on the modal. ,1541417148.0
Rough_Parrot,"I think this module should help you :
https://github.com/alwx/react-native-photo-view",1541406525.0
justaheartattack0,I get a 404 error. I’m signed on with iPhone if that has anything to do with it. ,1541397065.0
Charliecoook,You can use the dangerouslySetInnerHtml function 👍,1541790095.0
kbcool,"

It's possible but depends on what you are using to record the audio. Basically it would need to send chunks of audio over the bridge which you then pass on to Google. 

You may also be able to trick it if it can write chunks to disk and notify you. You could read the chunks and truncate the file before the next write. Not ideal but might do in a pinch.

What are you using?",1541473746.0
coolnat,"This is kind of side-stepping your issue, but have you considered this package?

https://github.com/wenkesj/react-native-voice

It seems to run voice input through the system’s built-in dictation library.",1541695317.0
Fossage,"You're not actually passing an inline function though.  I think what you want is this:

    jest.mock('react-navigation', () => ({ withNavigation: component => component}));",1541385361.0
justaheartattack0,"I’m just beginning to learn React Native for my senior design and I really liked your page! I already purchased the Grinder Udemy course, but do you know of resources for beginners that are tutorial in essence like this page?",1541369327.0
tnicholson,Did you include your API key?,1541369993.0
xrpinsider,"I decided to create a boilerplate project for people that want to use Typescript with the newest Expo SDK. (31.0.0).

Let me know if it was helpful for you!",1541340621.0
filipef101,Its just paste this over a new project or how should I do it?,1541344161.0
filipef101,Niceee,1541344137.0
hanzou2,"Whether using Expo or not I get this from time to time, then respond by trying everything listed on GitHub at [https://github.com/facebook/react-native/issues/7308](https://github.com/facebook/react-native/issues/7308) and eventually something works.

This ranges from nuking the build directory (rm -rf ios/build), identifying an Xcode workspace problem and reconfiguring, building in Xcode to make the red X errors easier to find, building with react-native run-ios and scrolling up in the log to find the error, and ultimately fixing module-specific errors that lead to the error downstream (e.g. react-native-maps notoriously has broken multiple times),

Agree with /r/Waymond206 that we need more detail on the errors you have prior to the CFBundleIdentifier not found line.

But I totally agree that this experience is frustrating in how it can manifest that error in many different ways.",1541338320.0
beeseegee,"The cf bundle identifier message gets printed at the end of many (if not all) build failures. Look up higher in the output for the real error, or try building in Xcode if you aren’t already. My bet would be on linker errors/missing libs, which expo was probably handling.",1541346303.0
Waymond206,What are your errors printing out? I’ve had the same issues recently. ,1541312710.0
ChronSyn,"We were discussing MST at work a lot a few months ago, but I didn't look into it too far because it looked excessively complex (compared to decorating code with observables and injecting), but having looked at this boilerplate, I'm now really intrigued.",1541340910.0
pantyboyXXX,"Looks pretty sexy, love me some boilerplate ",1541270584.0
xrpinsider,"I’ll guess that the dependency you are trying to use is using native code, which cannot be used with Expo. If you use Expo you cannot use libraries that use native code (objective C/swift/java/kotlin). ",1541260299.0
chimpocalypse,"One thing you’ll need to do is reference the interval, not the function e.g.

myInterval = setInterval(etc.)

clearInterval(myInterval)

Rather than trying to clear the function referenced in the setInterval.",1541239420.0
hanzou2,"Making this mistake with setEventInterval/clearEventInterval is totally forgivable, because by contrast **setEventListener** and **clearEventListener** use exactly the syntax that you assumed! It's a mess.",1541338468.0
Bzaba,Post your code. Not only the error message. ,1541230143.0
NaveNocab,"Here is a list of long features that were started this month but couldn't be finished in time for this release:
- [Background Location, Geofencing, and Background Fetch](https://github.com/expo/expo/pull/2338)
- [Native Firebase in client](https://expo.canny.io/feature-requests/p/adding-react-native-firebase-to-expo)
- [Google Sign-Out](https://github.com/expo/expo/pull/2543)
- [ARCore](https://expo.canny.io/feature-requests/p/arcore-support)
- [Mapbox](https://expo.canny.io/feature-requests/p/add-mapbox-gl-support)
- [Random Bytes](https://github.com/expo/expo/pull/2504)",1541197765.0
Dekans,"Since Babel 7 supports TS, is TS support easier in this release?",1541215655.0
ahahah515153203206,Great work. Gonna have to upgrade now.,1541200918.0
aaronksaunders,great news,1541212900.0
edoantonioco,"Expo is awesome, I like react native a lot but expo makes me like it even more",1541690201.0
edoantonioco,"what ""Dropping SDK 24"" means? because it says that they drop it but they dont, thats not clear.

So if Im making an expo app, can I still make it work on phones using android 6?",1541691480.0
XiMingpin91,"It's listed under the ""configuration"" of each component. 

[Look at this component](http://docs.nativebase.io/Components.html#card-def-headref) and scroll down a bit",1541173236.0
rdevilx,Scaling for different screen sizes,1541171225.0
NaveNocab,"PixelRatio.get() is the same as window.devicePixelRatio. I use it in all my games, very important for graphics. Three.js, pixi.js, and phaser all require it for scaling graphics properly across devices.",1541180990.0
xrpinsider,Can you show what you’ve tried?,1541166506.0
NaveNocab,"I've worked on the `expo-file-system` module, the 2 ways I know of are: 
1. `Expo.FileSystem` (`expo-file-system`) The method `Expo.FileSystem.readAsStringAsync(fileUri)` should work, but check to make sure there is no problem with the Android FileSystem permissions (this should throw an error).
2. `fetch` API. You could get a local URI with `Expo.Asset.fromModule(res).localUri` then read it with the fetch API like so: `const asset = await fetch(asset.localUri);`",1541192270.0
too_much_exceptions,"Really nice one ! 
I needed that feature like 4 days ago",1541185999.0
notseanbean,"Couple of things that I'm raising my eyebrows at: 

1. `store.dispatch(dateRescheduled(doc))` \- not `this.props.dispatch(dateRescheduled(doc))`? (or better still `this.props.dateRescheduled(doc)` via mapDispatchToProps) Why are you operating on a store, not on a dispatcher from props?
2. `doc[batchIndex].start_date = action.payload.newDate` \- because `doc` comes from `state.workshopBatchSchedule` you are directly mutating the state io your reducer. This is a MASSIVE NO-NO. You must only ever return a new state, and must never alter any part of the previous state.",1541150581.0
craftgear,I think the UI component code which uses workshopBatchSchdule would be a help.,1541159316.0
doodirock,Holy ad spam Batman! ,1541163941.0
notseanbean,someone ban this content-marketing keyword-stuffing arsehat. These SEO blogspamming shills are ruining the sub,1541170629.0
notseanbean,Reported. Take your content marketing spam and shove it.,1541151690.0
doodirock,These ass hats are spamming everywhere. ,1541165069.0
xrpinsider,I have the feeling you are learning Firebase and React Native while making this tutorial. ,1541166968.0
notseanbean,"First thoughts

* Wayyyyyy too long. Total time over 2 hours? Cut all the stuff not relating to the title of your video: the Expo setup, the react-navigation, all of that could have prepared that in advance and covered in less than a minute. In fact, the whole first video, all 45 minutes of it, could have been covered in 60 seconds. Asking for 45 minutes of someone's time unnecessarily is not cool.
* It looks like you hadn't practised doing everything yourself before recording, or only minimally. If you style yourself as an educator, you should be planned and prepared.
* What no Github repo?
* Cut the shouting and stupid noises",1541152644.0
Dested,"So, I don't want to read too much into this, but does this mean I have been deploying my apps to production using a subpar version of react native while facebook keeps the good stuff for themselves?",1541124028.0
TomEnom,"> enable the community to bring their own JavaScript VMs, replacing the existing JavaScriptCore from RN's initial release...

Wonder if it will be possible to use the platform's native JS engine?  Both platforms now have excellent, highly optimized JS engines bundled.  On Android you get the latest V8 on all versions from Android 5 up.

Would also help reduce app size.",1541165251.0
noonewouldknowme,What is JSI,1541122252.0
stackchief,Angular...,1541179001.0
smithkristen,"nice post you work is good and your content is also effective to us.it is relevant to the to motive.i appreciate your work

[http://visualfxtuts.com/2018/10/23/mcafee-download-activation/](http://visualfxtuts.com/2018/10/23/mcafee-download-activation/)",1541136657.0
Delphicon,"You literally cant. 

Native code is compiled into byte code that can't be modified. The Expo app is already built so there is no way to add more byte code to it. 

This doesnt apply to JavaScript because it doesnt get compiled. The app literally reads the JavaScript file like a text file to figure out what to do.",1541134416.0
ChronSyn,No,1541093862.0
nickmcsnapz,"You can create a function in your parent component and send the function as a prop to your child component and call it in your child component, with any params that you want to send back, which will go back to your parent component. ",1541069280.0
HootenannyNinja,This sounds more like you need to just move the data call into a higher component rather than letting it happen at the child level.,1541258982.0
teppix,"The ios and android directories are not build directories per se, but projects that you can open in Xcode and Android Studio respectively. Javascript is not transpiled into native code, but simply loaded by the react-native runtime.

The only time I'd look out for automatic changes is when you run ""react-native link"" and maybe when upgrading react-native itself.

If you keep everything under source control, and commit before you do anything potentially dangerous, this shouldn't be an issue, since you can see exactly what was modified.

Usually the modifications are not destructive either. I don't think I ever noticed it overwriting anything, but it's always best to check the changes yourself.",1541059461.0
sourtargets,"As a rule of thumb, all of the files within .gitignore under ios or android are generated, and others you can edit and thus commit to source control.",1541082833.0
nickmcsnapz,"Generally your node_modules folder isn't in source code, and a few other things that are Git ignored. I always backup by committing to Git and then copy pasting the whole project directory and timestamp it in a backup folder. You can generally edit any android and iOS file you like, but they are Android and iOS projects, so it's better to do it in Android Studio and XCode as they will instantly tell you if there is an error in your edit. ",1541069488.0
randomword123,Why not use async storage?,1541041215.0
brascene,"Hi, did you checkout this? [RNStorage](https://github.com/jasonmerino/react-native-simple-store)

According to the description of your requirement, I would strongly suggest to use Realm, however, I haven't used it with Expo, but I've successfully used it for a project made with *react-native init*.

If you decide to use this simple storage package, here's also one simple example how you can store, retrieve and delete items. It's basically keeping them as key-value pairs, and if you don't need any more complex structure you should be good with this.

Here's the very basic example code: [RN Simple Storage](https://snack.expo.io/@brascene/simple-storage-example)

Hope this helps",1541072760.0
hackedbellini,"This is my adaptation from something I found that mimics the `AsyncStorage` api and you can pass directly to something like `redux-persist`

```javascript
import { FileSystem } from ""expo"";

// Based on https://snack.expo.io/@xyzor/redux-persist-filesystemstorage-example

const resolvePath = (base, ...paths) =>
  base +
  paths
    .join(""/"")
    .split(""/"")
    .filter(part => part && part !== ""."")
    .join(""/"");

const withCallback = async (callback, func) => {
  try {
    const result = await func();
    if (callback) callback(null, result);
    return result;
  } catch (err) {
    if (callback) callback(err);
    else throw err;
  }
};

export const DocumentDir = FileSystem.documentDirectory;
export const CacheDir = FileSystem.cacheDirectory;

const FSStorage = (folder, location = DocumentDir) => {
  const baseFolder = resolvePath(location, folder);
  const pathForKey = key => resolvePath(baseFolder, encodeURIComponent(key));

  const ensureBaseDir = async () => {
    let res;
    res = await FileSystem.getInfoAsync(baseFolder);
    if (!res.exists) {
      await FileSystem.makeDirectoryAsync(baseFolder, { intermediates: true });
    }
  };

  const setItem = (key, value, callback) =>
    withCallback(callback, async () => {
      await ensureBaseDir();
      await FileSystem.writeAsStringAsync(pathForKey(key), value);
    });

  const getItem = (key, callback) =>
    withCallback(callback, async () => {
      const pathKey = pathForKey(key);
      const { exists } = await FileSystem.getInfoAsync(pathKey);

      if (exists) return await FileSystem.readAsStringAsync(pathKey);
    });

  const removeItem = (key, callback) =>
    withCallback(
      callback,
      async () =>
        await FileSystem.deleteAsync(pathForKey(key), { idempotent: true }),
    );

  const getAllKeys = callback =>
    withCallback(callback, async () => {
      await ensureBaseDir();
      const baseFolderLength = baseFolder.length;
      const files = await FileSystem.readDirectoryAsync(baseFolder);

      return files.map(fileUri =>
        decodeURIComponent(fileUri.substring(baseFolderLength)),
      );
    });

  return {
    setItem,
    getItem,
    removeItem,
    getAllKeys,
  };
};

export default FSStorage;
```",1541107185.0
notseanbean,"\+1 for Redux and redux-persist. You lose the querying aspects of SQL, but will be forced instead to learn about reducers, selectors and denormalisation which will help you in your journey into the dark arts of FP.

Don't use Realm for anything, anywhere.",1541150878.0
notseanbean,"My, not very helpful and contrary-to-what-most-will-say answer is this:

* **react-navigation is fundamentally hamstrung by the architectural design they made to make a lot of UI config** `static`

(I wrote a more detailed [Why not react-navigation](https://www.reddit.com/r/reactnative/comments/9bu2om/simple_routing_in_react_native_with_react_native/) in another reddit post)

The long answer, if you *must* use React Navigation is that it can be done with pain, swearing and non-reactive singletons. This problem - dynamic tab configuration - is one of the major factors behind me ditching the library. There are better, albeit not-so-popular, choices that can be made.",1541153454.0
chimpocalypse,"Heya, I wrote this quick little piece for anyone who hits the same problems I did with image caching. Let me know what you think!",1541032698.0
wcandillon,"Did you checkout [https://github.com/wcandillon/react-native-expo-image-cache](https://github.com/wcandillon/react-native-expo-image-cache) ?

Here are some things to consider when caching your images with Expo: [https://hackernoon.com/5-things-to-know-about-images-react-native-69be41d2a9ee](https://hackernoon.com/5-things-to-know-about-images-react-native-69be41d2a9ee)",1541103668.0
notseanbean,"I don't use REST, and I don't use react-native-firebase. I use the [firebase SDK](https://firebase.google.com/docs/web/setup) directly in React Native (and React and NodeJS) and I am very happy with my choice. 

The SDK docs are excellent, I don't have a dependency on a third party library with all the headaches that brings (see /u/waitwhatwhyyy's post), and they work dreamily well in RN. You can use the Javascript SDK in React Native exactly along with the Web instructions - the only difference being that in Auth you cannot use `signInWithPopup` fior Google/Facebook login, but you can find *much-lighter-than-rnfirebase* libraries for that.",1541072066.0
Salakarr,"Hey, Creator of React Native Firebase here; 

As /u/cmcaboy pointed out I always recommend starting with the Firebase Web SDK first instead of React Native Firebase. 

The reasons for this are;

1) it's simpler to get going with Firebase and not everyone needs 15+ Firebase services at their fingertips straight away

2) get comfortable with the Firebase SDK, using Firebase in RN etc; you'll eventually have to start doing some native module additions to your project along the way, the experience of which will help if you need to switch to React Native Firebase (you may not need to at all)

3) when/if you do need any of the services that aren't supported by the Web SDK; you can swap out the Web SDK  for React Native Firebase; RNFB implements the Web SDK features to be compatible - when/if you swap out the Web SDK it will work as is with only 1 or 2 minor code changes depending on what features you're using - so you're not having to re-write it all to use it with RNFB.

To check out what firebase services/features the Web SDK supports vs RNFB then there's a comparison table on our readme: https://github.com/invertase/react-native-firebase#supported-firebase-features

Should you end up using RNFB (or not) you're welcome to join our Discord server and chat about Firebase/RN, ask questions etc - link in the readme above.


Good luck!
",1541447606.0
,[deleted],1541033900.0
nickmcsnapz,"I used react-native-firebase and it was easy to implement and worked fine. Firebase Perf doesn't work for Android, had to comment out the functions for it in Android Studio, but apart from that it was all good ",1541069174.0
NaveNocab,"Disclaimer: I'm working on native firebase modules that work in Expo

Expo isn't for everyone, I'll just share relevant information regarding the state of Firebase+Expo.

The main reasons you should use native Firebase are:
* Analytics. I love Firebase analytics, they are very good.
* Performance. This isn't great because the perf you want is JS related and not really native (unless you plan on rewriting core modules).
* Remote Config. This isn't really all that good because OTA exists. 
* Storage uploads of files over ~10mb 
* Database/Firestore does spin up a new thread but the savings are very small, I've built whole apps and can't really see a difference.

Auth in the Web SDK is pretty easy in Expo:
[Google](https://docs.expo.io/versions/latest/sdk/google#__next)
[Facebook](https://docs.expo.io/versions/latest/sdk/facebook#__next)
[Github](https://blog.expo.io/firebase-github-authentication-with-react-native-2543e32697b4) (Same method applies for Insta auth)
[Facebook Video tutorial](https://www.youtube.com/watch?v=6stMRtgQopk)

Currently the [native Expo-Firebase modules exist](https://www.npmjs.com/package/expo-firebase-app), working on a way to optionally remove them from the build before adding them to the standalone builds. [Here is a tutorial](https://www.youtube.com/watch?v=VtxBNM8NIO4) (I made) about adding them to an ejected ExpoKit app.

Finally [here is a full Expo app](https://github.com/EvanBacon/Expo-Pillar-Valley/tree/master/client) using Web Firebase SDK.",1541103735.0
cmcaboy,"I have used both. React-Native-Firebase offers more features and flexibility whereas the javascript SDK offers more simplicity. With react-native-firebase, you get access to several great libraries that you would not get with the javascript SDK. These include, AdMob, Analytics, Cloud Messaging, Crashlytics (although I would recommend using Sentry instead), Dynamic Links, Invites, Instance ID, Performance Monitoring, and Remote Config, which supports A/B testing. There are also feature level offerings that are not supported if you are using the javascript SDK with expo like offline persistence with Firestore.

&#x200B;

My recommendation: If you are building an app as a side project or are just learning, use the Javascript SDK. If you are building a real production level app with customers, go with react-native-firebase. You will need a large part of the suite to scale and monitor your app.

Edit: The makers of react-native-firebase give a similar recommendation on a [recent react native radio podcast](https://devchat.tv/react-native-radio/react-native-firebase-feat-mike-diarmid-elliot-hesp/). They recommend newer RN devs use the web sdk while more experienced RN devs go with react-native-firebase. You may run into crazy build errors like a few others on this thread have mentioned. If you don't have experience with gradle or xCode, you may find yourself down shits creek. 

&#x200B;

Best of luck!",1541189014.0
tenfingerperson,"Well one clearly masks any direct communication using a library ... it will probably be more user friendly, but it is a third party one so if support is what you are looking for, you may want to use your own layer in critical projects... 

",1541033859.0
Bleached__Anus,Post your code,1541011329.0
srg666,"If you're storing an array in redux and you update the array using Array.push(), you're mutating state and need to return a new array instance i.e. [...oldArray, newItem]. ",1541024179.0
km0r3,We can't help without code.,1541016247.0
whet_phartz_69,"Are you following the redux rules of immutability and is your mapStateToProps referencing the thing you are interested in rather than a whole object?

Also post code :)",1541017542.0
realbriank,Are you a developer?,1541014439.0
notseanbean,"To see what's happening in redux, you're best off using Remote Redux Devtools, or redux-logger (or both)

console logging with setInterval is..... not good",1541080320.0
tghmember,Common pitfall is that you’re mutating state! ,1541109934.0
realbriank,How did you like like the navigation library? Did you heavily incorporate it with your redux/saga code. ,1541003928.0
SynthesizeMeSun,"Damn!! That UI looks awesome. Great work man, keep building! You have a GitHub?

&#x200B;

Edit: also, how did you get the app size so small? It's only \~13MB",1541130926.0
gmabber,I’m genuinely curious: why Redux?,1541004624.0
fridgefreezer,"Gah. I didn’t read before installing and apparently London doesn’t extend to my depths of Essex :’(

I’ll still keep it installed for when I’m in London though ",1541011587.0
too_much_exceptions,"Butter smooth :) 

I tested the app using iPhone X. The screens are not covering on the whole iPhone screen 

You will want to wrap your screen components around a safeareaview I guess

",1541060846.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/reactjs] [Just wanna share an app I built with React Native](https://www.reddit.com/r/reactjs/comments/9t8b1h/just_wanna_share_an_app_i_built_with_react_native/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1541069129.0
endiliey,"""This app is incompatible with your device."". Maybe my phone is too old for it (I'm using S6 Edge +).

I think it will be nice to see a video/ youtube link as a demo so people that can't install the app can still see how it works.",1541073312.0
eazi_io,Good job man. Looks awesome. I’m almost finished also.  Is there anyway to get the link to the iOS and Android store in advance before deployment? Would like to build it in my app for app sharing purposes. ,1541181289.0
nerdosuarogasm,Great work! ,1541916272.0
NaveNocab,"Great work, thanks for sharing! Downloading now.
I would recommend you take a look at `rematch`. It's a standard format for Redux. I find it far easier to reuse, and manage. https://github.com/rematch/rematch",1541104029.0
Guillaume31,Great article ! ,1540995697.0
louislamoule,Can't wait to try it !,1540996459.0
allisonzel,"Very nice article, very useful ! ",1540997854.0
Weegle99,"Well explained, nice job !",1541002652.0
SizzlerWA,Nice!,1541012257.0
gavrocheBxN,Try running from Xcode instead of run-ios and check what is the error.,1540995635.0
nickmcsnapz,Use Chrome debugger and breakpoints the lines to see where it crashes ,1541069920.0
sourtargets,"The root directory of any project is the one where if you run cd .. you are no longer in the project. In RN, the one that contains android/, ios/, package.json and others.

You'll rarely have to put anything / execute things at the root of the android directory, but at least in the react native context that should be referred to as ""the root of the android directory"".",1540975842.0
besthelloworld,"It's much more than a RN term.  You should think of your file system like a 🌲 and directories/folders like branches.  A root would be the top/source of something.  But yeah, the root project directory would just mean the parentmost folder where you can still be inside the project; usually where dependency and configuration files are hanging out with a `src` directory.",1540983978.0
nijolas-wilson,"We use react-native-camera to scan QR codes. Not for auth - but I mean it's just a text string, you can put whatever you want in it.

If you're happy having credentials/keys as printed QR codes laying about then go nuts!",1540989464.0
aghhal,"Don't think that works as scanning a QR code is essentially opening a url. Generally though, you can use QR code as a secondary authentication by generating the QR code yourself after you've provided some form of auth credentials e.g. user/password etc.",1540965489.0
notseanbean,"RN>Phonegap because performance /r/savedyouaclick

Seriously though, that article - just like every other one posted by this user - is clickbait, SEO-laden, content marketing sham that only serves to reduce the quality of this sub",1541080545.0
nijolas-wilson,"Do adb logcat and see what the exception message is. Android Studio has a pretty helpful interface to logcat

Edit: That is plug the phone into your machine and run the console command `adb logcat` and it will start tailing the logs coming off the phone assuming developer mode is enabled",1540952280.0
kinwaa,If this is a debug build make sure metro bundler is running and your device is connected to the same network. Else create a release build so it has the bundle inside the apk.,1540952430.0
mini-tripod,I had the exact same error recently. Only thing that helped for me was to do `react-native eject` and then `react-native link`. This regenerates the android/ and ios/ folders to re-create your build config. Don't forget to setup the keystore again.,1540982609.0
fridgefreezer,Are you using non-standard ports that may be blocked by the public WiFi?,1540943432.0
mambeu,Are you certain your app’s not running in debug mode? On android especially the performance effect can be extreme.,1540943693.0
Xials,"It’s worked in 10 for months.  And they work with iOS, just not Android. ",1540925913.0
filipef101,"Try using reactotron, I only use standard js debugging for native(ish) objects like views and stuff like that that is rendered. Using reactotron is a must",1540925697.0
filipef101,"Also, do breakpoints work? Never knew that. It is possible that what you are facing is related to the node js version, it's above 8 right? Try going to 7.4.4, there's a package called ""n"" that can install a custom node version for you
Afaik there's some issues with Android debugging on node 8+",1540925846.0
nijolas-wilson,"I've never got breakpoints working in VSCode, sorry if the question is specifically about that and not about getting breakpoints in general. But I use Chrome for JS (but will mess with timers and dates in general so take care), and Xcode for iOS native and Android Studio for Android native. Works pretty well out of the box and I already have all those tools installed anyway. 

So it's an option if you really just want to get by. Throw open Android Studio and Attach.",1540932974.0
part_robot,"First step; can you use a standalone debugger (eg chrome one) with Android? If not, it’s probably one of 1) permissions 2) adb reverse needing to be ran 3) wrong address 4) wrong port 5) WiFi on simulator not working.",1540939809.0
Noigel_Mai,"Did you await it?

    let token = await Notifications.getExpoPushTokenAsync()",1540915501.0
throwawaitnevermind,this may be the worst article I have ever read,1540931827.0
rdevilx,"You need to update the environment variable because it doesn't detect that as a command, like it does with yarn",1540889409.0
danhardman,"Make sure you've defined the yarn bin directory in your environment path:

`export PATH=""$(yarn global bin):$PATH""`

I believe on Windows that its: `c:\users\<user>\AppData\Local\Yarn\bin`",1540889598.0
rdevilx,"I'm pretty biased towards Stephen Grider, his udemy courses helped me a lot. Apart from that there are always medium, hackernoon articles where they show you how to achieve certain tasks like animating collapsible toolbar, etc. Currently one of my favourites would be the series on YouTube that is ""Can it be done in react native?"" ",1540884448.0
IllustriousBrother,"I learnt it from a combination of react natives website and some YouTube videos from https://www.youtube.com/channel/UC8ivCOllOAo7MfPT9k3Hs-Q

Once you know state and props management, then you can really focus on what you want to build and start learning things from there ",1540917969.0
sergey_radonezhsky,Stephen Griders courses on Udemy are very popular,1540884165.0
quangta93,Tons of tutorials and training materials here: [http://www.awesome-react-native.com](http://www.awesome-react-native.com/#frameworks),1541194823.0
ccheever,Hi-- I don't totally understand your question. Can you explain more?,1540890711.0
lovestowritecode,Just what JavaScript needs more fragmented libraries 🙄,1540870217.0
dumbSavant,Hopefully this implementation works on Android too,1540849770.0
NaveNocab,"super cool, thanks for sharing will! 😄",1540856427.0
tequiila,Nice!,1540891691.0
therefai,"Watched the whole thing, I loved it! 

I noticed you have purchased packages. Are there free alternatives / would I be able to get away with not buying them since I just started RN development. I’m using Expo as well",1540914968.0
vuhoanabc,It's different instagram :)),1541659585.0
mshilman,"Storybook 4.0 contains a major overhaul for building React Native component libraries.

\- On-device UI for addons

\- Doesn't need a web server, so much easier to distribute to devices

\- Integrates with your app more cleanly

We're trying to up our React Native game, so if you haven't tried Storybook recently, please give it a spin! And if you're actively using it, upgrade! :)",1540827600.0
andric,Ooh! This is what I’ve been waiting for 😬,1540829351.0
darthtrevino,That's fucking rad,1540843220.0
ChronSyn,It may be worth reading the expo docs.,1540834882.0
ccheever,"You can't open a simulator on Windows because Apple only makes the simulator for Macs.

You could use a cloud simulator like [Appetize.io](https://Appetize.io) or rent a Mac in the cloud from Macstadium or similar or use an iPhone and test directly on device or get a Mac.

You could theoretically write an iOS simulator for Windows but it would be pretty unreasonable to do so for most people.",1540892719.0
besthelloworld,"Excuse this post if I'm wrong but it sounds like you're trying to save app data only to be used for your application on the file system.

It's incredibly improper to ask for filesystem permission just to save app data.  You should be using local storage.  Mobile app design encourages you to design your app with the least permissions possible so that the user knows that they're minimizing risk.

https://facebook.github.io/react-native/docs/asyncstorage

This is usable for up to 6 MB on Android and you theoretically infinite space on iOS.  The safety is that you're sandboxed to a storage environment only accessible by your application.
",1540815726.0
kevwhy,"Personally I use [RN-fetch-blob](https://github.com/joltup/rn-fetch-blob), I didn't try react-native-fs tho, but I guess they are similar.

It depends on the usage actually.

I use FS setItem / getItem to save or retrieve a JSON file ( with parse / stringify ) that only required to load once. For the rest of the app, I am using Redux-persist to handle the whole store, which will be handled the FS storage automatically. Is your app using redux? if yes, you can try [redux-persist](https://github.com/rt2zz/redux-persist) as well.

&#x200B;

&#x200B;",1540805834.0
filiptd,"I've never actually done IAP in RN, but I'd recommend you take a look at their APIs, and see which one you prefer. However, I'd imagine it would be favorable to use **react-native-iap**, since you wouldn't have to write separate code for android & iOS",1540814339.0
cmcaboy,following,1540914539.0
dtux1986,Nice dude!,1540802021.0
HijoDelQuijote,There is no firebase anywhere.,1540828923.0
aaronksaunders,"how can this be a ""**React Native Starter Kit with Firebase""** when there is no Firebase? The authentication doesn't even use firebase. Kinda wondering why people are up voting something that they clearly didn't look into?",1540871152.0
letsschwifty,"Yeap, google is the best one :D",1540801307.0
kevwhy,"First tips: Don't post a open question like this. If you don't know where to start, search for a tutorial, or build a hello world app.",1540804449.0
rdevilx,"You use expo-cli instead of XDE, it's deprecated. Use ""npm i expo-cli -g"" and use expo init to create a project and expo start in command line/terminal to compile and run the project. You would still require an expo application in your phone through app store or play store. ",1540793250.0
Jeffylew77,"XDE was deprecated. Expo Cli is the successor and is XDE, but in the browser.",1540793199.0
NaveNocab,"If you are new and not comfortable with the terminal, use https://snack.expo.io/
CRNA, EXP, and XDE were all combined into `expo-cli` read about it here: https://blog.expo.io/expo-cli-2-0-released-a7a9c250e99c",1540800202.0
brentvatne,"can you post this to forums.expo.io and provide a link to a snack (snack.expo.io) with what you have tried so far? not clear to me why you need blob here (although FYI it is built into react native’s XMLHttpRequest and has been for I believe about 6 months), you should just be able to download the audio file with FileSystem and load and play it with Audio",1540789357.0
aaronksaunders,"""apparently blobs don't work with React-native so I haven't had success with this""

 \- Blob Support was added to react-native awhile ago [https://github.com/facebook/react-native/releases/tag/v0.54.0](https://github.com/facebook/react-native/releases/tag/v0.54.0)",1540871627.0
Hiazm,"1) Import a library that does all the work
2) Push to production

Seriously, tutorials like this are ridiculous. They don’t tell you anything you couldn’t learn from the docs. 

You would expect from the title of the article that you’re going to learn how to write an algorithm that can detect text from an image; different methods for .jpg, .png, .gif, etc. Nope — just “Here’s how to plug in a library to the same React-tutorial-level components that you’ve seen everywhere. ",1540741183.0
danielkov,"React Native uses style objects, just like you can use with React. Styling mobile apps is less cumbersome than regular web apps, so something like bootstrap is quite redundant. If you want your styles to be more performant, use the [StyleSheet API](https://facebook.github.io/react-native/docs/stylesheet).

React Native uses Yoga as its layout engine, which is based on the flexbox specification.

If you want something closer to CSS, try [Styled Components](https://github.com/styled-components/styled-components). It allows you to use regular CSS, with few caveats outlined in the documentation in the form of template literals, inside your JS files.

There are also a number of pre-built RN component libraries that you can pick from, all just a Google search away.",1540739505.0
SizzlerWA,I would recommend doing style in JS and use react-native-extended-stylesheet.,1540748664.0
ahartzog,"You can use a component library such as NativeBase or React Native Elements to provide most of the building blocks you need to build an application, much like Bootstrap.

&#x200B;

I use NativeBase and it's quite solid - definitely recommend.  


Edit: you're still going to have to do some styling most likely. Read the docs on styling here:

&#x200B;

[https://facebook.github.io/react-native/docs/style](https://facebook.github.io/react-native/docs/style)",1540738620.0
,"If you haven’t already, take some time learning and understanding flex-box. It will make your development life much smoother. ",1540747797.0
xrpinsider,I use react-native-easy-grid. It works like a charm and I love it!,1540750073.0
oYYY,"Depends on the error. Sometimes cache gets you. If so, I usually run a complete reset `watchman watch-del-all; rm -rf /tmp/metro-bundler-cache-*; rm -rf ./android/build; rm -rf ./android/.gradle; rm -rf ./android/app/build; rm -rf ~/Library/Developer/Xcode/DerivedData; rm -rf /tmp/haste-map-react-native-packager-*; rm -rf ./ios/build; yarn install; pod install --project-directory=ios; react-native start --reset-cache`",1540789355.0
docdosman,"Run this first in it's own terminal window:

    react-native start

and then run the following in a separate terminal window:

    react-native run-ios
    react-native run-android 

This should fix the issue.
",1541038261.0
mierz94,"That's odd. I don't think I've ever had that starting from scratch. 

What method are you using to get started? 
",1540711060.0
almighty58,Try clearing the cache and restart the metro builder. That messed me too. And I suggest do installations of packages through npm. Helps you out a lot later.,1540915653.0
Jaymageck,"It took us a month to switch to v1 of it from using the old deprecated internal React Native navigator.  However we've had many bugs since then.  Some problems you may or may not encounter:

- Every screen is encapsulated, you can't have a parent wrapper with shared UI. So if you currently have anything like that, or if you have any global event listeners that you need to run throughout the application, be prepared to refactor.

- v1 of the library is now not maintained by Wix and is no longer taking PRs, but the v2 API is incomplete.  What that means is there's really no safe option right now.  V1 has some bugs that may never be fixed without a fork and v2 is not really production ready. 

- the library is fragile when it comes to React native updates.  There's currently a crash that occurs with both versions of the library that is unpatchable in RN57 because Facebook removed an API was that was necessary to fix the crash.  It's hopefully going to be addressed in 58. But right now we're having to live with occasional crashes because we had to update to 57 for other reasons. 

- If you plan to have any async navigation (e.g. chaining navigation to a home screen after login) be careful. The library can't navigate when the app is in the background on Android and it'll just noop. This can cause issues because you never know if the user will put the app in the bg immediately before a nav call. 

- the API of v1 is missing some methods other libraries have, like popTo. You can't pop multiple screens at once with only a single transition, so if you have anything like that, be careful. 

- on android, v1 of the library stops the 'Main Activity' and starts a 'Navigation Activity'. This breaks the standard startup flow that other native libraries expect and you may run into integration issues. 

There are all sorts of things we've ran into. The majority of issues are on android.  I've spent a lot of time debugging in Java code, which is not my sweet spot.

If I was you I'd really stop and question how important getting better performance on old devices is.  I think we made a terrible mistake and I would love to switch to React Navigation now but our project manager doesn't have the time for another switch.

",1540696928.0
theWindInYourButt,"No, stick with react navigation. While react native navigation does improve performance, we found it was so lacking in functionality it was t worth using.",1540697370.0
RarePush,"Doesn't react-navigation also do ""native navigation"" under the hood at this point in time?",1540701514.0
redgiant6157,I have been wondering the opposite. I have used both libraries and now end up with RNN because react navigation V1 was slow. RNN is fast but it would still crash when I use custom components in the topbar. I also couldn't upgrade to 0.57 until RNN fixed an issue after several weeks. Someone says that react navigation v2 is a big improvement. Can react navigation V2 handle 50+ screens with good performance?,1540698569.0
kevwhy,"It really depends if you need the flexibility from react navigation.

If you can compromise on some UI customisation, I'd like to vote for RNN. If your app is huge, a single js code can slow down your whole app, and RNN do have some events for you to debug easier. like didAppear, willAppear, etc.",1540804699.0
Veranova,"This solves a real problem I've had with React lately, I'll be very interested to see how it develops! Starred :)",1540678892.0
,[deleted],1540700262.0
kbcool,I've not even looked at it but any attempt to make forms easier in RN is very welcome! Upvoted!,1540711473.0
,[deleted],1540669553.0
xh0s3,"Having realm, watermelondb...",1540672002.0
hieunc,"Thanks @jdeath and @xh0s3 for mentioning WatermelonDB. I just had a look at it and it looks amazing.

Two main different about Vasern is:

\- Its backend server makes it simple to build local data storage and sync with the server (under development and also open source)

\- Can be used with plugins (people can develop and share plugins with the community)

&#x200B;

P/s: Everything is still in testing mode at the moment

&#x200B;",1541027257.0
beeseegee,"The navigation prop doesn’t automatically get passed down to GetShows, so You’d either need to pass it down or pass a callback to GetShows and handle nav in ShowsScreen.",1540623889.0
mattMEGAbit,"Wow that was fast! Thanks guys I will report back with my success :)

Linking my SO question here for the next person that gets lost..  [https://stackoverflow.com/questions/53018549/flatlist-component-navigate-to-new-details-screen-passing-props-onpress](https://stackoverflow.com/questions/53018549/flatlist-component-navigate-to-new-details-screen-passing-props-onpress)",1540666365.0
mattMEGAbit,"I'm still lost.. looks like I have more learning to do.

Eventually when I figure this out I will post what I came up with.",1540669709.0
mattMEGAbit,"I got it. Thanks guys.. your advice was accurate.

<GetShows />  


with

<GetShows navigation={this.props.navigation} />  


solved the issue.

@tizz66 - I haven't been able to get the withNavigation HOC method to work.

In my code on my local machine - GetShows is it's own component (../components/GetShows.js) .. I exported it like the docs suggest.. 

export default withNavigation(GetShows);  


But no success.. I see what you mean now by how much cleaner this method is though.. just write it once and be done.. instead with the current fix I have to now make sure whenever I use this component I'm adding - navigation={this.props.navigation}.  
",1540837610.0
kbcool,"RN itself doesn't support the web APIs for audio. You're not the first to ask for it either. It's a perfectly reasonable request.

You could take your favourite RN lib for audio - there's a stack to choose from and polyfill it so the API appears to be available to your Vue app. 

It's possible someone has done this already. A quick google seems to indicate that my suspicions are probably correct.

https://www.npmjs.com/package/react-native-audio-polyfill

Why not try it out and report back.",1540619138.0
offthewall1066,"I think you may be looking for some of the APIs that Expo ships with (create react-native app uses Expo by default).

&#x200B;

For example: [https://docs.expo.io/versions/latest/sdk/audio](https://docs.expo.io/versions/latest/sdk/audio)",1540656357.0
anewidentity,"We use https://github.com/zmxv/react-native-sound

It has some bugs specific do devices and file formats, so make sure to test",1540646443.0
maxiu86,"If you only allow login via Google or Facebook,  I understand that the JWT you are talking about is the one receive from Google/Facebook? In that case there isn't any reason to store those token in your backend. The client can send the jwt when doing http request and the backend can ""debug"" the token to assert user ID. (facebook eg: [https://developers.facebook.com/docs/facebook-login/access-tokens/debugging-and-error-handling](https://developers.facebook.com/docs/facebook-login/access-tokens/debugging-and-error-handling) )  


For you own authentication system, I dont recommend storing the jwt in the database, you can encode the data needed in the jwt, such as expiration time, user id, etc ... ",1540609729.0
false_creek_change,"Anecdotally, I only use Facebook/Google login to authenticate the user. Once they are authenticated I create a JWT from the backend that is stored in async storage and used to verify all subsequent requests (until it expires or they log out).",1540639137.0
afilthywhore,Side question: does expo’s facebook/google login work with the actual facebook or google apps? Or does it open a webview where users login?,1540655287.0
harshdays,"Upgrade gradle to 4.10.2 to solve this one, Ref: [https://github.com/facebook/react-native/issues/16536#issuecomment-425458124](https://github.com/facebook/react-native/issues/16536#issuecomment-425458124)",1540682596.0
scttmthsn,Use 10.,1540572630.0
kbcool,"You on a Mac? As someone else said version 11 is way too new for some reason. Use 8 or 9.

Also it's probably path or environment issue. I had to make sure it was on my Mac's path and the java home environment variable was set. See here for some more info.


https://github.com/facebook/react-native/issues/17688",1540595554.0
nitramekul,"The [React Native Documentation](https://facebook.github.io/react-native/docs/native-modules-setup) is frustratingly vague on how to install modules locally. I would recommend checking out [react-native-create-library](https://github.com/frostney/react-native-create-library) though. It allows you to create blank modules and, more specifically, generates a readme with specific instructions on how to install the module locally for testing.  


Regardless of whether you use react-native-create-library or not, you will need a React Native application to test it in - I usually create a blank one on my desktop with `react-native init myApp`. That would create a folder called myApp containing a blank application. I would then `react-native-create-library myModule`.  That would create a folder called myModule containing a blank module. I then `cd myModule` and `npm install`, `cd ../myApp`, `npm install` and `npm install ../myModule`. Then follow the instructions generated by the readme in the myModule folder. You can try `react-native link` but I haven't had much luck with it, so I usually stick with the manual instructions.

&#x200B;

The manual instructions for Android would look something like this (from a module I recently created called *jsonDest*):

    #### Android
    
    1. Open up `android/app/src/main/java/[...]/MainActivity.java`
      - Add `import com.reactlibrary.RNJsonDestPackage;` to the imports at the top of the file
      - Add `new RNJsonDestPackage()` to the list returned by the `getPackages()` method
    2. Append the following lines to `android/settings.gradle`:
      	```
      	include ':react-native-json-dest'
      	project(':react-native-json-dest').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-json-dest/android')
      	```
    3. Insert the following lines inside the dependencies block in `android/app/build.gradle`:
      	```
          compile project(':react-native-json-dest')
      	```

In this case I could then use the module from my applications app.js using `import RNJsonDest from 'react-native-json-dest';`.  


Good luck with your module! The React Native community seems to be 90% React, 10% native so it can be hard to find resources on developing native modules. I just finished a project involving an AR native module with no prior experience in RN so I can relate with the frustration you're probably feeling, but you'll get there.

&#x200B;

One final note:

>I thought about creating a blank RN project and just adding my code into  the project, testing it and then once satisfied, I would separate the  module into its own codebase.

If you can avoid this I would, separating them can be surprisingly difficult. I have found it's easier to just keep them separate from the beginning if it's possible.

&#x200B;",1540571153.0
redpopcornpanda,"I think you're on the right track with that. Judging by your question, it sounds like you're making the module in order to publish it as a package? Not quite sure how npm works with all that, but you could probably also reference it via the github URL and install it into a different project like that. I think that having a blank RN project to test your specific module would be a good idea. Once your module works as expected, the only real difference when it's a package is configuration and import, I imagine. ",1540568521.0
kbcool,Have you looked into using stylesheets especially in a global fashion ? Not a GUI based solution but same effect when applied properly.,1540618786.0
oYYY,Why don't you just add your icon set to https://github.com/oblador/react-native-vector-icons? This is the gold-standard library ,1540571507.0
nijolas-wilson,"Expose an `onValueChanged` prop and maintain state in the parent - probably the best way.

Expose a method `getValue` on the child and access it in the parent via the `ref` prop - also not awful.

Connect your child component to redux (meh), set a global in the child and read it from the parent (bad), have the child component send its value to an API endpoint and the fetch that value from the API in the parent when you need it (ridiculous).

I think I've said enough.",1540556403.0
imizaac,"Pass a function from the parent to the child. The child calls it with any relevant information. It does things in the parent. Whatever it returns the child can use. 

It can even return a function. You can then just go back and forth like this if you want. 

You can use something like redux.",1540553482.0
redpopcornpanda,"When figuring out questions like this, you can also google for plain ""react"" answers, since things like state/props/components are handled the same way in both react and react-native. Just a tip in case you come across an issue that has to do mostly with how react works to help you find more resources :) ",1540568688.0
yarism,Spam,1540568292.0
coolnat,"If you want more control over permissions, you can use [react-native-permissions](https://github.com/yonahforst/react-native-permissions). If you do, note the caveat about the iOS App Store.

If you just want to use the built-in geolocation api, you don’t have to use setInterval. Just try to get the location once and if it fails, try to request authorization. Depending on the error, it may have been declined by the user at which point you can either cancel trying to get the location, or display an alert asking them to turn it on in settings.",1540563396.0
redpopcornpanda,"I personally wrote my own native module to help with this since the default stuff in react native is so awful. It took me less than an hour to do so. Native iOS can really easily accomplish this, so it was easy to pass that result back into JS. However, I would actually recommend not using the default location in react-native depending on your use case. If you want extra functionality than just ""what are the current coordinates while the app is open"", I would look into \`react-native-radar\` or \`react-native-background-geolocation\`, both of which have better permissions handling.",1540568852.0
ChronSyn,"Running a timer for things like this is a brutish way of requesting permission. RN has a `watchPosition` function (https://facebook.github.io/react-native/docs/geolocation#watchposition)

This negates the need to use a timer. As for requesting geolocation permission repeatedly, don't do it. The user has probably declined it for a reason. The UI and UX should show a 'Grant permission' button which then triggers the request again (via `getCurrentPosition()`). The rest of your UI that's relevant to location features should adapt to this. Once granted, switch to using `watchPosition`.

One elegant solution to this is something like `react-async` (https://github.com/ghengeveld/react-async) which works in RN. Note that it's not going to be useful for every case, and `watchPosition` won't function as intended with this component, but it can be used if you're making a single geolocation request with `getCurrentPosition()` and want to wait for the result and have your UI adapt to it.",1540569716.0
MetorFinis,"In theory yes. But you should be really careful writing your app. Also apps and web can have completely different architecture in terms of routers, screens,etc...",1540537268.0
herjin,I’m a bit confused by your question. You want your website and your native application to share the same state?,1540532000.0
cmcaboy,"Yes, it can. I have done this before although I have since, moved away from redux in favor of Apollo Client's state management solution. The code is literally the same, but as MetorFinis pointed out, mobile in general is a bit different. The devices are not as resource intensive, routing is completely different, etc.",1540577572.0
redpopcornpanda,"if you have a ""monorepo"" you can kinda do this. Say you have a directory structure like:

repo > webapp | mobileapp

repo > state could store your redux logic and configuration. Then import the same files from webapp/mobile app.

This might not work out for you, but it's a possible solution.",1540582578.0
aghhal,You can manage rerenders by implementing shouldComponentUpdate. But either way I dont see how the first pattern will not trigger rerenders,1540516923.0
mysteriy,First method is now recommended by redux team. ,1540532035.0
Manishalexin,"Will have to test, but the first approach looks to be costly as each iteration will query store through action. This might be helpful with large data set but i don't see how it affects re-render.

And doesn't Flat list already take care of each list item re-renders with the unique key that we give to it?",1540734304.0
cmcaboy,"I do like that they are integrated reanimated and react-native-gesture-handlers. Those are both very high performing libraries. I moved away from Expo several months ago, but I can see it is making a lot of strides.",1540577236.0
dubielzyk,Looks like a solid list of improvements. My Expo experience hasn’t been perfect but I really enjoy their APIs and client app. I wouldn’t mind paying as long as the quality is great :),1540536430.0
futuregerald,I really like expo and these changes are all great. I wonder when SDK 31 is releasing.,1541040368.0
mightbefun,Congrats and congrats!,1540498039.0
brentvatne,congrats!,1540513503.0
,"Did you run into any quirks or issues during development? What did you find most challenging using React Native?

Edit: Also, contains ads, what is your game plan there to monetize your application?",1540513952.0
thesahilpatel,Adding react-native-vector-icons itself adds up 2MB. ,1540530660.0
xrpinsider,Amazing idea and design. I hope some people will stop smoking thanks to your app.,1540554486.0
xh0s3,"20mb for a simple app...doing same app in native would be x4 less but seems friendly ux/ui

Pd: congratz and keep learning!!",1540499461.0
LukaMrk,"Great work, congrats! 

How did you fail-test your app/make sure it doesn't crash at launch? Haha. This is where I am now.

Not sure how to fail-proof it before release,

cheers",1542032879.0
sourtargets,"With the same approach as used in this [blog post](https://blog.reactnativecoach.com/creating-draggable-component-with-react-native-132d30c27cb0?gi=da798284dd64) you could solve the first part (dragging items from list A to B), but having the items in list B animate out of the way seems like a bit of a doozy.

Honestly, if the requirement isn't necessarily exactly what you've drawn, I would just try to design around the second part, e.g have the items always appear at the top of list B, and they would then be draggable to a new position within that list with a separate action (e.g.   react-native-draggable-flatlist)

If you had to do it exactly like that, maybe one option is to add/remove invisible items to list B based on the drag position of the item from list A, so that effectively the items move out of the way. ",1540488969.0
oYYY,You can probably pull code from this https://github.com/rcdexta/react-trello,1540495945.0
clarkinum,"You could add an invisible component between each element and animate it's heigth when a component dragged on it using a panresponder. Elements in list a would update their location x,y in state and then a touch happens in invisible component in list b, that component could start animation. This part only for animating spaces in list b",1540493959.0
nijolas-wilson,"I would probably maintain all their index and y co-ordinates in the outer list component - in this way, the order you render them in doesn't matter, just use absolute positioning and z-index. Use onLongPress to initiate the drag. Use a PanResponder to slide the moving component around. When the component's y value moves past halfway up/down then slide that item up/down into the space using Animated components.

Start with 5 empty items, get that system working one bit at a time (drag, slide, drop) then once that is working and tested you have the basis of your component! If necessary, at this stage I would test more specific use cases you require, for example if you expect things like: long lists, images in list items, buttons or other interactive elements in list items. Each of these will bring its own challenge. Tackle one at a time, and each time you add *go back* and re-test everything to make sure you didn't break any of the previous bits you did.

From a workflow perspective I might be negotiating back with product about whether this kind of sorting is absolutely necessary at this stage because it's not going to be easy.
 
That said, a challenge is always nice! Good luck.",1540496901.0
cmcaboy,"I haven't done this before, but on a [recent react native podcast](https://devchat.tv/react-native-radio/reanimated-react-native-screens-more-feat-krzystof-megiera-of-software-mansion/),  Krzysztof Magiera suggested that his new library, [react-native-gesture-handler](https://github.com/kmagiera/react-native-gesture-handler), would be a great option for drag and drop and other similar gesture/animation use cases. You may check it out. The only downside is that it is new and there were be less tutorials or stackoverflow solutions for it.",1540578146.0
throwawaitnevermind,"I have a cheap and easy fix for you.

When you drag the element over list B, from list A, insert an equally sized empty View.  (Figure out your own logic to figure out where in the list to insert it, by figuring out which two current items are adjacent to the position of drag).

Then, put them in a column-oriented flexbox with a style option of {justifyContent: 'space-between'}, then re-render the component.

this will get you what you want.  The items will move out of the way dynamically; when the user takes their finger off the screen and you trigger the dropCard() (... or whatever), then replace the empty View with the card View.",1540494618.0
agmcleod,"In a PWA you're using the DOM. In react native you're using ReactNative's components. I think if anything, you could put together more business logic and utility stuff, even translations in a package they share. But I wouldn't recommend trying to share UI. The app should look similar to the native UI, and use platform paradigms, not web paradigms.

If it's a PWA, then web paradigms make sense of course.

Now there is this: https://github.com/necolas/react-native-web, which exists to render the native components on web, but it's not something i've tried. In general, there hasn't been a strong history of write once run everywhere succeeding without writing some platform specific code.",1540474818.0
Fossage,"Thats a common misunderstanding with React Native.  It does not compile your JS code to native code.  What it does is, in the native code of each environment(ios and android) it will spin up a Javascript runtime using Javascript Core, which is an open source JS runtime created by the WebKit team.  JS core allows for inter-op by allowing the native code that spun it up to send and receive messages to the JS code and vice versa.  You can think of these messages like the bodies of HTTP requests.  They basically are just strings, so they get serialized and deserialized when they get to their destination.  React Native implements what they call a bridge(written in c++) to manage all of this messaging between the native layer and the JS layer.

Because React doesn't actually render anything itself, but rather generates a description of what should be rendered, it is a perfect fit for this system.  If we were in a web context we would send this description of what should be rendered to the React DOM renderer and that would handle the actual creation of new DOM nodes.  In the React Native case, those descriptions of what should be rendered are sent over this bridge to the native layer, deserialized, and then actual native views are created based on what the JS layer said should be rendered.

Maybe give this article a read to clear things up a bit more: https://hackernoon.com/understanding-react-native-bridge-concept-e9526066ddb8

[edit]  In response to the title of your question, give this article a look on how to build a bridged component: https://medium.com/react-native-training/react-native-bridging-how-to-make-linear-gradient-view-83c3805373b7

Also, checkout out the RN Docs on it: https://facebook.github.io/react-native/docs/native-components-ios and https://facebook.github.io/react-native/docs/native-components-android",1540476487.0
agmcleod,"Nope, it's not like that. The react components map to native code that is able to draw and style the text as we dictate it in javascript. How they've implement it depends on the component. I think the form elements bind to the native ones, but in terms of text, it looks like they implemented a custom TextView by extending UIView. No idea how theyve done it for android. https://github.com/facebook/react-native/tree/master/Libraries/Text",1540473539.0
upkeys,"Good question, thanks, i'd like some info on that, too.",1540468459.0
NaveNocab,"I put together an example, also a few notes on using swift in an Ejected `ExpoKit` project: https://github.com/EvanBacon/expo-swift-example ",1540502269.0
rdevilx,"Expo is great for certain stages of your development. Deployment is quite easy with Expo the only thing which bothered me was the fact that I couldn't setup the required payment gateway for my application so I had to eject it. If you have a smaller project like you said, it would be a breeze although you've to go through the deployment process for iOS in their docs so that you could be sure about how things actually go without react native. ",1540457765.0
EgidioCaprino,Every time you do `expo build:ios` your release will be available on Expo app. If you have a native iOS app as well that will automatically fetch the latest version from Expo. `expo build:ios` will create an IPA that you can deploy on native App Store.,1540461095.0
NaveNocab,"> Most important: The iOS icon MUST be a 1024x1024 png with NO transparency. Nothing is more heart breaking then finding this out after the build and upload process has finished!

If you are using Expo, I have a tutorial on uploading to the iOS App Store: https://www.youtube.com/watch?v=6IPr7oOugTs

I made this fully deployed (iOS/Android/Web) Expo App: https://github.com/EvanBacon/Expo-Pillar-Valley/ I'm pretty happy with the Fastlane config. 

Produce: creates the App Store entry
Deliver: manage app store data, and upload binary/screenshots: [Tutorial](https://blog.expo.io/manage-app-store-metadata-in-expo-with-fastlane-deliver-1c00e06b73bf)
Supply: similar but less useful Android version of Deliver

Of course [Expo cannot do everything](https://expo.canny.io/feature-requests) you might need, but if you can I would strongly recommend using Expo for deployment, deployment is substantially harder without it. 
Expo will produce the IPA (iOS) or APK (Android), which you can then upload to the respective stores. Fastlane deliver isn't a part of expo proper but I much prefer it to using Application Loader directly.

Disclaimer: I work on Expo modules. I made Pillar Valley and other games before Expo though.",1540504077.0
icekeymon,"Yep, this is a common problem. I used \`rn-nodeify\` to resolve this. The library creates a \`shim.js\` file which will allow you to use Crypto modules. I encountered some problems when I installed new packages, I kept getting ""crypto module not found"". I finally then created an npm script called \`fix:crypto\` which would run \`rm shim.js && ./node\_modules/.bin/rn-nodeify --hack --install\`. Then I added this to a \`postinstall\` npm script so it would run after I installed anything with yarn/npm.",1540476851.0
TheNumberOneCulprit,I'm guessing the lack of a Buffer object in React Native might be hampering your usecase. Try to look for replacements for node.js default modules.,1540995240.0
icekeymon,I use CodePush and I release OTA updates for bug fixes and small improvements. I install these updates whilst the splash screen is loading.,1540477227.0
NaveNocab,"The biggest thing you should research is ""release channels"" which will enable you to have a production or development release.

AFAIK Your options for OTA are:
* CodePush by Microsoft. This is a really solid solution for vanilla React Native projects.
* Expo has this feature built in.

I'm not sure about how the files are hosted with Microsoft, I think someone at Expo just announced a way to self-host your bundle (this seems very experimental though). 

This last bit is important for tech evaluation purposes...
You may find that if you use RN at a corporation, hosting will become a ""security concern"". Both systems use pretty secure methods for hosting your bundle. Your ""bundle"" is of course a minified JS file which means it is pretty hard to decipher regardless. 
But it's also worth knowing that someone could also get this bundle by cracking an Android APK (which is unrelated to OTA). With this in mind, the hosting security isn't really much of an issue, since it's far easier to retrieve the bundle with the APK method.

Disclaimer: 
I work on Expo modules [My Github](https://github.com/EvanBacon/). I don't work on any OTA libraries. I learned the tech evaluation stuff at my last job (Frog Design) where I had to do a few tech evaluations. Both OTA options are really solid IMO.
",1540503346.0
Spacewaffle,"I think there's a few things going on here. The ejection process from expo is pretty bad, so bad that for a new project, you're better served without expo at all. I'm not sure why FB backs it in their official docs. It makes anything other than simple apps very difficult. Second, not all the RN packages are particularly stable or maintained so it's not great to rely on them. Lastly, if you're new to npm, node package dependency issues can sometimes screw you with error messages that aren't very descriptive. Sometimes the solution that worked for me was to npm install the dependency with:

`> npm install --save-dev [your package dependency]`

Every once in a while I have use this magic garbage because of some npm caching issue:

`>watchman watch-del-all`

`>rm -rf node_modules && npm install`

`>rm -rf /tmp/metro-bundler-cache-*`

`>rm -rf /tmp/haste-map-react-native-packager-*`

`>react-native run-ios`

My takeaways have been: don't use expo, try to build as much as possible yourself, and if you have to use a package, try to stick with the big ones that are being maintained by a lot of people.",1540447524.0
orebright,"I've heard this from many people. However I've never run into a disproportionate amount of issues. I've come to the conclusion that people use many more shitty packages which I personally steer away from.

I never even tried expo, I really dislike these kinds of approaches (similar to ionic and phonegap). I always gravitated to Cordova (which those packages are built on). The same inclination served me well in RN. You inevitably have to eject, but since it's generally the path less trodden, your particular case might not work.

In general if I'm using an open source library or package, I make sure it has frequent releases, a big dev team or at least lots of stars on github. I've been burned by shitty dependencies enough to vet them first. This isn't unique to RN, though there may be a much bigger selection of good dependencies on other platforms that have been around for longer.

If I can't find a good enough package, I'll build the functionality myself.

I've found most issues people encounter with RN are 3rd party package related. I use tons of 3rd party packages, but they've all been super solid. Also remember, before you update RN make sure all your dependencies have a compatible release.

Oh, and if it's a package that is ""for RN"" but really only needs plain JS (like date formatting, state management, or AJAX...) I'll just make my own View with the pure JS library, that way your package is RN agnostic.

Well that's all I can think of. I find these general open source dev principles to follow. If your problems are outside of this, then I'm sorry I couldn't help.",1540446790.0
thesahilpatel,"That was my experience a few months ago. I am currently working on a major app for my employer and things are going avg. I have done native development and RN surely is faster but not as stable as native. There are always hacks that we need to add. 

I suggest giving more time to it. Take things slow. Focus on one major part of RN framework at a time. 

Things will become a little less frustrating.",1540446130.0
Mozorelo,That's exactly my experience too. ,1540445667.0
RedMan_ish,"this is what  i learnt from my experience  ""dont touch it again .. if its compiling and running.!!""",1540465178.0
a_atalla,"same here, we had an old app react-native@0.44 the task was to upgrade min@0.50 so we can use SafeAreaView for iPhon-X, i spent  2 working days trying to make the project build and run on my machine with no luck 
finally the task moved to the other guy who has a working copy on his computer .... now wondering what if it runs on my machine, how would it be to upgrade (the task itself) ?",1540448656.0
blah_face64496,"I have been using React Native for a personal project and i definitely feel your pain.  
the UX/UI layer is fine with RN. I can get a pretty good simulator/expo-app running.  
But once i need to eject, begin learning how to create bridged components of my own - or even something simple like \*KEEPING THE DEBUGGER-DEV-MENU RUNNING\* - i'm in a world of pain.  


IMO rn is doomed unless they can find a way to make the Xcode and Android Studio layer less painful. It's unlikely React Native (JS) devs are going to flex out into Obj C, Java, Swift etc to appease the RN project.  


If you have to learn Java / Swift to manage all of this then just write the app as a native option in the first place, surely?",1540463111.0
LEO_TROLLSTOY,"The absolutely most useful thing you can do is not update packages without a specific need once you have implemented them. And for the love of god, never ever update your rn with major version bump. There is no need for it and it more or less guarantees that you will have to fix other packages",1540464103.0
isidith,"I have been hit with the same unfortunate issues, and I'm really affraid of the time when we will need to do a major rn version update to keep compatibility in check with Android or iOS",1540471143.0
victrolla,It’s not just you. It’s infuriating. ,1540445571.0
NaveNocab,"Coming from a native development background, I think the difference is that React Native enables you to create much larger experiences faster, naturally this leads to more instability. 
I never really needed to mess with testing before React Native, but it's made life so much easier.
Writing unit tests with JS has become one of my favorite things to do. Jasmine is really nice to use, and it's good to just know that certain things aren't breaking. 
I've found that this format works well for just slapping features in making sure they run: https://github.com/expo/test-suite here is an example of one that I made: [Asset tests](https://github.com/expo/expo-asset-utils/blob/master/example/tests/AssetUtils.js). 
Also [Quinn](https://twitter.com/quinlanjung) from Expo is working on adding [E2E Detox tests by WIX](https://github.com/wix/Detox) which should make code feel a lot more stable as well.

Types are a big part of what has made React Native unstable. Initially the solution was just to use `PropTypes`, then Flowtype came along. Neither of these solutions were very great and mostly didn't solve typing issues. React Native & Expo have been integrating TypeScript a lot more, which seems like a solid solution that has worked well in Angular. ",1540497020.0
dontforgetpassword,"CRNA. Eject. Change react-native version in package.json. Yarn. Create a couple demos. Report results. I think you can though, unless there is breaking api. ",1540468263.0
fridgefreezer,"Are people using expo to make ‘real’ and big apps? I’ve so far tried to keep away from expo (just seemed to be another abstraction away from actual native code). Is that a wild theory I’ve made up, or did someone who knows tell me it? With all the stuff I’m trying to comprehend I’m never entirely sure what the actual current best practice actually is for any of this dev stuff.

Anyway, I’ll check the vid properly when it’s not 1:30 am and I’m up in less than 5 hrs 👍🏼",1540426911.0
SizzlerWA,"The whole not being able to share expo apps via QR code makes using Expo a lot less convenient on iOS ... like it’s hard to distribute expo apps to people not on my team.  I feel like the Expo team is in denial about this because you still show the “Open in Expo” buttons on your front page even when I’m browsing on an iOS device and you know that button is going to fail.  Yes due to Apple’s restrictions but still. It feels a bit misleading ... I’m not saying it’s intentional and I appreciate all your hard work, but why show the Open in Expo buttons when the user agent is Safari on iOS?",1540457871.0
filipef101,"This is basic js, either way probably you Want to declare the variable first like const c =0 then use it with out redeclaring it. ",1540421767.0
djxfade,"You can’t.

You could refactor it into a function.

    const formula = (c = 0, x) => 0.9 * c + 0.1 * x",1540419701.0
kbcool,"It does and it doesn't.


The browser itself will run in a seperate thread of its own but the messaging happens on the same thread as the RN javascript engine.


Effectively that means yes it's on a separate thread as nothing you do in the browser will block the RN thread but where it's important to note is that the behaviour at times may seem blocking due to the messaging across the bridge.

You'll even find people take advantage of what I believe your asking (running background tasks without blocking UI) and I have on this sub actually recommended using this method to people for various reasons.


Someone has even done a write-up on how to do it

https://dev.to/craftzdog/a-simple-way-to-run-js-in-background-thread-on-reactnative--1k8m",1540420351.0
Dested,"Not sure, give it a try and report back!",1540419975.0
inform880,"There are not, mostly due to the ui focus of react. I've played around with gl-react, and at least on iOS, it's very slow. It works well on Android though. I've looked for a long time for something like what you are and have basically given up.",1540399750.0
nijolas-wilson,"Tl;dr we found Cordova and React Native hard, gave up and then built native apps.

There are no reasons here. This is neither recent, relevant nor critical in its analysis. 

Oh also it ""only took 3 weeks"" so it must be either dead simple, a huge exaggeration, or completely full of bugs.

> ... it's unperfect ...

Reading that word was like getting slapped in the brain.",1540412860.0
beastinghunting,"It all depends on your product evolution. While I prefer more a native app, I think that building a new product to prototype, using the hybrid approach helps a lot to deliver fast.",1540414072.0
PaulLaux,React Native improved since 2016 and will continue improving further.,1540404597.0
kinwaa,"You are trying to modify the props of the component within itself. This is not recommended. 

[From React docs](https://reactjs.org/docs/components-and-props.html#props-are-read-only)

>All React components must act like pure functions with respect to their props.

Instead you should use ""state"". Component will re-render when its state changes. So I would use something like this,

    constructor(props) {
      super(props);
      this.state = {
        switchValue: false
      };
    }

    render() {
      return (
        <View>
          <Switch 
            onValueChange = {(value) => this.setState({ switchValue: !value })}
            value = {this.state.switchValue}
          />
        </View>
      );
    }",1540389309.0
speltron3060,"I’m on mobile so I can’t get a super good look at the code, but it looks like onValueChange you’re just setting the new value to propertyFlag which won’t cause Switch to re-render, even though it’s value is bound to property.propertyFlag

Put propertyFlag inside local state and use setState inside onValueChange, then it will automatically re-render with the new value",1540387179.0
I_love_subway,What are some of the advantages of ionic over React’s “Expo” framework?,1540383858.0
superlameandawzm,"Think this is what you want :) 

[https://reactnavigation.org/docs/en/drawer-based-navigation.html](https://reactnavigation.org/docs/en/drawer-based-navigation.html)",1540363002.0
docdosman,"Newbie question, what is the use case for this library?",1540345826.0
Fossage,"We’ve always used a simple JSON file to store all of our keys. It’s worked great for us so far because you can import it directly into your JS files, and if you need to use it in other places, such as Gradle of Fastlane build scripts, it’s easily parsable.",1540353362.0
TurtleFood,"I got it to work by following these steps. It's not the most elegant fix but it worked. I'm currently using react native v0.56

You have to downgrade to RN 0.49 and link and then upgrade again to 0.56

Edit package.json

`""react-native"": ""0.56.0"" => ""react-native"": ""=0.49.3""`

Run commands

`rm -rf node_modules`

`yarn install`

`./node_modules/.bin/react-native link react-native-config`

Edit package.json

`""react-native"": ""=0.49.3"" => ""react-native"": ""0.56.0""`

Run commands

`rm -rf node_modules`

`yarn install`

",1540337793.0
fuck_with_me,"Posted in a comment below, but figured I'd put this here as well. Directly from the README of the repo:

> Keep in mind this module doesn't obfuscate or encrypt secrets for packaging, so do not store sensitive keys in .env. It's basically impossible to prevent users from reverse engineering mobile app secrets, so design your app (and APIs) with that in mind.

So, what's the point? Honestly. If secrets are not actually secret, they don't belong in a `.env` file.

Are you putting ""secrets"" in a `.env` file just to make yourself feel good, and then compiling them into your app at build time, abstracting the whole thing away and making the build step that much more complicated for new devs?

Put your fucking public keys in your source code... Here come the downvotes...",1540354255.0
cmcaboy,"The library seems to have been abandoned, which is very unfortunately. I really like the library. I still use it today, but it does take a bit of effort to get it to work.",1540390787.0
kirisafar,I used https://github.com/zetachang/react-native-dotenv for a project. I prefer a simple JSON file though.,1540456641.0
EngVagabond,"As a heads up, ListView has been deprecated for a long time and recently started showing YellowBox deprecation warnings when it is used. It will be removed in a future version of React Native.

You should be able to do the same effect though with FlatList. I’m curious why you feel that FlatList isn’t satisfactory and that ListView is more useful for your use case.",1540349641.0
,"What makes it 60FPS? I read the article and mentioned nothing of it. And then he speaks of a detailed article, but it is just white space, think he forgot to link. ",1540377644.0
NaveNocab,"You can try running the app in production mode: expo start --no-dev --minify this should help you to debug any RN errors
Another thing you could try is connecting your phone to your computer, and debugging with Safari. This will allow you to view the webview context. 
Check to see if 'html' is included in your asset bundle patterns. 
Also if nothing else works you could wrap the HTML in backticks then pass it to the webview as a string. 
I recommend taking a look at react-native-canvas as they have a pretty good script that builds compiles a web page for use in a webview. ",1540403081.0
Waymond206,Just more tutorials using typescript and react. ,1540312566.0
shankarvannala,"From basics please , i want to learn",1540315230.0
SynthesizeMeSun,Yo! I'm back and here's the tutorial: [https://www.youtube.com/watch?v=eHnHLCGXRZQ&t=1s](https://www.youtube.com/watch?v=eHnHLCGXRZQ&t=1s),1540419557.0
mattMEGAbit,"what libraries, extensions, tools, modules, etc.. should we look into once we get familiar with React? Maybe a video going over your favorites and why.",1541303322.0
cwhaaaales,I implemented the exact same thing about a month ago and was dying for someone to put out a tutorial like this but couldn’t find any. Only found an angular tutorial. Great job!,1540325152.0
Unforgiven-wanda,"Too bad TypeScript is kind of a deal-breaker for me.  
You wouldn't happen to maintain the same boilerplate in VanillaJS?

Thank you for sharing either way.",1540364427.0
dadinodog,Looks really nice! Wish I had this 6 months ago,1540312166.0
theWindInYourButt,"Nice, looks responsive and smooth",1540306046.0
dontforgetpassword,Does this support iOS 12s security code feature?,1540307397.0
kriskate,"If you're just getting started, don't shy away from Expo ( http://expo.io )",1540280532.0
kirisafar,"Are you not using source control like git? Whenever you want to add a new feature/package, specially one that requires native modules, create a new branch, so you can backtrack if things go bad.

You can safely as well delete your build folders, you shouldn't need to delete the whole iOS or android folders, clear your [DerivedData](https://stackoverflow.com/questions/18933321/can-i-safely-delete-contents-of-xcode-derived-data-folder) and [.gradle](https://stackoverflow.com/questions/23025433/how-to-clear-gradle-cache) folder, and your cache.

Here's what I run whenever I'm adding or upgrading packages

```js
watchman watch-del-all && rm -rf $TMPDIR/react-* && rm -rf $TMPDIR/metro* && rm -rf $TMPDIR/haste-* && rm -rf node_modules && rm package-lock.json && npm i && react-native start delete-cache
```

Remember to run `react-native run-ios` after installing your packages from scratch so it can generate the bundle.

I've followed these steps whenever I want to add something and the React Native experience has been fabulous for me.

I also avoid Cocoapods and install manually.",1540256745.0
saugoof,"That shit has happened to me so many times. I swear, RN is the most brittle environment I've ever worked with. It crashes because it's Tuesday and I put a little extra milk in my coffee...

I've had to completely re-create projects because I couldn't get them working again even after again removing the module that caused the error.

One thing that has generally worked, although it seems idiotic, but I got desperate, comment out just about everything in your code files and comment out packages in your package.json file. Then clear the cache, build and start adding packages and code back in until things start breaking again.

That said, I've done this once and the project started working after I put everything back in. That's even more unsettling.",1540256074.0
fragglerock,"I cannot say what has happend to you... and I don't think I have suffered quite the calamity you have... but dependency hell is real in the React-native community!

My only defence is to have as much as possible under source control and then you can see what running `yarn` or whatever has had.

I also try and keep my applications things in a folder away from the 'infrastructure' so if the worst happens I can copy to a fresh React-native app and start from scratch... 

not much help I know, except I hope that you know someone else feels your pain! ",1540249241.0
igorfranco,"Hello I take some steps when something like this  happens to me... Try following these steps above:

1- Uninstall apk 

2 - execute : del %appdata%\\Temp\\react-native-\* & cd android & gradlew clean & cd .. & del node\_modules/ & npm cache clean --force & yarn install & react-native run-android

&#x200B;

&#x200B;

&#x200B;

&#x200B;",1540255562.0
kinwaa,Latest version of react-native-video (if you are using the one from react-native-community)  seems to require RN >= 0.57.0. That’s one thing you can check in your project. If your RN version is lower use the compatible version of the video plugin or consider upgrading your project to use RN 0.57.,1540255190.0
JF1333,"All good advice here, I would also try

-Running command: “watchman watch-del-all”

-Restarting your computer

-Killing all node process

-Reinstalling bad package, unlink, uninstall again

and Good version control. ",1540269059.0
0root,Ya I've had this shit happen so many times. Almost nothing makes me rage more than trying to fix my broken project.,1540538079.0
kbcool,"I'm not really understanding why you need to use measure. 

As the docs say it doesn't seem fit for purpose here as the dims aren't available until after rendering. Use onlayout instead.

If you need to place a component next to another one then use absolute positioning instead. You don't need to worry about where something is on screen if you do that. If you use that along with zindex you should be able to pull off what you want.",1540245729.0
,"I'm unsure on your answer about the dependencies. IIRC there are a list of dependencies you can use regardless of using expo for building, but I can't remember where they specify.

Why do you need to eject from expo to create an APK? Can you not just use the expo build:android command to build it?",1540291412.0
cmcaboy,"If you eject to Expokit, you should still get access to the SDK. However, I have heard that managing an app using Expokit is very buggy and can be a pain to maintain. 

&#x200B;

A few other notes:

* As of 6 months ago (when I last used expo), you could directly test on the devices.
* Expo can build you an APK.",1540306651.0
cmcaboy,"Thus far, I have only used R Navigation, but I love it. Starting in version 2.14, R Navigation uses [react-native-screens](https://github.com/kmagiera/react-native-screens) under the hood, which saves on memory consumption.",1540230669.0
mysteriy,"RN Navigation v2 runs on native thread, so theoretically it should be faster. React Navigation runs on JS thread. ",1540532245.0
bluey89,"This was really helpful for me, as a RN noob I'm learning a ton with your videos please keep making them! ",1540981410.0
Bamboo_the_plant,"The linked tweet is a video preview of an upcoming feature that allows users to drag-and-drop PDFs into my LinguaBrowse app. It loads in the PDF, then tokenises the text and listens for click events to enable click-to-define (even if words aren't in dictionary form, or lack spaces between them).

While this feature isn't yet released, the app is available in the [Mac App Store](https://itunes.apple.com/gb/app/linguabrowse/id1422884180?mt=12) and will be updated to include the feature within a few weeks.

I use TypeScript and Swift (the latter even for the RN Native Modules), if it's of interest.",1540217190.0
ChronSyn,"This is an area that a few companies have tried to fix. To date, I don't know of a single product for Windows that converts mockups to code.

In our workplace, we use a product called Zeplin which let's developers see the measurements, fonts, and sizes in the mockups. The mockups are designed in Sketch by our designer, and then as developers we use what's imported into Zeplin to see specifics.

To answer your question: Yes, you are expected to create all those screens. In the same way you won't find a good tool for automatically generating API's for your backend, you won't find a good tool for generating UI code for the front-end. You can save a lot of work by reusing elements, and this is something I strongly advise. Build small components and use props to handle functionality.

If you feel like you're struggling with RN, try some boilerplate projects and/or expo (https://expo.io/features). Getting a basic project up and running is more than half the battle in most cases.

Just as an aside, the only UI-design interfaces in IDE's I've seen are in desktop-app IDE's such as Visual Studio and RAD Studio (Delphi, Embarcadero).",1540211470.0
Bamboo_the_plant,"* Sketch’s [RN Sketch Elements](https://hackernoon.com/react-native-sketch-elements-889f010f9626) sounds like exactly what you need.

* There’s also [Framer X](https://framer.com)... however it’s only for React, so would require some fiddling to convert to React Native; but still a good start.",1540213263.0
stoise,"If you’re looking for a GUI program to do the work for you, you’re literally missing out on a big portion of what makes react native great. 

Just be clever with your components. You can easily “hand code” 15 screens in a day.

Even if a tool existed, I would never want dreamweaver like code in my RN project.",1540211243.0
phonemonk,"Expo snack or Laska may get you started,  but a certain amount of hand coding is expected. ",1540211484.0
kasimowsky,"[https://yogalayout.com/](https://yogalayout.com/) has ""React Native"" option in ""Get Code"" dropdown.",1540216903.0
kirisafar,"There is no BootStrap for react native, GUI layout tools are still in their infancy, learning flex/yoga layout is the only way to achieve what you or your designer intend.",1540257036.0
schjlatah,"**I feel you.**

I have been doing native Android and iOS for years and really wish there was something like Android Studio or even IB (ugh).

If you are looking for fancy pre-built components, take a look at [UI Kitten](https://akveo.github.io/react-native-ui-kitten/); I haven't used it, but it looks nice. ",1540344199.0
tnicholson,"This is the EASY part of writing your app...

If you were too lazy to do even a couple hours of research about the framework you were selecting and now you’re too lazy to even write the components and screens, you should really just turn back. There’s no way you’re going to make it through wiring everything up, adding all the backend, handling navigation, building, releasing, maintaining, etc if you don’t even want to write the screens.

Seriously.",1540215352.0
liuwenhao,"Have you ever done native Android development? We don't use the GUI tools, everything layout-wise is written by hand in XML (for the most part). iOS has storyboards, but a lot of companies avoid using those and build layouts programmatically.",1540217059.0
MetorFinis,"You can always hire more hands...

If you have a budget, contact me...",1540217868.0
kinwaa,RN 0.57 now supports typescript out of the box. What I found was a bit painful was setting up TSLint and ESLint together and have both JS and TS files in one project. ,1540212688.0
redpopcornpanda,"I'm with you. Though you stated it pretty aggressively, the quality of content on this sub is really low. I wish more advanced content was shared.",1540220060.0
,"This is terrible. They just re-wrote the React native guide to adding TypeScript to your project. I don’t care if English is your eighth fucking language. If you’re gonna attempt to put something into the community, can you make it actually worth a shit?",1540209138.0
fridgefreezer,"I did a udemy course by Stephen Grinder, I’ve got a bunch of courses, this was one of the better ones (you gotta be able to google for some bits as they have changed marginally since the course was made - when I did it, may have been updates since - but I posted on the forum for all the differences / solutions I found). But it was a pretty decent walk through using api’s and firebase etc.",1540194865.0
kirisafar,"Try not to add/update multiple packages at once, specially if they require native modules to operate, cut a branch for every addition and test.

If you intend to develop for iOS, try learning how to add the modules manually instead of relying on CocoaPods.

If you are developing on a Mac, try Reactotron, it's awesome for debugging.

AppCenter is awesome for building your apps for deployment/beta testing.

CodePush is equally cool for updating the javascript side of your code.",1540257706.0
xrpinsider,"Absolutely check out Expo. Its amazing and offers an extra API on top of React Native.

Try out react-native-easy-grid its easy and great to use.

",1540200673.0
Fried---Chicken,"Try out expo, if you haven’t already. A lot of the concepts are the same or similar to React.

For example: Divs in React are Views in React Native

You can also checkout Native Base for UI to get you started easier.

",1540192135.0
Bamboo_the_plant,"If you’re familiar with Vue.js, you could also consider NativeScript.",1540193326.0
maynotbe,"Just delete and recreate the emulator.  I noticed it asked for microphone permissions the first time I made a build a build on the emulator post Mojave.  I gave permission and it worked fine. But if it didn’t, my go to is to create a new one. ",1540168976.0
Giselemona,"What emulator for android works in Mojave?. I tried Bluestacks and Genymotion.

&#x200B;",1540177313.0
kbcool,"Use the official .gitignore it will make sure the relevant parts of the xcode project are included 


https://github.com/facebook/react-native/blob/master/.gitignore

As long as you don't go messing around in node_modules folder which is verboten in any project then someone should just be able to clone your project then run npm install and run it.

It's recommended also that you use command line methods of configuring things purely because Android Studio and to a lesser extent xcode will make a dog's breakfast out of your project very easily.",1540163204.0
agmcleod,"With native packages, once you have them linked, it's pretty set to go. Just commit based on what the default .gitignore gives ya.",1540179811.0
jasdeep13,This is perfect! I need this for an upcoming project! Thanks!,1540187586.0
Unforgiven-wanda,A nifty little project. Thank you for sharing.,1540196418.0
Lybra91,Thank you for your work!!,1540205510.0
ramzez_uk,Link is broken,1540140378.0
pthrasher,"There is room for more than one framework... flutter nor RN are hammers, and not every problem is a nail. More real ideas in the space is better. Flutter will make RN better and vice a versa",1540133283.0
dangoor,"I don't think a small number of blog posts is particularly representative, especially because people don't generally put up blog posts saying ""we're _still_ using this technology we've been using the past couple of years.""

Khan Academy is still migrating code for older native features into React Native and it's been helpful for us. Our mobile engineers are quite happy to drop into native code where it's necessary to get the feature they need, but RN has helped us share a lot of work between iOS and Android.

Flutter is an entirely different beast with different tradeoffs.",1540128064.0
agmcleod,"> One big pain point for React Native seems to be the so called ""dependency hell"", where every project has to rely on a plethora of third party npm dependencies which constantly break even with the smallest updates.

I started using react-native when it released, and this was very very true back then. I built an app with a team at my work for a client spring to summer. Working on an app for another company now. I have not run into this issue. Things we run into are more interesting gotchas. Trying to figure out right now how to do a gradient background and make it transparent. Might need to use svg or something :)",1540124862.0
powerje,"Flutter is generally nicer to work with (better language, better tools, smoother performance) but has one severe disadvantage in my opinion - it's a lot harder to integrate Flutter components with standard native components. You can't mix and match Flutter views and native views in the same hierarchy.

&#x200B;

React Native makes that a lot simpler.

&#x200B;

Even the nice things about Flutter are disadvantages though - the better language is marginally better, and there is a learning curve there. Pub is a lot better than the dependency management story on the JS side IMO, but again more to learn.

&#x200B;

Basically I think they both have their place, I expect the momentum of RN/JS/Facebook to keep it alive and more popular than Flutter, even if Flutter is technically better in most aspects.",1540131341.0
stevula,React Native has the advantage of allowing web developers to build mobile apps (with certain constraints). Flutter has other advantages but the barrier to entry is inherently higher if you have to learn a new language and framework. Not sure which will win (if either) but it’s great to have both options!,1540136143.0
ogv11,"We will have to see what the react native team will present later this year. I like react native a lot. It has many problems, but it still worth it, depending on what you do of course.",1540124038.0
Fossage,"Although it’s true that dependency management in React Native can be painful, one thing that gives React Native a huge edge is the fact that you get nearly all of the existing React ecosystem with it. This means great documentation as well as tons of articles, examples, and stack overflow answers for just about anything you might have a question on. This also means you have access to a ton of libraries that help solve all sorts of problems, many of which have been battle tested and used in production in major apps for years now. ",1540131091.0
Mozorelo,"Frankly I've been trying to get into react native and it's hard as hell because of dependency hell. Flutter is attractive exactly because it goes away from this.

Frankly airbnb backing out of react might be disastrous since they represented a huge chunk of the community. We'll see if Facebook can pick up the slack. ",1540152082.0
oYYY,"I've done iOS for 3 years, Cordova for 2 years, and now I'm in my 2nd year of React Native. Flutter will have to have a lot of ""wow factors"" to take over React Native. React Native is easily the best mobile development platform I have worked with so far.",1540162858.0
NotYourMom132,"Well React Native is still new and growing. It keeps getting better.

However, based on my experience, eventually Javascript always wins.

Idk why but that's always been the case, from NodeJS, ReactJS, and now ReactNative.

NodeJS has the same thing you call ""dependency hell"", yet it's the most popular framework (#1 stackoverflow survey 2018) and a must learn for every new programmer.

ReactJS is also the most popular framework for frontend development, leaving Vue (at least in the west) and Angular far behind.

Based on the pattern, i believe ReactNative will stay on the top as well (currently leading)",1540123832.0
glacierdweller,"I can't speak for anyone but myself, but I've moved from RN to Flutter (still use React for the web) for the following reasons:

- Flutter is reactive all the way down from the widget you compose down to the code that generates the OpenGL instructions. This is not the case with React Native, which merely puts on a reactive abstraction on the top of some very imperative code.

- In Flutter, there is no bridge. This is for me the biggest weakness of RN. Yes the UI widgets may be native code, but if all your network and business code is in JS land, that means you need to marshall all your data over the bridge to show anything. I feel this is a bottleneck that RN has to solve. In Flutter, all the UI is written in Dart and executes in the same space as your code. In fact, it's all userland code, nothing the framework does is more privileged than your code.

- Getting into Flutter is EXTREMELY easy, way easier than getting into RN, even if you know JS and dont know Dart (as was the case for me). Sure, Dart is an initial hurdle, but it is easily overcome. And the Flutter dev tools are way way way better than the RN devtools.

I still like RN (and use React for everything on the web) but I fear the inherit flaw of RN (the native UI's) and feel that Flutter provides a way better path (great dev experience with hot loading, compiled to native ARM for production code). YMMW.",1540157259.0
esthor,Dart.,1540124511.0
Mael5trom,"We recently evaluated RN vs. Flutter, and for us, it made sense to go to Flutter. 

1) We have more mobile/server devs, so Dart makes sense compared to JavaScript. I am the only person that identifies as a web/JS dev (not that the others can't do web stuff, but that is my area of expertise).

2) Related to #1 - movile devs coming from Java/Kotlin/Swift don't need to worry about the idiosyncrasies of HTML/CSS

3) No JS-bridge for Flutter seemed like a big win (I expect something to develop in React Native that eliminates this advantage for Flutter)

4) Performance for Flutter seemed better in our proof of concepts

In the end, they were extremely close in all the categories we evaluated them in, in fact - our scorecard had them end up tied. So it was the idea that Flutter/Dart be a better fit for our team compared to having to learn JS paradigms.

edit to add: I don't think Flutter is going to supplant ReactNative, but I think it will coexist successfully. And that should be a good thing, as the competition should push both platforms to be better.",1540167615.0
sam_cit,Flutter has one thing going in fragmented Android world. UI will look the same on all devices including Samsung devices. RN using platform widgets will have different look.,1540183149.0
dwise97,"I’ve been developing an app for the past month or so and I’ve had a very good experience so far. Minor hiccups here and there but knowing enough about each platform makes it easy to find solutions on google/SO. I think the problems you’re describing stem from companies developing brownfield apps or trying to integrate RN into existing native apps. I think discord and wix engineering have said this themselves in the past and following their examples and architecture makes building a greenfield app easier. All that being said, flutter will not succeed in the way RN and Cordova did simply because of dart. A lot of people I know flat out say they don’t want to learn a language that will become obsolete or replaced in a few years. ",1540124280.0
maiam,I've been using react native for a while now and the positives far outweigh the negatives. I feel like it gets hate from r/programmerhumor meme Bois that just hate anything JavaScript instead of being objective. That's not to say there isn't a ton of things RN can do to be better. Overall though I will be continuing to happily develop on RN,1540137439.0
sdholbs,"Would recommend taking a listen to https://devchat.tv/react-native-radio/react-native-at-airbnb-working-at-tonal-feat-gabriel-peal/.  Gabriel Peal talks about React Native vs. Flutter and the state of the community there.  He also talks about how the decisions were made to use React Native at Airbnb.

TLDR; Airbnb devs don't regret the decision to use React Native. It was the right tool for a time when they were growing fast. RN allowed them to repurpose web devs to their mobile platform when they were struggling to recruit native devs.",1540228826.0
crispypretzel,"At my company, one of our main reasons for using RN is that we had an existing front end on React JS. Flutter would not have made sense for us.",1540141460.0
joesb,"I’ll wait for a while before investing in a any framework and tool pushed by Google. Google doesn’t have a good track record with me considering AngularJS and Angular changes. Who else remember web component? 

React has been very API stable for so long. Facebook uses their own framework and it shows. 

How many google apps use Flutter?",1540540428.0
MrsRedBull,"Flutter and Dart are missing the two most important features of the React Native ecosystem.

1. OTA updates. The biggest reason I would choose RN over every alternative is the ability to release multiple updates a day if needed. It’s allowed me to fix major issues in less than an hour vs the days a app submission would take. This has saved the day for me. I’ll tell the story some day.

2. Being able to share code across your web, mobile, and PC clients is invaluable. All of our clients are built on top of the same JS backing. It requires significantly fewer devs and makes for faster, more reliable, and concurrent client releases.

RN definitely has its disadvantage, but the advantages of using it far out way them. In my opinion, as an Android and iOS dev veteran, doing it since 2007/2008, RN is still the correct choice. Unless you have a massive team and massive budget to be able to do everything natively for each platform, including UX and UI.",1540152721.0
kexnyc,"My employer is banking their multi-million dollar business on the React/ReactNative ecosystem. That’s not a decision they’d make lightly or on a whim. The biggest factor, in my opinion, is the shared web/mobile component architecture, and second is community support. 

So, no. I don’t think Flutter will supplant RN. It may share some of the spotlight, but it won’t replace it. ",1540143847.0
fkxfkx,"Hell, yeah.
Battle of the tech behemoth dinosaurs.
Google vs ? Facebook?",1540127397.0
gormand0,What are the specs on your computer?  When you reload in the Web IDE you aren’t relying on your system’s resources.  Simulators/Emulators take a good amount of CPU and GPU power.,1540094936.0
,[deleted],1540095425.0
pinkletinkle,Make sure you're connecting to your localhost and not via the tunnel. Makes a huge difference. ,1540107584.0
mattMEGAbit,"just to clarify.. setting up a new project.

$expo init

.. test-app

$cd test-app

$expo start

.. press i to launch simulator

.. simulator says building javascript bundle at bottom

.. 1 min later text appears on screen

.. make some change to text and save

.. app now takes 10 seconds to update the app on the simulator and/or iphone on local network.

\[10:46:59\] Finished building JavaScript bundle in 64ms.

\[10:47:03\] Finished building JavaScript bundle in 195ms.

 

""downloading javascript bundle"" seems to be the bottleneck?

\----------

 heres a dump from log in term - 

\[10:38:17\] Trying to open the project in iOS simulator...

\[10:38:18\] Opening iOS simulator

\[10:38:20\] Opening exp://localhost:19000 in iOS simulator

Press ? to show a list of all available commands.

\[10:39:32\] Finished building JavaScript bundle in 49332ms.

\[10:39:33\] Running application ""main"" with appParams: {""rootTag"":1,""initialProps"":{""exp"":{""manifest"":{""description"":""This project is really great."",""developer"":{""projectRoot"":""/Users/myusername/Documents/PROJECTS/test-app"",""tool"":""expo-cli""},""loadedFromCache"":false,""orientation"":""portrait"",""env"":{},""platforms"":\[""ios"",""android""\],""xde"":true,""id"":""@mattmegabit/test-app"",""hostUri"":""localhost:19000"",""iconUrl"":""r/http://localhost:19001/assets/./assets/icon.png"",""assetBundlePatterns"":[""**/*""],""mainModuleName"":""node_modules/expo/AppEntry"",""sdkVersion"":""30.0.0"",""isVerified"":true,""packagerOpts"":{""lanType"":""ip"",""dev"":true,""minify"":false,""urlRandomness"":""e2-zmq"",""hostType"":""lan""},""ios"":{""supportsTablet"":true},""updates"":{""fallbackToCacheTimeout"":0},""bundleUrl"":""http://localhost:19001/node_modules/expo/AppEntry.bundle?platform=ios&dev=true&minify=false&hot=false&assetPlugin=%2FUsers%2Fmyusername%2FDocuments%2FPROJECTS%2Ftest-app%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles"",""version"":""1.0.0"",""debuggerHost"":""localhost:19001"",""icon"":""./assets/icon.png"",""slug"":""test-app"",""name"":""test-app"",""privacy"":""public"",""logUrl"":""http://localhost:19000/logs"",""splash"":{""resizeMode"":""contain"",""image"":""./assets/splash.png"",""backgroundColor"":""#ffffff"",""imageUrl"":""http://localhost:19001/assets/./assets/splash.png""}},""initialUri"":""exp://localhost:19000"",""appOwnership"":""expo"",""shell"":0}}}. \_\_DEV\_\_ === true, development-level warning are ON, performance optimizations are OFF

&#x200B;",1540134288.0
mattMEGAbit,"update -

enabled bug reporter in iphone simulator seems make it update fast like you would expect.

Also, pressing ctrl + D, seems to help with refreshing screen, holding ctrl + D will bring up the menu for the shake command.. I don't know if this is by design or not.. feels janky/buggy.

Any comment on this?",1540136352.0
mattMEGAbit,"update 2 - 

I have managed to get things working better now. 

Current solution is to run the app on phone and enable hot reloading by shaking the phone, the simulator is pretty laggy on my computer.. this is most likely being caused by it's age. 

MacBook Pro (13-inch, Late 2011) 2.4 i5 with 8gb ram.",1540221065.0
mattstoicbuddha,"I'm pretty sure you can't without a Mac. Apple loves keeping their ecosystem locked down. 

I personally use a Mac for web dev, but it I'd annoying that I couldn't run an iOS simulator when I was using Ubuntu.",1540062658.0
bhardman86,"Mac in cloud seems to be a fair realistic option. Outside of buying a Mac computer.

https://www.macincloud.com",1540064365.0
darxvirus,"You can run MacOS in a VM. It can be quite slow depending on your use, but at least it's free. Good luck! ",1540073721.0
spira_mirabilis,"I work on arch too and I made a MacOS X VirtualBox VM just to test with its iOS simulator. The performances are a bit crappy, but it do the job.",1540114481.0
schjlatah,"The iOS Simulator only runs on macOS.

I have a Hackintosh VM running on my windows laptop that I use for personal projects.   
Animations are a bit slow, but works fine otherwise. 

Check out: [/r/hackintosh/](https://www.reddit.com/r/hackintosh/)",1540233302.0
Romeo_Foxtrot,"'Advanced programmers' attacking OP for making a post that is not beneficial, by making comments that are not beneficial.  SMH.  So as not to befall the same end result, I will add to the thread by making a suggestion.  
OP said that the app is quite complex, and usually, that would require a state container and asynchronous functions.  For some of the newer folks reading this thread, have a look at [Redux](https://redux.js.org/) and [Sagas](https://redux-saga.js.org/docs/introduction/BeginnerTutorial.html)

It doesn't appear that this first tutorial would require these frameworks, however, it's a good practice to learn about certain frameworks ahead of time so when designing the architecture/stack, you can determine whether you need them or not.  Adding them late into development is a pain compared to knowing you will need them from the start.  Good luck new React-Native developers!  Don't let these 'advanced programmers' discourage you.  They do not represent the community as a whole.",1540080362.0
scttmthsn,Fuck the naysayers; well done and thanks for sharing.,1540064818.0
Ikuyas,Cool!,1540038122.0
SolGuy,I am starting out with RN as well. Some of the things I have learned while suffering through the early stages could save others many hours of heartache. Others forget how difficult it is to start off and how quickly you forget the stuff that seems easy now but was very difficult in the beginning. It is important to do tutorials like this when this stuff is fresh. Great Job.,1540081096.0
Denieffe,This is awesome man. I feel like as a beginner you really understand the pitfalls other beginners can find themselves in. Thanks for this. ,1540089659.0
wcandillon,Very cool! What you are doing is definitely the best way to learn.,1540110272.0
mbenjamin618,"This is great! Keep on keeping on!

I think a cool next step would be to integrate Google's location API that takes in a human readable location and gives you latitude and longitude",1540227831.0
xrpinsider,"I don’t think its really smart to make tutorials when you are learning yourself. Its a really simple tutorial and it is really easy to make without tutorial. I don’t see the value of this tutorial, I’m sorry. ",1540038154.0
napolux,"Learning -> Writing tutorials... 

WTF.

What about speaking at conferences and opening a youtube channel? /s

Thinking about it, I've been at conferences where you can be a legitimate speaker :-/",1540040365.0
,Is this for third or fourth grade?,1540037252.0
hhunaid,"It's not possible at all on iOS. It was doable on previous versions of Android, but I'm not so sure now.

In short, you won't be able to do this in a cross-platform way.",1540031936.0
cmcaboy,"1. Make sure the libraries reference above are in \~/Documents/FBSDK. iCloud may have removed them.
2. In XCode, go to Build Phrases and search for the Frameworks Search Path property. Make sure you have an entry pointing to \~/Documents/FBSDK.",1540231222.0
dev4work,"In my opinion, Millionaire app depends more on an idea rather than a technology/stack. Tech comes later when you have scalability issues when the users balloon up rapidly.",1539988003.0
thisisafullsentence,[Discord proudly uses React Native](https://blog.discordapp.com/why-discord-is-sticking-with-react-native-ccc34be0d427) and is apparently [valued at $700M](https://www.feedough.com/how-does-discord-make-money-discord-business-model/).,1539986724.0
wengemurphy,"Are you concerned about picking the right technology ""just in case"" you become a millionaire?

Well.....don't do that. Becoming a thousand-aire is hard enough. Work on making anything more than beer money first.

And if apps like ""yo"" can become overnight successes, I don't think tech is a critical barrier.

Don't worry, you'll have resources to rework your app once you make $250,000 if you really think that's what it's gonna take to get past the $1M wall.....",1539989310.0
TheGiantOtter,😂 Facebook,1540008551.0
Laboratory_one,Instagram is built in React Native. AirBnB was as well (the recently switched back to native for reasons they’ve blogged about).,1540056124.0
Sebastianq01,What’s it for?,1540156588.0
Joped,"I see that it's inspired by 4ark/react-native-step-indicator.  But, what does this provide or do over the inspiration ?
",1539976718.0
Geooogle,"This may not answer your question, but have a look at this [SDK reference](https://docs.expo.io/versions/latest/sdk/index.html) from Expo's site. Also under [Project Lifecycle](https://docs.expo.io/versions/latest/introduction/project-lifecycle) they mention:

>We frequently release updates to the [Expo SDK](https://docs.expo.io/versions/latest/sdk/index.html). Each update includes instructions for how to upgrade your project. If you decide to update to a newer version of our SDK, copies of the older version will continue to work fine. Users will download the newest copy that their client supports.

&#x200B;",1539960438.0
Billard_ballz,"Even if React Native becomes the future of app development, which is a big if, knowing iOS native will most likely still be a valuable skill. Having a strong iOS background can help with debugging and be useful when building native modules. Remember, there is only one pure React Native feature in the Facebook app.

In the end, I don’t think you can wrong with either. Being confined to one platform is a legitimate worry, but in a sense only learning React Native is confining yourself in a similar way.

I personally have had success learning iOS first then picking up React Native along the way.

Good luck!

",1539950257.0
nickmcsnapz,"You'll need to know the ins and outs of XCode and Android Studio still, but yes RN is much better. I came from native iOS and Android to RN and I never want to go back to native dev work again. I feel so free with RN, it's changed my programming life. As a full time lead iOS and Android dev, it's amazing. ",1539949520.0
rodrigoelp,"Hi u/Egamis,

I've done iOS, Android and React Native... I am going to give you a different advice... technology is a tool, swift/objC or java/kotlin or react native js/ts or whatever are perfectly good options and each of those have different niches in it will shine its best or its worsts.

I did Android a really long time ago and I often find I am optimising little experiences that are better suited to the native part of react native than to the js part of it.

I particularly find all my tools pretty handy and use it accordingly to the occasion. I take pride when an app has a good user experience and our users mention how awesome their time with the app is. Some times you can get away from doing that extra mile just for the sake of a beautiful app, solid and functionally complete.

Will React Native take over the world? I am not sure, developers of the native platform are quite protective of their knowledge (especially android devs that are extremely opinionated without evidence to some of their comments) and that might play against it. I find a few aspects of react native rough on the edges and some other plain stupid. I find extremely hard to trust completely the javascript community and decided to use typescript which is a much nicer language (even though is smoke and mirror to javascript). I also like swift and haskell and c#

By the way, you do not maintain a single codebase, different operating systems have different philosophies that you should understand and embrace, otherwise you will be writing mediocre apps, some of them might be functionally sound but some of them will feel foreign. In my experience, you end up maintaining 1.30 to 1.5 codebases. Not quite twice the amount of work as building two fully blown apps, but not quite writing it once and forgetting about it.",1539950345.0
codyswann,PWAs are the future. React Native is the bridge. ,1539994786.0
HoldThisBeer,React Native is the *status quo* of mobile app development. Flutter is the *future*.,1540132210.0
schjlatah,"I've been doing native iOS and Android since 2011 and have been struggling to hit my stride with React Native.

Perhaps its a mindset thing, but the majority of my React Native code-reviews have been rejected.

If you are looking to go native, it hasn't been difficult (in my experience) picking up another native-native platform after you know one.

React Native is like [David S. Pumpkins](https://www.youtube.com/watch?v=tML85kQfy0c); its own thing.",1540233154.0
xrpinsider,"I did native Android development for a while and it SUCKS. An API request alone takes a few files and more than one hundred lines of code. That sucks so hard. Making a bottom tab navigator is a real pain in the ass too. React Native saves a lot of time and saves you a lot of time, believe me!",1539950106.0
Telarisoh,"I'm a 3rd year CS student and am currently building my final year project in react native. 

The performance loss of using non-native development is so minimal with react-native that it's definitely worth your time. If you're building any sort of major application that you're looking to deploy at scale, react native has to be the best choice. You're only managing one code base as opposed to two and I think it's only going to grow as a framework over the next few years.

React Europe has a great playlist on YouTube if you're looking to start out and learn how everything works!",1539948619.0
MaxFAIL,"Hi, I am pretty new to react native and maps as well. So I am not sure if this is helpful:
All region props have 4 values : latitude , longitude and the delta values. These delta values define the zoom. 
Have you tried to add custom buttons which change the value of the latitudeDelta ? longitude delta is often calculated from latitudeDelta and aspect ratio of the device. 
If you have questions to this last point I can search for a example video.",1539946089.0
Extracted,"It sounds like you're overthinking the zoom buttons.

I've got an app with a map and zoom buttons as well, and have never received feedback about this issue. I never even thought about it myself.",1539969160.0
theWindInYourButt,Eject the app!,1539930399.0
aforty,I hate expo. ,1539956942.0
a_atalla,"this navigator you picked is a native navigator , it won't work in expo 
your way to go is 
https://reactnavigation.org

for more info, read the introduction of this article

https://medium.com/handlebar-labs/navigating-navigation-in-react-native-26c7e4690f94",1539933537.0
xxxmralbinoxxx,"I would not eject unless you plan on using other native libraries. Expo keeps things simple for you, which is part of the draw to use it. 

&#x200B;

I would give \`react-navigation\` a try. It's one of the most popular navigation libraries for react-native and it works great with expo. [https://reactnavigation.org/](https://reactnavigation.org/)",1539957530.0
Geooogle,"Next time you run `expo init`, tap down arrow in select `tabs`

>The Tab Navigation project template includes several example screens. 

&#x200B;

This comes with installed `react-navigation`

[Heres the code](https://github.com/expo/new-project-template/tree/master/navigation)",1539961475.0
NaveNocab,"As is stated already `react-native-navigation` won't work in Expo. `react-navigation` is the recommended lib for Expo. As of recently React Navigation has started to integrate `react-native-screens` which is a new primitive that will make `react-navigation` extremely efficient, as is shown in this tweet https://twitter.com/janicduplessis/status/1039979591815897088 there is also an episode of React Native Radio where they explain why this is going to be dope. https://devchat.tv/react-native-radio/reanimated-react-native-screens-more-feat-krzystof-megiera-of-software-mansion/",1540505229.0
Laboratory_one,"The biggest bottleneck in React Native for us has been the build process. As a framework on top of native tooling, the toolchain is long and complicated. This often led to frustration when building for development and production, integrating node modules containing native code, configuring cocoa pods, and google versions and scopes. 

If you think you’ll have to deal it any of the above, which you’ll likely have to, try to learn how they work. I’d do this by building a bunch of toy apps and integrating modules. Firebase and google maps can be a common source of build issues. 

Aside from understanding how to work with the toolchain, I’ve found React Native to be easier than web!",1539924097.0
rickisen,"Iv'e worked on regulair react-native projects and now on a typescript-expo project and I have a background in web-dev.

Some of your questions:

* **What's something I wished I had brushed up on?** Basic app UX, like the difference between nested navigators in apps, and routers in web-apps. Some UX-patterns, like how everything interactable should react to a touch, and how they usually react in apps. The way animations work in react-native. ScrollViews, pull to refresh, and maybe flex-box.
* **Day to day relationship with jest?** Hate it. Maybe it's due to the way my current project uses react-native + jest + typescript + jest-typescript + jest-expo. Ugh... I know a lot of people use jest, but troubleshooting something when the setup require mutliple modules to work together like that is a nightmare. Also the error messages jest outputs are seriously weird. They tend to point to lines in files that has nothing to do with anything.
* **Visual Studio App Center?** Never heard of it actually, I use Vim for 99% of my react-navtive programming. And in general people use whatever text editor they like. Since my current project uses expo, I can actually work 100% in linux, and don't even need android studio installed. It's awesome.

A friendly warning. In general there is an influx of old school app-developers also learning react-native right now, and they often have some javascript knowledge, but no react-knowledge. Iv'e encountered some of them, and they tend to write very weird react code (no lifetime methods, everything in redux, no local state, etc).   
Don't make the mistake to think that their way of working is the correct way. react-native projects is meant to be written react-style not app-style. And things can get very weird when you break that. Your web-knowledge is more transferable than you think :).  


&#x200B;",1539940934.0
nijolas-wilson,"I did this same transition about 2 years ago.

Build tools are a big deal. Gradle and Xcode. Omg Xcode is horrific. Good luck.

Get used to using a Mac - I was Windows before, this may not apply to you. But Apple just has to do everything differently to literally everyone else for literally no good reason...

Read the React Native performance docs. Super helpful to have a thorough understanding of the platform itself, and the performance docs necessarily cover it.

Some baseline Objective C and Java if you're unfamiliar. Objective C was and still is a total shock to me, the syntax is strange as it's based on Smalltalk I believe... Anyway. That. It's not entirely necessary but it's helpful if you can at least vaguely read the native stuff.

Brush up on you Googling skills, you're going to be doing that a lot. React Native is the most brittle ecosystem I've worked with. It's amazing and totally worth it, but fuuuuuck some days man... You'll lose 3 days to some bs config or version conflict thing somewhere in the 13,000 packages in node modules. Take up meditation.

Cords wear out doing RN development from shaking the device to bring up the Dev menu. Also you will fuck your wrists playing with small screens all day - really bad for you compared to mouses and keyboards. Not sure how to fix that, just take breaks.

That's all that's come off the top of my head rn. Good luck! I enjoy it and it was totally worth the transition for me.",1539918537.0
demoran,"App Center allows you to update the javascript portion of the app on the fly, so you don't have to do a new release in the iOS or Android app stores.  It's got nothing to do with your editor.",1539974600.0
thebaconmonster,"I’ve been trying to get this working on and off for several weeks now without any success. 

There are some existing symlink solutions, but I can’t ever seem to get the metro bundler to work correctly",1539924106.0
fallkr,"We’re running this combo. Got a monorepo with 2x RJS, 2x RN and a shared business logic package. Some workarounds had to be done to make it work, the most important using rn-cli.config.js to resolve the other packages relatively to the current project and blacklist duplicate RN packages from the other packages. Also need to use nohoist, so a yarn install takes ages unfortunately. ",1540048201.0
JonForeman_,"Did you read what's in lecture 15? 

He's basically saying don't use create-react-native-app and follow the steps...

&#x200B;",1540020293.0
cmcaboy,"For questions about Max's course, I would recommend using the Q&A section in Udemy. You could also try him on Twitter. 

With that being said, if he is downloading Android simulator and installing the react-native cli, he is probably preparing to eject from Expo. I'm guessing that you are getting to a point in the course in which we need access to a native module. With Expo, you can only use the Native module libraries that Expo built for you. You can't use your own or other 3rd party libraries that use native modules.

&#x200B;

In a general sense, Expo is great for learning React Native, but at the time of this writing, it is not suitable for production environments.",1539958286.0
DanteKelly,"If you were looking into prop-types, I would advise you to get into flow. It has replaced prop-types and has been heavily integrated within the react native development cycle. My current project has 40 components and 50 screens, and without maintaining my flow errors I now have have 500+ flow errors which are pretty hard to resolve, but flow is incredible for cutting extra fat in your project and reducing errors (especially in iOS). So buckle up if you want to get started with flow!

I haven't yet integrated testing but I will most likely use Enzyme + Jest to test critical functions only. 

I hope this helps!",1539911156.0
aaronksaunders,"Another short video from #reactnative course we plan on launching in the Fall

Part 1 - [https://www.youtube.com/watch?v=pedZi7Yz4P4](https://www.youtube.com/watch?v=pedZi7Yz4P4)

Part 2 - [https://www.youtube.com/watch?v=qe-yU7E9Snc](https://www.youtube.com/watch?v=qe-yU7E9Snc)

&#x200B;

focus was on react-navigation StackNavigator handling click event to move to the next page

&#x200B;

Code is written in @expo.io snack online IDE and code is running in IOS simulator

\#TheFutureIsWrittenInCode

&#x200B;

References:

[https://reactnavigation.org/docs/en/navigating.html](https://reactnavigation.org/docs/en/navigating.html)

[https://reactnavigation.org/docs/en/headers.html](https://reactnavigation.org/docs/en/headers.html)",1539871812.0
SoulOfKrishna,is that the iOS simulator that comes with xCode ?,1539874116.0
aaronksaunders,"The second part of a series of videos from #reactnative course we plan on launching this fall - 

Focus is on react-navigation StackNavigator handling click event to move to the next page when the user selects a item from a FlatList Component.

We show the FlatList Component, the use of the StackNavigator and passing parameters when using the StackNavigator in React-Native

Code is written in @expo.io snack online ide and code is running in ios simulator

\#javascript #reactnative #react-native #react-navigation #TheFutureIsWrittenInCode

Source Code: [https://snack.expo.io/@aaronksaunders/hello-world-v3-stacknavigator](https://snack.expo.io/@aaronksaunders/hello-world-v3-stacknavigator)

Source Code Showing Use of Context API: [https://github.com/aaronksaunders/hello-world-v3-stacknavigator-context-api](https://github.com/aaronksaunders/hello-world-v3-stacknavigator-context-api)

&#x200B;

Part 1 - [https://www.youtube.com/watch?v=pedZi7Yz4P4](https://www.youtube.com/watch?v=pedZi7Yz4P4)

Part 2 - [https://www.youtube.com/watch?v=qe-yU7E9Snc](https://www.youtube.com/watch?v=qe-yU7E9Snc)",1539870890.0
edzillion,"What's react xp like? This sounds compelling:

> With React and React Native, your web app can share most of its logic with your iOS and Android apps, but the view layer needs to be implemented separately for each platform. We have taken this a step further and developed a thin cross-platform layer we call ReactXP. If you write your app to this abstraction, you can share your view definitions, styles and animations across multiple target platforms. Of course, you can still provide platform-specific UI variants, but this can be done selectively where desired.",1539877797.0
TomMahle,"That looks like a popover, and there are OSS react native components for creating them.",1539872854.0
Unforgiven-wanda,I usually go with [https://github.com/prscX/react-native-app-tour](https://github.com/prscX/react-native-app-tour),1540114791.0
xrpinsider,"Hey fellow student. I am in the exact same position here but my school works with real costumers so we have a project we should make. My current stack is:

- React Native with Expo + React navigation.
- KoaJS backend with TypeORM and route controllers. (At first I used a Lumen backend).

The cool thing about React Native is that if the app has ever been started with internet and you kill the app and start it without internet all data will be displayed from the last session. (I don’t know why but it does that).",1539862954.0
agmcleod,"If you have a bit of experience with Rails, I would say to stick with that for your backend. Don't throw in new technology if you can avoid it.

For this kind of app, you want to build out controllers that respond with JSON. React Native will then leverage fetch() to send requests back and forth between the server.

For the app itself, keep the scope as small as you can. Try to scope something that you think will take your team 1.5-2 months to complete. If you finish that early, and the app feels solid & smooth, add on another feature. 

For designing out the app, once you have the rough idea of what the app is, spend sometime together white boarding out the workflow. This means to show the flow between screens, have an idea of what is on each screen, so you can start scoping out the project in detail.

Write user stories for the screens, or major features. A user registration story might be.

- Create users table with email & password. Password should be encrypted via bcrypt
- Create users controller with create endpoint. This should check for unique email address, and for a submitted password. Success should respond with a 200. Validation errors with 422 + error message in JSON body.
- Create screen on phone to register with email address, password and confirm password field. Form should validate as the user types. Disable the button if the form is invalid.
- Submit should send data to the backend. Upon success, show the user a message that they are now registered.

Those are a few big chunks, at my work each of those points would be its own story. The first two might be in one story, as it's a close dependency.

I would leverage something like trello or github projects to keep track of the features and work that needs to be done. You'll probably want to use github or bitbucket to collaborate on this. Though check with your teacher if the code can be on github, since it would be public.",1539867917.0
cmcaboy,"If it is for a school project, look at using Expo. Expo encapsulates away most of the complexity around using native modules.

&#x200B;

I would also recommend using a UI framework, such as Native-base, React-Native-Elements, or React Native Paper. This will dramatically speed up your development time.

&#x200B;

For the backend, there are tons of good choices. A good lightweight option would be Firebase Firestore or Firebase Realtime Database. You can call these directly from the client or from your own server. For a school project, I would recommend just calling it from your client.

&#x200B;

For the product to work offline, you would want to use a state management solution, such as Redux. Persisting data while offline is an option as well with AsyncStorage Redux-Persist.

&#x200B;

Good luck!",1540232843.0
xh0s3,React native paper,1539845118.0
raindropzyy,"NativeBase, React Native Elements, React Native Material Design...",1539844257.0
dev-ahmed,"You can use native-base or react-native-elements, these are open-source ",1539844724.0
edanceee,"nativebase, super good.",1539855028.0
sekende,native base will solve your problem,1539913279.0
vbislife10,"i think use Native Base .It's recommend Microsoft.and very beatiful library.github stars high more than competitors.

**Recommended by** *Microsoft*

>If you're looking to get started with React Native + CodePush, and are looking for an awesome starter kit, you should check out Native Starter Pro - [Microsoft's react-native-code-push repo](https://github.com/Microsoft/react-native-code-push#example-apps--starters)

&#x200B;",1539849657.0
xrpinsider,What I have is a standard Fetch post request to my API. JSON data will be email and password and the return data will be the Authorization token from JWT.,1539813283.0
kbcool,"Depends on what the API requires doesn't it. 

There's enough ""standards"" to fill fingers on my hands and plenty of other ways to authenticate with an API",1539837417.0
kbcool,Never heard of what you're saying or had a problem. Where does it say this?,1539837463.0
Laboratory_one,This is amazing. I thought it was just 1 example but it's like a whole blog of examples. You're hardcore.,1539831324.0
MaxFAIL,Awesome ! Thanks a lot,1539849737.0
vitriolix,"ExpoKit really just regular react native with some nice helper libraries, much the same as if you linked some other helper native libraries.  No fundamental difference.  If you like the services / features they provide, and a lot of them are really really nice, use them. ",1539794512.0
interactivejunky,"We went skipped expo kit when ejecting and rebuilt in rn. Saved 20mb from the filesize, sped up builds, sped up start up times. Also meant we logged a lot of users out when I messed up the secure storage porting. We also had to ask the expo guys to export push tokens for us which they did very kindly but it took some time.

Overall I think for most projects it’s better to go to ExpoKit unless you have a need for low file size and better startup performance.",1539813393.0
TomMahle,"The documentation on this is spread across a few places on Expo's website, and unfortunately doesn't have cut-and-dry answers to your questions:

&#x200B;

[https://docs.expo.io/versions/v30.0.0/introduction/why-not-expo](https://docs.expo.io/versions/v30.0.0/introduction/why-not-expo)

[https://docs.expo.io/versions/latest/expokit/eject](https://docs.expo.io/versions/latest/expokit/eject)

[https://docs.expo.io/versions/latest/expokit/expokit](https://docs.expo.io/versions/latest/expokit/expokit)

&#x200B;

In my latest project we chose to go for regular react native. ExpoKit in general felt like a compromised middle ground (I don't recall what ruled it out for us, but I know we tried). The requirement that Expo could not meet for us was background code execution.",1539786418.0
Brizzzad,"I had to make this decision 6 months ago, I tried expo kit for a week or so and ended up reverting back and ejecting to regular RN. I did this because it was a pain to maintain the configs to keep compatibility with the expo libraries. 

From my experience the expo camera and permission libraries lacked some specific features that the popular regular RN alternatives offered. I would read the docs for the libraries to decide which option is a better fit.",1539806457.0
hail-saison,"If you’re doing anything with in-app purchases or subscriptions, you’ll need to eject and ditch Expo. There are some ways around it but IMO they are more complicated than just ejecting.",1539839821.0
watlok,"Ejecting is annoying because you need to follow 3-7 github issues to get a working android build. After that, the new versions don't work on android 4.4.x devices (SDK 19, min targeted) even when built for release with no debug.

We needed to eject for bluetooth support, which is something expo should have but doesn't. 

If you're only supporting SDK >= 21 then ejecting isn't as bad. ",1539962237.0
kbcool,"Docs cover it all. I suggest you read the getting started guide. Particularly this page:

https://reactnavigation.org/docs/en/navigating.html",1539736133.0
Tougun,You could send the last tab’s identifier to the next one with navigation props and use it in the new tab to change to the old one when you want to go back,1539753074.0
kbcool,"The certificate is invalid for the URLs you provided. 


You may have installed a certificate in your browser or overrriden the warning but that won't carry on over to the simulator/emulator/physical device so that's likely your problem.
",1539732463.0
markprobst,"Hello native Reacters!  I've been working on a [new product](https://app.heyglide.com/) that makes it dramatically easier to build many kinds of data-driven screen in your apps.

We're looking for early testers.  If this seems useful to you and you can spend some time giving it a try and telling us what works and what doesn't, please PM me, or email us at [hey@heyglide.com](mailto:hey@heyglide.com).  Your feedback will shape the future of glide.

Of course we'd love to hear from everybody else, too.  Please let us know what you think!",1539702231.0
davidsiegel,"We have a short, three-question survey if you'd be so kind as to share your feedback! [https://davidsiegel2.typeform.com/to/zgjkYY](https://davidsiegel2.typeform.com/to/zgjkYY)

Thank you :D",1539795931.0
MetorFinis,"As far as I know android can share services. Now, service is shared via aide, but I am not sure that a state is shared also. So service is probably going to have to read write state to storage.
When you write a service you will have to create a bridge with aide implementation.

I think you will be better to write an debug panel to simulate valve state somewhere in app, and remove that screen once you start using actual valve.",1539726980.0
Steinaway,Use a local hosted xml file you can then manipulate it via php or by simply typing parameters into it. Your app would simply fetch the xml/json file run through it and fetch the data and render it on the screen for you.,1539814659.0
wcandillon,Thanks for the support 🙌🏻,1539696540.0
too_much_exceptions,"Great series ! 

recommend :)",1539717810.0
upkeys,supernice find!,1539781546.0
edric_garran,"expo is a framework over react-native which makes it easier to write apps to work with both android and ios. It provides abstractions over many platform specific apis, better tooling for development such as hot reloading, and also helps building production packages and deploying to the app stores.

I use it mainly because it makes it unnecessary to have a mac to develop for ios.

The limitation is that you can only use what is provided in the expo runtime and pure-javascript components. If you need to use a third party native component you need to eject and compile the project as you normally would from a raw react-native project. You can still use the APIs after ejection, though, so it's always worth it to start with expo and just eject when you really need to. ",1539689371.0
scaleable,hotel?,1539661463.0
wcandillon,Someone in the comments of the video just posted a solution where this animation can be done 100% natively and without even using svg 🤯🙌🏻,1539709766.0
halfjew22,"This is video 3 in the playlist of 5 so far. 

Going to do more recording right now. I want to show my thought process and what the 'real' thing looks like. I'm going to edit things down if this gets popular and that's something people want, but I feel too many tutorials these days don't shed any light on problems you'll run into in dev work. Just my 2¢ - let me know yours.

I'm very open to as much critical feedback as can be provided as I'm doing this to hopefully help anyone here as well as help myself improve by collaborating with you all. I'd also like to open source all of this and do versions specifically for Android in Kotlin, iOS in Swift, and move all this code to where I believe it actually belongs on Firebase cloud functions and then MAAAAYBE get really funky with it and write my own backend or something. 

Looking forward to any thoughts, thanks.",1539627100.0
jamminnzzz,"Can we see view source code? 
",1539720290.0
mbrochh,OP looks suspiciously like a content spammer. Article has zero mentions of react or any useful localization libraries.,1539655238.0
one_byte_stand,Not sure I understand the motivation. Why would I use this over Pouch/Couch? What’s different about it?,1539606280.0
Unforgiven-wanda,"This is interesting, I'll be keeping a close watch on it.  
Thank you for sharing.",1539673654.0
kbcool,This doesn't look anything like a RN question. Sure you didn't mean to post elsewhere ?,1539686424.0
robotize,Import should be from 'react-native' not Expo. ,1539581372.0
rdevilx,import { Image } from 'react-native';,1539582290.0
halfjew22,"More of the playlist: https://www.reddit.com/r/reactnative/comments/9of6q1/firebase_social_media_tutorial_that_actually/?utm_content=comments&utm_medium=hot&utm_source=reddit&utm_name=reactnative

New videos every day.",1539629958.0
BlenderDude-R,Another thing you could do is serialize the data to a file and store it using react-native-fs,1539540696.0
m0ka555,"yeah, sqlite3 with many rows instead of one large big object is usually the way to go. If you're saying it's crashing even without persistence then there's something else entirely going on.. so I'd start with that. Usually, the way to solve this issue is to keep the offline data as minimal as possible and to fetch live data for most pages. You can also cache some recent data and you have a ""mostly offline-app"" that is usually more than good enough.",1539538607.0
beastlyfurrball,"I haven't used it personally, but I've been keeping it in mind in case something like this happens to my app.

Check out https://github.com/Nozbe/WatermelonDB

If you do end up using it, let me know what you think",1539553451.0
too_much_exceptions,"What about ‘sharding’ ? 

You could split the data into multiple chunks given a sharding logic (key) directly into your redux store. You can then load only the required chunk for a given scenario?

Is it feasible in your use case ? 



",1539586509.0
abg123rocks,Try reading the log cat to find whats causing the android crash,1540948592.0
cakiran,VSCode,1539439438.0
mbrochh,"Been using Atom for the last two years.

Last week I tried VSCode.

Boy do I regret not trying it earlier. It's better and faster than Atom in every possible way. I did not expect that.",1539452264.0
xrpinsider,"IntelliJ IDEA, but I’ll explain my choice:

I guess that most people will say Visual Code and I understand why. Visual Code is free, minimalistic and easy to use. But it has some downsides.

IntelliJ IDEA comes with support for basically all code languages and frameworks. It has a build in Database tool, scratches and many other tools that are handy to use. All build in.

The big difference is that Visual Code is free to use and IntelliJ IDEA costs money (free for students tho). If your a student or a software developer, I highly recommend using IntelliJ IDEA because at the end the money(students free) is totally worth it. If your just learning or starting out a company and you have no money to spare. Use Visual Code its a great IDE to begin with.",1539442294.0
Fanatic17,VS Code for me too,1539445969.0
Jiri2941,VSCode,1539446618.0
khan1782,Vscode,1539446728.0
Interloper949,VS Code,1539449569.0
gishSE,vim,1539458769.0
HarleauxCarrera,VIM,1539483976.0
_drFaust,vscode,1539440750.0
tbkh91,VSCode. Been a real game changer for me,1539440972.0
co_matic,Sublime,1539442531.0
IminPeru,"VSCode is the shit

but I know a lot of my friends also use atom (comes with GitHub student Dev pack)",1539444964.0
kexnyc,I use Atom. ,1539449214.0
nelf86,"Sublime with vintage mode. 

In past I used vscode, but after installing all the plugins it was super slow. I did have a lot of tools but they did feel unfinished. I did like the degree of configurability though. My config was about 100 lines.

I also used intelij for 2 years. It is really good and polished, but on 8 GB or ram on my work computer I had to restart osx daily due to memory leaks in storm. This was at the beginning of this year btw. It's great when it offers you to finish variable name for you, but I already know what I want to type anyway, and because of the hinting enabled I needed to wait for the cursor to move. Really annoying...

Sublime doesn't give you things like code autocomplition or click to go to definition, but if you know your codebase, you don't really have to click on stuff to see what is in there, but still you can use go to file which is super fast.




",1539451108.0
Haseeb-Shinwari,"vs is best

&#x200B;",1539453323.0
MysticMania,"I used to use Sublime, now I use VSCode. The inline proptype and import completion plus the jest integration with in-editor debugging sold it for me.

For a brief period tried out Atom with the React Native dev environment plugin, Nuclide. Starting that thing up made all the fans in my computer turn on instantly, felt like it was going to explode geez.",1539460018.0
jonatthu,Vscode it is secure option go ahead ,1539461258.0
TheNoim,WebStorm for private or not commercial projects and vscode for commercial. ,1539468044.0
nijolas-wilson,VS Code,1539470437.0
cmcaboy,Vs code,1539475451.0
Waymond206,vscode,1539476153.0
Cinema7D,IntelliJ IDEA and sometimes sublime text,1539440590.0
euri10,pycharm! ,1539445590.0
ChemicalCap,Sublime. I like distraction-free editors.,1539464664.0
itsboilingoil,IntelliJ Ultimate,1539471735.0
sytler,webstorm,1539459076.0
shackra,GNU Emacs,1539464907.0
gustavodp,Emacs.,1539467000.0
AJ12AY,Emacs!,1539467086.0
Jitsu24,Webstorm in hizzzouse. Those guys at JetBrains make excellent IDEs,1539468759.0
Caketaro,IntelliJ IDEA,1539470476.0
careseite,"PHPStorm at work due to the really dated workflow we still have (only recently joined).

Usually vscode though ",1539474209.0
Filo01,vs code and visual studio community (running ReSharper) ,1539481613.0
KyleG,"atom

haters gonna hate",1539490208.0
HokieFreak,Atom,1539490802.0
Vpicone,"Phpstorm for work. Vs code for everything else. 

Php storm just has superior language servers that viscose extensions can’t match her for very large applications. 

I also like having the editors split as it prevents me from switching contexts between personal projects and work. ",1539492177.0
rdevilx,Started with atom then VSCode now Webstorm ,1539494043.0
karthidrive,Licence `intelji` editor ,1539511036.0
tgransden,Webstorm ,1539511958.0
bendingbeats,Nuclide. It’t package on top of Atom. https://nuclide.io,1539519177.0
Mox__Fulder,"Been using Atom for the last 4 years, it's great.",1539520995.0
straightouttaireland,"VSCode, great IDE but what I don't like compared to Webstorm is that you can't seem to ""go to definition"" if the function is in a separate file.",1539522434.0
rizwanahmed19,VS Code,1539548903.0
schjlatah,"I use VS Code, but everyone at work gives me grief about not using Atom.",1540233712.0
aforty,Man everyone has switched to VSCode huh? Well I’m still using Atom. ,1539454460.0
iMaciah,"I store images on my own server (although probably might migrate them to AWS S3 or Google Cloud Storage in the next months)

&#x200B;

Then I deliver them using imgix, this is my favorite CDN and I'll vouch for it any day. A bit that I do is check if the user is in WIFI or not, to decide if I deliver a good quality image (or not) so the app doesn't consume a lot of data.  


Also, make sure your app has a way to have images in cache, this is pretty important. I use react-native-fast-image [https://github.com/DylanVann/react-native-fast-image](https://github.com/DylanVann/react-native-fast-image) ",1539401683.0
pizzafapper,"An easier way is to integrate Firebase and use their Cloud Storage to store and retrieve images.

react-native-firebase is a popular package. Check it.",1539423879.0
cmcaboy,"I use Sentry for bug reporting. They treat React Native as a first class citizen so the support is strong. I have crashlytics installed, but I'm not currently using it. I'm using waffle to track feature requests and defects.",1539699270.0
kbcool,"Can you elaborate on what you mean by in app? You mean something like crashlytics where crashes and other errors are logged?

Built in with play store which is nice but you need something third party for iOS.

I tend to include a feedback mechanism in apps based on interaction with the app. Just a form, you could have the email automatically lodge a JIRA ticket though.",1539404554.0
kasimowsky,"The legal way is to rent a mac instance -- [https://www.macincloud.com/](https://www.macincloud.com/), illegal is to run *hackintosh.*",1539397424.0
captaincryptoshow,It'd be nice to have one that gets updated monthly / weekly and is just stickied at the top.,1539396689.0
mikehawkisbig,I’d be interested in this as well. The company I work for is always on the look out for React devs.,1539402711.0
bheklilr,"I'm definitely for it. I may not be looking, but I am happy for anyone looking to find a good place to work. ",1539403868.0
kbcool,I would vote for this too but I have never once seen the mods here so this sub doesn't get much love.,1539404302.0
HisAwesomeness,"We are a startup from Leipzig Germany looking to hire a dev. If there is someone form around there, don't hesitate to contact me.",1539427801.0
Bamboo_the_plant,"Up until now, I've been using [ptmt's fork](https://github.com/ptmt/react-native-macos) of React Native for macOS. It's the famous community-lead effort.

After [I discovered](https://www.reddit.com/r/reactnative/comments/962a4q/microsoft_are_quietly_merging_the_changes_made/) in August that Microsoft have open-sourced their own implementation of the same thing, I decided to see how they compared, by installing it into my existing react-native-macos app.

Unfortunately, I was met with a wall of metro bundler errors. Name an error you've ever had with metro, and I probably faced it.

After speaking with [Tom Underhill](https://github.com/tom-un), who published the key commit for Microsoft's react-native-macos effort, it became clear that global dependencies were screwing up my environment. So I uninstalled Facebook's `react-native-cli` and ptmt's `react-native-macos-cli`. I also had to add the following code into the `rn-cli.config.js` of the react-native-macos project (which I'm a bit worried about, as Tom didn't need it – but anyway):

    /* Prevents the node-haste DependencyGraph error:
     *   ""bundling failed: Error: Unrecognized platform: macos"" */
    getPlatforms(){
        return [""ios"", ""android"", ""macos""];
    },


I was thus able to get the RNTester app to run in a bare clone of react-native-macos.

My next challenge will be to integrate it into my existing React Native macOS app, LinguaBrowse (which has made it to the [App Store](https://itunes.apple.com/gb/app/linguabrowse/id1422884180?mt=12) and is even doing [quite well](https://www.reddit.com/r/reactnative/comments/9jsj6w/my_react_native_app_linguabrowse_reached_the/)!).

The exciting difference of this fork is that it makes deploying to iOS possible. In ptmt's fork, iOS is wholly replaced by macOS, and so it would require some real expertise (and I suspect it would be very messy) to get both to build. Though it is admittedly possible, and people have tried it from time-to-time.

So why wait for Marzipan? macOS is here for RN now! :)",1539365841.0
too_much_exceptions,"Hi,
Can you explain what this fork offers ?

Is is somehow related to ReactXP ?",1539376929.0
Dested,"The biggest chore so far has been react native updating or xcode updating. If you can mitigate those for as long as possible, it is a stable process with no real surprises",1539361746.0
spencercarli,"- Keep your stuff (relatively) up to date but don't obsess over it
- Document things! Keep notes on how you build the app, any ""tricks"", etc. Don't expect yourself to remember them
- Release in smaller batches. Users don't like drastic, sudden change
- Don't worry about optimizing things until they're actually a challenge (your build system doesn't have to be automated - just do it by hand)",1539372177.0
ahartzog,"Will it not be under active development going forward? Just sitting there? If so, you shouldn't really need to do much until there's some sort of breaking change in an API, yeah?",1539357862.0
kbcool,"When the app is in the background it's exactly that....in the background. Which on Windows or Mac or Linux this can mean running still but on a phone it is essentially killed off (this isn't technically correct but it will do for demonstration purposes).

So anything that happens on the server won't be reflected in the app whilst it is backgrounded.

When you resume your app you are quite likely restarting it and it's loading the data again from the server.

I don't know the appstate API personally but I would hazard a bet that the difference in behaviour is the different way apps are backgrounded across iOS and Android and it probably doesn't know that it has been resumed. I would be looking at the appstate documentation for the answer.

Hope that helps point you in the right direction.
",1539405240.0
demoran,"Your screens are an artifact of `React Navigation`.  Think about [creating a service](https://reactnavigation.org/docs/en/navigating-without-navigation-prop.html) and using that instead.

It's super weird you're using that `pug` template string and not JSX.",1539338374.0
AGonzov,Thank you man! ,1539367044.0
spencercarli,I don't know that it's the best but a list (full disclosure: I run it) for React Native jobs is workreactnative.com.,1539372854.0
redpopcornpanda,"Hi! That link didn't work, you need it to be like this: [https://www.linkedin.com/**in**/igorfrancobrum/](https://www.linkedin.com/in/igorfrancobrum/)",1539309678.0
Bellaamyy,We have an App which works and does not have any tests for React components. Can you give me couple of examples what the developers usually get wrong and you catch that using tests?,1539328111.0
ksmithbaylor,"Excited to see this! I recently started a React Native project, was hoping to use `react-testing-library` after reading a lot of good things about it, and was disappointed to see that it only worked with the DOM. Perfect timing! We'll definitely be giving this a try.",1539343966.0
oYYY,`react-test-renderer` is sufficient for everything. We have 90% test coverage over 200+ components. `react-native-testing-library` and `enzyme` are overkill.,1539294435.0
occz,"There is an argument to be made for having inline-defined functions in that they may be quite a bit more readable.

I'm interested in the actual performance implications of this kind of optimization - does anyone have a good case showing the impacts of doing this kind of people optimization?",1539282561.0
drowsap,"Just use the autobind syntax and you are good to go:

    foo = () => {
      return 'bar';
    }",1539313327.0
redpopcornpanda,"If there's not an existing component, then a component that bridges their native functionality to JS is the way to go. I would have suggested just using a web API, but it appears they don't have that.",1539310129.0
cmcaboy,Is this something you could do with Passport.js?,1539699525.0
redpopcornpanda,Try getting rid of the zIndex -1 on the second image. It might also help to specify width & height.,1539275534.0
,[deleted],1539267305.0
biz_signity,"Nice post!! React native has gained so much popularity due to its simplicity, flexibility and the use of javascript. Every app developer now prefers react native for developing native and hybrid apps. It is considered as the future of mobile app development. ",1539755055.0
microhive,"Nowhere does it say thst you need to display the license to your users per say. You just need to ensure that the licenses arw accompanied with your source code.


https://opensource.stackexchange.com/questions/5828/where-would-i-give-credit-to-an-mit-licensed-project-in-an-ios-app",1539285291.0
davidpaulsson,"Since RN is MIT license you need to include a copy of the MIT License terms and the copyright notice somewhere in you app. This is also the case for any other open-source libs you use. 

Example: see how Instagram does it. You can find it in the app settings.

You can check out https://tldrlegal.com/ for what applies to the libs you use and their licenses. 

Edit: spelling is hard. 
Edit2: add tldrlegal link. ",1539267610.0
xlorg,"Scroll to should do the trick, this component inherits the props from ScrollView, so you should use
http://facebook.github.io/react-native/docs/scrollview#scrollto",1539244842.0
jenkynolasco11,Have you tried changing the index value?,1539260701.0
notseanbean,"Just had a look at the internals and this *may* work. Completely untested.

    <ReactNativeSwiper ref={swiper => {this.swiper=swiper}} {...swiperProps} />  
    
    ...
    
    scrollToIndex = index => {
      if (this.swiper && this.swiper.scrollView) {
        if (Platform.OS === 'android') {
          this.swiper.scrollView.setPage(index);
        } else {
          this.swiper.scrollView.scrollTo({x: this.swiper.state.width * index});
        }
      }
    };

Like I say, this is a bit of a punt (and a bit brittle as the underlying `scrollView` ref and `state.width` are not part of the public API of the component)",1539264832.0
agmcleod,"I've found jest + enzyme to be the best combo really. Not much different than testing react on the web. Only thing is you can't use mounted renders. If you need to test the full render for some reason, use react-test-renderer.",1539228772.0
fallkr,"I’d say jest and enzyme for unit testing components, utils and redux. Detox for E2E. 

We’ve been running this for a long time in prod and it has saved us so much issues. Combine it with a proper CI/CD pipeline and you’re set to build and deliver with confidence. ",1539287291.0
ramzez_uk,You may want say what platform ? Android or iOS. Are there any output of errors in logcat for android or console for iOS?,1539209961.0
randomfrantickoala,Referenced the answer from here: [https://stackoverflow.com/a/48139065/9201615](https://stackoverflow.com/a/48139065/9201615),1539221172.0
alacret,Yes. We did it with a web view ,1539201684.0
edoantonioco,I tried to use fetch. Turns out xmlhttprequest is easier,1539277235.0
wcandillon,Mine are there: [https://github.com/wcandillon/react-native-eslint-rules](https://github.com/wcandillon/react-native-eslint-rules),1539197711.0
NaveNocab,"I believe this is the one that comes with CRNA or Expo https://github.com/expo/eslint-config-universe
Here is one that I use when I want to be fairly strict in a react-native-web / Expo project: https://github.com/EvanBacon/Expo-Pillar-Valley/blob/master/client/.eslintrc.json
",1539206307.0
cmcaboy,I've been using Airbnb. What rules do you like with rallycoding?,1539475785.0
redpopcornpanda,"Do you mean that the name of your app is wrong or that you want the name shown in the push notifications to be different from the name of your app? I don't believe the latter is possible, as iOS provides the app name & picture",1539202550.0
scttmthsn,So you want to globalise investment opportunities but need an on-site dev?,1539194045.0
ahartzog,"Isn’t there an onChangeText event, and you could use that to manipulate whatever you like and set the value into state ",1539175954.0
NotYourMom132,"Do it manually. Onchangetext and process the number as you like.
You can divide the number by 100 for example.",1539177309.0
rodrigoelp,Have you upgraded recently your Xcode to version 10?,1539158317.0
surferchik,Can you provide your logs please?,1539164876.0
Manishalexin,"Try these two things,
cd node_modules/react-native/scripts ; ./ios-install-third-party.sh
cd node_modules/react-native/third-party/glog-0.3.5/ ; ./configure

Also you might have to relink ""libfishhook.a"". (Let me know if you need help with this)",1539199963.0
Snotneus98,Open the project in Xcode then in the top bar press file -> project settings and select legacy build system where new build system is selected. React native is not fully compatible with the new build system yet,1539165237.0
Mothafuka,"if you have upgraded you xcode to latest version then upgrade your react-native as well with ""react-native upgrade"" in your project folder.",1539172526.0
loaderchips,can u share the code.. hard to tell w/o it  for everyone i m sure,1539158794.0
bzzhuh,Sounds like something eslint may be able to help with,1539161441.0
MrEdinLaw,/r/forhire maybe? ,1539108424.0
AlienSoldier,Linkedin is awesome for that ,1539109500.0
deadcoder0904,https://remoteok.io/remote-react-native-jobs or https://reactnativejobs.io or https://www.workreactnative.com,1539146201.0
Jaymageck,"As someone who is actively working on a React Native project, I hope these jobs are dying in favour of alternatives. At least until we get into a place of more stability after the planned internal rewrite of React Native that Facebook is doing (See: [https://facebook.github.io/react-native/blog/2018/06/14/state-of-react-native-2018](https://facebook.github.io/react-native/blog/2018/06/14/state-of-react-native-2018)).

If you're doing cross platform and your app is reasonably complex and / or ejected, you're probably not going to have a good time. We just took weeks to iron out issues in updating from RN 0.55 to 0.57, most of which were test and build toolchain related.

&#x200B;

Unfortunately I've never worked on a pure native mobile app so I can't authoritatively say this, but it seems to me that having dedicated teams of people who know the native platform APIs inside-out and can debug issues with them directly is a healthier situation to be in than a team of people trying to deal with issues on both platforms through an unstable abstraction layer. Yes, Android and iOS are going to change every year too, but having 1 person whose job it is is to track the Android updates, and another whose job it is is to track the iOS updates, is more sensible imo than trying to have one person to track RN updates AND the native platform updates when the RN API is inevitably not enough. (I'm not alone, but im using this example as the proposed benefit for businesses is hiring less developers)",1539128467.0
liquid_penguins,Are you in the Bay Area?,1539122032.0
ladytagumpay,I started to develop React Native Apps 7 months ago. Please PM me. Thank You. ,1539122133.0
notjonathanfrakes,"angel.co isn't bad for tech/startups. I can't think of anything RN specific. And I don't know what's you're looking to spend (time/money). 

Source: I used to do marketing for a tech recruitment firm.",1539138148.0
kealbocross,"We are currently looking for a React Native developer. I was going to post a job requirement on Linkedin. We are currently building a fitness app and we are based in Mumbai, India. If you are interested let me know. ",1539156747.0
fallkr,"We’re looking at RN and RJS devs onsite in London. Senior / tech lead position. Great team and product. Not your usual crud app, but hard to solve problems at large scale. Pm for details. ",1539202857.0
_ferz,"My friend works at a startup and they do React Native sometimes, but they are not strictly React Native shop. They do Rails, Laravel, Phoenix/Elixir, etc. So basically they don't focus on one particular technology, and if I had to guess, most places don't hire for *strictly* React Native jobs. Basically you have to bring something else to the table, working with one technology/stack is not enough.",1539110076.0
NaveNocab,"Maybe this will help https://objectpartners.com/2016/09/08/migrating-from-cordova-to-react-native/ 

Cordova is a pretty dated system with serious performance drawbacks. I used to make Ionic apps full-time and the amount of lock-in is just too ridiculous. Resolving the limitations would have involved forking webkit. 
Even the Ionic syntax and structure has become increasingly similar to React Native to stay relevant. ",1539197846.0
thisisafullsentence,"Expo pros:

* Makes it easy to share apps for development without going through the app store
* Comes pre-bundled with many native bridges (file system, camera, notifications, etc.)
* Mitigates version update breaking (or so I've heard)

Expo cons:

* Lacks compatibility with obscure native APIs
* Ejecting will require you to rewire anything previously tied to Expo

So to make your decision is _very easy_. You just have to answer 2 questions:

1. Does Expo have an existing QR and bar code scanner bridge? ([Yes for the scanner, with limitations](https://docs.expo.io/versions/latest/sdk/bar-code-scanner), and [maybe for the QR code](https://www.npmjs.com/package/react-native-qrcode))
2. Can you possibly foresee using anything outside of [Expo's supported SDKs](https://docs.expo.io/versions/v30.0.0/sdk/) in the future, including the limitations of its barcode scanner, and/or are you willing to put the time into rewiring the app if your needs do exceed these boundaries? ",1539105349.0
Delphicon,"When working with React Native you have JavaScript, Android, and iOS. Expo allows you trade control over the Android and iOS parts for simplicity and convenience. That means the only third party native modules you can use are the ones that Expo comes bundled with. It comes down to, do you need more from native than Expo provides? If the answer is yes then you can't use Expo, there is no middle ground.",1539360523.0
danielkov,"1. React Native development is already a lot faster than native, so I guess a thing that would speed up development for me, is a generic emulator that lets me preview my app on an array of supported devices in a VM, like Android Device Manager or XCode Simulator, but in sync and with more platform support.

2. I for one would be interested in testing a product (though you didn't really give much as to what it actually is). I have an upcoming large scale project where I get to pick whatever technologies I want alongside React Native, so I guess I could give it a shot there.",1539099278.0
kbcool,If you're going to use AI it needs it's own ICO as well 😜,1539135056.0
dubielzyk,"VSCode. Airbnb linting. Prettier plugin. No boilerplate. No debugger.

Disclaimer: I’m a designer who dabble with code",1539082334.0
alien3d,"Text Editor : Visual Studio Code

Extension : React Native maybe ? 

Best Debugger : Reactotron,android studio,xcode . 

Boilerplate : non .. 

Testing  Framework :  ? Not sure all this new thing .. Base on requirement . ",1539085797.0
yonnyy,"Webstorm as IDE which can also be used for debugging of course. 
And i run the app with the standard emulators (ios).

I use TypeScript so the linter is tslint and for state-framework i use mobx.",1539091731.0
xxxmralbinoxxx,"Editor: VSCode

Extensions: Vim, ReactNative/React/Redux snippets, Auto Close Tag, snapshot-tools, Prettier

Testing Environment is going to differ widely, but I prefer using Jest and Enzyme

Type Checking(optional): Flow or PropTypes

&#x200B;

Edit: Bit of a tangent here but I wanted to mention it. A few of us have recommended using Prettier and also using AirBnB's eslint config. This is great, but chances are, your `.eslintrc` will change quite a bit. Some of the rules aren't the greatest. If you don't want to worry about constantly updating your eslint rules, use Standard in place of the AirBnB config. It's opinionated and you don't have to worry about making changes to the rules, as you can't.  To use Standard with prettier will be difficult though, because Prettier's formatting rules will conflict with Standard rules. I was able to use a VSCode package called prettier-standard and get past it. YMMV. You could probably get by using just Standard but Prettier is nice once you use it.",1539091955.0
davidpaulsson,"I use
Text editor: vscode
Extensions: I dunno, lots of aliases for building/deploying/clearing metro cache etc in my .zshconfig lol
Debugger: reactatron
Linter: eslint for listing, prettier for formatting
Test framework: jest for unit tests, detox for e2e tests 

App I'm building: https://heja.io/",1539097955.0
xrpinsider,My best text editor would be Gedit. My best IDE would be Webstorm. ,1539076232.0
xrpinsider,Why won’t you save it in a SQL lite database? Its fast and doesn’t use a lot of storage.,1539076307.0
agmcleod,"Don't know for sure, but I think it's coincidence. CRA uses webpack, ReactNative does not. It uses its own bundler/packager for bundling the JS.",1539089305.0
danielkov,"I switched from CRNA in favour of Expo a while back, so I no longer keep track of their releases, but big companies like Google and (presumably also) Facebook are steering towards a direction, where they keep related projects that have a common dependency (React in this case) at a same semver version to indicate cross-compatibilty, e.g.: I have a CRA2 and a CRNA2 application, I can be sure that the React-specific code is cross-compatible, as long as the generators that they were bootstrapped with are the same version.",1539089505.0
xrpinsider,Great work.,1539072004.0
Lybra91,"Very nice, thank you for your wok and contribution :)",1539073624.0
smashway,have a github star!,1539104715.0
Kmantheoriginal,"You should edit this to describe your use case and what youre expecting to happen. 

My wild stab in the dark https://cloud.google.com/vision/",1539041241.0
foulplay2,"I'm using Amazon's Rekognition API in my app: [https://github.com/aws-amplify/amplify-js/tree/master/packages/aws-amplify-react-native](https://github.com/aws-amplify/amplify-js/tree/master/packages/aws-amplify-react-native)

spez: Here is a guide to get you started: [https://medium.com/@glen.bray/text-detection-with-mobile-camera-using-react-native-and-aws-rekognition-7826b3e2aeef](https://medium.com/@glen.bray/text-detection-with-mobile-camera-using-react-native-and-aws-rekognition-7826b3e2aeef)",1539041294.0
tnicholson,"We use RNCamera to send a picture to the Google Vision API for Card Transcription and it works very well, plus it didn’t take much time to get up and running at all.",1539093128.0
Filo01,"ohh this is nice :), how did you find the prices of the different stores? did you scrape them? ",1539058375.0
Moderately_Opposed,Are you using a theme for your landing page? Looks great. ,1539062846.0
tombraideratp,Could you share code of basic mvp,1539528664.0
theo_readsit,absolutely use react-native-maps; follow all the instructions and there are great examples for styling maps --- I've done some of what you're trying - not so much shading the map but altered the markers for specific locations --- that library has a great API and pretty easy/user friendly,1539043681.0
prabakarviji,Have you tried this plugin https://github.com/react-community/react-native-maps ?,1539020214.0
su_goku,"My problem resolved... just used another library. Thanks, nevertheless!",1539039456.0
thesahilpatel,Bookmarked. Thank You for this list.,1539062058.0
,"This shit is whack. Go use your hand for something else, you will be more productive. ",1539049923.0
xrpinsider,"I love the fact that (almost) all libraries for React Native UI components include a screen recording in the readme.md. 

That being said: great animation! I may use it in one of my projects. ",1539010172.0
swiftpolar,Pretty much the same if you're talking purely from a coding perspective.,1539020580.0
saugoof,"Key features of Atom ""Find and replace"" - yeh, that's the standout feature...

&#x200B;",1539000531.0
godhatesmetoo,They complete miss out [nativescript](https://www.nativescript.org/).,1538996358.0
AradyaS,"Repeated I think, no worries it is useful as always.",1539777029.0
,[deleted],1539050078.0
cloudprogrammer,Webstorm,1538990896.0
mirkan1,Lol,1538987412.0
redpopcornpanda,"If you Google ""react native firebase expo"" and there is a page from expo talking about how to use the web package. The ideal case for firebase with react native is by using react native firebase. It's the best way to use firebase in react native, since it implements basically the entire native firebase SDK. Though you can use firebase's web package in rn, it really doesn't offer as much. But it'll work if you are ok with the tradeoffs. You'll have to eject to use react native firebase, but there is a feature request for adding it to expo here: https://expo.canny.io/feature-requests/p/adding-react-native-firebase-to-expo: ",1539044430.0
Omnisovereign,"If you use Expo you can only use Firebase web API.

I recently had to eject my Expo React Native project to use Firebase Native API, as I wanted to use Firebase Social Authentication and Analytics.",1538993410.0
slk14k,"It doesn't matter if you're using react native or expo, firebase don't care. Also you're going to use the web API, it's pretty straightforward to setup. 

If you're talking about auth and database services you can take a look at tutorial I just published, it's for react.js but you can basically just copy paste the functions to your app and it will work https://usfslk.github.io/lumen.html",1538986264.0
kbcool,"You can store privately as much as you want. Given there is enough space. 

Go ahead and try it out. Maybe what you heard about limitations is around Android and Async storage. Doesn't impact images and video.",1538994187.0
slk14k,In app webviews are most time a better solution,1538939162.0
clarle,"Probably `react-native-fabric`, which includes Crashlytics under the hood:

https://medium.com/@touzi.farouk/apps-violates-the-android-advertising-id-policy-891a4701b023

Check to see what version of the Crashlytics SDK you're bundling up with it. ",1538906204.0
,What are you retrieving with react-native-device-info?,1538904105.0
NaveNocab,"Take a look at Expo.AuthSession. It can do what you want <3 https://docs.expo.io/versions/v30.0.0/sdk/auth-session
Here is an example of AuthSession + Github + Firebase https://snack.expo.io/@bacon/github",1539204486.0
chiaberry,Which package did you end up choosing? ,1543949980.0
TheFutureIsNear,Curious how the upwork guy ended up fixing the issue. Was it a native fix on Android or just some JavaScript configuration he did?,1538841684.0
pizzafapper,"Better than that Udemy course is Harvard's CS50's course on React Native. It's free on EdX, videos are available on youtube. It goes from basics and indepth of javascript, to react native, and teaches you every aspect of it - along with Redux. Very high quality course.",1538935298.0
kiwami,"""So I paid a guy $100 on upwork, and he fixed it in about 2 hours.""

This cannot be understated bro...  I learned this 5 years ago.. I remember the exact moment.. This has made me a so much more money and saved so much time.  ",1538838585.0
7hundredand77,Where did you get freelancing contacts/people from?,1538837627.0
zevzev,After finishing working with react native would you go the hybrid route again?  I guess it’s hard to learn both native languages for iOS and Android assuming you can pick them up easily.,1538853544.0
7hundredand77,I would also checkout egghead.io they have great courses and you get access to everything going through them.,1538837580.0
reasons_voice,"Very cool input. I can relate, especially to the part about getting stuck on a native aspect of it. May I ask through what medium you found a valid freelancer?",1538917185.0
loaderchips,"using codepush may be create a dismissable view which is active, has the notification and release it... ",1538885695.0
antigirl,"So unless you’re actually using over the air updates it’s not really possible. Apple will notify user update is available in the store or it will auto update but not in the app. 

Expo does over the air updates out of the box. It also exposes an api which you can use to notify your user about an update 

Alternatively you can store app version on your server and have your app check it against local version on launch ",1538922772.0
S3rg1usz,"At first I was having troubles even launching the app, errors were appearing while building, managed to overcome this issues by doing the following:

In Xcode press File - > Workspace Settings - > Build System - > Legacy Build System. And in the project settings there's a Project Document sub tab where you can choose Project Format to be Xcode 9.3 compatible.

Also stumbled upon some compilations issues which were related to third-party components from React-Native simply fixed it by doing next things:

cd node_modules/react-native/scripts && ./ios-install-third-party.sh && cd ../../../

cd node_modules/react-native/third-party/glog-0.3.5/ && ../../scripts/ios-configure-glog.sh && cd ../../../../

These solutions are workarounds and must be fixed in the next releases",1538812496.0
azterix,I ran through it on a project on 0.56. I had issues building until I removed the \~/.rncache folder and cleared out and rebuilt node\_modules. Has worked perfectly since.,1538826740.0
nijolas-wilson,"Yes, I've done it. Had to re-associate libfishhook.a in RCTWebSocket and run the glog config script in the react native package by hand. If your error is about ""C compiler doesn't work"" it's glog ",1538812366.0
jphorta,"I’ve had issues in all projects but I was able to fix them pretty quick. Given that this is affecting a lot of people, there are always answers for the issues that appeared.",1538829739.0
nashturing,https://github.com/facebook/react-native/issues/19573,1538832790.0
ramzez_uk,Just installed xcode 9.4.1 on the same machine not to waste time with fixing Xcode 10 everytime. Can choose which one to use depending on the project ,1538849857.0
ramzez_uk,For iOS you need to specify bundle if. Like com.mycompany.myappname for Android it tells you that you don’t have adb installed. You need to install android studio and make sure to export path to the binaries. You can read it on the android site. ,1538781064.0
ramzez_uk,I would suggest checking out Expo to begin with it would greatly simplify things for you first time. ,1538781109.0
itsboilingoil,"Try running this first

`rm -rf $TMPDIR/react-*; rm -rf $TMPDIR/haste-*; rm -rf $TMPDIR/metro-*; watchman watch-del-all`

then start the bundler manually:

`react-native start`",1538831567.0
ILoveSwift,"This package looks like it has some good promise! 

[react-native-swipeable-row](https://www.npmjs.com/package/react-native-swipeable-row) ",1538756123.0
andaskus,Check out https://github.com/wix/react-native-interactable,1538763155.0
brentvatne,"the best solution for this is either to write a native component yourself or use react-native-gesture-handler: [https://github.com/kmagiera/react-native-gesture-handler](https://github.com/kmagiera/react-native-gesture-handler)

&#x200B;

it has primitives built into it so you can create this yourself and it also provides an implementation of both ios and android style swipeable rows. run the example app to see - [https://github.com/kmagiera/react-native-gesture-handler/tree/master/Example](https://github.com/kmagiera/react-native-gesture-handler/tree/master/Example).

&#x200B;

this solution is better because the gesture is implemented by native gesture recognizers and ties in to animated native driver, so it's done on the ui thread. additionally you are better able to handle interactions between a scroll gesture and swipe gesture.

&#x200B;

swipeable-row/swipeout both use panresponder so they will drop frames and require locking the scrollview they are in when they become responder. interactable is an unmaintained experimental library that can (and has) been implemented entirely on top of react-native-gesture-handler and react-native-reanimated ([https://twitter.com/kzzzf/status/1043152158785499141](https://twitter.com/kzzzf/status/1043152158785499141))",1538763453.0
91psyko,"hey guys! sorry on the phone right now.
i was wondering what do you guys use in your apps for swipe to delete action. so far i’ve found react-native-swipeout but for some reason it’s so laggy and gets even worse when swiping left and right multiple times. would love to hear from you hot boys and girls!
thank you in advance ",1538753666.0
AddMeOnReddit,"I have had a lot of success with this library: https://github.com/dancormier/react-native-swipeout

Very easy to use!",1538760403.0
cmcaboy,"If you can't find a library, you could do a custom implementation with PanResponder and Animated/Reanimated.",1538761554.0
canadianindividual,"Off topic, but it’s very scary how much your email looks like mine. I think we’re subscribed to all the same things...",1538764629.0
jacobp100,"There's an undocumented swipeable list in RN itself, there's the tests here https://github.com/facebook/react-native/blob/b8cb8d50a5e0bea9ceaade49b97806998c84cdbe/RNTester/js/SwipeableFlatListExample.js",1538829327.0
kbcool,"Set overflow visible explicitly (although it should be visible by default). If that doesn't work you will need to absolute position.

Im guessing it's working properly on iOS but not Android ? Overflow behaviour was different and I don't think they have ""fixed"" that. You may need something like this if you're really allergic to absolute positioning - https://medium.com/entria/solving-view-overflow-in-android-reactnative-f961752a75cd",1538781832.0
sourtargets,To complete this design you'll also probably need [react-native-blur](https://github.com/react-native-community/react-native-blur) ,1538749106.0
DanmCanIJustComment,"Without doing extensive research, seems like a possible solution would be to have pass a custom tab-bar component using the options below? Might be an overkill for just for a custom button but I don't think a feature like this is supported out of the box.

    {
      tabBarComponent: TabBarBottom,
      tabBarPosition: ""bottom"",
    }

https://hackernoon.com/how-to-use-a-custom-header-and-custom-bottom-tab-bar-for-react-native-with-react-navigation-969a5d3cabb1",1538745394.0
simplicius_,Is it possible to put a center button in tab bar as the button appears in the image above using React-Navigation?,1538744199.0
PaulLaux,AWS Amplify looks truly powerful in abstracting AWS complexity.,1538713126.0
AddMeOnReddit,"Welcome to React Native!

The issue with your initial code is that you are binding the function there, not necessarily calling it. 

Try out this:

    renderImage(item) {
       console.log(item)
       return
        (<Image source={images[item.key]}
        key={item.key}
         style={styles.item}
    />);
    }
    // or...
    renderImage = item => <Image source={images[item.key]} key={item.key} style={styles.item} />

    render() {
       return (
         <View style = {styles.container}>
           <FlatList
                numColumns={5}
                data={this.getCoinNames()}
                renderItem={({item}) => this.renderImage(item)}
             />
        </View>
    );
    }

You do not need to wrap the item in {} in the `renderImage` function, since it is grabbing it in FlatList's renderItem function. all you need to do is to pass it to the function!
    
You also don't need to worry about binding functions in React, since it implicitly binds `this` in React Classes. It is a different story if you are just using a bare bones ES6 class. A good explanation can be found here -> https://medium.freecodecamp.org/react-binding-patterns-5-approaches-for-handling-this-92c651b5af56

Best of luck. Feel free to DM if you have any other questions.


",1538682915.0
iddan,"Hey, `react-native-canvas` author here. Currently the component doesn't support getImageData() but there is an open issue for this: [https://github.com/iddan/react-native-canvas/issues/41](https://github.com/iddan/react-native-canvas/issues/41) and a work-in-progress Pull Request: [https://github.com/iddan/react-native-canvas/pull/49](https://github.com/iddan/react-native-canvas/pull/49) if anyone wants to give a hand. Sorry for the inconvenience and hope we'll have a solution soon.",1542575701.0
wengemurphy,"This is a security feature to isolate the script from information it shouldn't have access to. You will have to serve the image to yourself from your own domain:

https://stackoverflow.com/questions/23239967/get-pixels-color-from-an-html-image-serving-from-external-url

https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image",1538657017.0
NaveNocab,"Here is an Expo approach! 😄 https://snack.expo.io/@bacon/raw-pixel-data
This uses pixi.js to read image data and return a pixel, you can take a snapshot of a view and read the image data this way as well. ",1539204759.0
cloudprogrammer,"Inline styles can operate on your state and stuff, at the end of the day the styles is just another json object. So you can pass this: style={{ color: this.state.pressed ? #fff' : '#000'  }} as a prop to your button. ",1538643612.0
oYYY,"I would recommend StyleSheet.create({}). It's more performant. https://facebook.github.io/react-native/docs/stylesheet
 
    Performance:

    Making a stylesheet from a style object makes it possible to refer to it by ID instead of creating a new style object every time.
    It also allows to send the style only once through the bridge. All subsequent uses are going to refer an id (not implemented yet).


For example:

    const styles = value =>
      StyleSheet.create({
        container: {
          flex: 1,
          padding: value
        }
      });

    <View style={styles(20).container}>

    </View>",1538714055.0
AddMeOnReddit,"Are you using TS in the project? If you have TS installed in VSCode it should only lint on `.ts` files. I use VSCode with RN and it behaves just fine, and also have TypeScript installed for my TypeScript projects (not all of them are, however). ",1538683451.0
PistolPlay,"You don't have to use the React Context API if you don't have a use for it. So using version 16.2 to avoid it doesnt make much sense. Versioningly matters if you have some dependency with a certain library you want to use. And that only works with a specific React version etc.

Generally you want to stay on top being up to do with React versions so it's not as big of a pain when there's a major version release.

I would recommend you stick with the defaults that is react-native-init provided. Maybe even switch over to create-react-native-app if you don't anticipate any platforms specific components. That way you get EXPO support that I've found really speeds up development. Especially when your new with React-native.",1538626927.0
TheMoonMaster,"I'm a little sad this article doesn't mention testing. The huge benefit of `mapDispatchToProps` in my mind is that it lets you easily inject fakes without having to mock/stub imports. It also lets you avoid passing in a fake `dispatch` prop or worse, an entire fake store around it. For context, the strategy would be to default export your component `connect`ed and also export the presentational component. eg: `export class Foo` then `export default connect(mapStateToProps, mapDispatchToProps)(Foo)`.

That being said the articles conclusion is great. Passing an object is the way to go imo.",1538601749.0
drowsap,Awesome work!,1538624228.0
HijoDelQuijote,"Man, I totally remember you (or someone who pasted your job before. The way you explain things is just too good, please keep up,",1538639576.0
dontforgetpassword,"Hey Reddit!

I have been building this app for a few weeks now,  I daily read hacker news and found no app that encompassed every feature I was looking for. Here is a small list of things it can do:

•	⁠login to fave, reply, post, upvote, delete, hide stories
•	⁠collapse comments (and remember that they are collapsed!)
•	⁠dark mode (looks amazing on the X series phones)
•	⁠iPad support
•	⁠real-time data, all the posts and comments update in real-time. The feeds do not, you pull to refresh them, aside from the new feed, which is real-time.
•	⁠skipper on comment details, makes it easy to jump through threads
•	⁠search, search for stories, comments, or users
•	⁠explore user profiles and stories they’ve submitted or favorited.
•	⁠and much more to come

Feel free to AMA.

Note; this is a beta invite link, feedback is welcome!",1538584511.0
gmabber,"Hey nice app! Can you tell more about libs you used, how you handled state etc. I’m all for good practices in making react native apps. Also, have you tested on android? Any issues there?",1538827335.0
AddMeOnReddit,"Here are my respective gitignores for Android and iOS:

    # Xcode
    #
    build/
    *.pbxuser
    !default.pbxuser
    *.mode1v3
    !default.mode1v3
    *.mode2v3
    !default.mode2v3
    *.perspectivev3
    !default.perspectivev3
    xcuserdata
    *.xccheckout
    *.moved-aside
    DerivedData
    *.hmap
    *.ipa
    *.xcuserstate
    project.xcworkspace
    Pods/
    
    
    # Android/IJ
    #
    *.iml
    .idea
    .gradle
    local.properties    ",1538578301.0
kbcool,Official one works wonders: https://github.com/facebook/react-native/blob/master/.gitignore,1538602212.0
ahartzog,My implementation would be to build a landing screen that tells people to go download the slack app 😂,1538569940.0
reakan,Look into Node-Red! You could run a backend server with it and have a push http request tell it to send a message using the slack api!,1538777212.0
creambyemute,"Make sure that your flatlist is not rerendering when scrolling.

Make sure your divider/separator is not rerendering more times than expected.

Make sure that your ListItems aren't rerendering when scrolling.

Make sure your components/sfcs you use in the listItem aren't rerendering when scrolling.

Try FastImage as Image component.

I had 150 items in my flatlist and when scrolling all the ListItems were rerendering all the time, resulting in 1500-1600 ListItem renders when reaching the end of the list. It was slow.
After fixing all of the above my list is smooth/fast now.

Try removeClippedSubviews true on android.

Try to turn off dev mode either by react-native bundle build with --dev false flag or by shaking the device --> dev settings --> untick dev mode.

The settings like initialNumToRender etc are to further polish the performance, so if your list isn't performing well those won't change a whole lot.


Edit: Maybe describe how your listitem is built. ",1538580767.0
janithaR,Care to share a repo?,1538566870.0
Bliany,"I'd say this could be better described as ""How to implement react-native-popup-menu"".  That's fine, but I was expecting to learn how to code the component from scratch. 

react-native-material-dropdown is another good library for drop-down menus.",1538546102.0
,[deleted],1538566927.0
cmcaboy,"Expo claims that when you eject to Expokit, you will be able to build/integrate native modules while still being able to use the expo SDK. I would think that you would get both the ios and android folder. If you don't its probably a bug. Personally, when I ejected, I just went to pure react native so I don't have experience with expokit.",1538580649.0
fragglerock,"It is of some slight interest that a commercial product is built using react native, but this post just seems like advertising the service not designed to produce any discussion about the development process or showing any code that may help other react native developers.

If I was a mod I would remove the post as simply advertising.",1538485057.0
alien3d,Nice .. but please just downvote it because it something like advertising .Think as AMA.. maybe other can learn their experience. ,1538554092.0
kbcool,Do a google search OP! Totally possible.,1538473709.0
maphongba008,"Have you tried this [https://github.com/veizz/react-native-picker-scrollview](https://github.com/veizz/react-native-picker-scrollview)? I found there's renderItem prop, so you can customize it",1538548925.0
brascene,Go Native :D,1538471301.0
kbcool,"There's various ad sdks that can be used to show ads and in app purchase is supported cross platform. There are a  few choices there.

Google ""IAP react native"" and ""react native <preferred ad platform here>"" for your options.

Pro tip: on stack overflow anything slightly vague you'll get incinerated. Here you're more likely to get ignored but I'll jump in occasionally to tell you to give more details. In your case I think you're just asking if possible and answer is yes.",1538474355.0
thisisafullsentence,"95% of that would just be basic View, Text, and Image elements. You might want to consider something like [react-native-range-slider](https://www.npmjs.com/package/react-native-range-slider) for the sliders, or 2 Slider elements if you need to support Android. What have you tried?",1538422550.0
kirisafar,Most of it could be done with [https://github.com/FaridSafi/react-native-gifted-chat](https://github.com/FaridSafi/react-native-gifted-chat),1538452251.0
kbcool,"Done this before with Amazon lex. Easy.

BTW no such thing as magic component library you install to do everything for you. Programming still requires work. As another poster mentioned building blocks are all there for it.",1538473863.0
stuuuuupidstupid,"Sounds like you want the tab nav to remain even if you navigate to tab items? In that case you want tab nav to be your root nav.

You can format code btw. https://www.reddit.com/comments/6ewgt/reddit_markdown_primer_or_how_do_you_do_all_that",1538422339.0
fragglerock,"I think that the pre-built things can just add another thing to learn if you have not felt the issues the frameworks tries to overcome, and so you end up learning two things at once with no clear reason why things are done a certain way.

I find this one a better template, and it is all a lot more lightweight.
https://thecodingmachine.io/introducing-the-react-native-boilerplate",1538422886.0
AddMeOnReddit,"Yes, use it all the time. Love it. Infinite Red is tight. ",1538421168.0
zhulf_drekker,"Yes, and I highly regret using it.

I think you'd have to try really hard to squeeze any value out of it, and good luck bringing others onto the project cause they're gonna wonder why everything is so backwards and overly complex.",1538461282.0
Arln-,"Ignite Boilerplate comes with a lot of code. For sure it's an awesome work, but maybe oversized for a lot of RN projects.
That's why https://thecodingmachine.io/introducing-the-react-native-boilerplate should do the job",1538598522.0
tuxedotomson,I use my own boilerplate.  ,1538664376.0
PhantomMenaceWasOK,"https://github.com/facebook/react-native/issues/10232

According to: https://github.com/facebook/react-native/issues/10232#issuecomment-286743459

Android doesn't support having Views inside a <Text/>.",1538391997.0
nickmcsnapz,"End your Text tag before starting the TouchableHighlight. 

Even though your way works in iOS, it doesn't make sense, a Text element should only contain text. ",1538403001.0
miked4j,You could move the TouchableHighlight into the outer View and position using styles.,1538391907.0
nickmcsnapz,"End your Text tag before starting the TouchableHighlight. 

Even though your way works in iOS, it doesn't make sense, a Text element should only contain text. ",1538403011.0
nhutier,You should update the mobile version of this blog post. Unless you visit the git hub repo you are not able to see what the whole copilot thing is about. Otherwise it is a bit out of nowhere ;),1538413924.0
redqinc,"## Step-by-step walkthrough for your react native app

## Installation",1538386772.0
ramzez_uk,After the login the user is already in authentication table and have access to your firebase. So the question now really is how you want to structure your data. One thing you can do is simple create a table where you would UID of the user from authentication in hour firebase. You need to read up on this a bit. And check some tutorials. ,1538342700.0
contrarianism,I boost my expo by not using it,1538374039.0
anewidentity,Are you experiencing performance issues? Where is it happening? ,1538310748.0
some_coreano,At least show us metrics that prove that your app is indeed slow...,1538328912.0
thawab,"Use the profiler[0]. it will show you which components are taking the longest time. Here is a deep dive video for how to use it[1]. 
If you are using react navigation, the latest version of expo sdk introduced react-native-screens[2]. I haven't used it yet but a lot of friends are recommending it. 
 

[0] https://twitter.com/brian_d_vaughn/status/1042814633764040709

[1] https://www.youtube.com/watch?v=nySib7ipZdk

[2] https://github.com/kmagiera/react-native-screens",1538339051.0
sevenyearoldkid,"As far as post-load performance is concerned there’s really two things:

-	remove all the console calls that you can
-	make sure deep components aren’t unnecessarily rerendering (a quick way to check this in RN is just put a console.log in the render function, it’ll be called every time a component rerenders

As far as load time is concerned it’s probably better than you think. Do an actual build and test that, you’ll see the load time go down by like 98%",1538333688.0
heinzawhtet,!remindme 7 days,1538319698.0
Veranova,"The navigation prop gets passed directly from the navigator to any screens you've given it. If it's mounted directly as a screen then it should have this, but if it's wrapped in a HOC or another screen or container then you'll have to pass it through manually.

Probably the screen is not mounted directly but you haven't given enough source code to verify this.",1538300207.0
ridhwandaud,Can share the code? Need to bind the function ,1538297178.0
smashway,Nice! Will follow,1538307160.0
sinefine,Nice! What theme are you using in your screenshots?,1538250232.0
mikedemarais,incredibly impressive. everyone should download this to play with. possibly the best react native app ive ever seen,1538256433.0
antigirl,Runs smooth as butter. ,1538219712.0
FullMetal21337,Does this run at 182 FPS? ,1538233507.0
Jonovono,"Looks nice! What are you guys using for navigation? Also, any tips to have awesome animations like you got going on? Are you using any library or just raw RN?",1538358629.0
Bamboo_the_plant,"A reminder that RN can be used successfully to target desktop platforms; not just mobile. Move over, Electron! :)",1538183081.0
SizzlerWA,Care to write a blog post about how you wrote the app? 😀,1538189791.0
leugimthedev,Congrats! ,1538185806.0
SizzlerWA,Congrats!,1538189752.0
Moderately_Opposed,Any chance of releasing this on mobile? A big problem on phones is I cant just his the 'translate' button on chrome like I already can on desktop. Would love to try such a thing. ,1538192168.0
davidpaulsson,"I'm super curious how to build a desktop app with react-native and the benefits/disadvantages compared to electron. Does anyone have any good links/articles/repos to point me towards?

To OP: Congrats! It's definitely a big boost (and honor) to get featured by Apple in the app store 🤗",1538208464.0
aboscus,"That's wonderful man! My compliments.   


Going to download it!

&#x200B;",1538219903.0
tweettranscriberbot,"^The linked tweet was tweeted by [@LinguaBrowse](https://twitter.com/LinguaBrowse) on Sep 28, 2018 18:38:17 UTC (1 Retweets | 2 Favorites)

-------------------------------------------------

\#LinguaBrowse 👓🗺️ is on the front page of the \#macos \#AppStore for both the Education and Travel categories! 🤩🎉🥳🎊 What's more, it's ranked 3rd in All Travel Apps! Not bad for a \#ReactNative app!



I never even announced its release! Here's the link: [https://itunes.apple.com/us/app/linguabrowse/id1422884180](https://itunes.apple.com/us/app/linguabrowse/id1422884180) 

[Attached photo](https://pbs.twimg.com/media/DoM5MlZX0AAGvl7.png:orig) | [imgur Mirror](https://i.imgur.com/qKjwgJc.png)

-------------------------------------------------

^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1538182917.0
anewidentity,"It doesn't get used in production, it's only used locally (debug mode), so you don't have to ignore it in CI.

&#x200B;

We just have it checked into git, and on each dev's local machine it regenerates the url. We just ignore that file and don't commit it. Not sure what the best solution is. You can't gitignore it because the file needs to be there.  ",1538278917.0
ahartzog,"Pickers are a pain for sure. Mine are still ugly and mis-sized in our production application.

If there’s some sort of existing form library or UI framework that the developer is using then shoe-horning this on would be pretty tough. I’d push back too haha.

If it’s being done independently with a custom component then doing it as a modal that sets a value into the parent field might not be too obnoxious. All that finicky little styling would need to be done too though. Ugh yeah, tricky. ",1538101123.0
MusikSein23,Hey! I’m actually working on creating a component to do exactly what you detailed above. I’m using react-native-popover to render the popover and as a child of this my picker! [react-native-popover](https://github.com/jeanregisser/react-native-popover/blob/master/README.md) I‘m looking to post these components in the next couple of weeks as this was exactly something that I found difficult to implement in my latest app. Check out my github for activity and progress on this! [github/bonesyblue](https://github.com/bonesyblue) ,1538159235.0
JS_PY_and_Crypto,[https://react.semantic-ui.com/modules/modal/](https://react.semantic-ui.com/modules/modal/),1538162606.0
freakytiki34,"SOLUTION: Expo to the rescue everybody. Took a _little_ work to get it to play nice with Typescript, but I have it all figured out now.",1538076415.0
arvigeus,[https://github.com/benawad/fullstack-graphql-airbnb-clone/](https://github.com/benawad/fullstack-graphql-airbnb-clone/),1538139538.0
Veranova,"Hockeyapp, and testflight is pretty awful when you're running automated pipelines with something like Fastlane. It takes forever to publish a build. We're looking at moving iOS builds to hockeyapp too",1538082442.0
Arln-,"Currently using Fastlane for beta builds, following those steps : [https://github.com/thecodingmachine/react-native-boilerplate/blob/master/docs/beta%20builds.md](https://github.com/thecodingmachine/react-native-boilerplate/blob/master/docs/beta%20builds.md) for iOs and Android",1538122411.0
anewidentity,Hockeyapp and Play store's beta for stuff that don't work on Hockeyapp like inapp purchases ,1538485351.0
0root,Your folder name is 'MapAnything'?  Is your index.js file inside?,1538065656.0
superlameandawzm,What versjon of Xcode are you using? I’ve had some issues with the latest version where some scripts has to run manually. Following this got me up and running 🏃‍♂️ https://github.com/facebook/react-native/issues/20774,1538075131.0
ronforbes,"Great read! We’re using React Native to develop a live 60fps massively multiplayer game (through ThreeJS as a WebGL wrapper), and it’s worked surprisingly well. Even coming from Unity, we’ve been surprised how rapidly we’ve been able to go from concept to playable app running on iOS, Android and web. Thanks for the insights!",1538060558.0
Delphicon,"I'll probably make a full post on this at some point but using React Native in a ""brownfield"" app is a MUCH more painful experience than using it in a React Native only app. As somebody who works with React Native in that same kind of use case it's a fucking nightmare. While it's painful from a technical standpoint, the real issues are organizational. You can't get the native apps to meet you halfway and have to build complex and brittle workarounds ad hoc to get anything to work. Meanwhile, management and web developers are pushing out bad React Native code and forcing the mobile developers to fix it.

By comparison, working on a ""greenfield"" app is a pleasure. Third party libraries just work, you don't have to worry about race conditions, dependencies, differences in utilities between platforms, etc. I think this article perfectly sums up where React Native is at with the pros and cons that are related to the technology itself and not all the things people try and do with it. ",1538063049.0
Yesheddit,"Nice article, I certainly bookmarked some stuff you mentioned :) We just started a few months ago and obviously are still looking into the best practices. Articles like these help.",1538057132.0
ChronSyn,"As per that page, it says it’ll return jpeg;

> and type is one of image or video telling what kind of media has been chosen. Images can contain also base64 and exif keys. base64 is included if the base64 option was truthy, and is a string containing the JPEG data of the image in Base64--prepend that with 'data:image/jpeg;base64,' to get a data URI, which you can use as the source for an Image element for example.",1538066569.0
dogofpavlov,"I can't stand articles that say stuff like this as if it's fact ""there was no common technology that allowed to build a single app for both platforms: iOS and Android.""

I mean come on... Cordova, Adobe AIR, Xamarin and many more.",1538067870.0
congowarrior,sounds like this should belong to /r/programmingcirclejerk,1538053686.0
ChronSyn,"Shameless self promo of your project. You just said that the market is going to grow larger, yet even mentioning bootstrap is seen as a bad thing (because of the spate of templates sites that appeared in the 2012-2015 that used it exclusively.

What’s your actual opinion on react native, without putting product promotion into the discussion?",1538066792.0
chickenachos,no,1538058891.0
fulless,"You can simply store data on local storage which works by assigning key/values. After reading the stored object, loop trough the array and compare if actual loop data is equals or matches to the search query.",1538021407.0
aghhal,"Shouldn't matter, but generally you want to use the latest where possible. I.e. sdk levels 27 or 28 (i.e . android 8 or 9)",1538019553.0
Eunoia_R,"Great work! I sent you some questions via chat, if you ever happen to have some time to take a look.",1538084509.0
Eunoia_R,"I would love to know how you set up your app id's in apple developer portal. It run into problems with the fact that Info.plist states the bundle id should be equal to bundle identifier and suffix but when I am in Xcode, the bundle identifier is not always updated. I added 2 separate app id's in apple developer portal com.\*\*\*\*\*.dev and com.\*\*\*\*\*.staging but the combination of this with the bundle identifier setup in Xcode seems very fragile/unstable.

&#x200B;",1538135204.0
ramzez_uk,Chrome would work the same way exactly for all the JS things. ,1538002740.0
Tynzo,Awesome! Merci :),1537996578.0
nikke1234,Can't you simply set the background color of the Parent view to begin with? Otherwise I'm not sure what you're trying to accomplish.,1538001478.0
LongSleevedPants,"With asynchronous calls there’s always going to be a small delay until the request resolves. 

First I’d say make sure you’re setting the state using componentWillMount, which happens before render() and componentDidMount(). 

If there’s still a delay than maybe you can implement a loading screen which will take care of all of your initial api calls until the first screen is ready to load. 

Best of luck!",1538010767.0
Arln-,"As @LongSleevedPants said, I think you should use a splash screen to deal with your background color.

You can find an good example on this boilerplate using a simple navigation : https://github.com/thecodingmachine/react-native-boilerplate 
You need at least redux.

To summary, you start your app on a screen used as a splash screen (with the logo of your app, a waiting message or everything else you want), and make your API call inside this screen. 
You set in a redux state your background color when the API call is ended.
Then, you navigate to your main screen with the right backround color !

This behaviour is already set in the boilerplate and I encourage you to use it for a good start.

Hope this can help.
",1538033231.0
creambyemute,"Found a solution, though it's ugly in my opinion but was my last resort/idea:

Add a callback handler on the JS side for the native  onSelectionChange event which then disables/enables the PanResponder via a touchEnabled prop.

On native side:
* Immediately dispatch selection event 
* Delay deselection event propagation by ~100-150ms to prevent drawing a point when the shape is deselected by tapping on the canvas area.",1538066391.0
straightouttaireland,Some very interesting talks there.,1538000326.0
Reggie3,Thanks for putting this together.,1538071268.0
SizzlerWA,Thx!,1538246951.0
Arln-,Beautiful job. Love it !,1537974116.0
Pr3fix,"First off, solid looking boilerplate!

I just upgraded to Mojave and this seems to error out for me. I think the SDK version needs to be upgraded to the latest to be compatible with Mojave / Xcode 10. Just a heads up!",1538062994.0
Eunoia_R,"Quick question, do you always pass in the ApplicationStyles to the component/screen specific Styles first? Or only when you need local adjustments such as margin or color? ",1538213661.0
rogwf259,Maybe [this](https://github.com/STRML/react-grid-layout/blob/master/README.md)  can help you ,1537936382.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/javascript] [How would you build a grid of user profile photos that can be added, re-ordered, and deleted?](https://www.reddit.com/r/javascript/comments/9j5uer/how_would_you_build_a_grid_of_user_profile_photos/)

- [/r/javascript] [How would you build a grid of user profile photos that can be added, re-ordered, and deleted?](https://www.reddit.com/r/javascript/comments/9mn2p2/how_would_you_build_a_grid_of_user_profile_photos/)

- [/r/node] [How would you build a grid of user profile photos that can be added, re-ordered, and deleted?](https://www.reddit.com/r/node/comments/9mn2px/how_would_you_build_a_grid_of_user_profile_photos/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1537991339.0
hazeust,Nicely done package. I'll be sure to star. Is there a timeline set for its development over time?,1537917091.0
ahartzog,"This looks cool! I don’t quite understand what Siri shortcuts are, could you explain the user story here?",1537918726.0
kbcool,"This isn't going to answer your question but I have to query as to why you would want to build a docker image for RN development in the first place?

With the exception of node and the react native cli it's mainly user space-ish with Android and xcode tooling.

Docker's more for replicating your server environments.

TL;DR don't bother with it.",1537883762.0
zultan-peter,"I have not tested this myself, but could it be that you mount something on your own machine onto /usr/src in your docker-compose.yml file? My suspicion is the volume stuff you are doing",1537879605.0
SizzlerWA,Why not just install node through nvm or brew?,1537945155.0
lherr,"If this is for CI/CD purposes you can experiment with a basic node Dockerfile plus [https://hub.docker.com/r/uber/android-build-environment/](https://hub.docker.com/r/uber/android-build-environment/).

&#x200B;

This is for Android only, for iOS I have no idea because xcode can't run on Linux and is not open source.",1538064674.0
andric,"Honestly, the UI for this is pretty difficult to use.

Framer X, UXPin, React Studio, and so many others are trying to tackle the whole code ↔️ design workflow.

Where I don’t see this working, though, is the usability of it all. If I have to understand how React Native works before I use it, and then on top of that, learn to use your interface, if I already know how to build UIs with React Native, why would I use your app, versus hand-coding things myself?

One significant challenge you could solve is animation. Ever since Framer X launched, there has been a gap in terms of a tool that designers and UX engineers can use to prototype complex prototypes directly in code, while still remaining relatively visual. In the old Framer, one could drop back and forth between design and code and be insanely productive.

In React Native, Animated API and PanResponder are not super straightforward to reason about. If you’re designing interactions from scratch, you’d be better off doing it in something like Principle first, then trying to replicate that in code.",1537874060.0
pfriez,"how about an actual video tutorial on how to use your app, with someone talking and going through the process. also, the price of pro is ridiculous. it is about the same price i pay for 10 different subscription service.",1537921201.0
SolidR53,"useNativeDriver

https://medium.com/@birkir.gudjonsson/how-to-re-create-youtube-tv-list-animation-in-react-native-7477f004005e

You can also checkout Reanimated library if you need to do more complex calculation that runs on the native driver.",1537840939.0
ChronSyn,"Same screen, conditional rendering for 1 of 2 possible components for the label / edit box components. No sense building 2 identical screens with different fields only when you can just make 2 reusable components.

Don’t duplicate components until you find yourself conditionally rendering against 4 or more conditions and each result is significantly different (4 is my personal preference for most cases but yours can be more or less) or the logic hits the point where it could be broken by unexpected data or props.",1537858629.0
poopbooy,"Great work. Do you think you'll release it on Android, too?",1537852971.0
JTirado,Awesome! My first attempt at building apps was a similar concept back in 2015 as well! Great work!,1537905410.0
coldWalk,"I haven't the most experience but [this Medium article](https://medium.com/the-react-native-log/building-an-authentication-flow-with-react-navigation-fb5de2203b5c) is what I based my authentication setup with. 

Just know that the code in the Github isn't perfectly configured to work out of the box but the concepts are good.",1537830324.0
Jeffylew77,Edit: Forgot to add the Login.js screen. Hopefully that is a clearer picture of how I would like my auth flow to go,1537862512.0
karthidrive,"[https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/todos](https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/todos),

&#x200B;

It's quite good to start.",1537821492.0
haosmark,"Watch this series: [https://www.youtube.com/watch?v=KcC8KZ\_Ga2M](https://www.youtube.com/watch?v=KcC8KZ_Ga2M)

He explains it very well. Then just build something on your own, and it will help solidify your understanding.",1537829897.0
malphas173,This guy has done a useful series of react native tutorials with step by step introductions also for redux and also redux saga: https://www.youtube.com/playlist?list=PLWBrqglnjNl2yaCcp0HEAWp6zBIfingZ- There's also a GitHub repo with the sources for each video.,1537896111.0
Arln-,"This boilerplate : [https://github.com/thecodingmachine/react-native-boilerplate](https://github.com/thecodingmachine/react-native-boilerplate)

&#x200B;

I think it's easy to understand and is impletented with good practices.

For redux, take a look at the App/Store folder.   
Concepts are organized by theme and I personaly love that way.",1538034124.0
coreystout,Just start with the official react native guide/docs and start coding. You'll pick it all up surprisingly fast.,1537812079.0
kbcool,"If you're not up to scratch on latest ecmascript then it can get confusing. Pure web (not webpacked) js is quite different to ES 2016/17.

Learning react doesn't hurt either but it's not as important IMHO.

Start simple - ignore Redux and other state management libs just get a hello world working and understanding of why it works. 

Write a basic component - pass state from a parent as props. Understand how that works too then you can jump in deep being prepared.",1537887235.0
mobiman1,"Stephen Grider offers a course on Udemy called Node with React, where he shows how to implement server-side 
 authentication with Google OAuth2 on Express/Node.js: https://www.udemy.com/node-with-react-fullstack-web-development",1537794419.0
kbcool,"PDF kit. Should work with React Native. Might need rn-nodeify to get it working though 

Most other libraries are just for rendering pdfs.

Other solutions include hidden WebViews which I'll prolly get downvoted for suggesting but they're really like a Swiss army knife for hybrid apps.",1537792533.0
realbriank,https://parall.ax/products/jspdf,1537801813.0
HootenannyNinja,"[https://github.com/christopherdro/react-native-html-to-pdf](https://github.com/christopherdro/react-native-html-to-pdf)   


Have used this before on a few production apps and it works quite nicely.",1538227435.0
xrpinsider,Well thats a cool idea! Thanks for sharing.,1537784802.0
blah_face64496,"I recall hearing about this sort of thing a year or two ago. Great idea but i fear you may have been beaten to it; sounds very familiar. That said, would be a great learning project!",1537786497.0
jasonwhite1976,"Open sauce - mmm, tasty",1537798991.0
zeehtech,"The RecipePuppy.com is yours?

A really great idea!",1537823501.0
hopye,"Maybe u could help me
 Out with my personal project, its easy, already api in, follow whats already built for ios.. and you could use it as portfolio.... plus is buildable in 16 hours or less",1537859752.0
ChronSyn,"You're calling `props.FilmStore`, but it's not a prop in app.js, it's a direct import. You're also not using actions at all. The best way to explain it is like this;

 - An observable is a variable that will be watched.
 - An observer is something that will watch variables.
 - A computed returns values after processing.
 - An action will act upon a value to modify it.

Those 4 are the keys, but perhaps the one you can skip is computed - it's entirely possible to return the values directly as long as you're inside an observer component.

You're along the right lines with what you're doing, but you've not actually used or injected your store anywhere. The way that many projects are setup is that app.js contains something akin to a higher order component. For example, I do something like this;

    import ApplicationState from './store/Application.State.Mobx';
    import Navigator from './Navigator';
    class RootContainer extends Component {
      render() {
        return (
          <ThemeProvider theme={colors}>
              <Root>
                <Navigator ApplicationState={ApplicationState}/>
              </Root>
          </ThemeProvider>
        );
      }
    }

As you can see, I've passed `ApplicationState` into Navigator. For me, this is my react-navigation main file. That doesn't use the state anywhere (technical reasons, I'll explain in a moment).

Now, in every screen, I have the following;

    @inject('ApplicationState')
    @observer
    class MyScreen extends Component {

      constructor(props){
        super(props);
        this.someValue = this.props.ApplicationState.someValue;
        this.props.ApplicationState.setValueInState(""someValue"", ""my new value"");
      }

      render(){
        // render your component here
      }

    }

As you can see, the very first thing I did (after my imports) is use `@inject('ApplicationState')` followed by `@observer`. That means that in that screen, or component, I can interact with my state.

Inside my state, I have the following;

    @observable someValue = ""my existing value""
    @action
    setValueInState(variable, newValue){
      this[variable]  = newValue;
      return this[variable];
    }

What that does when I call `setValueInState` is looks for the variable in the context of `this` (i.e. the state) and sets it to `newValue`. This means that I can update any observable value in my state and only have to write 1 action function, but that's preference.

My final tip is to export a singleton from your state;

    const singleton = new ApplicationState();
    export default singleton;

This prevents you ever having to call `new` at any point and enforces reusing state. You could export a non-singleton as well in the event you want multiple instances of the same state with different variables.

As for why I don't use it in my navigator - my navigator is not a class and so it can't use `@inject`. I'm sure with some changes I could change this but I've no need to right now.

Source: I'm build react-native projects and use mobx as my state management of choice.",1537814656.0
mickey_abbott,Can’t you just do console.log(Filmstore.test)?,1537782652.0
fuck_with_me,"You misunderstand how `mobx` works fundamentally. Props are optimised as per your render function, so you _must use a prop in your render function_ for it to be passed to your component.

Moreover, it doesn't look like you're actually injecting the store.

In general, this kind of question belongs on StackOverflow.",1537783208.0
7hundredand77,"I think there are a few things wrong here, are you passing the store through a provider component to start of with? Please read the official docs they will tell you how to provide the store, inject the store, and use the store.",1537783939.0
Charles_Stover,"This is relevant to [my text submission yesterday](https://www.reddit.com/r/reactnative/comments/9i699s/react_native_webview_does_not_support_onmessage/). I finally got the Medium article written and posted.

This walks through the code, what each part does, what the motivation for each decision was, and how to use the component as a whole.

Feedback greatly appreciated. This is my first React Native package, and supporting Expo without ejecting was the main goal.",1537734484.0
EngVagabond,"Thanks for sharing this.

&#x200B;

The takeaway for me is that as the React Native core \[spins out more modules into separate, community maintained repositories\]([https://github.com/react-native-community/discussions-and-proposals/issues/6](https://github.com/react-native-community/discussions-and-proposals/issues/6)) (like WebView) and drops them from core, Expo will need to be involved and probably include these community projects in their set of included native modules. Otherwise, as more modules get spun out users whose projects use these components will drop from their platform.",1537756066.0
DiscDres,What have you done so far to fix it? ,1537724733.0
psylightxplosion,"You can try using [https://github.com/tleunen/babel-plugin-module-resolver](https://github.com/tleunen/babel-plugin-module-resolver)

My .babelrc file looks like this:

    {
      ""presets"": [""babel-preset-expo""],
      ""env"": {
        ""development"": {
          ""plugins"": [""transform-react-jsx-source""]
        }
      },
      ""plugins"": [
        [""module-resolver"", {
          ""alias"": {
            ""src"": ""./src""
          }
        }]
      ]
    }

I'm importing `import ComponentName from 'src/components/ComponentName';` You can change the `src` thing to be `""components"": ""./src/components""`",1537742204.0
maphongba008,"Just create package.json file in the src folder (or components folder), and you can use absolute import from 'src/components'

[https://medium.com/@davidjwoody/how-to-use-absolute-paths-in-react-native-6b06ae3f65d1](https://medium.com/@davidjwoody/how-to-use-absolute-paths-in-react-native-6b06ae3f65d1)",1537774758.0
Bamboo_the_plant,"Nice to see someone making a stab at this, particularly one with Expo compatibility.

A WKWebView community-made component (to replace RN’s long-obsolete UIWebView-based WebView) has existed for many years now, and I contributed the PR for this project that addressed the decision inherited from the RN core to override postMessage():

https://github.com/CRAlpha/react-native-wkwebview/pull/176

I suggest a pure JS shim for restoring postMessage() functionality in this issue, meaning there would be no need for an extra npm module:

https://github.com/CRAlpha/react-native-wkwebview/issues/166

... however, it requires that the WebView supports injecting JS both at document load start and end. I complained to Facebook that they seem to only support one of the two (the latter, if I recall), so if I’m right, this wouldn’t be possible in the new WebView, unfortunately.

I can’t check your solution right now (on mobile), but doing anything that involves history sounds alarming.",1537700744.0
Ashoat,"Work is currently ongoing [here](https://github.com/react-native-community/react-native-webview) on a replacement for the in-package WebView. Might be worth checking if the new package has the issue you describe, and if it does opening an issue in that repo.",1537710661.0
SizzlerWA,"Just curious, what’s the use case for this?",1537731539.0
ChronSyn,"They both exist to solve several problems. One of the biggest is handling the native-like experience of each OS. For example, user expect to be able to use the hardware or OS-level back button on android to navigate back to a previous screen from a modal or popover, and likewise the same applies with the swipe-back design of iOS. You can handle the logic of this in state management, storing an array of previous states, but you're reinventing the wheel at that point.

For all intents and purposes, you can build apps without a router. Single-screen experiences are possible, but they're notoriously difficult to get right both from a design perspective and development perspective.

I'd be interested in hearing about the issues you have with react-navigation, as these may be something that's not been covered well in documentation. Considering the mess that is conflicting information because of the differences between v1 and v2, I wouldn't be surprised if it's something that's just not explained well.

(Side note: I'm not a dev or contributor to either project, but I'm hopeful I can help solve the issues).",1537649527.0
notseanbean,"Hello. I have also used react-navigation and react-native-router-flux extensively, and also found them unsatisfying. I ended up abandoning them, and rolling my own solution - It was a bit hacky, but did the job.

Then I came across this [post](https://www.reddit.com/r/reactnative/comments/922l2j/i_wrote_my_own_navigation_router_because) by the creator of [react-native-easy-router](https://github.com/sergeyshpadyrev/react-native-easy-router)

I helped progress the library a bit, and then wrote a Medium article about my experience. It is here:

[Simple routing in React Native with React Native Easy Router](https://medium.com/@christianchown/simple-routing-in-react-native-with-react-native-easy-router-6e529866519e)

Routing needn't be complex.",1537893497.0
HootenannyNinja,"I had a similar issue recently with a project and had lots of trouble getting my head around app routing coming from web development where routing in reality is completely different. 

Firstly I would make sure to get an understanding of the screen/card concept and how push and popping works. I would also look at setting up a strategy for how people navigate around your app and sticking to it. If you can effectively create a straight line path where you can only go in one direction and not branch off this will make your life a whole lot simpler.

As for not using a router you could implement a single screen plan where you set a path in redux and load components accordingly but you could run into memory issues if you are building a larger app. You would also probably need to implement your own solution for back buttons etc.

As for navigation packages the wix one is probably the most solid at the moment and ties into the native packages for routing. I ran into issues early on with react-navigation around updating components when navigating to a screen that has previously been loaded. ",1537682128.0
skrubzei,"I also ran into a bunch of errors like this when trying to run the android emulator on my mac, so you are definitely not alone.

In the end I needed to add the SDK and ADB directories to my bash_profile or something along those lines.",1537650611.0
skrubzei,If you open android studio you can create a virtual device from in there.,1537744438.0
kbcool,"I doubt any will work out of the box but there's a few game libs that will mainly work out of the box with the canvas implementation on RN. Only a bit more work to get them running with one of the game NPM packages.

There's some examples written with expo by Evan Bacon who works for them (or as they'd rather have you think snorts fairy dust and magically poops out code - sorry long running grudge with the way they operate which is like some sort of hippy version of Google).

See: https://github.com/EvanBacon for some of his stuff. Pretty good.",1537637224.0
DrBopIt,"Unless you're going to wrap your class in an hoc it doesnt matter (redux's connect, intl, etc.)",1537632318.0
franzwarning,It really doesn’t matter. Sometimes you want to set HelloWorldApp.propTypes or .defaultProps so you pick the latter. Up to you.,1537630896.0
kexnyc,The only difference is style. Choose one and be consistent ,1537636747.0
orta,No difference to my knowledge.,1537630927.0
themaincop,Doesn't matter.  With reactjs and functional components and depending on your build tools sometimes if you just export an anonymous function vs. exporting a named const you won't get the names of the components in your devtool.  With classes it doesn't matter.  No idea if this comes up in react native.,1537631331.0
superDev62,"This a trick question. I know this one. The former is at the top and the latter is at the bottom. Plus no more need for prop types, I believe Facebook has moved to relying on flow for type checking.",1537666860.0
arkalos13,"This is how I've done it and it seems to work well.

First create a SwitchNavigator with your 3 routes(Apploading or splash, WelcomeStack, and AuthedBottomNav). Initial route name being Apploading.

 Inside Apploading is where you check for user tokens and navigate to either welcome or authed if it's there or not. 

Welcome stack is a Stack navigator with welcome screen and/or sign in/up whatever screens you want here. 

AuthedBottomNav is a bottomTabNavigator with routes that are also stackNavigators or just one screen. 

In App.js you are rendering the SwitchNavigator you created. 

Hope that helps. ",1537595170.0
notseanbean,"If you're not wedded to React Navigation, take a look at https://github.com/sergeyshpadyrev/react-native-easy-router

I wrote a demo app that features a very similar auth flow - here's the article: https://medium.com/@christianchown/simple-routing-in-react-native-with-react-native-easy-router-6e529866519e (repo link within)",1537626881.0
ChronSyn,"The contribution is appreciated, but this has nothing to do with react-native being that's it's a designed for building native projects and not web apps (and thus many of the cornerstones of PWA can't be implemented in the same way in RN, or simply don't apply).",1537649624.0
kbcool,"The core RN only supports iOS and Android. This does include tvos but I've read that some of the tvos stuff is finicky.

This means you can use it for Android tv sticks. Not sure about Roku it didn't use to be Android but that may have changed.

There are projects around that support to varying extents other platforms including Windows but again I've not seen anything around Roku in particular.

Hope that helps..a bit.",1537551872.0
kbcool,"Please do some actual research before posting here. If the admins were actually listening you would have been banned a long time ago. You repetitively ask questions, spam multiple subs with the same question and never ever show any form of diligence. I don't think you have ever thanked anyone or responded to any questions. 

Total time waster and if I met you in real life I would probably do something violent ",1537540389.0
fxnick1,"I don't have experience with Amplify, but we use Firebase for my startups backend and we can use a lot of their services. Push notifications is the next thing I'm tackling, but I know many have accomplished it with Firebase using react-native-firebase, a pretty dope lib that integrates with native firebase APIs. I would imagine AWS has something for push notifications as well though. 

While I'm a fan of firebase I'm inclined to tell you to go AWS if you want everything unified. You can host your Postgres DB there alongside with your auth, push notifications, storage buckets, etc. Whereas firebase offers two databases, neither of which are relational. ",1537539338.0
redpopcornpanda,"`react-native-firebase` is very easy to use for auth, notifications, and pretty much everything you could need (with the exception of a SQL database, if that's what you need). The react-native library implements everything really well, so there is excellent developer experience as well. I would highly recommend it, but I have no experience with the AWS alternatives. My first thought would be that AWS and GCP probably compete on the same level of feature-set and added complexity (and harder learning curve), whereas firebase is very easy to use, pretty simple, but doesn't have a lot of very complex/advanced options (which may or may not be an issue in your case. I haven't found anything hard to do for a fairly normal complex app). I'm not sure if AWS is easier to use - the options I have used from them in the past have been harder to use, but that might just be a result of the specific product.",1537553485.0
notseanbean,"Another Firebase fan here, but I'm going to go against the flow slightly and suggest there are better choices than `react-native-firebase`.

My issue with it is that `react-native-firebase` is that it is a competent wrapper around *all* the services, and so suffers from the problems of all libraries that aim to be jack of all trades: they end up mastering none. It may make your life simpler, however...

* Firebase Realtime Database
* Firebase Auth and
* Firebase Storage are all perfectly usable directly from the `firebase` JS SDK in React Native, so why bother with a wrapper at all? (Plus the server-side Firebase Admin API is near-identical)
* Crashlytics is better serviced by `react-native-fabric`, and also gives you Answers (don't bother with Analytics- Firebase themselves consider it deprecated)
* Firebase Cloud Messaging is better serviced by `react-native-fcm`. Originally the developer was handing things over to the larger `react-native-firebase` community, but his excellent library is still more advanced than their implementation.

I can't speak for other services, but I'd imagine the situation is the same there.

I'm glad I didn't tie myself into a React Native wrapper, as going with the approach above has meant I have made my code isomorphic, and I love having the same codebase run on React Native, React and NodeJS.",1537561427.0
revnext2,"Amplify has first class auth support with React Native, which integrates into Cognito so you don't have to do the heavy lifting. It also has full category support for other features like Storage (S3, DynamoDB), Analytics, (Pinpoint, Kinesis), and GrapQL or REST APIs (AppSync, API Gateway). In addition there is a full CLI toolchain with code generation and CI/CD workflows.
https://github.com/aws-amplify/amplify-cli

The React Native stuff is outlined here: https://aws-amplify.github.io/amplify-js/media/quick_start

Also some good articles by Nader Dabit on it: https://medium.com/react-native-training/building-serverless-mobile-applications-with-react-native-aws-740ecf719fce",1537582974.0
kbcool,You might get a better response if you post the source or link to the native SDK implementation.,1537551981.0
BuffMcBigHuge,"I tested my app in iOS 12, React v16.4.1 and React-Native v0.56.0. 

No problems on development and production builds.",1537543744.0
cbrevik,"TLDR;   
The Array.reverse bug that some might think only affects websites in Safari, actually has a wider impact.  
It will occur in all apps which uses the JavascriptCore-framework on iOS 12/macOS.  
This includes Chrome for iOS, apps displaying WebViews, and of course; React Native",1537524247.0
ledp,"I don’t understand the “Example Fail for Set”, will the promise resolve with that value?

Returning boolean success flags is, in my opinion, very bad api design in JavaScript. Why not reject the promise with a proper error object when the call fails, and resolve it with `undefined` when the call succeeded?",1537514993.0
EngVagabond,You probably have <View>text</View> somewhere instead of <View><Text>text</Text></View>,1537501919.0
PhantomMenaceWasOK,I've also seen this happen from an extraneous semicolon in a React Component. Same thing. iOS was okay. Broke android. Look up the diff of your recent commits and check for unnecessary semicolons.,1537502337.0
ismael_m,"Just had this last night, I searched for the words in the error message and fixed my problem. In your case, search for the words ""beginning of reverse"" and you will probably find those words either outside of  a JSX element or most likely as a comment inside an element which Babel can't transpile. Hope it helps",1537516877.0
secretL,"check your JSX for errors, had this happen before.",1537511421.0
artotal,"What’s a YogaNode?
RCTrawText is because you don’t use text node in a component Text.
",1537503626.0
nijolas-wilson,"Looks like a parsing issue. Find that JS comment there, it's being interpreted as free text. Someone here said look for semicolons

If that doesn't work do the old binary search trick till you find the offending line (i.e. delete half your code and see if it works, then delete half of that code, etc)",1537503655.0
7hundredand77,Yeah looks like you may need to do some debugging and identify the cause of your issue.,1537501513.0
jerrymiii,"> Flutter seems promising, but it lives in the shadow of Google’s whim

At least Google cares about Flutter (and its community) and it shows. Facebook treats the community like they are parasites.

>Flutter seems promising, but it lives in the shadow of Google’s whim and requires 100% adoption of Dart and the Google way. 

Ugh, It's Facebooks way or the highway. Check Github issues, if you complain or don't agree, they will tell you to fork it (aka fuck off). LOL.",1537485290.0
_wilm,"Hi, sorry you're being downvoted. From looking at your code, the react native aspects seem to be perfectly fine, but your sort comparison function does not.  


On line 23, you've got:

`export const compareNames = (contact1, contact2) => contact1.name >` [`contact2.name`](https://contact2.name)

If you see [here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) on MDN, there Array.sort() method's 'compare function' parameter is expecting you to return a *number*, but the code I pasted above returns a *boolean*.  this causes the sort function to be super unstable, which is likely the root of your problem. From searching around on the internet, many people have come across situations where their sort worked in one environment but not another, usually due to this exact issue.

Try changing line 23 to the following, and I'm betting it'll work:

`export const compareNames = (contact1, contact2) => contact1.name > contact2.name ? 1 : -1;`  


You're right, with a few exceptions (usually with styling) the React Native code should world exactly the same on the two platforms, granted it's just pure JavaScript and not using any sort of native modules. SO when you run into issues like this, resort to thinking 'What's wrong with React Native?' last, and instead look for simple JavaScript issues first. That's something I had to learn the hard way.  


Good luck, and let me know if you need further help.  
",1537484920.0
Bzaba,Try this lifecycle methods https://stackoverflow.com/questions/48527133/react-navigations-tabnavigator-detect-when-tab-is-going-out-of-the-screen,1537480785.0
Meph1k,I don't wanna be rude but this is all very basic ReactJS knowledge.,1537460808.0
kbcool,The TL;DR - Pretty good general performance advice but I'm not sure whether you did made some of those rookie JavaScript/React mistakes on purpose to beef up the article or just plain didn't know much when starting. Might find most readers saying such a lot.,1537434473.0
SolidR53,"I don't understand why people don't use native navigation when performance is a big deal for them.

Great points though!",1537501279.0
techie007,"Wow, you must be really new to react-native. Did you even react the docs?",1537454530.0
ChronSyn,"Great article, but one thing really stood out for me;

> Geolocation is a must have feature to implement in a mobile app.

If your app does not require geolocation features, you absolutely shouldn't implement it. A lot of the distrust that users have for developers comes from the past, when these features were new, and developers would randomly request them ""just in case they need it in future"". Of course some developers abused this, and this mentality spread. Soon enough, we saw mobile apps, and social media apps, requesting permissions ""because reasons"". Then we ended up with Cambridge Analytica situations.

For example, if I'm making an app which displays bus or train times (hint: I already did), then geolocation is a good thing to have since manually choosing a bus stop or train station rather than being able to select from nearby ones isn't good UX.

If I'm making a 'global news' app, then I don't really care where the user is located in most cases, only that the content is served when requested. Global implies that I don't even need to know if they're on the same planet - they could be in the ISS and using the satlink there and I should still serve the content to them. They could be on Mars, and I should still serve the content to them. I don't care where they're located in an app like that.

There is not a single case where you should add something that needs a permission unless you absolutely use it. Permissions require user approval because they're sensitive - either in terms of the data they provide, or they're sensitive to the users needs (notifications for example, can cause great anxiety to some people either due to the sound or simply their unexpected and often inconsistent nature). Contacts, SMS, location all give sensitive information. I don't want that information unless I need it, or I'm trying to sell it on (Yeah, let's just not do that).",1537433014.0
nickmcsnapz,www.upwork.com,1537429976.0
StonedMosquito,"If you mean Oauth2 password grant then yes, avoid it. If we are talking about authentication then you should use OpenID Connect instead.

Why?

Oauth2 password grant exists because of legacy apps.  Generally speaking the process of authentication and authorization should happen (via redirection) on the authentication/authorization  server, not inside you app.",1537446756.0
neonWednesdays,"It's likely the function is out of scope; try `this.example.bind(this, text)`.",1537409694.0
DrBopIt,Your this reference should not be this3. ,1537400472.0
thebaconmonster,Post some more code; at least the entire file your working in. ,1537483615.0
kbcool,Goddamn you're annoying,1537400419.0
Fingal_OFlahertie,"I understand your motivations as a founder and your optimism towards the full potential of the company. But when you say you want to separate ""big talkers"" from true performers, realize that the programmers have to do the same. ""Billion"" dollar ideas are a dime a dozen... they all just need someone to implement them. But separating the wheat from the chaff is not easy for either side. 

You're constrained on the salary, okay, then get loose with the ownership. I see all these conditions (at the discretion of management) clauses towards ownership that are a big turn off. If you want me to sacrifice now so that I can be a ""partner"" then bring me in as a *partner*.  Not this piecemeal hand out approach. 

I'm talking in general here. I'm not actually interested in the position but wanted to give you some feedback and perspective since it does seem as though you're trying.  

",1537408203.0
kbcool,"You're penny pinching and you get what you pay for.

 One good developer with excellent comms skills, experience and some business acumen or at least some reasoning skills is worth 5-20 more average devs. 

Problem is they are rare as hen's teeth so if you find some send them my way. 

As for your offer it's laughable. No one with reasonable English skills let alone someone who is a native speaker would work for that and if you can't get enough funding to pay them properly then no one must think much of your startup let alone yourself as you would fund it yourself if you did.",1537400315.0
nickmcsnapz,"I'm a senior mobile dev and react native dev and project manage our in-house team and outsourced teams (Vietnam, Russia & Czech), as well as design the UI and UX for our apps. 

There is no way someone who does what I do will do it for $50k p.a. I get paid 3 times that. All smart developers know that contracts can be void very easily. Do you know how many positions I have had with equity and never got my equity? We dont join teams for the equity, equity is a bonus on top of a decent salary. We all know equity wont put food on our table or pay rent, equity is basically wishful thinking & gambling, it's a nice-to-have that we dont think we will ever actually get since we could get let-go at any time.

Also, any decent developer who understands outsourcing will be wary of working with outsourced teams. Outsourced teams do not care about your product, this is why your UI doesn't match what you asked for, because they dont care. They only care about money, they drag tasks out for longer to bill you more, send back things that havent been properly tested so you find the bugs and pay them to fix the bugs they created.. not to mention the bad communication and time difference, which causes tasks to take way longer (read: cost you more)

We moved to react native to get rid of our outsourced teams as we didnt need them with RN. we get things done 10 x faster with 1 dev in the office with RN compared to 6 outsourced native devs overseas..

My tip: ditch the outsourced team, saving you 5k a month, and use that money to pay the guy what he deserves. Give him the bonus' still (or lower it if you think a decent salary and less bonus is fair), it'll keep him working hard, e.g overtime for no money. It'll also make him care more about yours (and his) product. The only person who will make your product perfect is someone who actually cares about it. No one else will give a shit about your product, they will only care about how much money they can get from you, especially outsourced teams. 

I guarantee you your code, UI and UX is going to be terrible with your outsourced team. Get someone in-house as fast as possible or it's going to cost you a hell of a lot more in the long run.

Feel free to message me if you want any more advice.",1537431396.0
coolnat,"Dude, you couldn't pay me $100k to do that. Managing development overseas like that is awful; whoever gets this job is going to be miserable.

Your first problem is that you decided to start a technology company without possessing the skills necessary to actually build technology. I guarantee that if one or both of you were developers, you could build the app on your own without even taking on investment.

You should have spent your $110k/year on \*one\* local senior developer that could do it all.",1537412589.0
alien3d,"Good Luck Sir . 50K is not  much.. But telling your business plan seem good idea.  :P

Most of company problem,is  business plan. So do hope use tool like JIRA to document everything each idea and task it.Sometime thing seem so easy but actually not .

A true project manager good if have some technical skill, but to delegate  and use the right tool to manage it the most important.

&#x200B;",1537411761.0
DannyHInkle,"Thank you for your reply. I’ll offer a little more perspective. We’ve personally invested 250k and we just raised 500k at a $3.5M valuation. Neither myself or the CEO is taking a salary, so it’s not like we’re asking someone to do something we wouldn’t. 6% of a company that aims to be worth billions would be $60M. (Assuming $1B), 

We want someone who believes in the vision and the team enough to put some skin in the game. It’s easy to say you believe in something when you’re being paid 10-12k/month in Sacramento. 

On the flip side, when you take equity and sacrifice some pay, you’re proving you see the big picture and believe enough to go all in. I’m confident that this overall strategy is the best move for separating the big talkers from those who actually believe in the company.

Now, the only real question that remains is... how much better will I need to make this offer. I’d prefer to stay under a 60k base but at the end of the day, we’ll do whatever it takes. ",1537403822.0
saugoof,"Two options to deploy it to a limited number of iPhones are via Crashlytics (go to fabric.io or just google Crashlytics deployment), or via Diawi (diawi.com)

Diawi is probably the quicker and easier option if you just want to get this to someone's phone for a demo. Crashlytics is a lot more flexible and featured, but requires a lot more effort for the initial setup.",1537402257.0
ronforbes,"I’m working on a live minigame competition played on iOS and Android through React Native / Expo (https://blockparty.gg if you’re interested in checking it out). We playtest weekly with the rest of the team. 

Expo has some great tools for sharing in-progress builds like publishing and snacks. However, a recent update to Apple’s policies prevents you from running published Expo apps that weren’t authored by you on iOS (not sure if this applies to Android too). The solve for us was to use the tunneling option of Expo to allow people to run the app from anywhere as long as they have the link, which you can still send via text through Expo. It means that I need to keep serving the app in Expo while we’re testing, but it works for us since the app is meant to be played with people at the same time.

That worked pretty well early on for enabling our internal team to see what we’re working on without deploying. Now that we’re starting to test externally, we’ve setup a build pipeline that allows us to get builds on TestFlight, Apple’s officially supported beta testing platform. It involves more work, and builds have to be approved by Apple (which usually takes a day), but this lets us test much more broadly.

Hope that helps!",1538322819.0
roboctocat,You should be able to share your app via expo,1537408391.0
euphoriation,"The best way to do that is the official snack expo,

head over to : [https://snack.expo.io](https://snack.expo.io), it's self explanatory. after setting up your project in the expo snack, you can share a link to the project with your mates. and they can test it either in the browser or trying it locally by installing the expo app in their phones.

other than that [repl.it](https://repl.it) just announced this month the support for react native: [https://repl.it/languages/react\_native](https://repl.it/languages/react_native).",1537492040.0
sourtargets,react-native-vector-icons,1537385480.0
matt_hammond,"If you want a simple, lightweight solution, you could create, our icon set and export it to a font (icomoon does this for you) then just import the font in your app.
Then you can create an Icon component that accepts a prop, say you name it type, and based on that prop you change the character you render (character being your icons) ",1537470372.0
kevinwolfcr,"\- If you want to use a popular icon library, then just use \`react-native-vector-icons\`.  
\- If you want to use your own icons, you can use fontello or icomoon to generate a font based on your svgs, and then, use \`react-native-vector-icons\` to consume them.",1537570046.0
kbcool,"Styles don't cascade in RN. There's limited inheritance.

See https://facebook.github.io/react-native/docs/style for more details.

What you posted though is simply a duplicate key.

What you can do is something like:

    <Text style={[stylesheet.stylename, {color:""#ff0000""}]} 

which will merge a stylesheet and a local style override so color will now be #ff0000 instead of what it was in stylesheet.stylename.",1537380632.0
cmgriffing,"Yeah their stream is pretty good.  


side note: LOL, howdy lemon :)",1537371977.0
alien3d,I'm not sure what  trend this day block-chain. But yet  have the time to learn on it. Good  luck sir. ,1537382527.0
MrKWatkins,What does Elastos actually do?,1537383805.0
davidpaulsson,FlatList accepts an `inverted` prop. Just pass that. ,1537360360.0
Gustash,"https://stackoverflow.com/questions/43399343/inverting-a-flatlist

Try this.

Just reverse your array and add a `style={{  transform: [{ scaleY: -1 }] }} ` to your ScrollView. Haven't tested to see if it works, so let me know",1537358693.0
kbcool,"Uh am I missing something here or shouldn't you be pushing items onto a stack so it will naturally work like that? No changes needed to components.

That's how I've implemented chatbots in apps before.",1537360903.0
edric_garran,What do you mean exactly? Seems to be working ok,1537338067.0
fisch0920,"You need to do something like this:

```js
const example = debounce(() => {
  console.log('hello')
}, 5000)
```

Now you can do:

```js
example()
example()
example()
```

And you should get a single log statement after 5 seconds.",1537323903.0
Phalangical,"Your misunderstanding how debounce works.  Your function is working as intended, it delays for 5 sec. before the console.log is executed.  Debounce does not repeat.",1537322691.0
fridgefreezer,"I used a course by Stephen Grinder on udemy, had no react experience and can now knock up some stuff.

I guess you really need to tell people what kind of app you want to make or it’s pretty hard.

I can make an app with authentication, that uses an api, that has various interactions.

I had minimal js experience, ‘decent’ html / css and had also dabbled in php but had no real pro experience with it.

Ironically, I’m now learning react and finding it pretty reasonable to understand and see the difference / similarities between the two.

What I would say about that udemy course is that it doesn’t tell you how to get your app from the simulator to the actual App Store, but the actual docs from Facebook are reasonable.

https://www.udemy.com/share/1000f6AkcYcFlaRXg=/

What are you trying to achieve with your app?",1537316585.0
com2kid,"To repeat what everyone else here said:

1. Stephen Grinder's course on React Native is the go to
2. Learning react isn't necessary. You'll figure it out in more or less. There are some concept of React that the course doesn't cover too well, but read a couple of Medium articles if you get confused and you'll be fine.
3. VS Code.",1537324957.0
euphoriation,"i'm currently learning from a course on [udemy](https://www.udemy.com/the-complete-react-native-and-redux-course/) taught by Stephen Grinder, it's pretty good, especially if are new to the react world.

other than that there is a [free course presented by Harvard university](https://www.youtube.com/watch?v=_P7wHN_kOv4&list=PLhQjrBD2T382gdfveyad09Ierl_3Jh_wR), and i might say it is better than the udemy course, it is well structured, and well explained, and even more stuff that the udemy course haven't addressed,

if you wan't to speed up your react native development, read about expo. btw the Harvard course addresses it too.

about the editor, the most popular choice is visual studio code and [here](https://medium.com/react-native-training/vscode-for-react-native-526ec4a368ce) is all you are gonna need, to setup your development environment.

\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_

[The Udemy course](https://www.udemy.com/the-complete-react-native-and-redux-course/)

[The Harvard course on React Native](https://www.youtube.com/watch?v=_P7wHN_kOv4&list=PLhQjrBD2T382gdfveyad09Ierl_3Jh_wR)

[VS Code for React Native](https://medium.com/react-native-training/vscode-for-react-native-526ec4a368ce)

&#x200B;",1537322486.0
JS_PY_and_Crypto,"This is coming from someone that had zero experience with react or react native and had some knowledge of Javascript. I started with React Native because I needed to, this had no negative effect on my learning though. This is because React and React Native behave the same exact way, use the same state management library (redux), and can share pretty much all of the same Javascript code, but the only things that would change is the JSX; because you would be mixing in html to the React code. Its hard at first but eventually it just clicks, I would say make 8-10 small projects using React Native Redux, and some cloud storage platform. Literally just look up tutorials and try to understand why they are using certain things, then build some extra stuff onto those tutorials. I would even go so far as to say look up specific tutorials to make the components you need, that will help you understand how to organize your project in React and React Native. Good luck!",1537316970.0
theglendon,"Also, if you do go the udemy route, and Grider's course happens to not be on sale if you navigate there from his website [RallyCoding](https://rallycoding.com/) it's always $10.",1537334639.0
alien3d,"just think link this ..method also an object .    I'm doing react-native,native android (learning to maximize it ),php and .net .Component just like other class in PHP or C#. Most of us here some using Visual Studio Code, lightweight and have good auto complete on react-native.  Learn es6 and es7,then go writing react-native. ",1537346992.0
demoran,"Use VS Code or IntelliJ IDEA.

React is absolutely required for React Native.  You can't do React Native without React.

Components can have a static componentName field that will show up in the [React Native Debugger](https://github.com/jhen0409/react-native-debugger).

Don't expect learning a whole ecosystem to be easy or quick.  But `yarn` and `npm` are like `nuget`.  Use Typescript if you come from a C# background.  Use `prettier` to keep your code formatted nicely.",1537369077.0
makavelixx,"I'm a senior android dev (4 years +), doing some react native. While I think it is nice, I believe you won't be able to build a complete app in React Native. Too many devices crash with RN",1537368150.0
com2kid,"> Expo offers a great developer experience,

When it works. Which is... more often than not, but sometimes not. Sometimes things don't connect. Sometimes they do. Sometimes the GUI client works, other times the expo CLI works, I on multiple occasions I have spent 30 minutes + getting my project to connect.

Also, consensus it that ejecting sucks. Again, sometimes it works, sometimes it doesn't.

Other reasons not to use Expo:

1. If you are integrating with Google services, there are multiple occasions where Google charges more to go through a JS API than the native mobile API. 

2. You don't want to have a dependency upon the infrastructure of a company that continues to have no revenue model. 

(Seriously, how is Expo keeping the lights on?)

I'll grant that they don't just jump on board the latest React release, which given how unstable those can be, is a very good thing.",1537325588.0
tbarbugli,"I like a lot of things from Expo but it has huge issues in my opinion:

\- you are stuck with ancient RN versions

\- it creates insanely huge packages

\- builds are way slower than plain RN

&#x200B;",1537347668.0
contrarianism,"The thing is a buggy, bloated mess.",1537370695.0
HerrX2000,Expo is two RN releases behind (~0.55) so we have migrated to RN init. In the end regular RN is serving us very well. I read the article but I never had to use Android Studio yet. Also RN init has a good hotload function as well you just need a development device.,1537392714.0
kbcool,"I think everyone else is being too polite so I'm going to be my normal obnoxious self and ask if you even bothered to try searching for your issue.

Seems pretty common to me:

https://github.com/react-native-community/react-native-video/issues?utf8=✓&q=playInBackground

I'm sure if you don't find your answer there you can find some people to commiserate with.",1537380953.0
TGPSKI,"As part of the tutorial, I've also written [react-native-checkmate](https://github.com/TGPSKI/react-native-checkmate), an environment validation tool for React Native projects. Increase your build success rate among multiple collaborators and CI servers. Catch build configuration errors at the start of the build, instead of 95% through.",1537297549.0
maiam,I am a few months away from completion of my RN app on both platforms and I've begun to start to thinking about how I will handle DevOps. Very excited for this series!! ,1537303839.0
RedHotBeef,"Oh man, I'm in my first big-boy dev job and they've largely put me in charge of setting up CI for their react-native app. They want remote builds, so I'm currently working with bitrise (and fastlane match for iOS signing), but their older stuff uses Jenkins so I imagine I'll gain some useful insights here. ",1537312557.0
NiceBluebird,"Nice, great job with this.",1537312835.0
TheTraceur,This is awesome! I love the diagrams. Looking forward to the rest of the guide!,1537316071.0
SolidR53,"Nice diagrams man, good stuff.

I have code push in my pipeline too. I need to up my diagramskills 

https://cdn-images-1.medium.com/max/1600/1*0ZrbPH2Wrli9OY54LXrm7g.png",1537317846.0
shekharskamble,"Thank you so much, just what I needed",1537329121.0
numagames,"Amazing guide, that's what I've waited for 2 years!!!111111 :)",1537341427.0
Eunoia_R,"This looks amazing! One question though, what would your alternative recommendation be if a mac mini is not yet possible? Is there a cloud service youd recommend? ",1537353882.0
numagames,"react-native-config seems to be semi--abandoned, do You use own fork of it to make compatible with latest RN versions?",1538120586.0
kbcool,"[https://facebook.github.io/react-native/docs/accessibility](https://facebook.github.io/react-native/docs/accessibility) 

&#x200B;

If that's not enough or what you're after then supply more info and I'm sure someone can help.",1537284641.0
kasimowsky,[https://realm.io/products/realm-database](https://realm.io/products/realm-database),1537280127.0
kbcool,"What are you storing? How big? How big is each record?

How does it need  to be queried?

Does it need to be performant? How often will you be read/writing?

&#x200B;

The short answer is that it depends on the above. As an example I wouldn't store images in SQL-lite but I don't know what you are storing.

&#x200B;

&#x200B;",1537284960.0
fietspomp01,Hi! I haven't worked with SQLite. But a few days ago this was posted: https://github.com/Nozbe/WatermelonDB maybe this is something worth trying? It's also based on SQLite btw ;),1537271860.0
fietspomp01,"Hi There!

You can create new header files and such in xcode, you can place them in the root of your test project. (Xcode -> File -> New -> File)

The CalendarManager.h file should look like this:

    // CalendarManager.h
    #import <React/RCTBridgeModule.h>

    @interface CalendarManager : NSObject <RCTBridgeModule>
    @end

You also create a CalendarManager.m which looks like this:

    #import ""CalendarManager.h""
    #import <React/RCTLog.h>

    @implementation CalendarManager

    RCT_EXPORT_MODULE();

    RCT_EXPORT_METHOD(addEvent:(NSString *) name location:  (NSString *)location)
    {
      RCTLogInfo(@""Pretending to create an event %@ at %@"", name, location); 
    }

After that you indeed can use this function inside RN by using NativeModules

You don't need the myFancyLibrary for this example.",1537281297.0
fupower,"Maybe you don’t need use tab navigator, just toggle between two <View> ",1537250518.0
loaderchips,build again ,1537250374.0
lovemeslowly,"Yeah i have seen this. Open xcode. Clean and build your project. If it remains, there could be library linking problem   
Ops did not read your full post. If its xcode issue maybe you should look for react natuve community help or SO",1537255199.0
,[deleted],1537297999.0
,[deleted],1537338505.0
coffeeisgoodnow,The link doesn't load. ,1537415621.0
com2kid,"Try installing the expo client and using that instead. I have had limited success with NPM start. You can also try the expo command line client, the expo site has more info on it.

Make sure adb reverse is working. 

Connecting expo is black magic. After a reboot it can take me 5-10 minutes to get it back up and running. Once it is working, life is good.

FWIW I've had the best luck with ""exp start"".

",1537216476.0
dogofpavlov,"1 of the things I struggled with when starting with RN was getting caught up in all the hype about CRNA and Expo. While it is good for getting going, once you actually want to publish your app you'll run into all kinds of undocumented fun. 

I recommend just using ""react-native init"", it isn't too much more work to get it running, and once you do, you'll find alot of problems you had in expo/CRNA just don't exist anymore.",1537216729.0
ChronSyn,"If you're using expo, there's no reason not to user the cli to go with it;

`npm install -g expo-cli`

`exp start`

Follow any instructions that are presented. Install expo XDK (Google it) if you want a GUI to launch projects under expo and to control whether to use LAN, tunnel or localhost.

Open expo app on phone, load the project listed as 'live'. Also ensure that `adb devices` shows a device connected on your PC. If not, you can still use tunnel to view your expo project.

Finally, read through the docs. The one thing I can't really tolerate about expo is that the community don't read the docs in many instances, despite them usually covering what is needed.",1537289345.0
kbcool,"Uhhh that's your release build? Are you sure you uploaded the release build to the app store or you're debugging it now?

&#x200B;

The reason I ask is because your release build should all be transpiled to vanilla-ish js. Not saying that call won't be in it for some reason but it looks awfully suspicious.

&#x200B;

Sorry if it's not a solution but I would want to be certain I'm debugging the right thing and to me that doesn't look like a release build.",1537218177.0
Xials,I submitted an issue on GitHub and it turns out it is an issue with react not properly importing babelHelpers all the way. They have a workaround.[Issue Link Goes Here. ;)](https://github.com/facebook/react-native/issues/21180#event-1854751824),1537996091.0
kbcool,"LOL this is so close to my home base it's not funny.

&#x200B;

I made a game similar to Words With Friends for the Nokia platform back in 2011 - Word Tiles if you were around. It was made with Qt Quick/QML which until this day I still swear was amazing and React Native is either it's love child or just an example of convergent evolution in software. I was blazing a huge path with it and Nokia themselves were quite interested in it.

&#x200B;

Here's someone's video of it in action: [https://www.youtube.com/watch?v=TZEtSxfWgh8](https://www.youtube.com/watch?v=TZEtSxfWgh8)   ....Nostalgia central.

&#x200B;

Suffice to say it did very well but eventually died a slow death with the platform as I tried to port it to Android/Iphone and its users using phone gap and it was just too slow at the time.

&#x200B;

I don't think they're going to have any problems porting it. Heck the core of the game suits RN very well. Some of the sugar might be a bit harder. ",1537217543.0
blbil,"Why aren't they just working with some game development framework or something? Then they could write almost everything in c++. React Native seems like a weird choice. (If they mentioned this in the article then apologies, I just skimmed it)",1537233822.0
EgidioCaprino,"DynamoDB integrates greatly with AppSync by giving you the possibility to write back end API without code.

Cognito Identity could handle thirty parts signing and integrates well with AppSync.

I'd suggest you to give a look at `aws-amplify`.",1537216890.0
thawab,"look into UI components, there is one pre-built for Authentication[0]. There are a list of articles and videos in these 2 repos [1,2], hope it help.

[0]https://aws-amplify.github.io/amplify-js/media/ui_guide
[1]https://github.com/dabit3/awesome-aws-amplify
[2]https://github.com/dabit3/awesome-aws-appsync",1537288219.0
kbcool,"You've posted this like five times already - a few times in this sub and more in others. 

Sorry to be rude but it's time to move on. It's not the achievement of a lifetime.

Edit: I did give you some positive feedback at the time so it's not like Im hating just saying.",1537218380.0
VAL_PUNK,"Are you referring to react-navigation, if so this is what I'm using for one of my apps.

    
    import {
      createBottomTabNavigator,
      createStackNavigator
    } from ""react-navigation""
    
    const TabStack = createBottomTabNavigator(
      {
        Home: HomeStack,
        Notifications: NotificationStack,
        Profile: ProfileStack
      },
      {
         initialRouteName: ""Home"",
         navigationOptions: ({ navigation }) => ({
         tabBarIcon: ({ focused, tintColor }) => {
           const { routeName } = navigation.state
           let iconName
           if (routeName === ""Home"") {
             iconName = `home`
           } else if (routeName === ""Notifications"") {
             iconName = `notifications`
           } else if (routeName === ""Profile"") {
             iconName = `person`
           }
           return <MaterialIcons name={iconName} size={25} color={tintColor} />
         }
        }),
        tabBarOptions: {
          activeTintColor: darkBlue,
          inactiveTintColor: ""gray""
        }
      }
    )
    
    const AuthStack = createStackNavigator(
      {
        AuthLoading,
        Login,
        Signup,
        ForgotPassword
      },
      {
        headerMode: ""none"",
        initialRouteName: ""AuthLoading""
      }
    )
    
    const AppStack = createStackNavigator(
      {
        AuthStack,
        TabStack
      },
      {
        headerMode: ""none"",
        initialRouteName: ""AuthStack""
      }
    )
    
    export default AppStack

&#x200B;",1537200008.0
BuggerinoKripperino,I like the idea but I really don't think the drag down to dismiss scrollable will ever work UX wise. If someone wants to scroll up they will scroll top to bottom thereby dismissing the modal.,1537194808.0
fuck_with_me,No one has any fucking idea what you're talking about.,1537204986.0
fupower,"My two cents:

Invest time learning redux, is very useful if you are planning scale up your project, if don’t probably you don’t need redux

React Navigation imo right now is the best navigation library for react native

Use _react-native init_, don’t use create-react-app, they bundle it with expo, i won’t recommend expo right now

Check native.directory , there is a bunch of tools/libraries for RN",1537170918.0
Jeffylew77,"Thoughts on AWS Lamdba, Appsync, cognitio, and dynamodb?",1537234072.0
clearing_,"Use TypeScript early on. VSCode supports it quite well and there’s a packager transformer available for seamless compilation into the js bundle. You’ll be glad you used TS about 8,000 lines from now.",1537170785.0
thawab,"I would recommend expo[0], the expo mobile app will be used instead of the emulator, and it will deploy your app as apk/ipa without needing android studio or xcode installed.

Don't get into redux yet, invest your time in react native and any backed service using firebase or aws appsync. Don't get distracted with any configuration tool or new lib, Expo has almost all the libraries that you need. Focus on launching it and making it look good, then add whatever you want to it. 

[0] https://docs.expo.io/versions/latest/",1537176679.0
MrFriiky,I'm also a sci student worker. I'm using Webstorm from intellij as my IDE and I'm very satisfied with it. You check if you can get it from your university's page for free as I did. ,1537170599.0
alien3d,redux is global tree session.It nice but dont expect data will quick update.I see redux for react native build upon uncertain network connection. ,1537180305.0
ChemicalCap,I recommend using Native Base for a UI library. Provides many common components that aren't provided by RN by default.,1537283735.0
Jinno,"Unfortunately, the Auth0 SDK/Package for React Native makes use of some native bridges for its functionality. Expo has no support for native modules (because it would require a unique compilation of the app for your device), so you won’t be able to make full use of the Auth0 package and keep your app in Expo. 

If you used the create-react-native-app command line tool to start your project, you may be able to [eject](https://github.com/react-community/create-react-native-app/blob/master/EJECTING.md) it and then add the Auth0 dependencies to continue your development locally.",1537160368.0
antigirl,"It doesn’t fetch every JS bundle. Only the latest one. They will test what you’ve submitted, don’t rely on over the air update as they may test it offline ",1537140756.0
ChronSyn,"Expo, by default, loads the local JS bundle from the device and only falls back to remote if there's an issue, but it will w

If you add the following to your `app.json` file, it'll prevent your app from downloading the bundle from the expo servers (i.e. it disables OTA/over-the-air support);

    ""updates"": {
      ""enabled"" : false
    }

Create another build and submit that. Then, each time you're ready to do a new release, you'll do another build. This ensures that when they test it, there is no chance they'll receive code that's different from what you've provided in the build you submitted AND it also adheres to what I'd consider to be good UX (following the users choice on when they want to update their app as opposed to it changing without them being given the option to not update).",1537200170.0
thawab,"this is a 4 part short tutorial on how to do it:
https://www.youtube.com/playlist?list=PLy9JCsy2u97kCLmFN7sPW2eBTDs2t80M1",1537288432.0
Hisztendahl,"Expo vector icons gives you access to all these
There's quite a lot to work with really

https://oblador.github.io/react-native-vector-icons/",1537110442.0
Zed743,[Try this.](https://www.youtube.com/playlist?list=PLhQjrBD2T382gdfveyad09Ierl_3Jh_wR),1537079452.0
tarpier,"I got started with this one: [Spencer Carlie](https://learn.handlebarlabs.com/p/react-native-basics-build-a-currency-converter) 

You will build a currency converter app, that teaches you the basic principles of react native.",1537087445.0
phobic1,"If you want something that starts from the basics, explains everything and has lots of examples you should try [this website](https://reactnative.agodevs.com/)",1537521973.0
janithaR,"I suggest you just start doing projects. I'm in the process of revamping a 5 year old app (5 years worth of business logic, thus a big codebase) that was available on Android and iOS and in 2017 November when I initially started with the React Native code, which where I had 0 knowledge of React or what ES6+ javascript is like, I realized one thing very quickly, React Native evolves quickly and many **many!** getting started guides were simply outdated and conflicted with one another. They only made me confused even more.

So I simply started the project and worked on it and as I faced obstacles I isolated that case did a proof of concept project for each separately and explored each such case very thoroughly. Eventually I found my own way of how to do things the most effectively and efficiently. In just one year I'm getting ready to release the beta in to markets with even more features built in.",1537103395.0
sn0wr4in,"CS50 has a course on React Native, you might want to try that out :)",1537112528.0
hutxhy,Start with the official docs. They have a decent total beginner tutorial. ,1537107223.0
dumbSavant,Glad you figured it out and updated for posterity,1537074492.0
akie,"Either put myKey in redux and make it available wherever you need it by using mapState, or put it in a shared parent component and pass it down as a property. Then pass down a property ‘setMyKey’ to the component(s) that have to change it. ",1536987594.0
kbcool,"call getKey() in the componentDidMount() function on your component is the simplest answer.

&#x200B;

The next problem you have here though is that your state is not updated in your textinput only your asyncstorage so savekey should also update your state.

&#x200B;

You should as /u/akie pointed out migrate to some sort of state container like redux at some point (once you get past single forms) it's just easier in the long run. Then you can use redux-persist to automatically persist your state.",1537005774.0
TheFutureIsNear,Like u/kbcool said you should move `this.getKey()` to `componentDidMount()` because you call `this.setState()` in getKey but in the constructor you have no guarantee that the component will be mounted by the time getKey finishes executing so you could end up with a warning: “Cannot call setState on an unmounted component...”. Calling the function in componentDidMoint guarantees that won’t happen.,1537024284.0
essuraj,some thing related [https://github.com/xotahal/react-native-motion](https://github.com/xotahal/react-native-motion),1536977981.0
cagotrebgghju,Some of those animations can be implemented using Animated api in  theory. Eggs for sure. More complex better to implement in native where you have almost unlimited power. Another point to think: so animated screens can be very annoying for users.,1536996667.0
cagotrebgghju,"https://github.com/kmagiera/react-native-reanimated
This is interesting library. It has very different api, but gives you more control.",1536997066.0
thawab,"this was a workshop in React Native EU conference by FormidableLabs:
> In this workshop, we cover:
> 
>     react-native-reanimated
>     react-native-gesture-handler (docsite)
>     FluidTransitions
> 
> slides:
> https://rneu-interactions.netlify.com/
> 
> https://github.com/FormidableLabs/react-native-interactions-workshop

",1537009520.0
SolidR53,"Not exactly complex, but kind of an writeup of whats possible with only Animated: [https://medium.com/@birkir.gudjonsson/how-to-re-create-youtube-tv-list-animation-in-react-native-7477f004005e](https://medium.com/@birkir.gudjonsson/how-to-re-create-youtube-tv-list-animation-in-react-native-7477f004005e)

&#x200B;

The egg animation is actually not that hard. The biggest problem is going to be physics part of pushing other chicken head circles away if it were to be dynamic placement.

&#x200B;

How I would do it:

1. Get an AfterEffects file of the motion work.
2. Remove everything but the yellow circle on top, egg shell and yellow background at the bottom (the morphing thing).
3. Export as bodymovin json and place as a Lottie View in the background of the whole scene.
4. Do the rest with react-native-reanimated and panresponder and sync it with the lottie playback.

&#x200B;

&#x200B;",1537037973.0
kevinwolfcr,"For the ""easier"" animation, you can use something like [https://github.com/prscX/react-native-spruce](https://github.com/prscX/react-native-spruce). I haven't used it yet but I have it on my todo list.",1537212021.0
VIM_GT_EMACS,"> ok with no pay upfront. Will pay when the project is completed.
​
Why not pay at intervals??",1536956767.0
codingjerk,TL;DR: `alias`,1536958786.0
fragglerock,"Upgrading anything to do with React Native seems to break it.

I just don't bother once I have a stable working system, upgrades can wait for my next project.

",1536948264.0
cmcaboy,Ouch! You will need to log an issue with the expo team on this. Definitely not fun when upgrades come with breaking changes.,1536947715.0
ronforbes,"I banged my head against the wall for 3 hours trying to fix a similar but different error message about the Expo SDK not being present last night. Deleted and reinstalled node_modules multiple times. Hand checked dependency versions. Ported source over to a new project. Switched from Expo IDE to CLI. Felt like I followed every step in Expo’s documentation to ensure I was running things in the right environment. All to no avail. 

Finally, on a whim, deleted Expo Client from my iPhone (which as far as I knew was up to date) and reinstalled. Success. Almost threw my phone through the monitor in a weird feeling of rage-joy. 

(Running Expo 28 in my case)",1537036508.0
ccheever,"Hi--

&#x200B;

I work on Expo.

&#x200B;

Sorry you are having trouble. Can you share your code? It will be easier to figure out what's wrong if you can share.

&#x200B;

Also, can you try making a new blank project and seeing if that works? Just to get a baseline of what works.

&#x200B;

Charlie",1536950288.0
helpinghat,Github is a better place for bug reports. The devs and other people with the same problem are much more likely to find it there.,1537004761.0
jaman4dbz,"I just upgraded a minor version of expo through the CLI nd now I'm getting this stupid screen as well.  


This is worst than template errors in C++, at least those can be deciphered. This error is meaningless! It gives no information on how to solve the problem!!!",1540403696.0
contrarianism,"> Don't use Expo.  

Problem Solved.
",1537088051.0
Veranova,"I think you should read the react navigation documentation. It can be a bit of a painful tool at times, but this is navigation 101 and they have great docs on it",1536964129.0
jacobp100,"You might be better going the other way—React Native in Ejecta.

Whatever approach, you most likely won’t be able to link the ejecta JS to the RN JS without ObjC being in the middle. Just something to consider if you wanted to pick these two libraries because they’re both JS!",1536944591.0
foo-bar-baz-bin,"WatermelonDB just came out, might be worth a look. Nice wrapper for working with SQLite.",1536928249.0
fietspomp01,"Hi there! I haven't used the sqlite plug-in but I've been reading the docs and what I would do is create a separate database file which contains an database connection and all the query's you're going to make.

So if you need the data you can just call the appropriate function in that file and get the data back.

I don't know if that's the best approach but it makes sense to me to do it that way. Opening a connection in every file could be a bit of a hassle (forgetting to commit the db, or close it etc...)",1536924735.0
Rough_Parrot,"We've used react-native-sqlite-storage in our app and the way we've done it is creating a helper which handles everything.

App Initialization -> Check If DB created -> If not openDatabase.


Usage -> Check if query is valid (sql is a string) -> Execute from actions.


OnLogout -> Drop database

Not sure if this helps.",1536929575.0
WhiskyIsRisky,"Do you need something more complex than AsyncStorage?  Depending on what OS you're deployed to that may be backed by SQLite, but doesn't have to be. ",1536927546.0
qwerty_danny,"I've used [TypeORM](https://github.com/typeorm/typeorm) before in Ionic and it worked pretty well. Create, update, and delete operations are better handled by ORMs and eliminate a lot of the boilerplate.",1536932772.0
krpelj,I think that the best pracice would be to make a small RESTfull  API that will handle reading and writing to db. And then you can get all the data from and to the react naive app via get and post requsts. Giving the app direct access to the db would be a security nightmare.,1536919537.0
coolnat,"If you can’t set the border radius to 50%, then you can probably accomplish this by adding an onLayout hook to get the calculated width, and thus calculate your border radius in pixels.",1536899847.0
satchmoto,Thank you,1536900711.0
cmcaboy,What react native version are you on?,1536948039.0
Fossage,"Did you properly link the native code? If so, did you restart your packager after linking?",1536901911.0
Delphicon,"If you're getting those kind of errors it's almost certainly an issue with dependencies. It sounds like you aren't importing the iOS library correctly.

I've done it a lot so if you have a repo or screenshots I could probably figure out what's going wrong.",1536864643.0
fuzunspm,"Just add React scheme from schemes windows and click on shared tick box

Edit: in Xcode ",1536869862.0
nijolas-wilson,"I've built multiple large and complicated apps in React Native, and while I can definitely say your situation is not uncommon while working with RN, it's also worth the trade if:

- you want to target both iOS and Android
- you aren't a native dev

The documentation for RN is some of the best documentation I've ever used. Again, it doesn't always help.

I can tell you for sure that on 0.52 I am happily building custom native modules.

My advice in your situation is to try an older version. Try 0.52 and see what happens.",1536906271.0
schjlatah,Do you mean [warnings like this](https://www.evernote.com/l/AOPHetG5lb5KCINIm6g4iSds1WZfkgEEM8U])?,1536873903.0
davidpaulsson,"Not really helpful for your current error, but for future boilerplate to create native modules check out https://github.com/frostney/react-native-create-library/",1536904479.0
Bamboo_the_plant,"Are you developing in Swift? If so, you'll need to import all the necessary React headers in your bridging header. Here is my example working [Swift Native module for CFStringTokenizer](https://github.com/shirakaba/react-native-cfstringtokenizer/blob/master/README.md) if it is of any use. I haven't touched it in months, so it's not as well structured as it could be, but it works.

Either way, ensure that your selected build target is iOS/tvOS rather than one of the libraries, and perform a build before trying to write any code.

If any particular library still fails to be found, select it as a build target and try manually building it, then running your iOS/tvOS target. If this is what fixes it, then your build settings don't have their dependencies configured correctly and it would be best to init a new project.",1536983817.0
alien3d,"i only try android with native and seemly fail. So i'm going to all native for now. But , if you no need much native library go to react native.",1536890447.0
fisch0920,I would recommend using [expo](https://expo.io/learn) which provides a better experience than that built-in `react-native` CLI.,1536869860.0
redpopcornpanda,"`chocolately` is a windows package manager for installing windows apps (kinda like `brew` on macOS). `npm` and `yarn` both pull from the same registry of javascript packages. I use `yarn` because I find it faster locally. You will use `yarn` or `npm` to add packages you might want to any JS project (including react-native ones).  There really is almost 0 difference to using either package manager for your project. You can even have some devs use one and others use the other without any hassle.

I don't think the package managers will affect the build at all. When you have `yarn` installed, you will usually also have `npm` installed at the same time, since it comes with `node`. When running commands like `react-native run-android`, it starts the node packager and also compiles with gradle and launches to your emulator. When the app opens on the emulator, it syncs to the package. When you have a ""500"" error, it might be that your packager server was closed. So when that happens, you can try `npm start` or `yarn start`. (These commands just run the ""start"" script that is defined in your `package.json` file, so what happens is identical whether you use npm or yarn.) Then you can just reload the simulator (`ctrl-m` brings up the debug menu on android, iirc.)

The reason there is a packager server to contend with is that react-native works by running a javascript bundle in the app, which sends commands over the ""JS bridge"" to native code which displays native views, etc. To actually get the JS bundle into your app during development, the server allows you to easily update via manual reload, or even hot reload (which listens to changes in the files and automatically reloads the bundle on the simulator). This allows you to work a lot faster, since you normally have to re-compile native code, which takes SO much time. It's several minutes for the native compile, so having the packager bundle the JS on the fly is very, very helpful. When it comes time to create a release build, the bundle is created and then placed in the app so that it doesn't have to load through the packager any more.

I hope this helped a bit. Usually reloading a couple times will help resolve 500 errors. If you still get them, make sure you don't close the node packager / make sure that there aren't errors there.",1536851934.0
notseanbean,"As a beginner, use CRNA and Expo. Setting up a complete working environment for \`react-native init\` is fairly involved and fraught. It'll also mean you don't have to worry too much about package managers and the like.",1536854502.0
kbcool,Not used redux-storage but a 30 second glance at the documentation tells me redux-persist is a lot more transparent and less work to setup.,1536829154.0
Hidden__Troll,You're a beast dude good job. ,1536846488.0
helpinghat,Any reason why `react-native-elements` (13k stars) is omitted?,1537007623.0
fragglerock,"It is okay for seeing what exist, but more detail (like is it for android and iPhone) would make it more useful

also there is a lot of old stuff there and it is not really clear what will still be useful.

A lot of work to go through and catagorise nicely though!",1536837496.0
eXilz," Thought this was a curated list, then I started scrolling...

This many content in a markdown file isn’t really convenient to use. 
I’d rather use js.coach if I need to find a plug-in. ",1536855793.0
bookroom77,"Large [README.md](https://README.md) with tons of images that takes ages to load. Not scalable. Might want to redo the readme.

&#x200B;",1536823552.0
DrBopIt,"If you're in the process of learning, don't bother with ejecting yet. There are tons of useful tools that expo offers out of the box that you would just have to wire up manually (via rn link, or manually hooking up), that should be more than enough to get you going. You'll learn 95% of what you need to know, and it is WAY quicker to develop on. 

Our company decided to eject our app early on, simply because of 1 or 2 features that expo didn't offer at the time. I'm glad we did when we did, but I'm also pissed I wasn't able to learn react native on it's own before having to deal with native modules and a bunch of crappy boilerplate to link dependencies (this was when expo was in its infancy). 

If it weren't for those very niche features, we would totally be on expo right now because it's awesome. ",1536804959.0
co_matic,"Expo is probably better for prototyping, but starting with `react-native init` is better for learning the fundamentals and controlling exactly what is going on, imo.

I started early on with Expo and found its error messages opaque and its community somewhat immature. Proceeding without it, I have better insight into what's going on under the hood, I tend to hit up individual library repos for support issues, but I also have to do more work to distribute builds to devices.

Given that you are developing for devices using Javascript, you still need to learn some specifics of the mobile platforms you're developing for. I think Expo encourages the perception of RN being more like developing for a browser. 

I would agree that React jobs for the web are going to be a lot easier to find. ",1536804645.0
gmabber,"I think expo brings a lot to the table, especially at the beginning. If you’re learning, there’s no point omitting expo or ejecting early. Besides, ejecting supposedly leaves you with an app that is almost the same as created with init, so I’d do that only if you needed to mix your code with native.",1536816229.0
demoran,There are a lot of PITA challenges with an ejected app.  Focus on the fundamentals of how to write react native code first.  The rest of it is java and ios noise.,1536838614.0
notseanbean,">In a real workplace where react native is  being used, are developers using expo at all?

Not in my experience.

>Can all things that are lost from ejecting be added in vanilla react native?

I'm not exactly sure what is lost from ejecting, so I couldn't answer for sure.

>As an unemployed developer looking for jobs, would I gain anything by the  knowledge of using vanilla react native (setting up all the tooling,  using simulators, using Android studio, using xcode) ?

If you are looking for employment as an RN developer, then only knowing Expo means you won't have experienced the pain points that come from linking native modules and modifying the build environment (there are *many*). Get your basic RN chops together on Expo by all means, but I would imagine that most apps will want to leverage native capabilities that are beyond Expo, and employers/clients are likely going to want them.

>Not that there is anything wrong with the simulators. But seeing it on my physical device was pretty cool. Can this be added back somehow after ejecting?

I take it you're talking about iOS? While you *can* dev on a real device on iOS through Xcode, the bundling and installation takes a bit too long for it to not to be a drag. I lead on Android on Windows, on a real device.",1536853776.0
pmyb,No. Thank me later 😊,1536864686.0
cmcaboy,"Don't waste your time with expo. The general consensus is that expo is good for 'prototyping', but not for production. imo, if you can't build for production, it is not worth learning.",1536948228.0
TrainedCodeMonkey,My experience has been that you only end up doing React native development because your company decides they want to make your web app a mobile app too. In this scenario the company uses their web developers instead of a mobile developer. I would focus more on React for the web and just get yourself employed. React native jobs are not really prevalent for this reason. ,1536800443.0
HootenannyNinja,I'm finding more and more our clients are demanding apps purely for either iOS or Android (custom business apps) so I've never even given Expo a look in. My experience so far is that most clients will want apps for a specific platform with tie into specific native components so running stuff via expo might work to get your started and learning the platform but more and more you are going to need to get your head around Xcode or Android Studio and the processes involved in building apps using those environments.,1536821695.0
oYYY,we use redux-presist migrations https://github.com/rt2zz/redux-persist/blob/master/docs/migrations.md,1536789714.0
kbcool,"I can answer 1. Don't use Expo so can't answer 2.

&#x200B;

If you use some form of persistence and redux which is what I'm going to assume you're doing based on your question then your upgrade won't touch the persisted data. So if you add a new attribute it's going to effectively be undefined. This is not a bad thing. 

&#x200B;

You can just test for an undefined value in your updated code and either update it to something or just take it as false. Up to you. I tend to stick with just using dual equality for those values. Because undefined is falsy it's all good. ",1536789818.0
Bleached__Anus,What did they break now? ,1536765087.0
SizzlerWA,"Awww man, I just finished upgrading to 0.56 ... :-)

I think it was the Babel 7 update that was the hardest thing about going to 0.56, otherwise it wasn’t that bad.

Thanks RN team for all you hard work!  Great technology. :-)",1536774773.0
edoantonioco,"Does creating a new empty project, copy the files to the new project and install the required libraries on the new project, counts as upgrading my project to 0.57?",1536784035.0
edoantonioco,Hopefully expo will upgrade to this soon,1536784055.0
SizzlerWA,"Here are the 0.57 release notes:

https://github.com/react-native-community/react-native-releases/blob/master/CHANGELOG.md#057",1536776850.0
one_is_the_loneliest,"> targetSdkVersion is 26

That's too bad. Nougat (24-25) is still supported, and I think my old phone (Nexus 6) was stuck on that version, so this will impact install base. However, it looks like new apps on the Play Store *have* to use Sdk 26+, so I guess there's not much React can do about it...

I hope the React Native project will support lower minumum sdk versions.",1536784387.0
MrFriiky,"First of all you need an apple developer account for 99$. It enables you to publish apps for 1 year I think.

You also need an iPhone for two factor identification imo

I recommend you also to read the apple design guidelines so the app review team will accept your  RN builds
",1536735400.0
RedHotBeef,Look into app signing. You'll need a distribution certificate and an app store provisioning profile for the app under your Apple developer identity. ,1536746811.0
ChronSyn,"I don't have an article to hand, but I can tell you how to show a map with markers on.

If you use the `MapView` component from react-native-maps, you can achieve it like so;

    <MapView
      style={{flex:1}}
      showsUserLocation
      showsMyLocationButton
      rotateEnabled={false}
      ref = {map => {this.mapView = map}}
      initialRegion={{
        latitude: 53.796024,
        longitude: -1.566848,
        latitudeDelta: 0.04,
        longitudeDelta: 0.04,
      }}
    >
      {
        my_store_locations.map((item, index)=>{
          return(
            <MapView.Marker
              coordinate={{latitude: item.latitude, longitude: item.longitude }}
              title={""Marker Title""}
              description={""Marker Description""}
              key={index}
              onPress={() => {alert(""Marker pressed"")}}
            />
          )
        })
      }
    </MapView>

This example assumes that you have an array of objects called `my_store_locations` where each object contains `latitude` and `longitude` properties. This is untested, but I do something similar to this in a project already (albeit in a more complex manner due to the nature of the project) so any bugs should be mostly easy fixes.

As for more in depth tasks like locating the nearest or navigating, that's something you'd have to figure out using radius searching, and the google directions api (or similar).",1536752083.0
soulsizzle,"    import * as React from 'react';
    import { TextInput } from 'react-native';
    import { debounce } from 'whatever-debounced-implementation';

    class DebouncedTextField extends React.Component {
        constructor(props) {
            super(props);
            this.state = {
                value: props.value || '',
            };
        }

        handleChange = (value) => {
            this.setState({ value });
            this.reportChange(value);
        };

        reportChange = debounce((value) => this.props.onChange(value), 250);

        render() {
            return (
                <TextInput
                    {...this.props}
                    onChangeText={this.handleChange}
                    value={this.state.text}
                />
            );
        }
    }

    export default DebouncedTextField;
",1536762427.0
Snyggt,"That totally depends on what you wish to achieve. 

If you promptly want to have an input and a debounced function, then have it make a debounced fetch request onChange. Useful when crating a searchfield or an autocomplete field.",1536729072.0
ChronSyn,"Depends on what you're trying to achieve as the end result. Delayed UI input? Delayed state update? Delaying a network request based on user input?

Each has different solutions and requirements.",1536752291.0
ddproxy,"Technically not a denounce, but I think you want a delay?",1536728583.0
tnicholson,"Not much to work with but could be permissions...

Verify this is in the manifest:

<uses-permission android:name=""android.permission.INTERNET” />

[Reference](https://developer.android.com/training/basics/network-ops/connecting) ",1536727138.0
sourtargets,"Are you perhaps connecting to an API running on localhost? Depending on your emulator, it could have a different url - for instance, Genymotion is (iirc) 10.0.3.2 instead of 127.0.0.1",1536735768.0
Veranova,"Some good suggestions here, but try running ""adb logcat"" and checking what the device spits out. Very useful for figuring out low level issues!",1536738232.0
lau2222,"On Android, the underlying net lib adds an extra string to Content-Type header: [https://github.com/facebook/react-native/issues/14445](https://github.com/facebook/react-native/issues/14445) That can cause issues with some API (for example, you'd need a workaround to get the Dropbox API working on Android), so maybe that's the issue you are having.",1536736496.0
heo5981,"I also had problems with Fetch on Android so I installed axios and now it's all working.

A new dependency just for a single post request, two or three at most... I know, it's lazy but I'm just getting started with RN, it's my first app, I think making progress is better than trying to debug everything, although I could learn something if I tried.",1536753864.0
eadz,"I had this issue. The headers are sent as different case, so make sure your backend understands headers in a case-insensitive manner ( per the spec )",1536740347.0
antigirl,Please use a catch and find out,1536743608.0
mostlytoastless,"Aside from permissions mentioned, there are also differences in how they respond to ssl issues like missing intermediate in the chain and such.   The error messages are less than helpful there. ",1536734368.0
LongSleevedPants,"There’s definitely reasons why a fetch request wouldn’t work on both platforms. 

Without knowing the details of your situation I’d recommend looking at the cookies both requests are using. Sometimes cookies can be set by default on IOS, or sometimes you may need to set the cookies yourself.

Also auth can cause some problems between the two platforms. For example android does not handle digest auth correctly, and usually requires an additional library.",1536726125.0
tnicholson,That’s it... shadow effects aren’t nearly as customizable on Android as they are on iOS,1536727571.0
nico__delfino,here is the link btw:  https://itunes.apple.com/us/app/spritelove/id1435480210?platform=iphone&preserveScrollPosition=true&platform=iphone#platform/iphone&platform=iphone,1536698743.0
rajrondo,Nice work my friend,1536731014.0
eevo,"Hey this is cool, thanks for sharing",1537271622.0
nathanchere,Android version please 😁,1544259954.0
Charles_Stover,"I couldn't find a decent start-to-end tutorial on getting React Native set up on an Android emulator in an enterprise setting, as opposed to testing directly on a physical device. I had to write this documentation for coworkers, so I figured I'd go ahead and publish it for everyone.

Feedback greatly appreciated. It's my first toe-dip into React Native, and where better to start it -- at the installation.",1536697338.0
kasimowsky,"I use rn 0.57 & mobx 5.1.0, compileSdkVersion 28 & buildToolsVersion ""28.0.2"" in a **TypeScript** project and it's working.

&#x200B;

*You need to set:*

*""emitDecoratorMetadata"": false,*

*""experimentalDecorators"": true,*

*tsc will generate something like:*

 *tslib\_1.\_\_decorate(\[*  
 *computed*  
*\], BalanceStore.prototype, ""total"", null);*  
*tslib\_1.\_\_decorate(\[*  
 *action.bound*  
*\], BalanceStore.prototype, ""getExpendures"", null);*",1536759440.0
agmcleod,"If you're just looking to get into android, kotlin for sure. If you want to cover both platforms, react native is a good choice. Can also be useful if want to later pick up react for web skills.",1536689236.0
compagnt,"If you learn react native, you already have a head start on reactJS. What is your primary goal for the education?",1536689378.0
kbcool,"Totally different things so not massively comparable.

&#x200B;

Kotlin is Google's answer to Swift (I'm sure someone will yell at me saying it pre-dates Swift but it was a dead language until it got promoted to being Swift's competitor). It is ""scripting"" for Android. So you'll only realistically be able to write Android apps with it.

&#x200B;

RN is for cross-platform (at least IOS/Android, maybe windows, mac etc too) application development.

&#x200B;

As a new programmer who wants a career in programming I'd ditch the company sponsored languages and go for what the world wants which is Javascript - or in other words react native. 

&#x200B;

The only language that ever managed to survive being a shill is Java and that was only because its various ""owners"" over the years allowed it to be  relatively open and didn't sue the crap out of most of the people implementing their own versions (with the exception of Google who actually wanted to pay Sun the owner at the time).

&#x200B;

I certainly wouldn't bother with Swift, Kotlin, Dart, VBScript, Objective C, C# etc.",1536689661.0
cmcaboy,"fyi, responses here will be biased for obvious reasons.",1536863895.0
thekookysurfer,[Lynda.com](https://Lynda.com) is good and you can use your library card to learn it! They have react native on there and from I seen its really good!,1536697638.0
McWipey,"Okay I found it, they have a props called inputContainerStyle that isnt documented. Feed borderBottomWidth: 0 into it and it will fix it.",1536684184.0
NotYourMom132,"If you're not comfortable with v2, just use v1.

I still use v1 and haven't encountered any problem with it so far.",1536683163.0
ChronSyn,"V2 is a lot different to V1 and the API of each differs in many ways.

I built a boilerplate a few days ago that uses react navigation V2. https://github.com/ChronSyn/react-native-mobx-boilerplate/blob/master/src/Navigator.js - that's the navigator file. It should provide some insight how to implement it, but you can always clone the entire project and play around that way.",1536684385.0
notseanbean,"If you're looking for something a bit simpler, you could try [https://github.com/sergeyshpadyrev/react-native-easy-router/](https://github.com/sergeyshpadyrev/react-native-easy-router/)

I wrote a Medium article on how to use it, including a demo app: [https://medium.com/@christianchown/simple-routing-in-react-native-with-react-native-easy-router-6e529866519e](https://medium.com/@christianchown/simple-routing-in-react-native-with-react-native-easy-router-6e529866519e)",1536691003.0
congowarrior,nice little aggregator. Are you using RSS feeds for the app? Is everything stored locally on the device?,1536691196.0
fuzunspm,Could you please guide me a little bit to achieve “trending tags” page.. thanks,1536695186.0
janithaR,Android?,1536726055.0
oYYY,40.5 MB app size? Why so large?,1536696677.0
pratim23,"Hello, Many congratulations on your first app. Would really try it out. Did you use anything to make the ui faster. Like any particlaur ui libraries like nativebase or any ide like deco to build the ui? Would be help to me as i am about to start learning building the apps with RN.",1536724982.0
kbcool,"There is. How to implement it depends on what you're trying to override which makes it annoying but for your example edit the build.gradle in your android/ directory and add the following to the end of your project:

&#x200B;

`subprojects {`

`afterEvaluate {project ->`

`if (project.hasProperty(""android"")) {`

`android {`

`compileSdkVersion 26`

`buildToolsVersion '27.0.3'`

`}`

`}`

`}`

&#x200B;

&#x200B;

If you need to override a specific sdk version you can do the following:

&#x200B;

`allprojects {`

`....`

`configurations.all {`

`resolutionStrategy {`

`force ""com.google.android.gms:play-services-gcm:15.0.1""`

`....`

`}`

`}`

`}`

&#x200B;

&#x200B;

Edit: apologies for formatting. I'm not going to bother fixing it up for such a straightforward example.",1536684828.0
i_got_the_tools_baby,"Gonna have to rain on the parade here. Stars don't mean shit and this is not a quality library.

Some examples:

- https://github.com/GeekyAnts/NativeBase/tree/master/Fonts <-- this causes all of the icon font files to get copied over to the platform when the lib is installed increasing the build output by ~500 kB (tested on Android). Normally you'd only ever need the roboto fonts and one icon font, if you use icons from this lib at all.

- https://docs.nativebase.io/Components.html#picker-placeholder-headref <-- looking at the Android picker. Is it okay to have such a small clicking area on mobile? Why isn't the entire line clickable. This is not good UX.
- Looking at the actual code: 
https://github.com/GeekyAnts/NativeBase/blob/master/src/basic/Actionsheet.js

^ there are many problems there

1. The code is not linted. Ex. State and props should be destructured, ```transparent={true}``` should just be ```transparent```, etc...
2. The component is NOT themable despite whatever was written in the docs.
3. They haven't yet figured out that writing styles without ```Stylesheet``` leads to performance issues.
4. Hard coding the ```TouchableOpacity``` as the touchable component makes this component  not feel right on Android. The touchable should either be passed in or selected conditionally based on platform.

Anyone using native-base is shooting themselves in the foot. react-native-elements seems like the MUCH better option.",1536686609.0
ChronSyn,"Congratulation team! There's a few decent UI kits out there which feature enough components to be called a kit, and you've got one of the better ones.

I didn't know about the nativebase customizer (link in the article), but I'm really glad I know about it now.",1536663395.0
,[deleted],1536676373.0
ChronSyn,"Just to provide a really good use case for switching themes; dark mode and light mode.

Not only is it a usability case, but also an accessibility one - allowing users with eye conditions that make dark, or light, UI's difficult to see to be able to use your app in conditions suitable for them. You could even go so far as to adapt the UI theme based on the ambient light level (from a UX standpoint though and for safety of users with photosensitive epilepsy, make this a toggle-able option that's disabled by default).",1536655573.0
mysteriy,Salary? Singapore is expensive. ,1536643874.0
nickmcsnapz,$625/user/month! Interested to see how many users you guys have. Can't find anything on the app stores ,1536645659.0
swiftpolar,Strictly full-time?,1536654514.0
buihung93,Would you consider React Native dev from Vietnam?,1536666519.0
russeg,"this sub should have a ""who's hiring"" and possibly ""who's looking"" pinned annoucment.",1536666777.0
WarrenBuffering,"Multilinear, wrap it in a view and don't set a height, just padding",1536637000.0
PhantomMenaceWasOK,https://medium.com/@manojsinghnegi/react-native-auto-growing-text-input-8638ac0931c8,1536632987.0
Noitidart2,Since RN 0.53 autogrow textinput on multline inputs is default on both android and ios. (ios got it earlier in RN 0.49 i think),1536665067.0
redpopcornpanda,Btrise lets you do CI and deployment from Mac environments (including xcode builds),1536618400.0
TrainedCodeMonkey,"The cheapest option (in terms of time, frustration, and money) for me was to buy a 2012 MacBook Pro 8gb RAM and 256gb SSD off of Craigslist for $300. 

Hackintoshes are really more trouble then they are worth for the price when you can buy an old used mac for around the same price and emulators are slow, painful, or costly. That's my two cents though. 

Also I wouldn't be so sure you app works on iOS without having developed and tested it on a proper Mac or iPhone either. When I made my app I had to do a lot of switching in between commits to make sure it was stable on both platforms. ",1536623211.0
liuwenhao,macOS in a virtual machine is a good alternative.,1536617403.0
pmyb,"Here's how I did it. Without expo. Sorry. 
1. Dev for android on ubuntu
2. Rent cloud mac for a month $30
3. C&P. +- 10% changes for iOS
4. A week for app store approval
5. Done in 3 weeks
6. Got paid and bought a 2nd hand macbook",1536639522.0
nickmcsnapz,"Buy a second hand Mac Mini, you can get an i7 for about $300. Use your current screen, mouse and keyboard etc. Mac Minis are awesome. I just chrome remote into mine from my Windows PC cos I'm too lazy to unplug USB cords and haven't got a KVM yet. It's on the same network so its smooth enough to code. Works well! Feels like having a Mac in the cloud but faster ;)",1536645954.0
russeg,"when trying to make hackintosh, always choose the components recommended by tonymac. choose what is EXACTLY there, no alternative model or manufacturer. if you do that, you are guaranteed 100% hackintosh success. 

all the people having problems with hackintosh is becuase they are trying to install macos on their existing pc/laptop, which is guaranteed failure if you dont know what you are doing.",1536678585.0
eastern_sun,Thanks. Some interesting answers here.,1536670254.0
alexthe5th,/r/hackintosh,1536618872.0
7hom,"I think I narrowed it down to a geolocalisation problem. In the emulator's chrome browser I was able to load the site but noticed it asked me to allow localisation first.  


Maybe the webview does not show the pop up and needs authorization in an other way?

&#x200B;",1536614668.0
kbcool,"That sounds like you either have two targets specified -  Check your schemes (Product -> Schemes -> Edit:).  Also make sure you have generic ios device selected. Edit the scheme make sure it's not debug.

&#x200B;

Or more weirdly sometimes it's a dependency that's missing or dragging in a second target somehow. I don't think you'll find it's that. Try the above first.",1536595630.0
khl3o,"I built my Apple Watch app in Swift and the associated ios app with React Native, and it works very wheel. I don't think  to build an Apple Watch app with RN is a good choice because the app has to be very simplistic (and xcode is good in this situation) and performance is absolutely vital, there's no time to interpret JS or whatever.",1536624995.0
napolux,"If you search this subreddit you can find some examples...

https://www.reddit.com/r/reactnative/comments/6eg9xb/react_native_apple_watch/

https://www.reddit.com/r/reactnative/comments/63yrt3/only_took_20_mins_to_build_the_apple_watch_spring/

But I've never seen ""complete"" projects...",1536585880.0
dontforgetpassword,"It is not possible to build a Watch app *in* javascript with React Native, as there is no JavaScriptCore on the Apple Watch. You can however, build the main app with RN then use native modules to communicate with the watch. ",1536642881.0
cmcaboy,"Since React Native allows you to build native modules, yes, it is possible. I'm not sure if there is a library already available or not. You may check out the links that napolux provided.",1536592657.0
Kmantheoriginal,"Create a custom text input component that requires the user to double tap before they have the ability to open the keyboard? Not the greatest Ux solution though

",1536587563.0
kbcool,"Where did you get the impression it won't? 

I just tried it then on a scroll view and text input and the text input did not grab the scroll. They will only focus on a touch release event when the initial touch was on them. It's not RTL compatible but I don't see how RTL changes anything.

Edit: I read it again. You're saying in RTL mode the focus is definitely grabbed? That sounds like a bug to me. Have you checked reports ? Tried another RN version?",1536591065.0
LEO_TROLLSTOY,"Mark when first tap happens. When second one happens, check time elapsed and if its short, do action, if not, do nothing and update first tap time. No need for yet another package for the simplest of coding tasks",1536587033.0
-Alias-,https://github.com/dwicao/react-native-double-click,1536580431.0
Noigel_Mai,"That’s a callback that gets fired after every character you input - you’ll probably want some kind of setup where you’re updating a state on text change then a button, where when hit, grabs that text value and hits your backend",1536555609.0
too_much_exceptions,"Hi,
Delaying the request to the backend is generally a good practice.

Imagine sending a request on each ‘text change’. Your could run into some performance issues. As you will be flooding your server with requests

You could for example debounce the request 1 second after input value changed. ",1536564244.0
iamsanaur,I suppose every stroke you have in your input box changes the state of the value you assigned. And it can be called for your backend you can even check and respond using your backend. ,1536569795.0
Omnisovereign,"I would opt to denounce the call, say 1 second after the last onChange. You can use lodash's `debounce` method for easy implementation. Check [here](https://css-tricks.com/debouncing-throttling-explained-examples/) for more explanation on debounce",1536570769.0
Mothafuka,Wow thats cool. Thanks for sharing. ,1536604445.0
ChronSyn,"The android emulator is unfortunately not as performant as the iOS one from my testing. Having an intel CPU and enabling the HAXM extensions provides a significant boost. If you're on AMD, then this isn't an option.

Are you using the XDE to start the project? If you click the cog icon on the address bar inside XDE, you can choose to set the host to either localhost, or LAN, instead of tunnel. Tunnel is good, but LAN is much faster. On rebuilds for example, it takes me around 1.8 seconds to go from rebuild starting to the device starting to load the app (after building and downloading is done). On tunnel, it can take upwards of 9 seconds.

In some situations, I've found that the build or download will seem to hang, sometimes at 100% on downloading, and I'll have to restart the desktop client and the expo device app (ensuring I've fully closed my emulated project and the expo client itself).",1536567735.0
iamsanaur,"I suppose the best way is to use Native Emulators for each respective OS, i personally dont like EXPO and CRNA environment as it is an added dependency you can use node directly to create and run your apps on the native Emulators with all the performance you need. ",1536577464.0
nickmcsnapz,"Check out RN Ignite boilerplate, the folder structure is already setup and it's awesome ",1536540039.0
HootenannyNinja,"\-- src 

\--- components 

\---- common

\--- screens

\--- Utils

\--- services

&#x200B;

This is my non -redux structure.

&#x200B;

src is just my container folder for everything, some devs call it app, either way that's all it is.

components contains individual components, I'll often add sub folders for each screen and then additional folders for sections depending on how complex the app is.

common is for storing commonly used components that either get a lot of reuse or is just to store something like the header, sidebar or a footer.

screens holds each screen which is a component that can be reached from the navigation system. Most of the time for me these are pretty light and draw in their components from elsewhere.

utils folder is where I tend to store things like contsants, common style information and listeners for various functions.

services, is where i store a lot of my custom data handling code for things like network requests, saving data to async storage etc. These get called in did mount and did update functions rather than constantly writing them out each time.

&#x200B;",1536580066.0
ChronSyn,"Do whatever makes you most comfortable.

I personally like to have `components --> component name --> index.js, style.js, controller.js` and a state folder which might have multiple stores. My navigator file sits at the same level as the components folder. All of these are within an `src` folder. That's just my preference though.

There's no best solution except the one that you find most comfortable.",1536539724.0
bamigolang,Start with one and keep changing it until it feels right. That is how I approach things after spending more and more time on reading and thinking about what the best folder structure is. Refactoring is the key.,1536593960.0
johnnyworldclass,"Here is mine :))

\-app

\--components: local component should be here

\--containers: your screen which used to import your component

\--configs: included constants, config, etc.

\--i18n: 

\--actions: your action

\--reducers: your reducers

\--store: should be same level with actions and reducers

\--fixtures: fake API

\-app.js: root start

\-routes.js: put all your routes here",1536892217.0
nickmcsnapz,"Lol wow, feel so lucky that you'll share repo. So kind, such big gesture, developer happy to work for free.

No one is going to work on your shitty idea for nothing, you're basically asking people, who have studied and worked their arse off to get where they are, to work for free for you for the luxury of working on your idea.

This is the one pet hate developers have, people thinking they have a good idea and asking them to work for free and acting like they are benefiting because your idea is so brilliant. News flash, it's not brilliant and no one's going to work on it for free. If you thought it was worth anything you'd offer money. Time is money. You clearly dont think your idea is worth your time or your money, so why would anyone else think it's worth theirs?",1536530812.0
itsboilingoil,Interested in seeing this repo,1538894500.0
fridgefreezer,"So your app is going to... find your keys? How does that work, if for example they are down the side of the sofa or still in the front door?",1536484356.0
spoko22,"I hate to break it to you pal, but your project may be a little too ambitious...",1536484934.0
neomachina2011,"React Native is based on React (obviously), so it would be best for you to understand React first. React Native adds in prebuilt components for mobile apps that you can use straight away. 

I would honestly recommend React tutorials first, as they’ll be easier to get setup and running (with just a web browser). Once you get the basics down there, you can apply all the lessons learned to React Native. 

Unless you’re just wanting to get something done quickly, a proof-of-concept. Then just search for React Native tutorials on using the camera. ",1536496549.0
mikehawkisbig,"My question is how are you not worried about cutting edge AI that is EXTREMELY complicated, but cannot figure out RN. I mean, a simple tutorial search and a couple days and you’ll get the hang of it. Not trying to kick your dick in the dirt, but it seems you’re putting in the effort to learn RN?",1536499935.0
mAk0y00,Check this one [https://github.com/aryaminus/nazar](https://github.com/aryaminus/nazar),1536639012.0
LEO_TROLLSTOY,simply lol,1536520239.0
blbil,"Server side problem. In particular, you should look into using web sockets.

So, both apps would establish a web socket connection with the server, so that the server can push real time updates.


Alternatively, you could use firebase to facilitate real time communication between the apps. Firebase has examples of implementing a chat app.",1536472298.0
Unforgiven-wanda,"This is not necessarily a server side problem. It is entirely possible for two phones to communicate. To that effect I use [https://github.com/alexkendall/react-native-bluetooth-cross-platform](https://github.com/alexkendall/react-native-bluetooth-cross-platform)   
Which is actually great since communication is possible through both Wifi and Bluetooth.",1536482335.0
kbcool,https://www.reddit.com/r/reactnative/comments/4e6hdo/reactnative_p2p_networks/,1536568176.0
fupower,"That’s a server side problem more than react native problem, you should try to communicate your A App with B App with their API ( implying both apps have some API)",1536465674.0
xh0s3,"Use realm, or do it with sockets",1536486136.0
mondocooler,[React-native-sockets](https://www.npmjs.com/package/react-native-sockets) seems promising.,1536641946.0
mondocooler,[Nodejs-mobile](https://code.janeasystems.com/nodejs-mobile) seems to be a very good option too.,1536644361.0
DarthPlagueisTheWhys,"I’d recommend Stephen Grider’s course on React and Redux on Udemy, and then move on to his React Native course. Both solid, and coming from a similar background as yourself his teaching style worked well.",1536466135.0
raznarukus,[Khan Academy](https://www.khanacademy.org/computing/computer-programming/programming) and [Code Academy](https://www.codecademy.com/learn/introduction-to-javascript) ,1536463072.0
,[deleted],1536472978.0
notseanbean,[https://github.com/getify/You-Dont-Know-JS](https://github.com/getify/You-Dont-Know-JS),1536490965.0
honey_pie,removeremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremoveremove,1536485354.0
cmcaboy,"I came from a similar background as your. CS degree a while back, but never used javascript. I had only used java, python, R, etc. You will find Stephen Grider's courses to be very useful. He is very thorough. An intro on javascript may help you as well, especially with ES6. Andrew Mead has a good javascript course on Udemy and Traversy Media has great videos on youtube around the topic. I would highly recommend either.",1536593332.0
redpopcornpanda,"I can't be super helpful but just a thought - why does there need to be a separate reducer for each individual question? Why not just use internal react state and dispatch the response to the global redux state/firebase when they submit? To see all the responses you could have a map of ""question ID"" to the answers or something like that. Generally, I don't think there is generally a use case for dynamically creating reducers. Typically, the dynamic part of the state is the content. For instance, an array of objects or a map of IDs to objects.

In your case you could download data from firebase as an array of surveys and store that in redux. Then for individual surveys, as they fill them out, you handle text change with internal state. When they finish, their response updates the relevant survey in redux/firebase.",1536444850.0
kbcool,"* Can you control the styling? 
* How do I get my settings back out once the user has set them? 
* Does it support persistence of any type? 
* State management libraries?",1536421175.0
jonnyburger,Can you disable hot reload and see if it makes a difference? I found if have static properties on a class somewhere it makes a difference in hit reload mode. ,1536413836.0
realripley00,Are you using Native Base? ,1536426923.0
cagotrebgghju,React native needs something more stable then redux-persist and AsyncStorage itself. ,1536415139.0
radexp,"Hi! I (and the Nozbe team) made this because we found that the standard pattern of using Redux/MobX with a persistence adapter does not scale to thousands/tens of thousands of records. At this scale, the launch time for the app would rise considerably, especially on slower devices. So we made this database framework, based on SQLite, so that everything is loaded fully lazily. But unlike using SQLite directly, you still get full observability (you can declaratively connect queries to components and they will automatically re-render when necessary).",1536404909.0
demoran,"What I'm seeing is more than just a persistence layer.  It's a state management library with persistence intertwined.

It uses a custom query syntax, rather than native javascript.

This seems mutually exclusive with Redux.
",1536413615.0
grantbi,Is there more info on how I can sync from offline? Or how to create an adapter?,1536423271.0
maxgomes92,"Caz ""z",1536450510.0
CopperHook,Check out [Infinite Red Community] (https://infiniteredcommunity.herokuapp.com) on Slack. Great community of react native developers.,1536428250.0
cmcaboy,The Reactiflux discord server is great!,1536593518.0
kbcool,"It's all over the place. It's on the interwebs, it's at meetups, it's in offices. There's plenty of it here.

&#x200B;

I can see by your profile you've already gotten involved in this part of the community.

&#x200B;

Are you asking about more sites and forums etc? If so then it's a good question but you need to update the wording.",1536406150.0
kbcool,You're getting downvoted on stackoverflow for not providing any  information and I just downvoted you here for the same. Don't be lazy.,1536406624.0
,[deleted],1536401126.0
,"Looks like you want something really high but.. anyways you can check [Freelancer.com](https://Freelancer.com) for example, there are jobs for seniors.",1536401038.0
alien3d,"30 dollar is not  much if you can finish in one day period. Find project  basis in your local area instead. 

Since  web based e.g homepage getting smaller and smaller. Try ask company if they want  web based cum android cum ios . Charge around 1k dollar \~ unknown.",1536407772.0
kbcool,Very short article but certainly good practise. You'll find most of the open source node packages that have many contributors do this.,1536405532.0
Jonovono,"So you guys have a bunch of git repos for different modules? I have never liked that approach but it's interesting how you are making it work. I prefer just having a mono repo with everything in it, but still broken up into modules. Any reason why you didn't go that route?

The reason I like that (having everything in one repo - server, client, modules etc) is when you are making changes many times a feature touches many different things at once so this gives a nice way to see everything in one commit that's relevant instead of having to do PRs to several different repos.",1536419307.0
redpopcornpanda,Usually the other way around for me! Also depends what kind of device you're using,1536345151.0
kbcool,"In regards to? Flat out app performance I find IOS is generally faster on similar vintage devices. I don't think this is caused by RN. It's just that Androids tend to be doing more stuff in the background and older models/OS versions tend to be pretty bad at using all the cores available.

&#x200B;

Totally anecdotal though.",1536345740.0
alacret,"Expo is a tool designed to learn react native in a more web confortable way. It make things easier. But rarely an expo application would be production ready. By doing the eject you would be in a more “real” environment. So, my recommendation would be finish the course with expo if it is possible. But then learn to eject since day one, that way you would learn all the issues and the solutions to mobile development ",1536327357.0
LEO_TROLLSTOY,"My advice is never to be dependent on a platform, especially one not under control of the users which is also commercial. You lose short term but win in the long run",1536392357.0
ccheever,"Hi—

I work on Expo. 

You can run Expo directly on Windows; you don’t need to run it in a Mac VM. 

You don’t need to use Android Studio or Xcode if you are using Expo but if you ever do decide you need to write your own native code, you can eject. If you do that, that’s basically the same experience as not using Expo. 

There’s not really a downside to using Expo since it just makes your life easier I think. 

Expo just uses the same react native under the hood that you would use if you don’t use Expo so there’s no performance difference or anything. 

If you have any trouble, you can post in the expo forums ( https://forums.expo.io/ ) and usually there are helpful people there. 

Good luck 
",1536340323.0
alacret,Eject is the process of releasing the app from the Expo environment. ,1536350851.0
AquaHug,I dont think you would need to use MacOS as VM if you plan to use expo. Im currently running Windows + Expo and developing on Iphone X and it works out fine . I had a horrible time trying to emulate an android using android studio and trying to run expo at the same time.  My main issue was the compile refresh speeds were just really bad . Do you have an android device in real life? If so I highly recommend just using that instead of an emulator.,1536421221.0
timezone_bot,"11am GMT happens when this comment is 25 minutes old.

You can find the live countdown here: https://countle.com/xpSBMYIiS

---

I'm a bot, if you want to send feedback, please comment below or send a PM.",1536316447.0
AcidShAwk,"I created a helper library

styles.js

    import { StyleSheet } from 'react-native';

    const Colours = {
      primary: '#000',
      secondary: 'rgba(127,127,127,0.5)'
    };

    const Style = StyleSheet.create({
    });

    export {
      Colours,
      Style,
    }


Then import the lib into the component and use them.

Simple native solution.

My Style helper object also contains some simple styles that I can combine in components


    const Style = StyleSheet.create({
      f1: { flex: 1 },
      f2: { flex: 2 },
      f3: { flex: 3 },
      row: { flexDirection: 'row' },
      col: { flexDirection: 'column' },
      // etc..
    });
",1536314741.0
chazmuzz,Mostly by arguing with my coworkers on the best way to do it.,1536318602.0
kbcool,"Components, components, components......

&#x200B;

Nothing wrong with stylesheet.create. Just don't put your whole app's style into one big object.

&#x200B;

If designed properly your app is made up of ""container"" components which are made up of ""widget"" components (in quotes because it may not be what you call them, to distinguish what I'm talking about here from  HOC and it's not a hard and fast rule). 

&#x200B;

When it boils down to it you probably only have maybe 10 or so widgets - these are things like buttons, text, headings, checkboxes etc. They are where most of your styling should live and each has their own stylesheet. 

&#x200B;

Sometimes widgets need to be different colours etc - mainly you do this by giving them a prop that abstracts that styling - eg a button has a prop called type with a value when set to ""important"" has a red background and bold text. Very rarely you allow a stylesheet to be passed in to augment the base one. They  can be merged together and the newcomer can override styles in the base sheet (I don't really recommend this).

&#x200B;

Your containers are then used to layout widgets. Widgets are re-used over and over. Sometimes a container is also a widget (eg a scrolling view where you can tick items - it may be reused as a todo-list or for editing a contact list and selecting contacts to delete). They also have their own stylesheet but it's all about layout - flex, padding, etc. Very rarely is it about colours.

&#x200B;

You won't have  duplication of styling if you follow this pattern and it's easy to maintain as you immediately know where to look to update a style.  It's not very hard and doesn't need any special libraries outside of what RN gives you. That's the beauty of it.

&#x200B;

When working in a team with a UI/UX designer it's important that they are aware of this pattern. In fact any designer worth their pay cheque designs in this repeatable fashion anyway.",1536317049.0
doko2610,"I'm not even being close to a junior, but here are my two cents:


- StyleSheet is OK enough for me in most cases. If you want to get the styles flatten, then use `StyleSheet.flatten` and they works well.

- Some other libs like `styled-components` have simplified APIs. I personally haven't tried them myself, but I don't see any major advantages over `StyleSheet`.

- Try to keep your components compact. I usually don't let any code files being over 250 LOCs. If two or more components share some same styling properties, separate that styling file and let those components import it.",1536315013.0
demoran,"I inline everything that doesn't need to be repeated.

Creating a style like `row` is nonsense.  It's just an alias for `flexDirection: 'row'`.  To use it you force yourself into an array style syntax, which isn't usually needed.

Having colors somewhere is great.  I prefer to use actual color names rather than stuff like `accent1` or `primary`.  Makes using them a lot easier, though it will require refactoring if you end up changing your color scheme.
",1536335003.0
iratik,"\`styled-components\` theme support provides a natural way to easily access spacing, colors, and typography. I share stylesheet constants between web and native, and extend styles when implementing something that requires a CSS rule that isn't supported on native. I also absolutely love being able to make small reusable style components that provide abstractions over multi-level \`View\` hierarchies.",1536365173.0
HootenannyNinja,"Just finishing up a large RN app as Tech lead on a large team. Best approach I've been able to find especially in this environment is to do the StyleSheet.create approach at the bottom of each component. I'm also recommending at least something similar with regular react apps these days as it makes working across teams a whole lot easier than doing massive SASS/SCSS compiles.

While this might feel a little odd especially if you are moving over from webdev it's honestly the most efficient way to handle styles without everyone going mad.

To handle consistency I wrote a heap of base styles that are part of an importable lib we use on most components, this contains basic style information such as colors and a few default rules for things like spacing and typography. Everything else though is handled at the component level.",1536364907.0
notseanbean,"Don't know if this is optimal, but this is what I've got. I have a re-used visual config object with colors, images, fonts and the like:

    const config = {
      colors: {
        grey: '#545454',
        success: '#85A249',
        // etc.
      },
      images: {
        achievements: require('../assets/images/achievements.jpg'),
        // etc.
      },
      styles: {        
        container: {
          flex: 1,
        },
        splashHeading: {
          fontSize: 32,
          lineHeight: 40,
          textAlign: 'center',
        },
        submitButton: {
          color: 'white',
          backgroundColor: '#3049BD',
          borderRadius: 6,
          textAlign: 'center',
          fontFamily: 'opensans',
          fontSize: 18,
        },
        // etc.
      },
    };
    export const config

then I import, compose and customise on a per-component basis

    import config from 'config';
    
    const {container, arrowLink, splashHeading} = config.styles;
    
    const styles = StyleSheet.create({
      container,
      arrowLink,
      splashHeading: {
        ...splashHeading,
        marginBottom: 20,
      },
    });
    
    export default () => (
      <View style={styles.container}>
        <Text style={styles.splashHeading}>Heading</Text>
        ...
      </View>
    );

The config object also has other app-wide reusable properties like text strings, URLs and the like",1536319272.0
Veranova,"StyleSheets are the right solution. They're designed to be more efficient for react native and in the future will be able to implement the flyweight pattern internally, giving another performance boost.",1536320528.0
bytesk,"No need StyleSheet import no problem dude

Just this, and u can export or not
const styles = { 
   txtColor: {
        color: 'red
    },
   txtColor2 : {
       color: 'blue'
    }
}",1536327748.0
matt_hammond,"Global style constants have spacingSmall, spacingMedium, spacingLarge, borderRadiusSmall/Medium/Large, fontSizeSmall/Medium/Large etc.

This is imported on the component level where I keep the component style above the component definition.

    import { constants as C } from '../styles' 
    const S = StyleSheet.create({
      wrap: { margin: C.spacingSmall, backgroundColor: C.colorPrimary}, 
      ... 
    })

    export default class MyComp... ",1536335940.0
Neitzches,"Styled components all the way. Global typography, colours, and overall theming done in a declarative way. Depending on how you compose your styles you can even control global padding etc. I find it easier to read.

For smaller things like changing a margin to offset the text away from an avatar I just use StyleSheet. Inline styles are bad, they're created every time, getting sent over the bridge each time. ",1536525408.0
whet_phartz_69,Make the view containing your images with borders slightly bigger than the containing view and set overflow to hidden so that the outermost borders are clipped off,1536307293.0
kbcool,borderRight: amIendimage ? 0 : 1,1536305702.0
kbcool,"React Native (RN) provides the ""correct"" technical solution(s) already. Device Independent Pixels (DIPs) and flex based layouts.

&#x200B;

Sounds like what your problem is that you don't know what to do with the extra vertical space. Typically if you have a list you show more items. This isn't really a RN problem as a UX/UI issue.  Pretty sure you're not the only one with this issue.

&#x200B;

Usually I'm worrying about not enough space like on the iphone 4 but too much is a nice problem to have.",1536263240.0
kbcool,"Nice. Any screenshots or demo available of the new and updated components yet? 

&#x200B;

Normally I say don't use UI components with RN but this is one which could convince me to change my mind. Very well written, presented and comprehensive.",1536250547.0
TheNoim,"I like rnp, but the ripple effect *at least on ios* doesn’t look like a ripple effect. ",1536251614.0
drowsap,"What does this look like on iOS? I imagine it will feel a bit unnatural, kinda like Gmail.",1536251744.0
kdesign,"Try to use `adb logcat` which will give you a detailed real time log while trying to run the Android app. If there’s an exception, it will appear in there.",1536239739.0
kevwhy,"FINALLY.

Turn out I found the the Facebook android sdk auto updated to 4.36.0 and it stopped the app for running. ( Not related to firebase )

Forcing the app to implement with 4.34.0 solved the issue.

ref: [https://stackoverflow.com/questions/52113549/app-getting-stuck-with-e-com-facebook-internal-attributionidentifiers](https://stackoverflow.com/questions/52113549/app-getting-stuck-with-e-com-facebook-internal-attributionidentifiers)

&#x200B;

Thanks everyone. I hope it is useful for others facing the same issue.",1536245910.0
rodrigoelp,"This can happen when the app is unable to load a native module. It returns null before the jsc gets the chance to run properly.

Check your dependencies ",1536239384.0
Noitidart2,Are you using native-navigation v1 module by wix? Try putting the app to the background then coming back to it.,1536244608.0
WouterDS,"My god, I wasted 12 hours on this. Locking `com.facebook.android:facebook-android-sdk` to `4.35.0` fixed it indeed, thanks man!",1536587088.0
DiscDres,"I had a similar issue. It turned out I had my GPS turned off, when my app requires a location upon start up. I changed my simulator settings and it then worked. 

&#x200B;

Also do the whole 'rm -rf node\_modules && npm cache verify\` then run \`npm install\` and run the app again. ",1536240686.0
mbrochh,tl;dr: Flutter is still too young and too buggy.,1536227358.0
alexandr1us,Flutter is really shitty for building UI,1536343024.0
gmabber,Flutter would have to be a lot more mature for me to even think about picking up this fringe Dart language. ,1536394500.0
kevwhy,Why not both? You probably will need to build your own native module if you couldn’t find one.,1536232922.0
mbrochh,"yea, it's good.",1536227637.0
kbcool,"Sooo....do those paths exist?

&#x200B;

When you say clone did you zip it all up, use git, other?

&#x200B;

You're likely missing something, or there's a hard coded path there somewhere. Open up Xcode and start looking around for home directories names that don't look like yours.

&#x200B;

Are you sure you don't get compile errors if you scroll back up past the error you're sharing with us.",1536250988.0
alien3d,"Please at least provide 

Location :  Exact Place / Remote 

Scope :  Android Only/ IOS only, BOTH.

PRICE :  Please don't tell here just equity,most will ignore immediately.

&#x200B;",1536205659.0
-Alias-,"500 what? 

That's like less than a days work for a good company... You'll probably get a good dev for a day with 500. That's UK monies / devs.",1536240433.0
russeg,"Hi /u/hazeust,

I have difficulty finding an iMac Pro for 500. Maybe you know of any resources?",1536230644.0
kbcool,"Two different js engines just like in different browsers. Not sure what your problem is? You just need to keep an eye out for the differences. They're like 99.999999% compatible but I understand it's a royal PITA when they don't match up.

&#x200B;

Worse is debugging when JS is run on your browser. That's where divergence becomes greater.",1536174871.0
Noitidart2,"Its not that bad since a year ago at least. Just few small differences like in js runtime which are not documented, but just keep working like normal and when bug comes up you'll find them. Only major difference is the way shadows are done and overflow, both of which you'll find feasible solutions real fast. (elevation and you'll find was to work around lack of overflow:visible on android - i hear this might even be solved in 0.57)",1536246168.0
Kmantheoriginal,"HeadlessJS is friggin hard to understand, so is running processes outside the JS bundle or only at the entry point and trying to communicate data to a app that hasn't mounted yet ",1536173695.0
part_robot,"To answer the question in the headline; sadly, I often have to fix it or build it myself. I started learning Android/Java for precisely this reason. I try to release back to OSS when it’s possible/warranted.",1536174944.0
agmcleod,"The main thing that bugs me with android is view clipping. If you position something negative within a containing view so it sticks out, it'll get clipped on android, but not iOS. There's work arounds for it, but it's such an unexpected behaviour.

I think there is merit for picking up native development if you want to do a project long term. But for getting to market, it's hard to argue against the development speed you get with RN, which takes you to the solution pretty well.",1536180596.0
stinkyhippy,"I went with the second solution, definitely seems worth it, came with a few performance improvements as well.",1536183418.0
alien3d,"For me,it's not just android.Just my mistake when client keep asking more future. Use the right tool for right problem. You can code quick prototype with react-native and expo, but a little bit time using Android. ",1536196121.0
ChronSyn,"Most phone verification systems use SMS as you're probably aware. This is powered by a service such as Twilio - you fire off a request to your server with some details, which then calls the Twilio API to request an SMS to be sent to a specific number. You generate the code, and store it along with customer number in a database.

When this is delivered to the device, you have 2 options; manual entry, or SMS listening. In both cases, you fire off a request to your server which then checks the customer number with the SMS code they received, returning true or false, and potentially other metadata needed to proceed with authentication. You then update the DB record for the user to invalidate the code, and to change a 'has verified' flag from false to true. You app state then updates with relevant details and the UI should adapt to this (assuming you're using an observer pattern).

If you're doing SMS listening, you'll need the READ_SMS permission. There are libraries out there that can do listening for you, but they won't work unless you've got the ability to edit your gradle and/or java code (so Expo for example, can't be used unless you've detached).",1536175373.0
kbcool,"Try it on a real device that's not your mega powerful Mi6 (which apart from RAM is pretty run of the mill these days BTW - also I doubt the admob implementation is multi threaded so lesser devices won't be impacted much). 

&#x200B;

Emulator/simulator behaviour really doesn't tell you much. I've got apps that make my MBP turn into a helicopter trying to cool down on the IOS simulator but won't even make an iphone 4s break a sweat.

&#x200B;

Lastly: Why ads? You don't seem too fussy about who you use so it's probably an afterthought. Unless your app goes viral you're prolly going to make cents per day. Why not launch without and build up a loyal following before annoying them with ads.",1536179693.0
demoran,"I use React Native for the same reason I use javascript: I see a future in it.

Javascript has its problems (which are partially mitigated by Typescript), but its not going anywhere anytime soon.  

React Native solves a real problem in an pragmatic way.  It brings a lot of value to the table and has good community support.  In its space, it's the real winner.

I'm betting on React Native.  That doesn't mean it doesn't have its own fair share of problems.  Everything does.

I didn't really know react or redux or really even es6 or typescript before diving head first into React Native.  My background was more .NET.  

Now I regard javascript as my primary language (because I find myself trying to declare variables in C# using `const` instead of `var`).  Most of the time I'm actually using Typescript, because daddy needs a safety net.",1536164486.0
kbcool,"Product. It has a huge amount of flexibility compared to other cross platform solutions. I know, I've been through a few. If something I need doesn't exist there's plenty of documentation that will take me through how to create it myself.",1536161396.0
CptAmerica85,"Having written apps in both xamarin and react native, the latter is a much better product. Community support is A LOT better, expo is a great option for getting up and running, and the overall product just feels so much better. Xamarin is clunky, unstable, and feels like beta/alpha level as a platform (which is sad since it's been around for quite some time now).

My 'xamarin' experience is with xamarin.forms, which is the 'cross-platform ui' approach.",1536162546.0
xrpinsider,"There are a number of reasons I use React Native instead of Xamarin, Android, Flutter:

- React Native is being used by a lot of people all around the world. The likely hood of people having some sort of same mistake as you is really big. Also libraries are available for everything.

- It has been in development for years now so all the ‘child deceases’ are mostly gone.

- It’s easy to use, and the documentation is great. The learning curve for React Native is way easier than, for example, Android.

- the option of using Expo is great as well.

If you already used React prior to using React Native, yes it is way easier to get started. But that is not the main reason I use it.",1536160629.0
cagotrebgghju,"You can't make not trivial production apps with react-native if you have zero native knowledge. You will have to deal with build issues, performance problems, current api limitations, bugs in native part of react native, etc... ",1536164263.0
agmcleod,I think that's the primary reason I use it over native code. It's also harder to sell native projects to clients to produce for two platforms.,1536163292.0
edric_garran,"I use react native because it's the only reasonable option. I don't want to develop two separate apps to support both android and iOS, and RN is the only native solution that works for both.",1536175020.0
ChronSyn,"Both.

I've wanted to make mobile apps for several years. Hell, at one time I'd made some (very poor) mobile apps with Delphi (FMX framework). When I moved to JS in 2014, I moved permanently and never really looked back to using Delphi again because my interest was now focused on node, and view engines, and jquery, and websockets, and all the good stuff that came with node that I also couldn't easily achieve with Delphi.

I didn't learn even AngularJS until late 2016, and Angular 2+ in early-2017. I learnt react in early 2018 when I started my current job. Part of that involved some basic react native work, but it wasn't anything extensive (though it was a case of using a really old version of RN due to technical limitations).

I like the RN community and the ecosphere surrounding it. I like that I can use code that's very similar to what I've been writing in Node and front-end JS for over 4 years. I like that I can build a website with react, and use very similar principles, albeit not with the same rules, to produce a mobile app. I can use fetch in both, and reuse almost all of my functional code, including state management to produce a mobile app or website.

I like that expo exists and that I don't yet need to know how to build using Android studio - that's something I can do later on (and it's definitely a priority). I like that it's had such support from big names. I like that I can design components and within the space of a few hours, have something functional. I like that it has made me a better developer, and that it also helped me learn some key concepts that apply in React.

It is not a perfect product by any stretch of the imagination - no such thing exists. It is simply because it allows me to do something I couldn't do before, something I've wanted to do for a long time, without resorting to 'messy' systems like hybrid apps/cordova or learning an entirely new workflow and language. It does also mean that I'm bringing more value to my employer should they ever need me to write more mobile apps alongside our dedicated mobile developer.",1536222001.0
udfalkso,"I use it because it's just so much easier and faster to build cross platform apps.  

Of course part of that ease and speed comes from the fact that I already know JS (and CSS, not to be ignored!) well.  But I actually learned React originally in order to use RN and I'm so glad I did.  ",1536182676.0
akiwarheit,"Native developer here. Huge projects took 6 - 10 mins to build, even with hot reload. Fell in love with how fast it is to develop using RN. It's a good product hence I invested time in rewriting my existing apps to use it. I would stick to native if I can write it faster though.",1536202973.0
one_is_the_loneliest,"React Native is what got me into React in the browser (I use AngularJS a lot). I used it because I needed a cross-platform product that for a simple app. It was really easy to get started with, and it seems the community is much stronger.

I don't particularly like JavaScript or non-native development (though my full-time job is heavy JavaScript, so I know it quite well), but I was able to get a simple app up and running in an afternoon, and I can't say that about any other framework I've used. Because of that, I'm moving my projects to ReactJS to keep mindshare all on one platform.

It's pretty good. It has quirks, but in general it's been *far* less painful than anything else.",1536186451.0
Noitidart2,When I first got started with RN it was due to React. But I stayed with it due to other reasons I learned after using it.,1536192215.0
captainbarbell,"I plan to use react native because its the easiest path for a web dev like me to transition into mobile app development. I know a little java, but i dont know why i dislike it. ",1536213382.0
guevesala,"Before react native, the performance of mobile javascript frameworks were less than desirable. You took a hit in terms of performance as everything was essentially a web view. Mobile apps produced using mobile javascript frameworks before react native were very slow. They could not really compete against native iOS and Android apps.

React native changed the entire landscape of mobile javascript frameworks. It was no longer a web view and it compiled down to machine code so it is fast now!

Now you can develop a cross platform mobile app that runs as fast as native iOS and Android apps if not faster!

So NO. I did not use react native because I already knew it. It simply is a great product, not just good.",1536231906.0
deneb971,Try The Google places API ( not entirely free but I believe they give you a set amount of free API calls every month along with a $300 trial credit),1536159266.0
koobawuah,"This could be what you’re looking for, [locu api](https://dev.locu.com) ",1536229462.0
okendokenn,"Hello redditers!

OP is here.

My company have been working on lots of react native projects recently and we have extracted some sort of a starter project that helps us to bootstrap development of mobile applications. 
We decided to give back to the community and open sourced it.

I would appreciate your feedback and comments!

Thank you",1536137678.0
PrestigiousSouth,Gracias,1536139171.0
AnyMolasses,Open-source?,1536141184.0
WhichResolution,"Can you do some custom integration? I've looked expo, good ux, but I'll probably need some changes for my app.",1536141951.0
ExcellentPossession,"I'm very new to react / react native (started some hours ago), but not to programming. To learn as fast as possible, I usually look at best practices pre-built apps or starter kits. ",1536143363.0
NiceBluebird,"> End Product cannot be Sold

What does this mean on the license page?

Does that mean if I make an app using this and someone wants to buy it I have to say no?

The source code itself is MIT licensed, can't I just use this for free then? What am I buying on the main site exactly?",1536184544.0
ChronSyn,"I see that it got answered, but just so others who might visit know what the problem was, it wasn't being bound properly.

Protip #1 is shorthand binding. Any `on` event (such as `onPress`, or `onLongPress`) can be bound like this; `onPress={()=>{ //do something } }`.

If you don't bind, it will automatically trigger as you've seen.",1536134611.0
notseanbean,"Hi. [ChronSyn](https://www.reddit.com/user/ChronSyn) is correct, but the currently accepted answer isn't quite right. The problem wasn't that the function was unbound, it was that the handler was being passed *an invocation of* a function, rather than the function itself, i.e.

    <TouchableOpacity onPress={this.login()} ...> // wrong
    <TouchableOpacity onPress={this.login} ...>   // right

It's a common newbie error, I know I made it.

(The accepted answer does work, but only because the `bind()` returns a function. The `bind()` itself has no real effect)",1536137846.0
kbcool,"\> Where even is libRNCamera.a in the repo? 

Step 3 says where where it is. 

&#x200B;

Have patience. If you're going to develop mobile apps you're going to need to do this a lot and learning to get around Xcode, Android Studio and gradle files is paramount.

&#x200B;

When you first installed react native camera from npm did you run react-native link ? It's important because it's the automated version of the manual steps above and for 90% of cases should work (if you're using Podfiles that's another case but you won't be). Read about what it does here:

&#x200B;

[https://facebook.github.io/react-native/docs/linking-libraries-ios](https://facebook.github.io/react-native/docs/linking-libraries-ios)

&#x200B;

Lastly. Once you've either run react-native link or followed the manual steps you actually need to rebuild your project. Shutdown the simulator and run react-native run-ios again. You can't just reload here as your actual native code has been updated. Reloading just reloads the javascript side of things.",1536140908.0
kirisafar,"You need to be on a Mac, have Xcode installed.
You can't use native components on Expo unless you have ejected the project.",1536140525.0
tical29,"I ended up using expo, and their camera component.  Documentation is good and I was actually able to get it to work!",1536127906.0
ChronSyn,"If you're using VMWare or similar, you need to set up a folder that is then mounted inside the target OS - this is done from the settings screen of the VM image inside VMWare. This folder could be your projects folder. I believe it can even be a drive root, but I absolutely don't recommend that purely because of possible corruption issues. I don't know if virtualbox can do the same, and VMWare have free options so they might be worth investigating.

From within OS X, you'd open your project within your code editor inside OS X, and start the iOS emulator as per standard procedure. I'd imagine this would work, and shouldn't be that slow as it's reading from the same physical disk.

Just as a side note and something to be aware of, I believe Apple's EULA and licensing requires you to own a physical Mac (anything from a mac mini up to their top-tier desktop system) to be allowed to compile an app towards iOS. It's not my place to say don't try it (it's definitely something I'd consider doing), but just that it might be worth checking out the legalities to see if you need a physical Mac if you're targeting iOS (or whether Apple have changed their stance and allow a VM to be used).",1536102673.0
redpopcornpanda,You can definitely push data with firebase cloud messaging. What do you mean by bring the app to the foreground? iOS definitely won't let you open the app unless the user taps on it,1536098180.0
kbcool,"Totally not how mobile apps work on any platform.

&#x200B;

If you share your requirements it might help but you can't just pop up applications when you feel like it on android or IOS. I know it's entirely possible on desktop but I'd still be uninstalling your application if it did this.

&#x200B;

I'm going out on a limb  but I'm guessing you have scheduled pickups. A push notification is fine here and if the courier chooses not to react to the push notification then too bad. If your customer wants the app shoved in their face then you need to tell them too bad that's not how it works.",1536099840.0
ChronSyn,"The API's that run at the core of iOS and Android do not allow applications to bring themselves to the foreground, and there's absolutely no way around it unless you build your own Android distribution. In the same way that many browser prevent certain actions without being triggered by a user action, mobile OS's don't allow certain actions without user actions. It's all part of good UX and ensuring that control of the device remains with the user as much as is reasonably possible.

Background tasks support can be done, as can push notifications. The best you're likely to get is opening the app when the user clicks a notification and using deep linking to bring them to the relevant screen.",1536102989.0
MetorFinis,"Not really. You can use something like Sentry to catch errors ( but you should see the red screen if you installed a debug version).
But I believe that your problem is that you are using v8 specific code somewhere in your app. RN runs a different JS version, but when you debug your JS code runs in chrome.
Start by removing console.log(this) from your app.",1536089825.0
punchingrobots,"This might be what you're after:

https://developer.android.com/studio/command-line/logcat",1536090262.0
Kmantheoriginal,Logcat with the '*E' flag and grep your app name. You also may need to learn some Gradle commands like ./gradlew app:dependencies ,1536091741.0
RnRau,run 'react-native log-android',1536112201.0
Hidden__Troll,run  `adb logcat`,1536097517.0
tghmember,"Hi, I don't know if Shoutem provides a way to easily export data to a format firebase can import. (like JSON?)

I'm also not sure what your question is: if you don't like to pay for Shoutem you should indeed find an alternative.

A good question is if a cms is needed in the first place (firebase isn't a CMS last time I checked). You could also build your own back-end with for example NodeJS, but this would probably take a long time to learn/write.

Firebase is probably your best/easiest solution.

Let me know if there's anything else I need to clarify.",1536604045.0
realbriank,Have you looked at the docs for styling and flex box in react-native?,1536081456.0
creambyemute,"Should they be on the same line/height horizontally?

Add a view with style flexDirection: row
Then add your two images and put a style of alignSelf: flex-start and alignSelf: flex-end for example.",1536076214.0
TexMax007,"You could also try having the container use flexDirection: row;

justifyContent: “space-between”

That should push the contained items as far apart from one another as they can go.",1536094036.0
ChronSyn,"This is sort of off-track, I'll try and provide some more insight into a possible solution in a few hours.

But... If it's an issue with login, why don't you persist a session token to asyncStorage? The cookies may still be sent, but they shouldn't* contain any data that you haven't explicitly provided.",1536076951.0
bzzhuh,"A and B are basically the same thing though, since most people probably use basic authentication here with the basic authentication token stored in async storage. I don't think there's anything wrong with it, when you consider the alternative is having the user log in every time. ",1536085936.0
morenoh149,Are you sure omit is being disregarded? If so please open a new issue on the issue tracker. I don't know if this is the behavior in the latest RN and that issue is closed for discussion. If you KNOW then you need to open an issue.,1538079172.0
kbcool,"Views don't scroll. Think of them as rectangles  (although you can make them into lots of shapes - [https://codedaily.io/tutorials/22/The-Shapes-of-React-Native](https://codedaily.io/tutorials/22/The-Shapes-of-React-Native)).

​

ScrollView is like a window. It can contain lots of other things like Views and Text.

&#x200B;

Edit: I prolly should say you can put other things in a normal View but it won't scroll like a window.",1536061541.0
kbcool,"Unless you're up to date with ES6, React, Redux etc then I'd stick with the objective of trying to get a hello world app working rather than your full festival app otherwise you'll just get overwhelmed with very quick.

&#x200B;

Absolutely nothing wrong with this guide here if you just want to see an app running:

&#x200B;

[https://facebook.github.io/react-native/docs/getting-started.html](https://facebook.github.io/react-native/docs/getting-started.html)

&#x200B;

Next step is to make sure you're up to speed with ES6 Javascript then get familiar with React concepts. From there learn about state management - redux, mobx etc, then navigation within your app, then worry about offline, push notifications etc etc.

&#x200B;

&#x200B;",1536061283.0
sourtargets,"Not much info to go off here, but assuming you have a skeleton app set up I would start with setting up navigation and state management. My personal favorites for those would be Redux and React Native Navigation (wix), though other alternatives exist as well.

After that you could pretty much just start developing and add other dependencies as you run into situations that require them.",1536060128.0
notseanbean,"I started with React Native coming from a similar place from you. I did my initial proof-on-concept work by cannibalizing a navigation example. 

If you want, grab mine and have a play. It's fairly simple, write up and code here: [https://medium.com/@christianchown/simple-routing-in-react-native-with-react-native-easy-router-6e529866519e](https://medium.com/@christianchown/simple-routing-in-react-native-with-react-native-easy-router-6e529866519e)",1536064111.0
lefooey,Check out Stephen Grider’s courses on Udemy as well. They’ll certainly help you get up to speed on many of the React Native tools and conventions. ,1536123810.0
ChronSyn,"Pretty cool. Personally, I just split my VSCode terminal window and have `adb shell input keyevent 82` entered into it to bring up the dev menu (because I definitely don't have the patience for shaking my device and hoping for the best).

Whenever I need to reload, I just press up and enter. Doesn't affect global hotkeys and doesn't require a third-party program.",1536220760.0
kbcool,"What is this? What am I looking at? Who are you? Why do I want to be following the link?

Downvoted for wasting my time for not providing the above.

Isn't there some sort of posting etiquette guide ?",1536058813.0
notseanbean,Hi - how would you want articles adding? Via a PR on the Github repo?,1536054097.0
Ben_johnston,"Just use webRTC

https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API",1536015149.0
dumbSavant,"Hey William, why does the scrollview not get the scroll event without the height and the safeareview. I've tried using pointerEvents=""none"" on the View with the absolute fill to no avail. ",1536177460.0
jerrymiii,add some tests,1535978447.0
ChronSyn,"It's nice, but it could be emulated using a `<ScrollView>` and custom component consisting of text, image, etc. Still, it saves some time and in some cases, will significantly improve mobile UX by a huge amount over drop-downs.",1535967217.0
danielkov,"Did the author get paid per byte? The article literally repeats the fact that you can use the same code-base (not even mentioning any of the quirks). Most of the claims are pretty weird too, like performance claims without providing code-base for tests or even an explanation as to why it would work as such.

> web apps that are written using React Native

Using React, perhaps, or `react-native-web`, but that is not really the go-to choice for web app development.

> you can access the app even with poor Internet connectivity

What does that have to do with RN?

> React Native is the most popular language in the world right now.

You called it a framework, a language and a library in the same article.

Do at least some basic research before posting about a topic.",1535964488.0
kubelke,„Support third-party libraries” 😂,1535961174.0
jerrymiii,why to choose,1535978351.0
agmcleod,"They have a support section on their website, one of which links to forums: https://forums.expo.io/.

> So where do I complain about how retarded it is?

Don't. Either offer a constructive bug report, or say nothing. Just complaining about not liking something is not helpful. Constructive feedback or a detailed bug report is helpful.

Those warnings are legit. It mentions 16.4+ for react, you have 16.3. It could also be conflicting dependencies for versions of react. So no, package.json was not fine :). The fact you're still seeing warnings afterwards could mean that if you have conflicting versions of peer dependencies for other packages.",1535910697.0
russeg,don't blame expo for your incompetence.,1535920328.0
ChronSyn,"You've not explicitly answered this, but does the project run with those warnings or not?

I only ask as I run an expo project that also has similar warnings and it's safe to ignore them in many cases.",1535933777.0
-Alias-,https://forums.expo.io/,1535974116.0
cagotrebgghju,"Google play link: https://play.google.com/store/apps/details?id=com.punksta.apps.sortgame
All animations work with nativeDriver so app fps is about 55-60. Maybe it would be interesting example of Animated usage for someone.",1535905848.0
Mozorelo,"What's the drag and drop part? I don't get it
",1535921416.0
Veranova,"I suggest you either post more details of what exactly is going wrong, or you go and search their GitHub issues. Best place to find out how well maintained a project is (and often answers) is to check the project GitHub.

This question is way too vague to get a useful answer.",1535904544.0
jerrymiii,no issues,1535978496.0
janithaR,"I just used it in one of my projects about 2 weeks ago. I had 0 issues. You without being more specific, I can only imagine you're either not following instructions correctly or just copy pasting things and praying it would work.",1535902209.0
lefooey,"Specifically prohibited.  See 3.1.5(b)(ii)

https://developer.apple.com/app-store/review/guidelines/",1535865366.0
Interloper949,These tutorials helped me a lot when I was getting started - https://learn.handlebarlabs.com/. I typically use fetch to make requests but I'm sure you can use axios as well.,1535821119.0
anonymousmouse2,"Fetch is built in, I like it because I don’t need extra dependencies. You can still use axios if you prefer though. It’s all preference. ",1535821562.0
WarrenBuffering,"Doesn't work for more complicated fetches, but the Redux API Middleware is pretty helpful for wrapping your more basic fetches",1535830907.0
NotYourMom132,"Check the component you're on.

HMR doesn't work on functional component.

Also if you change redux/navigation, it also will restart the whole apps.",1535814400.0
lovemeslowly,Don't depend on a person they might not be available all the time - but a vast ocean of help i.e *Google* & *SO* are there. You just need to ask the right questions and bingo most of the things are already answered. ,1535799455.0
muhammadarsal,Would make a good plot for nerd porn,1535796391.0
misterhtmlcss,Did you get anyone?,1535806531.0
AddMeOnReddit,"While the other comment had a point, Google is your friend, feel free to PM me if you run into anything Google can’t solve. ",1535808177.0
bytesk,"you no need mentor,

which is  u can learn in official website, google if u stack

&#x200B;

and learn, learn, learn, i trust, u can!",1536140554.0
,[deleted],1535816918.0
ckorhonen,"No issues with Formik but would stay away from anything which tries to store the entire form state in Redux (eg. react redux form) - those tend to be a source of performance issues, weird bugs and race conditions.  ",1535798478.0
mtaon,"Never had any performance problems with forms. It really depends on the form but for better user experience (and possibly performance), would it be possible to split the form into multiple pages?",1535795339.0
notseanbean,"Performance will be fine, but you should spend a decent amount of your planning time on form *design*. On mobile, you lose a lot of screen real estate to the keyboard, and determining how your users will go about traversing a large form will likely be your major pain point (and like others have said, avoid Reduxy forms).",1536911044.0
pxrage,"not sure about your stackoverflow post, but in the above code:

    const post = await response.json();
    this.setState({data:posts});

you have ""post"" vs ""posts""",1535762274.0
Meowish,"1. You probably meant `const posts` instead of `const post`
2. Theres capital C in `componentDidMount`
3. In renderItem function there is lower case `view` and `text`

If you used any basic code editor you would've caught these mistakes.",1535796623.0
Meowish,"In you Stack Overflow post callback for `this.state.posts.map` doesn't return anything. You need to wrap return value with parenthesis. Like this:


    let posts = this.state.posts.map((post, index) => {
        return (
            <View key={index}>
                <Text>Title: {post.title.rendered}</Text>
            </View>
        );
    });

",1535799005.0
jestzisguy,I am just wrapping up a project based on react-navigation and was wondering what else was out there for something _simpler_.  Thanks for the article - definitely going to check this out next time around!,1535730956.0
cagotrebgghju,"Some thoughts about react-navigation. I've been using it about 1 year. I think they develop it in a strange way. Version 1 was in beta a lot of time and it was full of bugs before and after 1.0.0 release. Then they removed flow types ""to speed up"" releases, now they are removing redux integration from core for the same reason. Discussion and implementation of onVisit onLeave callbacks took more then half of year. It's so basic feature. It looks like they don't have enough time or skills for such project or the architecture ideas(navigators, routers) was wrong in general from the beginning.",1535906649.0
kbcool,"Why not ditch navigators full stop? It's not that hard to just keep track of it yourself.

&#x200B;

V2 is far better than V1 BTW but some of your criticisms still stand. I can think of a heck of a lot of worse ones including some swear words for V1.",1535726222.0
agmcleod,"While I have no real idea if react-navigation does this either, my main thought is that the navigation should leverage what options the platform has available. So a push route should be a standard animation based on the platform. Likewise there should be standard stuff for on top/modal type screens.

I'm curious with this being on the JS side, in your experience how the performance is for the animations and transitions?",1535727706.0
paulsia,wonder what this guy is up to.,1535716956.0
Noitidart2,Great question. Im eager to see an answer.,1535713772.0
fridgefreezer,"Not exactly my use case, but can’t you just get the html of the site and using regular expressions or however you want, extract only the divs you want / exclude the divs you don’t want with the ads and just render the html string in the webview? Rather than load the site directly from the url I mean. I guess if your loading a site or sites that structure differs all the time that wouldn’t work.",1535715852.0
BlenderDude-R,"If you know the addresses or iframes you need to remove in a webview, React Native’s WebView has a prop called ‘injectJavascript’. [Documentation](https://facebook.github.io/react-native/docs/webview#injectjavascript) This can be used to add JS that can either block the http calls to the ad networks, or you can just DOM remove the iframes directly. DOM removal might be helpful if the pop ups are not ads, but still annoying. 

I haven’t used this solution for ad blocking before, but I have for page manipulation and such. One thing to note about webview is that it is treated as insecure by most of the popular websites (Facebook, Google, etc.) and will disallow users from logging in. This is because you could steal their credentials through the same ‘injectJavascript’ prop. ",1535726345.0
kbcool,"Have you tried reading the docs?

&#x200B;

You can whitelist certain addresses:

[https://facebook.github.io/react-native/docs/webview#originwhitelist](https://facebook.github.io/react-native/docs/webview#originwhitelist)

&#x200B;

You could also disable javascript if you don't need it with javaScriptEnabled

&#x200B;

They will go a long way to disabling ads. Whitelisting is probably the most effective if you know that the content on that site is always going to come from a certain domain or set of domains. It's essentially what ad-blockers do but in reverse (they black list ad sites).",1535705747.0
tusharkhatiwada,"You can use Push Notifications on your Expo app too. No need to eject.
https://docs.expo.io/versions/v29.0.0/guides/push-notifications
",1535700001.0
anewidentity,It's called detaching ,1535697300.0
musyilmaz,"We used this method with a customer and integrated onesignal. If your project requires those native dependencies, what I can advice is start without expo and dont worry about detaching. ",1535698691.0
anuragdadheech,AsyncStorage maybe,1535692323.0
captainbarbell,Wont html5 localStorage work?,1535714267.0
IvanDist,"What do you mean finally?
Hasn’t this been explained over and over? Plus, those concepts aren’t that hard to grasp.",1535711742.0
Dualblade20,"Did you comment on your site....on your own article with an account called Stackchief? [Seems Legit](https://imgur.com/a/x9rD8wy)

&#x200B;

I also found this, which means either you stole this article and set the posted date manually as before this person posted in December, or he stole it. Either way, something is pretty fishy here.  
[https://www.linkedin.com/pulse/learn-reactjs-props-state-mushfiqweb-mushfiqurs-blog-shishir/](https://www.linkedin.com/pulse/learn-reactjs-props-state-mushfiqweb-mushfiqurs-blog-shishir/)

&#x200B;",1535697498.0
kbcool,"Use redux here but mainly out of habit. Once you're trained into thinking their way it's hard to get out! It's almost like a cult! There are plenty of alternatives, you could even use React's context API.  Mobx just happens to be second most popular.

&#x200B;

Redux does work with react-navigation. However, it doesn't need to. As far as I'm concerned it can use any type of state management it wants as long as there's not too much bloat and it can be persisted between sessions because I don't interact with it's state and nor should I. I just dispatch actions (or more simply just call functions to make it do stuff).

&#x200B;

You don't have to use third party state management libraries. You can just use globals or module level globals. It's all the same really (queue a bunch of rabid idiots who have NFI how anything works to try shoot me down). The important bit is how productive you are.",1535716053.0
JohnnyHopkins77,Rip the bandaid off and use apollo for graphql,1535719352.0
ChronSyn,"I use mobx, with mobx-persist, mobx-react and mobx-utils because it's simply the state management library I learned first, and that makes things so seamless for me. I export a singleton (i.e. a new instance of my state) from the state, which means I can either inject or import it into my controller, and the state is consistent across the app.

Being able to automatically save to asyncStorage with mobx-persist makes saving and loading (via hydrating) user settings extremely easy.

I'm informed that Redux has similar equivalents, but I've never had any success learning Redux so I can't comment on it, but a colleague uses Redux with react-navigation without a problem.",1535717126.0
davidpaulsson,"We use redux together with react-navigation. Why won't they play together? Redux or mobx or whatever can play nice with it. We use a HOC that spreads params as props for screens that needs it. 

I don't really understand this post question I think but use a state management lib like redux (or similar). You'll need it. ",1535716283.0
bytesk,"well thanks for your reply in my post, this just sharing about redux

&#x200B;

thanks dude",1536140319.0
kbcool,"Thanks for sharing. Just for the sake of providing alternatives I use this one:

&#x200B;

[https://github.com/bamlab/generator-rn-toolbox](https://github.com/bamlab/generator-rn-toolbox)

&#x200B;

Does splash screens, icons and as you can see much much more around CI/CD etc.",1535706007.0
realbriank,"Sounds like someone with no real clue is making up a deadline based on what they ""feel/think"" it will be. 

Welcome to the rest of your life as a dev, lolol",1535661161.0
tizz66,"I mean 9 screens doesn't really say much about complexity. I'm building an app right now that so far has about 15 screens, but it's taken months to get to this point so far... because those screens include authentication, registration, customizable aspects, an internal browser, searching and so on.

I think all you can do is be honest with your boss and try and explain that they are underestimating the time required. If they won't listen, there's not much you can do other than move on.",1535657901.0
kbcool,"It's a bit hard to tell from what you've said but  full time with an app architecture in place and decent, pretty different designs a screen a day would be a bit much to ask so I would say you're not slow at all. Everything is hugely subjective though. 

&#x200B;

A week from scratch with full jest tests, properly componetised app design and a good looking visual design I wouldn't expect you to get even a single screen done in a week. If anyone tells you different they're expecting you to work 38 hours a day and cut corners.

&#x200B;

It all depends is the answer but 9 screens in a week is a lot.",1535661283.0
losingthefight,"Slight rant coming, but this thread highlights some major pain points I have (I am a technical C-level with an iot startup, so that's my perspective).

To add on to the thread, in a true agile environment, the person doing the work is the one who says how long it will take, not the PM, not the Scrum Master, not the Product Owner. That's the ideal. Too many organizations say ""We're agile!"" but use it as a way to try to get more stuff done rather than fully embracing the fact that software is hard and there's a lot of ambiguity.

I assume they have daily standups? Are you a part of them? That's the time to bring up issues like not making deadlines, etc. And it's supposed to be a ""Look, this is what is happening"" without people yelling or getting pissed. If not, did you tell your supervisor you were running behind of the forced-upon-bs-deadline? Regardless of how that deadline was set, it's important to keep your supervisor and team in the loop about your status.

People wonder why it's hard to find good devs. It's because we treat them like shit, make them feel like shit for learning (which means, yes, you will be ""slower"" than a more experienced dev) and then they say screw it. It pisses me off because we, as an industry, are shooting ourselves in the foot.

&#x200B;

So yeah, maybe you are slow, or no, maybe you aren't/ Tough to tell without knowing more about the project. But truth be told, if you are new to React Native, then yeah, you should be slower than someone who's done it for a few years. ",1535672576.0
xrpinsider,"You are not slow. May I ask, how many hours a week do you work? Or do you just need to finish the sprint tasks by the end of each sprint?",1535657905.0
Mozorelo,A screen a day is my max speed,1535690798.0
cwhaaaales,"Yo it took me like a day just to learn redux and get it working with API calls in the app when I first started. That deadline is super unrealistic especially since you're only part time. Whatever they're paying you it's not enough.


For what it's worth I'd say look into Native Base. Makes creating basic form and cards and list views a lot easier. 

A basic login screen would look like this:


    import React, { Component } from 'react';
    import { Container, Header, Content, Form, Item, Input } from 'native-base';
    export default class FormExample extends Component {
      render() {
        return (
          <Container>
            <Header />
            <Content>
              <Form>
                <Item>
                  <Input placeholder=""Username"" />
                </Item>
                <Item last>
                  <Input placeholder=""Password"" />
                </Item>
              </Form>
            </Content>
          </Container>
        );
      }
    }",1535657712.0
abadabazachary,"you need to outline the work before you do it.  you need to write it down.  you need to break down each task into a series of sub-tasks.  then you can prove to your boss why it takes the amount of time.
 
doing this will speed you up.  without this technique it is likely that you are slow.  


",1535676328.0
PhantomMenaceWasOK,"Sounds like bullshit. Your boss is an asshole or clueless. I'm scoping a project for an intern that involves only one or two screens, and I'm projecting it will take 25-30 days to get it feature complete. 

I mean that factors in CRs, ramp up/learning and bug fixing, but your boss should be accounting for that too. The project is actually native but I don't think that changes anything by much.",1535680331.0
artnos,"Have you done this before you should t practice at work. I build proof of concept before i promise anything, i hate being in those situations. Its east in your head but when you do it its not easy",1535681974.0
Neitzches,"Like you said, you're a part-time student developer. You're not going to be as quick as a seasoned mid-level developer. Task estimation should consider that.

Sounds like screen complexity wasn't considered either. This is not on you.

You could ask to be included in the estimations so you can say how long it takes to do a thing. If you they allow you in, you'll probably underestimate the work. So add a day or 2 to each item. ",1535701245.0
TheJosephCollins,"For our sprints at my company the developers get together and all agree on complexity, unknowns and factor that into how long it should take. Example we look at if we have the API before hand or is it still in development as I am on the UI team.  If a page includes all CRUD operations and endpoints thats usually a day to day and a half of work. Sometimes it goes quick and sometimes it goes longer.  If your boss is pushing back on you then he probably has no idea what he is doing and is making tons of false promises to clients which he then turns around and pushes you to meet these false expectations.",1535927075.0
alien3d,"I manage an intern, when I saw her doing something registration link x page to my page to quick, I know she don't know a damn thing and copy paste from the internet. 9 layouts for a week is easy, but to create 9 layouts with back integration and testing is hard. 

&#x200B;

Rule of developer is simple. If you said is 1 week it really 3 weeks.. If one hour it will be 3 hour. 1 x 3.",1535682295.0
VIM_GT_EMACS,redux sux ,1535660446.0
russeg,"if you are getting paid $100/hr, it is expected you should be able to do that in a week.",1535696351.0
BlenderDude-R,https://github.com/chirag04/react-native-in-app-utils this library has worked much better for me. Way more full-featured,1535671919.0
kbcool,"Won't be a problem on the Play Store.

​

With IOS only a percentage of apps are actually  tested by real people. Most are just put through automated tests and a person intervenes if there's suspicious behaviour or content. I've even had apps passed in minutes when they're obviously so backlogged they couldn't be bothered and they know you've got a good pass rate.

​

Basically the answer is who knows. Try your luck if you really want to be on the store with a half complete app.",1535641635.0
saugoof,"I generally just use cheap, somewhat out of date Androids and iPhones. The sort of hand me downs that people no longer need when they get new phones. For most things they work perfectly well. I mostly don't even have a SIM in them, I just use WiFi. None of my apps require calls or SMS.

There are some things the iOS and Android simulators don't do well, like camera access (not working on iOS and very slow and low quality on Android) or getting past our office proxy. So having a phone is just simpler and it's also a good ""sanity"" check that what works on the simulator really works on an actual phone too. ",1535631688.0
nickmcsnapz,"If you're doing Android dev you need an Android device, or 3.. an old one, a slightly older one and a new one. The old one preferably with the lowest SDK your app supports, a slightly older one with an SDK version around the middle of your minimum and target SDK, and the new one with your target SDK. Hopefully all different brands too.

Android is a bitch ",1535632090.0
SolidR53,"In my office we have couple of android devices and all recent iOS devices.

I personally have iPhone X and Google Pixel. You can get the Pixel 1 for about $150 off ebay.

Going with bloatware devices could be problematic (locked in super cheap ones), because you won't get latest Android anytime soon etc.

Find a device that runs stock android and gets updates as soon as google gives them out, nexus/pixel/oneplus etc.

https://en.m.wikipedia.org/wiki/Android_One",1535688363.0
alien3d,"In my previous testing, yes you need each phone on android .Some call it as fragment. Like react-native-chat it did work on emulator but not on real device. Ios just a simulator not emulator so you still take risk testing. A reserve of ipad size screen should be needed. ",1535688825.0
scttmthsn,More fucking udemy spam.,1535641877.0
careseite,Nice referral link across some ad pages mate ,1535647217.0
fuzunspm,is this outdated or not? i'm having very hard time to find an not outdated course online,1535738826.0
realblackntan,just bought the course on this recommendation ...  ,1535637971.0
,[deleted],1535639725.0
Farva85,I'm working through his react course before starting this one. Excited to build something for my mobile!,1535642039.0
Taterboy_Legacy,"Haven't taken this course, but if you look at his YouTube channel it gives you a good insight into his teaching. He is really smart and teaches you in a way that is easy to digest no matter your level. I needed some help regarding Laravel and deployment to AWS and was surprised to find a good amount of videos on the subject from his youtube channel. 

He has a wide variety of videos that would be a good starting point if you didn't want to immediately shell out for this course.

Great guy!",1535642456.0
wearing_art,I've taken some of his courses and liked them all. Definitely worth trying out any of his courses to get a good foundation. ,1535643369.0
russeg,"react came and everyone lost their mind. then fb introduced rn  and people went ""whoa awesome!!"" and now it was cool to do mobile in js  and react/jsx.",1535601242.0
dwise97,I honestly hope it turns out to be a better experience than RN. God please...,1535582394.0
kbcool,"Nice tutorial on a more advanced topic than just getting started in RN.

&#x200B;

Can I ask is there a particular reason why you didn't use

[https://github.com/reneweb/react-native-tensorflow](https://github.com/reneweb/react-native-tensorflow)

&#x200B;

It would (seem) to be easier for most to get this working in their own project with it. It's got out of date libraries, I've got a PR in to update the Android one. We're at the mercy of Google to update the iOS one though.",1535557779.0
nickmcsnapz,Nek minnut your app gets bought for millions to sensor dick pics,1535862229.0
beeseegee,"There’s an elevation style prop - it’s a little finicky compared to iOS shadows, but you can get pretty close.",1535568637.0
Noitidart2,Only way is to use \`elevation\` style.,1535743076.0
russeg,"i think the hate on expo is because crna. now when people have problems with rn they blame expo. then they eject, then have more problems. then they just use init method and find that is actually what they wanted in the first place.

expo is cool and they are nice people, but fb should not have made crna the recommended way. ",1535558834.0
ChronSyn,`import { hell } from 'nope'`,1535562442.0
brentvatne,hey that's my window!,1535568841.0
xrpinsider,The building represents the progress of Expo.. (I love Expo btw),1535552974.0
boki345,Why does Expo get such hate? Am I missing something?,1535585392.0
vcamargo,"oh boy, it makes sense now",1535557567.0
jomaras,":) [https://www.google.hr/maps/@43.7333613,15.8922492,3a,75y,127.55h,89.09t/data=!3m6!1e1!3m4!1smr6tQji4soh-3gYFVXfzTA!2e0!7i13312!8i6656](https://www.google.hr/maps/@43.7333613,15.8922492,3a,75y,127.55h,89.09t/data=!3m6!1e1!3m4!1smr6tQji4soh-3gYFVXfzTA!2e0!7i13312!8i6656) ",1535601759.0
kbcool,ROFL,1535556417.0
NotYourMom132,For real??,1535555214.0
kbcool,"You've probably deleted the line that was down the bottom that looks like:

&#x200B;

export default App;

&#x200B;

or it may have been part of your class declaration:

&#x200B;

 

export default class App extends Component 

&#x200B;

In index.js there's a statement such as:

&#x200B;

 

import App from './App';

&#x200B;

What this does is imports from App.js a class that was exported as the default class. If it was a plain export like:

&#x200B;

export class App extends Component {}

&#x200B;

Then it could have been imported as such:

&#x200B;

import {App} from './App'

&#x200B;

The error refers to a component being referred to without it being exported or imported properly.

&#x200B;

&#x200B;",1535550631.0
notseanbean,(2c) production level apps need professional design,1535550595.0
kbcool,"When I started off I used [https://avocode.com/nachos-ui](https://avocode.com/nachos-ui) ...turned out to be a bad idea as the app itself grew a design language that nachos couldn't accomodate.

&#x200B;

I think component libraries are fine to use if you plan on sticking with what they do and how they do it. If you need your own look and feel at some point you'll start kicking yourself.",1535544758.0
fietspomp01,"You can do it with something like this:

    componentDidMount () {
    const {navigation} = this.props;
    navigation.addListener ('willFocus', () =>
      // run function that updates the data on entering the screen
    );
    }
",1535548735.0
kbcool,"Are you saying the first tab first time is rendering the change but when you come back after visiting the second tab it's changed back to prior?

&#x200B;

Are you sure you're not changing state by either moving to the second tab or from something you're doing there?

&#x200B;

The other possibility is that what you're seeing is another copy of that first tab. React Navigation prior to 2.0 with tabs and stack navigators mixed up used to just keep making copies of screens. It's easy to check for. Your tab (screen) has a component name that's unique so fire up [https://github.com/facebook/react-devtools](https://github.com/facebook/react-devtools) and search for your component name. If you see multiple copies then that's probably your problem (you can also check the content of each if you're not convinced). How to fix that . is a bit harder to explain and might need you to paste some of your code.",1535543777.0
Noitidart2,`react-native link react-native-gradient-view`,1535542449.0
MusikSein23,"If you have cocoa pods already in your project, react-native link will just add the target to the pod file and will not automatically link the binaries! If you use cocoa pods, don’t forget to  run pod install in the iOS/ folder of your project.",1535569984.0
bacon_rock,Try to do *react-native upgrade* on the root of project folder this will regenerate xcode files and have a try again or delete npm modules and reinstall again,1535516591.0
kirisafar,Why are you using `sudo react-native run-ios`?,1535535205.0
gurs1kh,I use it for a project of mine and it is pretty good. You just need to make sure you have the proper webpack config (considering you're using that) for particular react-native packages and to make sure you test on both native and web side by side while developing to make sure changes that work in one don't break the other,1535513161.0
RnRau,"If you are interested in this space, maybe also keep an eye on https://github.com/vincentriemer/react-native-dom",1535520407.0
Veranova,"I've never experienced a package which can't be used. JavaScript is JavaScript.

That said, when adding native libraries, you definitely need an understanding of the native build systems. iOS isn't much better for that and both have training and help out there of you search for the right things.",1535528988.0
kbcool,"What you are experiencing says more about Android development than React Native (RN).

&#x200B;

I'll probably get flamed for telling it straight again like I always do but you can't create serious apps in RN if you've come from a javascript web background and have no intention of getting your hands dirty in native code. If you don't want to do it then stick with making web sites. So be prepared to learn if you want to succeed.",1535544253.0
creambyemute,"No problems here either?

",1535534500.0
kbcool,"You're going to get some highly opinionated answers, there's no right or wrong. The opinion here will likely slant towards React Native (RN).

&#x200B;

If you've already developed the native iOS app then unless you're already experienced with ES6, React etc then you're probably going to take about the same amount of time to develop on Native Android vs learning RN. The huge benefit boost would have been if you did both iOS and Android from scratch. That being said if your experience is good you'll go on to either ditch the native version (less support) or do your next project in RN.

&#x200B;

For UI and most basic data processing RN is vastly superior to native development. It's so nice to use what is essentially CSS and javascript was born to be an event handler so hands down for UI it's the winner.

&#x200B;

Where it struggles is in dealing with a large amount of data  like photos or videos or where you need to use a lot of native features that don't have existing bridges written for them.

&#x200B;

So short of it is - Facebook, Uber, Whatsapp, news, ecommerce app etc use RN. 3D shooter, speciality camera app, image editor etc then go native.",1535533183.0
NotYourMom132,"I do.

RN is more fun but has higher learning curve.",1535542130.0
nickmcsnapz,"I do. I love RN more than native Android, this is after native Android dev for 5 years and RN for over 1 year now with a few mid range apps published in RN already. 

I never want to go back to native Android or iOS, but I can't imagine doing RN without that native experience. So many little RN gotchas would have killed my soul if I didnt know the native side, especially with linking. 

But in saying that, native dev has WAY more gotchas, more annoyances and, imho, way more of a learning curve. 

RN is a wrapper on top, which makes it a lot easier. ",1535862686.0
dannieboi,@LongJohnnyE How does the the react native project know to import the files with the \*\*.\*\****native.js*** instead*** of*** .js suffix?,1535498543.0
bitpurity,"This is a great article. Thanks for sharing!

I've been using this for about 2 years at my company and I've run into 2 problems that reduce developer productivity.

1. Being in a non-git tracked folder, `*.native.js` tests will not be picked up by `jest --watch` and they can't be run reliably from the main folder since they have different dependencies / babel setup. So that rules out the use of any code editor plugins that support running jest for you.
2. VS code and Atom do not recognize when importing a module refers to the web version or the RN version during indexing so the included tooling doesn't give a developer help to find a definition of said module. This is only a problem when you have a very large project though.
3. Same as above, but with native modules as well.

Are these issues you've run into or solved?",1535544446.0
cmcaboy,"Your not the only one in this situation. This is standard in RN's current state. Ton's of build errors and breaking changes with every new release. On the plus side, you will build a lot of character as a RN developer.",1535473561.0
saugoof,"RN is the most stupidly brittle environment I've ever worked with. It breaks because it's Tuesday and your desk faces in an easterly direction and you had two sugars in your coffee today instead of one.

The worst ones are where you add an npm package, which doesn't work for some stupid reason, e.g. it uses a deprecated function in another package. Then you remove this package again but your build is still broken.",1535494104.0
vcamargo,"You're not the only one I have two clients calling me every single day asking for updates on the app I should be building and I simply don't know what to say anymore. Cryptic error messages, tons of broken stuff. And for every hour I spent writing the actual app I spent at least three times as much trying to fix something related to Android, Gradle, different versions of libraries vs different versions of RN. It is really a frustrating experience. ",1535490777.0
demoran,"After a while, Android will just break for no good reason.

What is happening there is that gradle lovingly updates packages to incompatible versions.  

You need to lock that stuff down using [Nebula](https://github.com/nebula-plugins/gradle-dependency-lock-plugin).

You also want to ensure that you're not accepting yarn/npm's default `^` package.json dependency matching.  Remove the `^` and stay on the package that works.  Just because some random maintainer thinks they haven't introduced breaking changes doesn't mean that they haven't.",1535491587.0
coldWalk,"Since the current state of React Native is a tempermental piece of trash it helps to think of your app as two pieces.

1. The Phone layer (all the RN code that makes it run)
2. The actual source for your app (screens/api etc.)

By keeping all of your source in one self contained folder from the rest of React Native you can sort of just copy it and the package.json everytime there is a problem. Very often when the problem on startup wasn't there when you left off it's React Native's fault and rather than trying to diagnose the problem and apply a bizarre solution you can just create a new app instance, move in the source code and be fine.

It's not perfect but neither is React Native.",1535487966.0
SolidR53,"The android aspect of React Native is especially bad.

But my kit has been very stable so far, and many people inside and outside he company I work for use it.

https://github.com/ueno-llc/react-native-starter",1535502041.0
ivanmartinvalle,"I too have gotten into theses states before. However, because I commit often and in good states, I can always look at file history to see what broke stuff. A concrete example: I noticed I accidentally upgraded to gradle 3 via file diffs and that broke everything. I just reverted that and was back to working. Rinse and repeast.",1535475583.0
SizzlerWA,I have no issues with iOS. I avoid Android for now.,1535481451.0
heo5981,"I've been trying to build my first React Native app recently. I decided to create an app that wraps Tatoeba (a multilingual dictionary) because it doesn't provide an app. Unfortunately, it doesn't provide an API either so I went for web scraping.

I spent at least two weeks trying to implement react-cheerio but after a lot of time I noticed that it had some dependency problem. The newer version of React Native changed something and that broke react-cheerio.

I then found that react-cheerio is based on react-native-html-parser and decided to use only that to scrap.

Everything was working until I actually need to scrap the data.

While I was testing (with just a dummy test data) it worked wonders but with the real page from Tatoeba it just didn't work, looked like it was too much data to scrap in an app??

Anyways, I went for a desperate solution. I'm mainly a Python developer so I created a web app with Django just to scrap Tatoeba and return the data as JSON. I hosted it on Heroku's free tier.

Then I can access the web app from my RN app and show the scraped data to the user.

All of that because I wanted to be able to search for sentences on Tatoeba and see the results in a mobile app.

It's working now, I just need to make the UI better looking and I have a lot of difficulty with that because I don't know much about design.

But boy, I was really frustrated...

Bonus - I dropped Expo completely.

When I started with React Native, I was using the Expo app because at first, it seemed very hard to do it without it.

But after some days I noticed many problems.

* Expo would complain that the development server was not running on port xxxx.

* Expo would not updated the app when I restarted the server. Many times I manually cleared all data from Expo from the Android settings.

* Although it worked at first, someday the hot realoading simply stopped working and if I tried to use it, the development server would stop (or at least Expo would say so)

So I got very frustrated and decided to use only react-native cli command after setting my Android device and adb.

So yeah... You're not the only one frustrated with RN.

It was good reading and replying to this because I can know that I'm not the only one having troubles, it's good to be able to relate.

As I keep practicing, I'm having less and less troubles but I know something will happen in the future that will give me trouble again but those are learning experiences, we grow with them.

Good luck on your projects!",1535492730.0
perduraadastra,"I feel your pain. This seems to be mobile development in general. It seems if I put some working Swift project aside for a month or two, everything breaks after I reopen the project and need to update xcode to support a new version of iOS, etc. It's infuriating. It seems like a substantial amount of work as a mobile dev is just grinding out busy work to stay up to date or fighting the tools.",1535493407.0
ejpusa,"If you are programming for Android learn Java. It’s not hard. 

If you are programming for iOS, learn Swift, it’s not hard either.  

Apple is a trillion $$$ company, they have put millions into Swift and their own mind blowing UI/libraries. It’s worth knowing. 

Plus, it’s fun. :-)

",1535503934.0
Mozorelo,This is why I use expo to develop. It saves me so many braincells. ,1535484108.0
silencer07,"My company chose react native to develop our mobile app. I specifically asked for a week to learn about react(while doing the plumbing stuff)

I used ignite V2 with nativebase as boilerplate. after generating the project using ignite V2, i will need to update the react-navigation version as the current one pukes some error. Then all good until all of a sudden react-native-scroll-view decided to not work...

Yep for the whole week what I did is fight the technical problems that will arose while developing.... and design the login and splash screen.

Note that for the mean-time I asked to prioritize IOS dev for the mean time and we try android later. I think I made a good call not to do any android dev for the mean-time.

Since react-native is breaking from time to time, I also decided not to update to the latest react-native, I will wait when the 0.57.x or the latest stable version ""stabilize""",1535505659.0
Codefiendio,"I’m grateful you posted this. I am starting my second app. The first one was a partially completed app about a year ago. I stopped on it after dealing with a million headaches with the google react component. 

I think people posting on here about “forgetting the native” part are right. A lot of my frustrations is understanding the errors or trying to track them down in the stack trace. Seems next be to impossible with some errors that get triggers via react internal events. 

I am sure once in learn more into the systems and pick up more on the native settings (Xcode) it’ll get easier, but right now it’s a fucking headache. ",1535510737.0
Delphicon,"I think it's important to remember that React Native runs inside of an existing mobile app. What's inside of those Android and iOS folders matters a lot, those are full-on Android and iOS projects and they're ultimately the app that gets run. When you run ""react-native init"" it's generating the most basic project it can but that's still pretty complicated and ""react-native link"" is a VERY hacked together way of adding the native dependencies to those projects. Facebook doesn't really help matters by how little they've updated the native parts of the project. 

The harsh reality of working with React Native is that, unless you're using Expo, you're building Android and iOS apps using an Android Gradle project and an XCode Project respectively. All that complexity is still there and you have to engage with those portions of your project to support non-trivial features. It's both a blessing and a curse of working with React Native because that coexistence with the native code is what makes it both hard to use and powerful as a cross-platform tool.

You need to figure out how the Android project works or you're always going to be at the mercy of Facebook's weak tools. It's actually not that complicated for what you're doing and I can help you with it if you comment or message me some specific questions. I'll try and cover the basic points of integration on Android here. I copied these from the AudioExample on react-native-audio's GitHub page, this should be all you need to change from the original to get react-native-audio working.

```
// settings.gradle

// The name of the android project, it's not necessary but it's good practice. It will default to the name of the folder (android)
rootProject.name = 'AudioExample'

// All modules go here
// node_modules/react-native-audio/android is a module by convention
// It's bad form but that's how Facebook decided we should do it so oh well.
include ':app', ':react-native-sound', ':react-native-audio'

// If the module is not in an adjacent folder you have to tell it where the folder is.
project(':react-native-sound').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-sound/android')
project(':react-native-audio').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-audio/android')
```

```
// app/build.gradle (not the other one)

// Bunch of boilerplate and stuff for running React Native

dependencies {
    // Just adds *.jar files in libs folder as dependencies
    compile fileTree(dir: ""libs"", include: [""*.jar""])

    // Adding React Native
    compile 'com.facebook.react:react-native:+'

    // Dependency on the other modules
    compile project(':react-native-sound')
    compile project(':react-native-audio')
}

```

```
// In MainApplication.java

// Import the Package files for react-native-audio and react-native-sound
import com.zmxv.RNSound.RNSoundPackage;
import com.rnim.rn.audio.ReactNativeAudioPackage;

// Add the Packages to the list of Packages
// Packages are like plugins for React Native, it's how you can add more native code to it.
@Override
protected List<ReactPackage> getPackages() {
    return Arrays.<ReactPackage>asList(
        new MainReactPackage(),
        new RNSoundPackage(),
        new ReactNativeAudioPackage(),
    );
}
```

```
AndroidManifest.xml
// Next to the other permissions add
// Recording audio requires permission from the user and this will ask for that permission
<uses-permission android:name=""android.permission.RECORD_AUDIO""/>
```",1535556153.0
Interloper949,This is how I feel when I'm building for Android. I was constantly running 'gradle clean' because of random errors. The iOS / xcode experience has been much smoother.,1535474994.0
shamaryarde,"Try using yarn instead of npm install for the errors with npm packages.
If you are using create-react-native-app, linking does not worth with it.  You have to detach the application.",1535483417.0
alien3d,"It is not about react only. It all language and dead repo don't get updated. 

Open source doesn't in github doesn't mean it was free to develop .It take time,cost to develop.

Please  give at least ""thanks,donation"" after using their repo at least  they can maintain it.  

Even big  boys like Adobe,PayPal left  their repo dead and  without update. 

&#x200B;

1. error with npm packages - No choice on it
2. error with gradle - test latest one
3. Error with android build tools . test with android  8

&#x200B;

&#x200B;",1535510702.0
Hiazm,"If you’re using the latest NPM, that might be the problem. Doesn’t RN only support NPM < 5? Someone can step in and tell me that I’m wrong, but I’m certain that was the case as of pretty recently.",1535516459.0
ianbumblebee,How do you link an library to your project? with 'react-native link' or by manual instructions? ,1535520887.0
nickmcsnapz,"You really need to be a decent Android and iOS dev to not pull your hair out with RN. I can't imagine if I went straight to RN before doing years of Android and iOS dev.. would be so painful. Always backup your folder before installing and linking anything. This will save you heaps of time. Dont just back up to Git, literally copy the whole folder and paste it in a backups folder somewhere, just in case ",1535862400.0
kevinvz,"Hello everyone, Kevin from Uppy here. We just added basic React Native support to our open source file uploader. For some reasons why we built a js fileuploader in the first place, check out https://github.com/transloadit/uppy/blob/master/README.md#why-not-just-use-input-typefile :) Happy to answer questions!",1535466806.0
redpopcornpanda,"Our workflow is pretty simple. Basically, we have two primary git branches: `staging` and `master`. When a dev needs to implement a feature, they create a new branch based off of `staging` named the same as the id of the relevant Jira issue. When they are done, they submit a PR to `staging`. Once reviewed and tested, it is merged. On each merge to staging, we know that something has been completed and so we want to get it out internally asap. So on Bitrise, we have an `internal_release` workflow which builds and publishes the app to testflight and android alpha track. The internal release automatically increments the build number and tags staging with that build number, so it's easy to refer back to which merge caused a crash, for instance. When we are ready for a public release, we manually select whichever testflight/alpha build we want to use. Since those are automatically uploaded on each feature completion, we can choose the one which is stable and reflects what we want to be released at this point. So it's easy to just choose whichever one we want to publish via the apple or google websites. When we release publicly, we also merge staging to `master`. That way, `master` reflects the current production release and `staging` reflects the current internal release.

We typically release to both android and iOS at the same time. If there is an issue specific to android, it is much easier to deploy separately since it doesn't go through a review process and doesn't need a totally new version number. If something needs deployed to iOS, we update the version number and have to go through review again. Thankfully, it's very uncommon to have major issues like that on iOS; we've only had them with Android so far!

If you have the CD build completely automated for prod and internal release, you could have your prod CD run on push to master, and your internal CD run on push to staging.",1535599905.0
rest453w,[https://medium.com/@sudhirKr/react-native-video-component-68262bcbc21f](https://medium.com/@sudhirKr/react-native-video-component-68262bcbc21f),1535436175.0
kbcool,"To save you the read the summary is:

&#x200B;

\>I was looking for a native video component in react native and was not able to find one, so I decided to draft this blog on how we can customize and create a video component in react native.

&#x200B;

This is not what it is about. It's simply a very long winded way of saying react-native-video is good ok.",1535447243.0
Codefiendio,I don’t need a tip calc but this is awesome. ,1535424703.0
Noitidart2,This is actually a really useful idea. ,1535744827.0
paulsia,did you encounter any problems in the submission process?,1535426950.0
alien3d,"Good News..I hope they update quick upon new rule adopt by google and ios.For ios, no choice developer at least support 2 operating  system last . For Android,to many version,for me i support  the  last  lolipop",1535417270.0
kbcool,"Google!?

&#x200B;

Seriously though you're probably getting crickets because people open your post and it looks like you've attempted to work out absolutely zero for yourself.",1535447473.0
redpopcornpanda,"A lot of people use Firebase cloud messaging, which handles both cases you're mentioning pretty easily",1535384920.0
kingbin,"Firebase will do both. I’m currently using Firebase for Android and Azure notifications for iOS. 

You’ll have to do some native coding to determine app state. I wouldn’t count on pinging apps to see if they’re open or not. There are mechanisms to determine the app state. I determine native side if the app is open. I use bridging to call a notification module if it’s open. If it’s not open, I call the native functions to display notifications.

",1535386382.0
kbcool,Uh why those strange requirements? You can send a normal push notification regardless of whether the app is open or not and handle it the way you mentioned depending on app open state. It's not an unusual requirement except for your technical requirements.,1535395504.0
egny,"This would depend on what you expect the app state would be, when the user would receive notifications. Most apps are usually either closed or in the background and rarely in the foreground. Accordingly, for most apps, notification through WebSockets will probably a waste of effort (more functionality to build, test, debug, maintain) and battery life.

If the app is most likely to be in the foreground, then WebSockets could be useful, especially if there will be many interactions (e.g. for a customer support chat session) or you have use for them for other purposes. Even then, you should probably reconsider.

OTOH, if the app will be open, but in the background, the WebSocket will be a waste of energy unless you absolutely must track user presence for some reason. 

If the app is closed, notification is the only option anyway.

If the data is sensitive and you don't want to transmit it over a third party service, what you would do is send a notification to instruct the app to query the server for the pending messages. Otherwise, you could just transmit the content with a notification (within content limits, obviously).

At least for Apple PNS, delivery is on a best effort basis, so be sure to implement some functionality to make sure the notification is actually delivered to the device.

In short, unless you have very good reasons otherwise, you should simply use push notifications. ",1535406272.0
redpopcornpanda,I was around 700 MB a while back :/ Would still like more guidance on memory management for rn,1535384951.0
cmcaboy,You may want to check out Firebase Remote Config from Google.,1535381196.0
LeftHandMorty,"Sorry guys but it's neither like Firebase Remote Config or CodePush.  
I use and like both of them btw.  
CodePush is very inclusive and remote config is mostly for primitive values.  
This is more like what's described in Airbnb's blogpost under Server-Driven Rendering  
[https://medium.com/airbnb-engineering/whats-next-for-mobile-at-airbnb-5e71618576ab](https://medium.com/airbnb-engineering/whats-next-for-mobile-at-airbnb-5e71618576ab)",1535389291.0
BlenderDude-R,Kind of sounds like CodePush from Microsoft,1535379269.0
matdehaast,"I have always thought this could be a great way to do stuff! And did try some concepts.

My biggest issue was trying to work out a good way to tool this. IE how do I deal with developing and storing these components and making sure they will work across all the devices I expect them to work when they get loaded.

&#x200B;

First, how do you even begin to develop the components?",1535460747.0
SimonTheEngineer,"Hey I’m a bit late to this party but are you involved with this library at all?

https://github.com/i6mi6/react-native-sdr

I’ve been thinking about server driven rendering lately and only now am I looking into what other people are doing so definitely interested to hear if you’ve made any progress.",1540403833.0
EternalSoldiers,"Solid explanation, wish I had seen something like this from the start!",1535396385.0
HootenannyNinja,JSX is hard to learn?,1535376785.0
FezVrasta,Lol that's just a little bit biased ,1535350067.0
hb_to_ms,lol,1535400296.0
WarrenBuffering,Pretty sure you're going to be using NativeModules and  working in Java/Objective-C to pull this one off,1535343254.0
anonymousmouse2,"I don't believe this allows the capture of 360 images, but this may be useful: https://facebook.github.io/react-360/",1535346200.0
GinjiBan,"These are only warnings. You are just installing packages.. Nothing wrong on your end. Don't worry, you're fine :)",1535304283.0
kbcool,"If you're not used to ES6, React, Redux, some native development up your sleeve then all but the most basic of apps will have a steep learning curve and still take you months go get out the door (if you work normal hours). Not to say that wouldn't take you even longer going full native without experience either.

&#x200B;

If you've been doing some nativescript and vue it will  be a lot easier to switch over than moving over from straight up web work given a lot of the concepts are the same.

&#x200B;

That being said what you're trying to do is relatively simple but you're going to burn a lot more than those 5 hours getting up and running so think hard about your motivations for changing.

&#x200B;

After having spent another ten minutes looking at native script and my previous ten minutes I can form a solid opinion (sarcasm) that native script tends to lock you into pre-formulated components. What I love and sometimes hate about RN is that your building blocks are views (shapes) and text so you can basically do what you want. Some people hate this and want rigidity  so it all depends on you.

&#x200B;

Hope that help.",1535274831.0
napolux,"Well if you don't know native languages (Swift, Java, etc...) it's probably the fastest way to achieve your result.


P.s.
Fastest, not easiest :P",1535274401.0
ejpusa,"When dealing with low level IOT (your BT beacons here) work, in the end Native code will be the way to go.  (IMHO).

",1535284415.0
alien3d,"If no integerated third  party, i would said yes. React-Native  Good  upon presentation view but if deal with business process pretty bad.",1535277785.0
beeseegee,"Do you need to support android? Last I checked, the RN scroll view on android doesn’t do pinch zoom OOTB, so that would need to be a module/roll your own unless that has been added in the last few months.",1535290589.0
SizzlerWA,Yes!,1535481552.0
ejpusa,"Suggestion: Build it out in Swift.  Get your Android clone done in India. 

Swift is super hardcore, think the time you put into learning react, you could just fork BT/beacon code online and jump right in.  This stuff can get super complex.  An agency would charge (nyc rates) probably into the 6 figure for the app as described.  

You need a designer, an api guy, hw person, a db person, probably need a web site somewhere in the mix, your account rep, etc.

A solo coder, whatever you can do.  It’s a big project.  Just imagine how many millions of $$$s a mall makes a year, and you are doing a mobile guide for them. 

What happens if beacons go dead, maps change, updates etc.  More work.  

React is cool, but in 5 mins I can understand it. With swift, sometimes it takes me hours to figure out what the heck is going on.  And then it’s like holy molly, that’s amazing.  What a piece of art disguised as code.  Mind blown.  

Everyone has done all the hard work for you. :-)

https://www.raywenderlich.com/632-ibeacon-tutorial-with-ios-and-swift

You could also develop both ideas at the same time.  Days are 24 hours. :-)

",1535308103.0
kbcool,"Take your shot, add it to a view, add your flair on a view that is absolutely positioned on top of your photo layer then have both those layers wrapped by another view and use the library below to take a snapshot:

[https://github.com/gre/react-native-view-shot](https://github.com/gre/react-native-view-shot)

​

Boom!

​

Just beware of anything GL related. Surfaces cannot be captured this way - you'll see a few photo filter libs around that have some impressive effects but you can't save the results!

&#x200B;

Edit: With that handle shouldn't you be telling me how to do this!?",1535203428.0
paulsia,"https://laska.io/pricing/ 

pro is $49/mo? wow.",1535196872.0
lance_tipton,"On an iPhone 7 plus, and the site is really jacked up. Seems like some of the styles are not being loaded. 

If your selling a UI builder, I would think your UI to sell it would be at the least passable. If the sites UI does not work, my first impression is that UI is not the company strong side. So I'm not really inclined to pay $50 a month

You might try improving your site a bit, to help sell the product. ",1535202888.0
Tramagust,I was a great supporter of this project but $49/mo is just ridiculous and the free tier is now useless. I'm sorry but I won't be using this. ,1540208209.0
jenkynolasco11,"In my experience, it’s kinda hard to get around with your components once you get around with the design on builderX.

Basic app framework? Yes, you can do that, but once you want to start reviewing the generated code, you’ll find yourself in a mess with bunch of nested components.

Everything placed mostly was all views and texts components (which made the job more painfully difficult whenever I wanted to change a few component to proper ones) and from there you started to customize your code, which made my experience such a way uphill.

If I were you, I’d refrain from using BuilderX since the code generated can be gibberish and the tool is sometimes buggy af. Go with pure RN instead (or CRNA).

My experience tho, others might differ from it.",1535154517.0
BooneTheSaint,"You are calling a undefined function on a undefined object. Nothing to be scared of, you just have to debug your code. You probably didn’t initialize a class and you try to call a scoped function of that class",1535120859.0
demoran,"Sounds like the object member was dynamically generated and missing, and the object it is attempting to be invoked upon is also undefined.",1535129725.0
agmcleod,"Double check it's on the same wireless network. There's a possibility the port could be blocked on the network, depending on where you're trying this as well. Otherwise, you'll need to post more details. I haven't used expo very much admittedly.",1535118991.0
hutxhy,Do you have any programs running on the 8080 port like McAfee? ,1535122278.0
matt_hammond,"Disable all the unused network adapters. For example, virtualbox creates its own network adapter.
Also.. Ž
Try opening the expo URL in your browser and see if you get any data there. ",1535130705.0
bensinjin,Are you trying to connect with an android emulator?,1535134415.0
Xleo010,"I had the same issue
I downgraded the version from 0.56 to 0.55.4

https://stackoverflow.com/q/51189111/4166696",1535142346.0
NotYourMom132,"if you use ubuntu, disable your firewall

`sudo ufw disable`

Or just use cable data, connect your phone with your laptop, and `npm run android`",1535173539.0
speltron3060,"You'll have to nest you're entire stack into each screen of the tab navigator. As far as I know you can't access different screens in a StackNavigator if they are nested inside a different TabNavigator screen.

For example, if you want to be able to navigate to the chat screen from the SchoolScreen, you'll have to include that component inside your School navigator. 

&#x200B;

    const School = createStackNavigation({
       School: {
           screen: SchoolScreen
       },
       SchoolChat: {
           screen: CreateChatScreen
       } 
    });

From there your main TabNavigator should look about the same

    const TabStack = createBottomTabNavigator({
        School: School
    });",1535138953.0
interactivejunky,"We're switching to OneSignal. Integration is pretty easy but they do make their money of data analysis, so you need to make sure that's acceptable for your project.",1535092222.0
kbcool,"Firebase is good but you need to use the whole package effectively to get real benefit from it. i.e analytics, auth, identity etc etc. 

&#x200B;

I suppose the same could be said of any push notifications. If you can't segment your audience then don't use it. Just spammy for the users.

&#x200B;

Also, with regards to Onesignal and making money out of data. Pretty sure Google don't offer Firebase as a charity. You are the product.",1535111840.0
notseanbean,"I use [react-native-fcm](https://github.com/evollu/react-native-fcm) and have had good results, although the author himself now recommends react-native-firebase. ",1535119321.0
Unforgiven-wanda,"Been using Appcenter with React-native-push-notifications, and so far it's great.",1535105488.0
xrpinsider,I understand that you are not using Expo. Why not if I may ask? They have a really easy approach to push notifications. ,1535116108.0
cmcaboy,"I am using Firebase Cloud Messaging with my React Native application. It is included in the react-native-firebase library. There is a bit of a learning curve when getting started, but once you figure it out, things get easier. It also integrates pretty well with other Firebase features, such as Analytics and A/B testing.

I've talked to others who use OneSignal, but I have not used it myself. ",1535127534.0
schjlatah,"I honestly have no idea what the ""right way"" to do that would be; but I'd just throw them in the same folder as the rest of your React Native JS/JSX files, `import` or `require` them and start poking at it until it works.

Maybe start with a unit-test, Jest makes that pretty painless.",1535058207.0
nickmcsnapz,Why don't you use RN methods to call the class so you can then use it in RN app dorectly? Basically like any RN library that uses Natuve Modules does for Android. ,1535083205.0
shekharskamble,This is awesome thank you so much...,1535072335.0
heshanfu,Cool site.,1535084343.0
tequiila,this is cool. surprised I've never come across it before,1535090822.0
spiraltrip,Essential! ,1535094838.0
kbcool,"From the docs:

&#x200B;

Note: you will take quite a performance hit if you are reading big files

&#x200B;

Are you sure you're not getting further before crashing? You're pushing the limits but....

&#x200B;

You've basically chewed 100 megs + there of memory which on a 2gig Android phone means you're almost out of memory already but not quite there. On an iphone you're already gone - although I am simplifying how memory management is done greatly :) They won't be at crashing point yet.

&#x200B;

Whether you're doing RN development or pure native trying to load and manipulate 50 megabytes all at once is never a good idea. 

&#x200B;

Ask yourself and maybe answer here too:

Do you really need all 50megabytes at once? 

Why are you encrypting (if it's to protect your IP there's other options)?

&#x200B;

&#x200B;",1535030229.0
nickmcsnapz,"What's the file? Might be better to store it in chunks and load each chunk as the user requests it, e.g if it's a large video file split it up and load each one individually one after the other..  depends what it is though ",1535035559.0
kbcool,"Share your existing code please. Post a gist or some other paste bin type link not in a comment :)

&#x200B;

In lieu of that one would think that if you have width 100% on the texinput it will stretch to container size (which I assume is what you mean by placeholder?).",1535017552.0
Noitidart2,I think this bug has been fixedin RN 0.57 - [https://github.com/react-native-community/react-native-releases/blob/0.57/CHANGELOG.md#android-specific-fixes](https://github.com/react-native-community/react-native-releases/blob/0.57/CHANGELOG.md#android-specific-fixes),1535045343.0
kbcool,Umount the component? If it doesn't have an explicit stop or pause command then it's the only way. That being said it might not guarantee the connection isn't held open for whatever reason.,1535013420.0
funkyfourier,The react-native-vlc project seems pretty dead to me. Why not use just [react-native-video](https://github.com/react-native-community/react-native-video)?,1535013233.0
demoran,Check out https://github.com/jhen0409/react-native-debugger,1535023838.0
ChronSyn,"FlatList uses a ScrollView which has an onScroll event

https://facebook.github.io/react-native/docs/scrollview#props",1535008237.0
pizza300,"I have a 2017 MBP with the touch bar for RN development. The keyboard sucks, and I don't use the touch bar at all. Luckily I do most work at the office, where I have a separate keyboard and monitor.

I used to have a 2015 MBP at my previous job, which rocked in my opinion, but I was mostly doing web dev.

Get a 2015 or 2016 IMO.",1535018248.0
cloudprogrammer,"I really don't think the 2018 MacBook pro is worth it, especially for development(could be wrong). If you aren't building / testing ios then there's pretty much no reason to even get a Mac imo, probably just a better windows machine. But if you want/need a Mac then I'd get 2015/16 or 17, 3000 pounds for a laptop is pretty insane I reckon.

For me, I had to get a Mac for ios dev, and I chose the 2016 one out of 2015/16/17. It's been great so far, keyboards been good and I've been able to add useful bindings to the touchbar in intellij IDEs. Oh and keep an eye out on the refurbished macs if you aren't already. ",1535014487.0
PistolPlay,Get the 2018. Both are investments and you'll be using them for years to come. The 2018 is a significant improvment that'll last a good 5 years min. While the 2015 will be pretty damn old in 2 years.,1535028327.0
paulsia,"if i'm making this decision, i'll go 2018. would not even consider 2015. you would also get a good resell price for 2018 if you decided to ditch it.",1535038023.0
kbcool,"Being the owner of a 2018 (actually it's 2017 but bought in 2018) MBP without the stupid touchbar I can tell you it's a fine beast but both the normal and the touchbar keyboards are crap! Keys get stuck all the time.  I can barely use the down key without pulling out the keyboard cleaner spray once a week since an eyelash or a fingernail getting caught under it stops it working.

&#x200B;

I've also used a touchbar MBP for a while and found it a useless flashing gimmick. If you're the type to persist then I believe it can be configured to actually do something useful with VS Code but so can the normal function keys if you memorise them.

&#x200B;

The simulator has no problems with the intel chip on the base model. I'm not even sure it uses GPU anyway. The simulator will have problems with certain apps no matter what. It's just in the nature of the beast. Eg on maps. It's well known.

&#x200B;

&#x200B;

Your 2018 is overspecced in my opinion. Don't need the graphics card or the extra CPU for RN or any kind of non games development. 16gigs and 512 storage is mandatory though. I took the base 13inch, 16 gigs, 512SSD and I believe it's 2239 euros (in France). I paid in AUD and after discounting, gst refund etc etc $2200 off the top of my head (you guys get ripped off). You could save yourself a grand there.

&#x200B;

The 2015 is a good machine still but you'd be wanting 512 gigs (RN projects can be a few gigs each quite easily) let alone OS , Xcode, Android SDK etc. I wouldn't pay more than 1400 euros for something like that or you may as well get the new one with warranty etc.

&#x200B;

Either way you need a mac for IOS apps.  If you're using a ""hackintosh"" then there's probably good reasons why it's slow but apart from that your current machine just needs more RAM. CPU is not the bottleneck in app development. I was using a Macbook air earlier this year with 8 gig ram and if I kept most things closed it performed almost as well as the MBP. Once RAM got low it slowed down swapping to the SSD or triggering clean ups.",1535014357.0
Nyquiiist,2015 mbp.,1535027237.0
kingbin,"I would suggest a bigger HD because you’ll run out of room quick. I have a 1 TB ssd on my laptop and it’s 80% full. I could clean it up some but I don’t want to battle space constantly. My Mac has a 3TB Fusion drive. It’s plenty fast for dev work. Docker VMs and npm cache build up really quick.
Memory is crucial too. I’ve got 16g on my laptop and 32g on my mac.
",1535026086.0
alien3d,"For me

1. First to risky, i rather take 2011 macbook and max it up 16 GB ram ssd since it can be upgradable cheaply.
2. I using baseline 2017 imac which only intel proc, you can still play fortnite sir with close all app  because it only 8 GB and osx pretty bad on memory management. 
3. For second choice, take the 15"" with new keyboard .
4. If your market just android, just upgrade your laptop to ssd and use linux flavour, settle all the mess of node module and compiling annoyance. 

&#x200B;",1535031167.0
krondog4090,"Go with the 2015, hell if you can get a 2014 than go for that as it'll be cheaper.  I've been using a used 2014 for development and it's literally a beast of a machine.  For some reason older MBP's are very reliable.  I can see this machine lasting me another 2-3 years with no problems, and I got it super cheap.  Switching to a MPB for  development is so much smoother.",1535035123.0
derGropenfuhrer,"> So now I chose to come to your side.

You'll be happier here. I was a .NET dev for years before I made the switch when I started working in Node. Configuration is easier. Being able to restart without having to reopen all your apps is great. Installing big apps is far easier. 

I'm assuming the 2018 is a lot like the 2017 model. 

I work on both -- 2017 at work, 2015 at home. I'm very fond of the 2015. I think the touchpad on the 2017 is way too large: it causes me to place the cursor midway through the previous paragraph a few times a day while I'm typing. Super annoying if you accidentally erase something you typed because the outer part of your hand grazes the trackpad. 

For development I think the 2015 still has a few years left in it. Most of what we do is phone simulation or webpage serving -- neither of those need a lot of horsepower. For storage: I have a 256GB in this 2015 mac and it has 63GB free and I've NEVER cleaned it up, so storage isn't an issue. 

You are probably going to need to replace the batteries in your 2015 in a year or two, keep that in mind. I had a loaner 2013 MBP at the office and the battery life was atrocious.  ",1535036537.0
Tidaal,"I have the 2015, [these are my specs](https://i.imgur.com/pl3DLgY.png). I didn't care for the touch bar, I don't really need it. I got the GPU just because on the side I may want to run an emulator or something, so might as well. The only complaint I have is the cooling, the fans start running while building my apps, but then they're barely noticeable.",1535052129.0
TrainedCodeMonkey,Craigslist a MacBook Pro. A lot of times college students sell their laptop afterwards or when they upgrade ,1535065378.0
interactivejunky,"I sold my touchbar 2017 13"" and bought a Macbook Pro 15"" 2015 2.9ghz (the fastest one they made). It's faster than the 2017 and it's really reliable - it's nice having a quadcore to speed up xcode builds. ",1535092128.0
lefooey,"My daily dev machine is a 2014 MBP with the 3ghz i7, pretty equivalent to the 2015 you’re considering. It doesn’t struggle at all with the simulator, even running on an external 27” WQHD display. ",1535165013.0
numagames,Using exact MBP 2015 model You described for RN development. Highly recommend. Much cheaper and no keyboard problems tracked on new models.,1535169338.0
felixaa,Go for the 2018 one. The investment you put in on that 32gb ram is totally worth it for app development. Running Android Studio with Xcode combined with Emulators easily eats up 16gb of RAM,1538386756.0
tizz66,"I don't think there's any point in buying a three year old laptop to be honest. Buy the 2018 and then you'll be good for years to come.

That said, our company is split on the touchbar. Personally, I set it back to normal Fn keys so I'm not really using it as intended. But others in our company swear by it and use it all the time. It'll just be something you'll have to see if you like I think.

I know the keyboard has caused problems for a lot of people, but mine has been fine in the 18 months I've had it.",1535032161.0
sourtargets,"Last I heard the 2018 model had some serious overheating problems and actually performed worse than the previous model despite having a much beefier (i9) cpu. I have the 2017 model and it works like a charm + is likely quite a bit cheaper. 

Macs also age very well so the 2015 model is by no means outdated either.

TL;DR: Go with a brand new 2017 model",1535045621.0
Dirty_Dee_,"Firebase does exactly this. You can use react-native-firebase, very featureful and well-maintained package. When you try to write to database while offline it hold onto this copy of the data and then sends it once you regain connection. You could couple this with redux and redux-persist for a full data persistence stack",1534988919.0
rdrigocs,"Is it too much data?
Are you using some state management library?
I’ve used “persist” middleware for both redux and mobx, and they can work with just AsyncStorage it’s pretty easy, you can do that, use stores and hydrate them with a persist middleware such as redux-persist and sync it when you detect the internet connection changing (NetInfo)",1534987427.0
alien3d,"Realm you need to paid handsomely if you want to integrated with server.

Async storage have size limitation in android

Sql Lite the easist.

You may used react-native-firebase but  it may you cost a bomb when the application getting traction .

​[http://realmius.rubius.com](http://realmius.rubius.com) \*\* not tested from me.

The first choice

Offline First.

1. Upon 5 minute, sync the user the latest information, so operation sync don't call much internet connection.
2. The  User will see some delay but if you have  online system with offline system it will troublesome no 1 above.

Online First

1. Every transaction is online
2. Page  will using data from ""redux"",""mobx""  which may use  async storage. So when user online back, they can continue whatever function they want to do.

​

This is consider crazy/hardest topic .

​

​",1534989687.0
MrGurns,You are looking for PouchDB. I just did this.,1534993769.0
realbriank,"http://www.reactnativeexpress.com/data 

Some concepts here. There are many possible solutions. Firebase might be a good choice to match your level of experience because it will solve a lot of problems automatically. Just keep in mind that the goal of firebase is ultimately for you to pay for their services so it's in theory a trade off of ease-of-use but you pay money. ",1534995795.0
anewidentity,AWS appsync does this out of the box,1535026049.0
bensinjin,Not sure I totally follow the question but the item parameter can easily be an object with any additional properties on it you require. ,1534949758.0
VAL_PUNK,"Yeah not sure exactly what you're looking for. As /u/bensinjin has said, the renderItem can be any component with any number of props you want.

Based off your example I think you might be misunderstanding something (or me misunderstanding you lol). You can also make the data you pass in be objects with properties. Right now you're statically passing \[1,2,3\]. This is more than just how many components you render, but also the data that's passed in. Below is an example of a FlatList implementation, and below that is the contents of this.props.data. 

    import { Typography } from ""components""
    import * as React from ""react""
    import { FlatList, View } from ""react-native""
    import { babyBlue } from ""~/utilities/Style""
    
    interface Props {
      data: FormattedRewards[]
    }
    
    export interface FormattedRewards {
      name: string
      level: number
      rewards: {
        title: string
        description: string
        money: number | null
        xp: number | null
      }[]
    }
    
    export default class Rewards extends React.PureComponent<Props> {
      public render() {
        return (
          <FlatList
            showsVerticalScrollIndicator
            style={{ backgroundColor: babyBlue, marginTop: 20 }}
            data={this.props.data}        
            keyExtractor={(item, index) => item.name + index}
            renderItem={({ item, index }) => (
              <View
                style={{
                  backgroundColor: ""white"",
                  marginBottom: 10,
                  marginHorizontal: 15,
                  padding: 10,
                  elevation: 3,
                  shadowColor: ""black"",
                  shadowOpacity: 0.5,
                  shadowRadius: 3,
                  shadowOffset: { width: 0, height: 0 }
                }}
              >
                <Typography variant=""title"">
                  Level: {item.level} - {item.name}
                </Typography>
                <View>
                  {item.rewards.map(reward => (
                    <View key={reward.title}>
                      <Typography variant=""subheading"">{reward.title}</Typography>
                      <Typography variant=""subheading"">{reward.description}</Typography>
                      <Typography variant=""subheading"">{reward.money || """"}</Typography>
                      <Typography variant=""subheading"">{reward.xp || """"}</Typography>
                   </View>
                  ))}
                </View>
              </View>
            )}
          />
        )
      }
    }

The contents of my [this.props.data](https://this.props.data)

    [
       {
          ""name"":""Bronze"",
          ""level"":1,
          ""rewards"":[
             {
                ""title"":""Bronze Rad"",
                ""description"":""Bronze Level Reward for Being Rad"",
                ""money"":25,
                ""xp"":0
             },
             {
                ""title"":""Bronze Awesome"",
                ""description"":""Bronze Level Reward for Being Awesome,
                ""money"":25,
                ""xp"":1
             }
          ]
       },
       {
          ""name"":""Silver"",
          ""level"":2,
          ""rewards"":[
             {
                ""title"":""Silver Rad"",
                ""description"":""Silver Level Reward for Being Rad"",
                ""money"":50,
                ""xp"":1
             },
             {
                ""title"":""Silver Awesome"",
                ""description"":""Silver Level Reward for Being Awesome"",
                ""money"":25,
                ""xp"":0
             }
          ]
       },
       {
          ""name"":""Gold"",
          ""level"":3,
          ""rewards"":[
             {
                ""title"":""Gold Rad"",
                ""description"":""Gold Level Reward for Being Rad"",
                ""money"":75,
                ""xp"":1
             },
             {
                ""title"":""Gold Awesome"",
                ""description"":""Gold Level Reward for Being Awesome"",
                ""money"":25,
                ""xp"":0
             }
          ]
       }
    ]

Sorry if this doesn't answer your question at all lol.",1534951966.0
MartXXIII,"Dude you really didn’t do any research did you? ^^ 
There you go https://github.com/Elyx0/react-native-document-picker",1534942425.0
kbcool,"You probably need to elaborate. Your title says document picker but you say upload.

&#x200B;

Do you want to be able to select and upload files? 

&#x200B;

Selection will be made possible by [https://github.com/itinance/react-native-fs](https://github.com/itinance/react-native-fs) as you can make your own picker with FlatLists or something similar from the results.

&#x200B;

It also handles upload but annoyingly only on IOS so you'll need to read the file across the bridge and use the fetch API to post/put the files on your server.

&#x200B;

[https://facebook.github.io/react-native/docs/network](https://facebook.github.io/react-native/docs/network)

&#x200B;

Hope that helps. If not please do share more details.",1534942426.0
DrSghe,"I don't know PHP at all, are you sure of the behaviour of echo-ing 2 things in the response?
As a debug step, have you tried to curl the page to see if you get the desired response?",1534939861.0
spacebronzegoggles,"If you’re using POST, PHP should offer the parameters in the $POST array. Try initialising $json as 
$json = $POST or for eg you can straight away do 
$email = $POST[‘email’] ",1534939916.0
nogbog,OP: I tested your code and it seems to be working like you want. What version of PHP are you using? (I tested on v7),1534941491.0
kbcool,You'll have better luck asking Admob themselves or in a forum for Admob users. Your question isn't really react-native related it's usage for a wrapped SDK related.,1534942475.0
kbcool,"Welcome to the sub.

&#x200B;

You'll probably get a better response if you include more details like what the errors are.

&#x200B;

The example itself looks fine. 

&#x200B;

It should go in your App.js file. The two snippets should be in the same file. Just replace the boilerplate code that was in there in its entirety.

&#x200B;

Also make sure you ran the npm install command or you are going to get nothing but errors as the react-navigation library is needed.",1534927055.0
kbcool,"Yep it's a torturous learning process.

&#x200B;

Don't use create-react-native-app unless you have to.

&#x200B;

[https://facebook.github.io/react-native/docs/getting-started.html](https://facebook.github.io/react-native/docs/getting-started.html)

&#x200B;

Click the tab about creating apps with native code. This is where the sage developers go.

&#x200B;

react-native-init appname

react-native run-ios

react-native run-android

&#x200B;

All done.

&#x200B;

&#x200B;",1534887967.0
z2rof1sh,"I had the same trouble when my colleague tried to build IOS app.

I compared his expo settings file (path: `/.expo/settings.json`) with mine. And I found out `urlRandomness` field of his config file was `null`.

The content of my setting file is as follows:
```
{
  ""hostType"": ""lan"",
  ""lanType"": ""ip"",
  ""dev"": true,
  ""minify"": false,
  ""urlRandomness"": ""s6-ztv""
}
```",1535365277.0
xrpinsider,Simple but handy! Any reason for not using Expo? ,1534868514.0
vedevao,Nice! Did you use React Native Elements?,1534893925.0
Noitidart2,"If the app goes to the background, then moves, that persons location will not update for their friends right? Only if in foreground will it the location be up to date?",1535412652.0
napolux,"Wow. Really inspiring. 
",1534855269.0
favaron88,"Read the whole post just now at lunch. Cool app idea! I noticed you didn’t mention iOS, are you planning on it? 

Your “idiocy” is called learning, and I appreciate the time you took to help explain to the reader the rabbit holes you went down. Hopefully I’ll remember the lessons you learned. 

Thanks for the write up. ",1534874798.0
TheSacredBroom,"Hi. 

I would like to know about your experience with notifications, especially what library did you use and if you set them once (with some prop repeat='daily' or something) or each day somehow?  I had hard time configuring repeated local notifications in my past.",1534884777.0
kbcool,"This belongs in the machine learning subreddit. Im pretty sure it was written by an AI or a fool. It has no structure, often makes no sense and seems to have huge cut and paste definitions of what things are. All signs of computer generated documents ...or fools.",1534881322.0
simplicius_,This is my attempt of 30 Days of React Native which is still ongoing. This project is dedicated to code daily (which I a currently failing :P) and get hands on experience with RN ASAP. Check out the repo for more info :) Thank you!,1534828862.0
pmyb,Really appreciate your knowledge sharing. Good basic real world examples on RN. ,1534972657.0
bytesk,"nice, really interesting about your project, good basic real world with react native",1536142866.0
IamJerrySoFU,"Have you tried setting returnKeyType=""done""? https://facebook.github.io/react-native/docs/textinput#returnkeytype",1534797454.0
iamfromouttahere,"have you tried the new expo-cli? It's a much better tool than exp, and the default nowadays. I've been using it at work for a few months and works perfectly (But you have to restart it every few hours)",1535434981.0
Dimasdanz,"First of all, how do you get playstore version?  

To get version on mobile, you can use something like this https://github.com/rebeccahughes/react-native-device-info#getversion  

Another way, is to check via an API from the application to your backend behind-the-scene, so you can update your backend when deploying a new app.",1534781767.0
liquid_penguins,How about saving the most current version in your server and making a request before you do anything else in the app to check that version against the user's app version?,1534783329.0
Bliany,"TLDR: Facebook Ads Manager, Instagram, Vogue, Uber Eats, & Bloomberg",1534824494.0
digitil,"Vogue is a top 5 popular app? Not trying to knock them, it's just a bit hard to believe. I've never even heard of their app before.",1534794412.0
RarePush,"Does instagram use it?

I remember a blog post some years ago that was basically just ""we're trying it out on our settings screen"" and that was it?",1534832131.0
xrpinsider,Why isn’t Expo working for you? Expo works just fine for me.,1534758850.0
alien3d,Iphone just simulator not emulator like android. To full proof test need actual device and [xcode.So](https://xcode.So) the best way is [https://www.macincloud.com/](https://www.macincloud.com/). ,1534760017.0
russeg,i've debugged something like this. an http header was not being sent or the value was wrong. i used wireshark to check what was actually sent.,1534783727.0
kbcool,"Are you sure it's a bug? That's exactly how cookies work. You set an expiry and they are sent until they expire. Simples.

Also if your app is backgrounded and restarted at some point all your state is lost including your cookies.

Charles proxy is good for debugging web connectivity as well.",1534789420.0
morenoh149,"yeah the debugging story for network requests is pretty funky. See [https://www.youtube.com/watch?v=CghyeXGNzig](https://www.youtube.com/watch?v=CghyeXGNzig) I use [https://github.com/infinitered/reactotron](https://github.com/infinitered/reactotron) to get more insight but it's not as good as chrome's network tab.

&#x200B;

I'd debug this serverside, if you don't get the cookie then you don't get the cookie. Make sure the client is sending the cookie.",1534970552.0
Charbots,"Nice article! Really clear to follow and told me a lot about unit testing. Wondering if you can help me actually, I'm now looking into unit testing a large scale app with Jest but I'm running into trouble with dependencies. I've had a look online and it seems that I need to be mocking all of them, however I'm completely lost on this and how to approach it and wondering if you have any insight. ",1534752335.0
tusharkhatiwada,"Are you looking for something like this?

https://github.com/wix/react-native-zss-rich-text-editor",1534762660.0
blah_face64496,"Do you have a webpage or effect you can show, that you're trying to replicate / mimic? 

Only reason i ask is it's helpful to see what you're trying to accomplish and to decide why you would be trying to display an image \*inside\* a text input element.",1534749819.0
ihatehenrikhey,"Are you sure that's the case? Because I find that type of ""functionality"" is rather hard to achieve unintentionally...",1534735412.0
redpopcornpanda,Do you use firebase? Maybe you somehow hooked it up to live update or something. That'd be pretty intentional though. You'll have to share more about your set up :),1534736278.0
tusharkhatiwada,"Did you try to use secureTextEntry=true in your TextInput Component?
https://facebook.github.io/react-native/docs/textinput#securetextentry

Is this the one you are looking for or I didn't get your question correctly?",1534735377.0
kingbin,"Look at indooratlas. I’ve got a project using that sdk to guide people through a building w estimote.

Edit, I’m using that in native in a react-native app.",1534777203.0
h113408,"If you're still looking into having the Turn-by-turn navigation out of the box using Mapbox, you can follow this tutorial : [Turn-by-turn Navigation using React Native and MapBox](https://medium.com/@113408/turn-by-turn-navigation-using-react-native-and-mapbox-eb42c79a0a77)",1542180039.0
redpopcornpanda,"I think Google maps API offers directions and route functionality, but I'm not sure to what extent",1534736347.0
ayushnawani,"I am also looking for some help in turn by turn navigation in react-native, for navigation data i am using OSRM Backend. But in mobile side i am stuck at how to handle the turn navigation with audio. I also found this library [https://github.com/flyandi/react-native-maps-navigation](https://github.com/flyandi/react-native-maps-navigation) which has implemented turn by turn navigation.",1540197692.0
NaveNocab,Love it!! Congratulations 💙💙,1534715468.0
fridgefreezer,You MDM should be able to put it into single app mode. What are you actually looking to achieve with RN?,1534692711.0
kbcool,"This may help. Never done MDM myself but any APIs can be or are bridged and it looks like there's some here

[https://github.com/robinpowered/react-native-mdm](https://github.com/robinpowered/react-native-mdm)",1534693355.0
R-Ac,"The first point from your potential solution can be achieved using something known as [Autonomous Single App Mode](https://support.apple.com/en-in/HT204775). Using this the device can be locked into Kiosk mode using the app.

[ManageEngine MDM](https://www.manageengine.com/mobile-device-management?reddit) actually has this feature as an on-demand feature. DM me in case you need further details.=

P.S. I work for ManageEngine.",1536328565.0
cyedica,I would recommend looking into Moki Mobility as an MDM solution to help with those issues. ,1536602098.0
kbcool,Stop posting the same crap every week. This is just a copy and paste from the docs.,1534692872.0
Bamboo_the_plant,I think that script may have been moved to the 'scripts' folder after a certain version of RN. Check whether you can find it inside: `node_modules/react-native/scripts`,1534676325.0
redpopcornpanda,"i think for me, `npm start` usually starts the packager. That script in my package is `node node_modules/react-native/local-cli/cli.js start` Not sure if that's the same thing. Might be worth a shot",1534729313.0
ahartzog,Is there anything in here that isn’t in the react native documentation for the image component?,1534682597.0
redpopcornpanda,"No, the fundamentals are almost the exact same. You'll still use props, state, lifecycles, and all that the same way. The primary difference (imo) is working with HTML and CSS instead of react-native elements and stylesheet. So if you know those, you'll probably do well! Also, the configuration and setup will obviously be different for web. JSX still works the same way, though. For example:

    // React Native:
    render () {
      const name = 'Panda'
      return (
        <View style={styles.nameContainer}>
          <Text>{name}</Text>
        </View>
      )
    }
    _________________
    // React JS:
    render () {
      const name = 'Panda'
      return (
        <div className='nameContainer'>
          <span>{name}</span>
        </div>
      )
    }

(`className` is used to add CSS classes to HTML elements in JSX)",1534630362.0
tequiila,"I'm on the same boat. RN first and now love the language and really starting to get into more complex JS methods as well. I learnt RN from Steven Grider videos on udemy and he also has a few videos on React Js which I plan to do too. All his stuff are JS based so want to do Node.js right after. 

[https://www.udemy.com/user/sgslo/](https://www.udemy.com/user/sgslo/)

Wait for the sales and you can get it for like £10- $20 ",1534663352.0
hutxhy,"I'm in the same boat. Started with RN, but I actually prefer ReactJS now, primarily because I think animations are much easier on Web :P",1534688196.0
JStheoriginal,"I as well started as a native mobile iOS dev, then became a react Native dev and has to learn JS. Now I’m doing React.js and it’s all the same. 

The biggest thing to learn was just what the HTML components all do along with their props (a, div, img, etc), since these replace things like Link, View, and Image used in RN. 

Plus also learning about responsive design for mobile up to super wide desktop. If you use material ui for the React.js UI library, it has an intuitive responsive design API with 5 different widths you can change your layout based on, all pretty easily. I’m sure other libraries do as well. The alternative is doing media queries, which gets you things like window width.

For styling stuff, you can do it the same as RN with style objects and/or you can use CSS and/or Styled components.

For navigation, react-router is pretty straightforward compared to the navigation libraries on RN.

I’d say it’s much harder to know React.js and have to learn React Native, as the hardest part about RN is all of the more complicated native mobile stuff (push notifications, code signing, etc)",1534690359.0
bensinjin,They’re both react js but use different presentation technology. When developing for the web you use react js + react dom on mobile it’s react js + react native conceptually.,1534640040.0
SirChristoffee,"If you have little JS background, then chances are you aren't to familiar with web development of old, which has a lot of value still. Just a fair understanding of HTML and CSS can help in doing things ""the right way"". An easy pitfall would be to make <div> everywhere as you might with <View> in RN, making all your own components. Meanwhile HTML has a broad range of tags that carry the semantic meaning, formatting and event hooks you're really looking for.

[This video](https://www.youtube.com/watch?v=VvOsegaN9Wk) by one of the creators of the python web framework Django goes into some talk of not being afraid to use no framework *at all*.

This is an awesome tongue in cheek site selling unadulterated JS: http://vanilla-js.com/

",1534843694.0
redpopcornpanda,"I think [from the docs](https://docs.microsoft.com/en-us/appcenter/distribution/codepush/react-native#plugin-usage), you'd do this:

1. `let codePushOptions = { checkFrequency: codePush.CheckFrequency.ON\_APP\_RESUME } // root`
2. `import codePush from ""react-native-code-push""; // grandchild`
3. `codePush.sync({ updateDialog: true, installMode: codePush.InstallMode.IMMEDIATE }); // in the function call for onPress of a button in grandchild`",1534628235.0
alien3d,"learn es6 and es7 .E.g site [https://developer.mozilla.org/bm/docs/Web/JavaScript](https://developer.mozilla.org/bm/docs/Web/JavaScript)  . Some people will jump you all those redux,react term but to maximize potential need to understand basic javascript also.They will be a person saying javascript not eq like react but react just a framework/library not language.",1534609046.0
tizz66,"I would say if you're already familiar with web dev, look at normal react first, simply because when you see it working with the DOM it'll make sense to you (things like reconciliation and shadow dom etc). It'll then be really simple to transfer that over to React Native (which is exactly the same thing, except the components are native UI controls).

I've found RN has some additional challenges - thinking in the 'mobile app' way, navigation, routing, styling, plus it's just a little more difficult to see what's going on under the hood, versus just being able to explore the DOM that react has generated. It'd be easier to handle those challenges if you're already familiar with React, I think.

Finally, the RN documentation assumes you're already comfortable with React, so reading those would also be easier if you have prior understanding of React.",1534610831.0
redpopcornpanda,"Definitely. This is super helpful: [Thinking in React.](https://reactjs.org/docs/thinking-in-react.html) React pretty different from the different UI things I've worked with in the past. It's not like working with basic .NET, or like working with data binding in .NET, or like basic web development.. or more advanced development.

React's learning curve (personally) was essentially just understanding how components work and why they're important. Those same concepts will help you so much with react-native, since the format is so similar. If you learn React, which is easier to start with because web is easy to start with, you'll be a lot more comfortable when starting react-native. Mostly since react-native has a ton of configuration you need to do to get started and then there's a little bit of overhead with emulators...

Thinking about what I just said you could actually start with react-native on [snack.expo.io](https://snack.expo.io) which is really easy to use. Essentially, the same react fundamentals will apply to react-native, so learning those using react may be easier to pick them up.",1534616096.0
AJ12AY,"One reason I recommend learning React first is the community for React is simply bigger,  and you’ll learn framework paradigms more quickly than if you started with R-N. ",1534632713.0
shuwatto,"Comparing redux to Context API doesn't make sense to me.  

What redux is all about is forcing you to write code in Flux architecture.  

 Plus, redux itself uses Context inside it.  ",1534631589.0
hutxhy,"Disclaimer: I'm not an expert at either tools. I find Redux much easier and intuitive to use than the context API, but that could just be me being a noob. ",1534628584.0
vikkio,"At my current job, who started the project used the new context api instead of redux for a very large application.
The code got messy and hard to follow through quite soon.
I will, once I will be given the chance, move all this mess to redux.
As someone else is saying, they are two different things really, and you might not need redux until you do. ",1534642081.0
lovemeslowly,Dude already 'contains ads '..??  Dont think its too early ? ;),1534581479.0
fupower,add height to your input ,1534561313.0
Dimasdanz,"Expo and FCM works very similar in terms of server-side stuff. You receive token, you save it. When you want to push some notification, you send a device token to Expo or FCM server from your backend.  
I'd suggest you not ti use Expo and use FCM instead because when you need to detach in the future, Expo notification does not work. Also, **FCM works on Expo** thou only for Android as of now.  

Is your application right now using Expo?  Is detaching from Expo a possibility? If it is, then my recommendation would be to integrate FCM using rnfirebase.  ",1534578288.0
bensinjin,Are you talking about push notifications or pushing updates?,1534557648.0
SizzlerWA,Don’t. You have to track all the push unsubscribes and if you get it wrong and continue to push to too many unsubscribed devices Apple will spank you.,1534572522.0
kbcool,Neither. Don't use a webview for ads. Use an SDK. Plenty of them are supported officially or unofficially on RN.,1534693559.0
akie,"You need to be able to run the iPhone simulator to test your app, and for this you need macOS. If you never “eject” you app you might not need this and you can stay within Expo, but I think at one point you’ll probably do it anyway and then you need the simulator. Alternatively you can develop your app primarily on android, and only test on iOS once it’s almost done. Not sure how wise that is though (best to test on both regularly).",1534542258.0
schjlatah,"I have a similar setup on my home laptop (Windows host, Hackintosh VM).
I have git installed in both contexts and I use GitHub to keep things in sync.
Most of the time, though, I just do everything in the macOS VM.",1534544273.0
bensinjin,I’d suggest at least starting with Expo and ejecting when you start hitting walls it’s possible you won’t - we haven’t yet. Expo offers some nice tools and even supports ota updates which are pretty slick.,1534548960.0
gunslingerfry1,Hook up iOS device to Apple computer and get app built. Go to the devices menu under Window and go to the device and select connect via network. Then I use VNC to occasionally rebuild via xcode and SSH in to develop. (I use vim). The sucky thing is that even the crappy Apple computers require an arm and a leg. A new Mac mini with 4 year old hardware costs as much as my development machine. ,1534738081.0
mostlytoastless,"Well.. there may be components somewhere prebuilt to do it, but it's basically just a view with an absolute position.  You can just take a view, set it absolute to the bottom of the current scroll position, and animate the height until it's where you want.  If the content above is in a scroll area it should just work, but otherwise you'd probably have to scroll the position of the drawer view with the main scroll position to keep it in place if they scroll/tap below.
",1534533108.0
bensinjin,Checkout nativebase.io they may have a drawer component.,1534540823.0
shuwatto,"React Navigation has it.

[https://reactnavigation.org/docs/en/drawer-based-navigation.html](https://reactnavigation.org/docs/en/drawer-based-navigation.html)",1534547357.0
alizada,"react navigation has  drawer so just use that one!

[https://reactnavigation.org/docs/en/drawer-navigator.html](https://reactnavigation.org/docs/en/drawer-navigator.html)",1534561636.0
notseanbean,https://www.npmjs.com/package/react-native-drawer-layout-polyfill is the drawer that React Navigation uses. I'd recommend just using that - it has the same props as https://facebook.github.io/react-native/docs/drawerlayoutandroid.html,1534586437.0
ChronSyn,"Welcome to the light side!

Firstly, React-native in it's 'traditional form' runs on mobile only. It is essentially a bridge between the core language of the OS (Java for Android and objective-C for iOS) and the JS you'd write. It uses the native mobile API's, but provide bridges into those that are called from your JS. You can write your own native code to add extra functionality too.

The code it compiles to is native (sort of) in that it doesn't need an additional binary or such to run. Whereas some frameworks wrap a web-app (i.e. HTML, CSS, etc) into a web view, React-native renders actual components using the mobile-native render pipeline that 'true native' apps use (i.e. those written in Java or Objective-C).

Writing it is very similar to writing a react application in that you create component and nest them inside each other. A few key differences is that `<div>` is often `<View>` in react-native but besides that, it's actually not all that different from writing react when it comes to the UI and functionality. Some things like navigations are more tricky, but you'll learn those as you move through the framework and boilerplates. Props are passed the same way, rendering lists and data is done the same way, calling API's is done the same way (i.e. `fetch`), etc.

React native web (https://github.com/necolas/react-native-web) is often a solution people recommend for writing react-native for the web. I've never used it so I won't comment further.

If you're rewriting a website, I'd write it in react in such a way that your components consist of an index.js and a styles.js file. Styles.js uses a JS-like syntax for writing CSS and your index.js would be your component code.

From there, I would look at building some sort of transformation pipeline that essentially converts the web-version components into react-native equivalents - such as `div` ---> `View`. It'll still require 2 code bases as there'll no doubt be differences in each, but it may save you a huge amount of time.

Alternatively, you could write a wrapper. This is essentially a webview component that renders your website. You can hook in native functionality on top of this - if you need geofencing or notifications, you can add support for those while still wrapping your website in a web view.",1534525166.0
liquid_penguins,"React Native has different components than React.js/web. In order to get your RN code to work in browsers, you'd need to make a conversion library. I assume someone has attempted this already. Google will be your friend in this case.

edit: I remember coming across a library called react-everywhere (or something similar) that was trying to achieve this.",1534524800.0
bensinjin,Check out react xp.,1534640435.0
AddMeOnReddit,"Both of those points should be handled just fine by RN. Like you said, NetInfo gives access to native connectivity and for storing photos I recommend this: https://github.com/itinance/react-native-fs.",1534517736.0
Veranova,"In my experience NetInfo doesn't work properly. We took it out our app and now just show the user an offline message when a web request returns 0 as the status code. 0 is used when the request can't even be made by the device.

Intelligence in this case was really broken for the UX",1534518678.0
7cf2db5ec261a0fa27a5,"You should be fine with both of those. NetInfo in my experience did work, but if you app is using any sort of WebSockets or SSE's, you could pretty easily do this yourself. This way you could check for not just lost internet, but lost connection to the server. 

As someone else mentioned, React Native FS can handle all of your file storage and management. It is very easy to use once you get the hang of it. 

",1534521507.0
MakeItMobile,"Hey! A few thoughts:

I like [react-native-fs](https://github.com/itinance/react-native-fs) and [react-native-fetch-blob](https://github.com/wkh237/react-native-fetch-blob) for working with the filesystem.

You can also leverage [AsyncStorage](https://facebook.github.io/react-native/docs/asyncstorage.html) for persisting configurations values, etc.

For the images, I'd recommend optimizing those. TinyJPG.com works well and it's free. Make sure to use proper Cache headers and use ""force-cache"" property as well.",1534951843.0
hhunaid,Maybe [this](https://github.com/maxs15/react-native-modalbox) would help. The reason bottom drawer is not supported is because there are native OS gestures that will precede over the app gestures. Like action center in iOS,1534512418.0
VAL_PUNK,"In relation to your height issue, you can try:

`import { Dimensions } from ""react-native""`  
`const { width: deviceWidth, height: deviceHeight } = Dimensions.get(""window"")`

This will get you your device's width and height set to deviceWidth and deviceHeight respectively. You can make use of deviceHeight however you want.

For full screen

`<View style={{height: deviceHeight}} />`

For half the screen:

`<View style={{height: deviceHeight * .50 }}/>`

You may need to play around with absolute positioning. Something like

`<View style={{flex: 1, position: ""absolute"", left: 0, top: 0, width: deviceWidth, height: deviceHeight}} />` 

Hope this helps!",1534515693.0
VAL_PUNK,"PureComponent only does a shallow comparison between props. You can switch over to a regular Component and make use of shouldComponentUpdate(prevProps, prevState) { ... } directly to maybe fine tune exactly what should cause a re render. You'd be surprised what would cause a re render for a component. 

[Edit]

Also what are you using? Are you using Expo? I've noticed a big performance boost when I publish to expo which would make sense with all the webpack / babel stuff CRNA does when building your actual app.

Looking at https://reactjs.org/docs/optimizing-performance.html#virtualize-long-lists, they link to https://bvaughn.github.io/react-virtualized/#/components/MultiGrid. While this is not react-native, it could still maybe work?

Finally, after googling I found this: https://github.com/saleel/react-native-super-grid. React Native comes with FlatList and SectionList which extend the functionality of ScrollView, but are optimized specifically for performance when loading large lists. The link I just gave uses an implementation of FlatList / SectionList, but as a grid, which I think is what you're going for. 

Let me know how it goes! I'd be interested to hear any performance benefits you get out of this. Heck, I may even try to build it.",1534481099.0
fuck_with_me,"As others have said, your poor performance may be related to the fact that you're running in dev mode. That being said, if something feels laggy in dev mode, I tend to regard it as a reflection of the worst possible device someone might run my app on.

You may need to dive into [direct manipulation](https://facebook.github.io/react-native/docs/direct-manipulation).",1534760360.0
clarle,You can use [localtunnel](https://localtunnel.github.io/www/) to route a local server on your machine over the Internet for testing purposes.,1534478312.0
VIM_GT_EMACS,"Well, I'm curious why you want to use React Native Maps if you know Mapbox is better. Mapbox has a react native [module](https://github.com/mapbox/react-native-mapbox-gl). 

If you get stuck for some reason, I have a [barebones implementation of Mapbox with React Native](https://github.com/tetreault/react-native-mapbox-demo) if its of any use for you to check out. ",1534455129.0
Zeadus_,"Reading the docs There is an event called onRegionChange and another one called onRegionChangeComplete, both return the current Region after you move or zoom the map, and Region includes the latitude and longitude delta. You could try doing a console warn of the Region they return to get the latitude and longitude delta of the amount of zoom you want and then use it  https://github.com/react-community/react-native-maps/blob/master/docs/mapview.md",1534463145.0
Dimasdanz,"I agree, there should be a way to translate zoom into latitudeDelta and longitudeDelta. But in my opinion, latitude/longitude delta are the still best way to handle this.",1534480626.0
flo850,"It's the same in native map on ios  (mapkit), maybe you can use this : [https://medium.com/@dmytrobabych/getting-actual-rotation-and-zoom-level-for-mapkit-mkmapview-e7f03f430aa9](https://medium.com/@dmytrobabych/getting-actual-rotation-and-zoom-level-for-mapkit-mkmapview-e7f03f430aa9)",1534492097.0
v1nn1k,"We have done something similar, we are using it for initialRegion in MapView,

[Gist link](https://gist.github.com/v1nn1k/a7b973b2e9425ec9c4a3546e6ee098fc)",1535303282.0
cwhaaaales,Zoom level is controlled by the latitudeDelta and longitudeDelta,1534458253.0
ceasterday,Are you building from command line with react-native run-android or trying to run from android studio? I get a lot of inconsistent build issues when writing native code in android studio but never have problems running from the command line. ,1534432597.0
redpopcornpanda,"When I'm configuring my build environment in Android Studio, I often have to download several different versions of the SDK. Basically, I would suggest running it through Android Studio. Though Android Studio is a steaming pile of garbage, it sometimes gives you a single button to click and it will install the dependencies. I had to do that maybe 5 times before all the correct dependencies were installed. Haven't had any issues since.",1534433040.0
sourtargets,"Can you post some of the errors you're receiving?
",1534434151.0
FlyingKanga,"Update it's 2 am here: I upgraded my Gradle version and that seemed to have fixed all issues. I still need to try run it on a device, will probs run into problems but I'm calling this success a night! ",1534434558.0
paulsia,"> but I'm unsure how they've managed to get everything running

why didn't you ask? even senoirs ask others why things don't work, especially build issues. a lead even asked my how to build a project i was working on, not because he cannot solve it, because him trying to troubleshoot it himself is a waste of time when he can just ask me.",1534466293.0
ChronSyn,"I REALLY like this. Is there any specific reason that react-native-vector-icons is needed?

I'd like to use this in non-detached expo apps and might be interested in creating a fork that doesn't have that dependency (but first I'd like to know why).",1534525557.0
vinny_bag_o_donuts,"Never even crossed my mind, sounds like a PR in the making!",1534525649.0
JTirado,"I have build 2 production application with Expo. 

Since I started developing with it a year ago, the Expo team has been awesome at adding new features that are requested by the community. This has made our investment worth it even more since each new iteration unlocks a set of new possibilities.

Pros:
- Super simple to get started.
- Great Documentation and community.
- Runs on windows / macOS.
- Builds for both iOS and Android.
- Simple deployment to different environments and App/Play Store publishing.

Cons:
- Limited to the libraries linked by Expo.
- Larger than necessary Binary.

My recommendation is to scope out the features that you need for your project and see if Expo has the libraries to achieve them. If it does, then go with it, if not, either consider ExpoKit or a normal React Native implementation.

Production App for Reference:
Play Store: https://play.google.com/store/apps/details?id=com.hasacorp.parkner
App Store: https://appurl.io/jj3tgk4g",1534429066.0
tequiila,Expo is restrictive however 'exp publish' has been incredible to update apps without having to do a build. ,1534429633.0
ceasterday,Expo will increase the binary size of the app because it includes some common native libraries that you might not need. Performance will be the same though. Expo is great if you're developing on a windows laptop and need to test on iOS. Only issue is if you need to write custom native code at which point you'll need to eject like /u/tizz66 mentioned.,1534427926.0
fuck_with_me,"I think it is a very unpopular opinion amongst people who frequent this sub, but here goes: I do not think Expo is an appropriate choice for any production application.

You can import any of the Expo modules within a vanilla RN project if you like them.",1534432335.0
tizz66,"Disclosure: while I'm building a moderately complex app in Expo, I haven't actually shipped a production app yet.

That said, I think it's worth it. I really like working with the XDE, and expo has a bunch of useful modules you can use, to simplify things like permission handling etc. (though you can use these even if you don't use the Expo XDE, by ejecting to ExpoKit.)

You may hit a time when you need to eject from Expo, but I haven't got there yet.

I don't *think* there should be any performance difference between Expo/normal RN, because it's all the same thing when the app is running.",1534427276.0
huffpostraphael,I submitted,1534449735.0
creambyemute,"Both are fine but work fundamently different.

Redux is laid out for immutability, means you don't modify an object like usual in OOP style but create and assign a new value.

Mobx is laid out for observing, means you do things in a more OOP way by directly modifying values instead of creating a new one. MobX observes these ""objects"" and progagates changes to the view.

We tried both but had problems with setting up Redux+Typescript in a strictly typed fashion due to a bug in Redux 3.7.2 and the @types package. This may very well be fixed with the new versions.


We ended up using MobX as the setup with TypeScript is really easy and you have to write a bit less boilerplate code in comparison to Redux.

In the end, it's a preference and what works foryou thingy.

",1534408344.0
fuck_with_me,"I have really enjoyed using MobX in RN apps and cannot imagine going back to Redux. If immutability and rigid data structures are your thing, there are options like `mobx-state-tree`, etc.",1534432410.0
realblackntan,"this feature is experimental ... but i've been using it for a while and it's manageable for me ...

[https://reactnavigation.org/docs/en/state-persistence.html](https://reactnavigation.org/docs/en/state-persistence.html)",1534427913.0
ceasterday,I'm running on device but have never seen this behavior across multiple react native apps. It should all be in memory and be fine. I only see the behavior you describe if I kill the app and resume. ,1534431718.0
bgerhards,"React Native is just a web application inside native components, right? So utilizing a storage mean within the device will be your solution. AsyncStorage is likely what you are looking for. You would want to use that with a Redux solution to help persist and reload your data (and last screen visited?) in the index as the application loads.

https://facebook.github.io/react-native/docs/asyncstorage.html",1534405882.0
ChronSyn,"First, make sure your DB is configured for realtime. This guide covers configuring it and utilizing it with RN;
https://medium.com/@mpr312/a-simple-react-native-app-using-firebase-realtime-database-ce794ecdc47d

Update your state with the data ---> UI should reflect",1534405827.0
FurCollarCriminal,Can you post some other use cases? I'm curious,1534393114.0
creambyemute,"Check react-native-app-auth and use authorization code (PKCE) flow, that's the recommended way considering security.",1534408754.0
aghhal,"1. Clone the array ""books"" - e.g. using newBooks = books.slice(0)
2. Make necessary changes to that new array
3. setState books: newBooks",1534377402.0
artotal,"You can use map
const temp = books.map((book,i) => if(i === 0 ) {
book.item = 234
}",1534400890.0
codercub,"To your general question of how you load react with params here is a simple guide: https://dev.to/ryohlan/how-to-pass-initial-props-from-android-native-2k2

To your specific issue of using deeplink you can use Linking.getInitialUrl() to get the url the app was opened with

https://facebook.github.io/react-native/docs/linking",1534371236.0
PhantomMenaceWasOK,Wait. Do you mean launch options or initial properties? I think you mean initial properties.,1534552893.0
schjlatah,"## SOLVED!

Thanks so much to /u/mikesilvis for figuring this out for me!

*Apparently*, my code was correct, but the key `key` is a reserved word. 

I changed my Android wrapper to pass `bundle.putString(""hello"", ""world"");` 

Then in my main app in React Native, `console.log('BlahApp : render : this.props.hello :: ', this.props.hello);` and it works.

I wish this was documented somewhere.

**tl;dr:** When passing `launchOptions` from **Android to React Native**, the key `key` is a reserved keyword that isn't accessible to the client.",1534799217.0
redpopcornpanda,"You could try looking up how to create your own bridge specifically to pass them into JS. [This page talks about it](https://facebook.github.io/react-native/docs/native-modules-android), I'm not sure if there's a package for your use case.",1534368553.0
xrpinsider,"On school we were thought Xamarin the past year. We were the first class to get lessons about Xamarin. 

Week one of Xamarin:
- everyone was busy installing Xamarin on VS.

Week two of Xamarin:
- some people were still trying to get Xamarin installed, while others were trying to fix errors and bugs.

Week three of Xamarin:
- 4 out of the 25 students got Xamarin working, all other students got error after error and bug after bug. No progress had been made yet by any students.

Week four of Xamarin:
- Most people stopped trying and were sick and tired of Xamarin not working. 

That was the last week we got Xamarin, our school switched to Android Studio and some other students, like me, got permission to use RN or Flutter. 

Don’t. Use. Xamarin.",1534374321.0
redpopcornpanda,"could you post some code? since react-native isn't exactly a browser environment, I don't think i'd expect the same things to happen automatically",1534368975.0
TheKingHasLost,"Since create-react-native-app is based of Expo, you SHOULD read Expo's documentation first.

https://docs.expo.io/versions/latest/sdk/camera",1534347439.0
redpopcornpanda,"You should definitely eject the app at this point. You'll have a ton more flexibility going forward. I think there are steps in the docs on how to do it. In this case, you would probably not use Expo as much since react-native link modifies build files and packages for native Android/iOS. I'm no expo expert, but I don't think it works for that use-case. Most libraries we have to use end up needing to modify the native build, so you'll probably encounter this again in the future.",1534354387.0
acillustrations,Use the ImagePicker api from Expo and use launchCameraAsync it works perfectly for me.,1534356547.0
TheSacredBroom,"If those data are independent to each other, I would go with solution 2. Or more precisely combination, I would

1. create dumb components that just receive props and show spinner / error / content depending on the state of fetch (maybe extract that logic to some HOC)
2. create containers - connect those components to redux. Here I would handle fetching data and passing them to components
3. put containers in mainScreen. But since it is mainScreen, showing bunch of spinners on startup might to be the best user experience, so before showing mainScreen, prefetching the data might be good idea. So I would probably
   1. show one spinner or leave splash screen on
   2. call one redux action that calls all those endpoints, updates redux once and then let user in to mainScreen.
   3. At this point containers have their data from redux and still are able to call their corresponding endpoint.
4. use redux-persist to save redux state and sync data in background",1534352634.0
cmcaboy,"This is an opinionated topic and often depends on context, but in general, I prefer your second option. Not all users will use every component in your app so you will be unnecessarily fetching data. ",1534353486.0
demoran,"It depends on what the data is.

Entity data that determines what you're going to be rendering should be fetched in the main component.  Anything needed by the card should be fetched there as well.

Detail level data can be fetched when the detail screen is opened via a component lifecycle method, or after the primary data is fetched, via middleware perhaps.

Regardless, your app should have a single source of truth for the data.",1534354210.0
EgidioCaprino,It depends. We use Redux and a library called `redux-persist` which will persist and rehydrate the state of your application automatically. We then use push notifications to keep the clients updated with latest data. All of this combined with the possibility for the user to refresh the data at any time.,1534348894.0
Bzaba,Depends on Your use case. But usually is better to fetch data in component that needs them. It much better follows SOLID principles.,1534351029.0
liquid_penguins,"Looks like you are not catching a Promise's errors. If you catch them, this might go away.",1534344330.0
Bzaba,"If You use promises, You should always specify error callback. Either .catch() or second argument in .then().

If You use async/await syntax, error is thrown on promise rejection. You need to use try catch block.

At least it can give you more info on what wen wrong.",1534350837.0
bgerhards,https://developers.google.com/web/fundamentals/primers/promises,1534406760.0
ChronSyn,"First thing, docs: https://docs.expo.io/versions/latest/guides/icons

If you know how to use the react-native <Image> component this will be a breeze.

    import React from 'react';
    import { Image } from 'react-native';

    export default class SlackIcon extends React.Component {
      render() {
        return (
          <Image
            source={require('../assets/images/slack-icon.png')}
            fadeDuration={0}
            style={{width: 20, height: 20}}
          />
        );
      }
    }

Essentially you create a custom component that only renders an icon, and either pass in a prop that tells it the image path (relative to the Icon component itself I believe) or hardcode the path and create a lot of different components (which does have the advantage of being really easy to tell them apart by component name when scanning over code).",1534332636.0
ChemicalCap,"Your own icons, as in icons you made, or from another icon library? You can just import which ever icon library you want, and use those in lieu of the icons provided.",1534313026.0
jsendros,"This is such an interesting breakdown. I love what you've done here and I hope you start a series on these to take the analysis further!

As someone who has worked with and on Litho for years, I found your takeaway about it interesting:
> Litho View components are Android views so Layout Inspector is able to capture view information.

This is only the case for the example you chose, Lists. Within the LithoViews, Components do not always map directly to Android Views. So Layout Inspector can still help with some info, but you won't be able to understand the layout parameters applied to each Component. 

To analyze the entire layout in Litho, you can use Flipper (previously Sonar). It's open source, so you could possibly bring that into Android Studio's layout inspector as well!",1534341140.0
VAL_PUNK,PM me,1534312789.0
alien3d,"[https://discord.gg/0ZcbPKXt5bZjGY5n](https://discord.gg/0ZcbPKXt5bZjGY5n) React-Native  on discordapp.  Old  time  i used MIRC, new people  most of stackoverflow.",1534315344.0
Jiri2941,Reactiflux on Discord also has a pretty active RN section. [https://www.reactiflux.com/](https://www.reactiflux.com/),1534368125.0
chanGGyu,"My advice to you: stop playing video games.

jk.",1534306561.0
mean_youtube_comment,"You can [hide it](https://facebook.github.io/react-native/docs/statusbar#hidden) using:

    <StatusBar hidden={true} />",1534294482.0
spencewine,"I think you’ll be hard pressed to find anything relevant in book form due to the pace of react-native development. Something written more than 6 months ago  would be considered out-of-date. You should ping some of the RN contributors from facebook on twitter. Here is a talk Ram N gave at Chain React 2018 that might be useful:
https://youtu.be/83ffAY-CmL4",1534274529.0
Xleo010,"There is a book called ""Fullstack React Native"" and it comes with free updates for 1 year.

",1534300783.0
kbcool,"If what you are doing every 100ms takes more than 100ms then eventually you're going to kill the CPU with it. No matter how light your code. It's simply a matter of time.

If your loop is critical then look at the performance otherwise  if it can be about every 100ms or so then have a flag to say whether it's still running or not when the interval is hit check the flag and skip execution that cycle. As you noted requestAnimationFrame is a good way of doing things and is essentially the same thing as it won't run concurrently.

Also are you persisting the state? If you're making a lot of changes to it and using something like [https://github.com/rt2zz/redux-persist](https://github.com/rt2zz/redux-persist) then you're going to need to increase your throttle as it can be slow to write to storage on Android. You may be doing the same thing as above and eventually crushing your available CPU to nothing (although it  should work in a different thread in theory).

About what you said about checking for updates. It's best not to modify the state that a component is subscribed to if it doesn't need it so mapping your state to props and having discrete state is a good idea. Otherwise everything is redrawing itself all the time.

Lastly if you're using react-navigation there's probably a lot of mounted components being updated you don't know are mounted. Get react-devtools and fire it up to see what's mounted. It's related to the above. If you've got hundreds of components mounted all receiving updates and redrawing off-screen it's going to slow things down.

Hope that helps.",1534340360.0
redpopcornpanda,"What? It's really not hard to install your development platform. It's less than 10 steps for iOS.

Facebook has built a full-fledged framework with react-native. Sure, you will want some third party libraries, but you would probably also want those if you were developing natively anyways. (Firebase, for instance.)

No clue what you're really trying to say here",1534306375.0
redpopcornpanda,Could you give an example of your code? I also dynamically evaluate properties and I haven't had an issue,1534263649.0
Unforgiven-wanda,"I never once encountered this error and I've been swimming in RN ocean for years now.Is this project specific or do you encounter this everywhere?

What's your platform? Your target OS?",1534231139.0
prillian5,Never got this. Work with RN for over one year now,1534249309.0
alien3d,Nice .seem so smooth . For  those  who don't understand  try lookout Microsoft  excel the concept.,1534229318.0
NovaT,Nice work! From the example gifs you've posted it looks really cool. I'm keen to test it out 👍,1534228835.0
TheNoim,"I haven’t tried it, but I like it. Can’t rate your code quality. But by just looking through it, it seems not bad.",1534227209.0
edwardmsmith,Check out [https://reactnavigation.org/docs/en/stack-navigator.html#gestureresponsedistance](https://reactnavigation.org/docs/en/stack-navigator.html#gestureresponsedistance),1534261754.0
redpopcornpanda,"Yeah, it's weird, it seems like the og source map shows up for me like half the time",1534263932.0
drumskirun,"Not an answer to my exact question, but converting to Typescript fixes it :-P",1534265530.0
fridgefreezer,console.log(‘this was triggered from myfile.js line 15’);,1534203836.0
fridgefreezer,Do you mean make them shorter in length or take them from 16:9 to 4:3 or something?,1534203164.0
Bamboo_the_plant,[Media Fragments](https://www.w3.org/TR/media-frags/).,1534252042.0
TheNumberOneCulprit,"Short answer: Nope. Long answer: You'd need to build a native extension for it, using the available methods on each individual platform or creating some kind of common library in e.g. C++ (which gets a little gnarly due to e.g. NDK on Android). As others have suggested, there's already a package for it, but it might be shit",1534257612.0
ccheever,"Hi-

I work at Expo. We'd love to fix this. Can you tell us more information about which library you're at?",1534201048.0
NickNovitski,"If the admin was blocking connections to expo.io or exp.host domains, I think the blocking would be consistent rather than intermittent.  But I think it's possible that some responses from our servers are taking long enough that a timeout set on the network equipment in the library is firing and ending your connection.  You could test this with the website http://slowwly.robertomurray.co.uk: see if, for instance, a request that takes 5 seconds to reach expo.io always reproduces the error.
 
With a shared connection like a library wi-fi, it's always possible for other people's usage to interfere with yours.  If that's the problem, there may not be much you can do (besides vote for better funding and facilities for your local library system), but I have co-workers who regularly use the site from cafe wifi, and I want it to be usable by them, and by you, wherever you go.  So let's also do some general surveying: During the times when you can't connect to expo.io, do you have any problem or delays connecting to other sites?  Also, during those periods, what kind of output does`ping expo.io` show?  Is it able to find the IP address, what is the typical roundtrip time, are there many request timeouts?  You can also check www.speedtest.net, both when the connection seems fine and when it seems not to work.",1534203173.0
mostlytoastless,"Android is reliant on the windowSoftInputMode set in the manifest for detecting open/close. Android does not implement real keyboard open/close events, so RN detects screen view size change to implement it. I believe only adjustResize will actually trigger it",1534177934.0
paulsia,">Our deal would be in sweat equity only

why get paid, we should all work for free (i mean equity) since  startups never ever fails!
",1534181931.0
jerrymiii,"> we lack is a dev ressources for our new app project.

Funding does not need to come from outside investors. Borrow from the bank, use your savings, sell your car, borrow from relatives, Kickstarter, etc etc. Once you have the money, you can hire developers!",1534203053.0
alien3d,"Sorry most  will down voted it even me. Most even 4 \~ 5 year company don't have  any idea  what  development  project like . Software Development not  cheap,  unless  you provide full credential  and prospectus on how on stages will be..Nothing will be done.",1534235286.0
Chartsharing,"all the actual people in the project work for equity, we have dev, designer, content writer so the people who will join should have the right mindset for this type of project.

I know I could go to raise money and blabla but I prefer to keep it lean at the beginning.

",1534203901.0
butteredtoast404,Lots of material design libraries. Any preferences of one or the other? ,1534182571.0
blbil,"I haven't seen the need to use any component library yet... Maybe I'm missing out.

Other than using react-navigation's tab navigator for creating tabs, we've been creating everything from scratch and it has been working well for my team.",1534203425.0
StayAtHomeSomalian,"Yeah I don’t know, that phone battery level in the screenshot looks pretty low, Makes the library seem pretty sketchy

/s",1534229074.0
RaynaPreas,"I think that each library should be unique in its own way, I also want to recommend you an excellent service like this [https://essaybison.com/write-research-paper/](https://essaybison.com/write-research-paper/)  where you can write research papers, I think it will be useful for students.",1534241326.0
plmok61,"There currently is no way to set the transitionConfig per screen. I think a work around is using nested StackNavigators and setting the transitionConfig differently for each.
https://github.com/react-navigation/rfcs/issues/10

(Shameless plug) You can also check out the source code for the fromLeft function in this npm package I created to see how to create an left to right animation
https://www.npmjs.com/package/react-navigation-transitions

",1534261465.0
redpopcornpanda,Also interested in a solution to this,1534183133.0
tequiila,"Maybe use Reactotron to debug. After that Chain React demo I really wanted to start using it

Android layouts can be a pain. It does feel RN was more designed towards IOS but I'm sure over time these issues will be ironed out. 

I've yet to use flutter and I will probably will learn it but given it's a newer language and a smaller community I just cannot imagine it will have solved these issues ",1534150575.0
ChronSyn,"I can't comment on flutter, but my experience with RN;

I've not had my apps crash suddenly because of the framework, but instead they are usually caused by problems with my data and thus with my handling of that data.

The issue of library incompatibilities can be chalked up to being the nature of the beast, but it is indeed frustrating when there's a lack of alignment between versions.

I've had no problems with geolocation (at least on Android, no testing on iOS) as checking permissions automatically requests access if not granted, or pulls geodata from the sensors. iOS may be different.

Android layouts aren't a problem in general. Alignment and flex are sometimes a little bit tricky, and scroll views sometimes need a little bit of tweaking to get working but in general, I've not found it more difficult than building with react (for web projects). Rule #1 is that everything must be in a parent container and in RN, this is usually a <View>. Adding navigation requires wrapping the top level component but in the end, that's covered extensively in examples across the web.

Debugging is often a pain. What I have found is that sometimes, the error logs reference line numbers but actually the problem is on the line before it. That has caught me out several times.

RN isn't perfect, but it's also mature and stabilised enough by this point that many of the issues people complain about are down to coding error and not a problem with the framework. It wasn't always that way, but consistency has been more of a focus since ~0.40. Remember - they're building a bridge between JS and native environment which is no small feat.",1534161829.0
redpopcornpanda,"I can comment on some of this. I don't know your native experience, but for me it was very painful to develop very basic Android apps. I'm sure that'll get better as I get more experience, but I found react-native much, much, much easier and less painful to use.

Many of my issues with developing a react-native app have to do with bugs or limitations in native. For instance, right now we're trying to resolve a crash that happens in an Android broadcast receiver, and it's such an obscure issue we can't find it online. I would say that you'll face those sorts of obscure bugs and crashes with any language.

Just I'm building an app that requires very intense geolocation services, and though it's a struggle, it's still a struggle for native development. Geolocation is **hard** no matter what platform you're on.  Don't use whatever is built into react-native, it tries to implement the web API which doesn't do enough (though that was a while ago that we looked at it). There are two very good libraries that work extremely well:

[react-native-background-geolocation](https://github.com/transistorsoft/react-native-background-geolocation), for very detailed manual tracking of location updates in the background.

[react-native-radar](https://github.com/radarlabs/react-native-radar), for automatic place events on enter/exit.

Our app doesn't crash every day and we don't really run into a lot of blocking bugs that come from react-native.. It seems like their architecture updates may resolve a lot of challenges many people face, but those will of course take some time to finish.

You can update the gradle dependencies yourself without much hassle anyways. 

Finally, for debugging, use this: [react-native-debugger](https://github.com/jhen0409/react-native-debugger). It's awesome because it includes the redux dev tools, react dev tools, chrome debugger and console, etc. all in one standalone app. You can see state updates, examine the component tree, set breakpoints, examine variables, and all that good stuff. 10/10.

Maybe the difference for us is that I've been working on the same (fairly big) app for the past year, so I don't have to create new projects a lot and can upgrade when needed. Our app is in a pretty stable place with react-native, and the issues we've solved don't tend to re-appear all of the sudden. Maybe they would if it we had to start from scratch all the time with new projects.

What was the last straw for you?",1534176218.0
paulsia,"it is not buggy, at least for facebook. community issues are a different story tho. in flutter, if you file issues in github it will be looked at by the google devs themselves. in react native, zero chance it will be looked at, probably get closed asap, even pull request that benefits the community are ignored if it doesnt help fb issues.


>Furthermore, more and more issues keep on coming with no real intention or roadmap to be solved.

nice [roadmap for flutter](https://github.com/flutter/flutter/milestones),  react native  doesn't seem to have any :-(",1534181237.0
syldiivh,"My main issue was that third party implementation of various native / java functionality like maps, firebase google authentication etc. was either semi buggy / poorly documented / were dependent on different version support libraries etc.. 

I felt i spent most of my time in the graddle files / java files, even though i was developing react-native :o, I wonder if when i finished the android side if i had to spent the same amount of time on similar stuff for ios?

Anyways, took me one month part time to switch to android native (java). Yes java is insanely verbose but android studio writes alot of it for you now. I think if you do a proper MVP or similar type architecture you can convert your java to kotlin and then re-write it to swift pretty easily, then you just have to reimplement the view layer in ios, allthough i know nothing of ios development so not sure about that.

Regarding flutter, i checked it out briefly didnt really like the structure of it and alot of functionality i needed to implement in my app wasnt implemented for flutter yet.

",1534177223.0
dip-my-nuts-in-sauce,"Flutter has fuck-all tooling, libs and support right now. Its the ""hot"" new framework that everyone is talking about but hardly anyone is putting into production (yet). I am building an enterprise level application and while we do have some problems, there is nothing that is holding is back. Developing in react-native is a far quicker and agiler experience that making separate native applications. You haven't posted any real details on the problems you are facing. If you share more detailed information then maybe the community can help.",1534156351.0
lovemeslowly,"If you are having hard time with debugging use remote debugger, reactotron, android logcat and maybe  something similar for ios. There is alwasys a solution, also look at the native side.   


**I was** also impressed with all the hype and fuss in the start. And at some point you have to admit this reality that react native is best for easy development & prototyping BUT it can not replace native android or IOS ever. I am talking about performance and display issues etc. Does not matter if its flutter or RN or who knows some new framework in the future. They can't replace native mobile experience and that robustness completely.  
And yes facebook can drop react native anytime but that time has not arrived yet..

If you have  any professional experience with native then better invest yourself in native side. :)",1534155384.0
blgate,"Be aware that the flutter widgets are implemented from scratch using opengl. There are widgets equivalent to the native ones, but right now some stuff like inline video, webview or maps are missing, and if you plan to use native widgets look somewhere else or prepared for a lot of hacking (I'd rather use the native dev tools).",1534192794.0
huffpostraphael,"HuffPost uses react-navigation right now for a pretty complicated navigation structure and it works well for us.

I think if you app is going to have a really simple navigation structure, bite the bullet and get react-native-navigation working for you as you will need performance benefits. It seems like react-native-navigation gets a lot harder to work with when your structure gets complicated or you need to make customizations and at that point react-navigation starts to beat out the native one.",1534166857.0
DrSghe,"Every navigation lib answers the same questions in a different way, so, it's basically up to you to decide what to use.
If you prefer a more procedural approach, go for the ones you mentioned, if you want a more declarative, modern approach, go for react-native-router-flux.
If I remember well, react-native-navigation had some problem with accessibility some time ago, so you should keep that in mind if that's still a thing.",1534148060.0
fuck_with_me,I'd highly recommend `react-native-navigation` over `react-navigation`. JS solutions are simply not to be taken seriously.,1534150836.0
kbcool,Use the search bar. Plenty of discussion on this topic. Can't say whether it will answer your question but it's a pretty well covered topic.,1534183359.0
TexMax007,I haven’t tried this out myself but ran across it a while ago: [Ignite by Infinite Red](https://github.com/infinitered/ignite/blob/master/README.md),1534122994.0
CardinalHijack,"By boilerplate, do you mean an  actual functioning barebones app or just a component library?

If its the first, Ive never really know anyone start a mobile app by using an already functioning app. Would a component library not be far more flexible? Something like [Native Base](https://nativebase.io/)",1534149826.0
fuck_with_me,https://github.com/ueno-llc/react-native-starter,1534150867.0
kbcool,"Use my previous projects as skeletons with improvements. Problem with boilerplate projects is you can often spend more time working out WTF is going on than increased productivity.

Fell into that trap today with something in a completely new area (not RN).",1534183226.0
Bleached__Anus,"Assuming you're using the Firestore module and you're referencing a collection, the onSnapshot method returns an unsubscribe function so all you need to do is save that reference and call the function when the component is destroyed.

    this.unsubscribe = firebase.firestore().collection('your_collection').onSnapshot(...);

    //When you want to unsubscribe
    if(this.unsubscribe)
        this.unsubscribe()",1534124336.0
notseanbean,"Similarly for vanilla firebase
```
const ref = firebase.database().ref(`some/ref/here`);

// start listening
const changed = ref.on('child_changed', some_function);

// stop listening
ref.off('child_changed', changed);
```",1534150823.0
noypimig,"Nice. 

What kind of license do you plan for this project?",1534136058.0
ahartzog,Could you explain what this does a bit more clearly? I read your post and the readme and I still have no idea. ,1534115390.0
Dimasdanz,"I used latest `react-native-permissions`, got rejected on first build due to missing some keys, then I add those keys with some generic wording such as `$(PRODUCT_NAME) uses speech recognition` on `NSSpeechRecognitionUsageDescription`. Got approved on second build.  

To answer your question, the easiest way is to fork `react-native-permissions` and remove things you don't need.  
Another way is to build the lib by yourself, and add what you need. Permissions on IOS is a pretty simple thing to bridge, just look at the `react-native-permissions` source",1534059246.0
fuck_with_me,"If you're using expo, there's an entire docs section on it. If not, I'd suggest fastlane.",1534061177.0
aghhal,"1. Register a Google Play dev account (costs one time fee $25 USD)

2. Configure your app details in the Play Console

3. Create a release build of your App

4. Upload your build to your configured app in the Play Console",1534043815.0
aghhal,I think with expo you dont build your own apk they build it for you on their servers during development (hence why you need to use their client). but I'm fairly certain you will still need to build your own when you want to release.,1534045062.0
Noitidart2,"For iOS its a long process, follow this - https://www.raywenderlich.com/184709/submit-app-apple-no-account-app-store-part-1",1534046130.0
slaka_nz,"Basically all problems come down to threading. Threading is a very hard problem to solve.

Should be exciting to see the progress later this year and pleasing too to hear about FBs commitments to RN.",1534068441.0
tflave,I use verificationId which can be deconstructed from the phoneAuthSnapshot on CODE_SENT and it works fine. Does is suit your case?,1534000205.0
kbcool,"After reading that I'm not really sure what you're whinging about. The fact that react-native-svg doesn't support flexbox? Just put it in a view and set its width and height to the width and height of the view when onlayout is called. Eg 

    <View onLayout={(event) => {
      var {x, y, width, height} = event.nativeEvent.layout;
    }} />

Or do what you suggested. Seems like a weak complaint that it doesn't support flexbox properly when the solution is a few lines of code.

How about fixing it properly and contributing the code to support flexbox to the project?

In general the SVG support isn't great in RN but where is it? 

Even browser support has been patchy with most implementing only part of the ""spec"" and that's partly because SVG itself was pretty weak so a lot of what's been done is unofficial.

I can't say I've done a massive amount of SVG in RN. Just used it to implement a few UI components but really can't say I feel badly about my experience.",1533977894.0
kbcool,"You want to be posting more of the log output. If you're worried about generating too much noise post it on gist or some other kind of place to log dump.

The error message is pretty common and what you did was right to start with but I suspect you might have something further down saying something along the lines of multiple packages provide this and it's confused as to which one to pick. ",1533916676.0
Krizzu,That sounds weird. Is it some kind of monorepo? Is this module from NPM or local one?,1533916271.0
TheatricalHesitation,"Ah. OK solved it: so Metro bundler was correct - the path was wrong. Turns out the file needed to be capitalized. I didn't realise the paths were case-sensitive. Also, I assumed the Git repo was clean, but the file had been submitted in lower case, when it needed to be upper case. Perhaps github used to be case insensitive and now it no longer is. But changing the file name to capitalise it solved the problem.

Thanks all! Not sure how I can mark this as solved?",1534175430.0
huffpostraphael,"I am one of the team leads on our React Native project. 

We just rebuild our entire android app from the ground up using react native.

The app does not use Expo and we did end up writing a number of custom bridge modules. 

I am working on a blog post detailing some of the decisions we made. Would love to get feedback on the app especially if you have used the app previously.

Also happy to answer any questions.",1533907265.0
axemclion,"Great post - thanks for posting. 

React Native core team member here. Would love to help your team if you have questions or generally want to talk about the development process !! ",1534007281.0
SurgicalInstallment,"Really laggy scroll, can't open/close an article repeatedly, freezes randomly. Samsung Galaxy S8.",1534228694.0
Supa_C,I’ve noticed a significant delay in re-renders when doing things like managing your sections or adjusting font size in settings. Is this due to the components dispatching those actions and observing store changes?,1533918159.0
SalihBalkan,"Hi Raphael, what is the situation of this project? When I install beta, it still downloads current native app.",1544300291.0
kbcool,Not addressing the issue but the symptom but have you tried listening for the prop to change and simply setting the selection yourself. If it's going to cause a race condition then save the current position in state when onSelectionChange() fires and compare it to the previous. There's always a solution :),1533917086.0
kbcool,LOL...downvote,1534011545.0
redpopcornpanda,"Yes x3

But more specifically, you will **definitely** start running into problems understanding the code you wrote unless you organize it well. You can write a hello-world app, or other very basic one-screen app with only `index.js`, but you're going to *want* to write with the multiple components. One component that nests like 50x deep is going to be nigh impossible to add to or debug. Multiple components helps you do everything better - it's easier to understand your code, easier to track down problems, easier to write, makes it easy for others to understand your code (very important when working with more than just you), etc etc. ",1533880195.0
NoobStylder,Yes x2,1533874375.0
ChronSyn,"Yes, but organization is key.

Component-based design is most effective when you use a directory structure that you are comfortable with - ignore anyone that is saying that the one true way is to organize <insert description> unless their description says ""do what you feel comfortable with"".

There are no performance benefits to be had in the compiled app (since at that point, relative paths you define in code are no longer relevant), but you will save a lot of time during development if you can navigate between components quickly. Use descriptive names for folders and files, and avoid naming components similarly to others. I've made that mistake with my first RN project, and it caused a few trip-ups now and again, but it's only because I know the codebase and I'm the only developer that I can tell when I've made a mistake.

Now, how far you break things down is up to you. I personally have individual screens as main components which use other, smaller components. That's fairly standard design. However, where others might break those smaller components into even smaller components and separate them out into files, I will often have those smaller components defined in the same file. If the file or logic becomes too large or complex, then I will split things out to separate files and pass necessary props down to another level.

My reason for this is that I want to be able to trace from any component up to the origin, essentially tracing the genesis of the user flow, without having to globally search my codebase and make some best-guesses about what's importing what.",1533927923.0
ChemicalCap,Yes,1533868483.0
alien3d,I don't think so. the best keep as simple as possible not smaller [components.Is](https://components.Is) like  something mvc era other programming before. It will make the maintenance  nightmare. ,1533978557.0
fuck_with_me,**Can we please block this fucking account from posting on this subreddit?**,1534011795.0
redpopcornpanda,"What do you mean? (googled for it, but just came up with a doubly-linked list.)

Like two lists side by side that scroll independently?

One list that scrolls up and down?

If so, you should be using FlatList or SectionList, not ScrollView. The latter is deprecated, and the newer ones provide a lot better performance and features.

Minimal example [from the docs](https://facebook.github.io/react-native/docs/flatlist):

    <FlatList
      data={[{key: 'a'}, {key: 'b'}]}
      renderItem={({item}) => <Text>{item.key}</Text>}
    />",1533880395.0
Bamboo_the_plant,"The commit in question, made on 16th July, uses the term ""OfficeISS"". I can find no mention of this online. Is this a straightforward code-name for their project to re-write their major apps in React, mentioned in the following tweet? https://twitter.com/TheLarkInn/status/1006746626617008128

I asked for clarification on how they were approaching macOS support in React Native, both:

1) in that Twitter thread (to no answer): https://twitter.com/LinguaBrowse/status/1006834843416657920

2) and in the subsequent Reddit discussion: https://www.reddit.com/r/programming/comments/8qqhlz/office_365_ms_teams_skype_code_and_the_edge_debug/e0lr0k1/ (to an answer ignoring the macOS part of my question).


Microsoft are clearly going all-in on React Native:

1) TypeScript 3 has plenty of oddly React-specific features (e.g. defaultProps and PropTypes support): https://blogs.msdn.microsoft.com/typescript/2018/07/30/announcing-typescript-3-0/#default-props-support

2) react-native-windows is thriving: https://github.com/Microsoft/react-native-windows

3) WinObjC is looking formidable: https://github.com/Microsoft/WinObjC

I think the future is bright for Microsoft, cross-platform development, and the React universe..!

**Edit:** ""OfficeISS"" [likely](https://github.com/SamuelChien/DxDa/blob/1a34bb0d7a6c4efc4897577335ccd635fe67b1ff/static/Feedback/README.md#L14) stands for ""Office Internal Shared Source"".",1533862496.0
gavrocheBxN,"Ah, didn't notice Microsoft started working on its MacOS version of React Native. Very exciting, we may finally have a version of React Native for MacOS that does not suck. It makes sense from Microsoft's point of view to go all in on React Native, they'll get a big community of developers ready to develop apps for their platform, which cannot be said of the current state of the Windows Store. They may try to reboot Windows Phone eventually and have an app store with content.",1533868970.0
captaincryptoshow,How does this compare with using Electron?,1533871501.0
TheRealSophistifunk,Anybody know where I can find the build instructions? I wanna start hacking on/with this ASAP.,1533879178.0
i_Hate_us,yes that would be great,1533998373.0
bgerhards,"Does Expo not provide this already through their demo apps? If you can provide both the iOS and Android with variations of each component (per the docs), and keep up with the changes (because it sounds like many are coming up this year) then I believe this may be valuable to others.",1533905668.0
contrarianism,">. Doesn’t work well with “react-native init”

",1534171693.0
redpopcornpanda,This sounds really fascinating! It's just.. is it even react-native anymore? Does it basically just switch out the native implementation on iOS/Android for this C++ lib and still provide the same API as react-native?,1533880025.0
fuck_with_me,"What a shitty, lazy way to ask a question. Just reject line breaks inside your `onChange` handler.",1533805321.0
redpopcornpanda,What problem are you trying to solve? I'm having trouble understanding your requirements,1533880552.0
kbcool,Thanks but these are clearly your own top 5 issues. Some people may never stumble across these. Most are pretty bizarre.,1533765113.0
TheNoim,LoL I did not know that <></> exists. Learned something new. ,1533791221.0
alien3d,"Yup, i know. Border  radius can be annoy between ios and android [version](https://version.To). Same  as drop shadow, i have try also before and the later abandon the idea.The most idea come from if  CSS can done it why we don't test the same thing with react-native? In the end, if just not the same and better focus on standard guideline ""apple"". Stick simple and big.",1533950294.0
adrianosbr,"React Native widgets are fully native, hence its name. Flutter, in the other hand, renders “pixel perfect” widgets through its Dart engine - i.e., not native. And it’s perfectly doable (even common) to use native code in React Native, though modules.",1533753502.0
papa-sg,"Here is the stackoverflow link:

[https://stackoverflow.com/questions/51748144/update-value-of-react-native-checkbox-through-firebase](https://stackoverflow.com/questions/51748144/update-value-of-react-native-checkbox-through-firebase)",1533738842.0
kbcool,"WebView component - it's built into react Native and renders HTML really well. That's because it's backed by WebKit.

Now having said that someone will say it's slow. If you're finding it slow you're probably doing something wrong.

If you really don't want to use WebView or react-native-webview then just write your own component that's optimised for your needs. If you only need text formatting that's going to be dead simple to do.",1533740124.0
captain_especter,You need to make an endpoint for send the email. Maybe you can create a Rest API with Node js and use Nodemailer and just call it from you app with a POST request.,1533696139.0
kbcool,"How pro does it need to look? How long do you have ?

You could always just link them to a web page with a Google docs form or 123 contact form if you need something real quick.

You can always improve on it later.

I'll probably get downvotes for saying that but I've seen plenty of apps with tens of millions of downloads who simply do the same for their customer service or bug reports. No point in spending days or weeks on none-core functionality.
",1533743790.0
calvinaquino,"1- I don’t know but I believe its not bad, not the same as native, unless your parser runs in the native side.

2- No, currently React Native only supports 2 threads: JavaScript thread and UI (native) Thread

3- Depends, but generally, for apps that don’t use specific device features like preview on iOS, almost 95%. But it all depends as you can have hybrid apps (React Native JS code for some UI, native for others in the same app)

4- Yes you can, it adds a bit of overhead in the beginning but after that its much better. There is also Flow, which is Facebook’s answer to better typings on JavaScript (same idea as flow)",1533689313.0
redpopcornpanda,"to point 3, the syntax for views is different (html vs react-native components), and the build system would be different. but theoretically any business logic and API logic could be shared (including redux). You'd probably have to have a react web project and the react-native project in the same directory pointing to the shared parts, but there'd still be a bit to do in order to configure it so you can actually share the code ",1533880858.0
Gustash,The reasons he gave in pro of WebStorm can be said for VSCode as well. He probably just wasn't using VSCode to its full potential,1533733262.0
notseanbean,"I too found react-navigation (and every other existing RN router) overly cumbersome, and in production I ended up creating my own.

I'm now collaborating on [https://github.com/sergeyshpadyrev/react-native-easy-router](https://github.com/sergeyshpadyrev/react-native-easy-router), which is still early on in development, but may fit the bill for you.",1533726971.0
too_much_exceptions,"react-navigation is pretty straightforward.
What were the pain points using this lib ?

You could use NavigatorIOS if you are only targeting iOS",1533674960.0
NiceBluebird,"To be honest react-navigation is probably the most light-weight and easy to use.

Aside from react native navigation (which isn't as simple or light-weight) I'm not familiar with any other solutions.",1533674149.0
jineshshah36,Use react native navigation by wix. V2 is about to be released soon and it’s way better than react navigation.,1533783841.0
kbcool,"If you want to use video.js then you need to use a webview. It's a HTML5/JavaScript lib.

It's possible to do Native pre rolls using the image SDK Native libs for Android//iOS butve not seen a RN binding yet. It's possible that it exists but might be something you need to implement or pay to have implented. All completely possible though.",1533676240.0
Cookizza,i use compuser but some people use pen and paper,1533659204.0
SizzlerWA,MacBook Pro.  ,1533659188.0
gormand0,"I use a MacBook Pro (late 2013) with 16gb of RAM and an i7.  Even though it's maxed out for the model it still suffers from slow build times (hot reloading isn't terrible) and extreme power usage.  In terms of workflow and building for iOS, a MacBook Pro is the best there is.  But a custom built PC wouldn't have the same performance limitations.  I think it just comes down to how you work best.",1533675108.0
alien3d,MAC  . min 16  GB  ram,1533727983.0
scramblor,If you want your app on iPhone you will need an Apple machine. Otherwise it is personal preference.,1533659611.0
DrSghe,BuilderX is nice,1533630155.0
,[deleted],1533657892.0
ChronSyn,"Android: https://docs.expo.io/versions/latest/react-native/toastandroid

Or cross-platform solution: https://github.com/crazycodeboy/react-native-easy-toast

(Sometimes it does pay to look at the docs or simply google)",1533629181.0
_rascal,"AFAIK I don't think you can publish without signing it with Xcode on macOS. 

I am not sure, but if you are testing with Expo client, you probably don't need macOS to live test it on your iPhone, but I am not certain",1533618542.0
xrpinsider,"You can use Expo with React Native. Expo makes it really easy to write React Native apps for iOS and Android at the same time. I currently use Ubuntu 18.04, Expo and React Native. I have a iPhone 7 running iOS 12 and a Huawei P8 Lite with Android 6.0. I have a really fun time developing with Expo!",1533642526.0
alien3d,"You can.Develop first  on  ubuntu and  rent  macincloud  todo some testing .It  might  be seem cheap but  when you arrive  a lot of bugs then you will think again to buy second macbook 2011 laptop. 

[https://www.macincloud.com/pages/payg.html](https://www.macincloud.com/pages/payg.html)",1533779003.0
theOwlBoyz,"It always need a mac machine to compile. End of line. 

",1533622372.0
grazion,"Yes, you can develop IOS apps in ubuntu with React Native. The only drawback you'll have is that you won't be able to use an emulator to test the app or be able to upload to the appstore. You'll have to do those things on an apple device (macbook/iMac).",1533615920.0
_fat_santa,"Unfortunately, it just isn't possible, at least in any sort of viable way. Because you don't have XCode you won't have access to:

\- Emulators: so no testing on an iOS device.

\- Compiling the react native project for iOS.

I wish there was a workaround (I'm in the same boat) but there just isn't. If you want to do any sort of work with iOS you need to have a Mac/Hackintosh.",1533649005.0
MarceloLopezUru,Hi :) Have you tried to find materials within the React Native community in github? You can find very practical tips in places like this one: https://github.com/react-native-community,1533653120.0
ChronSyn,"One possible consideration would be to use a timestamp (perhaps encrypt it with a key of some sort to prevent people just overwriting it once they figure out how it's generated - I'd suggest hashing, but I'm not sure how you'd be able to then compare against it being < = > 5 hours ago).

Then, persist it to secureStorage or asyncStorage. If you're using MobX, you can even use this awesome mobx-persist package which will automatically save selected state to asyncStorage or secureStorage; https://github.com/pinqy520/mobx-persist

I've used that library to create an on-device favourites system with JSON as the data to store, and it works wonderfully.

When you hydrate it again, or when they complete the task again, check the timer BEFORE the action is confirmed as being completed using moment (`.isBefore()` with `.subtract()` would be the way to go), and then do whatever you need to do depending upon the results (e.g. generate a new timestamp and update the state).",1533595446.0
SolidR53,"That codepush update ruined the amazing startup screen for me.

At least wait until the intro is done, set a flag to not show it on next start and then restart the app.

Not loving the performance either, the placeholder loading, the laggy navigation etc. Ui elements are very inconsistent too.

Otherwise alright.",1533592439.0
VIM_GT_EMACS,"hah, you would think NFL's official engineering twitter account would have more than approx 1000 followers. ",1533596155.0
Supa_C,"Sort those app reviews in the store by “most recent”. Ouch. But hey, one shared code base now. ",1533612027.0
7cf2db5ec261a0fa27a5,"Very neat, thanks for sharing. ",1533585371.0
SepticReVo,"MLS too, right?",1533613727.0
napolux,"> when everyone was freaking out about AirBnB's departure

I've missed something. What happened with AirBnB?",1533625757.0
lowsk1,"I don't have access to iOS device to check it but is there a reason this must be a native app instead of i.e. PWA? It's news feed like app, isn't it?",1533709594.0
Skippertech,that app will be way up their in downloads too,1533585566.0
xrpinsider,Your grammar is fine mate.,1533587207.0
ChronSyn,Consider using something based on the Monaco editor (which is used in VSCode); https://github.com/superRaytin/react-monaco-editor,1533595515.0
LightningMcNuts,I used firebase and gifted-chat altough for a chat component if I had to do it again I'm not certain I'd use gifted chat instead of my own solution. Gifted chat was really easy to set up and get running but very hard to debug or change and it doesn't (didn't? Havent checked in a while) use flatlist so it slows down when there's a lot of messages in a chat. I don't have any guides or tutorials for you but I'd be happy to answer some questions if you'd like.,1533576095.0
ahartzog,"If you're trying to build something that's going to work well, you need to use RNGC, particularly if you're not even sure how to implement it (if that's an indicator of your level of progress). The RNGC getting started documentation isn't amazing, but it isn't terrible either. You should be able to figure it out with some effort.

If you're doing this as a learning project, building your own chat will help you understand lots of cool opportunities.",1533576179.0
7cf2db5ec261a0fa27a5,"I would recommend you check this out

https://medium.com/react-native-training/building-chatty-a-whatsapp-clone-with-react-native-and-apollo-part-1-setup-68a02f7e11

Personally, I am using gifted chat and Apollo / Subscriptions to handle chat. While this guide uses Apollo, it should help you with the basics on how to approach this. 

I don't love Gifted Chat, it has proven pretty difficult to extend / customize for my needs, but if you just need a basic chat application, I would say it should work well. ",1533574547.0
acraftillo,"React and React Native have websockets built in, so basically all you need to do is set up a websocket capable server to act as an intermediary between two users. Firebase has websocket functionality I believe, but I would use a Node backend with something like socket.io or ws ",1533576152.0
bfarrgaynor,"Checkout Sendbird. I wrote a decent real time chat using their Web API that I ported over to react (it's all JS). Works well. The issue isn't the client side, it's the server. Focus on the server first.",1533583479.0
zhulf_drekker,This is a good article... does exactly what you describe: https://appendto.com/2017/11/build-simple-chat-app-react-native-firebase/,1533584808.0
redoneD,Can try using pusher . Using pusher chatkit and RNGC . [https://pusher.com/tutorials/chat-app-react-native-gifted-chat](https://pusher.com/tutorials/chat-app-react-native-gifted-chat),1533625403.0
jerrymiii,"creating new projects that uses 0.56, no. upgrading an existing to 0.56? yes. i never update unless absolutely necessary.",1533556806.0
TheSacredBroom,I fixed this by upgrading the babel-preset-react-native with \`yarn add babel-preset-react-native@5 --dev\` (or npm),1533558875.0
calvincoin,Yes and if you run on android your text inputs will gradually slow down until they are useless. ,1533555852.0
redpopcornpanda,"Wow all the 0.56 things are adding up. Anyone have a definitive upgrade guide for it? We should probably do it soon, but it seems like it'll be an ordeal :/",1533569328.0
webdev-online,https://facebook.github.io/react-native/docs/network,1533554427.0
Unforgiven-wanda,"Some of the reasons I do not personally use Expo:

\- It adds a lot of overhead I am not comfortable with

\- I enjoy having perfect control over my stack; if my app does not require camera support for instance I see no reason for it to be present, bloating the final release  
\- Debugging Expo is a nightmare, I don't know if anyone encounters this issue, but it is slow enough for me to make me shy away from it permanently

\- Some of the libs I sometimes end up using require linking (and thus ejecting) and all the headaches associated with it

\- No offline support for now

\- Does not play nicely with Hot reloading (although there's been a lot of progress) which makes styling components on the fly a pain

\- Most of the projects I work on are proprietary and need to remain private  
\- Horrendous app startup times in production: I mean it's one thing to have to wait 5 seconds to get past the splashscreen, but 15+ seconds is just testing the user's patience  


My advice? If you're just starting React-native, it might be interesting to stick with Expo for now, as it simplifies a lot of things out of the box, and you can start pushing code immediately. However, once you have a firm enough grip on things and wish to have better control over what you add to your stack then drop Expo.  


Again, that's just my personal experience, I hear some people have a wonderful experience with Expo. Just food for thought.",1533543116.0
dogofpavlov,"This post and comments have got me thinking and I'm confused.... I'm new to the RN.  I'm currently building a RN project with the ""create-react-native-app"". Am I using expo? CRNA says to install the expo app to test my app, and I have been using that. Does this mean my app I'm making with CRNA is going to include all the stuff mentioned like permissions for camera even though I'm not using it. Or are all these posts talking about when you do like ""expo init my-new-project""

Should I have not used CRNA?",1533657566.0
-Alias-,Expo is a great place to start but a bad place to end.,1533799395.0
NaveNocab,"Here are all the technical reasons one shouldn't use Expo: https://docs.expo.io/versions/latest/introduction/why-not-expo
But this is a little dated, some of these have been addressed, or are being worked on.
For instance background locations/tasks is currently being added. ",1533525535.0
jerrymiii,"I've only dropped expo once, it was when I needed to link a library. All the ""problems"" people have with it are minor (at least to me). 

OTA  is great. I update almost daily and users gets bug fixes without me resubmitting to apps stores. Right now I just updated a few assets and it went smoothly (git commit and ""exp publish"" and boom it's there), that would have been troublesome if I have to resubmit the binaries.",1533555783.0
hampelm,"I find the overhead of `react-native run android` and `react-native run ios` lower than thinking of Expo, so I typically don't use it. It also helps me feel a little more like I can catch device-specific edge cases earlier, even though that's not necessarily true. But it clearly is a useful tool. ",1533572710.0
VAL_PUNK,"I think this is fine. I'm doing something similar which I admit is making for a big file, which is why I'm making sure to think about naming and even separating some of my stacks into other files.     ",1533523104.0
VAL_PUNK,"Yes. I actually did this for a while. If you're just using create react native app, it's agnostic to your OS. I often would make an app with CRNA, put it on GitHub and go back and forth between my Macbook and desktop pushing and pulling updates. PM me if you have any questions. ",1533520731.0
redpopcornpanda,"Since you can develop on both windows and mac with react native, you can run the same project on both. Same principles apply as other projects you would share between people or computers. Basically use version control and push/pull as needed and you'll be good to go!",1533524221.0
LEO_TROLLSTOY,"Im using win, linux and mac at the same time. App don't care once you setup your basic emulators, node, etc all of which have instructions on RN getting started page",1533566714.0
erickestefano,Use github and follow the instruction to each os  https://facebook.github.io/react-native/docs/getting-started.html,1533559061.0
Meowish,As others have said you need version control (Git) for that but if you're just learning and not going for anything bigger https://snack.expo.io/ might work for you.,1533566991.0
ahartzog,"I’ve personally found that the double monitor power of my desktop rarely wins out over the ease and convenience of the dev tools for android + iOS on the MacBook.

React native debugger works better, emulators run smoother, git doesn’t get all screwed up with stupid file permissions. 

Just my personal experience - I rarely spin up the windows emulator anymore. ",1533600254.0
rahulkumarwp,You can try this : [https://github.com/shahen94/react-native-video-processing](https://github.com/shahen94/react-native-video-processing),1533474822.0
eevo,"Lift your state.  Either use redux, or allow the common parent to ""house"" the data and pass callbacks to the children to hook up the state change back to the parent.  Once the callback is triggered, the state change in the parent will cascade to refresh the other child (sibling)

    class Parent extends Component {
        state = {foo: 'bar'}
      
        onChange = (rslt) {
            this.setState({foo: rslt})
        }
        render() {
            const foo = {this.state};
    
            return (
                <View>
                    <One foo={foo} callback={(rslt) => this.onChange(rslt)}/>
                    <Two foo={foo} callback={(rslt) => this.onChange(rslt)}/>
                </View>
            )
        }
    }
    
    class One extends Component {
    
        onPress = (newValue) => {
            const callback = {this.props};
    
            //do whatever we need for ourselves 
    
            //then...
            callback(newValue);
        }
    
        render() {
            //whatever mutating thing here that will call our onPress
        }
    }",1533394235.0
fuck_with_me,"This is a basic React question, and is not specific to RN.",1533401054.0
moufoo,"Than Native: they cost less

Than Web apps: they perform better

But sometimes, sticking with native is more efficient. Really depends on the type of project you're aiming for.",1533439066.0
MrGurns,"Not as good as mobx, but that's just my opinion. ",1533403845.0
SpAwN_gUy,"GraphQL based API are best with apollo-client and backend with apollo-server or vulcanJS.. and other frameworks and languages.
RESTful APIs are a bit more complex to set up, but OpenAPI spec can give you a client module. Backend goes on everything.

Backend API guy here. I'm writing APIs for native/reactjs/reactnative teams.",1533365421.0
boki345,Great question and I would love an answer to this question as well.,1533351961.0
RedMan_ish,I have recently completed the task  of setting up a project. What we did is somewhat hybrid application. Backend using express and Graphql based api's. Frontend is  reactnative app and  web application in angular. both  using firebase's authentication. ,1533412631.0
slumpnc,Anyone used IBMs StrongLoop / Loopback (node based)?,1533519562.0
kbcool,"It's caused by too much sh&tposting on /r/reactnative

AKA a syntax error at  23: 27.",1533331714.0
wengemurphy,"You're going to have to clarify what you're trying to achieve. You don't ""export"" from functions. You could make a function return something that contains a property you want (perhaps with an IIFE depending on what you're trying to achieve http://benalman.com/news/2010/11/immediately-invoked-function-expression/) or create an object with a property you want on its prototype, etc, but the ES6 `export` keyword is specifically for modules and doesn't do similar behavior for ordinary functions.",1533328409.0
nickmcsnapz,"I think I understand your question, what you're probably looking for is a callback function.  

http://javascriptissexy.com/understand-javascript-callback-functions-and-use-them/",1533333689.0
kbcool,"LOL yeah it's ironic isn't it, the way it behaves.

Just swap out the value prop on the textinput for this.cleanText(this.state.textValue)

May seem inefficient but basically you're checking every typed char so who cares.",1533326862.0
Jaymageck,"There are a few problems here, but one thing to note to those who don't know - you can pass multiple arguments to console.log rather than just concatenating one string. So, for example if you just want a message and an object dump, console.log('A thing happened', thing);",1533341589.0
massaray,Looks like that code needs some good ole’ Promise chaining!,1533328944.0
LEO_TROLLSTOY,babel-plugin-transform-remove-console,1533321016.0
FoldableClock,This hits too close to home,1533320065.0
TheFuzzball,"This is the reason for try / catch with async / await, same code, but immediately more maintainable.",1533320218.0
vcamargo,async/awaiŧ? ,1533361448.0
NaveNocab,"Does anyone know if the unconditional catch clause will work in React Native?
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch#Unconditional_catch_clause",1533352166.0
koowalsky,"can someone explain someone new in RN as me, how to solve this?

some one you mentioned async await or promise chaining, i would be so happy if someone give us good example",1533366560.0
stnmonroe,"Create a constants.js file and export the variable, then import it where you want to use it. That way, if you want to change it, you'll only have to do it once.

constants.js

`export const VARIABLE_NAME = 1;`

in components (make sure path is correct)

`import { VARIABLE_NAME } from '../constants'`

However, if you want a variable to be manipulatable within each component, use Redux.",1533316686.0
Dimasdanz,Redux or Context,1533316433.0
kbcool,"The bug you describe is the 2mb field limit on sql-lite on Android. It's pretty much hard coded and the total limit I think off the top of my head is 8mb. IOS does not have this issue. You're limited to the amount of free space on the device.

What you're trying to do should not be kept in the redux store. It's a static document. 

Use your store to check whether it has been downloaded or not but use [https://github.com/itinance/react-native-fs](https://github.com/itinance/react-native-fs) to download the file (best in chunks as others have said) and to load the file in memory if it's not already there. In fact a 2 mb file probably won't do too much damage to performance being opened and parsed every time the viewer component is mounted.",1533310101.0
Firerfan,Why don't you divide the book into pages or chapters and make every page/chapter an object to deliver?,1533305811.0
jamessessford,"I'm not near a computer so can't link you to the pages but search the react native docs for ""ejecting from expo"".

Once completed, the app is then just a react native app that you can package up as an APK ",1533296135.0
kbcool,"You can't.

It  shares to installed apps not sites - this is how it works on mobile. They have to have Linkedin installed and then it will show up as an option.",1533310245.0
incurious,"I pretty much never use react-native link, except for the very early stages of greenfield projects. It takes less time to link a package manually than to potentially unfuck everything. If I NEED to use link for some reason, always do it on a clean branch.",1533293814.0
petertheill,"For bigger projects it's not the optimal solution to run plain ""react-native link"". Instead I suggest to run it for a specific component after you have installed it e.g. ""react-native link react-native-really-awesome-textfield"" which will only link that component. It usually work quite good for me and will not touch on any tweaks I may have done to the project files after having installed older components. ",1533307281.0
calvincoin,"React native is a giant steaming turd. We’ve been using it in production for a year and we are examining migrating all apps to PWA. There are core bugs in react native that cause lots of apps to be unusable and they simply don’t fix them. This includes new critical ones that happen in new versions. Things like text boxes lagging to the point of uselessness on Android. And stupid one liner changes that cause all apps that use fetch (the built in api access later) to crash on poor network conditions or empty responses. These examples have not been fixed for at least 2  versions now (3 months). Again if your app has a text box and you want it to run on android without lagging, you should it go later than RN 53. 

They have some strange process for deciding what’s important, and if you’re stuck with one that’s deemed less so, too bad for you. And yeah forget about the process of linking and native modules. It’s terrible start to finish. Can’t wait to be rid of it forever. 

If you are starting a greenfield react native project, take a minute and really think it through. Can your app work in a browser with all the cool new PWA stuff? You can still use react but you avoid the nightmare of react native releases. ",1533316842.0
kbcool,More details plz.,1533289388.0
Heka_FOF,I haven't used \`react-native link\` for years,1533289830.0
danhardman,"It sounds like you're having issues with a single package, not with react native itself. If you're working through tutorials, I'd check their age - lots of information becomes out of date fast so you're better off working from official documentation",1533290316.0
alien3d,"It's not ""react native link "" .. But more on ""REACT UPGRADE"" . Unless you provided detail error pretty/picture useless say as it. Doesn't matter it was android or ios or react-native. Just beware of dead repo on github which might broke upon update the latest app. 

If IOS compile, the most ""yellow"" error are depreciation function and force developer/user to use  the latest api/function set. Error message on xcode in reality doesn't much help in my experience. More on try and error .And no need to include  \*\*\*-TV if not required.

If Android compile, this error more on ""GRADLE"" and it dependency issue. ",1533291483.0
nickmcsnapz,"Learning how to fix the issues linking causes will make you a way better iOS and Android dev. You learn more from things breaking. Don't think of it as a bad thing, understanding why things are breaking will make you a better app developer.",1533333350.0
kenyasue822,"ok so I'm setting up rn-fetch-blob now.

I did react-native link rn-fetch-blob and now I have 30 compile errors in ios",1533290128.0
kenyasue822,I did manually and i got rn-fetch-blob working now...,1533296474.0
TheSacredBroom,"I don't have problems with react-native link until some library requires pods, then you can just set it on fire.",1533296822.0
calvincoin,It’s does partially actually I forgot. But in 56 your android users will still crash if your app uses fetch and it receives an empty response. This has been around for months. It’s a one line fix that can’t seem to get merged. ,1533564645.0
kenyasue822,"I'm 100% Android project also fucked up, still not tried to build though..",1533290217.0
kenyasue822,"React Native is great. I really like it, now I'm working on Messenger using ReactNative and Firebase, and I will launched it as opensource in MIT license.

But I always stucked to setup some library and spent whole day to solve it.

I have to be happy because I solved all of problems though...",1533290655.0
kbcool,"Is it a jpeg image? Is there any chance the image is a progressive jpeg? As they're loading they look very similar to what you've added on the screenshots. Missing every other line.

If not it sounds like it could be a bug. If you're on the latest RN version I'd post this one on the github issues.",1533247240.0
SofianeG,Is it on GitHub ?,1533285703.0
ismael_m,"Did you use react-native-youtube? I have gone through like 20 videos and they are all YouTube...

Is your app capable of playing videos from a different source?",1533277953.0
sefaiyi,will you share source code on github?,1533627989.0
BooneTheSaint,On a swipe gesture use the [scrollToIndex](https://facebook.github.io/react-native/docs/flatlist#scrolltoindex) to get this scroll behavior.,1533224918.0
cmcaboy,You can do this with ScrollView using the [pagingEnabled prop](http://runsplunk-dev.es.ad.adp.com/).,1533226860.0
AddMeOnReddit,pagingEnabled with locking on the height of each element.,1533227655.0
felixaa,This is a native implementation. But should be possible with RN,1533250201.0
lordkoba,Is that a RN app?,1533222947.0
etregoning,ig doesn't use RN though ,1533270736.0
teh-raptor,why,1533250846.0
garyod,Logger...haha good name :),1533217239.0
tnicholson,Looks like shit,1533261715.0
ridhwandaud,Can you share the backend stack use for developing this app? Curious to know :),1533267494.0
LEO_TROLLSTOY,81 mb?,1533227139.0
kexnyc,That’s only for new apps. Existing apps have until November 1. ,1533337236.0
kbcool,"It's actually a very interesting question.

For debug/development mode then the bundler should just go off and find the images but not load them so impact should be negligible.

However what happens in a production package is where things get interesting.

The theory is that the same kind of thing should happen as debug mode but it sounds like your experience conflicts with that

I have only ever needed to load ten or so relatively low res images so have never seen a performance impact 

I hope someone who is more intimate with the internals can comment here.",1533242376.0
NiceBluebird,"That's an interesting question.

I'm working on my first app and will have images that are only used in an onboarding flow or deep within another flow - I haven't though about the impact of loading them via `import *`.

I suppose having them in my resources folder and loading them only when the screen is being shown is a better way.",1533243689.0
ccheever,"I just tested it.

git clone

yarn

expo start

scan code.

worked fine.

What problems are you seeing trying to run it?",1533169977.0
shamaryarde,You can try the following StackOverflow answer: [https://stackoverflow.com/a/29515539/8121551](https://stackoverflow.com/a/29515539/8121551).,1533171749.0
adamjnav,"You can use our Permissions API to ask for it. Here are the docs: [https://docs.expo.io/versions/v29.0.0/sdk/permissions#expopermissionsgetasynctype](https://docs.expo.io/versions/v29.0.0/sdk/permissions#expopermissionsgetasynctype) 

You can follow the example, the only thing you'll have to change is the argument type from Permissions.NOTIFICATIONS to Permissions.CAMERA\_ROLL to achieve what you want.

Cheers,

  
Adam",1533146500.0
cmcaboy,Wouldn't you just increase the size of that element in the list?,1533141480.0
halfjew22,"I get that this is kind of a niche case, but I'm implementing an Instagram style photo modal and it requires all kinds of weird ways of doing things. 

Let me know what you guys think and how to improve my naive approach!",1533139071.0
alien3d,A few post before like this  been down voted. So just play nice  and don't down vote.,1533171445.0
cmcaboy,You can't link packages with expo. You would have to use expo's camera roll library: [https://docs.expo.io/versions/latest/sdk/imagepicker](https://docs.expo.io/versions/latest/sdk/imagepicker),1533141231.0
fly_guy22,"Maybe try sending it to Node, do it server side and then send it back?

Maybe something like [https://github.com/ZJONSSON/node-unzipper](https://github.com/ZJONSSON/node-unzipper) ?",1533126146.0
ChronSyn,"A full error log or screenshot would help identify if this is a package issue, an expo server issue, or a local issue.",1533119853.0
kbcool,"The error is coming from the API not React Native.

Have you tried their documentation or forums? You're not likely to get an answer about using some random API in the React Native sub",1533136630.0
Turbo_swag,Perfectly normal to have an api for auth that allows headless requests. ,1533086884.0
kbcool,"As you've been told in other posts in other subs already use JWT. If you don't want user interaction then you're authing your app not the user. Also RN is not unsafe because it uses javascript (answering your other post about considering not using RN because it's javascript and javascript is apparently unsafe).

You need to get a book or something. Learn what AAA is and how to apply it and you'll be happy.

Don't stress about stuff you don't know about unless you plan on learning what it is.",1533137663.0
rco8786,"This is going to vary wildly based on location, experience, etc. ",1533063960.0
Telarisoh,"I'm not a graduate, just finished my second year of university studying computer science and managed to find a summer job developing a react-native app. I'm on a 55k a year salary working in London, UK, but only working for 3 months before I've gotta go back and finish my degree!",1533069353.0
gavrocheBxN,"I charge $100 USD per hour, all in all with time off it rounds to about $150 000 per year",1533063407.0
illl48,what bothers me the most is the Other Processes. it always shows up around 500mb as soon as i open the app. I used Instruments to check for any leaks but found nothing (no leak at all). (the device is iPhone 6 (11.4.1)),1533060173.0
olympikesoft,Depends if you are using Expo,1533068764.0
dasitm,It’s not. That’s very high. ,1533069097.0
kbcool,"There's a lot of examples on how to do this out there so I'd start googling ""oauth react native"" but yes oauth generally requires a web browser to be opened so the user can a) login if necessary and b) authorise your app.

If you want to use machine to machine auth or app to server rather than user to app (to server) then try something like JWT - [https://jwt.io/](https://jwt.io/) where you don't need to get a user to authorize but of course it's not suited to making use of a user account through APIs.

I'm not going to go through the rest. There's a lot of tutorials. Suffice to say you can use this pattern successfully in RN.",1533048678.0
oYYY,"You can view this example on how I got everything into `/src`
https://github.com/ethanneff/react-native-typescript",1533029339.0
DanmCanIJustComment,"Perhaps you're not returning the `Promise` from `loginUser`. 

Also, feel free to use back-ticks ""`"" to format code. It'd be easier for us to help you :).",1533010743.0
Jesusrofl,Show us the code of the ‘loginUser’ action creator. What does it do? Does it return a promise?,1533001080.0
kirisafar,"Set navigate as a constant next to your other props 

    const {navigate} = this.props.navigation;
    const { user, password } = this.props;

then just use

    navigate('Home');
 in your then method

Navigate is a child of navigation prop:

    

    this.props.navigation.navigate",1533018343.0
kbcool,"react-native-maps and mapbox are probably the two most popular.

I wouldn't say your kind of use needs anything special just for plotting positions on maps. Your routing and weather info is your special sauce though right? That's not what you're going to find hanging around already implemented.",1532982244.0
ChronSyn,"I don't know if you already know react-native and have built something with it already (you said you're new, so I figure maybe not).

If you want maps and don't need things such as background services, and want to get something out super-quick (without needing to know how to build a project in Android studio or XCode, both which have their own challenges), take a look at expo (expo.io). You can use a boilerplate react-native project and build from there or start from scratch, but the end point is that once your code is written, you can test on-device before you build, and then use Expo's service to build the compiled project for you. Saves a lot of time for learning RN on starter projects.",1533032664.0
recursive_blazer,"I was reading [this article](https://medium.com/react-native-training/understanding-react-native-deployments-6e54157920b7) yesterday, not sure if it's the most up-to-date but it covers the concept pretty well ",1532981393.0
kexnyc,"Personally, I would NEVER send changes out OTA. Too many things can go wrong. And if a change you make violates TOS for either App Store and you try to push to the store at a later date, they could block further updates or remove the app completely. 

Of course, YMMV. But unless you’re absolutely sure you won’t need to post to the stores, then stick with the proscribed process. Pay the fee. You’re courting trouble otherwise. ",1533338016.0
redpopcornpanda,"You have your js code in a bundle file that's saved on-device. OTA just updates that bundle if a newer version is available. You can't do an OTA update if you have any changes to the native code. If you had to rebuild the native apk (e.g. you updated a package with native code, you added your own native code, changed android\_manifest, added drawables, etc), you still have to manually release it. The reason OTA works for the js bundle is that js is an interpreted language and thus doesn't need to be compiled before deployment.",1533882008.0
kbcool,"smiles!!!! Stop asking silly questions here.

Go on stackoverflow where they'll rip you a new one instead of this sub where everyone is so polite. Except me.

Hint: use setTimeout",1532969378.0
kirisafar,"If you're using react-navigation, you can subscribe to the [addListener prop](https://reactnavigation.org/docs/en/navigation-prop.html#addlistener-subscribe-to-updates-to-navigation-lifecycle) on componentDidMount and unsubscribe on componentWillUnmount

        componentDidMount() {
          const { addListener } = this.props.navigation;
          this._subFocus = addListener(""didFocus"", () => {
            this.functionDoSomethingOnFocus();
          });
        }
        
        componentWillUnmount() {
          this._subFocus.remove();
        }",1533027506.0
kbcool,"What's your USP before I downvote? 

What you've mentioned doesn't take much work to do in Firebase or Graphcool or AWS for example.

How can you compete with Piperchat? [http://www.piedpiper.com/](http://www.piedpiper.com/)",1532969228.0
thisisafullsentence,Nice to see a big name stick with it after AirBnb's departure. ,1532963468.0
,[deleted],1532973851.0
olympikesoft,More marketing move,1533068834.0
filipef101,"Seems very promising, needs more tutorials or is my impression?
keep it up",1532980886.0
adilp,Does this only do UI mockup or will it export back into my local react code? I always have trouble with my UI especially manipulating positioning,1533039753.0
MrAngryBeards,"I'm getting ""Error: Cannot find module 'regenerator-runtime/runtime'"" when I try to run the ""laska"" command on the terminal. this seems very promising, but unfortunately I'm unable to try it out :(

I'm on linux btw. Could this be the problem?",1533067771.0
ChemicalCap,"After multiple fresh starts, and getting the same errors (and new ones), I decided against using Ignite...This sucks considering all the positive things I've heard about this boilerplate. I'll be using 'create-react-native-app' instead.",1532930099.0
PokeWreck,"Even i had problems using ignite in windows, thought it was giving errors in Windows! ",1532969101.0
hrdcorbassfishin,"I fixed this commenting out App/Config/index.js line 6

// Text.defaultProps.allowFontScaling = AppConfig.allowTextFontScaling

Hope this helps someone",1538149675.0
gchtb,Love simple yet straight forward vids like this. Keep it up!,1532907080.0
Jaymageck,"The best part of this video is when you type ""Voila!"" and immediately get a red screen. ",1532919938.0
vosper1,Modals are not awesome,1532941318.0
fridgefreezer,Isn’t woo commerce just using wordpress’ authentication? If so don’t they have how to do that on the Wordpress codex through the standard Wordpress api?,1532903867.0
ChronSyn,"The last part of this section covers authentication via the API;
https://woocommerce.github.io/woocommerce-rest-api-docs/#rest-api-keys

This might help with authentication from the user-side of things; https://medium.com/@avyatech/how-to-authenticate-woocommerce-app-user-e76187423bba",1532948631.0
Tall-Paul,Pretty sure you can just set the border radius to half of the height of the button and it will work like your example. Not sure off the top of my head how to do the shadow ,1532894217.0
MagdielCAS,"I think there's no ""out of the box"" way to do that, you could try animating svg to create this effect. But react native doesn't handle svgs animation very well, I found a medium article that may be helpful: ""Animating SVG in React Native – Ethan Tran – Medium"" https://medium.com/@ethantran/animating-svg-in-react-native-cf1907831608",1532930032.0
TheNumberOneCulprit,"Lottie animation. Since that is what it is, an animation, there's no reason not to simply use Lottie. Or a pure SVG transform, but you're probably going to end up with the same result both ways.",1532961010.0
laurentl,I'm looking for tips with regards to the animation,1532896298.0
halfjew22,"FWIW, I've run into this before when I had much less experience in RN. 

Unfortunately, our solution was getting rid of the parallax scrolling. Only on Android though, it worked on iOS. Sorry for the bad news, but just want to let you know that there's someone suffering out there just like you.",1532896963.0
dmanatr,"Since you mentioned that using the native driver really helps, is there any reason why you could not use transform: {scaleY: value} property instead of the height? [https://facebook.github.io/react-native/docs/transforms#scaley](https://facebook.github.io/react-native/docs/transforms#scaley)

The problem is by not using the native driver, the bridge gets very busy in sending modified Views to the native realm.",1532932896.0
kbcool,[http://expo.io/](http://expo.io/),1532888741.0
Gart3nzw3rg,"Take a look at onNavigationStateChange ([https://reactnavigation.org/docs/en/custom-navigator-overview.html#onnavigationstatechangeprevstate-newstate-action](https://reactnavigation.org/docs/en/custom-navigator-overview.html#onnavigationstatechangeprevstate-newstate-action)) 

It is called on every navigation state change and it will tell you from what screen the user comes from, where the user wants to navigate to and what action was used e.g. if the back button was pressed",1532879873.0
kbcool,"You don't build whole apps with single patterns. You use multiple patterns (one would hope) in your code. Think of it more like a philosophy to follow.

React's state and props are essentially an observer pattern. When you set state or modify props the component is notified and business logic can happen but more often re-rendering occurs.

Now I hope I'm not doing your homework but what you asked for is below (not tested just written up quickly):

Edit: The new Reddit redesign has made copying and pasting code into a garbled mess so here's a link to a gist.

[https://gist.github.com/shokimble/8d4a174b068a382a465514c77d4dc240](https://gist.github.com/shokimble/8d4a174b068a382a465514c77d4dc240)

So what it is, is a RN component that initialises state (your observable) to a random color. The render function renders a view which observes bg and when it changes re-renders your scene.

In the constructor is a function which is called every 5 seconds that just updates the color to something random.

You probably need to learn plain old React or Javascript first from the sounds. I struggled going straight from JS to RN and I was well seasoned as a programmer.",1532883143.0
_rascal,how about if your child elements aren't child elements and just absolute position on top of your background?,1532874609.0
_rascal,"web app uses plain react, react-native uses different components (notably flatlist a lot, and you have to wrap everything in View instead of div), just read the documentation, bro.....",1532874744.0
GantMan,"Would you consider fastlane for iOS and Android releases?

Would love your feedback on our method of releasing apps:
https://shift.infinite.red/simple-react-native-android-releases-319dc5e29605",1532877001.0
johngag,Cool looking app. I encountered some bugs. Pm me if you would like. ,1532873715.0
GantMan,Would you start with Expo again?   I hear everyone has to eject at some point.,1532876914.0
coold007,Great app. Wanted to know how much native code did you write for the app? Also did you do anything for better performance?,1532894234.0
zergUser1,"2 questions, 

How long did it take you to go from deciding you were going to build this app, to have it released on both platforms and the included website for it etc?

How long did it take you to go from the first line of code written to the last line of code written that gave you a potentially shippable app?

Just incase that didn't make sense, first question is the timeframe of the entire process of releasing the app. Second question is just the coding of the app",1532901965.0
skizzoat,"Looks good on first glance, Facebook login doesnt work though:

„App Not Setup: This app is still in development mode, and you don't have access to it. Switch to a registered test user or ask an app admin for permissions.“",1533081176.0
gajjartejas,Your Facebook login is in development mode. When can you go live?,1533098069.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/amaaggregator] [How I made and released my first big React Native app. AMA.](https://www.reddit.com/r/AMAAggregator/comments/92u8xu/how_i_made_and_released_my_first_big_react_native/)

- [/r/javascript] [How I made and released my first big React Native app. AMA.](https://www.reddit.com/r/javascript/comments/92vwcb/how_i_made_and_released_my_first_big_react_native/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1532865449.0
DanmCanIJustComment,"Great stuff! Thanks for sharing your experience.

How long did it take you in total, from initializing the project to going live? And what was your background in coding before React Native?",1532873800.0
PlaneReflection,How much code reuse was between iOS and Android?,1532879483.0
kbcool,How do you plan on being compensated for all your hard work? i.e. How you going to make money?,1532881921.0
NaijaBoyyz,"This is a solid application. How are you dealing with storage costs? Are you using a third party storage platform and if so, how do you plan on monetizing to offset these costs?",1532884248.0
hiesm,"For marketing wise, i would like to add a descriptive title rather than just the name of the app.
",1532884945.0
Giusepo,How did you make the first panels where you select the sex height... ,1532892442.0
TheJosephCollins,Did you come up with the UI design yourself? A lot of the trouble I have in making my Apps in my personal time stem from the infinite possibilities of design and inability to make a choice. Any tips?,1532958842.0
sregg,"Great job 👏

I just started my first React-Native contract (after 6 years of native mobile dev).

Did you use any CI/CD to automate the app release? (e.g. Bitrise, AppCenter, etc...) ?

Did you use Typescript?",1532973670.0
,[deleted],1533032570.0
NiceBluebird,"Nice app, I just checked it out.

Did you notice any issues with animations? What about keyboard / text-input / scroll-view issues?",1533075232.0
PistolPlay,"If you did any interaction testing, how did you do it? I'm having some trouble getting enzyme with react-native-mocks to work due to react-native-mocks not being compatible with react 16.",1533090987.0
jadenz98,"Ok that is helpful, thank you. I have an iphone but it looks like its time to save up for a new MAC 😁",1532880997.0
halfjew22,"Are you guys interested in these long form unedited (and perhaps more 'true and accurate to reality') tutorials? I would love to make some of these but didn't think people are interested in stuff that isn't super flashy and perfectly edited. 

Any apps you'd like to see? Any technologies?",1532896699.0
pizzabeercode,Is there a repo available? ,1532902543.0
kbcool,"Why wouldn't it work for you?

All react-native-simple-radio-buttons does is change a key in the component's state when you click on it. So you can have 3 rows each with a separate RadioForm component in it that sets a different key in state.


Here's how to do it from the docs (I just added the two extra rows - no guarantee it will run).


        import RadioForm, {RadioButton, RadioButtonInput, RadioButtonLabel} from 'react-native-simple-radio-button';


        var radio_props = [
        [
        {label: 'row1_1', value: 0 },
        {label: 'row1_2', value: 1 }
        ],

        [
        {label: 'row2_1', value: 0 },
        {label: 'row2_2', value: 1 }
        ],

        [
        {label: 'row3_1', value: 0 },
        {label: 'row3_2', value: 1 }
        ]
        ];

        var RadioButtonProject = React.createClass({
        getInitialState: function() {
            return {
            value1: 0,
            value2: 0,
            value3: 0
            }
        },
        render: function() {
            return (
                <View style={{flex:1, flexDirection: 'column'}}>
                    <View>
                        <RadioForm
                        radio_props={radio_props[0]}
                        initial={0}
                        onPress={(value) => {this.setState({value1:value})}}
                        />
                    </View>

                    <View>
                        <RadioForm
                        radio_props={radio_props[1]}
                        initial={0}
                        onPress={(value) => {this.setState({value2:value})}}
                        />
                    </View>


                    <View>
                        <RadioForm
                        radio_props={radio_props[2]}
                        initial={0}
                        onPress={(value) => {this.setState({value3:value})}}
                        />
                    </View>
                </View>
            );
        }
        });",1532859305.0
PaulLaux,"Hi, Check out ”Facebook f8 app” 
https://github.com/fbsamples/f8app

It's Opensource and built with react-native.",1532845857.0
PaulLaux,"This one is interesting:
FaridSafi / react-native-gifted-chat
💬 The most complete chat UI for React Native
https://github.com/FaridSafi/react-native-gifted-chat",1532878440.0
I_AM_NIKOLAI,"If anyone has any other learning resources/ways to improve my intermediate RN skills, please do share! Anything is appreciated and will be extremely helpful. ",1532838675.0
bzzhuh,I'm interested in this answer too. I've been using a number that's calculated from a percentage of the screen width for anything that isn't full width and it works okay I guess but feels wrong somehow. Sometimes I have to know the image w/h ratio if I'm overlaying stuff.,1532835270.0
kingkdo,"So Ive found an answer. If you have no prior requirements for the image sizing you can just use Image.getSize or onLoad to find the w/h. Or if you have one requirement either w or h, you can use resizeMode and it will automatically find w or h and also maintain aspect ratio. You will need to use flex 1 for the image styling as well.",1532841626.0
ahartzog,"What do you think you’re accomplishing with this?

Like not sarcastic - I have no idea what you’re doing and I’m curious. ",1532804869.0
petertheill,I feel like you should have made a component out of it instead,1532806937.0
anonymousmouse2,You’re not really following best patterns here. Whenever you have components like this it makes sense to separate them into their own files. You should create a header.js file that returns a <Header /> and style it inside that component file. ,1532839641.0
,[deleted],1532815576.0
alanctw,"Forgive me for my noob question, currently working on my first react native app. 

Is there a way to pull these styles into a “styles” file or no? If there is a way, is there a reason you aren’t doing it here?

I know React allows for it.",1532821518.0
,[deleted],1532828324.0
ahartzog,"Oh, I do see it now, thanks! So yeah nested object naming. Very interesting. Yeah mine are always like “style.headerWrapper” then “styles.headerText” and so on. This is an interesting pattern I could see worth pursuing for a globally used style sheet. ",1532806921.0
AddMeOnReddit,Why not just make a View with the styles you want and export it as a component? Then you never have to style it again!,1532808977.0
excs,i like it.,1532805540.0
kbcool,"I have to admit I haven't used mapbox much but I have used react-native-maps a lot and pushed it to its limits. It almost made me cry.

There's likely going to be a full product built of an MVP I did that is map centric and at that point I'll definitely be ripping out react-native-maps with a google maps backend and replace it with mapbox. We already have done some of the backend using their APIs.

TL;DR - use mapbox!",1532855010.0
sourtargets,"

Despite its name, onPress *is* called on release. From the docs:

> onPress

> Called when the touch is released, but not if cancelled (e.g. by a scroll that steals the responder lock).

",1532794645.0
ramzez_uk,Depends on the component. What component are you using ?,1532794336.0
tizz66,"Yep, [onPressOut](https://facebook.github.io/react-native/docs/touchablewithoutfeedback#onpressout). All the Touchable components inherit from this one so it’ll work even though it’s not explicitly listed on their doc pages.",1532794483.0
lakesObacon,"I'm no expert, I only dabble in React Native as a hobby.

That said, I think I encountered a similar issue with scroll events I wanted to override earlier this year. You can wrap the onKeyUp (or onTouchEnd) browser equivalent event with a [Synthetic Event](https://reactjs.org/docs/events.html)  object.",1532794557.0
BooneTheSaint,"look at the [Rain](https://github.com/willnickerson/react-rain-animation/blob/master/src/index.js) class, it's a very easy refactor to adapt it to react-native",1533228117.0
Kmantheoriginal,"It can truly be the worst. I had one today where it was running on the emulator when connected to the debugger, but without it failed. Turned out to be the order of import statements. ",1532729578.0
GantMan,"FYI, the video that reddit selected, is NOT the one youtube will bring you to.  Sorry it mixed them :(",1532790116.0
kbcool,"Coors, Miller and Budweiser also claim to be authentic and genuine beers but no one else agrees with them.

Proof of authenticity plz.

(Soz: Yes it's a Friday and I'm on the beers already so forgive me if you don't get my sense of humour).",1532716238.0
filipef101,Is there a sample app made with this? looks promising :),1532705716.0
NiceBluebird,"How does it differ from the standard native nav solution by wix?

https://github.com/wix/react-native-navigation",1532719667.0
rodrigoelp,Does it have typescript definitions?,1532726209.0
Unforgiven-wanda,What about performance profiling? How does it perform compared to react-navigation and react-native-navigation?,1533115390.0
Giusepo,Eslint,1532719843.0
kbcool,"Why? Are they hurting you?

I know you're keen /u/smiles_low but you post some stoopid questions sometimes. I just went back and looked at how many times I've replied to you with ""why?"" or ""google it first"" on this sub. It's a LOT.",1532716635.0
kbcool,"Since no one has tried this one yet....

No gradients out of the box with RN.

Plenty of packages out there to make up the shortfall.

What do you mean by icons and text? You want them to be filled with a gradient? That's probably even harder to find than a decent solution for filling Views.

There's some solutions for producing masks which you could then apply to an underlying gradient - you could try one of the SVG packages or canvas. There's a lot of ways of approaching it but yes no out of the box solution.
",1532716481.0
jacksmith2416,"Like ConnectyCube, many competitors playing a separate role in SDK and API world.  Take a look at them:

1. [Mirrorfly](https://www.mirrorfly.com/chat-api-solution.php) \- Chat API & SDK Provider.
2. [Apphitect IM](http://www.apphitect.ae/instant-messaging-solution.php) \- Open Source SDK.
3. [Contus Fly](https://www.contus.com/messaging-solutions.php) \- Instant SDK Solution for Chat, Video & Voice. 

&#x200B;",1542354547.0
fuck_with_me,"Seems like this person is just naming their directories in an idiotic way. That being said, I think what you _thought_ it might be is something like [import-glob](https://www.npmjs.com/package/import-glob).

Also, this has nothing to do with RN.",1532677197.0
stutterbug,Where is the article? I've gone searching for this and can't find it. I'm wondering if the author is using a code formatter that's mangling the output. Or perhaps that's a source-mapping issue.,1532679637.0
ChronSyn,"That's awful. I figure they might be replacing them dynamically in their build routine (e.g. different states for different platforms or screen sizes, such as tablets), but these imply they're state stores so that doesn't make sense, not to mention there's no alias prefixing it.

The second thing I can think is that they've got a previous version of the project, and have tried to migrate these files but perhaps they have a `./stores/Alerts.js` file already which doesn't import from child folders,  but in that case their directory structure is also weird.

My final thought is that they're parsing these variables somewhere outside the scope of the code or build, such as a githook or similar that is searching for these as delimiters. After all, selecting all entries based on a match of `(_` as the start and `_)` as the end is fairly easy vs searching through all imported paths and hardcoding the ones you want.",1532688749.0
lovemeslowly,"I am using 0.56 with android gradle version 3.1.2, and updated gradle version in wrapper.properties to 4.4-all

",1532692961.0
kirisafar,"I think the date should be a state and not a prop.
In your case= this.state.startTime
If it's initial state is null, it will display the placeholder. Otherwise the selected date. ",1532672111.0
kbcool,"If you think it should work lodge an issue on their github page. Best place for it.

Quick glance at the docs for me says you're probably doing the right thing given the info I have at hand which is not much. Date does appear ""falsy"" so placeholder should be shown if it's left blank as you have.",1532715991.0
PistolPlay,"The benefits of code sharing between web and native can't be stressed enough. Most of business logic and all of your redux/flux logic can stay the same. Leaving you with only wiring up the presentational components + routing to deal with. 

A good example/boilerplate to build off of is https://github.com/mcnamee/react-native-starter-kit

This project shows you how you can share most of your code! ",1532657019.0
,[deleted],1532661391.0
ahartzog,"Great article! Just diving into building the web accessible version of our mobile app now, and looking forward to implementing code sharing between them!",1532658069.0
ramzez_uk,Excellent read,1532716821.0
creambyemute,Good read!,1532719343.0
mguellsegarra,Interesting! Thanks for sharing,1532725615.0
NiceBluebird,"You could use those in a webview.

Otherwise you'd need to repurpose them. But I've seen that RN doesn't have good support for creating rich-text editor type capabilities (syntax highlighting and the like). Most libraries I've seen wrap a webview like: https://github.com/wix/react-native-zss-rich-text-editor",1532648949.0
ahartzog,"Is this just expo? Or other things too?

I saw this same error when we upgraded mobx to 5, we had to revert to 4 because some feature wasn’t supported yet. I’m trying to remember what the specific item not supported was, it might just be symbol itself?",1532639583.0
sophrosun3,"The version of JSC used on Android in react native currently doesn't support Symbol and Proxy, among a few other features. The work is being done to upgrade it but hasn't finished yet. ",1532656095.0
blbil,"Maybe time to reevaluate navigation options, currently using react-navigation but haven't had a reason go to something else yet.

Anybody tried this yet?",1532627710.0
bodacious_john,I believe its shadowRadius with the number of ehatever the element's radius is.,1532622472.0
redpopcornpanda,"I made this issue on react-native, might be related: [https://github.com/facebook/react-native/issues/19959](https://github.com/facebook/react-native/issues/19959)

feel free to add a comment if you have more input about it",1532651885.0
Pavle93,"    npm install --save react-native-router-flux

I guess this is a mistake? :)",1532614985.0
sourtargets,Strong recommendation for react-native-navigation by wix. Easy yet comprehensive API & good performance because all navigation actions are entirely native.,1532616230.0
jmcneese,"very nice work, starred.  are there plans for nested navigators?  e.g.:

* RootStack
   * SplashScreen
   * AuthScreen
   * MainStack
      * DashboardScreen
      * ProfileTabs
         * DetailsScreen
         * InterestsScreen
      * SettingsScreen

the behavior I would expect is that if I was in DashboardScreen, I could navigate to InterestsScreen (via an app-wide drawer or something), or if I was in SettingsScreen and completed a ""log out"" action I could then reset the entire stack to AuthScreen.",1532643468.0
lovemeslowly,">*E.g., even making screen appear from the bottom is a pain.*

there is a library for that , react-navigation-transitions. And how about drawers and sidebars in your library :)",1532624742.0
ChronSyn,"In regards to react-navigation, there's a lot out there that shows examples of V1 which doesn't have all the features, and has some different keys for certain API calls (particularly the header stuff) which can throw people off. Then you have v2 examples which are probably missing some of the stuff you want, and tying it all together with what the API docs say is sometimes a bit mind-melting.

I haven't come across a situation that V2 has failed me in and I've now got my go-to boilerplate on how most of my projects navigation will work, but it definitely took time to get it right.

With that said, I'll definitely have a look at the repo and see how it compares as it would be nice to be able to ditch the separate navigation.js file I currently use.",1532688327.0
notseanbean,"Hello, have joined Reddit to post ITT. Like you, I do not like the current React Native routing ecosystem. I wrote my own navigation solution too, but would prefer an open source solution, so I hope yours (or another simple library) succeeds.

I like that your library is lightweight and not prescriptive with tabs and drawers. After using `react-native-easy-router` I have some comments:

1. Can you prevent navigation actions during transitions? If I have a button that performs a `.pop(...)`, I can press it while the screen is animating, and pop past the stack to get a white screen.
2. How would you dim the source screen during a transition? (Like this effect here - https://github.com/react-native-community/react-native-drawer-layout-polyfill#user-content-demo - where the ""content"" is dimmed when the drawer opens)
3. Could `.pop()` be passed the animation object that it was `.push(...)`ed with? That way a screen could know how to pop itself in reverse.
4. The main thing that may prevent me adopting your library is the use of `react-native-animatable`. I have found it far more performant to use `Animated.timing/spring` and applying `transform`s on an `Animated.View` rather than animating a `left` or `top` style value, because `useNativeDriver` can be set to `true`.
5. Currently, all of your screens are 100% width and 100% height. Could they instead expand to the size of the containing view, so that you can have a common tabbed header or footer?

I have an example simple app that uses your library (and it has drawers and tabs and unauth/auth routes to demonstrate that they are not needed in the router itself). Let me know if you would like to see it.

In any event, thank you for your work, and good luck.",1532977100.0
Turbo_swag,JWT. Managing cookies in react native is not pleasant. All mobile tcp/ip requests are https and xss isn’t an issue on mobile. ,1532604917.0
orta,"This section of a post on statelessness in APIs talks about the tradeoffs, http://artsy.github.io/blog/2018/06/18/On-Obsessive-Statelessness/#User.Sessions.are.ephemeral

When you say high security, then stale JWTs may be a problem for you.",1532605615.0
pabloneruda,"Always JWT. Aside from the security side, it's way easier to develop around. ",1532624039.0
,[deleted],1532650913.0
Heka_FOF,"I have done real time Chess app with Firestore and it was good. So I am sure it is good for chat application too

Here is my project [https://github.com/henrikra/space-chess](https://github.com/henrikra/space-chess)",1532586353.0
kirisafar,I would create a Switch or Stack navigator. First screen with the tab component from react native paper (the source of createMaterial...) And the second screen with your tab navigator. ,1532584353.0
pfriez,If you are having trouble with implenting your desired UI in react-navigation then I suggest changing the design instead. Trying to force React Native into doing difficult things is the cause of most peoples problems.,1532583614.0
Mozorelo,MacOS only? I don't understand why you even bother making something platform dependent today. You SaaS should run in browser and platform independent. No excuse for not having it that way today.,1532595879.0
bostwickd,Hey everyone. I'm the author. I'd love to hear other's stories with RN and what questions you asked before starting to use it on your projects.,1532546605.0
sourtargets,"Good article with a few very good reasons on why not to use React Native. My two cents: Write once, run everywhere is just such a massive upside to RN. For 99% of generic apps I don't see very many reasons to write & maintain the same code two-fold.

If you're in a big company with resources to hire separate teams for each platform, and your app is your main product (Facebook, AirBnB, etc.), by all means go native and make your product as exceptional as it can possibly be.
",1532550489.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/androiddev] [Deciding Between React Native and Native Code For Your Next Project • r\/reactnative](https://www.reddit.com/r/androiddev/comments/91v04o/deciding_between_react_native_and_native_code_for/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1532547259.0
alien3d,small requirement  react  native. Big requirement   native.. ,1532599442.0
z0rawar,"For me, the only deciding factor is *CodePush*

Isnt it /u/bostwickd ?
",1532603725.0
sacred421,">React Native is not the first mobile app framework to promise write once, run anywhere. 

Careful, Facebook has tried to clearly state that they are not going for write once, run anywhere. They are trying  to market as *learn once, write anywhere.*

[https://reactjs.org/blog/2015/03/26/introducing-react-native.html](https://reactjs.org/blog/2015/03/26/introducing-react-native.html)",1532619348.0
trippyboy420,"If it's looking like you're going to run into something like this often, and the two classes aren't directly related (parent/child, both child of same parent, etc) I'd recommend looking into [redux](https://redux.js.org/) for global state management.",1532542243.0
ahartzog,"This question seems to me more about React in general, and also isn’t clear enough to really explain what you’re looking for. ",1532537650.0
demoran,"firebase allows you to merge as well as completely overwrite.  Perhaps you want to merge your data.

Actually, I'm talking about `firestore`.  If you're using the realtime database, perhaps the same is true.",1532541316.0
Giusepo,Go to nativebase.io,1532527002.0
albertpak,Check out this series: [https://www.youtube.com/watch?v=MDAdY2LkP\_U&list=PLy9JCsy2u97ksUNgcXFYXZiuxSkkxQC5F&index=1](https://www.youtube.com/watch?v=MDAdY2LkP_U&list=PLy9JCsy2u97ksUNgcXFYXZiuxSkkxQC5F&index=1),1532575362.0
kbcool,Mods: I know you don't actually ever read this sub but please can we pin this with a read me first disclaimer! This site has answers for all the newbie questions that get asked daily.,1532529860.0
jahans3,"Use PanResponder to lift up a ScrollView, once the container has got to the top enable the ScrollView and leave the container positioned up.

Edit: in the gif check out where the scroll bar switches to the ScrollView",1532469872.0
interactivejunky,I built a react native library a while ago to make this easy [https://github.com/rome2rio/react-native-touch-through-view](https://github.com/rome2rio/react-native-touch-through-view) I'm not sure if it's still working but it looks like some people are still maintaining it.,1532492144.0
VanaticalDesign,"Implementing momentum scroll with the PanResponder is pretty difficult. Here's an easier method that doesn't use the PanResponder and just uses a ScrollView and interpolation. 

[https://github.com/jennmueng/Spotify-inpsired-Scroller](https://github.com/jennmueng/Spotify-inpsired-Scroller)

[https://gfycat.com/gifs/detail/ImpossibleGrippingEquine](https://gfycat.com/gifs/detail/ImpossibleGrippingEquine)",1532499698.0
the_bieb,"No clue, but I totally forgot about this album until right now. Time to go listen.",1532469521.0
daymanAAaah,"Maybe not a good way to do this, but I’ve achieved it by putting a big, empty cell at the top of a table view that is transparent. It’s really easy to implement.",1532474092.0
jacobp100,"I spent quite a while on basically the same thing.

The non-moving content is just a single view.

Create an Animated.Value and set the first view’s transform’s translateY to this value

Then use Animated.event on the scroll view’s onScroll handler. Don’t forget to set scrollThrottle to 1

This’ll keep the top view from moving and you’ll be able to add Touchables inside it",1532539526.0
redpopcornpanda,Wrap the video component in a view with a border radius and overflow hidden ,1532464731.0
JunkInTheBunk,May I ask why you don't just use a \`ScrollView\` component with \`pagingEnabled\` + \`horizontal\` and \`scrollEnabled\` set to false?,1532462579.0
AlienSoldier,"you create the tab navigator, export it and use it as regular component where ever you want ",1532468145.0
ChronSyn,"In what sense? Are you thinking of tabs at the side, tabs that are standalone (why not use buttons styled like tabs?), tabs that are hidden but still have child components to allow navigation via another component (use individual screens and navigation instead?)

Some more info would help.",1532519731.0
kbcool,Post the errors here plz.,1532424510.0
kbcool,"Should have gone for the manual install. Cocoapods and RN are a PITA.

Unless you know of a good reason for it comment out the use_frameworks! line. It causes issues (forget which now) and is unnecessary. Do another pod install after that.

Strange though it sounds add 'tvOS' to the subspecs. You seem to have everything needed already but I had a problem on one version of RN once and again forget the specifics where there was a similar issue but that error you have there is the generic ""we have something missing but not going to tell you what it is, sucked in"" error.

On strawberry farming, very physically and mentally rewarding. Just wish it lined the pockets as well as programming.



",1532427246.0
LEO_TROLLSTOY,"https://github.com/facebook/react-native/issues/15838

You need to up your googling skillz.
This is the identical problem to yours and has been solved",1532427263.0
sourtargets,"Holy macaroni, it's alive! It'll probably break again tomorrow, but here's the steps I took: 

Re-install node\_modules 

`rm -rf node_modules yarn.lock && yarn cache clean && yarn install`

Re-install Pods

`cd ios && rm -rf build Pods Podfile.lock && pod install --repo-update`

In Xcode: 

\- Under schemes > Manage Scheme > Build: Add React **twice** to Targets (from under Pods and from under React), and place both above your app. Maybe only one of them is necessary, but it works so I'm not going to try my luck with it.",1532428166.0
kirisafar,"Is it necessary to use 0.55.3? For some reason the React library installed by cocoapods is very old.
React Native init a new project on 0.56.0 no need for cocoapods react, yoga, etc",1532584764.0
LEO_TROLLSTOY,"I suggest you don't. If your app needs a manual, it's not user friendly. Besides, rarely anyone ever remembers  tutorials because no one reads them. 

So, i suggest you try to make your app more simple and intuitive to use. Otherwise, you will tend to solve all convoluted actions by sticking explanations in the manual",1532419302.0
kbcool,"Don't try use the wrong tool for the job. Use a game engine.

https://github.com/bberak/react-native-game-engine-handbook",1532424586.0
Pavle93,"Sick of comparasion articles where authors have no balls to pick either, but ""it's up to you to decide"".",1532420578.0
liquid_penguins,"Try ListView and add a sticky header. The header is where the categories would appear.

[https://facebook.github.io/react-native/docs/listview](https://facebook.github.io/react-native/docs/listview) (specifically rendersectionheader and stickySectionHeadersEnabled)",1532369187.0
chazmuzz,Flutter is 2 or 3 years behind RN in terms of maturity.  Give it time.,1532329513.0
pfriez,"The company I work for have been getting Flutter request and  turning them down due to lack of manpower. I personally don't have a preference, React or Flutter or native doesn't matter. Actually I've been ramping up on Flutter so that I can take advantage of the opportunites :-)",1532340746.0
kbcool,"ROFL, you should definitely not take up statistics. Unless it's for the ~~Nazi party~~ (some sensitive soul might take that the wrong way) or someone else who wants to draw their own conclusions from random numbers.

Please tell us how number of open issues compared means anything?
",1532334427.0
LEO_TROLLSTOY,You could but you would go mad trying to match the effects,1532331491.0
tarpier,Not sure iOS will let you do this. I know you have to specifically enable this on Android (for example for Apps installed through HockeyApp),1532368675.0
TheNumberOneCulprit,"iOS / Apple will not let you do this. Drawing over apps is a huge nono in Apple land, as it's not harmonic with their UX guidelines. A good example is the Facebook Messenger app that has an overlayed chat bubble on Android, but none on iOS. If Facebook is not going to be allowed, I highly doubt you are, unfortunately.  


EDIT: Fun fact actually, the Facebook chat bubble overlay is using the SYSTEM\_ALERT\_WINDOW permissions on Android which was/is classically reserved for your application to be able to send information that a very needed background process (e.g. notifications or geo-tracking) has gone completely wrong. Facebook just figured that they could use the alert view as a chat view, and soon, people started following suit with e.g. Arcane Tracker.",1532519495.0
kbcool,Ok I won't.,1532334305.0
dip-my-nuts-in-sauce,No it's fine. What matters is the app level gradle targetSdk version.,1532300436.0
,"Bro I think it should be minimum 26, so make it like that. I just released my app few days ago like this.",1536400960.0
xrpinsider,"Its really simple and I found that most people are having minor/no problem with getting it up and running. The documentation is already great. The article seems OK though, so great job.

Edit:
I don’t find the removal of scanning QR codes on iOS problematic. ",1532276870.0
cgomezmendez,After what happened with the sudden rise of prices on GMaps I wouldn't touch firebase for essential stuff as Auth not even with a 10 foot pole.,1532286990.0
IgnitusLairron,Firebase has been a godsend for me recently. I learnt it so that I could impress a prospective employer and wish I had the time to build all of the ideas I came up with while learning it. It makes things so simple...,1532247533.0
derGropenfuhrer,https://developer.android.com/studio/publish/versioning -- versionName is in your build.gradle. Maybe look for a package that will read/write gradle files. Then use a `postversion` hook in package.json to modify that with a node script? ,1532215581.0
SizzlerWA,Fastlane,1532239668.0
mytricka,react native's scrollview/flatlist with the horizontal prop. ,1532187381.0
WarrenBuffering,"Not sure I understand your question, but I believe TabNavigator if you're asking what I think you are",1532186689.0
AwkwardLie,Are you asking for horizontal scroll bar?,1532187045.0
kbcool,"Maybe TL;DR for most? Not a hard question.

No it doesn't build from source when you run ./gradlew assembleRelease that is why they have instructions on how to do so. There are jar files that come with the npm bundle that are essentially a precompiled version of RN. 

You need to follow the instructions.

The first step is about making sure your path vars are set for java.

Are you familiar with the terminal? Bash etc? Any experience with any non GUI OS? You must have at least enough to have installed react-native? 

It's just asking you to run those commands but replace your_unix_name with whatever username you use to login to your mac. You can find it out by typing in whoami then pressing enter.

BTW: If you found a commit that fixes your issues it's likely actually a pull request and not in master yet. If so then you need to work out how to fetch pull requests. If it's in master ignore me and continue with the instructions.",1532193867.0
nickmcsnapz,"Ok. So, to begin with, you're asking a very generic question, but a question that I'm sure a lot of people need to ask. 

If you want to create an app that could potentially serve millions, if not billions, of users you need a few basics. I'll do my best to cover them here at 2am my time after ~25 beers. I'll be passing out in bed straight after this and encourage anyone to add to this discussion. 

Firebase works by using web sockets. Google it.  You can build the same thing yourself, but you can build a car on your own too, you just don't have the time, money or expertise to do so, so you buy one from a dealer. Same thing here with firebase. It's got all the bells and whistles and easy to use. 

Any backend database can be accessed by a mobile app and a web app.  You do not need two separate databases on separate backends. Just one backend (which is scalable due to high network traffic) with one database (which is also scalable and, hopefully cached) that serves data as efficiently as possible. 

Doing the above on your own... you either need to be 10+ years deep, or have a team, or use a BAAS (backend as a service). If you're asking the questions you're asking then you're not 10 years deep and you don't have a team that can do this, so you need a BAAS, e.g Firebase, AWS, your own Node.js server, or another plug and play BAAS.

You will also need to learn these things, preferrably in this order:

1: Javascript - to code your RN project. Learn by doing, not just by watching. Your goal is to not know every single detail of coding JS, that's what fucks most people, all you need to know is general concepts and syntax.  Identify what you want to code and understand enough to know what is best to use in that situation. This will not come without trial and error. You can't read everything and know what to do without practice. Think of things to code and try to code them, it is THE ONLY way to create new neural pathways to solve solutions to your problems through coding.  Also, when you do this with one language, e.g JavaScript, your neural pathways for other languages will increase. You'll be able to learn C# very easily, or PHP, Swift, etc much faster. You'll exponentially learn other languages from there.

2: Git - to commit your changes to your project.  If you screw anything up (which will happen over and over due to the nature of RN packages being updated so quickly) you can revert your changes easily with Git, without having to start from scratch every time. This can also be done through copy-pasting your project folder, but obviously when you begin to work in teams, outsourced or locally, they cant access your copy/pasted folder on your local computer, which could be in a different location / country etc. Git solves this issues by storing your files in a central location where you can push and revert your changes to. It's a fail-safe and, even if you're working alone, it will save you and your project more than you can ever imagine right now. Do not skip this as the second thing you need to learn or you will waste weeks, if not months, of your life trying to get back to a project that builds successfully. I repeat, do not skip this step of your coding journey. To do so would be similar to a race driver who knows nothing about fixing or upgrading their own race car.

3: XCode & Android Studio : Think of these as maps of places you have not explored. They are the development environments for iOS and Android. Don't be scared of them. Learning how to navigate them is no different to learning how to use Word, PowerPoint, Photoshop or any other environment. You were once scared of those products, hopefully you aren't now. Think to yourself that you are a not just a product of your environment, you are a product of the effort you put into understanding your environment. This is no different to anything else in life. XCode and Android studio will be your new homes. They seem like distant planets right now, but trust me you will know the streets as well as you know your home town if you put a month into understanding each. YouTube is king here. Google that shit. Start with one. Do you want to build an iOS or Android app first? Answer that then learn the IDE for that platform. YouTube, YouTube, YouTube. 

Few more tips:

a) Get a Mac, you can't build iOS apps on a Windows PC, but you can build both iOS and Android on a Mac. 

b) You can build all of this on emulators, on your Mac. You don't need a real device at all, except when production testing. If you get to production testing you'll already have a few devices, it's almost a universal law of mobile app devs.

c) Firebase is awesome but it's not the only BAAS (back end as a service). AWS does the same thing, single-sign on, analytics, cloud databases etc. Right now don't worry about price, or which BAAS you go with. They all have free tiers and, if you hit their limits, you'll know whether you're onto a good idea depending on whether you can afford their paid tiers. If you can't afford them then your business model isn't worth pursuing, or you need to pivot or remodel your fee structure. There a lots of BAAS', don't worry about which one to go with right now, all you need to do is learn the differences between them and how to determine which one is the best for your use-case.

d) You can make your own backend with Node.js and a database. NoSQL is the way to go for now, it'll teach you how to structure JSON data, which is something you will eventually have to deal with. SQL is complex and good to know, but NoSQL is easy, fast and great for apps that don't need huge amounts of data (SQL itself is a massive subject and you'll figure it out if you get to the point of having to figure it out). For now use NoSQL databases, you'll not only learn how to communicate with APIs, but you'll learn JSON data structures at the same time, which is way more important these days due to APIs being mainly JSON first/only these days. MongoDB is a great NoSQL database to use with Node.js, it is basically a heirarchy of text files, but each text file is a JSON document. Sounds complicated, but watch a YouTube video on it and it'll make sense. 

e) Learn how to communicate with APIs. It's frustrating sometimes, but that's programming for you. There's a built in React Native component called Axios. Google it. It's simple to use. Try to make a simple project that communicates to some free API (weather APIs are usually used as examples as they are free and very available) and then displays the weather info on a screen in an app, then go from there. Check out videos on a Chrome extension called Postman, it'll make your API comms a hell of a lot easier to test and, eventually, to code.

That's all I can be bothered writing for now. If you want to know more give me a PM so I know I'm not wasting my time writing this to someone who thinks it's too hard. 

f) There's a load more to learn, but I guarantee you once you get to a point where you're getting somewhere, you'll never look back. Once you're in, you are in for life. Your neuro pathways will change and the way you look at problems in life will be more and more analytical as your learns go on.  It's 10000% worth it. The money is great, the respect is great, the ability to create things that no one you know can is great and, if you love building things, helping people, being a one man entrepreneur machine or even just love solving complex problems, it's worth all of the pain. 

Good luck.",1532107058.0
I_AM_NIKOLAI,"Possibly look into Redux, if you haven't already.",1532105257.0
nojas,There is no simple answer here (too many non specific questions to answer). My advise would be to start your project and cross bridges when you get to them. Most will be solved by reading the docs (on firebase for example) and otherwise a google search should give you relevant medium/stackoverflow answers. Just start and when you have something specific feel free to ask.,1532103949.0
das3ingg,"Well if you're looking for a backend technology - why don't you use something you're already familiar with? You can use something like the Play Framework for Java or Django for Python. Since you know those already spinning up a user profile system should be trivial, the only thing differently you need to do is make your endpoints send/accept JSON instead of rending html. Then you just call those endpoints from your React/ReactNative apps",1532103981.0
TheJosephCollins,"Well my advice , as this is what I have done for my own mobile app, is write your backend system with Node.js and Express.js. In doing so you will be able to set up a RESTful service that can send JSON to both mobile and web. You can connect to any backend that you wish from there. I use MySQL for my backend but I also have Firebase set up just to handle my Realtime chat. The realtime chat information doesn't come from the RESTful service but directly into the app using the firebase react native package.

What you gain by keeping the majority of the tech stack in javascript is the ability to get really really good at it and specialize. 

As for tools like Firebase what you need to understand is purely up to what problem you are trying to solve. Firebase is a NoSQL database so you should read the pros and cons and relate them to your goal.

The thing you should also think about is authentication. Firebase has authentication ready for you to implement but if you are going to write a Node backend you will have to also do authentication on your server. 

Don't be afraid to redo or change your app as you come to it. I originally wrote my first version of my mobile app completely with NoSQL backend but realized later on I can be way more efficient with MySQL for the type of data I was working with. 

Just pick something and start running with it. If you run into problems and start questioning should you do something this way, or do something that way, then you are asking yourself questions that developers in the industry are all asking themselves.",1532106296.0
gabrarlz,There is a bug on AsyncStorage where the Promise is never resolved. You could try with redux-persist-filesystem-storage. It worked for me but I could not make it work with nested rules like root + specific auth reducer (maybe it's a bug in my code),1532071437.0
kevwhy,"`redux-persist-filesystem-storage` worked for me as well.   
But you have to install `react-native-fetch-blob` I am not sure  is it compatible with Expo. 

Sometime if you're connected with a debugger, you have to close the app and restart once to complete the rehydrate progress. But it won't happen on release-build. ",1532152438.0
kbcool,"I use

react-native-camera@1.0.3

They absolutely and totally f*&ed up the Android project a couple of versions back and last time I checked hadn't fixed it. Also 0.56 is a bit buggy. 

So sad no one has built a decent camera package for RN. I switch between this one and react-native-image-picker which just uses the native camera app to take a pic. It just works but doesn't offer anything fancy like being able to style the camera.
",1532080431.0
ahartzog,"https://facebook.github.io/react-native/docs/getting-started.html

Pick the right tabs - native code, windows. ",1532020385.0
redpopcornpanda,"1) open a simulator from Android studio (you can also do it from the command line if you know the simulator name and adb is in the path)
2) Run `react-native run-android` from the root of your react native project. (You'll have to have the rn CLI installed globally and all that)

Btw all this info is really clearly stated in the docs, you should read those before asking questions just to avoid negative feedback :)",1532026994.0
derGropenfuhrer,This is too vague. Have you gotten Android Studio installed?,1532019597.0
laurens55,"Inverted prop should do it, https://facebook.github.io/react-native/docs/flatlist#inverted",1532027994.0
ahartzog,Couldn’t you use initalNumToRender and initialScrollIndex to start at the bottom?,1532020559.0
SizzlerWA,"Just curious, why use this over react-native-extended-stylesheet?",1532149235.0
grazion,"When you incorporate a login method using some social media platform, their sdk/api usually comes with some sort of documentation to check whether a user is logged in or not. 

In the past, I've used Firebase from google to handle most of my database/authentication needs and it always goes super smoothly. I'd recommend you take a look at it if you're fairly new to this. It's really easy and their documentation gives basically step by step guide on everything. Oh, and it's free :) ",1532010149.0
benjaminreid,"If you’re referring about flows specifically, [https://reactnavigation.org/docs/en/auth-flow.html](https://reactnavigation.org/docs/en/auth-flow.html) has a nice solution.",1532015056.0
cwhaaaales,"Your two best options for authentication are Firebase as u/grazion mentioned or AWS Cognito.

I use [Cognito](https://aws.amazon.com/cognito/) and [AWS Amplify javascript library](https://aws-amplify.github.io/amplify-js/media/authentication_guide) on the frontend. 

As far as persisting the state and keeping the user logged in, your two options are [Redux Persist](https://github.com/rt2zz/redux-persist) or [AsyncStorage](https://facebook.github.io/react-native/docs/asyncstorage.html)",1532010730.0
derGropenfuhrer,For me the hardest part of RN was getting Android Studio and the Android dev env up and running. ,1532023937.0
unpopularOpinions776,"If someone has NO experience coding then it might be a semi-traumatic experience. On top of downloading an IDE, one also has to learn how to use command line in order to install NPM, and then use command line again to create their initial project. If someone isn't even familiar with \`cd\` and \`ls\` then they're not going to have a good time",1532289585.0
MartXXIII,"Hey, didn’t have time to check but if there is no documentation on how to integrate stellar sdk in React Native, you will probably have to create a bridge! 
Edit : There actually is a js stellar sdk! Here's the link https://github.com/stellar/js-stellar-sdk",1531987881.0
scttmthsn,"A warning isn’t an error. You can pretty much ignore them.

Does it work i.e. build?",1531956021.0
LightningMcNuts,"I ran into the same problem but I solved it by adding a 'last messages' object to each user. When a new message is added to a conversation I use a cloud function to add it to the last messages list or change the existing last message for that conversation. 

That way you only need 1 listener for the conversations list. I came to this approach after reading a lot about firebase, coming from sql like db's it felt wrong to duplicate the data but it's actually encouraged by the firebase team.",1532538388.0
monopixel,"Check out Bugsnag, it supports source maps so you can make more sense of your error reports: 

https://docs.bugsnag.com/platforms/react-native/showing-full-stacktraces/",1531939376.0
FLABergeEgg,"[Sentry](https://sentry.io/welcome/) is also a great bug tracker with source maps. If you’re using expo or expokit, they make it super easy!",1531941637.0
Jonovono,"Look into Instabug, we moved to it from Crashlytics and it's a bit better. Also, AppCenter is worth looking into too - havn't tried it yet though",1531939902.0
benjaminreid,"This is outside of the official installation for Crashlytics, but if you follow Part 2 of this guide, you should get clearer reports.

https://medium.com/delivery-com-engineering/add-crashlytics-to-your-react-native-ios-app-69a983a9062a",1531946556.0
wizebin,"What about using App Center? I haven't seen the bug reporting and am just researching myself, but the whole suite seems pretty great.",1531956070.0
alien3d,Yes.  and i would said not good. The log only submit upon application restarted,1531958297.0
interactivejunky,"Great github README - even if somebody doesn't use the library you can get a rough idea of how it works, links to further resources and other alternatives. ",1532301159.0
kbcool,"Cool...next time I need to increase my package dependencies list I'll install this. 

Along with the one that colorises my console output and https://github.com/ellerbrock/i-am-a-unicorn

WTF?!

Edit: Totally forgot about console-lol - it wraps console.log and pre-pends everything with LOL! ",1531935876.0
agmcleod,"1. If they are native mobile devs, they should write it in Swift. Without people who have experience with React, ramp up can be challenging.
2. Mostly just making a sensible UI. I admittedly don't know how easy it is to leverage size classes in react native to do different layouts for example.
3. React native as far as i know would need to be the bootstrap for the application. For the existing UI, you would need to bridge it and expose it as a react component. http://facebook.github.io/react-native/docs/native-components-ios
4. The code wouldn't be shared. You might use some similar packages for utility things. The paradigm would also be the same. This also ties in with if the devs know react, they'll be able to transfer knowledge more easily between the two.
5. Navigation in react-native is hard. There's no real good customization in terms of animation right now. React-navigation is the thing everyone uses, but it's definitely tricky to get right. What you would probably want is the stack navigator, where you can push screens to it as a single stack. For branching, you would have to push the screens on that branch. To jump back, you would have to reset the stack back to the branching point then push new routes. In theory it's possible, would just require some thought.
6. The scaling benefit comes from being able to manage features and changes for both iOS & Android rather quickly. For coding for one platform, it's hard to argue against using the tools apple gives you straight up.",1531936067.0
monopixel,"1. with equal skillset there should be no big difference in speed. For native iOS devs with Objective C knowledge and no prior JS/RN expertise, the step to Swift is probably less challenging and would result in higher velocity. But they learn something new in both cases and if you commit yourself long term you have your Android app almost for free (see 6.). But it sounds like Android really isn't important for you now.

2. no challenges in particular, it is like building different stylesheets for web.

3. don't mix hybrid with native, it is a pain in the ass.

4. if you do it right there is a lot of synergy potential: everything that is not browser specific can be shared, for example the data layer that contains your state, wether it be mobile or web app.

5. react-navigation can do nested navigation so you should be able to implement some kind of tree structure there.

6. that's a bit of a crystal ball question, but if you plan to launch an Android app at some point having a React Native codebase will greatly help because you can use it right away (maybe you will need a couple of modules if the ones you are using are not for both iOS and Android and of course if you want platform specific styles/ux you would have to implement that - which would waste a lot of potential of a hybrid app though).

",1531939075.0
demoran,"I don't actually know if Swift and Objective C are compatible like the .NET or JVM languages are.  If so, Swift may be the right choice, especially if you have tests in place.  You wouldn't need to rewrite anything, just compliment your existing stuff with swift.

RN has an output for the web now, so you may be able to have much of your stuff shared if you go the react native route, and you kind of get Android for free, if you want it.

It seems to me that your application use case is a good fit for React Native.",1531933730.0
PamPiimPum,"Have you thought about the dart and flutter? if you want something native and that the same code is for both platforms (android, ios) flutter can be a very good option.",1531937169.0
SizzlerWA,React Native. Even after only a few months in RN I’m 10x as productive as I was in ObjC after 5 years in ObjC.,1532149700.0
Delphicon,"I would go look up Artsy they transitioned their Objective-C app to use React Native and all of their stuff is open source. Seems like it maps really closely to your use case and provides the architecture that you should follow if you choose to migrate.

React and React Native can do what you want and there is a huge upside here so it's definitely worth investigating. You could end up sharing a ton of logic and backend services between web and mobile if you play your cards right.

I'd like to caution by saying that using React Native in Brownfield is full of pitfalls. I've been working in for a big company trying to transition to React Native and have seen bad design decisions result in months of wasted dev time. You need to either follow Artsy's model or the default Facebook one or not do it at all.

Feel free to ask me anything else!",1532534819.0
ahartzog,"Another vote for  [react-native-gifted-chat](https://github.com/FaridSafi/react-native-gifted-chat) in the client. Really easy to use. Has some small bugs but provides a ton of functionality.

Back end you have a ton of options. We did custom handling but I'd probably go with a pre-built solution on my own volition.",1531927783.0
kbcool,"Three words for you.....

Graph cool subscriptions

https://www.graph.cool/docs/reference/graphql-api/subscription-api-aip7oojeiv/

That being said what was wrong with Firebase? I hear it's good for that type of stuff.

AWS AppSync as another user mentioned also supports subscriptions.

",1531934944.0
cwhaaaales,"I'm using [AWS AppSync](https://aws.amazon.com/appsync/)

It has a GraphQL Chat App API template ready to go, and automatically hooks up to DynamoDB. 

I'm also using [react-native-gifted-chat](https://github.com/FaridSafi/react-native-gifted-chat)",1531926795.0
maiam,Why dont you want to use Firebase? I was planning on using it for my app ,1531944088.0
LeRieur,"I found the error, I'm a idiot who forgot to set a height to the parent view",1531918556.0
sovanadereve,Points 1 and 2 could be summarized as STAY AWAY FROM REACT NATIVE,1531960657.0
udfalkso,"Yes, I did it.  The real problem was the keyboard took quite a long time to initialize when switching to it from other keyboards.  Like a few seconds.  In my case this was a deal breaker but maybe not for you.  

I made this a while back, quite outdated probably, but might help:
https://github.com/udfalkso/react-native-example-ios-keyboard
",1531925825.0
dontforgetpassword,"It is, but you are going to have memory pressure issues most likely. I believe the limit is like 30mb. ",1531925127.0
danielkov,"You'll write the majority (possibly 100%) of your React Native application in JavaScript, using ES6 syntax or a superset of the language, like TypeScript.

Would you enter the Tour de France with some basic knowledge on how to walk and expect to learn cycling on the way? Some of us would. But given that you're just starting out, I would advise against that. Instead, take your time to learn ES6 (and TypeScript) and then learn some React and finally, just a tiny bit of Android and iOS development, (that's your desired platform after all) so that you'll better understand why you can't just use a div inside a RN app.",1531914312.0
-Alias-,"This may be of little help, but I do believe it is possible. https://github.com/Microsoft/code-push is a lib that does something similar but as you can imagine, is quite a large library!",1531912979.0
ChronSyn,"You can do either. If you want to use a web view with react-native acting as a wrapper, this is perfectly acceptable and in some cases, desirable.

Say you want geofencing for your marketplace, react-native can be used to assist with that (when combined with a web view to display the main content).

If you want to build a fully native app around react-native, you can also do that, and you'd instead make calls to your backend marketplace API to update your stores/state, and build the UI to react to that data. The advantage here is you can create a custom-styling that's built around mobile users, and provide exclusive features that aren't available (or otherwise limited) through HTML5 API's.

If you were to use something like Expo, you wouldn't even need to worry about setting up Android studio or XCode projects (though it is still recommended to have devices of each target platform to test on).

With all that said, you could look into making a pinnable PWA of your existing site, though this requires iOS 11.3 or Android Jelly Bean (v4.1 onwards).",1531916484.0
TheSacredBroom,"There is possibility to distribute the app via [fabric.io](https://fabric.io), but you will have to first collect device ids (fabric helps with that) from those people and than distribute it to them. Also, that distributed build will be only available for one year, then you will have to create new build and distribute again. ",1531906924.0
fuck_with_me,"As far as I know, you can do this via a single Apple Developer account, and a dedicated certs repo via fastlane match.

There will be some drawbacks but it's certainly possible if saving the $200 is important to you.",1531906027.0
nothingbutt,"Yes, react-native-web. So far, it's been great.",1531889163.0
ridhwandaud,Maybe can try this . https://github.com/necolas/react-native-web . ,1531889245.0
cagotrebgghju,"React native web is not converter, it implements most(but not every) rn components in react-dom. You must spend some time to make app work",1531893684.0
SolidR53,ReactXP also,1531897441.0
fvonhoven,Check out https://medium.com/react-native-training/uploading-videos-from-react-native-c79f520b9ae1 ;),1531857268.0
excs,[ActionSheetIOS](https://facebook.github.io/react-native/docs/actionsheetios).,1531846810.0
monopixel,"First of all, the video title should be ""don't do hybrid mobile app development"".

In your intro you fail to mention that Airbnb sunsetted React Native because having a mix of RN and native was a failure. You make it sound like they just sunsetted it because RN is bad or something like that and scores of other companies too - when in reality there is a lot of companies on the other side of the spectrum who are quite happy with it, like Microsoft. And to re-iterate: the Airbnb app is a mix of RN and native. Almost all of their problems that lead to sunsetting RN were because of integrating a couple of RN views into a largely native app is a bad idea.

You pretty much trash hybrid app development throughout the video, claiming the best use case for hybrid apps is when you don't care about quality or performance. That's not really a balanced view of the state of 'hybrid mobile app development'. Comes more across like as if you really don't like hybrid mobile app development frameworks. 

Regarding changing an app color theme from light to dark. In a pure RN app that's basically changes in a RN Stylesheet. Why should I need to bother with anything native here and worry about cross-platform refactoring? I don't need to know about multiple technologies or languages, I just need to know RN and JS.

Hybrid mobile app development is not primarily mixing hybrid with native. Where does that notion come from? If we can say anything about the state of hybrid mobile app development in 2018 it is: don't mix hybrid/RN with native.",1531866712.0
dkocc91,I love you for dark theme on YouTube. My eyes are indedted to u good sir. ,1531849736.0
pfriez,"I don't care who ""wins"". I do what the client wants and I get paid for it. If they want RN, or Flutter or native or whatever, I don't care. I will still charge them $100/hour :-)",1531891613.0
glacierdweller,"Calling Flutter ""hybrid mobile"" is misleading. Dart + Flutter compiles down to native ARM64 code, not even native Android does that.

Flutter is native. It may be a different form of native vis-a-vis Objective C/Swift/Java/Kotlin, but it is native. Unless we want to classify all iOS/Android games as ""hybrid"".",1531865571.0
edanceee,"Fuck this guy.
I'm already sick of his videos on reddit. Stop the spam.",1531870038.0
PamPiimPum,who wins?,1531848470.0
alien3d,If just question if even dumb i would said yes .But if youtube and flamewar language please stay at there whatever you host.,1531877341.0
jcancellier,"You can just go to your package.json & app.json and change anything with 28.0.0 to 27.0.0

",1531838496.0
CarefreeCastle,You can get what you want by adding custom styles to this library https://www.npmjs.com/package/react-native-snap-carousel,1531851494.0
kbcool,"Note: I've not tried it with more than one card beneath (I'm using it in a spare time project for some flash cards to help myself learn a second language) but this one is kinda close.

https://github.com/alexbrillant/react-native-deck-swiper

If not what you want I'm sure you could modify it to achieve that effect.",1531821940.0
essuraj,Try react native interactable ...,1532399546.0
Noigel_Mai,"> How far in a big project app would I be able to use Expo without needing to completely removing Expo?

So what you really want to do, is do a discovery on the 3rd party libraries that you need in order to complete your project. Expo, as you may know, does not play well with libraries that are not purely javascript, and at that point would require that you eject from Expo in order to use them. The later on in an application's development cycle that you eject, the trickier it can get, so ask yourself the question, ""do I need to use a native module for this app at any point,""  and think really hard about it. 


> Should I just consider investing in a Mac if I plan to develop with IOS using React Native?

I would say yes, though I know people would disagree and say that a Hackintosh will suffice. Running a simulator in an emulator does not a good experience make. You're eventually going to make an app that does not play well with Expo, and you're going to have to run OSX in a VM which is then going to be simulating your device and that's pretty rough. 

Expo is a great framework and I really enjoy what it offers, but it does have unfortunate limitations and can often be a headache to debug issues, though things are certainly getting better. If you're doing a small project that requires no native modules and really want to expedite the development process - Heck yeah, Expo!",1531795082.0
occz,">-How far in a big project app would I be able to use Expo without needing to completely removing Expo?

Check if you need any native-level librarie if not, you can use Expo just fine.

>-Should I develop as much as I can with Expo until I need to “detach” or partially remove Expo, or should I begin to learn to develop without Expo?

I think you should be fine with using Expo's tools. You can replace them once you actually have the need to eject.

>-Should I just consider investing in a Mac if I plan to develop with IOS using React Native?

For sure. Merely having access to simulators makes it worth it. Also a bit of personal preference but I think unix-based OSed are better for development in general.",1531811065.0
-Alias-,"Something like https://www.macstadium.com/ is an option, but could be a bit pricey.",1531817752.0
interactivejunky,"We use Expo on our app and occassionally hit a wall where Expo can't implement something that we need. However for us the benefit of having a tight react-native environment that is community tested makes it worthwhile at the moment whilst we don't have huge amounts of resources.

An example being that we recently were thinking of using screenshots of the app screen when the user shares on Facebook however expo doesn't have app screenshot abilities.",1531822284.0
Jonovono,"I would invest in a Mac if you want to do iOS development unless this is just a hobby project.

I have used Expo a few times now throughout my RN adventure. And I still don't get why people use it. Snacks are cool, but everything else it just makes harder. You can only use their supported native components without detaching and all that. RN is easy enough to just react-native init and then yarn add projects and run and hot reload. That's my suggestion, Expo is just one more thing to worry about, that can introduce new errors and things to worry about. ",1531924543.0
lefooey,"Visual Studio Code, for the debugger and lots of nice extensions. 

https://github.com/Microsoft/vscode-react-native",1531795507.0
KyleG,I just recently discovered Postman for testing APIs. I already used it while developing the CRNA front end + API server for a small private service.,1531804975.0
occz,I've used React Native Debugger with decent success.,1531811523.0
Kmantheoriginal,Electotron advertises itself as exactly what you're looking for. I havent had a chance to mess with it so if you do test it out I'd be interested in how it goes ,1531785631.0
MrFriiky,Some suggestions for Bluetooth app development?,1531810156.0
mullam,"As already suggested by /u/lefooey, vscode is great for debugging (with the right extensions), if you as me never felt completely home inspecting/debugging your code outside of your editor. And with its 'attach to packager' it's fast to hook up and be on your way.

Also [Reactotron](https://github.com/infinitered/reactotron) is super for an overview of current `state`, and what `actions` brought the app to that `state`, plus API calls.
(bear in mind, that you will need to add `Reactotron` in your codebase, but do so as `devDependencies` and add any `Reactotron` related setup, checking for the global `__DEV__` - it's all in the docs)

For templating/styling, I've been using [react-devtools](https://www.npmjs.com/package/react-devtools), it adds the functionality the on-device inspector lacks (ofc it's limited what can be included on the device/simulators/emulators).",1531818305.0
kbcool,https://www.charlesproxy.com/ for API calls.,1531822063.0
demoran,"These are more general, but typescript helps.

Lodash is great.

`immer` is great for popping out state for redux slices or nested local react state modifications.

",1531849305.0
imizaac,"Prettier
Eslint, air-bnb config is good
If you ever use webpack, try parcel
",1531859888.0
halfjew22,"I tried ignite and really want to love it but couldn't get their example project to compile and that turned me off. 

Anyone else have the same experience?",1531786022.0
ahartzog,Looks pretty interesting. If I was doing a quickie app for somebody I'd consider using this over CRNA. ,1531786434.0
20mcgug,"I just started using ignite and I like it so far, but being a newbie I have a bunch of questions and there aren't very many tutorials that I've seen using ignite 2. I would love to be able to Skype or call someone on discord who is knowledgeable on this just to help me understand some things.",1531932878.0
nickmcsnapz,"I use Ignite for all my RN projects. It's amazing. These are production apps too, I wouldn't use anything else atm. ",1531970329.0
Tall-Paul,"Could make a database with a text field and a photo url field and the date to be shown on and if you don't put a photo url you know that it's a text day otherwise you know it's a photo day. 

Then it's a simple get today's date and make a get request to the server for today's info.",1531784760.0
pmyb,May be new gf? Prob solved.! ,1532782535.0
calvinaquino,"should be

this.setState({ isWrong: true });

setState is a function.",1531757200.0
cwhaaaales,"Here's an example of the use case you're looking for

    import React, { Component } from 'react';
    import { Button, TextInput } from 'react-native';

    class Example extends Component {
        constructor(props) {
            super(props);
            this.state = {isWrong: false};
         }

    render() {
        return (
            <TextInput editable=this.state.isWrong /> 
               <Button onPress={ ()=> this.setState({ isWrong: true }) } />
            </TextInput>
        );
      }
    }
",1531762063.0
-Alias-,Have you tried https://expo.io/@react-navigation/NavigationPlayground ?,1531748540.0
talor_a,you could use [react-native-fluid-transitions](https://github.com/fram-x/FluidTransitions),1531762543.0
SolidR53,"Hey, my pipeline looks like this:

-	All builds have the same env, i will explain why later, So i ship API_URL and API_URL_STAGING with all apps
-	Commits on master will run a build machine on App Center for iOS and Android
-	If commit has [skip ci] in commit message, i'll skip the build
-	If I detect if any code changes in the ./ios or ./android folder, since last release, I bump the version, build and release to TestFlight and Play Store on the Beta track, i'll commit the version changes with [skip ci]
-	If no native changes were detected, I do a code push release to the Staging track

I wrote a small script to detect if the app is running from TestFlight and select the correct environment variables from there, like which CodePush channel to use or which API endpoint to use.

For Android I just have a flag in settings to enable beta features, hence swapping the env to staging. I have also done an Firebase anonymous login and added property to it to tell if the device should be beta or not. There is currently no way to tell if the app is from the beta track without doing an api call with the apk hash to match something.

Then I can to promote testflight to prod, android beta to prod and codepush staging to prod with a single button in each interface.

I like my current setup and prefer it over another setup I've used before, where I have two bundle ids so I am able to have both versions of the app installed on a single device, it complicates things in my opinion and would rather use a switch in the app to switch beta/prod.

Let me know if you would like to see some code, the pipeline is a little more complicated than i describe here, but the same idea.

https://camo.githubusercontent.com/3aab8e4ef0cacb83afa04dd59717ea431752544a/68747470733a2f2f692e696d6775722e636f6d2f6f39316a5572512e706e67",1531746499.0
ativio,"I use https://github.com/luggit/react-native-config.

I have several `.env` files like `.env.staging` `.env.production` that have in their configs the API url among other things. I also have some XCode config that specified which env file to use so I use a different XCode scheme for staging and production. I use fastlane to compile and push to the store, so I have a script for TestFlight builds and one for AppStore builds.

Not gotten to Android yet so I don't know anything about that.",1531753689.0
,"So while I agree with the other comment that this is a compile time decision, there is nothing stopping you doing this at runtime.

You can have 2 config files compiled with the app. 1 for Production, 1 for Staging.

The real question is how you pick which one to use when the app is running.",1531746390.0
demoran,"Afaik this is a compile time decision.  What I do is have a separate app in the app store that is never published publicly.  I build the 'staging' app using the staging config, publish it to the Android app store in beta, and let my testers know.

Same thing for Test Flight.",1531742416.0
SizzlerWA,"I’m just curious why you want to switch at runtime?  Normally I have different provisioning profiles and bundle ids for devo, staging and prod because that allows me to have all three apps as separate binaries on the same phone at the same time. I prefer it that way but you might not and that’s OK.",1531774279.0
kbcool,"This has nothing to do with React Native. More content marketing spam. 

Where's the kickban button?",1531768094.0
ahartzog,"This is awesome. Thanks for sharing. 

Now can you also help prevent me from trying to shake my phone a bazillion times before realizing I have a release build on it?",1531704276.0
halfjew22,\[GIF as well for the YouTube averse among us\]([https://i.imgur.com/S9ypTrg.gifv](https://i.imgur.com/S9ypTrg.gifv)),1531699708.0
Dimasdanz,Anything for Android?,1531721504.0
Jonovono,What I really want is a way to trigger a reload with a keyboard shortcut on my mac when I am working with a simulator. I'm guessing it's possible since you can turn on live reload on save (I don't like it reloading every time I hit save though). Just need to hijack that functionality. Anyone have ideas where to start?,1531840433.0
redpopcornpanda,"If you aren't automatically managing signing with xcodes ""automatically manage signing"" option, each physical device and its owner has to be added in the developer portal.

Our team automatically manages signing with xcode, so it mostly just works.

I think development provisioning profiles need devices attached to them if I'm not wrong.. 

There's nothing specific to react-native about it since everything to do with signing is iOS / Xcode specific. Might be good to try those questions and see if you get anywhere. Have you asked anyone on your own team yet?",1531692322.0
Dimasdanz,"yes, generator functions do works on RN. Even without redux-saga.  
If you want to do multiple API call synchronously, just use async function, and use await for calling promises, it goes something like this

    async function callApi() {
        const respOne = await apiOne();
        const respTwo = await apiTwo(respOne.foo);
        const respThree = await apiThree(respTwo.bar);
        // and so on
    }

",1531680520.0
Turbo_swag,Why wouldn’t they? It’s just ES6 syntax and will be compiled during a native build...,1531680905.0
kbcool,Oh no css-tricks is back with another piece of content about one line in the docs! Someone please block them!,1531684761.0
cskelldog,I assumed this video would show how to enable hot reloading. It instead just shows what hot reloading looks like.,1531697659.0
alien3d,been log both android and ios and been fixed on 0.56,1531614528.0
Noitidart2,"Vertically expandable? Just use \`multiLine\`. Horizontally expandable? Just make the textinput flexible, set a min width, and after text exceeds that min width it grows horizontally.",1531633053.0
kevwhy,"TextInput is autogrow by default ( I don't know since which version, I'm using the latest 0.56 )

If you want to limit it to a maximum height just do `{{ maxHeight: 200 }}` something like that, the TextInput will be able to scroll if content size exceeded that height.

Since it will autogrow, you can even wrap it will a ScrollView, and don't set the maxHeight on textInput.",1531739113.0
kbcool,"Since no one's actually replied I'll add something totally unhelpful :) 

Haven't tried it but Swift works so I don't see why Kotlin wouldn't work.",1531647747.0
yungsters,It would be really awesome if someone tried reimplementing one of the core components (maybe one of the simpler ones) with Kotlin and wrote up what was different.,1531667946.0
albertgao,You just need to configure your android project to support Kotlin compiling. That’s all. I believe you can find some tutorial online.,1531655665.0
ryanhollister,"yes, csrf is a web security concern.",1531603022.0
Noitidart2,Awesome! Using firebase without installing firebase sdk!,1531633179.0
ahahah515153203206,I've been reporting this guy and nothing happened. Mods please ban this low effort bullshit.,1531586037.0
redpopcornpanda,Link doesn't work..,1531574536.0
brunolemos,"It’s nice to learn it step by step!
But for new projects, I recommend using this single line instead:

`react-native init projectname --template ts`

It will setup TypeScript, Prettier with precommit hook and TSLint.

Github repo: [https://github.com/brunolemos/react-native-template-ts](https://github.com/brunolemos/react-native-template-ts)

(I haven't shared this repo with anyone yet because I'd like to add web support first, but feel free to star it)",1531535124.0
ramzez_uk,Good steps. Thanks. ,1531519724.0
kbcool,"I'm guessing you're wanting them to auto-play as you scroll through them.

Pre-buffer is your friend. As the video component is added to your FlatList etc prebuffering commences downloading of the video so it's ready to play when shown (guessing you're actually downloading from a server yeah?). Also when downloading it's always a great idea to have a CDN that can make the videos download faster.

Your video player of choice does not seem to have a pre-buffer option so it's quite unlikely it does any sort of pre-buffering.

The main video player for RN doesn't seem to do it either see: https://github.com/react-native-community/react-native-video/issues/99

So sorry I can't give you the exact solution but hopefully it helps you look for what you need.

",1531512624.0
kbcool,"Uh are you over-complicating it or am I over-simplifying it?

You can require('filename.blah') and it will be added into your project and bundled in IOS and Android. You don't actually have to do anything with filename.blah but any statement as above will bundle it. It's a pre-compiler thingy-ma-jig (sorry Friday evening couple of beers in talk).

To be fair .blah needs to be in a whitelist but if you edit a file called rn-cli.config.js in the root of your project and add any extension as a whitelisted extension. Eg:


     module.exports = {
       getAssetExts() {
         return ['txt', 'mov','doc','pdf']
     }
    }",1531510791.0
ignisiss,"Every tab can be a separate navigator with header like so:

    export default createBottomTabNavigator({
    	Domov: {
    		screen: createStackNavigator({
    			home: {screen: HomeScreen},
    		}),
    	},
    	Dnevnik: {
    		screen: createStackNavigator({
    			diary: {screen: DiaryScreen},
    		}),
    	},
    });",1531562208.0
kbcool,"Tab bars don't have headers in react-navigation by default (I think they removed them completely but the project changes on a day to day basis LOL) as you have worked out.

What do you want in the headers? What do you want them to look like?

I usually just add my own headers inside the tabs as they don't have navigation on them so don't need to look like stack navigators. Usually just a text title but that depends on the design of course, some have no headers.

If you want them to look like the stack navigators then you can literally suck the components out of react-navigation that they use to build your own.

Did a quick google couldn't find how to do the latter but you can get all the names to import from their source code easily enough.",1531504380.0
enlusing,"I implememented something very similar a couple of days ago. I have only done the iOS side so far but it was actually quite easy. Just use autolayout in the iOS Launchscreen.xib to center the logo image and set explicit width and height on it. Set the same width and height of the image in the initial react view and center it using flexbox. 

The animations can then be triggered in componentDidMount of the initial view.

I used [react-native-splashscreen](https://github.com/crazycodeboy/react-native-splash-screen) for getting a seamless fade between the native splash and the initial react view. But i think it’s possible to get this without any lib by following [this tip from the official docs](https://facebook.github.io/react-native/docs/running-on-device.html#pro-tip). 

Can’t speak for the android side yet but as far as I know it’s possible to create a native splash screen with a centered image with a fixed width and height using androids layout system. Maybe try something like [this](https://stackoverflow.com/a/46636225)?",1531521012.0
kbcool,"Name checks out!

Before you go down this probably painful path would the link below work out for you instead? Even if you want the animation maybe it's easier doing that in native instead because you're not going to like what comes next.

https://www.npmjs.com/package/react-native-smart-splash-screen

Like you said the positioning is going to be hard (as well as the sizing).

It's entirely possible though. What you mentioned about the sizing is the annoying part but it's not a blocker. You just need to supply an image size for the splash screen for every target screen size for IOS and Android and make sure that lines up with the image in RN which means testing across the simulators/emulators or real devices. I believe that's about 30 of them in total.

Android supports DIPs and iOS lets you have a different splash for every screen size so it will work.

You're in for a hell of a painful time but it will work. I do hope someone has a magical solution though because I wouldn't want to have to try it.


Good question BTW. Much better than the average yawnfest :)",1531501833.0
redpopcornpanda,"We have a splash screen working pretty good. The transition from native to JS splash screen was seamless. We basically had a full sized image of what we wanted to display and had it centered the same way on each platform. Which worked until we encountered a dumb crash on Samsung devices only which meant we had to switch from the layout file to a drawable file for the splash screen - turns out that drawable doesn't really support the same ""centerCrop"" sizing that the layout file did.

Still works great on iOS though. The key is really just to use the same image on each platform and center it the same way on the screen, I believe.",1531502310.0
MrsRedBull,PIN numbers should be treated like passwords and csrng hashed. Especially with a RN app that runs a much higher risk of having bad actor code sideloaded without proper bundle signing and verification. Even with proper signing you still run the risk of a bad actor being introduced by a dependency.,1531507974.0
Heka_FOF,Why front end is checking if password is right? 🤔,1531558448.0
Bleached__Anus,"Just like you defined your mapStateToProps function to select slices of state from the store, you also need to define a mapDispatchToProps function to make changes to the state:

    import { bindActionCreators } from 'redux';
    ...
    const mapDispatchToProps = dispatch => bindActionCreators({ employersFetch  }, dispatch);
    export default connect(mapStateToProps, mapDispatchToProps)(EmployerList);


",1531442035.0
kbcool,"I'm not getting the question. That's normal on iphones, for all apps.

You can change the keyboard type for your textinput - https://facebook.github.io/react-native/docs/textinput#keyboardtype

Not sure if it's going to solve your problem though.",1531420533.0
kbcool,"A Webview component is always an option because as much as react-native-render-html is a cool project WTF is the point of replicating hundreds of thousands (if not millions) of man hours in creating the built in web browsers of IOS and Android? Never going to be as good or as fast.

Of course if you just have a heading, text and image(s) without much else in terms of formatting you could just parse whatever format your API spits out and render that natively.

If you need more ideas and you don't get them here then google react-native and wordpress I've seen a bunch of implementations and tutorials etc around it. Might get the creative juices flowing.",1531415050.0
eXilz,"An issue is opened regarding the whitespace issue. [https://github.com/archriss/react-native-render-html/issues/118](https://github.com/archriss/react-native-render-html/issues/118) The developper who opened it posted some great insight on how to fix this. Sadly, this is quite complicated to implement and I don't really know how to tackle this issue for now.

In the meantime, you need to use perfectly trimmed HTML and you should be able to render everything you'd like. Just don't give too much freedom to you contributors in your text editor. If you can add a way to render custom HTML tags in your back-office, you should do it too. It works wonders with our clients when we have to render very specific components that would be too much of a hassle to parse from regular HTML tags.",1531419003.0
kbcool,"This tool creates your icons and splash screens from one file and adds them into your project without you having to touch anything apart from run install it with node and run it.

https://github.com/bamlab/generator-rn-toolbox/tree/master/generators/assets

I don't know why you make your life so difficult.",1531413652.0
kbcool,"You're not setting the button state anywhere except when the component is mounted so I'm not surprised it's not changing. 

You will need to explicitly call this.props.navigation.setParams() to change it.

Once you've done that in older versions of react-navigation I'm pretty sure I had a problem where calling that doesn't trigger a re-render but I could have foggy memory on that so don't panic if it's still not working.

",1531413331.0
tizz66,"You'll want something like:

```
componentDidUpdate() {  
	this.props.navigation.setParams({  
		buttonState: this.state.employerName === ''  
	});  
}
```

Basically, you need to set the navigation params when the state of your employerName field changes. You probably don't need to store buttonState in your component state too, it doesn't look like you're using it for anything else.",1531429044.0
kbcool,"https://medium.com/@0saurabhgour/react-native-density-independent-pixels-pixelratio-1f10d86f631

Will give you an excellent introduction into what ""pixels"" are in RN. It will answer question 2 at the very least.

As for the rest of your questions it really depends on what you are trying to achieve. I've often criticised others here for suggesting everyone make everything a percentage of the screen width or height but there are legitimate reasons for doing that - eg a game or app intended for tablets and chromecast to TV (or Apple TV) - eg netflix.

The short answer I believe is to use widths and heights for things that you want to be the same size on all devices (fonts for example), use flex where you want something to occupy what spare space there is (eg a scrolling list) and percentages for what I said above and of course to make things fill other things like 100% width of the screen.

Hope that helps.

The debate on this issue can get quite intense but I've found my own advise has worked on the growing number of apps I've worked on and I've rarely had to fiddle anything if at all to make apps look and work great across tiny screens like iphone 4 right through to 10 inch tablets so I'm sticking with it :)",1531412847.0
redpopcornpanda,"To add to kbcools answer, I would also use Flex in any situation in which alignment is important. For example: aligning all items in the center of an area. You should also use Flex if you have multiple elements to space in an even manner across a certain area.

The only times you should use absolute numbers are when you actually know that you want an element to be the same size on multiple devices. For instance, a header. You know you want it to be, say, 50 units tall. So you can make height 50, and it will be 50 on every device. Or, say, a profile picture. You know you want it to be 60x60 rounded, so you set width/height to 60 and borderRadius to 30.

Reasoning on when to use Flex: you know you want your header to stay in the same place at the sane size on different devices. So you would not use flex for it. But you know that since your header is gonna be the same size, you want the content of the page to take up more space the bigger the screen - so you can use flex in that situation to help keep spacing consistent as the screen gets bigger.",1531439328.0
TexMax007,"I use [React Native Debugger](https://github.com/jhen0409/react-native-debugger) it’s great.

Attach to that using remote debug and you can drill down like you would in a web inspector.

It also has support for Redux state and action history. It’s fantastic. Good luck.",1531434879.0
redpopcornpanda,"I mean you don't have to use flux for your state architecture in react-native.. 

Nor do you have to use third party libraries to build good UX",1531412248.0
careseite,"That's not what the article says. It shows all options for x-platform development and 

>picked the two most popular solutions of 2018 which are React Native vs Flutter.",1531406954.0
ahartzog,"Stealing this comment from the other thread:  


 Just as a heads up, if you’re developing on a Windows machine you should probably wait to upgrade until they fix [this regression](https://github.com/facebook/react-native/issues/20015). ",1531407252.0
fxnick1,"If you have native dependencies linked this will completely undo all of the linking. I've moved versions a couple times and didn't have much luck with react-native upgrade for that exact reason. If you don't have native bridge dependencies or don't mind reconfiguring your native projects again in their entirety, then this is a good option.",1531407523.0
kbcool,Background as in wake up the app to do it via a push notification or just download whilst the app is active but not have it interrupt the user experience?,1531385825.0
AcidShAwk,[react-native-fs](https://github.com/itinance/react-native-fs),1531386703.0
TexMax007,"Just as a heads up, if you’re developing on a Windows machine you should probably wait to upgrade until they fix [this regression](https://github.com/facebook/react-native/issues/20015).",1531324402.0
tizz66,"Wow, I haven't seen that optional chaining syntax before - that looks excellent.",1531325384.0
dodunichaar,Just hoping Android GMS and gradle wont break everything again,1531329021.0
Heka_FOF,The optional chaining is only at [stage 1 at the moment](https://github.com/tc39/proposal-optional-chaining). Plus I am pretty sure [TypeScript won't support it yet ](https://github.com/Microsoft/TypeScript/issues/16),1531336658.0
pianoman1031,"I tried upgrading tonight with the instructions posted, with babel 7 and all that, but have had no luck whatsoever. When I run `react-native-git-upgrade` or whatever, it gives a crap ton of warnings about peer dependencies and all that with babel 7. I tried so many different things and couldn't get it to play nice. Has anyone had any success at all upgrading an existing project?

p.s. I had issues creating a brand new project as well with the dependency stuff.

update: I was able to get things to play nice, but still have a ton of warnings on `npm install` about unmet dependencies, saying I have to install them myself. Anyone have suggestions on that? :D",1531889462.0
acillustrations,"Mind posting you code?
Have you tried firebase.auth().currentUser.uid; ?",1531325158.0
Bleached__Anus,"Use Firebase's Cloud Functions. It's pretty simple, you basically write them in Node, which is still Javascript and all you need to do is make a function that's called when a user account is created (that very example is in the docs). You can get the id there and save it to the Real Time Database or Firestore.",1531319582.0
com2kid,"Check your auth tab in Firebasebase, see if the User UIDs are shown there.

Try using non-Facebook ID and see if firebase.auth().currentUser.uid works, to test and see if the base case works.



",1531326003.0
kbcool,Already posted here yesterday but appreciate the effort.,1531323000.0
wengemurphy,"Statics are part of a proposal, specifically the class fields proposal. They're not part of the language yet. Each specific sub-feature like this has a Babel plug-in (if someone has written it!) and then many of these are combined together into ""presets"" like `stage-3`. 

https://github.com/tc39/proposal-class-fields

https://babeljs.io/docs/en/babel-plugin-transform-class-properties/

https://github.com/tc39/proposal-static-class-features/

Although this proposal has moved onto stage 3 of the standards process this one appears to still be part of the stage-2 babel preset.

https://babeljs.io/docs/en/babel-preset-stage-2.html",1531335910.0
kbcool,"You got me curious too now, when did that slip in? 

I also can't find any reference in Babel to static variables and little elsewhere on the web.

I then ran a test in RN environment (latest babel etc) being a bit skeptical as usual and guess what. They behave just like normal variables and not like static variables.

Eg:

    class a {

      static moo = ""cow"";

    }

    var c = new a()
    c.moo = ""bull""
    var d = new a()

    console.log(c.moo, d.moo);

    result - bull, cow 

    expected result - bull, bull

(I'm not going crazy that is right isn't it? I haven't felt the urge to use a static for a while)

",1531310733.0
Heka_FOF,Always when you get new location save it to [AsyncStorage](https://facebook.github.io/react-native/docs/asyncstorage.html). When you noticed GPS is disabled fetch last know location from your AsynStorage,1531306469.0
kbcool,"https://facebook.github.io/react-native/docs/geolocation#getcurrentposition

maximumAge parameter for adjusting how old a result you will accept.",1531299296.0
wengemurphy,That's a single-quoted string. If you want variable interpolation you have to use ES6 template strings (backticks),1531275837.0
kbcool,+1 on MapBox ... They've done a really great job of making maps work really well on react native. ,1531253435.0
redpopcornpanda,"To sum up:

1. each element of your list is turned into an item object that looks like this: `const element = {index: 0, item: {/* your data here */}, /* maybe some more properties. */}`
2. Thus, to get \_just\_ the data in the list (excluding the other metadata that gets data) out of what gets passed to `renderItem`, you need to access th`e it`em property of the object that gets passed in.
3. You could do this: `renderItem={foo => <Text>foo.item.key</Text>}`.
4. But since you really only need to access `item`, you can use object destructuring to get  that part out: `({item}) => ...`

In general, destructuring works like this:

`const foo = { bar: 0, name: ""panda"", anotherVar: 300 }`

`const { name, bar } = foo`

`console.log(name) // logs ""panda""`

`console.log(bar) // logs ""0""`

The other place you commonly see this is in functional stateless components:

`const MyComponent = ({name, anotherVar}) => <Text>{name}</Text>`

Of course, this could also be written like this:

`const MyComponent = (props) => <Text>{props.name}</Text>`

The curly braces are just shorthand for extracting the properties of an object that you need to use.",1531266103.0
denistakeda,It’s a restructuring. This way we extract property item from some object,1531249706.0
TomMahle,[https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring\_assignment](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment),1531255466.0
kbcool,"Because you're picking out an item out of an object if I understand your question correctly.

eg:

   ({item}) => 

Is just taking item out of the object passed in and making it available in the context of the function.

In this case off the top of my head that object contains the keys item and index so if you just passed in item you would need to use <Text>{item.item.key}</Text>

The technical term is destructuring and you can read more here: http://2ality.com/2015/01/es6-destructuring.html

Disclaimer: I just try to explain things in human terms then get all sorts of idiots who live at home with their mothers at the age of 40 telling me I'm not making ""semantic distinctions"" or some sort of other garbage.",1531250115.0
gauravgrover95,Thanks for taking the time to write this with examples. It cleared a lot of things. ,1531283913.0
kbcool,"One question per question please.

AR is massively disjointed right now so I wouldn't say you're better or worse off in RN than any other language. Pretty sure Swift will get you better bindings for ARKit though but ARKit ain't the only AR around.

What are you trying to achieve in AR? There's not a lib that offers full coverage - you may need to deploy your own CV or ML libraries.

Eg: I have worked on recently in the AR area on a garment preview feature in an app that uses real time pose estimation to ""fit"" the garment (there's a long way to go here in state of the art, really needs two cameras for 3d pose) and also body part masks to also place products on a person in two separate projects.

AFAIK neither will work on ARKit and 99.99% certain there'll never be cross platform solution from ARKit and ARCore. I've had to use other platforms to achieve it,.",1531249472.0
redpopcornpanda,"Not to blow on the post or anything. But I feel like every other post here is a tutorial for a really, really simple app. Mostly to-dos, because it's an easy mental model with pretty simple requirements. It'd be really great to see more posts detailing complex topics that you get into once you start scaling a real app on the app stores. 

For instance, best practices for updating data in the app when there's a lot to download. How to handle caching data so you don't re-download every time the app opens. How to achieve good performance and troubleshoot performance issues. How to handle architecture for large code bases with a lot of state. How do people organize types and all that. 

Simple stuff is fine, but you can find a beginner post super easily through a quick search. I feel like advanced topics and articles in react native are hard to come by.

Any suggestions for blogs about that? ",1531261388.0
kbcool,Watch out youtube! There's a new kid on the block.,1531240869.0
burhanyilmaz,"Added my app and my repo :)

  
Repo: [https://github.com/burhanyilmaz/react-native-articles/blob/master/ArticleList/july9-july15.md](https://github.com/burhanyilmaz/react-native-articles/blob/master/ArticleList/july9-july15.md)

App: [https://play.google.com/store/apps/details?id=com.reactnativearticles](https://play.google.com/store/apps/details?id=com.reactnativearticles)",1531243532.0
BigDane1992,"I'm the author, feel free to ask my anything you like :)",1531325747.0
LEO_TROLLSTOY,https://www.youtube.com/watch?v=AMAJLgafs6U,1531226193.0
badgerbaws,Shameless advertisement,1531231002.0
vuudd00,"in my opinion animation, in general, are tooo slow.",1531235226.0
tjsdavies,Thanks. Turns out react native is pretty good all in all. Quite a complicated set of interacting menus it wasn't easy. But now it's done it's very smooth especially on ios,1531234959.0
lovemeslowly,Can't believe you did this on android. Android side always disappointed me,1531243969.0
com2kid,"Love those side menus. Custom components, or are you using one of the navigation libraries to make'em happen?",1531247419.0
tjsdavies,"Oh and the state management framework I used to build this is here

https://github.com/tjdavies/copal",1531250646.0
TexMax007,"A web application built in React uses DOM primitives (<div>, <span>, <img> etc...) to render. React Native uses a different set of building blocks that mostly map to web like <View>, <Text>, <Image>.

There's no automated way to translate a React application into a React Native application as far as I'm aware. Much of your code can likely be translated over, but it will take effort.

Also you have to consider how React Native styles things. It doesn't use CSS like the web. There's [Styled Components](https://github.com/styled-components/styled-components) that could help in this regard though, but I haven't used it myself.

If you already have a responsive web app, it might be prudent to explore using Cordova and wrap a WebView instead of rebuilding it as a React Native app. There's pros and cons to both approaches.

Hopefully that answer helps. Cheers.",1531157291.0
realbriank,"Keep in mind that an application for native devices have a lot of different aspects that won't exist in a web app. You need to think of the user experience in a different way, unless the app is basically just a very basic set of views with no persistent storage. ",1531166057.0
Delphicon,"Depending on the content of the site, your quality bar, and your ability to make compromises in the design as you go, you can get pretty far just re-writing your React code in React Native. It isn't code re-use but it'd be pretty fast since you already did a lot of the same work and can even share a lot of the logic and structure.

React Native Web is a cool idea and if you're willing to take ownership over your tools I believe it can be really useful in a production setting but it sounds like you're doing this on a small team or by yourself without any mobile experience where you couldn't really dive in to the internals. That'd make me wary to use React Native Web on a real project since, React Native can be fickle enough on it's own.",1531197045.0
maiam,"You will likely have to rewrite your UI in React Native but if your proficient in React, using RN will be a breeze. I went from React to RN and it was an easy transition. But given the out of box elements are different between both platforms, you will not be able to just drop in your web components into RN code. However you should be able to utilize a lot of the CSS code you wrote on the web in RN. There will be a lot of differences but I would recommend RN over Cordova for your situation!",1531157335.0
theOwlBoyz,"You have to understand that RN exist because of mobile native components. RN helps to improve performance issue and also using some of the native components as well. 

Of course, you cannot run RN in web browser. But you can run react on mobile device. Why? Mobile device got its own browser. LOL... 

Anyway, I do believe you can port your react into RN (not that tough, just need times). Remember, there's no CSS on RN. So it's much less styles in RN components.",1531330106.0
,[deleted],1531156866.0
Reggie3,I made a WebView based component that wraps the [Quill rich text editor](https://github.com/quilljs/quill).  The component is called react-native-webview-quilljs and the GitHub page is here [https://github.com/reggie3/react-native-webview-quilljs](https://github.com/reggie3/react-native-webview-quilljs),1531264125.0
piggerty,"Check out the link here:

[https://stackoverflow.com/questions/32075498/error-retrieving-parent-for-item-no-resource-found-that-matches-the-given-name](https://stackoverflow.com/questions/32075498/error-retrieving-parent-for-item-no-resource-found-that-matches-the-given-name)",1531156745.0
DrSghe,Can you post the output of the --stacktrace or the --debug option?,1531152063.0
kbcool,"Wow never seen that but it looks like it's having problems doing an incremental build.

Try ./gradlew clean and re-run ./gradlew assembleReleasestep

Hopefully it's as simple as that.

Did you move files around or move machine ? Eg commit to repo then try build elsewhere? You may also be missing files.",1531152472.0
redpopcornpanda,I've seen this before too. I think for us we had to put `android.enableAapt2=false` into `android/gradle.properties`.,1531266806.0
RoryH,That was a cleverly hidden advert for React Native consulting.,1531137219.0
creambyemute,And where is the content of this article? Didn't find any,1531163884.0
orebright,"Since you didn't give much context you probably won't get helpful feedback. My $0.02 is it must be an issue with your own app code. RN on its own will never take that long to load. It's usually below 1s in my experience for a light/medium sized app (not including network requests / loading images of course).

Things to look for:

\- Infinite loop (you might have a piece of code running indefinitely which is hogging up most of the resources).

\- Accessing network before your first render (maybe there's a ton of slow or one *very* slow network request?)

\- Some native module with some incompatibility (these are very hard to debug on RN unfortunately)

How to isolate your issue:

Use `setTimeout` or some other timer utility to measure and log the time between different sections of your code. Once you've found the area, narrow it down until you've identified the biggest offender. Keep in mind sometimes you might see many small time stamps so add some kind of name to the log so you can see if there's something being called significantly more times than necessary.",1531113317.0
Unforgiven-wanda,"Let me guess: you're using Expo  
If yes they still haven't ""fixed"" the fact that the app needs internet connectivity at startup, meaning if it's slow, it'll drag on your startup time.",1531120459.0
lefooey,"Parent view needs flex:1 as well.

",1531099310.0
mohsintariq10,Flex:1 to view and textview .. it will push the icon to the very end ...,1531133286.0
MetorFinis,"Try justifyItems:’space-between’

Or

AlignSelf flexStart flexEnd on children",1531113522.0
kbcool,"Tried width: ""100%"" ?

Could shoehorn it with onLayout on the parent. Set width/height in state then use that as the width and height of the textinput. 100% width should work though. You just need to make sure as /u/lefooey said that the parent is occupying the space you need it to with flex:1 on it and its necessary ascendents.",1531128290.0
Pavle93,Try Native development.,1531206819.0
acoalt,"It’s good JS Practice to use async calls, as not to tie up the one and only JS thread (causing the app to be unresponsive)",1531036793.0
veggietrooper,"The thing is that you don’t really know how long the user will need to wait for the data to come back. So using something like setTimeout would only work some of the time, and never efficiently. Async doesn’t tie up the thread, and gives you something to work with regardless of what happens, even just an error. It’s beautiful, you definitely want it. 

Edit: also “I don’t need to execute any other code while the user waits” - unless you are running a VERY simple page, you will! It’s bad practice to build a forced period of freezing in any page. ",1531038260.0
FullMetal21337,"If you are using Redux for this, I’d highly recommend using redux-sagas. With this you can choose to make your users wait, or you can “fork” your requests so it feels async. Has a bit of a learning curve, but the overall control is much, much better. ",1531051693.0
maynotbe,100% yes. ,1531082963.0
rco8786,What do you gain by going sync and tying up the UI thread?,1531093784.0
fuck_with_me,This is not RN-related.,1531054140.0
alien3d,"If you do just one request  no need to async. But if you have nested request, better to async  . Sometimes async clash and point those error(website) . I don't like new style async await and it callback but it the proper ways nowdays. ",1531049070.0
ahartzog,Have the color be reliant on a value set into state that updates to match as text is typed. ,1531017750.0
excs,"Couldn't you just use the same style prop? 

    <TextInput style={[styles.input], {color: this.state.color}]} />

edit: nvm i misunderstood what you were talking about...*that* i don't know",1531018535.0
ExtremelyQualified,https://github.com/wix/react-native-zss-rich-text-editor/,1531035065.0
Noitidart2,I am also looking for a solution to this on iOS.,1531097223.0
chrisftasian,"adobe color wheel(to get a good color theme going), shadows//elevation, border radius , border width, margins, and using opacity would make it look nicer. Goodluck :)",1530998540.0
strike69,"The other few comments are great. If like to add, fonts are uite important as well. I typically like to utilize 2, a serif and a sans serif font. I'll use them to draw attention to certain areas. Font size is important as well. Notice how the buttons in the second example look fuller, with the larger letters. There's no hard rules to this that I know of, but as you build more GUIs you'll pick up on some common patterns. 

Another important thing I've found is to hardly ever use solid black or white. Instead, for example use something like #333 for black for examppe, and it's equivalent for white. YMMV. 

Keep it up. :-)",1531006339.0
kubelke,Try pastel to use colors,1531002334.0
P1505C,"Are you doing the UI straight into code or using a design app like Sketch first? The reason I ask is that the tool will impact the result.

Your colours and grid aren’t helping you here. I’m happy to put something together for you in Sketch, you’ll be able to get the CSS out of that. It’ll be a start.

I’m learning React but have been a designer for 21 years, so we are at opposites :-)",1531056201.0
mikeyjojr,"When starting a layout like this you can follow the infamous quote ""Good artists copy; great artists steal"", its how you'll start to learn good design concepts by directly copying designs that inspire you.

Take that screen shot and lay it into sketch, XD, or Invision Studio (etc, etc) and drop the opacity of that layer to 50-80&#37; (you can change this as you work, also hiding the layer to see how you are doing on/off). Once you're happy with the ""inspiration piece"", move on to customizing colors and aesthetics of features to fit your brand/product. Be careful when making adjustments to the ""inspired"" design though, if you have a slight feeling in your gut that the palette/aesthetic you chose is distracting or not fitting...its probably true.

I could go on and on...but that is the quickest path to something you're happy with and looks professional in your market.",1531011910.0
julamme,I'm sorry but what does this post have to do with react native?,1531021155.0
kbcool,It is true but you'd be best off asking about it in /r/reactjs this reddit is for native mobile apps built in react native not the web side of things.,1530970253.0
agmcleod,React can be rendered by the server to spit out static HTML.,1530973135.0
derGropenfuhrer,"Yes, take a look at Next.js. ",1530980845.0
kbcool,So I know you're a bot posting these pointless links....but what I am curious about is whether a bot is also producing the code snippets and posting on github and your website and what's the long game? Blackhat SEO?,1530970522.0
kbcool,".......more details......plz

Given what you've said so far though if you created a new node module and are trying to test it in a brand new test project then you can run into issues with linking. I usually install from my github/bitbucket other repo to avoid these during late stage testing. Painful I know when making updates as you have to rinse and repeat but RN (not really it's fault more of an inherited search path issue) ain't good with symbolic links.",1530913754.0
alexandr1us,"Not impressed with the app on Android.
Hate when devs do not handle backstack",1530911852.0
thisisafullsentence,"Wow this is the wrong place, wrong submission",1530902752.0
gavrocheBxN,"So you come to the subreddit that has the best react native developers and spam the ""best react native app developement company"" and you're from India. 🤣",1530903409.0
kbcool,You shall find all the answers here: http://lmgtfy.com/?q=nativebase+RTL,1530886101.0
MetorFinis,"Searching for the same thing. Was about to try the plugin you mentioned. I can do a follow up later this day. If you find any other plugin that works, please let me know.",1530863891.0
bladefinor,"I do recommend you all to read the README. But let me present myself in short before heading to explain this plugin. I am new to the React Native world. While I'm more used to React Web, I realized that working with native components, it's quite complex to handle styling based on component props and state.

Take not of this Button component:

```js
<Button label=""Foo"" primary border />
```

In React Web, I usually define a component's className in the `render` method this way:

```js
const { props } = this;
createClassName(""Button"", {
    ""primary"": props.primary, // true
    ""border"": props.border, // true
    ""disabled"": props.disabled, // false
});
```

Example above returns the following string: *"".Button.primary.border""*

And for anyone interested in knowing how `createClassName` works:

```js
function createClassName(initClassName, conditions) {
    return Object
        .keys(conditions)
    	.reduce((className, c) => className + "" "" + (conditions[c] === true ? c : """"), initClassName)
        .trim();
}
```

I wanted to do a similar approach in React Native. So if you read the [""usage"" example](https://github.com/NordlingArt/react-native-stylizer#usage), react-native-stylizer works pretty much the same way but returns an array of styles (while also being a lot more complex under the hood). Feel free to check the source code and see if there are ways to improve and optimize this plugin!

Thank you for your attention!",1530812706.0
,YOU'RE SO SEXY,1530846419.0
kogar,"Boy, I picked the wrong day to decide to learn React Native on Windows LOL!  I was ready to kick a puppy today with my installrage.  As I speak, Linux Mint is downloading to be installed as a VM.  #CantStopTheSignal",1530816013.0
pfriez,React Native has always been by Facebook for Facebook. ,1530886135.0
shivawu,"Can't say I'm surprised at all, and why am I a little bit gloated, lol

Time to add to my curated list of broken releases:
https://github.com/facebook/react-native/issues/18681#issuecomment-378666466

(Not getting personally, but it's downvoted by the same person with the fork-or-go-away attitude)

Also guess what, 0.55 release's biggest feature is InputAccessoryView, and they forgot to add the change to the release until 0.55.2.
",1530852988.0
axemclion,"React Native team member here. We are really sorry for the issue.   


Short term fix: We did discuss about this in the contributors slack channel, and folks from the metro team are working on fixing it.   


Long term: We are working with the community to come up with a process where such breaking changes do not happen. We have a few proposals and are looking at way to improve the system. The proposals include adding more tests and getting a CI system for Windows running. ",1530916624.0
blbil,"This is very disappointing, I'm not going to vilify the maintainers or anything.... But this was apparently a known issue that was filed many times during rc phases, so it boggles my mind that they would put it in their stable channel. Then the comments are like ""if you don't like it fork it yourself""... This isn't a matter of features not being developed that someone wants (a real reason to fork), its just straight up quality assurance of one of their supported development platforms.

Also, this is coming during a wave of uncertainty after the AirBnB news. This is just more fuel for the haters. I really hope this gets resolved soon, and we get a decent apology.",1530845910.0
russeg,"They can't even fix stuff like this and they plan on a ""large-scale rearchitecture of React Native"". That would be a hell of a mess I'm telling you right now.

Just look at this Flutter [issue](https://github.com/flutter/flutter/issues/18634). not only was it addressed fast, but core devs trying to get it resolved. Oh and a core dev even said ""Happy to help! Sorry it was such a hassle."".",1530798641.0
,[deleted],1530803944.0
paulsia,">Again, it's an OSS project and if you don't agree with what the core does you can always fork and maintain your version of the project.

this is always their answer when things break lol. i hate that kelset guy. ",1530796355.0
derGropenfuhrer,Don't do Node dev on windows. At worst do it in a VM. I have tried to do Node dev on windows and hated it. ,1530833606.0
johakr,"Even though this issue was already reported in early `0.56-rc.0` stage.

Time to switch to a MacBook, I guess.",1530778056.0
bogdan5844,"Would this affect WSL node, or just PowerShell/cmd instances ?",1530806318.0
arndomor,"I have learned to use a stabler version with react native and (software in general) because the latest version is usually buggy. Like 0.55 has this known bug where the text input won’t support Chinese input. 
It’s really depends on how trusty are you to good intentioned devs who work in a complex system. ",1530851233.0
utkarshmankad,"I started a Udemy course on learning React Native, and Boom !! The project doesn't initiate. I wish React Native team quickly fixes the bugs.",1530853343.0
com2kid,"I'll give Expo some props here, Expo being delayed a bit behind RN prevents issues like this from cropping up.",1531246889.0
kuramori,"That's not an issue at all. ¯\\\_(ツ)\_/¯

Nobody does serious nodejs dev on windows, you can downvote me as long as you'd like, but that's just the truth.

In fact I wish whole ecosystem stopped wasting resources on windows support and used it for something really important.",1530865203.0
,EVERYBODY DISRESPECTS WINDOWS,1530846334.0
lechatsportif,I've lost faith on rn.  They just don't treat it like true cross platform software like java.  It's just hacking to them like breaking some images rendering on a crappy website.,1530794220.0
Buliam,"Apart from the Artsy app, this is the most well-known app I've done an interview for so far. It's definitely one of the most interesting and insightful ones.",1530742826.0
russeg,it probably not going to end well for them. they should stick to native because of the type and complexity of the app they have.,1530746624.0
ziguy,Here's a really good article about how to do this https://blog.expo.io/licenses-the-best-part-of-your-app-29e7285b544f.,1530743776.0
chrisftasian,?,1530750168.0
fupower,"I tried few months ago, I’m pretty sure there’s is a npm package for that",1530735368.0
kbcool,"I'm sorry this won't help you much but I don't have this issue yet it seems strangely familiar. Maybe it happened to me once and quickly resolved itself. 

I have and do use both Genymotion and the AVDs. I don't use Asyncstorage directly but through redux-persist.

Is it definitely the app not being able to access the data in Asyncstorage or are you trying to do it through the console in Chrome because I can tell you the latter will not work full stop. 

Alternatives wise SQL-Lite would be out as it's the backend for Asyncstorage on Android so you'll have the same problem.

https://github.com/itinance/react-native-fs

Allows you to read and write files directly from the file system so layer whatever you want on top of that or use it directly.",1530698491.0
pxlb_phillx,"It's using promises..

example of my usage of asyncStorage in my RN project :

     static async getCurrentUser(){
     return await AsyncStorage.getItem('@user').then(data => {
         return JSON.parse(data);
     }).catch((err)=> {
         console.warn(err);
     });
 }
    
     static async isLoggedIn(): Promise<boolean>{
            return this.getCurrentUser().then( usr => {
                console.warn(usr);
                if(usr.token === null){
                    return false;
                }
                if(usr.token === null){
                    return false;
                }
                if(usr.token !== undefined && usr.token !== 'undefined'){
                    return true;
                }
                return false;
            });
    }

and then anywhere else i do :

    return LocalStorage.isLoggedIn().then( is => {return is}); }

important is to use then and arrow func to get data ..",1530729907.0
kbcool,"*Question 1:*

Haha no idea why any of your first three tries worked.

Padding is specified as either padding: {integer} or paddingLeft/paddingRight/paddingTop/paddingBottom: {integer}

(You can actually use a percentage as well like ""50%"" but don't. It's confusing and using percentages instead of device independent pixels is not a good idea for most cases).

*Question 2*
If you don't think you need position absolute then don't use it. That's generally the rule with it (on RN and the web). Examples of somewhere I would use it are a camera app where I have a full screen camera preview and I need to place the switch camera button and the take photo buttons at the bottom of the screen. I would use absolute positioning and left and bottom for example to place the buttons over the top of the parent.

I could still achieve the same effect by using flex properties

https://facebook.github.io/react-native/docs/flexbox.html

I would use flexDirection: 'column', justifyContent: 'flex-end', alignItems: 'center' on a View which would also place my content at the bottom.

*Question 3:*

Not sure about a guide. Having plenty of web experience I found it quite natural but with a few quirks. Just had to remember where to quote things as it's not css it's javascript and stop adding px to everything. Learning the flexbox is mandatory, you're going to struggle without it so refer to my earlier link.

Hope that helps.
",1530697791.0
co_matic,"I tried styled-components in the RN app I'm working on, but I'm going with native styles from now on, for the following reasons:

 * native styles are more composable and extensible
 * styled-components allows/encourages use of concepts that don't exist in RN, like pixel measurements and CSS rules
 * styled-components often choked when I tried to apply it to components it wasn't aware of, while I could easily apply native styles to the same objects",1530661265.0
m_mortda,You can wrap <TouchableOpacity><Text>click me</Text></TouchableOpacity>,1530660827.0
Noitidart2,"Great question. I also am looking for this. I used the child `<Text>` within `<TextInput>` to highlight mentions on Android:

    <TextInput>
        whoa no way <Text style={{color:'red'}}>@rawr</Text>
    </TextInput>

I am looking for a way to do this on iOS but cannot find one yet. Android method - https://stackoverflow.com/a/49082641/1828637",1530776370.0
jacobp100,"Using cocoapods is fine. We don't have any special scripts or setup, it pretty much just works",1530787451.0
fuck_with_me,I've had great experiences with cocoapods.,1531054211.0
ExoDroid,"Doesn't look like you need to change anything. You currently have a web app (written in what? Pug isn't a framework) and would like to create a **separate** native app using React Native.

Also, you've combined your back-end tools with your front-end tools, which should be 2 separate projects that work together. If Node.js & MongoDB work for you than you should keep using them in React Native similar to the way you use them in your web app (API calls? GraphQL?).

I have no experience with Passport.js so I'm not commenting on that.",1530645956.0
nimrodiny," I'm pretty sure the options are somewhat limited, but I can easily recommend [Appsee](https://www.appsee.com/?cpnid=7010N000000hdsE). I've tested in ReactNative based on recommendations here on Reddit and so far it's been working extremely well! 

I think [UXCam ](https://uxcam.com/)also works with ReactNative and I've heard good things as well.",1530634462.0
Starchand,"AirBnB and Udacity are both multi-million dollar companies that can afford teams of iOS and Android developers. I've always been confused while they use RN. Personally, for my side projects the disadvantages of RN do not out-weight the advantages of being able to target both platforms with majority code share.

It's not good news but I expect to continue to use RN for my side projects and startups. Should they become successful I too would probably drop RN for native when it was financially viable.  ",1530629018.0
ExtremelyQualified,"> Are you building an app/feature that will look/behave the same regardless of platform?

Don’t blame React Native for this. It’s a choice to share your entire UI code. You can choose to pick any level of sharing or none at all. ",1530628215.0
key_value_map,"Just before reading this article I've been decompiling Android apk files and looking at internals of apps installed on my device. Surprisingly when I decompiled Skype apk I found out that they use React Native, googled and, yeah, they use it officially: https://dev.skype.com/react",1530716451.0
alien3d,"We all here knew the risk, but do hope something good will come out 0.56 version and do hope react-native is separate from  react itself. For me, i cannot afford any new idea more from react.",1530624476.0
crispypretzel,"Brownfield apps are rough, especially because tooling becomes so difficult as soon as you introduce react native into your codebase. I'm curious if we'll see the same from companies with greenfield apps.",1530635006.0
ElektricPrimate,Curious if these stories from AirBnB and Udacity has caused any of you in an enterprise setting to abandon React Native in favor of native. Not asking about startups and side projects but businesses with mobile apps as well as a web presence. ,1530639880.0
russeg,"In our company we have learned not to force React Native in doing what it's not good at. If we are having problems implementing something in RN, we change the design of the app instead. ",1530662366.0
Hathery,"Some of the criticism is valid, such as the performance issues and the fact that overall they didn't feel that it was worth it, the issues with the speed of the ecosystem.

Some of it isn't valid. Build times increasing when you add RN to an existing project is to be expected. If you want very different UX on each platform then you'll generally have to implement it (as you would anyway). Internationalization is always a task, he's unclear why React is being criticized for this.

Overall my takeaway is that if you're looking for an app customized to the UX of each platform, and that's more important to you than having devs who can cover both platforms, then RN is not the way to go. They seem to feel that the work involved in producing the RN features was greater than the work involved to just do things natively twice.",1530720308.0
terekokiya,CS50's React Native course ,1530610791.0
rizwanahmed19,There's a free course by Spencer Carli. I would suggest that. ,1530611476.0
bookroom77,An intro to React Native even before you download the SDK and get started: [https://devopedia.org/react-native](https://devopedia.org/react-native),1530615511.0
albertpak,"One of the best YouTube playlists: [https://www.youtube.com/channel/UCiNWv52iO\_OAdZ12kslG4Cg](https://www.youtube.com/channel/UCiNWv52iO_OAdZ12kslG4Cg)

and these courses are great too: [https://learn.handlebarlabs.com/](https://learn.handlebarlabs.com/)",1530638143.0
GldnDragon29,"I'd recommend learning React as a framework first, and the best place to start is with Stephen Grider's course. If you're already confident with React and building a website, then take his course on React Native. He has great tutorials.

",1530611984.0
jamachad,I'm following this one and so far looks pretty nice [http://www.reactnativeexpress.com/](http://www.reactnativeexpress.com/),1530979329.0
Todilo,This is not a guide but a description of what react native is.,1530604745.0
fuck_with_me,Can you post an email or networking profile so that people might connect that way?,1530632729.0
NaineshPandya,is it still open for the discussion?,1535020903.0
tmSecureEnd,"Hi

I am interested in chatting with you about your project. I understand your requirement and am available to work on this project. I am author of this very cool theme 

[https://reactadmin.secureend.com](https://reactadmin.secureend.com/) (you can login and explore it) and web site [https://secureend.com](https://secureend.com/)

My git : [https://github.com/DilshadKhan](https://github.com/DilshadKhan)

Let’s get talking. Let me know the time-slot that suits you for a chat.

Best,

Dilshad",1530599871.0
ne8il,This is probably better suited to StackOverflow. Anyway it kind of looks you're assigning \`topic\` to the top level \`previousResult\` when you should be assigning it to \`previousResult.category\`. So the \`result\` object you end up with will have both \`category\` (which is all old stuff) and \`topic\` (new stuff).,1530546713.0
dontforgetpassword,I’m not really sure what you are asking. ,1530551070.0
redpopcornpanda,"Well, you won't get there with native base or react native elements. Even the default native look on iOS and Android is really basic and nothing beautiful. You really need to be creative yourself or with a designer to come up with the genius layouts, and then spend a lot of time tweaking the UI (using the built in style stuff) to exactly how you want it. Same for normal mobile apps.

I will say the single easiest and best thing I did to make our app really good was adding fluid navigation to react navigation. It's really easy and lets you do shared element transitions, which usually look good.",1530576173.0
sportif11,Try learning anything about web development first. ,1530543977.0
fuck_with_me,"Forgive me for speaking candidly, but you seem like a fucking idiot.",1530543758.0
aaronksaunders,recently updated the code to latest version of vue-native,1539871075.0
ckorhonen,Take a look at Formik - I recently discovered it and seems to be one of the better options. ,1530538836.0
redpopcornpanda,"I usually just do it in the component state. On tapping a submit button, I run validation on stuff stored in state and then set an error message if necessary. Simple, but it works very well.",1530575905.0
Noitidart2,"I saw the bad comments here about redux-form, however I don't agree. I use redux-form and it is absolutely perfect in react-native and on the web.",1530776488.0
realripley00,"I think it would be. But you are posting this in the RN subreddit, so people seeing this may be a bit biased. 

If you’ve already developed it and have the ux and flow worked out and if you don’t have to change the back end, it should go pretty quickly compared to starting completely from scratch. Being able to compile to both platforms is one of the bigger draws for me.",1530483807.0
theOwlBoyz,"If your app require more on native capabilities, it is not wise to port over to RN or any cross platform. Why? You basically have to write the plugins for each platforms. Back to square one. Besides that, you have to adapt with RN pattern, reactive programming, unless your current app is also using similar reactive programming library.

Just recently, Airbnb just post their good and bad with RN (medium article) and they start to drop RN due to their apps grows and more native features needed. ",1530543527.0
Noitidart2,What's your app? You didn't mention it but asked us to check it out.,1530502917.0
hamsa_hiennv,"If your app don't process anything regard to hardware, I think it is worth to convert your app to RN.

Why?

\- It should saved time for you to maintain both platform: Native and iOS because RN work for both with 1 source only.

\- It is easy to develop an app

\- It is fast and saved time to develop your app

....

Just share my exp and my opinion.

Hope this help!",1530514356.0
alien3d,"Good question but  like why you build on c# compare to assembly.  It's about speed, if just a simple interface go play around with react native.  It is normal to go to other language and try to make same thing.. ",1530535717.0
Khalos12,"You may find this blog post interesting. Airbnb made a series of blog posts detailing their 2 year experience working with react-native (migrating from native) and what they are doing moving forward.

https://medium.com/airbnb-engineering/react-native-at-airbnb-f95aa460be1c",1530728115.0
SizzlerWA,Don’t you just set the source on an Image component and you’re done?,1530484983.0
LEO_TROLLSTOY,How does this garbage have 5 upvotes?,1530535620.0
chmpgne,Would be interesting to see how it performs against these benchmarks: https://github.com/brunolemos/react-native-css-in-js-benchmarks,1530488763.0
FoodieAdvice,"needs more pictures

Not sure if I'd add another dependency without it.",1530541612.0
nashturing,"If it's a string, sure why not.",1530395173.0
simplicius_,Great! :) I'd love to submit a few as I have written a few. Let me know what is you criteria to accept one? ,1530445770.0
jeevium,"Had a similar case - don't remember 100&#37; the issue but I see we put in the code the following event listener in `componentDidMount`:

`AdMobInterstitial.addEventListener('interstitialDidClose', () => this.redirectToHome());`

So, we added a specific listener on when ad was closing and when that occurred, we navigated to Home view as we wanted to. In any case, you will need to do something similar (listen to this event or another similar one) and debug to see what happens with the code. The way we listened over the event is because we use *react-native-admob* package. And don't forget to remove all listeners in `componentWillUnmount`",1530463977.0
megabet,"I fixed this by adding an event listener to \`AdMobInterstitial\` for \`interstitialDidClose\`. In the listener, I passed parameters to restore the user's state and navigate back to the screen they were on. Make sure to remove the event listener when the React component unmounts.",1543725844.0
arya_minus,The Heroku Server is http://nazar-server.herokuapp.com/classify_image/ w/o UI and will be updated soon and playstore: https://play.google.com/store/apps/details?id=com.speks.nazar,1530355547.0
kbcool,"So I bumped into your project here and on react-native-tensorflow

It looks to me like you're sending the image to a server and the app is just a ""dumb"" client. 

What stopped you in the end from using tensorflow on the device? 

I have a trained model for body part detection and it's slow as heck on a PC, i'm going to re-train with mobilenet but I'm not holding up hopes for it running in anything less than 10 seconds or so on a mobile device but also don't want to pay through the nose for GPU standing idle using EC2 instances doing it remotely.  So interested in people's experiences.",1530723878.0
alien3d,Hope they release 0.56 before that,1530339156.0
MrNickel187,`yarn add react-redux`,1530314894.0
iceporter,"yeah using 2 package manager is an example of dependency hell in js environment,

  
just create a new project and ony use 1 of them. I prefer yarn btw",1530339407.0
Kmantheoriginal,If you have a package.lock and a yarn.lock just delete one and use the other package manager ,1530327862.0
agmcleod,"With yarn you use `add` instead of `install`. Ideally you use yarn or npm. Neither of them work with each other's lock file. They also will not reconcile against each others installed dependencies very well.

In using react native more recently, i found there to be fewer dependency issues, mainly due to releases moving slower.",1530319281.0
rodrigoelp,"Hi /u/FoodieAdvice,

which version of npm did you use to have? I am using yarn v1.7.0 which automatically installed node 10 (which I had to remove and roll back to 8 because of react native issues). No problems when I install react-redux.

My assumption is: your npm cache is broken and you might need to reset it as described here: https://docs.npmjs.com/troubleshooting/try-clearing-the-npm-cache

`npm cache clean --force`

yarn has a similar mechanism to reset its cache which is `yarn cache clean <module>`

Hopefully some of this can help you out.",1530319636.0
alien3d,"To make yourself easier next time  . 

[https://yarnpkg.com/en/package/react-redux](https://yarnpkg.com/en/package/react-redux)

You will see something like use it and copy that.  

\*\* Just beware most of repo come from github, and sometimes some repo is dead without link to github. 

What with between yarn, bower, npm ?  Yes all this gizmo text can make your headache including me.  The most advise  you will see here just remove the node\_modules and ""**yarn install**"" . Sometimes i just  yarn add react-native-xxxx also work. Do remind even you put **""react-native lin**k"", some repo you need to adjust manually. Don't rely much on ""react-native link"".Read the documentation first. ",1530341621.0
czater,In my opinion RN dependency hello is real and this is main disadvantages of RN. But there is Ignite CLI that may safe us! ,1530344096.0
whiteman_can_jump,"I’ve never used it, but a quick google search for “react native reorder list” brought up [this](https://github.com/deanmcpherson/react-native-sortable-listview). Try it out",1530298090.0
beastlyfurrball,"You can use a flat list with flex: ""wrap""",1530332399.0
derGropenfuhrer,Known number of elements?,1530298920.0
jeevium,"If I understand correctly, the logic you are trying to implement is discussed in this [article](https://medium.com/react-native-training/build-responsive-react-native-views-for-any-device-and-support-orientation-change-1c8beba5bc23) and is implemented as a [package](https://github.com/marudy/react-native-responsive-screen) as well. Use the package or check the source code to implement it in a custom way yourself.",1530293336.0
kbcool,"Ask yourself why you're trying to do things in percentages or fractions of screen size. You might have legit reasons but often you're just trying to make the app look exactly the same on different screen sizes which isn't the right way of doing things in most cases.

If I have an iphone X I don't want my apps to look like something designed for the vision impaired. I want to see more text or more photos on screen. When designers/developers make everything percentage based they ruin my experience. 

So you should try to make use of flex as much as possible and keep margins/padding/text size etc DP based not percentages. On the flip size if you use percentages on very small phones like the iphone 4 you may risk making things unreadable/unusable.

I'm sorry /u/jeevium you've made a great little lib there but your screenshots showing everything scaling up like that are a perfect example of not what to do for 99% of cases (a game might be an exception). 

(BTW: I think we've had this argument a few times now)",1530295667.0
mulvidon,I'm at work and can't access youtube.  Can you tell me what your app is/does?,1530301154.0
PaulLaux,"Tnx for this. 

AppSync and React Native is a powerful combination!",1530292936.0
Jonovono,"Hey congowarrior, i'll try and answer some of these!

Firstly, so you can see what we built in RN (we use some native components that we wrote ourselves and that are open source but the majority is RN): https://itunes.apple.com/us/app/bunch-group-video-chat-games/id1294869021?mt=8

* Note: We are not doing android yet, so my feelings may change when we get to that :p 

1. This has been in production for 6+ months now thousands of monthly users. So I would say it is ready for production :p I show people it and they are surprised it's not native. It's smoother than a lot of other native apps I used (we do have some issues though, but I believe they can be solved)

2. So as much as I love RN, I think it's a pretty poorly maintained software. In the last year or so I have been using it it has gotten better but still: updates will introduce random bugs and the issues will be ignored until enough people complain. Some days things just won't seem to build and then suddenly it will work (use yarn). There may be times you need to drop down to native depending on what you are doing - that is a bit hard but once you do it once it's fine. Those are some that come to mind, I am sure there are more. Airbnb has a long blog post where they talk about moving off of RN after a few years so maybe check that out too!

4. I love RN. I've been in the JS world for awhile so it feels like home vs Swift etc. I love instantly being able to see my changes, redux, the way you build UIs with React. Especially if you are a startup in the experimentation and exploration phase proving out ideas it's great to let you iterate super quickly. 

5. What do you mean by this point? Depending on what you are doing you could stay completely in RN land.

Another thing you could look into is https://flutter.io/. I have heard some great things, it's a different architecture (and language), but still worth evaluating I would say. 

",1530230603.0
czater,"1. Yes, RN is mature.
2. Dozens of functionality (like navigation) need to be imported as 3rd parties libs that need to be setup as well. This process takes some time and sometimes is very painful.
3. A lot of stuff could look weird if you came from C# world to JS. At the beginning I was spending some time wondering ""hmm how this is possible that it works...it's too simple, what the hell..."", after some time I understood that this is just JS.
4. For simple and even for some advanced multiplatform apps that don't use super platform-specific functionalities - I am happy.
5. Yes, ​it is, look at Ignite CLI. Also React-Native-Elements or NativeBase for UI only.",1530260700.0
sevenyearoldkid,Rogue process. If you ever work with rails you’ll have it happen nonstop! Assuming you’re on Mac type ‘lsof -i :19001’ you should see the process come up. Note the pid. Then type ‘kill -9 ‘ and then that pid. ,1530259991.0
redpopcornpanda,"I mean, is there a way to tell expo to listen on port 19000 instead of 19001?",1530250258.0
talor_a,Navigate to https://your-expo-ip:19000 (or :19001) in your phone browser and see if you can connect to the packager. Some JSON text should be displayed otherwise your phone isn’t able to reach your PC,1530597302.0
DrSghe,"Nice, I would love to see a blog post with a tutorial!",1530254835.0
hb_to_ms,Thanks! I plan on doing one soon!,1530270732.0
,"https://www.npmjs.com/package/eslint

install it then initialize it.",1530212081.0
IminPeru,"npm install the eslint package into your project. and then you make a .eslintrc file and write the rules that you want to use.
",1530216710.0
ramzez_uk,[good step by step guide](https://github.com/airbnb/javascript/issues/1589) ,1530218607.0
notAnotherJSDev,"```
yarn add eslint
yarn run eslint --init
```",1530218732.0
saugoof,"ZXing is for Android only.

However you can use [react-native-camera](https://github.com/react-native-community/react-native-camera) which includes a barcode reader (including QR codes, PDF417, etc.). It's fast, simple and works a treat for Android and iPhone.",1530192932.0
alien3d,"i have try barcode scanning .. but a bit slow. forget what i'm using..  Since somebody have made a wrapper , i suggest take this library upgrade all the library  then link up to your app

[https://github.com/ramamurthynagaraj/RNZxing](https://github.com/ramamurthynagaraj/RNZxing)",1530191588.0
,"If it’s saying you might have messed up an export, check how your importing and exporting your modules. If your module exports as a default (export default MyModule) then you don’t import it with curly brackets. Post your code!",1530216085.0
kbcool,"Depends what you need to store I guess. You say more complex data types but Async storage can store any data type you can represent as JSON. Do you mean you have more complex querying needs than just key/value?

You can interact directly with the filesystem with this package:

https://github.com/itinance/react-native-fs

SQL Lite is available. There's also the usual litany of javascript database abstractions about.",1530178316.0
Jonovono,If you are using Redux use: https://github.com/rt2zz/redux-persist it's glorious. Automatically saves your state and reloads it (you can configure what it saves too etc),1530230772.0
alien3d,"sqlite ? It may not full fledge server db. but at least can store temp data if network is down.

[https://github.com/andpor/react-native-sqlite-storage](https://github.com/andpor/react-native-sqlite-storage)",1530199454.0
jeevium,Checkout [this article](https://stackoverflow.com/questions/44376002/what-are-my-options-for-storing-data-when-using-react-native-ios-and-android),1530293739.0
r9s,why does it start in the middle,1530187265.0
lefooey,"Use Axios plus an interceptor to detect when you need to get a new cookie, whether because you don’t have one currently or because the existing one has expired.  Since you’ll be automatically updating it you can just keep the cookie in your app state (ie redux or flux). 

See accepted answer here for a similar technique:
https://stackoverflow.com/questions/35900230/axios-interceptors-and-asynchronous-login#36089100",1530148476.0
apphut,"Hey I am facing a similar issue using cookie manager and axios.. Sometimes my cookies are not correctly saved while if I use asyncstorage to store the cookies manually, axios ends up using the ones stored instead of the ones I specify. Did you solve your issue, if so how?",1532490385.0
coowoolf,Great,1530153190.0
redpopcornpanda,"Have you debugged the new build on a simulator now that it's ejected? You might get some valuable insight there. You can also use Android studio to debug the app running on your phone, it might spit out some useful error messages to logcat",1530165992.0
kbcool,"The fetch function has some quirks (especially around headers/cookies and URL encoding). It's implemented slightly differently on IOS vs Android. It will also behave differently when you're remote debugging as you're actually running the code on the remote browser not the device.

Could be this is what you're hitting. Have you been using it with the debugger connected all the time? Try installing and running a dev version without the remote debugger and see if the same thing happens.

No variables anywhere being set by __DEV__ that you haven't provided a proper production alternative for?",1530179125.0
coffee-n-code,"What are you doing? It all depends on the type of work that you do in the app. 

I’ve been working on a chat app and last time I’ve measured on Android it was around 60-80MB. 700MB is way too high",1530145073.0
nashturing,If you're running in dev mode the memory usage will always be off the charts. Profile in release mode. :),1530145824.0
maiam,I do not know but I would love to hear someones response/advice on this,1530143728.0
kbcool,"If you are using react-navigation it has serious issues with not being able to keep track of navigators within navigators and treating a stack navigator like a stack of unique screens instead of pointing to the same screen.

Short of it is: It can and will start generating a unique screen for each navigation action in certain circumstances so your app can grow infinitely in memory consumption based on navigation. 

To test for this do a console.log when your screen is mounted and check for constant mounts or more visually download this tool:

https://github.com/facebook/react-devtools

Then search for your screen name after using it for a while. Instead of seeing one instance you'll see it growing infinitely.

Comment back here if this is your problem and I'll supply some solutions.",1530178798.0
creambyemute,"It depends.

It depends on what feature set you need.

If everything you need is already available prebuilt and you don't have to go to the native side of things, you can get up to speed pretty fast.

If you have to go and do some work on native side it might take longer as there is another thing (platform, language/sdk) to learn about.

But within months for a simple app is definitely possible.

I made a feature prototype within a week, though I know native iOS and Android development and thus had no problems dealing with the native side of things.

I would rephrase the question, state what you need and planning to do and then ask if that is possible within months without prior knowledge of react or native dev.",1530113906.0
rusido,Follow the tutorial on the rn website.,1530126465.0
mulvidon,I throw all my greeting cards into Evernote. I'll check out your app.,1530127150.0
kbcool,"You have to use native code to interface with BT devices, sorry.

No BT support in Expo AFAIK and if your googling hasn't hit any results I doubt it exists right now.",1530129333.0
kbcool,Welcome to last week. Answers can be found by using the next page facility.,1530130788.0
kbcool,"Are you using a TextInput ? Shouldn't it just come back as text then you use your locale to process it in JS?

You might need to provide more info or an example. I doubt  anyone knows what *""our Javascript is treating it as an unnecessary grouping separator and stripping it out of the input.""* means as it's your code.",1530131014.0
TexMax007,"The BarcodeScanner Expo component almost certainly does not search for anything, and it shouldn’t; that’s out of scope of a component like that.

It merely passes the data and type of barcode it is when it detects one. It’s up to the developer to pass that information to another API to do something with it.

I can’t speak to recommendations on data persistence. 

Good luck.",1530063339.0
inform880,Firebase is perfect for your first app. I highly recommend you search barcode scanner on npmjs.com and search for a library that meets your specific needs.,1530072006.0
pizzafapper,Try this - https://www.npmjs.com/package/rn-barcode-scanner,1530090463.0
alien3d,"seem okay.. maybe they upgrade the RC version.. weird.

seem the last tag :[https://github.com/facebook/react-native/tree/v0.56.0-rc.3](https://github.com/facebook/react-native/tree/v0.56.0-rc.3)",1530066099.0
agmcleod,"No noticable performance hits from it in my perspective. Older phones had trouble reaponding to the app, but i didnt benchmark to see the issue exactly. It just maps to stylesheet objects, so updating those shoild be cheap. The rendering itself is what will take time.",1530073422.0
dasitm,Styled ... components... ??,1530047627.0
FixingKitty,"I'm using it for my apps, ""Launch Bay"" and ""Legion Commander"", no noticeable lag from my perspective",1530093908.0
fuck_with_me,"This seems more like a GraphQL ""best practices"" question rather than anything to do with RN.",1530098577.0
futuregerald,I think it would make sense to save the user and then refresh the user when they open the app while connected to the internet. That can be done silently. ,1530104055.0
kbcool,"Did you fall back to the manual instructions for the package?

https://github.com/Polidea/react-native-ble-plx/blob/master/README.md

Also why is your swift in a shims directory under your home dir? Not pretending I'm familiar with dealing with swift versioning but if I do a which swift on my mac it's in /usr/bin/swift 

Not sure that helps but often auto installs don't work so if you just run through the manual steps often fixes it.",1530048997.0
ahare_tdg,"Hope you're not still stuck a month later!

I had this issue:

* I updated my react-native-ble-plx to 0.9.1 (in my package.json) and npm-installed again.  This caught a swift 4.1 update commit.  I had been on 0.8.0.
* I also had to update react-native-nordic-dfu to catch a swift 4.1 update commit.  It wasn't in a new release, so I had to just git clone [https://github.com/Pilloxa/react-native-nordic-dfu](https://github.com/Pilloxa/react-native-nordic-dfu), which I'm not \_entirely\_ happy about, but stuff built in xcode afterwards.  It looks like the only commit added since they released 1.2.0 was the swift 4.1 update commit, so I'm feeling ok about stability.",1535032578.0
mulvidon,Great question OP. I've been wondering the same myself. ,1530031652.0
skamansam,"There are a lot of architecture and design paradigms. Agile/TDD is very popular, along with Agile/BDD. In these methods, you first figure out what the simplest representation of your product is and iterate on it, little by little. Write as many tests as you can along the way so you know when your next awesome feature breaks your last awesome feature.
Personally, I use documentation-driven development. First, I write the README and outline all the pieces of my app as a checklist. As I implement those features, I check them off in the README. I build tickets for each of those features (usually in ZenHub) so I can have a place to actually manage features and bugs and shit. When I come up with a new feature, I add it to the board, then when I have time, I add it to the README. 
There are a shite-tonne of Dev methods. I recommend finding one that works for you. Make sure you can explain it in simple terms to others, cuz they may want to help you be awesome!",1530036160.0
daymanAAaah,"As a solo developer I like to find my own approach based on existing methodologies. Look at other popular frontend/mobile methodologies like MVC and use that just as you would in iOS or Android.

Break everything down into reusable components, have a clear separation between views, controllers and models, and don’t be afraid to make your own navigation system. 

I think a bad approach that many RN devs take is to look for libraries that do what Native languages have built-in. RN has no limits, you can get really creative with the look and feel of your app.",1530037083.0
timevirus,"Im a backend developer professionally, so there's a whole bunch of processes whenever we start a new app or project.

However, I run a small boutique wed development company where I build web apps, apis, and or mobile apps. 

In my opinion, there's no right or wrong way to structure your app.  Only if it's efficiency to you or not.  If you're working with a team, then standards must be put in place to maximize efficiency. 

I see engineers put too much thoughts into how they structure their apps that by the time they figured out what they like, they could have build 90% of the app already.

If you're into development style, then I highly suggest BDD for front-end and mobile app.  TDD for backend and api development.

Whatever you do, make sure your unit tests are passing without any communication with the backend service.

Often though, if you're a solo developer then test is almost always a second thought.  It's due to time constraint and cost.  Think of it this way, it better to have a product out there than no product at all.",1530056514.0
Endorn,Giant. Whiteboards.,1530098424.0
TomMahle,"First, I'm going to zoom out a bit. The crux of good architecture is to solve problems you have, and anticipate/ease problems you are likely to have in a way that limits overall complexity of the system as a whole. This is primarily done by providing constraints and high-level infrastructure that will aid development. At the same time, it is important to be cognizant of the fact that each constraint and abstraction adds its own level of complexity to the code base. With that in mind, each needs to be likely to return dividends in terms of reduced development time and reduced maintenance costs over the lifetime of the software.

With that out of the way, there's a few common questions in architecture selection or design. With some overlap, and largely off-the-cuff (I'm more than happy if people have suggested changes to these):

* Size: Larger projects should have more constraints in their architecture, and provide more runway for high-level abstractions to pay for themselves. Conversely, a one-man project that is going to take a week might not need much in the way of architecture at all (especially in React where lightweight state management is built into the library)
* Project Details: What are you building? In what ways do you think the current requirements are likely to change?
* Domain: What kind of business rules and business objects are you likely to deal with? Is it complex enough to build a starting schema for the objects and/or a solution for separating out business logic from application logic?
* Legacy: Do you have any code or data you want to reuse? If so, how are you going to tackle that while limiting complexity of the resulting whole.
* Testing: How do you ensure your code is testable? Will you be using dependency injection? If so, it's best to select a solution at the outset.
* Common Technical Problems: How will you handle Persistence, API Calls, loading logic, state management, business rules, etc.
* Common Architectures: With all of that in mind, if you can select an 'off-the-shelf' architecture (Flux, Redux, MVC, MVVM, etc.) you're going to have a much easier time linking to existing documentation than writing your own, and it's going to be possible to recruit people with experience in that architecture.
* File Structure: How are you going to organize the files that make up your code base. This always feels like a wash when you're coming up with it, but it can make a huge difference in how it feels to navigate around the app. I recommend organizing by feature, rather than type of file (e.g. put everything that has to do with the 'animals' feature together, rather than batching all your reducers together).  


edit: added File Structure, which was a rather large oversight :D",1530109682.0
nijolas-wilson,"RE React Native specifically, I have to second ""don't be afraid to write your own navigation"". I did this on my first project because the community offerings are abysmal. It's non trivial though!

Anyway - I get the feeling you are at a ""mid level"", or entering the ""mid level"" for the first time, so forgive me if I have read that wrong and you feel like I am patronising you. Growth only happens when you ask ""what else is out there"" and so I applaud the question!

But unfortunately there is no big secret. No one knows what is the best way, and 90% of arguments are speculating about which way might be best. And this is general of software development, and in fact life too (think religions). But this non result is important! It frees you from feeling like you have a sub optimal solution - the truth is they're *all* sub optimal. By even seeking further knowledge you already elevate yourself above the average, believe me!

Now some practical advice. As others mentioned there are tried techniques - I can recommend TDD, but it was hard for me for years - probably 4 before it felt totally natural. I can't recommend BDD personally, I could never get the hang of it, but many use it so it must work for some.

These are general, abstract approaches though. Something more immediately useful would be maybe an example project structure? I use redux, and so my application is split into modules (app/modules) named for the reducer each module deals with (app/modules/user) and this folder houses actions/reducer/rehydrater, and has a screens folder that houses components like ""settings.js"" which represents the entire settings screen in the app.

Modules may have their own components that are only used in that module (eg. one module of mine is a wizard setup process, so it has a progress indicator, and a wizard step component, etc). As soon as a component there is needed elsewhere, I will ""promote"" it to the main components folder (app/components).

I think this idea of ""layers"" or ""shells"" works well in React, so starting top-down by building a screen deep down in its module. Then extracting reusable components from that screen to the module components folder. Then promoting common components to the main components folder. Like a hierarchy of ""shells"" or ""layers"" within which a component is relevant. You should aim to only import in a ""single direction"", that is ""up"" to higher layers / shells / directories.

This helps give a consistent mental approach, and it cues people to think about the impacts of their changes - if a component can only affect things below it then it becomes easier to reason about knock on effects, eg. Changing my wizard progress indicator means I need to retest the wizard module. Changing the main button component means retesting *everything*.

Hopefully that makes some sense. Got a bit rambly, sorry.",1530051089.0
mohsintariq10,"I personally use use Ignite a command line tool that structures my code and provides one of the best boilerplate codes, its also comes with all the necessary libraries installed such as vector icons, internationlization lib etc. It not only structures the code for me in dedicated folders such as Components, Containers, Services, Redu, Sagas etc but also provides some cool generator commands .. its very cool you should take a look at it.. ",1530217672.0
ccheever,"It's very unusual that any app would perform better on the simulator than it would on Expo. Expo is running the same react native code that would be run if you eject.

Are you running the JS in Chrome debugging mode? If so, the JS is actually running on your computer and then communicating with your phone, and so that's likely to be the source of the slow framerate.

One thing that might make some difference is if you make sure you are serving your bundle to your phone over LAN rather than tunnel. If you have tunnel turned on, then your computer will communicate via a proxy server in the cloud with your phone so that could be very slow.

",1530038056.0
vfaramond,"Not sure exactly what you mean by ""digital wallet"" but I've built an Ethereum and ERC20 tokens wallet using RN.

Github link: [https://github.com/ELTCOIN/eltwallet](https://github.com/ELTCOIN/eltwallet)

Play Store link: [https://play.google.com/store/apps/details?id=tech.eltcoin.eltwallet](https://play.google.com/store/apps/details?id=tech.eltcoin.eltwallet)

Or signup to get a Testflight invite: [http://eltwallet.eltcoin.tech](http://eltwallet.eltcoin.tech/)",1530032634.0
mobiman1,"Not exactly a digital wallet, but I created an open-source project called Mobimoney. It allows you to scan product QR codes and add items to a shopping cart: https://github.com/mobiman1/mobimoney

I'll just copy/paste the README description here...

*""Mobimoney is an open-source, cross-platform mobile payments project, developed in React Native and utilizing the Expo development tool (XDE). Specifically, Mobimoney provides a Scanner (QR code reader), Product Page, Shopping Cart, and Invoice modal to facilitate payments from mobile devices. Mobimoney currently does not include payment gateway integration or login authorization, both of which are part of the v1.0 roadmap.""*",1530018508.0
notAnotherJSDev,"Cloud9 is an online dev environment. The only thing you have is a command line and the text editor. So, no, you can't unfortunately.",1530014992.0
alien3d,Not related to react-native sir .. ,1530016612.0
thomprycejones,Try setting the elevation and zIndex in the style of the view you want above.,1529978707.0
swiftpolar,Try Stripe,1529975650.0
alien3d,"Stripe,Braintree .Don't use PayPal -> android,ios version depreciated.  No official support from braintree or stripe. ",1530016759.0
czater,"Well, I see a lot of good things in RN but things like importing all needed libs, integrate and setup on both platforms is a super pain :/ That's why I now testing flutter, where core functionality like navigation no need external libs. ",1529993865.0
SizzlerWA,Welcome!,1529948439.0
schjlatah,"I've been doing real native for nearly a decade  (iOS and Android. Was never a web developer).
I haven't yet had that a-ha moment where I begin _liking_ React Native.",1529987050.0
kbcool,"I had a POC working on D3 a while back and I think I used that project as the basis.

The question is: Do you want to use D3? It's got a pretty steep learning curve so unless you're good at it already, have something you can copy or are willing to invest time in it then it might be best steered clear of.

Might want to upload your photo somewhere as well. Could be something you can do in react-native-svg as well maybe?! Or the canvas implementation. There's also a great writeup I can dig up that shows you how to produce literally dozens of shapes out of Views in RN using different styling.",1529932883.0
obkenobi13,"The first step would be to just dive into the basics of a programming language which will give you an understanding how a program works (functions, variables, objects, arrays, etc.). She will just need to get a feel of how a program takes inputs and executes commands that transform that into some sort of output. 

Over time she will need to learn platform-specific tools that will help her create applications (e.g.  html/css/jquery/react/etc for web development, or Xcode/UIKit for iOS development). This is really dependent for which platform she wants to develop apps (iOS vs. Android).

If she really wants to get into mobile development it would be good to already choose a particular platform (Android or iOS) and then learn the required language/tools. For iOS for example Swift Playground is a nice app/program that will get her up to speed with Swift and with time she will learn how to create simple programs with xcode. If she is open towards learning web development then JavaScript is the obvious way to go (freecodecamp or codecademy are good ways to start). React Native is a JS framework that allows you to build apps for both platforms but it will take some until you are at a point to learn such a framework.
",1529922443.0
alien3d,"Don't become a developer , find problem become solver.",1529978163.0
dasitm,"Perfect timing, was just going to start looking into this functionality for an app. Thanks for saving me!",1529913275.0
Unforgiven-wanda,"This is actually quite handy

Thanks for sharing",1529911484.0
raks99832,You saved my life. Was looking to use React-native-sortable-listView in one of my Android project. I am glad I came across this. Tons of thank my friend. ,1529927806.0
3vol,I use react-native-sortable-listview on this project: https://github.com/dereksweet/ComedyCompanion and yeah it can be a bit flakey. Will investigate transitioning to your component sometime soon. Thanks!,1529941028.0
chmpgne,"Nice job, it looks really cool!",1529902095.0
sherwoodfm,Does this flstlist component also support using a grid layout?,1529903615.0
realblackntan,doh!  I just used [react-native-sortable-listview](https://github.com/deanmcpherson/react-native-sortable-listview) :-/,1529936481.0
vuhoanggiang,"Can I have a question?

When I run your example, I see nothing in the screen, but when I inspect element, i see all of it.

Can you explain this bug for me?

Thank and best regard.",1531725678.0
_thawnos,"I tried using this today, but it has issues when using mobx with it, telling me that I shouldn't use 'shouldComponentUpdate'. 

I also had quite the lags when dropping the items in your example app.",1534429386.0
miqle,Thank you so much! I really needed this.,1544212178.0
redpopcornpanda,"You can use npm packages just like any other js app.  If the packages is pure js, react-native can run it, as long as all of the packages also have dependencies that are supported by react-native. Note that you don't have access to some of the node modules which some packages might rely on. You should also be aware the Apple forbids the use of crypto mining in apps, but idk what this library does. The best thing you could do is to just follow the instructions of the package and see what errors come up.",1529895985.0
jacobp100,Give FlatList a try before you write it off. I've found it to be great!,1529863399.0
1Gijs,"Did you have a look at https://github.com/FaridSafi/react-native-gifted-chat ?
",1529872598.0
zlwu,"It's not convincing that the FlatList/RecyclerListView are just ugly hacks. Object reusing and swapping is a very common trick in large list optimization even in native development. If you take a look at Android native development, such kind of tricks are already adopted  . And I agree that the slow js-native bridge make this issue even more serious. But there will never be a silver bullet to solve all problem with a new architecture change, people will still write slow codes even using native code.",1543992159.0
mbrochh,Yes it is possible. Me and my team built three of auch apps already.,1529825026.0
lovemeslowly,"Man i was at that point 4 months ago where you are now. Just saw some of the episodes of Steven's course and youtube. Then i started working on an actual app. I didn't learn. I HAD to learn everything along the way..like i was doing hundreds of Google searches in a day and solving each n everything. Yeah i used a lot of my brain in those 3 months. But after all that i realized man you can only learn by doing. That's it!... now answering your question. Ecommerc app is no difficult in my point. Its just how you handle the state and other things in your app. 
Firebase is  a pretty good option as a backend and its great. But i would prefer learning some server side language for example RoR and node js ,but after you excell in Javascript and RN.
Good luck ",1529839381.0
peanutdronetree,"Start with Expo, you’ll only be writing JavaScript and if you need to write native code you can do a process called “ejecting the app”.

Expo abstracts a lot away and from what it sounds like you should be able to stick with it all the way through.",1529816095.0
russeg,"without writing native code? yes. on non trivial projects you still have to know native tools like xcode/cocopods and android sdk, especially when things go wrong. you can use expo to avoid those things.",1529816343.0
alien3d,ecommerce  never a basic application. It's superb complex business flow. You can search for mstore and link to wordpress/woo-commerce for easy installation.. ,1529817980.0
heinzawhtet,"Just yesterday, i just accepted a ecommerce project to build it entirely on RN.",1529843616.0
CurlyWS,To anyone who has experience doing work like this could you give some case studies? Want to pitch a project like this to a client myself and I want to know the extent of how much works needs to be done + timeframes etc.,1538335180.0
vincethevader,I too want to know the answer to this question ,1529813877.0
nijolas-wilson,"I did it. Didn't even know RN going in.

Edit: Someone said about the mstore template and I second that.",1529835456.0
nathvarun,"People say i'm doing a decent job : https://www.youtube.com/c/unsureprogrammer

:D",1529809675.0
VIM_GT_EMACS,"look up stephen grider's courses on udemy, theyre great",1529774009.0
DLevai94,Spencer Carli (learn.handlebarslabs.com) and Stephen Grinder (udemy) courses IMO. ,1529782107.0
gormand0,"[https://www.udemy.com/mern-stack-front-to-back/](https://www.udemy.com/mern-stack-front-to-back/)

Has great sections on getting started with User Auth w/ an API",1529772296.0
bitpurity,"Is there a way you can make the data into a single object?

```
this.state.items = {
  poster: 'http://something',
  title: 'something'
}
```

Then you can do...
```
const urls = this.state.items.map(item => { url: item.poster, title: item.title });
```

```
<SuperGridSectionList itemDimension={130}
sections={[{ data: urls }]}/>
```

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map shows how map is used.",1529763491.0
Snyggt,"You could do

const items = this.state.posters.map((poster, index) => ({ url: poster, title: this.state.movieTitles[index] })

return <SuperGridSectionList sections={[{data}]} />

Works if you always have an url and a title for a movie and sorted in the order of appearance",1529771666.0
russeg,"if you want custom ui and fancy animations, then go with flutter. it can basically do all native animations at 60fps, and it will look exactly the same on all device. drawbacks? ios widgets needs polish, the dart-pub library not that extensive, and a lot of minor ui issues.

if you know js/react, then react native is the right choice. especially if your project is for ios and you have a mac. the main issue for react native is that it's very ios/mac centric. most of the problem you will encounter is because you are using android/windows.

",1529737727.0
ajinasokan,"You can achieve the native look in react native. If you work hard and optimize your app well you can achieve near native feel and performance in react native.

If you are building a material design app or one with a custom design flutter is a great option. And it has really great performance if you build the app in right way. I would say it can perform better than android native java apps.

We built a react native app but we had to make changes for both platforms. There were lot of Platform.OS switches. Now we are building a flutter app and we haven't written a single switch. It's all because flutter does the rendering all by itself. And there are many other things good about flutter.

May be you should try both and see which one fits for your use case.",1529725227.0
mulvidon,"A question that comes to mind for me is whether Google has greater commitment to the Flutter developer community than Facebook has to the React developer community. I'm new to all this but I read some criticism about Facebook in this regard.

Does anyone here have a sense for this?

It would seem that Google would naturally be more interested in the wider community because it benefits their Android platform to have great apps developed there at the same time as iOS apps. Whereas I get the impression that Facebook developed React for themselves and shared it with the community and so they prioritize issues that affect themselves rather than the community at large.

Like I said, I'm new to this and am asking question, not making a statement.",1529761169.0
IvarBjorn,"I was enjoying flutter, then I had to implement admob plug-in. It is still under development, and I couldn’t implement it as I needed, so I had to go back to react native. That is the only drawback I found until the moment, ",1529882819.0
mulvidon,Google has produced a free 2-week course for Flutter at Udacity. I'll check it out just because it's free -nothing to lose! https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905 ,1530136373.0
Pavle93,Flutter. RN is dead. ,1529713625.0
mbrochh,"AirBnB already had two codebases. They should never have started using RN in the first place.

I start all my apps with RN = only one codebase. All my apps have 100% code share. If something can't be done for both platforms, then I simply don't do it on the other platform. Of course, AirBnB isn't really in a position to make such a decision, but for small startups where money is tight, RN is still by far the best option right now.",1529716307.0
Laboratory_one,React native till there’s a better option,1529716893.0
PaulLaux,I know I'll use it in the future.🔮,1529710467.0
russeg,"hi ccheever. maybe you can ask fb/contributors to stop closing issues? issues should be closed when fixed, not because they are ""stale"". right now there are about 650 issues, but in reality there are probably close to 3,000 real issues, closed by being ""stale"", lack of interest from fb/contributors, or no reason at all. 

nothing wrong with having tons of issues. just recently a bug in mysql reached 13 years, and they are not closing that because it's not fixed.

also why can't react native repo have something like [this](https://github.com/flutter/flutter/milestones)

",1529736522.0
SizzlerWA,"Yes, RN is still a great choice!  And I say that having spent 7+ years building dozens of apps in ObjC used by hundreds of millions of users.  Personally, I would never choose Swift over RN.",1529720501.0
mxmzb,"i like the fact that fud posts at least make people think critically instead of following some hype (talking about the airbnb posts from which this post originated). 
 
And then again, posts like this are the answer and a strong confirmation, that we are on a good path at least, even if not on the right path for each and everyone.",1529753772.0
kbcool,"The formatting makes it quite hard to read but you don't need to call setState and pass in the whole previous state plus what you want to set. Just call setstate with what needs updating. Eg {a: this.state.a + 1}.

Also look at https://reactjs.org/docs/react-component.html#shouldcomponentupdate

if you want to check whether to trigger a render.

Using Expo through CRNA or expo snack? snack is a bit slow so might be your problem.

Overall apart from my first point what you're trying to do should be very quick.",1529707111.0
albertpak,Not really books - but pretty good lessons: [https://learn.handlebarlabs.com/](https://learn.handlebarlabs.com/),1529686035.0
mulvidon,"Can someone provide a ""Navigation for Dummies"" type of explanation of this article? As far as navigation goes, I only have experience designing websites where you simply line up links in a nav bar. It seems navigation in an app is a more complex topic, involving (among other things apparently) something called ""routing."" 

Thanks for any help. All the usual ""I'm a newb"" caveats apply.

And thanks jeevium for the original post.",1529701997.0
Noitidart2,"Cool question, I would also like to see this solution.",1529938344.0
sammypwns,"I would be impressed if this ran at 60fps on Android, but I think this can be done with the [SectionList](https://facebook.github.io/react-native/docs/sectionlist.html) component if you swap out the scrollComponent prop with an Animated.ScrollView and [hook into the onScroll event](https://snack.expo.io/HySw-PtY-). Then you can use Animated.Views for the headers and update their height and content based on the scroll position. You would have to forgo the getItemSize optimization.

I'm not even sure how they accomplished the effect on native android, I don't think the recycler view supports anything like this. On iOS this would require a pretty complex UICollectionViewLayout class.",1529622812.0
russeg,"fb (and contributors) only fixes their own issues, ignoring and closing reported issues on github and ignoring pulls. fb is partly to blame for the mess at airbnb. ",1529589180.0
SepticReVo,"Interesting read. Outside of Airbnb, are there other massive apps built using RN? I know Formidable has used RN for some of their work, but are there other major players in the space?",1529586441.0
NiceBluebird,"> At Airbnb they have 220 screens in React Native, but additionally they have about 880 native screens per platform, which basically means they only have 20% functionality living in React code.

What!?

What does this sentence mean? 

That they have 880 unique screens in the AirBnB app? Doing what? (disclaimer I've never used AirBnB).",1529606015.0
agmcleod,"Yeah i still hate that kind of title. Wasn't funny the first time, had hope they'd gone away. Anyways the article itself though is spot on :)",1529603121.0
SigmaDeltaSoftware,"AirBnb simply outgrew React Native.

RN is fantastic for small to medium sized projects & complexities, but once you cross a certain border of size and/or complexity, you'll notice that the benefits of ""write once"" start being overshadowed by the maintenance necessary to ensure this paradigm. 

I do wonder whether this decision could also lead to companies maybe venturing (or atleast making a PoC) into Flutter?",1529612736.0
FezVrasta,"As far I can see it's just React, it doesn't look like react-native-web",1529566152.0
vaxo101,"Not sure how reliable Builtwith.com is but under ""JavaScript Libraries"" it says ""React"" [See here](https://builtwith.com/?https%3a%2f%2fwww.instagram.com%2f)",1529645313.0
doodirock,Old post/Repost ,1529527114.0
nerdkingcole,"Has this been posted yet?

Is this a reaction to Flutter?",1529523708.0
kbcool,"Best posting your code or a simplified version of it.

Make sure you are removing console logging and generally following release procedures recommended by community ",1529524281.0
digsome,NativeDriver?,1529528451.0
ExtremelyQualified,"Use the onLayout event for each of those items within the scrollview, store the offset along with a reference to the item. Then in the scrollview onScroll event, use the contentOffset to determine the first of the stored item positions that are past the contentOffset (in view). Now you can target that item and change its styles. ",1529505364.0
derGropenfuhrer,(consider Mobx?),1529521573.0
vuudd00,"What I suggest is to not use Redux at all, especially if your app/product will be big.

From my experience, if you are working with react-native the only really good solution is realm. Use realm db and stick with their own sdk for react-native.

If you don't need persistence and you don't want to use realm an other good solution would be to use the new react 16 context api.

Axios != Redux/Observables.

Axios is a library that helps with remote requests and help you to keep them consistent through the whole app. It serialize the response by design and you can even put interceptors to inject custom headers for every call and a lot of more things.So beside the state manager you decide to use I suggest you to manage your api calls with axios.

If you want to jump into the present you can just use GraphQL and Apollo and throw in the trash bin all the redux/ajax shit.",1529584953.0
albertgao,"I personal prefer wrap all Ajax logic in redux middleware. Such that, your action creator will be pure function. See my blog for more detail: http://albertgao.xyz/2017/12/07/how-to-use-redux-middleware-to-decouple-ajax-call/",1529502427.0
dasitm,Wow thanks couldn’t have done it without you,1529486369.0
TheFutureIsNear,"You can test a codepush deploy by using a staging key and pushing to that before promoting the deploy to your production app.

I ended up separating our app into different environments (deveopment, staging, production) that use different codepush keys exactly for this purpose. 

Also codepush does work in the emulator but I think it’s kind of buggy especially if you are using hot reloading so they don’t recommend using it in dev mode. ",1529465322.0
kbcool,"No.

There's a lot more options like xamarin, ionic, flutter, phonegap/cordova. I wouldn't say they are better as such. Depends what you are after.

I'm massively opinionated (love RN) but I wouldn't touch anything webview based like ionic/cordova/phonegap. It's like react native but having to rely on HTML to make things look native - just yuck and slow.",1529441062.0
MarkOSullivan,Facebook is not moving away from React Native. Their devs have confirmed this on Twitter.,1529446491.0
TexMax007,">	We're working on a large-scale rearchitecture of React Native to make the framework more flexible and integrate better with native infrastructure in hybrid JavaScript/native apps.

https://twitter.com/reactjs/status/1007332159164579840?s=21

From the ReactJS Twitter 5 days ago. They wouldn’t invest in this if they were moving away.

Here’s more info in the blog post they linked in the tweet:

https://facebook.github.io/react-native/blog/2018/06/14/state-of-react-native-2018",1529448383.0
RnRau,Long comment thread over at hn on the Airbnb move away from react native - https://news.ycombinator.com/item?id=17348215,1529471010.0
FezVrasta,props => <... /> is an arrow function and also a functional react component ,1529438186.0
derGropenfuhrer,"`screen: props => <Movies {...props} movieType=""Hello This is Initial Screen"" />`

`screen` is a property of Movies. It is a function. It takes in one arg, `props` and returns a chunk of jsx that has a Movies component in it and it passes the `props` arg into that component. ",1529439443.0
Nyquiiist,"Its jus an inline functional component. It looks a bit awkward cuz generally u have it in a seperate file, which u then import, but over here, ur screen component is being declared inline.",1529499967.0
kbcool,"I don't personally have this time based problem in my apps so far but I can imagine when you call the api can you not have a little helper function that trims the really old stuff when new stuff comes in? 

You can dispatch an add action and a trim action at the same time and the reducer can handle the logic of trimming.

",1529436762.0
kbcool,"The question does sound a bit crazy but might just be a lack of knowledge so I won't ride you.

React Native isn't a programming language it's a framework (actually more of an SDK but let's leave that for another conversation). 

So it uses javascript as the language and you can return anything you want from a method in javascript if that's what you're asking. You can even return another method/function (totes meta).

Maybe your question is around the async nature of react native native methods and redux (which isn't actually required) where promises are returned instead of blocking calls. Promises are just a way of saying ""hey, we're going to do your work when we get around to it but here's a ticket with your number and we'll call you when we're done"". Pretty normal in java/c# other languages these days. C won't have them, not out of the box.

If I didn't hit the mark there with my guess feel free to elaborate a bit.",1529433134.0
arborapps,Hasn't FB basically admitted the same thing recently and as a result are rewriting the foundation of RN? We'll see what comes from FB but this really isn't a good sign. The RN community is so fractured already.,1529436755.0
thisisafullsentence,"tl;dr React Native was not able to do everything they wanted, so instead of compromising on capabilities, they mixed React Native and true native development. This caused technical issues (sharing state, complex environments, etc.) and organizational issues (talent pool, debugging unfamiliarity, etc.).

This news hurts because AirBnb added some big cred to React Native and released a few [great open source libraries](https://github.com/react-community/react-native-maps). At the end of the day though, I'd say most projects without the resources of AirBnb can still accomplish a _lot_ with React Native for significantly less effort and cost than 2 native apps.",1529433259.0
kbcool,More conversation on HN if you're interested: https://news.ycombinator.com/item?id=17348215,1529442249.0
schjlatah,"I'm a native Android and iOS developer struggling to learn React Native, because I am \_not\_ a Web Developer.

This is welcome news to me, because it makes me feel less inept. ",1529438545.0
shivawu,"I feel both surprised and naturally when reading the news.

Seems that Airbnb has its own forks of RN, so it should be able to change whatever it wishes to make it work. I think theoretically a lot of mentioned problems are solvable. But that may also reflect that RN the codebase is pretty hard to work with.

On the other hand, I have to say FB is not doing a very good job keeping up the community. Recent releases have been a mess, critical bugs have been ignored/regressed, important libraries are still in an awkward situation (navigation/charting/video players). Even scaling/placing an image is really hard for many cases, especially on Android.

Rather than putting so much efforts in making ""big"" changes, they should hear what the community really want and make them better. It seems that they just played with themselves and expect the community to catch up. I cannot believe they don't have any navigation/video players internally, they just probably don't want to open-source them for whatever reasons.",1529561290.0
forttin,"I shared some same thoughts in [https://www.reddit.com/r/reactnative/comments/8kl1y2/thoughts\_about\_react\_native\_after\_a\_few\_months/](https://www.reddit.com/r/reactnative/comments/8kl1y2/thoughts_about_react_native_after_a_few_months/) . I think RN needs major changes to scale well for big projects: the way you need to keep hacking android/ios projects is something I still don't get use to (upgrading is a pain), the fact that debugging can only happen in Chrome runtime, some essential react-native-foo libraries poorly maintained that should be part of Core instead, the fact that the more you use RN the more native knowledge you have as it's quite a leaky abstraction so you can be tempted to go with native directly at some point if you only need to target one platform... 

I now enjoy working with RN but the learning curve can be tricky in some details and I understand It's not ready for a project like AirBNB.100 engs working in same RN app? Cannot imagine it.",1529496464.0
boon4376,Now I'm even more interested in Flutter / Dart. ,1529463276.0
kbcool,"Without even reading the article I can say I'm not surprised they're ditching it. 

As a user of the app I can say they did a pretty s!&t job of making the most out of RN. I could rewrite what they've done in maybe a day or two and better! 

To be fair they did it two years ago and don't seem to have actually updated it much since so they used a very early version of RN but I would expect better out of the 2nd biggest sales channel of a 50 billion dollar company.

So, again without even reading it because I'm sure it will be full of excuses I will say their reason for abandoning RN is because of internal issues not because of problems with RN.

(Also: I'll read it soon but this is my view based on using their horrid app)",1529432718.0
redpopcornpanda,"You can use the Expo client app for iOS to preview your apps, and you don't need a mac for that. One thing to be aware of is that working with Expo means that you are completely restricted within the Expo ecosystem. If you want to use libraries which include native code, you're out of luck. And this ends up being a lot of libraries, because everything about react native is controlling native views with Javascript. If your app is fetching data from an API and showing it to the user in a list, you wont have a problem, but if you do need to go down a route with libraries that aren't just javascript, you'll need to eject and you'll need access to macOS at that point. For instance, while you could use \`react-navigation\` in Expo, you would not be able to use \`react-native-navigation\` because of its native dependencies. In fact, \`react-native-navigation\`'s main selling point is that is uses native navigation components rather than js. 

The reason that Expo will work through the client app is that react-native points to a javascript bundle which can be loaded at runtime while developing. So once you need something outside of the js world, you might be beyond what Expo can do. (For instance if you use Firebase, \`react-native-firebase\` provides like 10x the features and performance for native apps over the basic javascript SDK, but you wouldn't be able to use it on Expo because of native dependencies.)

I would say that if you have a serious idea for an app that you really want to take super far, it would be beneficial to have a mac because you'd be able to see results much more quickly and have a lot more power with you since it supports both native iOS and Android development (unlike windows). 

HOWEVER, if you are just getting into app development and want to play around with different ideas or make a simple app that you could share with a couple friends without going through the App store, Expo is a pretty awesome tool! If you go to [https://snack.expo.io/](https://snack.expo.io/), you can start playing around with it right now without needing to signup for anything. They even have in-device previews right along side your code!",1529426769.0
grazion,"I believe if you have an actual Iphone, then yes. You should be able to connect phone to your PC (Windows) and run the app through there. Although you might want to consider looking into a cheap mac for down the road, for when you run into issues where  you might need to write dependencies in Obj-C/Swift.",1529432131.0
sesamerox,can't open the link. do you have another one? very interested to see,1529483281.0
burhanyilmaz,Good work :),1529409721.0
kbcool,"There's a billion other projects out there for using imap with node/javascript etc. Maybe try one of the others.

Also saw some half born projects to use it natively with RN around.

Sorry can't help you with that error specifically, just offering alternatives. 

Using node packages usually is ok until you find something that just wraps command line code like image magick or ffmpeg libs for example. Or has bizarre dependency issues like what you've found.",1529412870.0
,"I work on this project:

https://github.com/instructure/instructure-ios",1529374629.0
mobiman1,I've developed a mobile payments project called Mobimoney. You can find the repository here: https://github.com/mobiman1/mobimoney,1529380115.0
redpopcornpanda,"you could theoretically help with, look at, and tinker with the [actual react native codebase ](https://github.com/facebook/react-native)",1529386700.0
Delphicon,The Artsy app is built with React Native and is completely open source. It's only on iOS but it was originally written completely in Objective-C. They successfully migrated it over and they have tons of written and video content explaining how and why they did it.,1530064424.0
burhanyilmaz,"Available on Google Play : [https://play.google.com/store/apps/details?id=com.greener](https://play.google.com/store/apps/details?id=com.greener)

Github: [https://github.com/burhanyilmaz/Greener](https://github.com/burhanyilmaz/Greener)",1529410542.0
mulvidon,Thank you all.,1529414266.0
Buliam,"Hey, 
also check out the projects on madewithreactnative.com 
There are a some open source RN projects on there along with interviews with the developers where they talk about their experience developing with RN.
(I run this site)",1529449993.0
rolph-libtard,"Google GitHub Calypso, massive well documented cms by professionals",1529455017.0
NaveNocab,Congrats!!,1529349769.0
fuck_with_me,"If you publish through their proprietary version of Codepush (basically), the answer is yes. Otherwise the answer is no.",1529337675.0
talor_a,"No, expo runs locally unless you publish to their site. ",1529308062.0
KyleG,You wouldn't. :),1529297708.0
ajinasokan,In our app we have a splash screen where we show a spinner while we load stuff from async storage. Once it is finished we navigate to proper screen based on the stored content. You can also set the component state and in render function switch between different screens.,1529290034.0
AlbinoPeacock_,You can have if statements in your render function. So you would have some placeholder value in your state that would return false and then in the .then() callback of AsyncStorage you would call this.setState() to update that value and your component will re-render,1529321598.0
edric_garran,Just treat AsyncStorage in the same way you would treat remote api calls. ,1529290831.0
__Guillaume,"Here is a simple declarative approach.

* Create a component that takes your storage key as a props
* Use your new component  as a wrapper
* Wrap your UI stuff inside.

&#8203;

    class main extends Component{
    
      render(){
        return(
          <View>
            <AsyncWrapper storageKey='SESSION'>
               <Text>This will be displayed after AsyncStorage grabbed the SESSION data</Text>
            </AsyncWrapper>
    
          </View>
        )
    
      }
    
    }

\~ the same approach than React Data Fetching.

Of course you can do the same with a `state` condition in `render()` and read your stuff in the `componentDidMount()` for example.",1529335495.0
mulvidon,"I am going through a Udemy course where we're using Firebase to handle authentication and to check if the user is logged in. Can someone describe how JWT/AsyncStorage (as written about by OP) relates/compares to Firebase?  

Thanks,
a newb.",1529351089.0
keledx,In my app I’m doing the same thing in a function that runs in the constructor of the first screen.  The response from AsyncStorage is insanely fast.,1529458356.0
Alexintosh,Is the cose open source?,1529672426.0
russeg,"> I'm sorry, currently Laska Editor only supports Google Chrome.For now, would you mind using that browser instead?

",1529287791.0
DrSghe,"What about exporting the project onto a standard, local, rn project? Either I'm missing something from the UI or I've not understood what the editor is for... 🙏",1529306594.0
LEO_TROLLSTOY,Smells like shallow compare issue. What does the PostView look like? Im gonna guess that PostView is not aware of the change in posts prop for some reason.,1529300210.0
dlaynes,"function (data) is not binded to the Controller object (this) , and won’t execute the methods. Well, that’s what I think it’s happening.",1529274797.0
Manishalexin,"You can use switch navigator with one stack navigator and other tab navigator. On successful login you can switch to the tab navigator and your nav stack will have nothing from the previous logic stack navigator. Whatever is your default in tab navigator will be the last in that stack after login.  Depending on your use case, you can use nested stack navigator for each tabs inside tab navigator.",1529259644.0
cryptixcoder,Thanks for the post! I was looking for a good resource on using custom icons in React Native.,1529244699.0
Noitidart2,/u/wcandillon - Anyway to set default font across whole app? Without having to create a custom `<MyText>` component?,1529255363.0
NaveNocab,"More info: this is bridging over ARKit data from Objective-C and filtering only the nessecary facial features (pretty efficient) granted it's on an iPhone X :| . To do the gallery I have a FlatList with ScrollViews containing Images, this worked very well. Unfortunately the trickiest part was just doing all the zooming/panning stuff as it isn't documented very well. Definitely could use a component with a zoomLevel/focalPoint prop. The gallery method isn't cross-platform because Android ScrollViews don't support this kind of zooming & multi-directional panning. The stream of me in the corner is done in a cool way. The texture from EXGL is saved into memory and referenced as a number, you can then assign that to a THREE.Texture() and it's also pretty efficient. 

Disclaimer: I put this AR PR together, and I maintain expo-three which is a library for using three.js in RN. AR is a pretty big lib so if you do use it and find a mistake please open an issue or let me know <3 ",1529223700.0
Noitidart2,Way cool. Thanks for sharing. Gives me some game ideas.,1529225429.0
,"No, I don’t 😂",1529243247.0
darkwata01,Thanks for sharing!,1529254327.0
Buliam,"Hey, 
you can find some more apps on http://madewithreactnative.com
Some of the interviews I have on the site are big companies using React Native in production.",1529450205.0
H4x0,"I use React Native as a part of my work, in my experience it works fairly well for most things. I don’t understand what this Wiki is for, but I use this toolkit in a corporate environment on a daily basis. I’m absolutely sure that it’s used in many more places than what is publicly advertised, like any other toolkit.",1529222141.0
cloudprogrammer,check out madewithreactnative.com ,1529223001.0
hhunaid,Can people list their own apps there?,1529218337.0
redpopcornpanda,"Redux is effectively a big js object storing all of your state data in the object. It does not persist or cache by itself and so your state won't be written to async storage. But you can use something like [redux-persist](https://github.com/rt2zz/redux-persist) to do so. It basically serializes the Redux store (big js object) to async storage so that when the app closes, your state is saved to the mobile device's persistent storage. It then reads your state back out of async storage and ""rehydrates"" your store with the previously saved state when the app opens up again.",1529204425.0
littlecodebites,"As *redpopcompanda* was saying the Redux store is basically a big javascript object, this object is **in memory**. If you refresh your page, this state is usually lost (unless you are using something to persist it).",1529205947.0
chickenachos,"It's not persisted, there are redux libs to persist to localstorage though",1529202176.0
dasitm,"Don’t. Even if you can. 

Don’t. ",1529181478.0
RockMeetHardPlaces,DIAF,1529180465.0
ChronSyn,"It would be possible via a WebView, but Apple will be refusing crypto mining apps from the store.

As others also said, don't.",1529183325.0
ubermc,"This is old source but:
https://securitywatch.pcmag.com/mobile-security/325365-it-takes-14-million-android-phones-to-earn-one-bitcoin

Apparently ads are more profitable. and highly more ethical lol.",1529394703.0
kbcool,"Is this a joke? Please tell me it is.

You have to use app registry to get the most basic of hello world's going.

    import { AppRegistry } from 'react-native';

If that's not working your environment is broken. Your app is not going to run.

You're not trying to do this any place weird like in an Expo Snack or something are you? It likely won't be available there to protect the Expo app.

",1529255409.0
AJ12AY,"Just wondering, what exactly are you trying to do lol ",1529298800.0
cloudcity,nice video!,1529175727.0
kbcool,"React navigator leaves tabs mounted when you move off them so I'm not surprised.

https://facebook.github.io/react-native/docs/view.html#onlayout

onLayout may do what you want but otherwise I'm not sure. React native navigation is always a PITA.",1529176909.0
brentvatne,use \`withNavigationFocus\` HOC and unmount camera when you switch away from the screen that has it,1529179403.0
TexMax007,"I created an Expo project myself using the code you provided above and it works fine for me.

1) You shouldn't be using componentWillMount. Use componentDidMount instead [see docs](https://reactjs.org/docs/react-component.html#unsafe_componentwillmount)

2) Is your phone iOS or Android? Mine is an iPhone X and it worked. I don't have an Android to test it on.

3) My screen is black if I have it on the table lol. Have you tried tapping the 'flip' button? Does the 'flip' button even render or is it just completely black?

4) Try adding some logging in your app to see what the permission status is and what's what.",1529180650.0
kbcool,"You probably need to be a bit more descriptive of what you're trying to achieve or you'll get crickets.

It is possible to do anything in RN but a lot of functionality requires native modules. i.e. it's not in the base RN or its docs.

If you want your app to be a share target I haven't tried this one but it's on the list just in case I need to add share targets to an app:

https://github.com/alinz/react-native-share-extension",1529143848.0
,[deleted],1529093507.0
DakshHub,"SO is great, but it's extremely bitter to newbies. Most of the experienced programmers treat themselves as elites and didn't bother to put you down for any question which they deemed as stupid. This has no doubt helped SO to maintain its decorum, but I personally didn't likethis attitude of programmers supremacy or the cute factor.

 In contrast, reddit is sober and accommodating, and if you're asking a simple question, maybe it's a good idea to try editing first. Also, audit is much more open to provide global links to tutorials and answers as compared to SO",1529124837.0
lovemeslowly,r/rails ...never seen so mature and helping community before,1529124655.0
saugoof,"Does the query work when you run it from a command line front-end? I've not looked at the query in detail, but I would suspect the error is with the SQL query itself.",1529061028.0
kbcool,"I always use react-native init from the RN CLI npm package.

It is a bit out of date now (Android: creates gradle files from the dark ages) but creates your ios and android projects for you.

CRNA won't let you use native functionality without ejecting. Main limitation. Apart from that, not much to be said.

Ignite creates a lot of boilerplate for you. I've got that sorted now I'm experienced. For someone new to RN I think it's overwhelming, for someone experienced see previous. So who else wants it? I wouldn't recommend it for those reasons.",1529009299.0
glacierdweller,"React Native Web: Implementing the React Native API (components such as View, Text, ActiivtyIndicator) with components that render to DOM using div's, span's and css. You write your React Native views and then the build tool (webpack) removes references to React Native and injects references to React Native Web and produces a javascript bundle that you can include in your HTML.

React Native DOM: Provides the DOM as an alternative rendering target for React Native. You write your React Native application and then the React Native build tool builds your app binary for iOS, Android and web. The web binary is composed of your javascript that runs in a webworker, the React Native layout code (yoga) that is compiled to webassembly, and the entire React Native API that runs in the main JS thread and is rendered as Web Components in the DOM.

React Native DOM is way more experimental than React Native Web, and actually the twitter mobile website is written in React Native Web.",1529007034.0
-registeredLurker-,">We're working on a large-scale rearchitecture of React Native to make the framework more flexible and integrate better with native infrastructure in hybrid JavaScript/native apps.

In the article, they mention three major internal changes:

1. Changing the threading model. It will be possible to call synchronously into JavaScript on any thread for high priority updates while still keeping low-priority work off the main thread to maintain responsiveness.
2. Incorporating async rendering.
3. Simplifying the bridge between native and JavaScript.",1529004313.0
maiam,I have really enjoyed my experience with React Native so far. I think its awesome to see Facebook double down on investing in the framework. Looking forward to the future!!,1529009861.0
Noitidart2,"I like this. Specifically because it promises direct native to js (sync). And the promise of native navigation and more native components. I'm going to keep using RN, it never gave me any major problems.",1529009458.0
boon4376,"As someone who is nearing completion of their react webapp (I love my server-side rendered react / redux / react-router / firebase stack) and will soon (in the next 2-3 months) begin porting to android / ios, this blog post made me feel like now is not a great time to be digging into react native because it will be fundamentally changing a lot, and that maybe its current architecture is difficult and archaic?

I have been looking closely at using flutter and dart. I'm not an expert on comparing the architectures, but it appears to have already solved the challenges that React Native is just starting to address with their re-architecture?

Thoughts?",1529063807.0
idreamincolour,Good news. I built a small RN app and some of the described issues like lack of RecyclerView really kept me on native android. Look forward to re-evaluating.,1529006637.0
russeg,"ah the js bridge, the bane of react native.",1529030826.0
Mistredo,Will it still use a web view for bridging?,1529084923.0
DakshHub,Good..some of the proposed rethinking were long due,1529033841.0
kbcool,Would this not be better as a website that can be accessed from the phone? You can then use Flask or Django on python instead of going down the RN rabbit warren.,1529008009.0
Dimasdanz,"If I understand correctly, you have one kind of user, that can upload a csv files and input some parameters for a process that happen in Python and see the process output.

I don't know how you can utilize firebase, what I do know is you need a client-server type of application. Client, written in RN, sends request to a server, written in Python, and response with a result.

Here's some pointers,  
1. Make the server side before even think about the client part. A server application that can receive an HTTP request and send a response, which known as an API. Preferably in JSON format. You might wanna read RESTful API. Don't read it up too much thou, just have a grasp what an API is.

2. Before writing client app. Make sure that your server application works. I suggest you use postman to mimic your client app sending a request to said server app.

3. Now after the server app can handle the request, write the client app. You mentioned something about axios, that is just a library that handles http request to and response from the server app.

all of the above can be done locally by installing python as the server on your machine and run the react app on a virtual device.",1529006262.0
kbcool,"Don't set a width on the View and it won't cut the text off.

It's only showing one marker because you've only placed one. If you're trying to create a lot of them you can generate them from a for loop or a map inside a function and call that function on render. Eg

                    function mymarkers(data) {
                        return data.map( coord => 
                            <Marker coordinates={coord} />
                        )
                    }


                    render() {
                        return (
                            <MapView>
                            {mymarkers()}
                            </MapView>
                        )
                    }
",1528970172.0
7cf2db5ec261a0fa27a5,"I've said it here before, but I would recommend against Graphcool, unless it is for a small pet project. I'm not sure it is production ready yet. I personally had issues with it that went unaddressed. I'd stick with AppSync, which you can integrate with Apollo client. Or do your own!",1528983380.0
IminPeru,"Firebase is pretty good and has a ton of features, we've used it in hackathon projects and it doesn't take too long to get set up. ",1528986474.0
SolidR53,"**Graphcool**

I have used it a lot, the management UI is nice, the tooling is great, they have functions support so there is no limitation to what you can do. I had beta access with more features so maybe that's something to consider too.

If you don't need SQL relational database, choose firebase. If you want more infrastructure tools like routing, lambda, ec2, etc. choose AppSync for better integration with hooks.


**AppSync**

I tried it with some graphcool experience and to be honest in terms of platform flexibility I didn't see that much of a difference other than the UI sucks, like most of the AWS tools.

**Firebase**

This is my goto library and honestly I always include it by default in my apps for all their other tools like Ads, Analytics, Crash/Performance monitoring, Push Notifications and Authentication.

The database is a NoSQL type so if you don't need any models and relations this is pretty good. I highly recommend the Firestore which is the v2 of the Database. It has more sql-like features.

**Prisma**

Haven't tried it yet, but I guess it has most of not all features other platforms have (and more).


---

Questions you need to ask yourself:

-	Do I need live data?
-	Do I need structured relational models?
-	Do I need good online UI for quick access to manage data to the store?
-	Do I want all-in-one service like Firebase with a single dependency or do I want to cherry-pick?
-	What can I afford to pay?
-	Do I need reliability, backup option and support?
-	Do I need good documentation?

Let us know what you end up doing!

Here is my starter kit with firebase pre bundled: https://github.com/ueno-llc/react-native-starter",1529376427.0
ahartzog,"Have you set your scheme to release mode in Xcode and run it there? Does the app launch?

The app closing when launched means an error is being hit. One solution would be to an external error reporting tool that logs it (such as sentry)",1528944132.0
fuck_with_me,"What the hell is a hardening sprint? Fucking agile man.

Anyways it sounds like you built an app exclusively via Expo with a simulator, and you have a bug on launch that is only present on physical devices. It's pretty common. This probably has nothing to do with TestFlight. Debug via a real device and logging system of choice.",1529003160.0
Quaddepo,If anyone wanna help me and want some logs I'm more than happy to share everything! but didn't want to spam the post :),1528928407.0
ahahah515153203206,You can use AWS Lambda and just have a function that converts the PDF. Easy to use and the free tier is good.,1528932737.0
tj_shex,"React Native's [WebView](https://facebook.github.io/react-native/docs/webview.html) will display PDFs in iOS if that is any use?

I have an app that uses [react\-native\-pdf](https://www.npmjs.com/package/react-native-pdf) on Android and a WebView on iOS. The package has issues on iOS, and the Android WebView doesn't support PDFs, so this seemed like the best way to do it.",1528969941.0
kbcool,"You're trying to convert individual pages of a PDF to JPG/PNG not the other way around right?

Otherwise it is supported by this native implementation it seems:

https://github.com/Anyline/react-native-image-to-pdf

What you could do is use a pdf viewer and hide it off screen (position: absolute, left: -10000) then use this puppy to snapshot the view

https://github.com/gre/react-native-view-shot

Just not sure how you make it change pages programatically but it's a sound theoretical solution.

Otherwise you're going to have to go native. 

The javascript bridge makes working with images in react native itself a PITA. Even on a fast phone taking a photo then passing that across the bridge into javascript and back into another component can take a couple of seconds and chew up memory big time.

That being said I am not going to recommend this: https://mozilla.github.io/pdf.js/ but it's there if you want to make life hard for yourself :) Combine it with the canvas implementation",1528985398.0
peterlarsson1,"You can convert PDF pages into JPG or PNG.

Try:

[https://www.altoconvertpdftopng.com/](https://www.altoconvertpdftopng.com/)

or

[https://www.altoconvertpdftojpg.com/](https://www.altoconvertpdftojpg.com/)",1531830732.0
aulgrad26,"Interesting converter.  I'll take it to the note.  I think I'll use it offline.  But when there is a podkjusenie to the Internet, I'm used to pdf to word (www.onlineocr.net) .  Very fast intuitive interface) So far I have not let him down ",1539007368.0
whatsthadeal,"Let’s say you have a PDF and you really need it to be a jpeg, in the PDF editor of your choice go to file and “save as” and choose jpeg.

Maybe you just want part of the PDF to be an image. You’ve found the perfect graph for your report on the airspeed velocity of an unladen sparrow, unfortunately it’s in a PDF and you can’t seem to right click and save the image in order to plop it in your report.

No worries, there are actually a few easy ways to life images out of PDFs.

**Screen grab the image**

Most PC’s come with[ the Snipping Tool](https://support.microsoft.com/en-us/help/13776/windows-use-snipping-tool-to-capture-screenshots) and you can download a screen grabber tool like [Snip for Macs](https://itunes.apple.com/us/app/snip/id512505421?mt=12). These tools all works basically the same, you select the tool and you can either take a full screenshot or choose to select the area you want to capture. Cross hairs will take over your cursor and you can click and drag to select your screenshot.

**Or you can use these keyboard shortcuts for taking screenshots on a Mac**

1. COMMAND+SHIFT+3 saves an image of the full-screen to the desktop
2. COMMAND+SHIFT+4 allows for taking a snip of a specific area of the screen to the Desktop. When the cursor changes to a cross hairs, click and drag a box around the section you want to capture and release the mouse to save to the desktop.

**Web Applications For Extracting Images from PDFs**

Taking a screen grab is only one way to pull images from a PDF. There are a collection of web-based tools that will also do the job.

* [ExtractPDF](https://www.extractpdf.com/): a clean, easy-to-use interface, makes for quick and easy photo extraction from a PDF. Doesn’t give you the option to choose what file format you get, but the results look pretty good.
* [PDFaid](http://www.pdfaid.com/ExtractImages.aspx): This page has so many ads you can’t tell what’s the app and what’s an ad. But it does the trick with just a couple clicks and you can choose what find of file you want.

BTW, I found all of this  info on JotForm’s website. They put together a great [guide](https://www.jotform.com/edit-pdf/) to editing PDF documents. It’s really helpful. Lots of great info.",1539592258.0
markbasco619,"My dream PDF converter is [PDFfiller: PDF Text Editor and Converter](https://itunes.apple.com/us/app/pdffiller-edit-and-esign-pdfs/id571613512?mt=8)

&#x200B;",1541423524.0
,"Do you want to get a job or become a professor in CS? Just get colt steel and rob percival's web dev courses on udemy, and start. you can do node and react/React native after, and then start sending applications. ",1528923450.0
akie,Is it worth it?,1528914351.0
SolidR53,"Or just man up and use react-native-navigation!

*or woman up if you prefer*",1529376754.0
,"    import React from 'react';
    import {TouchableOpacity} from 'react-native';
    import YourAmazingIcon from 'penis-icons';


    class MyCheckBox extends React.Component  {
    
    state= {
      checked: false
    }
    
    switchState = () => {
       this.setState(prevState => { checked: !prevState.checked });
    }

    render() {
      return <TouchableOpacity onPress={this.switchState} 
         style={{
               height: 20,   
               width: 20,   
               backgroundColor: this.state.checked ? 'red' : 'green'   
               borderRadius: 10,
               borderWidth: 0.2,
               borderColor: this.state.checked ? 'red' : 'green'           
    }}>
         <YourAmazingIcon name={this.state.checked ? 'cross' : 'checkmark'}/>
    </TouchableOpacity>;
    }
    }",1528913785.0
kbcool,"Get a faster computer!

Seriously.....why does it take so long to compile if you're only changing javascript? Shouldn't need to even be compiling if you're doing that.

If you're not then you're changing java. I think my 2017 MBP takes all of half a second to recompile a changed class. It does take maybe 5 seconds in all to recompile and deploy to a physical device but unless I'm trying to debug something by changing a teeny bit everytime then it's not much of a pain.",1528909007.0
mazzaaaaa,"I did work on two apps that use BLE (mainly with beacons). 

If you are editing the native code then yes, you must restart the metro bundler and recompile the app.

Any other specific question?",1528925036.0
AcidShAwk,"I've been developing professionally for over 15 years. Been doing RN for a year and a half full time. I work from home out of Toronto, Canada. I get contacted by recruiters almost every other day. I simply state, it comes right down to the numbers, I won't take less than $150k. ",1528906772.0
throwdemawaaay,"So you want someone local, you're reluctant to pay market rate, and it's pretty clear you have a chip on your shoulder about delegating authority in combination with responsibility. There's no particularly nice way to say this, but you check every box on ""this client will be a huge PITA"". There are absolutely qualified people that can do what you want, be they remote or in FL. If you're not attracting them you need to address what you're offering, and in particular consider the non monetary portions as well.  


You can hire a team member or a contractor. You need to know which you're after and act accordingly. Hiring a team member while demonstrating you're unprepared to trust them with delegation is a non starter. Hiring a contractor without a well defined scope and deliverable is a non starter.",1528953382.0
FezVrasta,"LOL we are in 2018, whole companies work in a completely decentralized way. I work remotely for a San Francisco company and I'm one of the most productive members of my team. Just get the right infrastructure in place to handle remote workers.",1528903615.0
kbcool,"React Native is very fashionable so it's going to attract a lot of newbies. It's also touted as low barrier to entry which it is for a very simple app. Ramps up quickly from there.

Good talent in the past tended to levitate towards NY/Silicon valley for the states and the big tech centres elsewhere. Today it's  about lifestyle so there's a lot of people who work remote (including myself).

$150k in the states would not be uncommon for a mid/senior in more remote areas. Over $200k in silicon valley.

I like to work with customers who know what they want but not how to get there. ie designs and functionality mainly sorted so I can go for days without talking to the client then show them a build or just an update on progress. Usually very little questions are asked.


If you're going to be the backend developer and managing the person and hire someone senior with good react native experience then don't try and micromanage them. They already know what's best so let them take the lead on their part.

If you don't even have designs or functionality sorted you're going to waste a lot of time regardless of whether someone's in house or not. 

Get them sorted, stub out your backend at the same time and you'll have all you need to get any good programmer local or remote on their way.

You can also tier it to an extent if you're organised. Simplified example:

1) Get screen designs done
2) RN developer can develop non-functional app with some basic nav
3) While 2 is happening refine what is meant to happen - how to get between screens (it probably should be done at 1 but you could be documenting it here)
4) Get your backend done or stubbed
5) Hook up your previously dummied up screens into backend

Also during the downtime the RN developer could be doing framework functionality like social auth, sharing, getting camera integration working, payments, whatever else you know your app will need. 

There's a surprisingly large amount you can do on an app just by knowing the premise of what it is - ""Eg Uber for Pillows"". This already tells me I'll need maps, payment processing etc so if you hired me it would only take me a single conversation to load up on a good percentage of knowledge needed to deliver the app.",1528904023.0
anubgek,"I understand the concern as in-person development works better especially at this stage where things are moving rapidly and changes are bound to occur, but honestly like you said, South Florida is going to be a tough market to find someone in.

You'll likely have to settle for someone who is remote, but I think you could at least find someone in the same time zone who's maybe willing to keep up a video conference or high availability via one of the chatting platforms. I don't think you need to completely outsource the solution at this point but you will need to invest more in setting up communication and task tracking tools to get it done.",1528904211.0
russeg,I bet you are going to get lot of private messages from indians :-),1528969612.0
SizzlerWA,"$150k is average or low for senior talent, even at a startup.  In Seattle or SF, senior talent is going to earn $300k-$400k (at FB or Google) ...",1528946112.0
kbcool,"Why not try Expo Snack you can write apps with your browser and run them on your phone.

I'm not sure about Cloud 9 but it sounds like a massive hassle.
",1528904321.0
antonsidorenko,"Please make sure that you're running you're React application on proper port (it should be 8080 for AWS Cloud9 to be able to preview it)

There was similar question on SO about it
https://stackoverflow.com/questions/49136221/how-do-i-set-up-aws-cloud9-to-run-an-existing-javascript-app-with-webpack-dev-se/49146470#49146470",1529069308.0
kbcool,"Wasn't this submitted a while back? I remember writing a similar response.

RN supports percent width/heights now so it's old info. 

Also it's not a good idea to make everything fit to percentages, especially text. I don't want my text showing up ginormous on my iphone X. I want more info on the page!

You should make use of flex instead and keep text to DIP sizes so you can do things like have longer lists to make better use of that extra real estate.

Not saying the article doesn't have noble intentions and isn't a good source of info but it's outdated and can be misleading. Given all that you might have a legitimate reason for following it so have a read.

",1528898540.0
antoniovd,"Hi guys, in this blogpost I share how we compared various options and why we decided to go for React Native. Might be insightful how a Product Owner looks at the various options. If you have any questions AMA! :)",1528896874.0
CodaSiren,Cool to see how this worked for your company! Did you find another Senior React Native dev?,1528898380.0
kbcool,Wrong sub. Try /r/reactjs,1528894576.0
careseite,"The documentation.


Seriously, your question is pointless as nobody knows your current skills and experience and it's a very generic question. ",1528879187.0
abby_cohen_221,"I've been following this full stack React Native tutorial: https://www.turbo360.co/tutorial/react-native---instagram

It's good because it include the backend also.",1528883953.0
saugoof,"It is a very generic question, so the answer has to be quite generic too. Look at lots of examples, there are tonnes of sample apps with source code on the web. Find out what React Native can do, how it does things, etc. Build a couple of sample apps yourself, just to simple things like querying and displaying some JSON data, switch between screens, and so on.

Then, like with any project, make sure you have a VERY clear idea of what you want to do and start planning.",1528883823.0
Bamboo_the_plant,"Don't walk before you can run:

* No Redux

* No navigation library

* TypeScript only if you can handle it

* Maybe start with an Expo project",1529080040.0
danhardman,Have you added the [withCredentials](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials) flag to your http client?,1528871739.0
danhardman,"What’s the response of the preflight request? You should see two requests being sent, preflight and the actual request",1528873449.0
NFTrot,"Related to the question, is there anything anyone could think of that would cause problems from cookies being set from different domains and included in the same request? I think this may be part of the problem but I'm not certain.",1528874406.0
rusido,Use localstorage instead of cookies.,1528871309.0
21twelveinteractive,How to develop an extensive React Native Application? Get the detailed guide to Develop React native apps here. ,1528829069.0
dominicdigital,"Congrats on making this, but your very transparent double-posting/commenting on this account ( /u/9danidaniel ) and your other one ( /u/ford_pin3s ) makes me suspicious. I'm also not sure where you're coming up with the ""#4 top trending"" claim...

My advice:

- Be more honest on here

- Ensure your app doesn't ask for permissions that you don't need

- FYI in the screenshot, the text should read ""Looks like your list is empty. Add some stuff to your to do list.""

Good luck!

Edit: they've now deleted the comments where they pretended to be people who had ""discovered"" the app, so my original comment looks a bit harsher",1528853195.0
IrvineADCarry,"Top 4 trending is WordPress app itself, though...",1528861031.0
9danidaniel,[https://play.google.com/store/apps/details?id=com.busyapp](https://play.google.com/store/apps/details?id=com.busyapp),1528829148.0
seriousPsycho,Well Done !! May I use some of your expertise ...A beginner here :),1528833333.0
Eunoia_R,"*""Open to location beyond Chicago, but great opportunity with right timing on something big/impactful.""*   


Does that mean you are open to remote work?",1528827185.0
kbcool,What's the error? Does it crash? This question is best on stackoverflow but they'll ask you to provide more details.,1528817733.0
marksymoo,"Haven’t used it myself, but could you use appcenter to do the iOS build / deployment?",1528817040.0
LordRaiders,"Looks good. Maybe you can do an app boarding instead of the default items in the agenda.

I think it makes it more user friendly and you start of with an empty agenda. Talking about an empty agenda, you have a big white space now when there are no items. Maybe you can add a small text to tell the user that there is nothing.",1528818621.0
hiveWorker,"Looks great, I love seeing how other people might organize themselves. Downloading now",1528837318.0
mm0mbr,I have a WIP readme on my fork,1528838396.0
,"Working with react-native is very similar to ReactJS.  You still use props and state and even Redux, but its not as simple as just changing the file extension.  Instead of a <div>, you have something called <View> and there are other minor differences.  I don't know what Jade is either, but a direct conversion of your website to an app will require some work.  Also, iOS is starting to get picky about what they let in their app store so you might have to do something original to pass the submission to Apple.",1528775952.0
samokoro,I recon you can write an algorithm and just pass all your old code into an engine. It’s what I did while working for a startup back in 2017,1528904637.0
,[deleted],1528769113.0
kbcool,"Why an SDK?

Most of the print on demand services have an API. You just point it to an image you've uploaded somewhere and bam!

",1528795552.0
kbcool,"If it uses native it needs to be ejected. No way around this.

Not sure about using admob outside of RN but I would say to get the native experience you need the native parts. Your other choice would be the web api in a webview which would not be great.",1528795718.0
,Great! I wonder what it will break 😬,1528754237.0
alien3d,"Seem they still use old version  23 :( ..  

https://github.com/facebook/react-native/blob/v0.56.0-rc/ReactAndroid/build.gradle .

Reference problem 

https://github.com/facebook/react-native/issues/18095",1528787053.0
alien3d,"Yes, i'm awaiting for a long time.Hope they settle issue of gradle require last 1 sdk from the latest sdk.  ",1528769247.0
russeg,"ah good to know. release notes probably all about facebook/contributors own problems, and nothing about fixing any from github issues or accepting pulls.",1528781391.0
alien3d,Tag been updated https://github.com/facebook/react-native/tree/v0.56.0-rc . But my visual studio code still detect 0.55.4 the latest . ,1528865836.0
alien3d,"Update news... 

http://www.reactnative.com/react-native-july-2018-v0-56-0-released/amp/",1529109338.0
dadinodog,"Looks cool, nice work!",1528720086.0
cloudprogrammer,"Looks amazing, great work ",1528722292.0
MooseRacer,"Very cool. A few feature suggestions:
1) Filtering on components/containers/files/etc that have no dependencies/dependences, to quickly eliminate unused and unneeded files

2) Different colors for lines for dependenders/dependees rather than just dots (or the option for this)

3) this one is more complex, but a way to balance the essential tree you have, from least to most dependers/dependees, on a scale of some form. Would be great to isolate

Amazing work, ours looks absolutely insane, but we do have a pretty darn big app.

If you have any pointers on how to use this or things to look out for, that would be great :)

+1 star on github",1528873564.0
puneet_mahendra27,"When you say ethereum start up,  What are you guys actually doing? And what skills in a developer are you looking for?",1528685365.0
ThomasSandberg,"Since you developed in React Native, why didn't you also make it available on Android?",1528620032.0
berlihm,"Thanks for sharing. I’ll check it out. I’m just about to start my first RN app and I’m very excited about it. Do you have any advice or tips? Authentication, database choice, etc. Good luck with it.",1528624421.0
ridhwandaud,What stack do you use for backend? Mind to share?,1528629020.0
SizzlerWA,How did you go about licensing all the video content from YouTube?,1528659770.0
heo5981,"Will you be releasing to Android, too?",1528645907.0
7cf2db5ec261a0fa27a5,"I tried to do this myself, but also couldn't find a way to make it work this way. tabBarVisible is not a valid option for stack navigator, only for tab navigator. 


I believe the answer is that if you don't want to display the tab bar on certain screens, it should not be a part of the tab bar. You can nest your tab navigator in a stack navigator, and attach the screens you don't want to be displayed inside the stack navigator component. ",1528563087.0
piggy2303,Same here :)),1528563790.0
brentvatne,hello! did you read this section of the docs? [https://reactnavigation.org/docs/en/navigation\-options\-resolution.html#a\-tab\-navigator\-contains\-a\-stack\-and\-you\-want\-to\-hide\-the\-tab\-bar\-on\-specific\-screens](https://reactnavigation.org/docs/en/navigation-options-resolution.html#a-tab-navigator-contains-a-stack-and-you-want-to-hide-the-tab-bar-on-specific-screens),1528570028.0
,[deleted],1528579916.0
augustin1989,Thanks guys! I finally figured it out.,1528596590.0
7cf2db5ec261a0fa27a5,"Hey there. My opinions on your questions:

1.) I would go with CRNA, or Ignite. Setting it up manually can be a pain. CRNA I believe has Expo built right in which makes getting started so much easier. 

2.) From my own personal experience, graph.cool seems like it is a bit too buggy to recommend. For example, when I tried it couldn't edit JSON fields in the DB. Support was no help either. But I would definitely recommend checking out GraphQL/Apollo. 

3.) JWT is probably your best bet. You can store it in Redux and/or Async Storage, and then pass it through in middleware. Apollo makes this super easy if you are going the GraphQL route.

4.) Not sure about this one. I saw a post a few days ago with someone having issues. But I have personally not upgraded.",1528560833.0
maiam,"1. I did not find the manual setup very hard at all (and I did both iOS and Android). I had set up an app through expo and could not figure out the proper ejection process so I went back and created an app manually and found that easier .  

2. I am using express and Mongo DB just like I would for any web app.   

3. I did the Facebook login setup and while it was at moments a pain in the ass, I got it all working and its nice. I am thinking about using Firebase for normal email sign up since its so easy .  

4. I would not. There are going to bugs on iOS 12 for swift devs let alone the JS/RN crew. I am currently on HighSierra and using Xcode 9.4 and things are good .  

Good luck! I personally love RN and have enjoyed it so far. Definitely more hoops to jump through then the web but getting a native app running on the device with JS is pretty sweet. ",1528600382.0
tiefox,"I recommend ignite boilerplate, it is awesome, specially the alpha one with mobx state tree",1528566334.0
redpopcornpanda,"I'd recommend firebase to handle auth and database stuff. It works really well, has great documentation, is easy to use, and is free for (most likely) your uses. Having integrated social auth is very nice. 

I'd go with something other the crna. Maybe boilerplate, but maybe just from scratch. I can almost guarantee you'll want to add packages that require you to eject. And if you ever intend to build production versions for the app stores (even for just TestFlight or android beta track), you'll most likely need to eject then as well. So I'd start by having it already ejected at the beginning. 

Unless you're interested in being a beta tester for Apple, I'd stay away from the betas. The point is for you to catch bugs that the average user wouldn't want to see, so you'd have to have a mindset of being willing to face the challenges of a beta and being willing to provide feedback. I could see that really easily getting in the way of my productivity without providing any benefit.",1528601606.0
Sprokes,Those kind of questions pops up every time and are not even related to React Native. The answer is always it depends on what are you are doing. Start trying and finds out what is suited for your project. Some thing that worked for me doesn't mean it will work for you. ,1528560961.0
kbcool,You forgot the video,1528537877.0
kbcool,"Nice! Keep up the good work with RN support for MapBox.

It's won me over vs say Google Maps. Might be working on a big project using it soon (not the AR bit though).",1528478351.0
saghul,"Hi there! We (Jitsi) have been using [strophe](https://github.com/strophe/strophejs) with RN for quite some time now. It's not for RN per se, but it will work just fine.

You will need to polyfill a couple of things, see here: [https://github.com/jitsi/jitsi\-meet/blob/master/react/features/base/lib\-jitsi\-meet/native/polyfills\-browser.js](https://github.com/jitsi/jitsi-meet/blob/master/react/features/base/lib-jitsi-meet/native/polyfills-browser.js) (not everything is needed for Strophe, just check what's listed as required by it).

Good luck with your project!

Edit: added link to strophe.js",1528474725.0
kbcool,"Android? iOS? Both?

You are trying to copy a directory btw. You have a trailing slash.

I haven't used that package but a quick look at the docs suggests it does not have support for recursion so you likely need to write that yourself. If you were moving a dir that would be different.",1528454232.0
deeghagalkissa,"use a real device i would say, For me it is very consistent where i am using a read device for testing. ",1528446465.0
kbcool,"Never had a problem. Although I use a single key and write atomically and synchronous (basically that means i wait until last write is done).

A lot of people go nuts and use keys like they're toys. They also don't realise it's async storage so may end up firing multiple writes at once and wondering why they end up with an earlier version on next read. Order is not guaranteed.

Both of the above lead to problems. A real phone might be faster than the emulator but it's going to exhibit the same bug sooner or later.",1528454510.0
,"Is there a way to debug it? My React Native Debugger only displays localStorage. (Without console.logging it asynchronously, that is)",1528447830.0
Noitidart2,Are you on an android in dev mode? This is a known issue - https://github.com/rt2zz/redux-persist/issues/784,1528461869.0
Palk0,"I don't have a use for it now, but its clean and I like that!",1528565139.0
Noitidart2,Screenshots on the app store are not clear.,1528461900.0
kbcool,"So is it written in RN or are you just spamming links ?

Also it's so minimal it doesn't even install on my android.",1528454668.0
etregoning,So it seems all I had to do was move the `navigate` method into the request permissions function. Not sure why I didn't think of that before!,1528415013.0
sestrago,"Maybe you can have a button that changes some flag in the state, and based on that flag you render the camera or other stuff.

**Another solution**, and maybe the one that will be more useful, is to introduce navigation to your app with [react\-navigation](https://reactnavigation.org/docs/en/getting-started.html). You should have a route that renders the camera page, and in your main screen, a button that navigates to that route.",1528429748.0
anater,In my experience this is true up to a point but eventually you’ll need functionality not provided by RN and have to rely on a successful Google for some npm package or your ability to drop down into Swift/Objective-C/Kontlin/Java.,1528414520.0
kdesign,"Afaik, React Native cannot display things out of the application canvas on its own. I’m afraid you’ll need some native development and bridge it so you can use it within a RN app.
Could be some plugins for that but if there are, I’m pretty sure that they’re more native code rather than JS/React.",1528376568.0
danielacrrza,I really need this ,1535978337.0
isakdev,https://blog.reactnativecoach.com/creating-facebook-chat-head-bubbles-in-react-native-bdbbe338bb99,1528370726.0
megabeano,"Source Code here: https://github.com/madelfino/MemoryGame

I recently went through a React Native course on Udemy and this is the first app I made using it.",1528354266.0
Meowish,"Take a look at [Expo Client, Snack & XDE](https://expo.io/tools)",1528354614.0
deadcoder0904,https://medium.com/react-native-training/ditching-setstate-for-mobx-766c165e4578,1528342595.0
tiefox,"I have been playing with the ignite bowser bootstrap, it is base on mobx state tree which is a very opinionated, but i have been enjoying it...",1528346093.0
youssefsami,Would appreciate some feedback on the style of this tutorial. Thanks! :D,1528327033.0
FarishKash,I wouldn't expect React Native to be compatible with beta releases of iOS so quickly.  Might be a while until you can do this.  The good news is that you can still build for iOS 11.4 on MacOS beta.,1528311540.0
ckorhonen,Not so far. What kind of compilation issues are you seeing?,1528309614.0
douglowder,What version of RN is this?,1528330414.0
douglowder,"Since you are using a beta version of Xcode, you may need to run

`sudo xcode-select -s /Applications/Xcode-beta.app/`",1528356437.0
NiceBluebird,"Does `25@vs` mean that it's 25px (or 25dp?) and it gets scaled by 2x on hdpi or 3x on xxhdpi or some such?

Or does it mean 25% of screen width/height?",1528310151.0
Dested,"I like it! I dont love the ""stringly typed"" syntax for some of the options (eg. $blue, @vs) but conceptually I think its a step in the direction.",1528312736.0
deadcoder0904,"Use it already. By the time you complete the app, it will be out of Beta to v1. AFAIK Beta v6 is last one & then v1 will be out soon.

Didn't used it in Production but it works :)

Also, the previous version has Form's & this beta doesn't so I changed it twice but I do think you should use the Beta one because it will have frequent updates than v0.19 :)",1528307181.0
vicmpen,"aaah, seems there is a post for this: https://www.reddit.com/r/reactnative/comments/8nht13/why_has_56_been_delayed/",1528286499.0
redpopcornpanda,Here's the github issue tracking the release: [https://github.com/react\-native\-community/react\-native\-releases/issues/14](https://github.com/react-native-community/react-native-releases/issues/14),1528307285.0
Noitidart2,I updated my answer with a link to following along with status updates on .56 - https://www.reddit.com/r/reactnative/comments/8nht13/why_has_56_been_delayed/dzvxf1q/,1528575796.0
kbcool,Nice. Let us know if you get view saving working on Android. Seems it's not possible due to GL being done at the HW acceleration level or something.,1528276903.0
abhrp,"You can achieve this using reactrootview which is a separate class which extends ViewGroup and UIView on Android and iOS respectively. You can add it as a subview on both the platforms and initialize a react native app inside the view using the ReactInstanceManager on Android and just the bundle url on iOS.

 
For building the app you will have to make minor changes in the build process by changing the local-cli scripts in the react native node module to look for your android and iOS repo instead of the android and ios folders inside the same react native project folder. Your folder structure can be 

-android
-ios
-react native
--build scripts which target your android and ios folders.

For running ios you can just run the run-ios command with the project-path option like below,
react-native run-ios --project-path=../ios/app

For running android, you'll need to make a few changes in the react native cli scripts,
react-native run-android --root=../ --appFolder=app --main-activity=activity.MainActivity --androidFolder=android

Look for the runAndroid.js script in the local-cli/runAndroid folder inside the react-native node_modules folder. 
You will need to change that script to add options like root, appFolder, androidFolder to specify where your root directory is, the appFolder (eg. app), and androidFolder for specifying the name of your android project folder.",1528286293.0
swiftpolar,"So with no sample, no screen shots or anything of that sort, how do we know if your UI will look any good?

I'm all for great looking UI and whatnot. No disrespect to you but whatever you're talking is just empty speak as you have nothing to show for.

I'm quite sure you're trying to test this market to get signups. You have to convince better though. People usually give a sample of what is to come. This is especially important if you're doing something that is mostly visual.",1528251872.0
russeg,"> I haven't seen a React Native starter kit or template that looks good

because it's subjective. i can guarantee you whatever good looking starter kit you make, someone else will say it looks bad.",1528278054.0
blbil,Why do you need my email? A simple blog would suffice wouldn't it?,1528259342.0
,"I just use Grid, Row, Col from native-base (the rest of it sucks) and style however my designer wants me to.. Already created header, body, footer components with craploads of props that I can customize and use in every project.  I agree, react-native UI world is lacking. ",1528273047.0
webrangeriit,I think this is the future 🚀,1528246808.0
Zeadus_,"You can just create a const named jsonTest or whatever with the data you want.  
const jsonTest = {...}            
and then on the componentWillMount () make a this.setState({data: this.jsonTest})   
  
If you want to use an external file you can create a js file that has a  ""export const jsonTest = {}"" and import it on this component  
import jsonTest from './jsonfile.js'",1528246478.0
Takeiitaway,The world does not need any more social networks.,1528246360.0
,"You are spamming the wrong sub with your medium spam article. This is REACT NATIVE, not React.js. ",1528272933.0
VinniitheOddfather,MERN stack is where it's at!,1528266598.0
3vol,"I would have to see exactly how PostContainer is being used within the render of your main app. Render is triggered when the state of the component changes, either through this.setState({}) or through something like redux. I don't see anything above actually changing the state of the component, so you would have to be modifying the state of whatever is rendering PostContainer. If nothing in your responder modifies the state of your main app then the chain of renders will never be triggered. Does that make sense?",1528216214.0
russeg,I use https://callstack.github.io/react-native-paper/,1528287748.0
DasBeasto,"Really like the Masonry and the SnapCarousel, been looking for those components thanks!",1528287926.0
kbcool,"You could break your native code into node modules and install them from your private repo. Or just one big one. That's probably along the lines of your thinking.

Or into podfiles for ios. Not really an equivalent for iOS that I know of.

Disclaimer: haven't tried any of these but throwing out ideas.",1528220556.0
Bamboo_the_plant,"I install them as node modules from my private BitBucket git repo. I don't know how react-native-link works internally, so I just link it manually, mind.",1528241079.0
kbcool,"No. 

You can upgrade your SDK target version and minimum versions in your project if you want but just because a native module needs another version doesn't mean it won't work in your project.

What you can have trouble with is Dex and different individual API versions but come back when you have that problem :)",1528220724.0
kbcool,"Which variety of SQL server? MS?

Unless it supports HTTP(S) style connections or web sockets it's going to be a pain in the rear end. You'll have to find something native that does sockets.

How about a GraphQL wrapper? There's some almost ""works out of the box"" implementations. Off the top of my head at least Postgres.

As you mentioned it's not a good idea in the first place and you may end up wasting more time trying to get it working rather than just wrapping up the SQL server in an API.",1528203836.0
lefooey,"You could start here, but I’m not sure that you’re not headed down a rabbit hole. Better to wrap the SQL server with a nice robust API. 

https://github.com/tediousjs/node-mssql",1528436131.0
ibluestone3,"Please keep posting these, they're great! :)",1528211030.0
maiam,holy shit how did i just discover your youtube channel?! Awesome work!,1528215003.0
gaearon,"Fabric is a codename for an ongoing large-scale rearchitecture of React Native to make it more flexible and integrate better with native infrastructure in hybrid JavaScript/native apps. 

We just blogged about it: http://facebook.github.io/react-native/blog/2018/06/14/state-of-react-native-2018.html#architecture

Please note “Fabric” itself is just a codename. In the end it will just be React Native.

Also note that, as explained in the post, the rewrite mostly has to do with the internal architecture, and the existing React Native apps will continue to work with little to no changes.",1529003366.0
kbcool,"Doubt this will help but something similar asked last week.

https://www.reddit.com/r/reactnative/comments/8np89n/what_is_this_fabric_thing_in_reactnative/",1528190440.0
marcus5914,"If i remember currently, Facebook hired the creator of infernojs to write Fabric in React. Fabric is most probably the core part of new react. I read this info years ago. ",1528203318.0
djxfade,"The iOS SDK and the iOS toolchain is not available for Windows.

You could write parts of the app in Windows. But wouldn’t be able to build it without the SDK and toolchain",1528157344.0
anewidentity,"If you use [snack.io](https://snack.io) you can use the browser to make react native apps. You don't need a mac. But that limits you to Expo and react\-native, but not 3rd party libraries. ",1528170588.0
,"You can't use Apple software like Xcode since it only works on Macs.  Then there are ""native"" features you don't have access to if you are limited to using the Expo app and Windows.  For example, something like npm React Native Camera won't work so you can't take pictures unless you use Expo's camera API, which is quite clunky.  Its terrible if you want to build something with a lot of features.",1528182753.0
ccheever,"hi-

we work on the expo project because it drives us crazy that its such an arduous process to build and distribute mobile apps, and we want to make that easier and better and solve problems for developers.

to the extent it feels like you get locked into a way of doing things when you use expo stuff, i think that stems from two things:
(1) we only have so many people and we're trying to do a ton of things at once, and sometimes the easiest way to do something well builds off of other stuff we've done.
(2) it can make for a nice experience when a lot of what you're using is coherently integrated.

that said, we've learned a lot about where developers want flexibility and the ability to pull stuff out and use it on their own, and so we're doing that. we also go to pretty great lengths to make sure you aren't locked into using expo and can move off it if you want, because we are developers and wouldn't want to use something that would trap us either.

hope that's helpful.

charlie (from the expo team)",1528152725.0
jesse_expo,"Hi! I work at Expo. We're actually working on a big project right now to make a lot of our modules work outside of Expo. We'll slowly separate modules into separate repos that work either in Expo or raw React Native.

>my question about usage without Expo was shutdown with a terrible excuse about it being too hard after me pointing out the few places that needed changing

Our modules are open source so if you think it's trivial to run them outside of Expo you have all the code necessary to do that. We don't have the bandwidth to support two implementations of our modules but you are welcome to maintain an Expo\-free fork of them. And like I said above, we're actively working on separating our modules out so they work in Expo and raw React Native contexts.

> Who are they and what is their agenda?

[https://docs.expo.io/versions/latest/introduction/faq](https://docs.expo.io/versions/latest/introduction/faq)

[https://hashnode.com/ama/with\-exponent\-ciw1qxry118wl4353o9kxaowl](https://hashnode.com/ama/with-exponent-ciw1qxry118wl4353o9kxaowl) \(linked from that FAQ page\)

> If I were completely paranoid I could imagine \(no I can see it, because it's possible\) them inserting WTF they like into your app.

You can download a standalone app and decompile the APK and look at the JS bundle that it loads. If you're that worried about it you can detach and compile the app yourself and disable OTA updates.",1528153078.0
ARMATAV,"You can always use react\-native init and dodge Expo, but the reality is that startups succeed because people want their products, and Expo succeeds because people want to use it instead of the general initialization and deployment process, probably because it's a lot easier/faster.",1528154434.0
kbcool,"Hey Charlie....thanks for replying.

Good to hear what gets you up in the morning. 

My question is more about the organisation itself. It's clearly not a loose collection of individuals - non profit? commercial? etc? I know it's all very meta but just like the future of RN itself it's valid.

Just on lock in: Don't agree entirely with you as that has been my bugbear all along. This forum is full of crack (expo) heads trying to wean themselves off their addiction. Anyway bit dramatic but we can agree to disagree. I'm posting because I have the shits about an unnamed Expo lib issue being replied to with sorry just use Expo. It really opened up the question of what is Expo for me and I have not many answers so far.
",1528153431.0
kbcool,"What is the point of content marketing for a company that is offering you RN developers in a forum for RN developers? 

The article is basic at best. If i wanted to hire someone from appnroll.com and thought the devs there only were at this level I would pass. 

If appnroll.com is so short on devs then PM me and offer $2000-$3000 USD a day and I'll give you an experienced dev. 


Soz about rant but this forum is full of really, really bad content marketing with no point. Most of it has just got me worked up.",1528151402.0
TiffanyHoran,I didn't write this one but I really like it so I wanted to share it here!,1528137907.0
kbcool,"Quick get in before the downvoting and flaming commences.

Personally I prefer these postings to the constant stream of ""hello world"" articles.

Not sure if you're a recruiter trying to shade who your client is but a bit about them might help. Even a link. Make it less like you're dropping a giant 💩on the group.",1528137196.0
kbcool,"It's all good with AWS until you dig into the detail then it get unnecessary complicated as Amazon have designed everything to use yet another AWS product to work. Before you know it something you were sold as being point and click turns out to be a week's worth of painful work and you realise that instead of it being 5c per 10,000 whatevers it's suddenly 10x that because you're now using S3, Cognito, Lex, Cloud front, Log store, API gateway, yada yada yada when all you wanted to do was send a push notification!

That being said I continue to use them because I have no respect for myself or my employers.",1528129641.0
NiceBluebird,Do you have to have a `username` for users with AWS cognito?,1528146833.0
whiteman_can_jump,You can send messages from the web browser back to the react native component via onMessage/postMessage. [Check this article out](https://medium.com/capriza-engineering/communicating-between-react-native-and-the-webview-ac14b8b8b91a) . Maybe have paypal redirect back to a page you’re hosting that just sends the webview some sort of “success” message which can then trigger the app to go back to whatever screen you want (dismiss modal if thats how you are showing the webview).  Hope this helps!,1528112711.0
das3ingg,Does anyone have experience with this? Is it true that an Apollo crashes the app if there's a gql error? I can't seem to find a github issue,1528214564.0
alien3d,Good luck sir.  ,1528086903.0
swiftpolar,Remote or on site?,1528092107.0
ridhwandaud,"Stack use - firebase, redux, redux-persist, react-native-elements, react-navigation 

Also use https://github.com/mmazzarolo/react-native-login-animation-example ( as animation login template )

Any comment/feedbacks ?",1528077864.0
Noitidart2,Very nice job!! Keep it up. You should try learning how to upload to iOS store. That's another big step.,1528109447.0
gavrocheBxN,"As you navigate in a stack on an iOS app, the previous screens never gets unloaded. You can test it by going in any iOS app that has a stack navigator, the Settings app is a good example. As you go in the stack, you can see the previous screen animate to the left and even part of it like the item you pressed, become active. When you go back to that screen, that screen is still the way it was, the scroll position is where it was, the highlighted item is the same, etc. This means the screen does not get unloaded, it stays there and can even be updated. You can test that the screens gets updated on native app in the music app, go into the ""For me tab"" look at the recently played, press on any playlist to go into it's screen, wait 1-2 seconds and go back, the ""For me"" screen will have updated the recently listened playlists.",1528054053.0
more_pineapples,There is [Made With React Native](http://madewithreactnative.com/) that showcases RN apps along with a Q&A from the app's developer.,1528037559.0
MiLeungSF,"[Progress](https://progress.mileung.com/)

*disclaimer: I made it - feel free to ask questions!",1528102444.0
aforty,"Dish is one. No not Dish Network. 

https://itunes.apple.com/us/app/dish-the-visual-menu/id1183015907?mt=8",1528047759.0
DovidBobson,I'm not a fan of NativeBase and from what I can tell their motivation is to use it to promote their dev shop.,1528082320.0
deftonechromosome,Take a look at this one. Not on android yet though. At the end of the day it’s just a video streamer/music player though. https://itunes.apple.com/app/io-music-play-stream/id1270236268?mt=8,1528047974.0
kbcool,"I wouldn't include ""looking native"" on both platforms as my main objective when creating a cross platform app.

I've got some apps under my sleeve that look and feel great but aren't on the stores or I can't link to for contract purposes but none of them feel exactly 100% android or iOS and that's not what you want anyway. Not as a devleoper. It means a lot more work as the native feel of both platforms is vastly different.

I feel what I've done is good enough for either platform so go for it!",1528056359.0
NaveNocab,"Here are some of my games on Github, I've only included the ones that apple has approved (app/play store links in readmes)
* [Pillar Valley](https://github.com/EvanBacon/Expo-Pillar-Valley)
* [Nitro Roll](https://github.com/EvanBacon/Expo-Nitro-Roll)
* [Sunset Cyberspace](https://github.com/EvanBacon/Sunset-Cyberspace)

They also have some medium articles that explain some of the features, and how I implemented them.  
I'm currently working on some micro-transaction driven examples/apps, seems like that's what's on most RNvestigators (you can downvote now) minds right now. 🧐

**EDIT:**
Forgot to mention, these are all JavaScript cross-platform apps with no custom code or native modules.",1528256222.0
mrdhood,[https://twitter.com/sandofsky/status/1003104331833532416](https://twitter.com/sandofsky/status/1003104331833532416) After getting shut down by someone that actually knows.. it seems like he switched to just fishing.,1527997487.0
dduko,"one thing for sure, FB devs abandoned Github issues :-)",1528052798.0
agmcleod,"For a company who's main interface is an application on mobile, they can afford the extra cost for native devs, and probably should. The main benefit of react native is that it gives companies who can't afford the costs of building two native apps to still be able to launch on iOS & Android.",1527990096.0
albertgao,"Already heard from several facebook staff, this is not true, even more, they adopt react native in their main facebook app. One whole Tab is developed by React native. So, fake news.",1528162825.0
iceporter,no fb even have a major overhaul for react native architecture,1529296684.0
kbcool,Panic!,1528016258.0
,"To do UI well you need to know what you want the end goal to be.

You don't need a react native tutorial on UI, you need to go and read about actual UI, find things you like, and design a UI.

Once you have that you can try and implement it and come back with questions that are more focused, but saying 'how do I make a ui' is like saying 'how do I make an API'. Its a long open ended question with far too many mediocre answers and no good one.

You need to know what you want. Designers make good UI's, developers  just implement them. You can be both, but you need your designer hat on for this one! ",1528015827.0
radix27,You need to look at available UI frameworks which gives you ready to use pluggable components for a better looking ui. One example is “react native paper”. It provides material looking UI and has a pretty good documentation. Good luck and have fun! :D,1528026259.0
rodrigoelp,"You have react native elements and react native material design.

That gives you enough to get an app to look online with other standard apps (at least with basic controls). You need to sort your basic layout first which no framework will do for you but react native has lots of other components for this",1527990116.0
Perfect_Crayon,"Go read [Google's Material Design docs](https://material.io/design/introduction/#principles) and see why they do what they're doing. That's one of the few publicly available design documents. They also have some information around animation.

To be clear, UI goal should always to make an interface that is as intuitive to use as possible. The aesthetics should assist in that by cueing hierarchy and importance, etc. But the whole goal of UI is to help the user accomplish what they're attempting. I guess what I'm trying to say is to put yourself in your user's shoes and think about what they might want. Work from there.

edit: publicly",1528045295.0
rodrigoelp,"But as far as I know different frameworks (iOS, Android, xamarin) no one gives you something to build beautiful apps out of the box, you need to work with the designers to generate sledging amazing",1528007305.0
boki345, This would be great if there was an answer to this question. Can we upvote to increase the chance of this question being answered? ,1527990093.0
ogv11,"I know what you mean. I can make functional apps, but not pretty ones. I end up leaving that part to a designer.",1527989798.0
kbcool,"Yes.

Have you tried Googling?",1528137331.0
cesarm16,ahaha y sabe react-native?,1528061468.0
thatrademasta,Can you upload your entire project to github or to a .zip? Then I can help you out! ,1527971192.0
rsiqueira93,Great introduction.... awaiting for the next video.,1527949429.0
Reggie3,Great video. I look forward to the next one.,1527954865.0
massaray,"I just used the web sdk. It’s not as performant, but it works for just getting something working.",1527928257.0
chrisbianca,"If you need phone auth then you’ll have to go with react-native-firebase as the web SDK’s implementation doesn’t work on React Native.

We’ve built react-native-firebase as a drop in replacement for the web SDK, so once you’ve done the initial setup you should be able to just switch over and it just work",1528176104.0
ahahah515153203206,There are React Native channels in the Reactflux server btw,1527898183.0
ogv11,I really enjoyed this reading. Thank you ,1527896261.0
fuck_with_me,"Assuming you're planning on creating a Node/Express API, I'd recommend using JWTs with PassportJs. There are many nice Express utils to make this entire process possible in less than a day's work.",1527843357.0
gaearon,"Fabric is a codename for an ongoing large-scale rearchitecture of React Native to make it more flexible and integrate better with native infrastructure in hybrid JavaScript/native apps.

We just blogged about it: http://facebook.github.io/react-native/blog/2018/06/14/state-of-react-native-2018.html#architecture

Please note “Fabric” itself is just a codename. In the end it will just be React Native.

Also note that, as explained in the post, the rewrite mostly has to do with the internal architecture, and the existing React Native apps will continue to work with little to no changes.",1529003406.0
yungsters,"React Fabric is an internal project we started on earlier this year. We are not quite ready to share details, but we definitely will as soon as it’s actually meaningful for the community.",1528041304.0
,[deleted],1527828789.0
spaceghost0r,https://get.fabric.io/,1527840972.0
alien3d,"Oops   at first i think fabric.io.. hmm not ..  maybe fabricjs and sample like this 
https://github.com/iddan/react-native-canvas

fabric.io 

Crashlytic.  Google abandon their firebase crash. And it not perfect either. E.g usage  https://gist.github.com/idcmsbeta/170dba3b6be98def018f3d26789bb469",1527851222.0
kbcool,"https://github.com/react-community/react-native-maps

Has everything you need I believe. Anything you can't do directly with it you can interact with the APIs and pass the data pretty much verbatim into the marker component for example.

Only problem is...it's bloody slow. I believe this is because of the SDKs it wraps itself but it's going to make your app run like a dog on older phones.",1527842959.0
nitinsh99,"I would suggest taking this course on udemy :
https://www.udemy.com/the-complete-react-native-and-redux-course/

The instructor goes in really deep to explain nuisances and gotchas of jsx and react native styliing. Helped me understand when to use what.",1527814190.0
icekeymon,"Are you sure it's styling you need help with or design? \(like app design\). For me, I can write CSS pretty well but I can't design anything that looks good.",1527842123.0
r9s,Use UI library like https://github.com/xotahal/react-native-material-ui,1527857646.0
anonymousmouse2,"Functionally this is pretty slick, good stuff and a great write up!

But as a full time UX & Product designer... don’t do this in your app. It’s a terrible UX practice. If your app is so confusing that you need a walkthrough to explain it then you need to work on making your application more usable and discoverable. 

https://www.iridize.com/blog/problems-with-interactive-walkthrough-guidance-systems/",1527809852.0
PistolPlay,Awesome! This will make my apps seem that much more professional.,1527804590.0
OGCompulsor,"However cool this might be to have in your (React-Native) application, I do agree with @anonymousmouse2. If your application needs a walkthrough before a user can actually use it correctly, it's just too complicated and confusing. 

UX-wise it is always better to make your application as easy as possible to understand for your end users. This does however not mean that it is a cool library though ;-) ",1527846733.0
Sir_hennihau,I'll definitely try it :),1527850850.0
taptapkaboom,"I agree with @anonymousmouse2, but I think for new features and hidden features it could be cool. I'll give it a go sometime.",1527854279.0
kbcool,"T.R.I.G.O.N.O.M.E.T.R.Y

https://en.wikipedia.org/wiki/Unit_circle

Calculate the offsets in x,y units then use either absolute positioning or margins to push the buttons out relative to your center.

Maybe you'll be lucky enough to have someone on here who's bored enough to do it for you but the math would be the same as for any rotary layout for any programming language/framework.",1527785805.0
Noitidart2,Apparently their tests arent going green. I have been wanting to upgrade for awhile. Especially because .54 and .55 have this issue with hot reload not always working. You can follow along with their release updates on .56 here - https://github.com/react-native-community/react-native-releases/issues/15#issuecomment-394191418,1527782800.0
coffee-n-code,.55 Has been really bad as well.  This issue has been blocking the project I'm working on: https://github.com/facebook/react-native/issues/19126,1527804544.0
boomdoodle,I recently upgraded a project all the way from 0.47 and 0.55.4 is looking good. ,1527778560.0
liquid_penguins,".53 still seems the most stable one so far, so good call staying there for now. ",1527780133.0
Noitidart2,"I don't get how to play. I select a word. But I can't draw. After count down nothing happens.

UI is awesome though.",1527748327.0
butnotexactly,so cute! and good marketing style :),1527749814.0
terekokiya,\>maymays,1527766786.0
kbcool,"You might want to step back a bit and explain what you're trying to achieve not what you've tried so far.

PanResponder isn't a visual element so people are probably confused by your question.

If you just want a header that goes away when you scroll down then you can add it to the top of a scrollview or you could get fancy and use animations to fade out or roll up a separate title element. Unlimited options but best to express your desired outcome and the community can work backwards from there.",1527786690.0
redpopcornpanda,What is the rest of the code for that file? It looks like it might be how you are using it inside the react component.,1527730840.0
OGCompulsor,"@Archa3opt3ryx assuming this is for React-Native (since we're on that subreddit), why not opt for  [react-native-firebase](https://github.com/invertase/react-native-firebase)? 
It's easy to implement, has great a great open-source community (and [Discord](https://discordapp.com/invite/C9aK28N)!) where they constantly want to help people with their problems!
Personally I advise to use this library! :) If you decide to do so, don't hesitate to contact me if you're struggling with something.",1527847468.0
Seffah999,@ **Archa3opt3ryx.**  How did you downgrade to a previous version. ,1528458632.0
Fossage,Great tips! Lots of really useful stuff here.,1527690257.0
kbcool,"Nice shopping list of tips.


My thoughts/criticisms:

3.1 I wouldn't advise doing this without a) having a bloody good reason and b) backing everything up first. Most packages with Android dependencies still use gradle 2 as does react-native init. Tread carefully if you're not comfortable with gradle.

That doesn't mean skip 3.2. Very important as Google are rejecting pre API level 26 targets soon.

3.3 I'm pretty sure this isn't necessary if you opt in for repackaging on google play. Can't remember where I saw this though so you can ignore me safely. 

4 is well out of date - just make a folder called assets and require() files from there. Next time you compile they'll be sucked into the appropriate places. Much less hassle.

I'd add one thing that is massively important is to learn react component lifecycle and how it applies to RN. Don't assume it's the same as normal react. Memorise this document:

https://reactjs.org/docs/react-component.html

Also state, props and global state apis like redux, mobx, etc become more important in RN than ever.

",1527690790.0
mazzaaaaa,Some really nice tips. Thanks for sharing.,1527710646.0
sesamerox,"thanks for the share, so much useful in there!",1527765349.0
kbcool,"Best answer is - it depends on your circumstances.

Search this sub reddit though. IIRC someone asked this previously and the answers were good.",1527689701.0
carljet,https://stackoverflow.com/questions/50596115/how-can-i-achieve-this-layout-using-sectionlist-in-react-native,1527652445.0
bane_rista,"[Google Cloud Vision](https://cloud.google.com/vision/docs/ocr) has a rest api thats awesome. Way better than tesseract. Not free, but decently affordable.",1527658890.0
kbcool,"Tesseract is pretty bad for this day and age even if you could get it working across both.

https://ocr.space/

Free! It uses MS OCR underneath which is actually very very good. Unless GCV has caught up in the last year it's better than GCV.",1527689839.0
realripley00,"Without seeing exactly what you’re trying to do with that action, that is pretty much how I’ve done this type of thing. The main difference is that I usually add the action in mapDispatchToProps and use this.props.whateverfunction(). Most functions if there is a lot going on, or if something is supposed to change on the screen, I’ll make an external function and pass the relevant parameters and then call the action (and handle any state changes, etc) in that function and then call that with the onPress.

In short, I don’t see anything wrong with how you’re doing this, especially if it’s working.",1527639155.0
JStheoriginal,"Normally we would always make an arrow function for the onPress like this:

onItemPress = ({ item }) => { do something with item };

And then in your FlatList you just pass the arrow function to onPress and it automatically passes the item through. No need for any binds.

FlatList
  ...
  onPress={this.onItemPress}
 ... />

Note that you are just passing the function and not calling it. FlatList will call your passed function when it should and will pass an object into it that contains the item (which in the example above I’ve destructured, which could also be done like ... = (item) =>... and then to access the item you’d have to do item.item to access it.",1527648516.0
black_jesus_42,I think you’ll need a web backend,1527633297.0
ScabusaurusRex,"Ugh, replied to post, not comment.

What you need isn't a react native solution.  It's a back-end that responds to requests and does the lifting.",1527637801.0
cYzzie,"Some services like sendgrid come with an api that would allow to send emails from within react easily, still,at scale a middleware is nearly always necessary for queing, handling bounces etc. 

So the bulk answer to your question has absoolutely nothing to do with react",1527641912.0
cgomezmendez,"Wrong subreddit, this is work for your backend. react native only would do an api call and that's it.",1527646602.0
dharm_adharm,It would be good if you do these things from backend. There is one popular service called mailgun which you can utilize to automate that.  ,1527648303.0
nitinsh99,"I was in same situation couple of months ago when I started writing a new RN app from scratch. I took following approach:

1. Took a pen and paper and drew out a very basic flow of the application.
2. Once I had a rough idea of the app flow, I looked around to find a good navigation library. I felt react\-navigation is the way to go so I started exploring it a bit.
3. Once I got a hold of how react navigation works. I drove straight into writing code. My code base have following herarchy :

`src`

`-- Components`

`---components-for-screen-a`

`---components-for-screen-b`

`-- Screens`

`---screen-a`

`----index.js`

`----styles.js`

`---screen-b`

`----index.js`

`----styles.js`

4. I didn't write all the components from scratch since I neither had much expertise nor time. So I looked around for some good ui component libraries for RN. Found UI\-kitten ,  Native\-base and manterial\-ui. Finalized on native\-base

5. As I was writing my app..I wrote all the screens and components and displayed the dummy data inside them. No networking or wiring up with the actual rest API

6. Finally, as I approached to the completion of the whole mock app along from end to end flow, I replaced the mock data with the actual data from wire.

Note;

The last step required me to re\-do some of the view implementation but having written all my app , I was very clear in my head on what I wanted to do. Hope it helps.",1527630108.0
,"It depends on the developer.

How would you do it with a Web app?

I prefer building UI first.. Not for any technical reason, but because that's what I feel makes the app feel more complete and like I've achieved more. This keeps me more motivated.

Once the skeleton UI for an area is done, I will then add animations etc.

Next I will add the javascript for retrieving data (however you are doing that).
For me that means building my API with a mocked up set of data.

Then I continue in this pattern.

In between I add tests, for different parts (I'm using mocked data, best time for tests).

Once I'm happy that there is a working part of the app I.e. I have built registering and logging in UI, a complete feature, I will build the actual code in the API to save this.

Again, the reason I do things like this is to get the app done in smaller chunks to keep me motivated, and to see a result on screen.
It also has the benefit that you know what you need in the API for each different section. Trying to do just the API first is going to end up with too many or too few methods.

You can also develop in line with user stories like logging in, registering, adding things etc. Each part becomes it's own contained feature that is done in one chunk. Much easier to manage. ",1527629730.0
notjonathanfrakes,This is just an ad for his Udemy course.,1527630579.0
stillscattin,lol wrong sub i think,1527609674.0
tampontowerviewer,My native reaction ,1527612946.0
w32virus,Lol another nice youtube tutorial,1527619843.0
watermelon12,get this shit tf out of here,1527621065.0
key_value_map,Interesting. Thanks.,1527604735.0
herjin,Application secrets should be stored as an env variable and not tracked in version control. This article could be further simplified by removing redux from the equation. It’s unnecessary complexity. ,1527601717.0
kbcool,"You need to provide more info. I'm not fully understanding the problem.

Not sure what store is referring to for example. 

State as in this.state and this.setState for react components is only in existence as long as the component is mounted. So if your navigation unmounts the component (I'm guessing its' react-navigation based on the syntax) then when you come back it's going to reset back to it's default state.

If you need global state then look at something like redux/mobx or even something as simple as having your own variables for state. Doesn't have to be fancy. Eg you can just import state from './state' and state.js can contain 

var mystate = {};
export default state

I'm sure someone will go mental at me for suggesting such heresy but it's not rocket science so doesn't need to be too complicated. ",1527592900.0
saugoof,"React Native really is the most insanely brittle environment I've ever worked with. I'm not sure if this helps, unfortunately with react native a million different issues can have the same effect. 

Is there anything showing in logcat? You should at least see an untrapped exception somewhere.",1527573941.0
coffee-n-code,"I've debugged issues like this by using this command

    adb logcat ""*:E""

It only displays logs of type Error.  Let us know if that helps.
Also, most Android crashes occur because of a NativeModule that you integrated, more than likely one upgraded and may have changes in some way.",1527602083.0
kevelbreh,Have you changed the device you are testing your application on? Some higher API's warrant specific permissions to be granted etc. Just another possibility. ,1527574086.0
demoran,"I'm glad to hear you got this fixed.  

There are a couple of things I'd advise you to do to prevent this kind of thing from happening in the future, and android brittleness in general:

1. Use [Nebula Dependency Lock](https://github.com/nebula-plugins/gradle-dependency-lock-plugin) to lock in gradle deps.  If you've been using react native for any amount of time, you've likely run into the unmitigated joy of having gradle automagically use the latest version of some dependency that isn't compatible with your other stuff and it all just breaks, often at runtime.
1. Instead of using `^` when yarning packages in, just use specific versions.  While much less likely than the former, breaking changes can sneak in via that route as well (regardless of the ideals of SEMVER).",1527768405.0
,[deleted],1527556017.0
fuck_with_me,"Ah, good to see the maintainer of that repo commented here already. Just as a general rule I would stay far, far away from projects that look too good to be true, have few/no stars, and have no documentation. If no one has taken the plunge yet, do you really have the time/energy to be the first?  


Alternatively, fork the repo, make it work, submit a PR, become a permanent contributor, help the community.",1527577222.0
HijoDelQuijote,Take a look at [https://github.com/wix/react\-native\-calendars](https://github.com/wix/react-native-calendars),1527552563.0
blinger44,"meh, kind of a click-baity title there. This blog post only outlines how to design the Spotify ""now playing"" UI screen.",1527607174.0
EgidioCaprino,😢,1527584270.0
lefooey,https://github.com/mCodex/react-native-sensitive-info,1527525741.0
mannotbear,"If you pull it from the server, you can store it securely in the iOS keychain, I’m not sure about Android.

If the key is hardcoded, you store it in a .gitignored constants file - that will bundle it into the binary.

You can also generate a new key private/public key pair on the client at install, then exchange keys with the server, and have the server deliver the encrypted files to the client after encrypting them with the clients public key.

Check out ECDH exchanges (elliptic curve diffie-helman).",1527541933.0
lefooey,Wish we could have less “SEO Content Strategists” posting here. ,1527522726.0
ifndefx,"Wish I could like react, just can't get over the template not being seperated from the code. ",1527498574.0
thawab,"Yes a better alternative, firebase used rnfirebase.io in their demo.

https://www.youtube.com/watch?v=8wQ_MorYCEk&feature=youtu.be&t=517",1527486304.0
filipef101,"i also wonder the advantage, more trouble to install and whatnot",1527471501.0
SizzlerWA,I use the web sdk without issue.,1527611311.0
redpopcornpanda,"I love react native firebase. I would not recommend the JS or API route. The rnfirebase SDK gives you almost the full functionality of the native SDKs which includes way more things (just look at their page about what's supported. It includes local push notifications, analytics, crashlytics, etc.) It's also more performant, since you don't rely on the JS thread for everything. It goes through the native driver.

I'm not sure what the use case would be for NOT using the native sdk, unless it's a very small demo app using expo or something like that. 

It's not too difficult to install, especially if you already have experience installing native packages.

Additionally, their docs are very good.",1527542362.0
8_n3z,"Personally, although it looks great, I wouldn't pay just to have someone else integrate it for me, I would just integrate myself but looks neet",1527596534.0
versaceblues,Thanks for the input everyone ,1527620270.0
JS_PY_and_Crypto,"I've used firebase for many projects, its great. If you're building a bigger app I would suggest using rnfirebase just because its better integrated. The firebase JS api is more focused towards web anyway.",1527466702.0
,[deleted],1527465096.0
Bamboo_the_plant,"Have you done the full 'hail Mary'?

    watchman watch-del-all
    rm -rf $TMPDIR/react-*
    rm -rf $TMPDIR/metro-*
    rm -rf $TMPDIR/haste-*
    npm start -- --reset-cache
",1527470709.0
ardils,"When I encounter problems with hot reloading, it's usually related to Watchman.",1527467577.0
Fingal_OFlahertie,Is it giving a red Delta error when you make a change?   That started to happen to me after .55 And it required me to kill the debugger and start Chrome fresh. ,1527509100.0
BERLAUR,Check for recursive imports. HMR has been broken for us for a while and that turned out to be the issue.,1527522532.0
sinefine,Can you share your source code?,1527466640.0
hello_Mrs_Cumberdale,"I don't know of any way to detect an opaque vs transparent pixel on tap, but if you knew the x and y coordinates of 'valid' tappable area you could use PanResponder to detect and respond to taps within the boundaries.",1527456848.0
LEO_TROLLSTOY,"no. use touchable opacity just as image wrapper with same dimensions. Add another View as container. so, there should be no transparent area in TouchableOpacity but in View",1527481726.0
fuck_with_me,"What are your puzzle pieces made of? Do you really need to use images, or can you use SVGs or something?  


Anyways \- and you're probably not going to like this \- for a puzzle\-type app you're almost certainly going to need to get pretty deep into webGL stuff. There are a few existing RN libs/ports out there.",1527531511.0
Noitidart2,"Set the `<Image>` resizeMode to stretch, that way you have no transparent pixels around the image.",1527569687.0
LEO_TROLLSTOY,Its probably a memory leak (thats what the system says in the msg). Check what you did with images and how you are handling them,1527433909.0
Fossage,"Because the stacktrace doesn’t seem to be super helpful in this case, my advice would be:

1. Figure out how to reproduce this behavior on your own test device or simulator

2. Once you have determined consistent repro steps, to whatever degree you can, go through your git history commit by commit(or at least completed feature commit by completed feature commit) from you previous working version to the updated buggy version and see if you can pinpoint the commit/commits that introduced the buggy behavior.

3. Once you are narrowed in to a specific commit/group of commits that introduced the bug, try to further narrow the scope of what could be causing the issue, possibly commenting out and/or reverting specific lines of code if possible until you have the location of the problematic change narrowed down as far as possible.

It’s also possible that the bug may not have been introduced by a new feature, but instead and update to some of your dependencies not playing nicely with your existing code. If you have done any dependency updates, make sure to re-install all dependencies as you go through your commit history.

Can you reproduce the behavior by pushing your previous version to TestFlight, installing, then pushing your most recent version, and then updating? ",1527439204.0
nordicdev,Are you using animations? If I recall right we had this problem once and it was due to animations. ,1527437399.0
chimbori,"Looks like you've got a large image somewhere. Check all your PNGs, JPEGs or SVGs and make sure that the target size is reasonable.

Not just the compressed size, but the actual uncompressed size as well.",1527445370.0
BuggerinoKripperino,I know this is 3 days old so it's considered ancient in internet time but you look like you have a decent user base. You should consider inviting some to be beta testers where you can deploy changes like this and only have it impact a small subset of your users \(who understand this is what happens when you're a beta tester\). ,1527764126.0
demoran,"I figure you're still working on this, and wanted to pass you a  research link to pursue:

https://stackoverflow.com/a/18034671/773673

It seems like this is related to the size of the images you're working with, so see what you can do to reduce those.

Increasing the heap size seems to work on Android; this doesn't account for the same behavior on iOS.",1527769361.0
joshymeyer," Are you using any crash analytics tools? If not, I’d say try [Appsee](https://www.appsee.com/) because you can watch recordings of crashes, and see if bugs are causing ANRs or a user to quit the app. Also what’s cool is that you can see what was going on before the crash or if a crash/bug was happening on the same screen over and over but for different users.  ",1541598836.0
thisisafullsentence,"Looks like you clearly know your way around React Native but I'm pretty sure tech companies are [trying](https://www.recode.net/2018/2/5/16972096/emily-chang-brotopia-book-bloomberg-technology-culture-silicon-valley-kara-swisher-decode-podcast) [to](https://www.salon.com/2018/01/06/new-book-reveals-toxic-tech-bro-culture-and-sex-parties-in-silicon-valley_partner/) [shed](https://www.nytimes.com/2018/02/05/technology/silicon-valley-brotopia-emily-chang.html) [bro culture](https://www.vanityfair.com/news/2018/01/brotopia-silicon-valley-secretive-orgiastic-inner-sanctum), so your Tinder demo with ""bad bitches"" and variable names like `handleNope`, `handleYup`, and `Iconz` are probably going to find you more niche opportunities than corporate.",1527356595.0
deadcoder0904,You can use AWS Pinpoint. Check [this video](https://www.youtube.com/watch?v=eF5cb8v3OGw&list=PLE9m_QqEHgX0N_v7iBTA5_XfHqa962yv0&index=2) if it helps :),1527349779.0
Dimasdanz,"I used firebase analytics in production. No database connection needed.  
Just install [rnfirebase](https://rnfirebase.io/) it works automatically.  
Also for better results you might wanna `setCurrentScreen()` on every screen or it's just gonna show `MainActivity`.",1527365264.0
a_scottish_lord,"You can just use the web JS version of google analytics. Works the same, just doesn’t give you the added value of native SDKs like device type, network name etc. ",1527348974.0
pjayh,I set this up just this week! I’d suggest firebase because google analytics is familiar. If you do check out a library called react-native-firebase. Manual integration is pretty simple. Otherwise you could try Microsoft’s app center as well! ,1527351841.0
sercanov,fabric.io is also great one,1527360455.0
redtarmac,I wrote [react-native-googleanalytics](https://www.npmjs.com/package/react-native-googleanalytics) a while back and use it regularly. Doesn't require Firebase. There's also the more popular [expo-analytics](https://www.npmjs.com/package/expo-analytics)  version if you're using Expo. ,1527361053.0
demoran,"My app is tossing analytics to 3 places: google, facebook, and adjust.

The general idea is determining meaningful actions people take and then firing off a tracking action when they make it.

In the case of adjust, you create discreet events on the service and then pass the string token they give you for that event to them when it occurs.

As far as being able to pass extra metadata with the track, I think Facebook is better at gathering insights than google.

    import { AppEventsLogger } from 'react-native-fbsdk';
    import { getMetadata } from './metadata';
    
    export function trackEvent(event) {
      const parameters = getMetadata();
      AppEventsLogger.logEvent(event.name, parameters);
    }",1527769790.0
joshymeyer, FYI Fabric.io has now gotten rid of all their 3rd party tools and only use Google-based technology. I suggest [Appsee](https://www.appsee.com/). Their user recordings show every detail of the user journey and also track bugs and crashes. ,1539872850.0
pabloneruda,Don’t use GA for this. Use a newer tool like some of the aws libraries or amplitude. ,1527352581.0
laggySteel,"after the last review by community, I have refactored my redux store and few things. Also added the new profile section, facebook signup, and Chat feature. I need your help in guiding me in correct direction for right way of creating Messages store with Firebase. Im stuck on how do I listen to every new messages sent.

https://github.com/steelx/react-native-redux-app",1527314751.0
ankittale,👍 Awesome nice changes,1527324105.0
,"The course on Lynda.com is pretty good. I think it would be helpful to learn ReactJS first, so that you’re familiar with the component structure.",1527305357.0
lefooey,Try the React Native beginning course from Stephen Grider on Udemy. It’s a pretty good build-an-app-with-me introduction to RN. ,1527307585.0
mrdhood,"I recently \(over the course of the past month in my spare time\) went through this process as well. I've been developing in PHP for years following a MVC approach. I also had jQuery experience though I've never been a huge fan of Javascript.

I started with the expo guides to get started and then just googled the steps I was trying to accomplish at each point. For example, I knew I needed a navigation bar so I searched that, once that was set up I did my home screen which resulted in needing to pull from a JSON feed so I searched that.

If you have an understanding of programming already then it should be relatively easy for you to get started. I'm obviously not going to apply for jobs using React or anything but I am about to release our first app which is pretty basic but I'm impressed with how easy React Native and Expo make building an app.",1527706196.0
ashmortar,"Depending on how much prior coding experience you have I would either recommend looking up some regular react.js stuff to wet your feet.

 www.learnhowtoprogram.com/react 

is not a bad place to start. If you want to go straight into react native there is a really good video course on building a basic currency converter app made at

 https://learn.handlebarlabs.com/p/react-native-basics-build-a-currency-converter

Both of these are free resources.
The first is from a pretty awesome code boot camp I should disclose I attended called Epicodus.  The second I don't know a ton about but that course is free and I found it to be useful.",1527308667.0
redpopcornpanda,"The component structure is really important to understand, and it's the same between React/React native. Here's a good article about it called [Thinking in React.](https://reactjs.org/docs/thinking-in-react.html)",1527309206.0
thedesijoker,Thanks everyone. I will try the options and update you guys.,1527309454.0
Dimasdanz,"I made a stream app for a [tv station](https://itunes.apple.com/id/app/metro-xtend/id1370576630?mt=8) that already in production.  
Instead of vlc, I'm using [react-native-video](https://github.com/react-native-community/react-native-video), it uses player natively available on both platform, exoplayer on android and AVFoundation on ios. Which means much smaller apk and ipa size compare to vlc. Although my streaming link is in `.m3u8`, I don't see any reason why `.ts` is not supported.

Also, just a tip, adding vlc on your application, increase the build size quite significant, adding about 60mb on apk or ipa size.",1527276113.0
no_one_feels_it,"This opinion piece is unreadable, and it's not just a language issue. It just does not make cohesive sense, elements are copy and pasted from release notes. 

Stuff like:

> The Stateful Widget in Flutter that provides a place that helps to store and change data dynamically that would be similar to react and react native.

By ""react and react native"", you mean a store like Redux, Flux or MobX? 

Or:

> Compared them on the basis of their performances now lets have a look on Flutter’s Future.

And then nothing about their futures.

It's a garbage spam piece.",1527259650.0
idreamincolour,Did not bring up the biggest difference of Flutter. The lack of bridge.,1527236613.0
ardils,"At the rate Flutter is being developed, next year it will probably be able to do everything React Native can (and do it better). I don't think React Native can ever do some of the stuff Flutter can do, just not possible.",1527249345.0
Dimasdanz,"The only thing that makes me interests in Flutter is navigation.  
Like, seriously, the [most used navigation](https://reactnavigation.org/) has tons of performance issue.  
While the one that has much better performance ([react-native-navigation](https://github.com/wix/react-native-navigation)) despite being enough for most apps, lacks a lot of customization.",1527277669.0
akie,"What on earth is ""Flutter"", and why does it think it warrants a head-on comparison with React Native?",1527236273.0
malemajor,"Looking for a flutter resource for an app I have in mind. I have resource to develop API.  I just need  the flutter guy, but if you can API too it's even better ans lesser communication complexity. 

[https://www.freelancer.com/contest/A-cross-platform-responsive-App-to-post-and-share-photos-videos-and-news-urls-youtube-embeds-1441867.html](https://www.freelancer.com/contest/A-cross-platform-responsive-App-to-post-and-share-photos-videos-and-news-urls-youtube-embeds-1441867.html)",1541442516.0
liquid_penguins,No they wouldn’t complain. Those warnings are in all likelihood telling you to update project settings for each library. ,1527223353.0
pjayh,I jumped on my first react naive project at work recently and I was freak out by the hundreds of warnings as well! I only went and fixed the red errors and it works fine.,1527253351.0
kbcool,Summary: Bad content marketing spam from some crappy outsourcing firm I'd never spend a cent with because they think RN is a hybrid app platform.,1527185009.0
,[deleted],1527179623.0
billmalarky,"I guess I should also probably post the example use case section directly into reddit so people can see what RNQ is good for at a glance. Especially seeing as creating that entire section of the readme was a piece of feedback I was regularly getting from you guys and others.

***

## Example Use Cases

**React Native Queue is designed to be a swiss army knife for task management in React Native**. It abstracts away the many annoyances related to processing complex tasks, like durability, retry-on-failure, timeouts, chaining processes, and more. **Just throw your jobs onto the queue and relax - they're covered**.

Need advanced task functionality like dedicated worker threads or OS services? Easy:

* **React Native Queue + React Native Background Task:** [Simple and Powerful OS services](https://github.com/billmalarky/react-native-queue#os-background-task-full-example) that fire when your app is closed.
* **React Native Queue + React Native Workers:** Spinning up [dedicated worker threads](https://gist.github.com/billmalarky/1d1f72a267a1608606410602aa63cabf) for CPU intensive tasks has never been easier.

**Example Queue Tasks:**

* Downloading content for offline access.
* Media processing.
* Cache Warming.
* _Durable_ API calls to external services, such as publishing content to a variety of 3rd party distribution channel APIs.
* Complex and time-consuming jobs that you want consistently processed regardless if app is open, closed, or repeatedly opened and closed.
* Complex tasks with multiple linked dependant steps (job chaining).",1527183406.0
kbcool,"I suggest Google first.

If that fails then asking here or on stackexchange is fine but please provide some more details instead of just posting the error message. 

Your package.json is a great start.
",1527158203.0
kbcool,"You really shouldn't be having problems. 

RN uses device independent ""pixels"" so even when setting widths, heights and positions things should generally turn out similarly.

One thing I can say is avoid doing what I just said (using width/height position) and use flex where possible, percentages should be used sparingly as well. 

Flexbox documentation - https://facebook.github.io/react-native/docs/flexbox.html

If you must use absolute positioning don't position things say 200 DIPs away from the top as this is going to look different on different devices. This is what centering is for.

That being said things are never going to look 100% the same (as in pixel by pixel or even mm by mm). That's not the point of cross platform development. The point is that the UI looks and works fine on all devices without having to write code for each of them separately.

If you do run into a situation where you must do something differently on IOS vs Android then import Platform and use Platform.OS. Documented here:

https://facebook.github.io/react-native/docs/platform-specific-code.html

Good luck! If you need more help please provide some specific examples.",1527153812.0
han-ammu,"I used react-native elements for a learning portal app I've been working on for the last few months. Its super easy to plug and out any element components, it's consistent and has intuitive prop names, it doesn't force you to do things a certain way and is not buggy at all. 

In my opinion this library is more a hand set of useful starter components that integrates with a long term project and can be taken out at will (and probably will be). 

If its just a short term project you'll want to use something more powerful. The most updated base is [ignite](https://github.com/infinitered/ignite) which is probably what you want to look at. It gives you a basic template app using industry standard packages which you can alter from there.

Also for the forms, redux-forms has worked well for me.",1527162026.0
deadcoder0904,"It doesn't have support for Theming yet which is supposed to be fixed in the final beta release which is tracked at [this milestone](https://github.com/react-native-training/react-native-elements/milestone/5)

But I think, its very polished UI Kit now.

Other options I like are react-native-ios-kit & react-native-paper by CallStack

So if you have less time then go for UI Kit otherwise you are better off without it",1527151806.0
Unforgiven-wanda,"Quite honestly I have yet to find any cons: The service is free, you can monitor your app, collect crash reports, send push notifications, automate the release process and whatnot, which is good.

Oh and did I mention it's free?

Also easy to integrate in your app and it's easy to get rid of too, should you want to.",1527406219.0
defsquad,We use [Expo](https://expo.io) at work. Works great for both major targets. ,1527114495.0
interactivejunky,"Android is a little like the ie6 of react\-native sometimes with its lagging support for some really useful component properties.

One way to avoid this could be to develop Android first \- that would assume that most things that work on Android will work on iOS. Android's performance is a bit worse too so that'll allow you to realise which components are impacting your app performance as you develop rather than at the end once you already have your app built.

That said I prefer developing using the iOS simulator \(better for battery life, better performance\) so my solution is to release Android less often than iOS and put some work into Android optimisation each time I release for the play store.",1527120208.0
Jgfidelis,"For overflow, there is this bridge that solves the problem: https://github.com/entria/react-native-view-overflow",1527119368.0
shrolr,Android bugs are driving me crazy. I dont know why those bugs are happening. I couldn't find any solutions about it. Everytime i encounter bug in android. I'm removing that functionaltiy of the app.,1527144581.0
Noitidart2,"There are a few bugs like that overflow one. ScrollView is only pinchable/zoomable in iOS. Yes thats a limitation. I needed this feature for photo viewing, so what I did was I just used a WebView and loaded the image there.

That skewX/skewY one is an interesting one. I didn't know of that one.",1527659370.0
Magzzter,It sounds like you want to create a socket connection between your client and server. Check out socket.io,1527080626.0
langbenj,Take a look at Firebase. It's really good at this type of thing. ,1527088629.0
Unforgiven-wanda,"I wholeheartedly recommend it \(Without Expo mind you\) I'm having lots of fun just pushing updates to the app without going through the tedious process of releasing to store.  
So far I've never had a single issue with it: My only recommendation is to have something of a visual cue to let the user know that a background update is being download, and to offer to restart the app when it's done.  
When updating RN version though, I made sure to rebuild and release a new version through the store, just to be on the safe side.  
Delivery failures are never an issue: it just works.

I'm using ms appcenter and I love it, have never used Fastlane so I can't offer a comparison, unfortunately.  
All in all, I say go for it, code\-push will make your life easier.",1527150543.0
ativio,"I've read about users having issues with the automatic rollbacks using code\-push and AFAIK the rollbacks have no logs or explanation for why they happen so they can't be debugged.

The process I use with code push is to use it for hotfixes and the like and hope that they go through and then weekly or bi\-monthly or whenever is right to just release an update to the app store.",1527172124.0
Bamboo_the_plant,"I'm assuming that, by 'code push', you mean Over The Air (OTA) updating?

I have an Expo app that uses background OTA updating on the App Store (fully opensource; GitHub page [here](https://github.com/shirakaba/react-native-typescript-2d-game)) that sometimes gets stuck forever on the loading screen (requiring app reboot), and I'm convinced it's due to OTA updates failing. However, it's set up as a strictly background update, so maybe my suspicions are unfounded. And **maybe it's just Expo's fault** in any case. But unless I can be assured otherwise, I won't be using OTA updates in my apps in future.",1527085382.0
namaquas,"Please post the gist, I'll take a look at it. I don't have the best knowledge of React Native but I enjoy solving bugs.",1527054838.0
feitico,Realm,1527076379.0
stutterbug,"Maybe consider using sqlite. I haven't used it in react native yet, but in a project I completed in Electron, it worked really well for my use-case. The advantage is that you can ship your app with your database pre-populated, bundled and immediately ready for use. The database exists as a single, standardized file, which means you can edit it with any sqlite client you want right up until you publish your app. It supports indexes and views and if you set things up correctly, it's extremely fast and consumes very little memory. The only disadvantage is that if you are not very familiar with SQL, you will have a learning curve ahead of you. I'm hoping to use it in a coming project myself specifically because I have  ~230,000 rows of immutable, searchable data and having it in a local, prepared database solves so many issues.",1527049235.0
kbcool,"Edit: mobile phone autocorrect should be firebase...don't go off trying to find firebirds

Firebird was designed to solve cases like this. You can specify what gets cached offline. Limit is 10mb right now per entity but from your enquiry it doesn't sound like you have anything like 10mbs.

Actually I think the above varies depending on the version. Ive never actually used it but I do know that offline caching was one of the design imperatives.",1527066739.0
spruce-bruce,"Sqlite is a great option - you can build a sqlite db and package it with your app if you like, or download it when users first open the app.

I use sqlite for local offline full text index searching in my RN app",1527127439.0
udfalkso,What's wrong with react-native-youtube?,1527024649.0
kdesign,"I personally feel like React Native's animation library is so dead-simple that you barely need any abstraction on top of it. The concepts behind it are so simple. I wouldn't trade the freedom of creating and customising the animations in exchange for a couple of lines of code.
Also, most examples just show a growing circle or moving box but don't say anything about fine-grained control over the animations (if for example you need to pass the PanResponder events to your animation to control it through gestures and so on)

Let's take this example:

    const Box = styled(posed.div({
      top: {y: 50},
      bottom: {y: 300}
    }))`
      background-color: #f9415d;
      position: absolute;

      ${props => `
        height: ${props.size}px;
        width: ${props.size}px;
        left: calc(50% - ${props.size / 2}px);
      `}
    `;

    export default Box;

vs:

    export default class Box extends React.Component {
      topAnimation = new Animated.Value(-50);

      componentDidMount() {
        Animated.timing(this.topAnimation, { toValue: -300, useNativeDriver: true }).start();
      }
      
      render() {
      const { size } = this.props;
      return (<Animated.View
        style={{
          backgroundColor: '#f9415d',
          width: size,
          height: size,
          position: 'absolute',
          top: this.topAnimation,
        }}/>);
      }
    }

How much different is it, really? Without introducing two additional libraries which need to be parsed and compiled by the JavaScript Core engine on your phone and without you as a developer needing to learn two additional APIs.",1526999541.0
duncancockfoster,"You can basically think of async storage as local storage that can stores small things such as authorization tokens. 

Check out the react tutorial on authentication flows for an example of how its used:

[https://reactnavigation.org/docs/en/auth\-flow.html](https://reactnavigation.org/docs/en/auth-flow.html)",1527013001.0
gumpdawg,"
Can a beginner attempt this?",1526976876.0
tequiila,LinkedIn I get about 2/3 emails a day for £500 - £600pd contrat jobs. I'm not even looking,1526970192.0
,r/forhire might have something. There's also r/jobbit and r/jobs4bitcoins. ,1526973116.0
hamsa_hiennv,Me too. It is hard to find a job. I'm looking for RN jobs for our team too.,1526982519.0
mbrochh,Where are you based?,1526996253.0
unplugged_chump,How long does it take you build an app on an average? Just looking for a rough estimate.,1527068976.0
RedWolf-RW,Looking forward to send my wolverines to lurk this project.,1526957383.0
Bamboo_the_plant,"Wait, if the app was originally written in Angular, why not champion the Angular-based [Ionic](https://ionicframework.com) instead of RN?",1526952988.0
nitinsh99,Looks great.. Mind sharing what motivated you to switch.. any pros and cons of using RN over Xamarin?,1526932997.0
loladeking,"Hello. I just downloaded the app on play store. 

1. Just to confirm again. The one on play store is ready native right?
2. Can you also share the xamarin forms version. I'm a xamarin forms guy and c# dev so I'm really trying to root for xamarin but I'm very open to see the difference",1539545146.0
Noigel_Mai,Spencer Carli is a cool dude! 👍 ,1526927996.0
AccomplishedCarrot5,"Oh boy. I just did this a few days ago and it was honestly the biggest technical nightmare I’ve ever experienced. I basically just kept trying “react-native run-android” and then googling the error, finding an answer on stack overflow, and trying again. I don’t remember the exact steps I took, but the biggest source of my headache was the Java SDK. Make sure you have Java 8 AND ONLY JAVA 8 installed on your computer. ",1526922703.0
SirChristoffee,"Errr been a while since I've had issues. But when I have had issues starting clean and setting up Android Studio *exactly* as described [here in the docs](http://facebook.github.io/react-native/docs/getting-started.html#2-install-the-android-sdk) has usually resolved issues.

The same page describes Java 8 JDK or newer being fine so you may be all good with v10?

Also according to that page you are missing `export PATH=$PATH:$ANDROID_HOME/tools/bin`

Might be silly, but `echo` each of those and check?

Good luck!

",1526990036.0
kbcool,"Are you the developer or worked on it? Are you willing to answer questions if so?

Otherwise I'm downvoting and reporting spam ...too much dumping of random apps on this channel. 

Edit: I'm guessing you're a spammer since the account was created recently and has been spamming that link all over reddit.",1526912595.0
kbcool,"It's relatively straightforward once you get your head around it.

Have a flag stored in your component's state - something like popupVisible. Then in render conditionally show your popup like so:

{ this.state.popupVisible &&
<View>
Your popup content here
</View>
}

Then in the wrapping View that is the outside have an onPress listener that that sets popupVisible to false using this.setState so the change is received and everything is re-rendered by the conditional minus your popup.",1526907924.0
nitinsh99,"I am using Native base  \([tabs](http://docs.nativebase.io/Components.html#tabs-def-headref)\) and it has a child List component. I would want tab to NOT to scroll up as I scroll the list view? Any way I can achieve that? I tried setting scrollEnabled prop to false but it makes the whole thing to stop scrolling

Component Heirarchy :

\<Container\>

\<Head\>\`\`\</Head\>

\<Content\>

\`\`\<Tabs\> \<\-\-\-This does NOT need to scrool

\<Tab\>

\<List/\> \<\-\- this needs to scroll.

\</Tab\>

\</Tabs\>

\</Content\>

\</Container\>",1526876653.0
Bamboo_the_plant,"Here's my Expo TypeScript project:

https://github.com/shirakaba/react-native-typescript-2d-game

See https://github.com/shirakaba/react-native-typescript-2d-game/wiki/How-I-created-this-project for the steps I followed to make it in the first place, and thus infer how to change your existing project accordingly.

You can even adopt just one new TypeScript file at a time if you set up the `tsconfig.json` to allow import of JS modules (I think it's the `allowJs` property).

You should change any files with JSX in them to have the `.tsx` file extension.

Any files purely using JS should be renamed to `.ts`.",1526932733.0
camaromelt,I recommend using Flow for your needs.  Expo is built using it so you will have an easier time.  Just from what research i have done.,1526877973.0
yonnyy,"I think you have to eject the app to use native resources (i think push notifications are such). 
You can do this with `react-native eject`. But mind yourself, this can not be undone! And you will not have any features from expo after that step.",1526833300.0
one_is_the_loneliest,"I'm not really sure what you're getting at here (link to the guide as well at info on your build process?), but if you want to add elements to the screen, just use an array or something, such as:

    constructor() {
        this.state.elements = [{key: ""item1"", text: ""Some text""}, ...];
    }

    render() {
        return (
            <View>
                {this.state.elements.map(item => <Text>{item.text}</Text>)}
            </View>
        );
    }

    receivePushNotification(key, text) {
        this.setState(prev => prev.concat({key, text}));
    }

Or better yet, use `FlatList` if it's list-like. I hope this helps!",1526833313.0
keledx,"I see what you’re trying to do now. Doesn’t the message prop accept only strings? If that’s the case, you’re a passing a React component instead of a plain string. I would just do “export const policy = ‘formatted text here’ “ and import the text and pass it as a prop.",1526808575.0
fly_guy22,"Store it in a json file and import that file whenever you need copy. I have a master JSON file thats something like 

Copy: {
ScreenOne: {
Title: ""someTitle""
}
}

Then <Text>{Copy.ScreenOne.Title}</Text> etc",1526815446.0
,[deleted],1526807461.0
themooninthewell,Yes it get's cached automatically. Cant remember how long 24hrs maybe.,1526801316.0
ABrownApple,If I remember correctly they do. And the server can set a setting for how long. Kinda works the same way as when you fetch an image from the server from a browser,1526806679.0
lefooey,"If this is for iOS, I would add the summary of the email and the contact information of the person at California State Parks who granted permission to the reviewer’s notes in ITunes Connect. ",1526787692.0
,[deleted],1526875674.0
interactivejunky,"A little off topic but I’ve also built an app for camping in react-native that’s used in Australia - https://itunes.apple.com/ca/app/aircamp/id1343507387?mt=8 ... can you send me the name of your app when you’ve finished it, really curious to check out how you’ve gone about solving similar problems.",1526955320.0
nitinsh99,Isn't it CMD+Ctrl+Z,1526774904.0
sauzadg,"https://stackoverflow.com/questions/46313815/how-to-use-mac-keyboard-while-simulator-keyboard-is-on-the-screen

Hope it works",1526774041.0
themooninthewell,Are you running a release build by any chance? Or did you remove the developer tools code,1526802134.0
TexMax007,"You might have already seen this but just in case you haven’t, have a look at this:

https://moduscreate.com/blog/swift-modules-for-react-native/",1526797367.0
the_riot,"I’m also interested in getting this to work. If you get this to work, can you report back here?",1526827642.0
Calbesz,"I haven't used the react-native firebase library personally, only the web stuff but I am thinking the issue is that you need to initialize the firestore. 

Try calling the firestore function before collection.

```
const helloWorld = firebase.firestore().collection('hello').doc('hello');
```",1526751412.0
edric_garran,just use a switch navigator with logged in / logged out navigators and navigate between them after login/logout ,1526750597.0
kbcool,"Great article! This is a must read if you are a relative newcomer to RN. There's a wealth of knowledge here, probably mainly learnt with hair pulling.

The author is very lucky that they didn't have to deal with pre 0.4x RN. Basically everything fell apart every time you modified a line of code. You'd be clearing caches, reinstalling every node package then recreating your project once a week.

Most important piece of advice for someone considering picking it up from a web background  though is that you have to get your hands dirty on native eventually and it's not as simple as the web. It's real now. If you can't handle that then you'll never be cut out for RN.",1526748121.0
rescue_nil,`react-native run-ios —device`,1526738372.0
Davide57,Good job!,1526742873.0
ManOnTheMo0on,Author states how important it is to know native code when working with RN. Is this true? I've been working with ionic but wanted to switch to RN because ionic has been a pain with random cordova errors.,1526919145.0
Noitidart2,It would be aweosme if you can share your details on test and identifying perf issues of RN apps.,1527629524.0
Unforgiven-wanda,"This is actually really interesting.

I'll be following it closely.

Thank you for sharing it.",1526802472.0
demoran,typo on page: `immidiatly`,1526735949.0
,"This is a community for learning and sharing info on react native.

Not only is it not for marketing your services, it's also the least likely crowd to use your services considering everyone in this community is building their own apps... Not a fantastic marketing strategy! ",1526713545.0
dduko,"i knew immediately this was an indian company lol, with a fake us office too.",1526750972.0
Bleached__Anus,"Basically when I started learning React and React Native, I had a really difficult time managing forms, because there doesn't seem to be a clean and efficient way. I know there are some libraries that can handle 
 forms, but then you're tied to the look of their input controls. So I made this library (which is heavily inspired by Angular's forms) to be able to keep track of the form's state, whilst having nothing to do with the view, which is left entirely up to you. I'd really appreciate it if you guys gave it a look and left me some feedback. ",1526687921.0
feitico,react-native-câmera has text recognition on latest version using google Visio sdk. You could also use the new Firebase ML sdk to do the same,1526694730.0
lovemeslowly,"Whats your use case btw, I have seen this library, hav'nt tested yet..
https://js.coach/react-native-tesseract-ocr?collection=React+Native",1526706585.0
scarlac,"Those are two different text fields. You transition by fading out the old and scaling it up and matching the size and speed with a transition on the new. So when you tap the first input it doesn't actually activate it - it activates the animation that ends by focusing the new input field.

I recommend using native animations for stuff like this, because javascript-controlled ones are not always able to synchronize well enough to pull it off.

Edit: Here's a screenshot showing the two text inputs in mid-transition, trying to sync up (but not quite getting it): https://imgur.com/bhCoqLz",1526697540.0
nitinsh99,I have done some basic text animation in RN using animated API but I am looking to get some starting pointers on how to do such component transition animation across multiple screen in RN. Thanks ,1526682033.0
edric_garran,"If you're using react navigation, you could put the search bar as a custom navigator header and use the `position` prop to animate it. ",1526696791.0
Noitidart2,"That first text field you see, it's not even a text field. It's just something when you press on it animates to the other. When there is text, they put a text label in that dummy text field.",1527570456.0
mierz94,"I’ve seen that someone else has already helped you out with this. But, when ever you’re writing a program and you notice yourself writing practically the same thing over and over. Just think, there is a better way to do it. You can always use loops, arrays, objects to stop from having duplicate code. 
",1526672965.0
TexMax007,Is there a reason why you aren’t just creating a popularMoviePosters array instead?,1526667881.0
kbcool,"TTM.....time to market. 

Lots of other reasons too but this one shines above all others.

It's also such an easy sell when someone says I want an iOS app and you nicely explain that without an Android app you're missing out on 80% of the market then tell them they can have both for the same price. Their eyes twinkling is payment enough :)",1526652033.0
creambyemute,"- TTM
- Windows UWP support
- Full Native UI access (possibility to do views/screens in native), so being able to do parts in native if really needed

I don't list Full API access here as you have to write modules in native language whereas for example in NativeScript you have full api access from JS side.

I also don't list business logic sharing betweens mobile and web app as you can get that with NativeScript as well for example.",1526661248.0
redpopcornpanda,"For us it was definitely
- cross platform development
- ease of use for new, inexperienced developers 
- better developer experience (everyone enjoys writing for react native)",1526664232.0
andnbspsc,"TTM... and continued maintainability of app on multiple platforms for a very small team (1 or two programmers)

It would take me so much more time and knowledge to update my app if I was maintaining separate iOS and Android code-bases.

When I started with react-native it was a bit of a mess in terms of features and performance and I did what I could with it, but in the two years since it has come a long way and I'm glad I bet on it.",1526684179.0
Gitanes,"Cross platform development.  
 And I regret it. The whole eco-system is very flaky, lacks documentation and it's filled with libraries that work for iOS but not for Android. If you want to build something more complex than a TODO list, stick to native coding.",1527073247.0
TheNoim,Material UI is a react library not a react native or am I wrong?,1526651848.0
tanguy_k,"Babel 7 provides TypeScript support so the workflow is now as easy as Flow

Nice tweet about it (not mine):
https://twitter.com/olivtassinari/status/938195153940082688?s=19

*""Working on @MaterialUI made me realize one thing. People are moving from FlowType to TypeScript. There is no coming back once Babel has a first class support for TypeScript.""*

The TypeScript community is way way bigger: http://www.npmtrends.com/babel-core-vs-flow-bin-vs-typescript

See also https://github.com/DefinitelyTyped/DefinitelyTyped vs https://github.com/flowtype/flow-typed

IMHO Flow is a dead end, see it as a nice Facebook **internal** tool.",1526718003.0
HisAwesomeness,"A summary of the main points at the end would have been nice. Maybe even visual? Otherwise thanks for the input!

flow ftw",1526637569.0
brzzzah,What type of release is this? Ad-hoc? Enterprise? AppStore?,1526644129.0
arunkmoury,It's for development deployment. Just for internal team,1526644942.0
TexMax007,Perhaps the iPhone needs to be added to the devices list for the development account? I seem to recall needing to do something like that when I was messing around with iOS development.,1526667963.0
lefooey,The phone must be in your devices list on the developer portal and must be added to the provisioning profile you have assigned to the app. Then refresh the profile in xCode and re-archive and export the app before uploading to Diawi. ,1526703053.0
BuggerinoKripperino,"This website is a good example of how web apps definitely aren't replacing them any time soon, it's awful on mobile!

The article also concluded with the classic ""time will tell...""

In all seriousness though I think that all the great PWAs in the world won't mean anything so long as people believe that mobile websites are bad (which they do and often are (see above)). I hope there's more of a convergence in the future but I don't see it happening very soon.",1526632086.0
lovemeslowly,"https://rnfirebase.io/
please use this package. much simple installation instructions & painless process",1526623101.0
PoorManJack,I used the web sdk and fetch,1526621265.0
alien3d,"react-native-firebase.  It not perfect, now i still figurin out how to make craslytic work after firebase crash out of service. ",1526640772.0
lefooey,"There’s already a well-tested integration. 

https://rnfirebase.io/",1526622297.0
FoldableClock,I actually just did this last night using their web sdk. I didn’t use react-native-firebase and it works like a charm. No problems so far with user auth or DB use.,1526664504.0
desirelife,"I use Axios to make my calls, but I'm not using Firebase. Its the same idea tho, just making API calls.",1526616640.0
kbcool,"....crickets....

Looks like if I want to use something other than live chat I'll have to roll my own or build an integration with the native SDK.",1526651872.0
Frissonator,"I have used Instabug with some clients. They have 3 main features.. bug reporting, surveys, and in app chats. The bug reporting tool is fantastic! You get a screenshot and can easily attach meta data to the bug report (like the full redux store, user data, etc). 
https://instabug.com/in-app-chat
",1526931531.0
jaspreetsinghios,"I have used the JOLEADO's Live Chat, is a unique way to increase conversions. No risk to convert more leads, more appointments, more customers!  Their [Live Support Software](http://www.joleadosystem.com/) helps with its auto responses to cater to multiple issues at the same time and saves both time and money. Try with it today for free!   
   
  ",1536645020.0
rizwanahmed19,Subscribed. ,1526596399.0
simplicius_,I'm in!,1526636617.0
jeevium,Subscribed as well :\),1526644659.0
redpopcornpanda,"If you put the API call in your root component \(e.g. App or Index or whatever it may be\), it would only run when the app is re\-opened. Our team uses a saga built with redux\-saga that is triggered in one of the root components. ",1526573094.0
RareProgrammer,"No good answers so far imo.

Isn't there some caching mechanism for networking libs?",1526590041.0
psikosen,"Need some more details, are you loading these images into an array or a divs etc ?",1526573221.0
wengemurphy,"This is

>A community for learning and developing native mobile applications using React Native by Facebook.

not a job board. Try /r/forhire",1526598375.0
udfalkso,This looks awesome.  How does it compare to https://github.com/necolas/react-native-web ?  ,1526571112.0
Nyquiiist,What a time to be alive.,1526611258.0
eXilz,"The demo is really impressive, fantastic work ! I'll keep an eye on it.",1526573393.0
xinvitus,This is really neat!,1526636507.0
LEO_TROLLSTOY,It is not. I have installed RN 0.55 recently and never got asked about calls or medias. Its probably some package you installed,1526530819.0
Davide57,How can I discover what's the one which make this?,1526553588.0
kbcool,"Do you want to add more details on what you had problems with? Using it here without a problem so it works. 

You're more likely to get a response if you describe your difficulties.",1526508883.0
Bleached__Anus,"I know what you mean man. I had to use this library as well and it was beyond ridiculous. I spent two days installing, building, deleting and retrying different tutorials and articles. All I can say is delete your node_modules and Pods every time you try something different. It finally worked one time for me.",1526687053.0
DJ-YANIC,"Yes that is what I thought as well... so instead of working on my project and try to implement google map in it, I did create a new project just to implement a map and something else.
I agree that is a good way to train myself.
I am just on my 4th project trying to display a map, following 4 different tutorials, each new one correcting some bugs but creating new ones.
Well I guess my lack of experience is not helping :)",1526566535.0
DJ-YANIC,"I found this Taxi App Tutorial on youtube: https://www.youtube.com/watch?v=uEN97vRVx7I&t=123s

Very helpful!",1526660392.0
FezVrasta,Cool idea! No iOS version yet?,1526492164.0
rsiqueira93,"Great job, man!",1526493693.0
Davide57,"Hey guys, let me know what you think about it :)",1527453048.0
Creator1134,theme pls,1526495599.0
kbcool,"What's your concern? Everything is new(ish) at some point. It's already almost three years old and has good maturity and support.

Why did you go with Swift? If anything looked like it was a flight of fancy and no long term prospects it was Swift but it's still around.

If Facebook don't support it someone else will pick it up or it will suffer a long slow death like Visual Basic or Excel :)

For cross Android/IOS dev there's nothing that really matches it, especially if you know javascript and React already.",1526483776.0
Davide57,"I started to use react-native just few weeks ago and I think it's a very interesting technology. If Facebook and other very big companies are supporting it, I'm quite sure that it could become soon a must for the sector. It's even very easy to learn, why don't learn it?",1526511976.0
kbcool,Can you do part 2 and actually get the animation working as in the first gif? I'm interested in getting SVG animations going for an app i'm working on now.,1526469598.0
unplugged_chump,Really interested in the gooey svg animation!,1526474441.0
alex_melnyk,"Seems it's not possible yet.

To do ""[Gooey Effect](
https://tympanus.net/codrops/2015/03/10/creative-gooey-effects/)"" with items we badly need SVG filters, but ""[react-native-svg](https://github.com/react-native-community/react-native-svg)"" lib doesn't support filters on elements.

I found answers here:
https://github.com/react-native-community/react-native-svg/issues/150",1526539596.0
kdesign,"For the past months I think I’ve seen more posts about Flutter than React Native on this subreddit.

Fuck everyone who is getting paid to post this shit here. I am subscribed to this sub to get info about RN, not about Google’s next abandonware project.",1526495844.0
seenickcode,"I think this article is a bit superficial and inaccurate in some places.

I'm developing a RN and another Flutter app concurrently at the moment, and have developed iOS apps for 5\+ years now and here's what I think.

1. ""Styles aren’t separated in Flutter,"":  not sure that's quite true. A lot of components use decorators which can easily be separated and defined in separate methods in your components.  Also, Flutter has Themes which lets you separate things a bit. But I agree, it's not as clean as RN.
2. ""Flutter doesn’t have enough resources to fix things up as till date it hasn’t received much attention from StackOverflow"": I completely disagree with this. Every single question I pose on the Flutter Google Group gets answered super fast and with high quality, ego\-free, humble and well thought through answers by primarily Googlers. With that said, I haven't posted on SO so it may not be as good of a response rate.
3. ""Modularity in Flutter never exists. It is almost impossible to inherit one component into another in Flutter app development."", that's a ridiculous statement. Dart is a OO language with features like Mixins and Inheritance. Also, the basic concept of a Widget in Flutter is modular. Maybe I misunderstood but it's insanely easy to make reusable, isolated components with Flutter, like RN.
4. ""The recommended IDEs for Flutter app development include Android Studio and IntelliJ Idea."".  What about VSCode? VSCode is one the most popular IDEs as far as I know.
5. ""built\-in navigator in Flutter is amazing"". actually, it's not that amazing. I hope they improve it long term.
6. There's absolutely no mention of how fast Flutter is in terms of rending large amounts of components or long list, as opposed to the poor performance reputation RN has with this. This is a major advantage over RN. 
7. ""it \[Dart\] can easily be picked up by Kotlin and Java developers""... or Ruby, or Python or JavaScript or basically anyone who has a basic grasp of programming. Dart is one of the easiest languages to learn that I've seen in a long time. It's pretty refreshing compared to the 100 different ways to perform a simple task with say ES6 or whatever monthly ""best way of doing x"" Facebook decides to come out with.",1526493360.0
unplugged_chump,"Good read, but this piece doesn't seem neutral enough to me.",1526474792.0
dogofpavlov,What about Flutter vs Expo,1526482284.0
AcidShAwk,"    export default class App extends React.Component {
    
    state = {
        employees: [ { ""Name"": ""John Smith"", ""Age"": 40, }, { ""Name"": ""Old Mate"" ""Age"": 30, } ]
    }

    render() {
      return this.state.employees.map(employee => (
        <Container>
          <Header>
            <Body>
              <Title>Apco Assistant</Title>
            </Body>
          </Header>
          <Content>
            <Card>
              <CardItem>
                <CardItem header>
                  <Text>{employee.name}</Text>
                  <Right>
                    <Icon name=""arrow-forward"" />
                  </Right>
                </CardItem>
              </CardItem>
            </Card>
          </Content>
        </Container>
      ));
    }
    }",1526463174.0
FoldableClock,"So I was able to use aws amplify for my app at a previous version (I’m not home now so I can’t tell you which version), but when I try to update it all goes to shit.

It honestly seems like the latest version of amplify is broken.",1526667120.0
saghul,"You can open the Xcode project file and follow this instructions: [https://wiki.genexus.com/commwiki/servlet/wiki?34616,HowTo&#37;3A\+Create\+an\+.ipa\+file\+from\+XCode](https://wiki.genexus.com/commwiki/servlet/wiki?34616,HowTo%3A+Create+an+.ipa+file+from+XCode),",1526458546.0
interactivejunky,"One way is to create a release build and then ship it with testflight (you can ship it to just your internal team and skip the Apple app review process).

The other option is to open Xcode, set the “run” scheme to “production”, select your device and hit play.

Both of those require being a registered Apple developer, I’m not sure of any way to deploy to an iOS device (even if it is your own) without joining the app developer program. I think here used to be a way of dragging IPA’s into iTunes but I’m not sure that it exists anymore.",1526461027.0
edzillion,"Did you use `create-react-native-app` to start? If you did you should be using `expo` to send it to your device. 

Otherwise you can do so by connecting your phone and running `react-native run-android` etc
",1526458170.0
kbcool,"If you have a developer account open .xcodeproj or .xcworkspace  in ios folder with your phone attached by cable and showing up in itunes and at the very top next to the play and stop buttons and your project name it will probably say generic ios device or have the name of a simulator. Click this menu and choose your physical device (it usually has a name like arunk's iphone).

There are other ways of doing it involving test flight and company certs etc etc but this is the most straightforward.",1526468613.0
kbcool,"Serves you right for clicking on ads :)

If you read their docs the styling system works completely differently to normal RN styles. Part of the reason I ditched Nachos UI so quick. Don't understand why these guys go off and rebuild something that works fine.",1526469135.0
filipef101,"plt you can use anything available natively with react native, including apple pay and google too",1526420849.0
filipef101,"all you need is this https://github.com/naoufal/react-native-payments

else this can be used for sure for subscription payments with paypal https://github.com/alanhhwong/react-native-braintree",1526420938.0
,"Apple doesn't require that you only use Apple Pay, but they do ""strongly encourage"" that you include it as an accepted payment method. Good examples are Uber and Lyft: you can use Apple Pay, but the default guided method is to store a credit card.

The only gotcha with subscriptions in iOS apps is that they require you to cover a pretty large number of contingencies: https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Subscriptions.html#//apple_ref/doc/uid/TP40008267-CH7-SW6",1526434585.0
kinwaa,"These look like unescaped html characters in the string. Can you try global function unescape()? 

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/unescape",1526390787.0
MarkOSullivan,"Yes. Our editing RN component was built with React Native and inserted as a React Native component within our existing Android / iOS apps.


Android: https://play.google.com/store/apps/details?id=com.shotscope&hl=en_GB&utm_source=global_co&utm_medium=prtnr&utm_content=Mar2515&utm_campaign=PartBadge&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1


iOS: https://itunes.apple.com/us/app/shot-scope-golf-performance/id1144077203?ls=1&mt=8",1526388039.0
huejackmon,"This is possible. There is no direct documentation, but the idea is relatively straight forward with a few tweaks here and there. There are some general drawback in that the RN codebase becomes a dependency for the Android/iOS applications. The idea is to modify the node\_modules path and any other reference to the RN application by shifting it up in directory structure. For instance, in a Podfile

`'React', :path => '../node_modules/react-native'`  becomes `'React', :path => '..js/node_modules/react-native'` 

This way you can create a RN codebase in a js folder, and a developer just needs to clone and build the RN project before the native app. This prevents a monolith codebase.  ",1526388268.0
BigDane1992,"I can only recommend using [ignite](https://github.com/infinitered/ignite). It's by infinite red and it really jump starts your development.  You get a ton of stuff already configured for free, the only thing you need to do is throw away some stuff you don't need. For me it often feels like going from plain ruby to something like rails, where you can skip over he boring parts while still being in controll of everything.",1526372109.0
saugoof,"There are a number of different ways to get started with a new project, which makes things somewhat confusing. But a fairly good guide on setting up your environment (which you probably already have) and creating a new project from scratch is here https://facebook.github.io/react-native/docs/getting-started.html",1526359105.0
arup_r,"I am now 2 days learning. I am also using create-react-native-app lib to init the project, following this [lecture](https://www.udemy.com/react-native-the-practical-guide/).",1526370763.0
danielkov,"Assuming you have node installed:

npm install -g create-react-native-app

create-react-native-app myApp

cd myApp

npm install --save redux redux-saga react-redux

npm start

To set up crash analytics and Fastlane, refer to the guides online. I recommend Sentry for error reporting, because there is no linking needed and as such, you can make use of Expo.",1526372023.0
filipef101,hey check infinite red ignite,1526382227.0
funkyfourier,"Have you tried using UrlTile? That also works with local files when prefixing the path with ""file://"".",1526377275.0
kbcool,"A liiiiiiiiiitttlllleee bit off topic.

Don't see any RN talks.

You also have a habit of spamming the crap out of reddit based on your history so I'd say you're a pretty ordinary social media marketer.",1526324091.0
RareProgrammer,"What does it mean?

It's in a Church or there's a Christian theme to it?    ",1526329134.0
jeevium,"By this year you mean 2018? We are not even in the middle of it, so hard to say from now :/

But for 2017, Vue was the most popular and Prettier made a lot of impact as well. Check out the JavaScript rising stars website:

1. [conclusion](https://risingstars.js.org/2017/en/#conclusion)

2. [most popular projects overall](https://risingstars.js.org/2017/en/#section-all)",1526646223.0
kbcool,There was someone on here asking for developers for something similar. You should take it down quick smart and charge him for it!,1526311742.0
fly_guy22,Can you post a github link so we can see what your doing?,1526335071.0
akie,You can store the user in the application state and then manage it with redux. ,1526320791.0
Jgfidelis,"I did a talk about it, you can see it here:

https://speakerdeck.com/jgfidelis/react-native-native-modules

The RN official doc is Ok as a starting point. Take a look at the references in the last slide. If you need anything let me know. 

Edit: to extend more on my answer

I'd say you need to identify which methods are going to be called on JS and define how to export them, what will be their signature. If they return something, what will their promise return.

If you already have a big app and will integrate this module into a specific flow, I suggest you implement an example app just for your bridge to facilitate testing and integration.

If you don't need to implement a view, your life will be 200x easier. The best way to learn is to look into working examples.

RNCamera module: https://github.com/react-native-community/react-native-camera

RNCamera example app: https://github.com/react-native-community/rncamera-example

Visa Checkout module that I implemented from scratch: https://github.com/entria/react-native-visa-checkout

Study the architecture and how things work. Takes a few days to get the hang of it, but when you get it, it makes sense",1526301906.0
kbcool,"I have to ask why you want to do it because taking a look at it briefly on github there's tonnes of existing RN modules that are basically almost the same.

It would also not be hard to implement from scratch in pure JS.

If you just want some experience in building bridges then just ask people here for a problem. I was bored one wet weekend and just picked up a request that someone was asking for here and ran with it.",1526311619.0
mescalito2,where is the source code?,1526296349.0
Jgfidelis,"Did you use apollo or relay for the frontend? If yes, why did you choose it?",1526302009.0
deadcoder0904,"That shit is dope. Made me comment which I don't do a lot :\)

Can you echo your \`package.json\`? Also how long it took you both to finish this app?",1526290255.0
QuietSearch,What backend did you used to store your data? And why?,1526290971.0
pelesenk,Why sign up only with Facebook ? :/ ,1526292890.0
boki345,"' Overall, react-native + graphql is a godsend combination'
Why is it a godsend? Can you kindly elaborate on this?",1526327073.0
jeevium,"I really like the app's website! 

Regarding the Google Play description though, you need to make it much bigger if you want to get organic downloads. Google Play allows for 4000 words in description and it is being evaluated by Google's ASO algorithms ",1526645889.0
inform880,"I can answer this more in depth tomorrow, but short answer: no. I've had this same issue before.

Basically your best bet is rewrite the app unfortunately. ",1526272444.0
neoisgeek,"You can.

[https://facebook.github.io/react\-native/docs/integration\-with\-existing\-apps.html](https://facebook.github.io/react-native/docs/integration-with-existing-apps.html)",1526296419.0
andre_scalco,What are your computer specs? This could be related.,1526272156.0
chimpocalypse,Took my 2012 MacBook Pro about an hour to publish. Takes my 2018 iMac about 2 minutes.,1526292749.0
edzillion,You could try adding `window.LOG_LEVEL = 'DEBUG' to the top of your index.html or app.js and see if is shows you what is slowing the build down.,1526286212.0
geekygujju,It might be because you may have mistakenly saved the same file at two different paths in your project folder. You are making changes in the one that is not being called in the View and so the changes are not being reflected. Look for duplicate file in your project folder.,1526264803.0
epic_awesome,"Have you tried deleting the app from your device?

And also try starting the packager (before you build) using 'yarn start --reset-cache' or 'npm start --reset-cache' to force the bundler cache to rebuild.",1526276199.0
prillian5,"Switch off the external JSDebugger und you may see red Screen of error.

Have this since my current Project, too.
Seems to be an Bug, that error (mostly Syntax error) is not shown on debugger, AND app is loaded from cache.
",1526279954.0
adrianosbr,"I’ve never used the Spotify API in a mobile app but in the browser it’s fairly easy to use. The user will be redirected to the Spotify website. After he/she logins, he/she is redirected to the webapp, with the necessary token in the URL. This kind of authentication can’t be refreshed and lasts about an hour. There is a more secure and “refreshable” authentication method, which I recommend, that will require you a server. 

But... AFAIK, Spotify’s mobile SDK includes authentication methods that are appropriate to apps. There is a React Native module for it.",1526250662.0
etregoning,"Will you be covering user authentication? I'm having a lot of trouble finding a good solution for this. It's hard to find any libraries for this, and I feel like if I wrote it myself, I would leave a lot of security holes due to lack of experience.",1526255622.0
timee_bot,"View in your timezone:  
[Tuesday May 15 at 10:30am PT][0]  
[0]: https://timee.io/20180515T1730?tl=I'll%20be%20live%20streaming%20on%20Twitch%20%22Building%20a%20real-world%20React%20Native%20App%20in%2060%20minutes%22%20on%20Tuesday%20May%2015%20at%2010%3A30am%20PT.%20https%3A%2F%2Fwww.twitch.tv%2Fdabit3


*****

[^^delete*](/message/compose?to=timee_bot&subject=delete+request&message=%21delete+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkeXhjMmZvIiwiYWN0IjoiZGVsZXRlIiwib3AiOiJoYl90b19tcyIsImlhdCI6MTUyNjI0Mzc4OX0.jEAfyTF76EELim6X-VcbXgy8AMq9kx9AlZ4V_FAliPg)
^^|
[^^reprocess*](/message/compose?to=timee_bot&subject=reprocess+request&message=%21reprocess+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkeXhjMmZvIiwiYWN0IjoicmVwcm9jZXNzIiwib3AiOiJoYl90b19tcyIsInBubSI6InQzXzhqNnJoNCIsImlhdCI6MTUyNjI0Mzc4OX0.wQi54h0egtC2mGYetdk-iJAOBxxq_TV2NAQWI9-QpGc)
^^|
[^^ignore ^^me](/message/compose?to=timee_bot&subject=ignore+request&message=%21ignore+me)
^^|
[^^help](https://www.reddit.com/r/timee_bot/wiki/index)

^^*OP ^^only",1526243789.0
herjin,"Dope, can’t wait to sit down and check this out",1526252576.0
Calbesz,Will the VOD be public? Just curious because I am interested but not certain if Im free when it will be live.,1526266307.0
sesamerox,i am looking forward to it!,1526290422.0
kbcool,"I'm not following....

Your clients didn't pay up and now you're revenge porning this?

I'm not surprised. It's not exactly like the designs on dribbble.

J/K - tell us more?!",1526242425.0
prillian5,Maybe like this: https://github.com/transistorsoft/react-native-background-geolocation,1526247757.0
SizzlerWA,"Interesting. But why not just allow users to go anywhere regardless of Auth state, but if they try to do something that requires Auth (e.g. tap a comment button, try to follow another user, etc.) then pop up a modal telling them they need to login/sign up to do that thing?",1526231424.0
unplugged_chump,Thanks for uploading this. I'd like to understand how to embed a tab navigator in a stack navigator. ,1526145445.0
excs,Awesome video. Didn't even realize a V2 came out...,1526162448.0
anonymousmouse2,Dead link,1526170919.0
kbcool,"I hate react-navigation. That said I still use it.

This looks like V1 still. Don't see anything different. Not that I've been tracking what's new in V2 but looks the same.

I do know they horrifically break it every minor release because most javascript developers don't seem to be able to work out the concept of backwards compatibility.",1526141803.0
dduko,contact expo support/forum. they are nice people they will help you.,1526106036.0
Jgfidelis,Very good developer or not expensive. I suggest you pick one...,1526073619.0
alien3d,My Suggestion. hired native folks for long term . Maybe got good developer here. Find local developer but for sure ain't cheap. ,1526098612.0
dduko,"my former boss posted a job on react native group on facebook looking for experienced developers. he got replies mostly from indians, but the job is not remote lol. i bet you are going to get similar replies.",1526105208.0
engnr,"Everyone wants a really good developer. You’ll get what you pay for and that’s a really cheap developer. If you’re lucky you’ll find some poor unfortunate who doesn’t yet understand what they’re worth. However, that will be a short lived business relationship.

If you’re honest about the consequences of your tight budget, you can structure your delivery process with extra QA effort and fallback plans in case of failure.

You may find that trying to economize arbitrarily on your development costs more in the long run. ",1526126099.0
meanJim,It is not absolutely required that you disclose the modules you are using in your project.,1526071973.0
NaveNocab,"TL;DR: Don't stress, it's just if you are bored or really successful.

Hey sorry about that, I just saw it as a cool way to make the app have more content. 
This seems to be a pretty thorough look at what is legally required: https://www.quora.com/Do-I-have-to-indicate-third-party-software-licenses-used-when-creating-a-mobile-app 
But if you are ideating and putting out beta builds you shouldn't stress. People in the community are pretty understanding and know that this isn't an indie devs top priority. 😁 At the very least you technically need to attribute **Apache 2.0** which not too many libs use. Expo is MIT and so are most libraries. The most binding I can think of is GPUImage but even that is BSD. 🤷‍♀️",1526072442.0
davidpaulsson,"Yes. You need to include a page like that if you're using a pkg with a license that says so. Check out tldrlegal.com for information about different licenses. 

But it's pretty clear. MIT for example: ”You must include the license notice in all copies or substantial uses of the work.”

So whether you include it or not is ofc up to you, but your obligated to do so if you wanna follow the law. And if you expect to get VCs involved, note the legal part of any due diligence will except you know you're way around any third-party licenses you're using. ",1526236910.0
Bamboo_the_plant,"Pretty sure the iOS App Store review guidelines require that you list licensing information of all third-party tools used. Don't know why so many people are insisting that it's ""only for the big guys"". In particular, you really should understand whether you're using any GPL projects before you publish, and whether you're allowed to monetise the packages you're using, but also you should also attribute the hard work that other communities have unwittingly put into your app!

I also refer to licence lists to figure out how software was developed (and thus how I could reproduce a component like a sidebar or a particular animation effect).",1526476826.0
vivqu,"Hey all, I'm also the author of the article so feel free to ask any questions you might have!",1526063811.0
kbcool,"I'm guessing you are one and the same person who wrote the article and works at Pinterest yeah?

Can I invite you to ask the community here if they have any questions and be free to answer them?

Coming from a background personally of working for large tech companies I know how hard it is both politically and technically to make a move like this so I want to congratulate you and the team.

Stick with it, before you know it you'll be taking less than a day to produce the same outcome which is something I would have told you was impossible a couple of years back.",1526063249.0
doppio,I'm new to the world of React Native and am also looking into learning Flutter as an emerging alternative. I'm curious if your team looked into Flutter at all when you decided to try React Native?,1526078967.0
LiMing3,"In your reducers you’re overwriting your previous state with your initial state, unlikely that’s what you’re going for and if it is you shouldn’t bother spreading the previous state ahead of your initial state.

Create a stores folder and put your reducers, actions, etc in there and organise them by store. For example an auth store would have an actions.js, actionTypes.js, reducers.js, middleware.js... etc etc

Initialise firebase outside of your component.

In components where you’re not using any lifecycle methods you ideally want them to be SFCs.

You don’t need to pass props to super() *unless you’re using this.props *inside the constructor*.

You don’t even need to use a constructor 99% of the time. Use class properties.

Use class properties with arrow functions to avoid having to bind functions in the constructor.

Avoid defining variables and functions inside your render method, define them on the class component.

Personal preference, and I haven’t used it in a while, but Native Base is not that great IMO. Bloats JSX a lot, the layout system is gross and a pointless attempt to simplify flexbox, which really doesn’t need simplifying, plus you’ll end up fighting with and wrapping their prebuilt components which defeats the point.",1526044376.0
laggySteel,"need your code review guys. This is my first ever React Native app using expo. + Redux + Firebase auth + routes-flux.

help me improve https://github.com/steelx/react-native-redux-app",1526036870.0
laggySteel,"Sorry. Here is the repo https://github.com/steelx/react-native-redux-app
",1526041564.0
RareProgrammer,"\(new to react native\) but do you need to import Roboto?

Won't it just be used by default on Android since it's the native default font?

And likewise, by importing it won't it end up being used on iOS which is probably not desirable vs. their default font?",1526073407.0
PmMeUrCreativity,"I don't know if this is the best way to do it, but this was my approach recently. Set your line height differently from .iOS.js and .Android.js

For iOS line height is about 1.3 times of the font size. So if font size is 16, then line height is 20.8. For Android it's about 2x, so 16 font size will be 32 line height.

It's not absolutely perfect, but has worked for me",1526057177.0
brafique,"If you want to build up your portfolio I would start looking at [this list](https://github.com/toddmotto/public-apis) of free to use API. I'm sure you'll find something that will interest! A year ago I decided to build a Hacker News reader app in RN to really understand how this framework works. I've been a fan ever since.

Good luck!",1526031488.0
kbcool,"Post your github! I'm sure people will be interested.

I've got a project where I need some 3d models rendered in a scene in an app. I'm kinda curious if it can be extended to games and what the performance like is on different devices. Wanted to try it myself but I'm snowed under with other stuff. Happy to explain if you want to PM me.

AR/VR stuff is so hot right now it'll prolly look good on your resume. It's only one step off AR since most stuff needs to be rendered 3d onto a camera background.",1526058462.0
Bamboo_the_plant,"Consider contributing to:

https://github.com/ptmt/react-native-macos",1526496752.0
Jgfidelis,"I did a talk about native modules (also called bridges) here in São Paulo, Brazil a couple of months ago.

The slides include the basic architecture and code examples for almost every steps. The bridge used is the react-native-camera package (https://github.com/react-native-community/react-native-camera).

Thanks and hope someone finds it useful.",1525987060.0
anuragdadheech,Only available in US app store. Why dude?,1526014531.0
kbcool,"Not development or RN related at all but...

I wanna know how the heck you get reviews to show up in the itunes store, especially for a brand new app.

I have an app with a load of reviews - comments and all and they don't show up in the app listings. You can see them in itunes connect but users don't. Thousands of downloads too. Tens of thousands.

I think itunes is busted.",1525986845.0
geirman,"really fun premises, but not as funny in practice unfortunately. The app is well done. Some of the design looks rough, but that also adds to the charm. Animations are great (smooth), though they jump around in unexpected ways when adding my answer. 

I definitely think you have the beginnings of something really cool. Keep working on it. ",1526057175.0
Ridwan232,"Hey, That's great!

I too am getting into React-Native development. I'm already developing an app at work, but want to start using it for some personal projects too.

Would you mind me asking just 2 things?


Did you use

    react-native init

or 

    create-react-native app

And why did you choose whatever you chose? I am trying to decide between the two, but I heard you can't use native modules if you use create-react-native app, and am wondering if there would come a time when I would need them.

And secondly, 

What are you using for the backend ?

Thanks and good luck with all your apps!

",1526019285.0
derGropenfuhrer,"Feedback: 

- Lack of google sign in is a big negative; I gotta create a new account to use your app = hmm maybe this isn't worth the effort 

- Text on sign in page is small 

- I answered a question and the buttons at the bottom are ""Skip"", ""Choose Your War"" and ""Rules of War"". So I hit ""Choose your war"" thinking that would allow me to submit my answer or something but instead it took me to a war where I'm choosing answers. Where did my submission go? It was pretty good! 

That last sequence was confusing. 

I like the color scheme. Good UI, it's clear what I can click on on a layout. 

You might need to track which openings I've voted on. I got the ""terrible campfire story"" question twice in a row. ",1525987257.0
kbcool,"Explanation or you just going to throw it over the fence and hope the dogs bite?

Considering it looks like it's your project I'd say it's the latter as there's no documentation on your github repo either.

Also: WTF is upvoting something with no info and no context? 
",1525975175.0
filipef101,whats the major diference from react native everywhere?,1525984051.0
kbcool,"https://www.npmjs.com/package/react-devtools

Install that sucker globally and run react-devtools

Then bring up the inspector in react native (ios simulator or android) and start clicking away. Or just do a free text search for your component name.

You can do limited run time changing of styles etc. Have to say I don't think it's the tooling's fault but you can't turn flex on and off for example. Padding, colors, borders, margins etc etc all work fine though. Saves me a lot of time.",1525974927.0
LiMing3,"Nuclide IDE has an inspector. I’ve not used it but it looks like what you’re asking for

https://nuclide.io/docs/platforms/react-native/#element-inspector",1525965337.0
josht,Are you in any way affiliated with Instabug?,1525959679.0
Fingal_OFlahertie,Does this shake conflict with Expo's?,1525963534.0
kbcool,"It's still young.

You have to filter through the noise.

Case in point is this forum...every 2nd post is a library to do something that once you have spent the time learning RN,  modern javascript and the related frameworks you find trivial. A learner ends up installing fifty npm packages then once they're up to speed unwinding the mess they made.

Every third post is a half baked native integration that suits the author's purpose but isn't a full solution (I'm also guilty of unleashing these myself).

What I can do without fear is point my finger at Facebook and say you have to listen to the community, let them help set the direction. There are so many features that really should be core to the platform that aren't. Camera functionality is a prime example. Bug fixes and push notifications go into black holes. 

Facebook themselves produce functionality that only works on iOS or Android which is against the spirit of the product. I understand they have their own agenda but please don't unleash something so cool on the world that you can't back up!

I hate to say this but Nokia and Microsoft's history can teach Facebook a lesson on how to produce a platform that suits you and customers equally.",1525891625.0
Jgfidelis,"On the RNCamera repo, the biggest problem that I see is:

- most RN devs are ""afraid"" of native code, having zero experience with Xcode/AS. For example, they open a lot of ""stupid"" issues and we have to make guides at the docs, of things that should be trivial (just open Android studio and follow what it says!). So they open issues but have 0 ideas of how to help, debug and solve the problem.

- People are often only comfortable sending PRs for iOS or Android, never for both. We have some stuff that right now is Android only or iOS only because of this. When I was sending PRs to the rncamera, I did my best in trying to send prs with feature for both platforms, but most people won't :(

- If you are a good Android dev, we need help, thanks :)",1525907021.0
dduko,"It's not just third-party, React Native itself is the problem. I don't think I have seen a core contributor even address an issue on Github. Also if you read the release notes, no reported issue is ever fixed. In fact the number of valid issues might actually be 3k+ if they were not closed for being ""inactive"".

Check Flutter repo. Google devs are very active in addressing (and fixing) issues, they would even say ""Thanks for reporting"". I think React Native being just a side project for Facebook (and apparent aversion to reported issues) is hurting quality and we all suffer for it.",1526019574.0
Rizens,Happy to see I'm not the only one who feel like the RN ecosystem is very atomized and not enough professional at some point.,1525889190.0
fuck_with_me,RN is not a good place to start. You need to start with the basics. I would suggest learning JavaScript and the basics of web development first.,1525890405.0
TexMax007,"If you truly “know nothing about computers”, it would be a disservice to simply point you to a React Native course. You really need to know the basics of computer science before you can be affective in any language.

I’d highly recommend googling for introductory computer science courses and build out from there where it naturally leads you, as opposed to jumping into the deep in first; you’d just drown.

If you’re dead-set in React Native, learn JavaScript first. Good luck!",1525890527.0
enve0123,For basic computer science theory these online courses at cs50 from stanford university are great https://www.youtube.com/user/cs50tv,1526215405.0
rco8786,"Per other posters, RN is not the right place to start if you are truly new to computers. Find a boot camp style course on just JavaScript first.  ",1525925593.0
footballbloodyhell,"JavaScript, HTML, CSS all are the tiny subset of React native. Don't waste too much time on it. it feels like learning to swim by studying human anatomy and fluid dynamics. Sure, they both play a huge role in swimming, but it’s more fun to just jump in the pool. Go and Jump to React Native man, cheers.",1525956476.0
ogv11,Take a look at react native paper ,1525885632.0
milkysniper,"What you’re asking for is a difference engine that’s running constantly while you’re typing, which I’m not sure is a good use of your computer’s resources

I think it would be better to just remember the general idea of what you’ve written and keep it DRY",1525885176.0
kbcool,"You? Probably not. Too many similarities in code that can occur at different places. I would say lots of false positives generated by this.

If you want to know if it's like something else out there I suggest Google. It's pretty good as far as searches go.",1525885263.0
mierz94,Not really but you can keep a library of components  using StoryBook. Rather than trying to remember everything you can use it to document different variations of components. I highly recommend it. ,1525886319.0
SizzlerWA,Google?,1526232374.0
kbcool,Wrong place. Please spam elsewhere.,1525977780.0
kbcool,"I spent a good day messing around with this and the answer is as of two weeks ago there's nothing amazing.

react-native-notification works but it's a PITA to setup.

Limitation on Android is that you can't react to the notification based on the content. Eg open up a specific screen or message. Good news is it supports pretty much everything you would hope for - schedule, cancel, custom icons etc.

Unless you roll your own you're stuck with it for now. ",1525885575.0
coolnat,"https://github.com/zo0r/react-native-push-notification

I’ve been using this for awhile and have had no issues. It isn’t too tough to set up and local notifications can include data which you can use to navigate to a specific screen.",1525886467.0
kbcool,"Why don't you share a bit more here about what you're trying to do rather than bombing us with a request and an email address.

I'd say though if you're after someone half decent to guide you through a project you need to fork up decent $$$ because anyone half good is commanding big bucks already.",1525885850.0
Unforgiven-wanda,"No need to offer money for this. Just go at it at your own pace, and when you run into a specific issue post it either here or on Stackoverflow.
Feel free to PM me, too. I don't mind.",1526196118.0
v1nn1k,Firebase,1525894409.0
AgiIity,"If you’re developing with Expo, they have documentation on handling OAuth with Facebook and Google. 

https://docs.expo.io/versions/v27.0.0/sdk/facebook

https://docs.expo.io/versions/v27.0.0/sdk/google",1525885146.0
kbcool,Shirt on pic checks out.,1525885942.0
demoran,I'm using react-native-app-auth.,1525909989.0
kbcool,"I'm intrigued. I haven't had the time to check it out but have found redux-forms a PITA to integrate with RN. I still haven't managed to get the next input to focus yet which is a nightmare for users trying to fill out large forms in apps.

Apart from that what's your thoughts of the advantages of your library vs say redux-forms or other solutions? You must have had a motivator.

Also does it do other input types other than text and a date picker?

",1525880844.0
filipef101,"Great work, hope the support for it continues! hope to use it soon!",1526052450.0
ibiwan,"Hey!  I'm interested in using your library, but my first project happens to need a datepicker.  Has there been any further progress with that part, by chance?",1537684143.0
,"I managed to block your adblock blocker, good day.",1525863886.0
,[removed],1525856362.0
rooob91,This is pretty cool!,1525871854.0
csgonutty,"Try changing your handleEntryClick method from this

handleEntryClick() {} to this
handleEntryClick = () => {}.

In your current setup, your method would need to be binded. Change it an arrow function and I think you'll find some success with it",1525818152.0
yz4now,"Does your **_renderEntry** method have context of *this*?  (Aka are you binding *this* to it in your constructor).  If not then when you are passing **this._handleEntryClick** you are just passing undefined because the method can't see that method on the class.  

I'd also recommend directly passing the method and not wrapping it in an arrow function.  This can cause performance issues...

Like so...
onPress={this._handleEntryClick}",1525808816.0
TexMax007,"I'm not positive (as I'm pretty new to this myself), but try this:

    <TimeEntry key={details.id} entry={details} onPress={this._handleEntryClick} />

In general, you should just be returning a reference to a function that you want to execute right, so for example you could also change this:

    <Ripple onPress={() => {props.onPress()}} rippleColor='#960000' rippleOpacity={0.99} rippleDuration={300} >

To:

    <Ripple onPress={props.onPress} rippleColor='#960000' rippleOpacity={0.99} rippleDuration={300} >

Hopefully that works!",1525808947.0
deadcoder0904,Nice Sample ;\),1525805142.0
kbcool,Or you could ask in this forum for free! ,1525812508.0
Rabur,"You are aware this is like 4 lines with recompose, right?",1525801643.0
kbcool,"A good example of why using HOCs like an inflexible nazi is not a good idea.  

Change your ""dumb component"" into a class and give it state. About five lines of code and you don't need components like these. Even works with your HOCs.

I'm giving ""props"" to the original author for this one but most importantly im also giving props to people who read this.....(yes you'll get the joke if you're experienced with React).",1525813136.0
Jgfidelis,"You are not unsubscribing on your componentWillUnmount, won't this cause memory leaks?",1525870836.0
Londomain,"Assuming you want the space opposite the third child to be blank but equal in width:

    <View style={{flexDirection: ‘row’}} >
        <Text>Child 1</Text>
        <Text>Child 2</Text>
        <View />
    </View>

Edit: sorry if formatting is off, on mobile ",1525753858.0
danielkov,"When in doubt, try the [Yoga Framework playground](https://yogalayout.com/playground/). Yoga powers the flex properties of RN components and as such, you can actually export React Native code from the playground, if you manage to get the layout you want in the editor.",1525760622.0
kbcool,"I'm late to the party but what you want is a bit fuzzy for any kind of layout engine. Flexbox or otherwise. You're missing info on what center and right means for example. Is it horizontal or vertical or both?

What you can do is pin your item2 to the right or left and center the item1 quite easily but when item2 or 1 gets too wide what do you expect to happen? 

You can use flexDirection: 'row' and justifyContent: 'center' as per https://facebook.github.io/react-native/docs/flexbox.html

for item1

Then for item2 you can set position: 'absolute', right: 0 (or left) to pin the other one to the right or left. To achieve the pinning to the right you may need to use a negative margin same as the width of the pinned item but like I said your question is vague.

As others have pointed out there's other ways of achieving it but if you want a good answer you're going to need more specific rules or even a diagram as there's many ways of expressing what you asked for. Many may not be to your liking.",1525813821.0
NikolaiStoilov,Use an empty view as 3rd child and have the parent with flex direction of row? I'm a noob myself :) ,1525749250.0
thetinygoat,Use align self on child elements,1525754404.0
RockMeetHardPlaces,"wait, your boss was like ""yea sure, rebuild all the apps in that thing you don't know"" ?

I don't disagree with the end decision, but that seems foreign to me.",1525733952.0
chimpocalypse,"I learned React Native from scratch with this course: https://www.rallycoding.com/courses/the-complete-react-native-and-redux-course/ plus Udemy are always having sales so you can usually get it pretty cheap.

Previously I was building apps in Actionscript and had only minimal JavaScript experience but there's enough in that course that I've built a moderately complex React Native/Redux app over the last couple of months.",1525779069.0
mescalito2,https://cs50.github.io/mobile/,1525729751.0
DrudgeBreitbart,I bought the course from Wes Bos. His courses are awesome. He keeps them fresh and up to date too. ,1525742383.0
alien3d,"If you're building simple app with no third party integration..  Go for it, if need to have third party integration like PayPal, Alipay.. Forget about it.. Official API not existed . ",1525761941.0
ClayMitchell,Triple list?,1525710164.0
TheJulian,The title does nothing to tell you what the focus of the article is so for  the lazy it's about the state management options in React (redux etc) and uses a todo sample app implementing each of the various options.,1525701364.0
election_info_bot,"I haven't automated with Appium, but after `npm start`, I open a new terminal window and run `react-native run-ios`.

It's weird that it's running a boilerplate instead of the app you expect, though. I'd expect npm start to do some stuff in the terminal and no simulator to launch based on what you describe.",1525658022.0
hello_Mrs_Cumberdale,"The Galaxy S7 has [way higher]( https://www.androidcentral.com/samsung-galaxy-s7-specs) resolution than that, but to answer your question, React Native uses density independent pixels, which is an attempt at making sure things appear the same size across different screen dimensions.

What this means is that a pixel isn't necessarily a single physical dot on your screen.  If it was,  ""10px"" border would appear tiny on a retina screen and big on low resolution device. Rather, it's an abstraction based on screen size and device resolution, and the end result is that the 10px border looks about the same on both devices.",1525658132.0
LEO_TROLLSTOY,"[This](https://juiceboxinteractive.com/ideas/a-pixel-is-not-a-pixel-designing-new-generation-mobile-devices/), basically",1525694104.0
boki345,Really desperate for help. Any benevolent soul out there can help me with this issue.,1525734815.0
TomMahle,"I believe you still need to dispatch your thunk. In your component, pass the result of the call to saveRisk into this.props.dispatch.",1525617036.0
fuck_with_me,THIS IS A REACT NATIVE SUBREDDIT,1525625017.0
demoran,"`@connect(state => ({risk_level: state.risk_level.risk_level}, {saveRisk}))` seems to be the issue.

Connect takes two parameters: mapStateToProps and mapDispatchToProps.  I think you probably arleady know this, because you attempted to use `{saveRisk}`.  But look at your parenthesis.  Honestly I'm not sure how that syntax is even valid.

Anyway, you should move the second to last parenthesis before the comma, then you'll auto-dispatch saveRisk.",1525650614.0
prillian5,"Nice that you share this, 
...but I use phpstorm for development, and there is an simple and easy npm-plugin which allow you to run each scriptentry you've created in your package.json.
",1525609403.0
fupower,"I think you should pick RN because moving from Python to JS is not painful, also Flutter still very early",1525582619.0
MrNickel187,"I've been using FireBase very successfully.

There's a well maintained library [https://github.com/invertase/react\-native\-firebase](https://github.com/invertase/react-native-firebase) that you can use to tie in.",1525581933.0
Tall-Paul,In the same boat. The Microsoft app center looks promising. Watched a talk from last year about it and it looks pretty slick. ,1525575989.0
1Gijs,"https://github.com/geektimecoil/react-native-onesignal

Easy to implement, but not always very fast in delivery.

https://github.com/wix/react-native-notifications

More versatile (also local notifications).
",1525601047.0
obkenobi13,Stephen Grinder‘s courses are superb.,1525561041.0
TexMax007,"They’re both great. I’m going through the practical one now, I’d highly recommend it.

If I recall correctly, the other one has an outdated navigation section that might not work but I didn’t get to that before I switched to the practical guide course.

Can’t go wrong with either instructor to be honest.",1525570666.0
PoorManJack,I can vouch for stephens course,1525591577.0
,[deleted],1525629533.0
MadSchnauzer,Stephen and Maximilliam are the best Udemy teachers i've seen. Just go for it.,1525706746.0
Drunken__Master,"You're being given bad advice here, most of Stephan Grider's courses are fantastic, but his React Native course is now outdated and you won't be able to complete the project. The navigation library he chose was deprecated, copying the projects exact package.json won't work and there's not enough help in the comments section to get around the issue. You should go with Maximilian Schwarzmüller's course. ",1525612175.0
hatepoorpeople,Is this using React XP?,1525551392.0
BuggerinoKripperino,Super cool! What's the difference between this and React Native Web implementation wise? I've made a [react native web starter repo](http://www.github.com/joefazz/react-native-web-starter) which provides this functionality shown ootb.,1525601985.0
ECrispy,"Can I add native components to this, or is that not possible since its using Expo?",1525580430.0
doko2610,"""Native""

Okay.... ",1525583600.0
AgiIity,"Getting expo set up is a must nowadays, lets you use your physical device or emulator to build apps you write. It also comes with a bunch of useful tools/ui for your app. 

Setup can be found here:
https://docs.expo.io/versions/latest/",1525499360.0
wengemurphy,"If they'll be relegated to that thread and not allowed as their own submission, yes. Otherwise, no thanks.",1525470256.0
yarism,My favorite posts are usually those; look what I created. It gives some inspiration and it’s great if they share what packages they use. I don’t go into this sub that often so if it was sticked I would miss it. So I don’t agree but I can understand if people get annoyed too.,1525508862.0
Noitidart2,"Each made with react-native post I saw was very good. I asked questions how they did something and learned a lot. I think it's better to not pin a topic. Awesome chance to ask questions will get lost.

Maybe the ""made with react native"" is only for non-authors.",1525534237.0
jpmsantana14,"Awesome! Thank you!
",1525460301.0
creambyemute,Did you already try to do a ./gradlew clean in the android folder and then run the app again?,1525448356.0
Manishalexin,"Try doing react-native git-upgrade
And if doesn't solve, just open it up in android studio once and compile it. It should work from there onwards. ",1525587460.0
JS_PY_and_Crypto,I wish this existed when I started my google sign in project. I had an extremely difficult time getting Google Sign-in working.,1525441138.0
fuck_with_me,"This is a pretty shitty article, and basically none of these things are specific to RN.",1525433038.0
cloudprogrammer,Working url: https://blog.bam.tech/developper-news/5-tips-to-improve-performance-react-native-application,1525418452.0
PoorManJack,"Uhm, are you being paid by someone else to build this app? How did you manage that when you have no experience? ",1525404425.0
milkysniper,"What you’re asking to develop is generally a few hundred thousand and a handful of developers, including devs who understand RN well, and some with native app experience, as well as at least one with CI/Backend experience 

You would likely need at least 2-3 devs, a designer, a production manager, QA and a ui/ux person

You could cut that down some if you skipped some design or ux, and outsourced the qa

Still, for a custom build with user management you’re looking at a pretty penny",1525414842.0
mostlytoastless,"There are things to help, but nothing I've seen besides Expo that just makes it ""easy"".   

There are cloud build services like MS App Center and Bitrise which you could use, but for dev that would just introduce another step between coding and running.  You could also do the same thing with docker to make a build container like they use (potentially run by jenkins), but again .. extra step for dev.  

Although ... once the native build is made and installed, there is some way to make it load the JS bundle an external location like it does for debugging.  That's basically what expo does I think.  There is also MS CodePush for loading in updated JS, so you could potentially update that way without rebuilding or having the full dev env, but that doesn't really help dev so much as OTA app bug fixes.

",1525393266.0
ExtremelyQualified,"
React Native has no concept of semantic text. Every text is just text with a style. Make your own superscript component based on <Text>, then reuse it whereever you want.

<Text>Then you can <Sup>superscript</Sup> all day</Text>

",1525380934.0
,[deleted],1525379535.0
Londomain,You’ll need to move any server related code to a separate backend repository and host it from there. What sort of data are you trying to access that requires you to host it on your local machine?,1525372013.0
MiguelAZK,"What i can undertand is you are using expo for the app and node for the server side, you should separate the server side from the app and compile the app to generate an apk or ipa file so you don't have to use the expo server to run the app. And upload your server side running in node to heroku or any server you would like to use.",1525373311.0
demoran,I don't quite understand what you're railing against.  Redux is state management.  Business rules and databases don't really factor into it.,1525350215.0
fuck_with_me,Check out [react-native-view-overflow](https://github.com/entria/react-native-view-overflow). Made specifically for this reason.,1525344602.0
eplawlessusa,"Yep, unfortunately: https://react-native.canny.io/feature-requests/p/add-overflow-support-to-android",1525335413.0
Noitidart2,Yes this is a lib its been around. Are you sharing because there is some new development in it? I would love to know if that's the case. I checked this lib out a few months ago and would love to hear whats new.,1525336848.0
ibanb,"I love your tutorials, nice job and thanks a lot!",1525726392.0
uuu77,"You cannot do this on iOS, I believe it’s possible on android but you’re going to have to write it in java not react native, unless something like this works https://github.com/liuhong1happy/react-native-wallpaper-manager

*you can do this on iOS , but they will reject it from the App Store ",1525273345.0
jaycgould,"Yeah I’m not sure about leaving it playing when the app is closed, but for making animated backgrounds I suggest the Lottie library by Airbnb. They allow you to export animations from sources like AftetEffects. They look really good 😊",1525324815.0
LEO_TROLLSTOY,This article gave me cancer. Shame on you,1525277738.0
arunkmoury,React Native is a complete framework to develop native app. I don't think only React.js can create any mobile app without React Native.,1525249484.0
hamsa_hiennv,"React Native, ReactJS is for website not for mobile apps. Also, React Native based on ReactJS. So all of them are the same, just different in view.",1525257447.0
unpopularOpinions776,think your site is broken,1525482469.0
lisamarilyn8,"thanks for sharing
",1525246497.0
Buliam,If you like you can check out the source code here: https://github.com/jbkuczma/NBAreact,1525204272.0
favaron88,"Huge nba fan, this is a sweet app. Will be my companion the rest of playoffs. Excellent work! Keep it up.",1525229831.0
TheFutureIsNear,App looks great from the screenshots! Unfortunately after downloading it keeps crashing so I’ll keep an eye out for an update!,1525242026.0
Noitidart2,What lib did you use for the graph?,1525534416.0
deadcoder0904,"Nope I don't know what issue you have. I never encountered this one. You can try filing issue on that repo if anyone has encountered the same. I have made Admob repo with Expo ( https://github.com/deadcoder0904/expo-google-admob )

Take a look if you are doing something else. With or Without Expo the code remains the same for Admob at least ;)",1525200301.0
kbcool,TL;DR - use flex where possible - use percentages where that doesnt' work.,1525194668.0
huejackmon,"I would take a look at this example by Expo, [https://github.com/expo/examples/tree/master/with\-facebook\-auth](https://github.com/expo/examples/tree/master/with-facebook-auth) , that performs Facebook authentication. I believe it is the same OAuth2 protocol for Instagram. The idea is the AuthSession \([https://docs.expo.io/versions/latest/sdk/auth\-session](https://docs.expo.io/versions/latest/sdk/auth-session)\)  handles the redirect workflow and is run on top of the web browser.  ",1525179189.0
Noitidart2,You should use deep linking. Here is an instagram API thing i made as a demo - https://github.com/Noitidart/InstaLikes/tree/master/instalikes -,1525187012.0
codyswann,"Hey there - both are possible. Shopify exposes its payment API. 

You can also accept payments via Stripe and then create the order in Shopify and use the API to mark the order as “paid”",1525171056.0
teiamt,"However you end up doing it, you should implement some sort of two phase transaction, otherwise you risk taking money without a record of the order.

1. record the order with payment outstanding
2. request payment
3. update the order with payment taken
",1525174214.0
kbcool,"Hey mods! Can we pin a ""Show me your app"" thread like /r/startups so we're not flooded with ""this app made with react native"" threads because they contribute nothing to the discussion unless there's an article with it about how it was made or an AMA thread.",1525167886.0
stuntmanmikey,"I can give some more useful advice, I've successfully implemented this pattern in a production app:

You really want to expire the access token AS SOON AS possible. I'm not sure what your app does, but to me 2 hours seems *really* long to expire your access token. In our apps, we used Fabric to measure how long users were maintaining active sessions. We discovered that they were only using the app for a few minutes at a time (these were fitness apps used to book personal training sessions in a gym). So we cranked the expiration time for the access token down to like 5 minutes. The reason for that is if someone WERE to get their access token, if your expiration is set for 2 hours they could go in and do some damage to your database with tons of API calls for a few hours (but again, I don't know what your API does so that may or may not be a concern to you -- just something to think about).

Another thing to note is you shouldn't **ever** persist the access token. Its okay to put it in your Redux store during the user's session, but it should not be stored locally and should not persist across app launches. What you want to do is persist the refresh token, and at app launch immediately check for a refresh token and go and get a new access token (that only lives about as long as an average session time for your app). So every time someone launches your app and is logged-in, they'll be working with a new access token, generated from their persisted refresh token (which we never expired -- we removed from the user's device on logout).

As far as *where* to store your refresh tokens there are a couple opinions on that, but we used [React Native Sensitive Info](https://github.com/mcodex/react-native-sensitive-info), which gives you an abstracted API for safely storing things.

ONE more thing to note, I'm not sure what your backend is but if at all possible you should use different salts on the server for generating the access and refresh tokens. We had issues with this on Node + Passport + Nest so we ended-up with the same salt, but if at all possible you should use 2 different values.

Hope that sheds some light on the subject for you :)",1525187094.0
kbcool,"How is it a security risk? 

You're handing them out to the device in the  first place so what difference does storing it for a bit longer make? 

If you need so much security don't let the app access the server at all. In fact lock the server up in a bank vault with no internet, that's the most secure. </end sarcasm>

You're ok to use asyncstorage. It stores data in the app's private data directory. It's possible to find if the device is rooted by another process but I doubt your app is that important people are going to be writing software to try and intercept your JWT. If it is then you shouldn't be asking /r/reactnative you should find a security expert.",1525167693.0
demoran,"Sounds like you need professional help.  Find a good developer and keep him on staff.

You're out of your depth.",1525351124.0
Fossage,"We use Bugsnag. We initially chose it because it was one of the few services that had React Native integration, but I think that has changed since then and there are more options now. 

Our experience with Bugsnag so far has been fantastic. We use it both in our RN client and on our Rails backend. Both have platform specific libraries that require a very minimal amount of setup. There is sensible default behavior(I.e. uncaught exceptions are automatically reported as well as exceptions that bubble up from the native layers to the JS layer in React Native). It will also include a lot of helpful information out of the box such as various stats about the users device, breadcrumbs about the device state, version info, etc.

One of the best parts is the Bugsnag’s ability to report the exact line in your code that caused the error. It will actually show you a code snippet with the particular line highlighted. This works out of the box on the Rails side, but in the React Native side, you need to upload sourcemaps to Bugsnag. I will say, this was by far the most difficult part about getting everything set up and I couldn’t even get it working initially as I was just trying to script it out using curl, however they have now released a simple node tool for handling sourcemap uploads and it’s worked great for us so far.

Admittedly, I don’t have a ton of experience with other reporting software so I can’t say objectively how it stacks up to other solutions, but I can say that it’s worked very well for us so far and has been crucial in helping us catch some really hard to debug issues.",1525150827.0
icekeymon,"I've used Bugsnag and Sentry in two different projects. /u/Fossage has made case for Bugsnag so I'll make a few for Sentry. Sentry's got a plug and play React Native library and provides you with scripts to add to XCode and Android Studio which automatically uploads source maps. You may need some extra configurations if you're using CodePush. With minimal effort I am able to capture JavaScript problems as well as native crashes. I also have additional User information being sent with every _crash/error_ including device, software versions etc.  It has a nice breadcrumb trail that helps me retrace the steps I need to replicate the issue.",1525206968.0
kbcool,"They aren't CI/CD tools BTW. 

They're runtime error reporting tools. 

Google play has made them redundant for Android apps. Available in the console.

Apple has an opt in policy so their version is almost useless so there's a place for them, at least on iOS. Sentry is good but it's not good at shutting up (eg I don't want an alert for the same issue happening 100 times). Haven't tried bugsnag.

You might need to explain what you want a bit better or just replace CI/CD with runtime exception monitoring. It's not a CI/CD problem.",1525194884.0
Noitidart2,The ./gradlew clean thing is a common issue. But it shouldn't happen every time. It might happen every time you run react-native run-android. But you shouldn't have to run that unless you make native changes. For me I run react-native run-android 5 times a day. And one time out of that requires me to gradlew clean.,1525101574.0
ahartzog,I frequently have to kill explorer.exe and any other processes that might have a handle on one of those files in order for everything to build properly (e.g. GitKraken and VS Code). It's super annoying. I try to avoid having to re-run react-native run-android for this reason.,1525101920.0
cjoelrun,Not knowing the exact problem mentioning redux brings som problems to mind. Are the bugs possibly race conditions? Now that you’re using expo performance may be different and functions may not be executing in the manner you expected them to. ,1525055737.0
rco8786,"Without code it’s 100% impossible to help, but

> a function won’t get executed even when it’s called

That’s not a thing. The function is just not being called even if you think it is. ",1525138766.0
Bamboo_the_plant,"Have you followed any advice in:

https://docs.expo.io/versions/latest/guides/using-firebase",1525091382.0
kbcool,"It's like you're stepping from one bad place to another.

You're much better off using the native tooling like the iOS simulator and running on an Android device or at least an emulated one.

At least I know when I'm developing in these envs it will turn out remotely like what it should do on the end device.

Otherwise it's like trying to develop new brakes for a a car using a dishwasher.",1525117764.0
neomachina2011,"My team at work uses [react-native-image-picker](https://github.com/react-community/react-native-image-picker). It works for selecting an image from the camera roll or taking a picture with the camera. I actually just built out an image upload component using that package, and it was pretty easy.",1525021059.0
datswedeinlondon,Care to share the errors you´re getting? I recently added support for reading QR codes in one of my apps and had to sort through a few errors when adding that package. It was mainly related to which gradle version I was using.  ,1525012961.0
,[deleted],1525016280.0
Jgfidelis,"Hi, RNCamera repo admin here. Did you follow this issue: https://github.com/react-native-community/react-native-camera/issues/1483 ?. This tutorial may help: https://itnext.io/install-react-native-maps-with-gradle-3-on-android-44f91a70a395

Android Studio and Gradle are a bit challenging, but it is a nice skill to learn. If you need more help, open an issue at the rncamera repo and I can try to help you there. The `27.x.x vs 26.x.x` problem you mentioned in a comment could be ""easily"" fixed.",1525113930.0
lfkwtz,my team uses [react-native-image-crop-picker](https://github.com/ivpusic/react-native-image-crop-picker) and it has worked well for us,1536330330.0
kbcool,"Maybe on Windows it does when it locks files but on Mac no problems with that here. Your next problem will be bundler doesn't recognise new packages though.

Just stop the bundler and save yourself the hassle.",1524996322.0
technocub88,"I think you wanted /r/FlutterDev 
",1525037996.0
ehhprobablynot,"there's a couple issues here.

first, the reason you are getting undefined is because you've got the wrong ""this"" context inside userLogin.  not sure if your tooling has stage 3 proposals enabled, but if you're using create\-react\-app, you should be able to declare userLogin as a [class field](https://github.com/tc39/proposal-class-fields):

    userLogin = () => {

one thing to keep in mind, arrow functions don't have their own ""this"" context.  they take the ""this"" context of the parent scope, which is the class itself.  if you cannot use, or do not want to use proposals, you can do the binding yourself by adding a constructor to your component and calling Function.prototype.bind:

    constructor(props) {
      super(props)
      this.userLogin = this.userLogin.bind(this)
    }

second, your refs are a bit messed up.  keep in mind, the ref is to the DOM node, not the value of an input.  when you add this line to your FormInput:

    ref={ref => this.email = ref}

then you've already declared [this.email](https://this.email) as the DOM node.  you should be posting back this.email.value if your intent is to grab what's typed in there.",1524974407.0
dracostheblack,"Are you asking how you can connect to your local h2 database? I'm not sure quite what you're asking.

",1524956013.0
dracostheblack,Javascript and react native ,1524956219.0
amberpatrick,"Their forum is pretty good, and their easy-grid package is awesome too.",1524961048.0
antwan2093,"Definitely. Faster TTM, lower cost, more pleasant dev work than native (subjective) and strong community support. ",1524923664.0
dev_kennedy,"Yes \- a lot of clients want iOS & Android apps but do not understand how expensive that can get when doing both in native. By using RN, you can undercut crazy\-expensive dev shops and other freelancers who only use native SDKs.",1524938799.0
kbcool,"Yup.

My clients love the speed involved. 

Experience + React Native dev = bloody quick TTM compared to native which can easily take longer just to do one platform. Then you need to add another so it can quite easily take 3x longer in native.

Or is that 3x shorter in React Native?! :)

One thing that will be a massive uphill battle for you is that if your app needs to start using native modules, especially if you have to write your own it's going to be a hockey stick learning curve. For me the learning curve was react. I already had native experience, plenty of javascript and node experience. Quite frankly it's a pain in the rear-end but once you get your head around it and its supporting libraries stupidity it's all plain sailing.",1524934083.0
jeevium,"This is the React Native subreddit, so chances are people will tell you ""yes, RN is a good skill!!!!!"" I would ask the same question in a broader subreddit for a more objective opinion if I were you :)",1524942162.0
,[deleted],1524929632.0
AlbertWalburn,Absolutely! Six month ago i'm learn new programming skills and can [develop an augmented reality app](http://yunoapp.com/blog/how-to-an-augmented-reality-app/). Do not be afraid to do it. This is a new step in your life.,1525442489.0
alien3d,"Yes and no. if you target  just design app, yes it be  quick. If need to customize  it will be long. ",1524929694.0
kbcool,"I don't quite understand why it's needed but it seems that the author is suggesting reparenting the components into the transition layer so the original layer become hidden (probably so a fade can happen between original layer -> transition -> final layer and the other ancillary components are hidden once the transition layer is completely visible.

I think you'd need to implement it to understand it properly.

Edit: BTW - the article has nothing to do with React Navigation the library so you've probably got no answers because you've confused everyone. ",1524935328.0
spruce-bruce,"1. The other answer is right, the author's code doesn't use react navigation, he is doing custom navigation by rendering the ""details"" screen as a full screen component over the ""grid"" screen.

2. Here's where the transition component is used: https://github.com/narendrashetty/photo-gallery-RN/blob/master/src/PhotoGallery.js#L103

That component is only visible immediately after you tap a photo. It's responsible for displaying the photo and then animating it up to the position and size it will be in in the ""details"" component. Once the animation is complete the Transition component then becomes invisible again and the details component is then animated into place.",1525918686.0
scttmthsn,You could have built it in the time you’re taking to find it.,1524904530.0
sun2288,Nice examples,1524928529.0
kbcool,"Like the web cards? You should be asking them not us :)

How about embedding the web cards in a webview if you're only planning on showing one or two at a time. Shouldn't have too much of a performance hit.",1524934766.0
mrdhood,I'm about to go through this process this weekend as well. If nobody has helped by then and I get it figured out I'll let you know. ,1524802478.0
lovemeslowly,"I have played with react-native-fcm
Works just fine, although i had some trouble while installation process, man that was a pain.
Anyways you can also look for onesignal its new ",1524806537.0
-Alias-,react-native-firebase v4 has been released with full docs on FCM notifications: https://github.com/invertase/react-native-firebase,1524817495.0
TheFutureIsNear,I’m considering taking [this course](https://learn.handlebarlabs.com/p/master-push-notifications-in-react-native) because I am about to integrate push notifications soon as well.,1524806520.0
Jaymageck,"You may want to look at React Native Notifications by Wix. It's commonly used in RN apps. https://github.com/wix/react-native-notifications

Even if you don't use it, you can look at the docs and source for inspiration.",1524808787.0
Veranova,"Push can be tough because it requires infrastructure. APNS and GCM can be interacted with directly but if you're cross platform it's nicer to have a single intermediary. AWS SNS, Firebase, and Onesignal all offer this, and the latter two provide bespoke react native libraries. What I've seen of the generic RN libraries (if you want SNS) is they're less well maintained, though the Wix one looks best.

Personally I'm investigating Onesignal because it seems to offer the simplest experience, and my org needs to move fast, but I'm just at the start of the process myself",1524815066.0
shekharskamble,"Thinking further, if your app navigation is complex you have to carefully route to right screen upon clicking on notification",1524816263.0
geekygujju,I’ve successfully used [react-native-onesignal ](https://github.com/geektimecoil/react-native-onesignal) in my apps. You may want to look into it. ,1524817166.0
besthelloworld,"My company uses UrbanAirship, which is super plug & play (though some of their APIs are far from clean).  Apparently Google Firebase is also starting to offer a free iOS & Android notification service.  I couldn't possibly recommend enough, the idea of NOT trying to implement this yourself and just importing someone else's package to do it for you.",1524825032.0
icekeymon,"I'm using AWS SNS, used with API Gateway and Lambda to deliver Push Notifications to iOS and Android. It uses APNS and Firebase (FCM) under the hood. I use react-native-push-notification to obtain a device token. User ID and ARN endpoints are stored in DynamoDB. I didn't opt for One-Signal, our client information is sensitive and they harvest your User data.",1524827388.0
nothingbutt,What about mutations? Instantly working out of the box or...,1524754089.0
mrdhood,"Actually I figured it out. I needed to manually link RCTFBSDK. To do so I:

\- Found /node\_modules/react\-native\-fbsdk/ios/RCTFBSDK

\- Copied into the project's framework folder

\- Went to Build Phases

\- Added ""libRCTFBSDK.a""",1524753198.0
calvintts,You mentioned that you went through a lot of debugging session. I am trying to get a login button work on my app. Do you mind sharing your experience for linking Fbsdk? ,1539998130.0
kbcool,"This looks like Expo to me except open sourced yeah? 

Feel free to put me back in my box. Just trying to summarise it from a 2 minute read of the README

If you're sharing this with the News AU guys say hi for me!",1524759588.0
l0wry_,"Not exactly, although we have used fructose with expo. It's more like storybook but instead of manually testing components it's enables you to use automated testing libraries on the component loaded ",1524760223.0
l0wry_,"Not exactly, although we have used fructose with expo. It's more like storybook, but instead of manually testing components it's enables you to use automated testing libraries on the component loaded ",1524765931.0
TheKingHasLost,"There is **no best practice** to hide your API call that makes sure it's called only by the app. No matter how hard you try, someone can and (if your app is big enough) will expose your API eventually.

The only best practice is to make sure that even though someone know your API endpoint, they still can't do any meaningful damage. Always assume that **your client-side app can be reverse engineered** because it always can.",1524773374.0
kclough,"I would suggest using ssl pinning. Any other approach would be vulnerable to a man in the middle attack to expose how your API works. I see there are a number of components that do this. I haven’t used this project, but this is likely where I’d start: https://github.com/localz/react-native-pinch",1524750821.0
ibanb,"Thanks a lot for your suggestions. I will try to implement ssl pinnning and make some kind of defense programming to avoid damage as possible. Anyway, the API will expose only data to be consumed, and post comments so the damage will be only related to spam on comments. 

All you rocks!",1524776677.0
demoran,"You could authenticate via a shared secret.

Your api knows the secret.

Your client knows the secret, and includes a hash of the request body in the header using the secret.

The api verifies the hash when the request comes in.

One of the neat things I've done in the past was to take a part of an image file and use that has the secret.  That way it's consistent, but pretty well obfuscated.",1524748852.0
jamiechalm,"React-Navigation has worked very well for me on my project, but it took a while for me to get the nested navigators set up in a sensible way. I find with nested navigators, passing around navigation props can get confusing, but once I got the structure sorted, it works great.

If a simplified solution is working for you, then great - you're sorted. There's no need to overly complicate things if you don't need to. However, personally I'd have a nightmare trying to get my app to work without React-Navigation.",1524738194.0
,[deleted],1524765527.0
kbcool,"A whole heap of talking about alternatives here. The short answer is that it's not necessary you can roll your own very easily.

Just use your state to say which ""page"" you should be on and only render the component for the page that is current. If you want, add animations to move between them and some sort of stack management.

I probably only use the libraries now because I've developed boilerplate that makes it quick to produce new apps and pages within apps.",1524822241.0
dk01,I avoid it and stick with React-router.,1524739152.0
eevo,"I've been working on a react-native app for 1-2 years off and on, and over time the community choice has shifted from react-native-router-flux to react-navigation.  I have a few drawers & tab views and it was always kind of a pita even on react-native-router-flux, and it all got pretty messy pretty quick with react-navigation (like, I only want a drawer on some screens, stuff like that)

When I upgraded I swapped routing code, but I chose to reimplement or use slimmed down libraries for the drawer, tab views instead.  So I guess that's an option for you too, keeps navigation code basic & no nested navigators, but can compose a library for the drawer & stuff like that when you need it.  Libraries I used that worked out pretty well: react-native-side-menu & react-native-tab-view",1524748007.0
felixclack,I've used react-native-firebase extensively on projects over the last 12 months. It was easy to implement. The latest version brings improvements to Android and to its API generally.,1524829888.0
sesamerox,"interesting content, but presentation could be better IMO.

More useful for experienced users I think.",1524709019.0
TheFutureIsNear,"You definitely don’t need to use mobx to manage your navigation state like what is being setup in the article but you can if you want to have a bit more control over that state.

If you’re just starting out I would say don’t bother until it becomes something you think you might need, using mobx and react navigation together as is works perfectly fine for most use cases. ",1524716615.0
fuck_with_me,"Seems like you're trying to use things without knowing why you should be using them.

> Can I simply use MobX with react navigation as-is (passing stores through props, using observables) if I don't care about managing my navigation state?

Yes, of course. That being said, in almost any application you're eventually going to need the ability to programmatically change nav state/route/screen/whatever.

Also - subjective opinion, obviously - react-navigation is trash. I've had great success with MobX/react-native-navigation. If you're interested I'd be happy to share.

Good luck!",1524727289.0
fly_guy22,"You might need to provide a bit more info...

What have you tried so far?",1524696011.0
jamiechalm,"If you're using React-Navigation, just create a component that returns your map, and use that as the screen property of the Map screen in your Tab Navigator declaration.",1524731213.0
KimJongThrill,Ok I just realized that I had this.props.deals wrapped in [] so removing those fixed it for the first example.,1524673419.0
Krizzu,you can think of `renderItem` as a function that will be passed to the .`map` of your `data  ` . Use `extraData` to tell FlatList when to rerender.,1524691242.0
KimJongThrill,"Also I got the keyExtractor working using this:

            <View style={styles.list}>
                <FlatList
                    data={this.props.deals}
                    keyExtractor={(item, index) => item.key}
                    renderItem={({ item }) => {
                        return <Text key={item.key} style={styles.dataStyle}>{item.title}</Text>

                    }
                    }
                />
            </View>",1524673735.0
hhunaid,"There is no single way to go about it. Depending upon your use case you can either have an in-app purchase which unlocks the premium features or you can publish a paid version of the app. Your app being written in react native has nothing to do with it mostly.

It's usually easier to manage pro features in single code base rather than having to manage 2 different apps. But your mileage may vary.",1524666870.0
fuck_with_me,What a weird username. Just wanted to add that you should keep in mind for IAP you'll need to pay Apple their 30%.,1524676974.0
fuck_with_me,"I would focus on building traditional web applications at this time, as that's where your current background is. Once you feel confident building web applications, you can make the jump to RN.

> a bit html, css and understand a little js

Basically, I think RN is going to be very confusing for you with this level of exposure.",1524639740.0
MisterLeDude,"I have started looking into this:
https://watchandcode.com/

Seems pretty chill so far..",1524686290.0
dadinodog,"Looks really useful, thanks!",1524672820.0
cloudprogrammer,Anyone else getting an unexpected error? ,1524612669.0
wengemurphy,"This forum is more about technical questions. Try /r/forhire, or [join the Reactiflux discord](https://discordapp.com/invite/0ZcbPKXt5bZiQhB5) and post in the #jobs channel",1524594776.0
kbcool,"Pay? Location/remote?

Why are you looking for react-native?

You're quite likely to get inundated with emails from people learning react native, the forum is 99% those people.

PM me when you've waded through the junk if you're interested in 7+ years mobile dev experience, business acumen, etc. I'm not cheap though.
",1524594403.0
huejackmon,"I would say if you are new to coding/looking to create an application that is not overly complicated with regards to hardware/functionality, go with React Native. This will allow you a nice base of knowledge with React and React Native to possibly create web, iOS and Android applications in the future.

I went from native development (Swift, Objective-C, Java) to RN, and while I think Swift is an amazing language (my personal favorite), there is also a learning curve with Swift when done correctly (functional programming, protocol oriented design) .

RN is a little bit more forgiving, and with JavaScript being an interpreted language, you have a better chance of seeing more immediate results and can slowly refactor into more standard patterns (Redux, High-Order Components) . 


",1524575196.0
beastinghunting,"I’m on the same boat as you. But I think I already made my choice and went for Swift, why?

Because I like it, it flows better with me rather than RN. It is a personal preference because I come from developing Java applications, so the OO theory is something I already dominate, then learning Swift is easier for me, plus I’m totally interested in learning ARKit.

This means I have postponed RN learning curve because first I need to get better at JavaScript and take things slow, since RN is something I want to master in time, but I can’t master two things at once and I have to start with something.",1524574508.0
meganlwood,"No question, go with ReactNative. I’ve been an iOS developer for years and I loved Swift, but the second I started learning RN I knew I’d never go back. Traditional iOS dev can be a real pain sometimes, especially with the way you have to use the interface builder, and RN took away all of that headache for me. I highly recommend using Stephen Grider’s tutorials on Udemy. He does a great job of keeping them up to date",1524681840.0
,Isn't there issue with cross platform JS applications consuming more battery power than native applications?,1524616905.0
unpopularOpinions776,"If you have experience with JavaScript, React-Native is the way to go. 

If you don't, I'd go with Swift. You'll likely find more entertaining jobs. In my personal experience, the RN projects I've seen are typically for enterprise one-and-done apps (like for an event or something)",1525482642.0
maverickmax90,Use VSCode.,1524574747.0
kbcool,"Nope. 

Was a great idea but suffered from the usual big corporation bought it and stuck it in the circular filing cabinet.

Use VS Code like suggested.

",1524591432.0
TallSkinny,"Recommended is Atom with Nuclide, personally I just use vscode and [react native debugger] (https://github.com/jhen0409/react-native-debugger).",1524593135.0
geirman,"I use VS Code, but if you're looking for something similar to DECO that is actively maintained, check out https://builderx.io/",1524662592.0
swiftpolar,"Hi all! Developer of the app here. So I've kind of liked those games on the web where you basically type and race with others. As such, I bought that to the mobile world where you basically type using your favourite mobile keyboard app.

Currently, KeyTyper only has an offline single player mode. You will however still get to track your typing stats and whatnot and prepare yourself for the soon to come multiplayer competitive mode!

Do let me know of any suggestions for game modes, text sources and whatnot. I do have a few up in my mind ready to be implemented but as of now online multiplayer will be my immediate objective.

For fellow developers out there, do feel free to ask my about React, React Native, NodeJS and whatnot (or the anything about the app's code / tech stack etc.)",1524545893.0
kbcool,"You won't get that in the way you're probably thinking of because of sandboxing and security on iOS and Android. 

There are plenty of services that simulate user testing, take screenshots, compare to expected results etc. I don't trust them though. You end up spending more time trying to keep your automated tests up to date than developing features.  Not a problem if you spend your time writing bugs but I like to keep a high feature to bug ratio :)",1524595517.0
nader8ch,That was my impression as well. Thanks a ton!,1524607400.0
Noitidart2,"* Play Store - https://facebook.github.io/react-native/docs/signed-apk-android.html - then sign up for play, pay 25$ then upload
* App Store - This is a headache. The only tutorial that showed me everything step by step. Its a 2 parter:

  * https://www.raywenderlich.com/127936/submit-an-app-part-1
  * https://www.raywenderlich.com/127939/submit-an-app-part-2",1524539424.0
Bamboo_the_plant,"If you're making your React Native app using Expo, the steps are as I detailed in [this comment](https://www.reddit.com/r/reactnative/comments/8eaa8p/comment/dxts2ku?st=JGE3X5A8&sh=df009972). My app was accepted to the App Store within just 8 hours of submitting; no issues with review. 👌👍🤝",1524600911.0
kirisafar,"Nice!

Will you open source it? It would be nice for learning. ",1524550629.0
invin10001,"Looks good, got a download link? ",1524531870.0
Noitidart2,LOVE the design!!!,1524539208.0
alexduckmanton,Looks great! Would love to try it.,1524542429.0
CopperHook,What's wrong with it being owned by Microsoft?,1524523061.0
thiagobr90,"In my company we use react-native-firebase, that implements the native sdk. But for login you can also try the firebase web sdk",1524575359.0
coolnat,"I use it and love it! If you use the JavaScript API when checking for updates, you can configure it such that a release marked ‘mandatory’ will restart the app immediately. That way, you can use that option if you’re making a breaking API change.

Getting it set up is really not too difficult. Just make sure to use your production API key when releasing to the App Store, and follow the code push version numbering guidelines.",1524496613.0
effeKtSVK,"I am very happy with it, we use it in one app just to fix things like bad styling or typos but it is much stronger than that! About the automatic updates, I wouldn't bet on it... You can push mandatory updates as coolnat mentioned, which instantly installs that version (you have to set it up like that, watch out). Or if you want to be sure just set the install mode even for normal updates to install it as soon as it downloads.",1524502433.0
milkysniper,I think you forgot to add blockchain to the title ,1524495884.0
Bamboo_the_plant,GitHub link here: https://github.com/shirakaba/react-native-typescript-2d-game,1524496015.0
Noitidart2,Super!! Congrats man!!,1524502257.0
anuragdadheech,"Good job. On my 7 plus, it's stuck on [this screen](https://imgur.com/gallery/8s9fFbx) though.",1524724090.0
kbcool,Wrong forum!,1524497668.0
kbcool,"do you have a .gitignore file in the main directory with a lot of files and directories listed in it? If you do then you're good to go.

If not then react-native init <temp project> 

Then copy the .gitignore and you can now safely commit.

",1524478594.0
arya_minus,"Try mine: https://github.com/aryaminus/RN-firechat
Had plans to continue with further tutorials, but been quite busy. All others repos follow similar pattern",1524479025.0
Bamboo_the_plant,"Here's my open-source project: https://github.com/shirakaba/react-native-typescript-2d-game

Now available on the App Store [here](https://itunes.apple.com/us/app/plucky-box/id1375337845).

With reference to the following instructions from the Expo documentation:

* [Building Standalone Apps](https://docs.expo.io/versions/v26.0.0/distribution/building-standalone-apps)

* [Deploying to App Stores](https://docs.expo.io/versions/v26.0.0/distribution/app-stores)

A summary of Building Standalone apps:

* Ensure you have `exp` installed, via `npm install -g exp` or `yarn global add exp`.

* Set up your `app.json` as specified in Building Standalone Apps [step 2](https://docs.expo.io/versions/v26.0.0/distribution/building-standalone-apps); or reference [my own](https://github.com/shirakaba/react-native-typescript-2d-game/blob/master/app.json).

* Begin a build of the project's `.ipa` file via `exp build:ios`. This will fully establish the App on the Apple Developer portal for you.

* Download it from the link they send to you.

* Upload the App to iTunes connect via the [Application Loader](https://stackoverflow.com/a/8094349/5951226).

* Go to iTunes Connect and create a new app. Expo's generated id should be available to select.

Next, just follow the [iOS-specific guidelines](https://docs.expo.io/versions/v26.0.0/distribution/app-stores#ios-specific-guidelines) section in Deploying to App Stores:

> * All apps in the iTunes Store must abide by the [App Store Review Guidelines](https://developer.apple.com/app-store/review/guidelines/).
> * Apple will ask you whether your app uses the IDFA. Because Expo depends on Segment Analytics, the answer is yes, and you'll need to check a couple boxes on the Apple submission form. See [Segment's Guide](https://segment.com/docs/sources/mobile/ios/quickstart/#step-5-submitting-to-the-app-store) for which specific boxes to fill in.

I have no experience with Continuous Integration, though, sorry.

Good luck!",1524489208.0
partiallogic,We haven’t launched to the stores yet but we have CI and e2e testing setup https://github.com/redbadger/pride-london-app,1524480132.0
GantMan,https://github.com/ReactNativeNews/React-Native-Apps,1524516039.0
Toastyyyyh,"I made a small, quick app that allows you to browse the DEFCON media server easily. At some point I hope to add capabilities to stream talks too as you would podcasts but I be gotten caught up in another project. Anyway it was a really fun way to practice using a super simple API that I also made to go with it, and parsing JSON into a display. Not much but it was fun to make, got repo: https://github.com/c-hering/defcon-streamer",1524526540.0
arron_j,"Solid list of apps to learn from. Features finance, sports, social, etc. type apps. 
https://medium.com/react-native-development/interesting-react-native-projects-to-learn-from-99d1a0c0117e",1524550737.0
besthelloworld,"This is $11 for 5 more hours, but it's basically on sale more than it's not (that's just Udemy's business model).  This is the class I've been taking and I heavily suggest it.

https://www.udemy.com/the-complete-react-native-and-redux-course/",1524485298.0
kbcool,"I can assign you a project if you want. If I'm successful in marketing it on the app stores then you can even get a profit share.

Worst case is you get something to put on your resume/cv/LinkedIn profile.

PM me if interested.",1524497903.0
ahartzog,"The idea of a progressive web app is to take a web application and apply additional tools to enable some native mobile features and improved mobile performance. 

The purpose of react native is to build a mobile application with a single codebase for both iOS and Android while maintaining native features and performance. It DOES offer a method for the same codebase to be viewable on desktop via a third party library. 

Just explaining what these two tools are, you’ve got quite a bit of research to do before you have a full handle on everything. 
",1524449812.0
,"Just use React.js:

https://engineering.musefind.com/build-your-first-progressive-web-app-with-react-8e1449c575cd",1524456680.0
sevenyearoldkid,"In my experience sometimes they're very fast and sometimes they're very slow. If you're already running a backend I would recommend managing your own push notifications. It's actually pretty simple, the only problem I've found is that every single tutorial seems to overcomplicatr the hell out of it ",1524440261.0
yusrname,"I ran into the same issue earlier last week. It works with yarn, so I used that.

    yarn add react-native-elements

I'm using yarn for that reason to add any new packages. Did not get a chance to research why it was not working properly with npm though.",1524427180.0
simplicius_,"If you want to use npm installation pattern with expo, first of all before adding any new module to your project run `npm install` and then run `npm i -S [package]`. This works for me!",1524467463.0
student_of_world,nice tutorials. nicely explained. keep it up bro.,1524413705.0
fuck_with_me,"Go away, Aarif.",1524381482.0
Velz_Kyos,Why does your portfolio have 5 pages but only 4 pages with data?,1524519151.0
kbcool,"Yup it is.

I'll release more details on how to do it when you release more details on what you're trying to do.",1524399870.0
everdrone97,"This is my first React Native module, also first time (ever) experimenting with Obj-C so be kind!

Open to suggestions / fixes",1524358388.0
Noitidart2,Would be awesome to get Android version too! Right now I think `borderRadius` applies to all corners (would be awesome to control individual corners).,1524403639.0
iceboundpenguin,The JWT token from where?,1524336219.0
ravenlp,"I'm not sure if this would help, but what I did is when the app is loading I check the 'expires_in' token date and if the token expired then do the call to refresh the token. The 'expires_in' info often comes when you request the token or it can be encoded in the token itself. This is not idea if the user revoked access to the app but that could be managed after the 'refresh token' call.",1524352359.0
fuck_with_me,"> When access token has expired the app gets http 401 on the request. Then the app tries to update token

What..? If the token is expired, how can it be refreshed? The whole point is that you want to refresh the token _before_ it expires.

Unless I'm missing something?",1524381572.0
kbcool,"The parameter renderItem is expecting is item not message. Curly quotes {name1,name2} breakdown a hash/dict/obj whatever it's called in javsascript into components - you have to get the name right. If you removed the curly quotes message would be passed to your function as an obj and you could use <Text>{message.item.key}</Text>

So change the FlatList dec to.

            <FlatList style={styles.listContainer} data={messages} renderItem={({item}) => this.renderMessage(item)}/>

",1524316317.0
jacobp100,"The transform origin will be an issue. In RN it defaults to the centre of the element.

If you want to change this, in the transform, you need to add a translation before the rotation and then the reverse translation after.

You could also use/fork https://github.com/keske/react-native-easy-gestures",1524317527.0
deadcoder0904,"First of all nice username. I can't review your code but a helpful suggestion. Take a look at **Sketch Elements** in https://react-native.shop

Scan the QR Code & see if it has rotation bcz as memory recalls it has. William has done a great job at it & you can watch his [YouTube tutorials](https://www.youtube.com/channel/UC806fwFWpiLQV5y-qifzHnA) where he talks about GL-NATIVE for image manipulation. 

Or maybe his [Medium Tutorials](https://medium.com/@wcandillon) have it. Take a look if it helps then good. If it doesn't, then keep asking ;)",1524380066.0
kbcool,"I don't have the time to go through your code with a fine tooth comb for you but I can comment in general.

A) I find doing any kind of image manipulation in react native a PITA and instead just use a webview or native components

B) Your code's very react-web-ish and makes use of so many third party libs and paradigms my head is spinning. I don't know whether this is just you being comfortable with this or you're a cut and paste from other people's code programmer (could be either)

C) You don't seem to make use of any kind of state which will come back to bite you in the bottom hard once your apps get beyond one pagers. I suggest reading up on basic state management and then going onto redux etc. 

Sorry if I come across harsh. Programmers tend to be asses towards each other when it comes to reviewing style and I'm no different. I bet you could find some of my code that looks like a child wrote it :)",1524306839.0
Noitidart2,"Background geolocation and push notification. Geolocation is accurate within 5 meters at highest accuracy (16 feet), I don't know if that's accurate enough for you.",1524303379.0
lefooey,Bluetooth is probably the most straightforward method. ,1524324507.0
fuck_with_me,"This doesn't even sound like a RN question. It sounds like you know some buzzwords but you don't know what they mean or how to use them.

Please post on StackOverflow for questions like this...",1524296891.0
contrarianism,Don’t use expo,1524288677.0
,I hate to find a harder job that doing apps then :P,1524321363.0
knmaswath,"Linux is my opinion . Many tools and ides are supported in Linux based systems .

",1524219425.0
lovemeslowly,Yes you need a Mac for IOS development. I would recommend any MBP with 500GB ssd and 8GB of ram at least. Also i have also heard people using vm for MAC OS..would still prefer a Macbook pro,1524226530.0
,[deleted],1524237882.0
Sir_hennihau,"I'm quite confident with Ubuntu.

Back in the days I used windows, but somehow development + setup was slower than in Ubuntu.",1524224281.0
jamesducket,Thank you for sharing this advantages & disadvantages of React native development. ,1527235210.0
kbcool,"I'm interested in this one too.

I'm using a webview which tells React Native when to save something and can be told to tell React Native to tell it when it's done but this is all done by passing messages back and forth so is non blocking (which is good) - did you get all that?

Occasionally it can be in an unsaved state when the user presses back so would like to be able to block the action until it's had a chance to pass back the latest state.

Personally I've been a bit lazy as it's an edge case but I think it could be solved by having a custom back button, overriding the hardware back button as suggested already then saving the intent to go back, do your stuff, then actually trigger the navigation. Would like to see a more elegant way of doing it though.",1524216601.0
BuggerinoKripperino,"Just going to reply on here because I don't like stack overflow. 

What if you make a function which pops up the React Native Alert API and then have a callback on confirm navigate back?

Then you can call this function when someone presses the back arrow. 

You'd have to implement your own back arrow but that's not too bad because all the components for navigation are exposed.",1524211304.0
LEO_TROLLSTOY,Very cool concept!,1524289487.0
saghul,"You cannot show that bar yourself, iOS will show it when you are using location services in the background (blue), recording audio (red) in a CallKit-enabled call (green).",1524226454.0
Londomain,"I’m building an Uber like app that requires users to set themselves as “available“. I’m hoping to keep the app running in the background, so that the top of their screen shows that the app is running. Much in the same way that the native maps application has a blue status bar at the top of the screen when the app is put in the background. I’m struggling to figure out what exactly this feature is called. Anyone have any ideas?
",1524186716.0
toliter7t,If this reditor isn't the finest ever then my name isn't Grandpa,1524173325.0
Noitidart2,"This is a good question, I also want to do canvas work in react native. However i think its different.",1524181439.0
stathisntonas,"Are you using pagination? How many rows are being rendered when you first display the Flatilist?

Edit: weird keyextractor you got there

Edit 2: try this out https://github.com/stoffern/react-native-optimized-flatlist

Also, you might notice better perfomance when app is in release mode, not debug/dev mode.",1524162721.0
kbcool,"Have you set a height for each of the items in renderItems? I remember reading somewhere that not having a height means it all needs to be computed constantly and can have a performance hit on large lists.

Also - as someone else mentioned in debug mode performance can be shocking. Make sure you don't have any console.log in renderItems or in any loops or it will have a HUGE performance hit.",1524216971.0
lovemeslowly,"There is a npm library called react-native-fast-image
Please check that it may help you a lot ",1524226704.0
stathisntonas,"

Edit: cant you set it programmatically via the background-task module?",1524160928.0
SoiledShip,What's wrong with using firebase to use actual push notifications,1524161846.0
,[deleted],1524155206.0
sophrosun3,"We wrote a blog post about these changes when we had to make them:

https://blog.expo.io/upcoming-limitations-to-ios-expo-client-8076d01aee1a

Other projects which also have preview/development apps have also had issues remaining in the App Store:

https://blog.ionicframework.com/update-on-ionic-view-for-ios/",1524164410.0
Bzaba,You are still able to open projects via link. You do not need to be signed at all. Your testing flow should not be affected that much.,1524196365.0
moufoo,"Only the JS code can be sent OTA. If you found a way to convert mp3 (e.g. base 64, as used for images) so it can be imported directly in another js file then yes. But what is most likely is that it is a native resource so you'll have to eject expo and add it to both your Android and iOS native projects. You'll also need to build and publish your apps for it be accessible",1524173888.0
stathisntonas,"I think that only if you change native code you need to resubmit the app so in your case wont be a problem.

Disclaimer: I’ve never used expo and ota.",1524160832.0
Noitidart2,Thanks so much for sharing this!! I had this same exact problem and couldn't figure it out so had given up temporarily. Now with this article of yours I can resume!! Thank you!,1524131555.0
kbcool,"Or save yourself the pain and remain on gradle 2.3.3 until react native officially upgrades to 3. At that point you can also stop upgrading react-native until all the plugins have upgraded as well.

Upgrading your gradle version initially sounds like a great idea until you have to deal with all the native plugins. It's not just react-native-maps you have to worry about.

",1524133422.0
creambyemute,"Idk, if you don't need any library that has native functionality which isn't provided by expo then you're fine with expo.

Otherwise there are so many problems with expo and everyone who migrated their project from expo to react-native init was so much happier with the dev experience afterwards even if they didn't need any library that wasn't provided by expo.


",1524125152.0
,"Why can't you just code it like this?

    
    let rows = [];
    for(i=0;i<N;i++) {
        let row = [];
        row.push(ColA);
        row.push(ColB);
        rows.push(<Row>{row}</Row>);
    }
    let grid = <Rows>{rows}</Rows>;
",1524136572.0
ahartzog,Modulus operator in a loop I think ,1524106923.0
localhost8100,Nice application. I just went through the app using a demo account. Really like the UI. ,1524079572.0
tweettranscriberbot,"^The linked tweet was tweeted by [@shotscope](https://twitter.com/shotscope) on Apr 18, 2018 15:27:35 UTC (0 Retweets | 6 Favorites)

-------------------------------------------------

New feature alert! Update to both iOS and Android app which provides new editing feature. The team are looking forward to some great feedback from our golfers. 

[Attached photo](https://pbs.twimg.com/media/DbEz5o6X4AYXjio.jpg:orig) | [imgur Mirror](https://i.imgur.com/4uyGDQy.jpg)

-------------------------------------------------

^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1524074549.0
TweetTranscriber,"Date: [2018-04-18 15:27:35 (UTC)](https://www.timeanddate.com/worldclock/converter.html?iso=20180418T152735&p1=1440)

>New feature alert! Update to both iOS and Android app which provides new editing feature. The team are looking forward to some great feedback from our golfers. 

>— Shot Scope ([@shotscope](https://twitter.com/shotscope))

>🔁️ 0 💟 6



📷 [image](https://i.imgur.com/w79TX4O.jpg)



 &nbsp; 

^(I'm a bot and this action was done automatically)",1524074566.0
MarkOSullivan,It's taken our team a couple of months to develop this new Editing feature in our app but today we finally launched it within both our native Android and native iOS apps. Shows you what can be achieved using React Native within pre-existing apps!,1524074688.0
,[deleted],1524084899.0
KimJongThrill,"Simulator Red Screen says:

No script URL provided. Make sure the packager is running or you have embedded a JS bundle in your application bundle

unsanitizedScriptURLString = (null)",1524065683.0
fuck_with_me,You'll probably have to go with a custom [react-gl](https://github.com/gre/gl-react) solution.,1524063606.0
kbcool,"Really? Do they not like you? 

You could always say no unless you're a slave. 

If you have been forced to do this against your will just nod and we'll send help.

Seriously though. 

Have you tried thinking about it for a second? What language is react native written in? Have you tried googling for warp/liquify/melt/distort image in  <insert react native language here>?

(Reddit really needs a report time-waster button)",1524068822.0
kbcool,Before I downvote what have you tried so far?,1524133556.0
fragglerock,"I used fastlane https://fastlane.tools/ and it was good.  

I never felt I understood exactly what all the keys and things I needed were... but it is up there and so I am happy :o",1524055171.0
qpbp,"As for me one of ""gotchas"" needed to disable two-factor authentication with Apple. Also, you need always paste in terminal your credentials. 
but in spite of this, i published about 5 apps to App Store and love expo.",1524062166.0
NaveNocab,Remember to verify that your app icon is 1024x1024 png with no transparency. Otherwise when you are uploading using application loader it'll tell you the IPA is invalid and this is a pain. I see people run into problems where they accidentally have the slightest bit of transparency and they have to start over :/,1524077088.0
fuck_with_me,"I will soon be publishing my first RN app to the App/Play stores as well, although it's not an Expo app.

If I recall correctly, Expo doesn't actually provide any special help in submitting to the stores, outside of generating certs (I think).",1524063561.0
koobawuah,"It keeps preventing me from downloading, it says couldn’t contact to recaptcha and says I should check my connection, but my connection works fine ",1524055861.0
yanjia0807,thanks,1534576519.0
Noitidart2,"Are there any guides on how to do this on Android?

I was using resize mode adjustWindow, which keeps an element on the bottom. However if I have content in a scroll view in the back, that content gets covered. I was hoping that the scrollview would scroll to accomadate for the additional thing i attached to bottom of view.",1524006347.0
kbcool,"Nice to have this native but doesn't provide anything that wasn't possible before.

Just built a sticky input window in a few minutes a few days back. Even better.... it looks different when the keyboard is closed! 

Just need to use keyboardavoidingview and the keyboard listener carefully along with animating changes when the keyboard begins to open or close not after.",1524068372.0
Bamboo_the_plant,"While I've seen the original Family Guy sketch and I develop using Expo, I don't quite see how this meme lines up..?",1523979845.0
skipfiller,TRUE,1523979038.0
Unforgiven-wanda,"As much as I like the concept of Expo it just adds a layer of complexity I'm not comfortable with.
Having enough experience working with vanilla RN I prefer the level of control it affords me. But to each his own.",1524055620.0
HisAwesomeness,Is this related to expo though? I have gone `react-native init` from the start and also use the development tools etc.,1524001545.0
travisimotheruthless,">This requires going through the whole build process again and uploading updated versions of your apps to the app stores, which can take up a while before being approved by Apple or Google. Then the updated apps need to be manually installed by your users.

>Although the following is not allowed on iOS/App Store, you can use Google Play to update your app more simply, a user opens your app and an update be automatically available.

Not entirely true! Check out codepush. My team uses it to deliver minor updates on our RN projects. Generally, if you are just updating javascript and not adding new libraries, this is a great option. 

",1523976803.0
kbcool,"Hmm I wouldn't call this a business perspective. I'd call it from a delivery manager's perspective.

The ""business"" (ie the CEO, marketing department etc) just want to know that you can do more with less and quicker.

The whole app store pain is never going to be solved. Sorry. The good news is that it's only a tiny part of your time to market. Less than 1% unless you're doing it wrong.

Just a tip for anyone reading this: You're not going to get away with cheap front end hackers to pull of a React Native app. Not unless your app is dead simple. At some point back end code and native integrations need to be built and/or troubleshooted. You'll need a real engineer at this point.",1524043382.0
TiffanyHoran,"Good news everyone! Thanks for all of your comments, the article on React Native from a business perspective was featured in the business section of the Let’s React newsletter, issue 29: letsreact.io! ",1524752350.0
Bamboo_the_plant,"No need to output JS files at any point; you can get the packager to load the TS files directly and handle all the transpilation under-the-hood for you. Runs in watch mode just fine.

Here's [how I did it](https://github.com/shirakaba/react-native-typescript-2d-game/wiki/How-I-created-this-project#integrating-typescript) for my open-source [React Native TypeScript 2D Game](https://github.com/shirakaba/react-native-typescript-2d-game/blob/master/README.md).

After that one-time setup, just run `yarn run ios` as you'd do for any JS project.",1523959783.0
demoran,"https://github.com/ds300/react-native-typescript-transformer is completely seamless.  It rides on babel, doesn't emit files.",1523959928.0
BDMayhem,Note that this is an ad for a paid Udemy course. ,1523916597.0
bonkersone,link is dead,1523951590.0
milkysniper,"I think you’re going to have to make this call asynchronously

I’m not an expert but the usual way to handle this is with a 0ms setTimeout

There are a number of good articles that come up when searching for `react native new thread` or something similar that might be able to help you",1523890167.0
tokens_express,"Where is the function being called? UI Rendering shouldn't be blocked by network calls because of the way the lifecycle works. The result of the call should update the state which will trigger a render. Depending on how your application is structured it could make sense to have this call live in the component itself or a reducer. If called from within the component, the call not only needs to be asynchronous but should also be 'fire and forget' in order to prevent blocking the lifecycle. In other worse, if its called in a function that must return before rendering, using async/await is not enough since while it doesn't block the main thread, it will block the return of that function, which will block rendering. If you put it in a reducer, calling dispatch is like using the older callback style asynchronous pattern, which is fire and forget.",1523961722.0
jestzisguy,"Not sure about the framework, but I have seen people put native code into an npm package, and then embed a cocoapod inside that.  You refer to it by its relative path in your podfile.  Don’t know how it’s done for Android though.",1523880358.0
jestzisguy,I just ran across a new blog post about packaging an RN component as a Cocoapod: http://artsy.github.io/blog/2018/04/17/making-a-components-pod/,1524169741.0
demoran,"Sleep on it.  And look at the documentation: https://firebase.google.com/docs/database/web/lists-of-data#filtering_data

",1523846427.0
SizzlerWA,"Just curious - why a binary representation anywhere?  It makes it harder to inspect network traffic during debugging.  Why not use JSON.

If you must use binary, why not protocol buffers?",1523838270.0
lefooey,"I would strongly advise against putting your API key into an app (or website, for that matter) as they can be easily extracted.  Your Mailgun API could be used by anyone to send mail pretending to be you and run up some fairly substantial charges. Better to put your mailgun sending functionality into AWS Lambda or Google Cloud Functions - then you’ll get full support for the node libraries you need to use and get a secure environment as well. ",1523823946.0
I-Calvin,"Update: I tried all of the ""This might be related to..."" things, but in the end I just 'npm install crypto'. I now get this error?

""Metro Bundler has encountered an internal error, please check your terminal error output for more details""

There is no output in the Terminal.",1523826675.0
deadcoder0904,"There is also another alternative to try - https://github.com/nirsky/react-native-size-matters

And I love it. I have to try this one. Looks very simple. Just have to check if it works :)",1523815741.0
Noitidart2,"I read the article and see this package but I'm still confused. If we are using this in a StyleSheet.create, this wont re-calculate on orientation change no?",1523819046.0
jeevium,"Hey guys, update on this one: I am doing some work to implement functionality to support orientation change as well. The progress is a bit slow because of other projects/things I do but this is on my priorities. Will let you know when it's done with another update :\)",1524470331.0
jeevium,"Version 1.1.0 is pushed in GitHub and published to npm as well :\)

It adds performance improvement, orientation change support, more examples and syntax highlighting to [README.md](https://README.md). It is a minor update, so it is compatible with existing version.

Thanks @deadcoder0904 and @Noitidart2 for their helpful comments :\)",1524563811.0
kbcool,"Enable debugging and run it from Android studio. You'll get more info.

Best guess is that the underlying library Android uses for loading images does not like your image. In a very, very bad way. ie just can't handle it and flips out.

Not had a problem with file extensions myself, can name a jpg a png, vice versa, no extensions etc. All works fine.

BTW I just get a text error returned by that URL if I open it in the browser. You sure you haven't checked it's correct first?",1523812867.0
mnngfltg,Does the server send back the correct `Content-Type`?,1523864243.0
edric_garran,"This still requires the user to specify a constant for width or height, and can't adapt to the UI.

What I do is wrap the image in a View and set the aspectRatio, setting both width and height on the Image to 100%.

This way the view can have width or height defined as a percentage as well.",1523784422.0
andrioid,"I love when people document their findings, so thank you. Although, calling setState from componentWillMount is not recommended, as the state object may not exist yet. Maybe use componentDidMount instead?",1523787106.0
Veranova,"Have a read of the documentation, there's a good summary: https://facebook.github.io/react-native/docs/stylesheet.html

In short: performance",1523727307.0
oYYY,"If you ever plan on adding [react-native-web](https://github.com/necolas/react-native-web) to your app, I recommend using [styled-components](https://github.com/styled-components/styled-components) over `Stylesheet.create()`. You'll save yourself a lot of headache with potential web CSS errors.
",1523729075.0
stathisntonas,"What’s wrong when importing it in every file? In almost every file you import React and Component so why the hassle if you add your styles?

Other than that,
https://github.com/Bhoos/react-native-theming",1523733702.0
Londomain,"Creating reusable components, like in a `common` directory will allow you to write reusable, semantic code across your app. At work I exclusively build RN apps for multiple clients, and each component references something like `primaryBrandColor` or `borderRadius` from a `styles.js` file in your app that you can customize for each project. That way when you set `primaryBrandColor` in your styles file, you know it will update across the app anywhere you are importing it. You could use something like https://www.npmjs.com/package/react-native-global-props to set app level styles like fontFamily, color, etc",1523759022.0
davidpaulsson,"Style your components like you want them, keep them small. Import your components. For theming stuff that can change, like colors, I keep them in redux. ",1523734113.0
Noitidart2,"This is a good question. I looked into this too but didn't get anywhere. I'm looking for a way to invalidate all cached themes, and change them, then update them. I couldn't figure it out.",1523739883.0
ibanb,Love it! Thanks a lot!,1523996838.0
ibanb,Url https://youtu.be/lDt1DTfZI00,1523734944.0
stathisntonas,"Why on iOS only? You encountered problems on Android with text to speech?

Nice app, it would be nice if the user could set how many words or characters would like to preview.",1523733871.0
jeevium,Your web page looks nice. What about Android version?,1523787345.0
ramzez_uk,Hmm but why this tool creates css which is not relevant to react native ? I would understand if there was an option to create both android and iOS additionally. Or did I miss something? ,1523644801.0
filipef101,"Hmm, I use ignite and it allows me to do like, ignite generate screen,  generate saga, generate action, generate component, etc
Seems easier than that
",1523651587.0
Taterboy_Legacy,VS code is my go to editor,1523627421.0
_ncpv_,VS Code is pretty cool!,1523630027.0
Qu4dro,"If you're like me and would rather get straight to work without installing/configuring a bunch of packages in an IDE, Webstorm is a great ready-to-go solution. Built-in support for ES6, JSX, Flow, Typescript, Prettier, Jest, Npm, Yarn, and so on. There is a small plugin ecosystem if it doesn't have something you want.

I've used VS Code and Sublime for other things, and they're solid for sure, but I feel like it would take many hours of installing/configuring packages to match what Webstorm provides.",1523631258.0
,"The top three seem to be Atom, Visual Studio Code, and Sublime. I tested all three for React Native and found Atom to be my favorite, due to ease of installing packages and its code color scheme. You should test a few yourself and find your favorite.",1523628033.0
notjonathanfrakes,I've been pretty happy with Nuclide on top of Atom,1523633083.0
redpopcornpanda,"VS code is a great editor for react native. I use it several hours/day for it! You can debug without much trouble, has a very nice UI, any sort of package you could imagine, good source control support. ",1523634398.0
renblaze10,Thank you everyone!!,1523676223.0
renblaze10,Tried out Atom. Looks really cool!!,1523712767.0
stathisntonas,Webstorm but it’s not free.,1523631188.0
monkJs,https://medium.com/dailyjs/11-mistakes-ive-made-during-react-native-redux-app-development-8544e2be9a9,1523624472.0
meganlwood,The built in RN Animated should do the trick: https://facebook.github.io/react-native/docs/animations.html. It’s less complicated than it looks. ,1523618913.0
uuu77,Try LayoutAnimation  https://medium.com/@Jpoliachik/react-native-s-layoutanimation-is-awesome-4a4d317afd3e,1523622824.0
Cosmosof,React native animatable with no learning curve ,1523687906.0
,"Why not just use the regular React Native Picker?

import { Picker } from 'react-native';",1523608706.0
whet_phartz_69,Export another function from your first file to get the value - literally just return the value. Then call this function in the second file when you want to know the value. ,1523563084.0
skipfiller,Damn that looks really well done! Is the app in that video a functioning product? ,1523554295.0
Velz_Kyos,Looks nice,1523554382.0
sinefine,Scad in atlanta? PM me if so,1523565849.0
filipef101,"Looks nice, the animations are gonna give your head some trouble but anything is possible with react native :)

If you have trouble with maps feel free to pm me, there are some issues nasty that you might face.

I also do paid consultation if you ever need eyes on the code.",1523567935.0
ShijinModan,This looks awesome! Well done! I'd be willing to help in a part-time/limited capacity (I already have a full-time SE job).,1523597858.0
grthakar,"Do let me know, if you are okay to work with a certified magento developer on remote based role.",1523602478.0
Bamboo_the_plant,"I've been waiting for an app like this. A couple of questions on privacy:

* Will you sell user data?

* Will you use end-to-end encryption on all sensitive user information?

Other questions:

* What's the monetisation model?

* Will any part of it be open-source?

I could *potentially* lend a hand on open-source modules in some of my spare time; otherwise, just throw whatever questions you want to towards this subreddit, and see how it goes.",1523655202.0
VivekNeel55,"Use onScroll to determine when the top is reached. Use the argument from onScroll, check for y value, if it's negative then the list has reached its top. ",1523638746.0
Ashoat,"Only if you’re using Haul, as to my knowledge Metro doesn’t support it. ",1523552918.0
rizwanahmed19,react-native-paper,1523517396.0
raks99832,React-native-material design,1523511864.0
,"It also seems strange that my auto-generated project uses App.js as the filename for the JS code, when this tutorial, https://facebook.github.io/react-native/docs/integration-with-existing-apps.html, talks about using index.js",1523496995.0
judemanutd,"It does indeed seem strange, I'd suggest you create a new react native project, just a temporary one and copy over the content of the same file in the iOS folder over to your existing folder. ",1523734642.0
Noitidart2,"Re Android:

This happens also to me with react-navigation lib (non wix).

Its showing the app background color. You can change that color with packages like this - https://github.com/johniak/react-native-root-view-background

Or it is the background image of your splash screen. I don't know yet how to remove this. Splash content always sits in back.",1523819263.0
Noitidart2,Were you able to figure this one out? I can't find a solution to remove the background image.,1524517288.0
matt_hammond,"AsyncStorege can only store strings. So when you write to it you should JSON.stringify your state object.Then, when you want to increment the number:
  read the string value you previously stored
  JSON.parse that string to convert it to a JS object
  increment the value
  JSON.stringify the object again 
  Write that string with AsyncStorage",1523488399.0
FezVrasta,How is the quality score computed?,1523480773.0
stathisntonas,You’ve forgotten to remove the default RN splash screen...............,1523466342.0
davidpaulsson,"Sweet! (Or should I say Slick ;))

So, you only get one trigger in the free mode?",1523647477.0
dark1201,Awesome list !  How about going into Navigation libraries too !,1523459705.0
jamongkad,Having been a React Native developer for over a year now. Why isn’t Android Studio not on the list? ,1523498546.0
Unforgiven-wanda,"I believe you should remove Deco, the project has been dead for years.
Also, Pepperoni is not a UI framework, but rather a boilerplate (starter project, to get easily started), it belongs in a category of its own; ""Boilerplates"", with something like Ignite CLI. (Although I wouldn't recommend Pepperoni, the boilerplate hasn't been updated since last year)

Shoutem UI should be added to UI frameworks too, as well as Nachos UI.

Code-push is part of the Appcenter suite, which includes ota updates, push-notifications, bug notifications etc...

For navigation, there's mainly two libs: React-navigation and React-native-navigation, both are still pretty immature, with the first having some mind-boggling issues, but they're making good progress. It should have its own category I guess.

You should have a misc category as well, for anything that doesn't fit elsewhere, which should include among others, here are some of my personal favourites: React-native-camera (allows barcode scanning too), react-native-largelist (A faster implementation of vanilla Flatlist), react-native-network-info, react-native-threads (to offload heavy work to another JS process),  Realm-query (which is a must, if you use Realm), Redux-form, which with a little tweaking works wonderfully on RN, Bugsnag, react-native-bluetooth-cross-platform, and I'm sure I'm missing a few others.

Other than that, great list. ",1523518067.0
mbrochh,"Where would things like Firebase and AWS Pinpoint fit in here? Metrics? Aren't people also using these for push notifications?

For user tracking there is also Facebook SDK and Mixpanel.",1523459896.0
ikbenpinda,"I'm not sure if it fits on the list, but [Passport](http://www.passportjs.org/) helps a lot with auth and doesn't require an external service like 0Auth.

Also, I believe the Firebase service for Push Messaging is called Firebase Cloud Messaging, and a great library to use it with is Invertases [react-native-firebase](https://github.com/invertase/react-native-firebase/)",1523471588.0
whet_phartz_69,Redux (as far as I’m concerned) and flux? Thanks for the diagram!,1523471733.0
tarpier,"Cool list! Some services are news to me. Thanks for that!

What about „react native debugger“, the standalone electron app, for debugging?",1523483219.0
mummas_boy,Visual Studio Code?,1523493620.0
tilde_tilde_tilde,I think Braze (https://www.braze.com/) fits as a Push notification provider. Super good to use. They have a react native bridge and everything,1523511604.0
ABrownApple,You can use firebase for Auth and push notifications as well. But nice list I liked it :),1523513863.0
yo_jim_bo,"This list is awesome. I wish I had seen something like this when I first begun using react native

I would add TravisCI to the CI tools along with Stripe/tipsi-stripe(library) to payment. 

Also, react native debugger as a stand-alone “chrome console” debugger. ",1523482044.0
chrisbianca,"Great diagram, though a few omissions:

Firebase does authentication, performance monitoring and push notifications through our react-native-firebase library.

You can also use Firebase Crashlytics for bug reporting.",1523515609.0
boon4376,Firebase could probably be listed in several more categories. I've been hooked on the whole ecosystem. ,1523536366.0
realtebo,"Move AR and VR on bottom of the list, to try to make list reading from 'basic' to 'more advanced' concepts.

Also. Where is navigation section?",1523718995.0
steveappdev,"Great share OP! I read somewhere that you are writing a blog post on this as well, do let us know when you publish it!",1523485292.0
contrarianism,Why only 1 payments option?,1523488650.0
CloudDump,"Wheres the AWS stack?
",1523497284.0
badgerbaws,Payments \- no stripe?    ,1523531233.0
judemanutd,"Firebase is listed as a local database, can you provide a link of how I can achieve that, a tutorial maybe or the docs would do too. ",1523541611.0
lionasys,Its really awesome tools to keep in mind while developing. Actually it’s a bookmark kind of material to review it everyday. Take a print today and pin to wall. Thanks for sharing such excellent map ,1523651396.0
pwterhu,"You should create this in html instead of image, so i could easily click the links to read more.",1523704771.0
DJ-YANIC,React-thunk maybe ...,1527996516.0
vafada,Xcode is malware not an IDE,1523465472.0
codercub,If you are using git you have nothingto fear. Before every link commit your state so your working directory is clean. Then then you link if it fails you can just `git reset HEAD --hard` and get back to your claim state and try again. I do a git diff after every link so I can understand exactly what it did. ,1523449868.0
stathisntonas,"Even if it fails, almost all modules on github have manual installation instructions for both platforms. 

In case it fails, you can compare the files in your project with the modifications the module dev has in the instructions at the readme file on github.",1523448127.0
ikbenpinda,"I try to avoid linking.

Linking can be breaking stuff. Personally i've had it break my app too many times, especially while using react-native-navigation, and while the errors where eventually fixable, it has been in a non-working state for days at times. Errors about missing modules that we're, in fact, there, imports that got messed up using link. Often the easiest solution was just copy-pasting code to a new project because i forgot to commit between links.

So far it only worked in one go when linking fonts or images.

Using git only works if your workflow allows it(regular, strongly seperated commits) and you made sure you got all files committed beforehand(including all those ios/android config files). ```git reset --hard``` is almost never without consequences, so be careful if you intend to take that route.

In my experience this [answer](https://stackoverflow.com/questions/40132169/why-is-react-native-link-some-native-module-a-lottery) is much closer to reality.",1523478583.0
BuggerinoKripperino,"What on earth is going on here. In the top half it looks like you declared 2 render functions in a class (didn't close the first render  function so the function render is a function in the render scope) one of them has a semi colon after the parentheses?! You didn't close the <View> tag. Didn't put the ending } before declaring the new class. I feel as though I've been trolled by reading this.

EDIT: It also looks like you declared 2 default exports which is also a no no. I will edit this when I'm not on my phone with a fixed version but maybe you should consider the fundamentals of React and ES6 before you start writing React Native",1523431339.0
prillian5,Why that ; on line 12 behind render?,1523432986.0
LEO_TROLLSTOY,"Unless I missed something from react, you also didnt close View on line 22 before starting with components",1523440113.0
Heka_FOF,Do you guys have also guide on how to setup Detox with real Android devices with BitBar?,1523442965.0
HomemadeBananas,"I think you accidentally a word. No, React Native is a framework, written with JavaScript, but also Objective-C and Java for the native parts. JavaScript is a multi-paradigm language but it is object oriented in ways. Java and Objective C are object oriented.

",1523409461.0
rockia,React Native and React JS are view layer frameworks. RN uses JavaScript as the language to control logics and the UIs are being rendered on the native side which uses Objective-C and Java. Objective-C and Java are OOP and you can also think of JavaScript as kind of OOP because everything in JS are objects including functions. ,1523431427.0
batmansmk,Having different platforms from watch to tv is very important! Thanks to Salesforce for porting react native to TV!,1523389671.0
stathisntonas,Strange how Apple TV can't use AsyncStorage like RN on mobile does...,1523429476.0
Rizens,"Unfortunately the video doesn't even try to answer the question, it just focuses on comedy / acting.

The debate of Flutter VS React Native is irrelevant.

They are two fundamentally different technology , one is designed to Port your React + JS Ecosystem to mobile , the other was designed to cover Google needs in terms of Entreprise Framework with respect of their so called ""[Official Language](https://news.dartlang.org/2017/04/dart-typescript-and-official-languages.html)"".

Let's assume for a second that I need to create ""Cross Plaftform"" mobile apps , flutter is maybe the last thing i want to choose right now. 

Why ? 

A real project has always requirement that you need to accomodate yourself with , you need to integrate with existing ecosystem , maybe with AWS for example you currently can't use Cognito cause it's not ported yet to Dart , can't use AWS Specific SDK cause they aren't ported yet , can't use Azure SDK etc... You can only use ""Google Stuff"" so Firebase + GCloud or have to create bindings from Java / Objective-C in this case there is zero advantage has compared to React Native.

With React ? You can use the entire Common JS Ecosystem , period.

In the same way , if the customer has a React or Angular2+ web apps written in JS or Typescript , why the f*ck would I bother porting it to Dart , or ask my entire team to learn Dart while Dart has been one of the least popular language on Stack Overflow for years ? It makes zero sense.

Flutter is perfect if you need a ""Mobile Only"" experience and you are building from scratch or if you are already using some Dart ecosystem ( [Angular Dart](https://webdev.dartlang.org/angular/) ) else , It's way too early to use it. A lot of stuff are missing in the SDK ( Third Party SDK (Stripe) etc... ) or just force your hand by like enabling Android UI style for both platform by default.

I don't think Flutter will go beyond React Native because Dart is not a language that had many importance outside of Google according to the past 4 years of stack overflow survey.[2018](https://insights.stackoverflow.com/survey/2018#technology) [2017](https://insights.stackoverflow.com/survey/2017#technology) [2017](https://insights.stackoverflow.com/survey/2016#technology) [2015](https://insights.stackoverflow.com/survey/2015#tech)
And companies have invested heavily in Javascript tooling and frameworks.

I think Dart and Flutter will peak at ≈12% in Stack Overflow survey, but JS will remain the most popular , unless school and universities start teaching Dart to junior developers I strongly believe it will remain a niche because it requires to learn a whole new language and ecosystem just one for one tech.",1523380799.0
stathisntonas,Hmm let me see. No.,1523378454.0
godhatesmetoo,Do I really need to learn Esperanto?,1523387095.0
cgomezmendez,"Why would someone using react native have to learn flutter? just curious, it accomplishes the same task so is not like you would be in dissavantage.",1523380359.0
stathisntonas,"These are almost all UIs out there, pick one that suits you:


 https://nativebase.io 

https://github.com/shoutem/ui

 https://github.com/akveo/kittenTricks

 https://github.com/xotahal/react-native-material-ui

 https://alligator.io/react/react-native-ui-toolkit-roundup

 https://avocode.com/nachos-ui 

http://carbon-ui.com 

https://github.com/callstack/react-native-ios-kit

 https://github.com/futurice/pepperoni-app-kit 

https://github.com/binggg/mrn 

https://bbbundle.co (paid, not components but screen design) 

https://github.com/react-native-training/react-native-elements 

https://github.com/callstack/react-native-paper 

https://github.com/appbaseio/reactivesearch/",1523377117.0
Velz_Kyos,"I am a big fan of React-Native-Elements. I don't have much experience with NativeBase. As a note, anything in these packages are quite easy to recreate with the default elements.",1523375054.0
anniashin,nativebase doesn't work with latest react native and that's why i don't use  it,1523377171.0
deadcoder0904,Do not use Shoutem. Its poorly maintained & lots of errors. Use React Native Elements or CallStack's UI Kit (Paper or IOS UI Kit) or React Native Kitten,1523378370.0
Veranova,"A viewpoint not yet expressed here: ""don't""

In my experience these pre-made UIs are not flexibly designed, ie. easy to restyle for your own application.

React makes it extremely easy to build both beautiful and functional components, so you usually save the most time by just building everything yourself, from native components.",1523379420.0
ahartzog,"Native Base has saved me a good amount of time, my only complaint is that the documentation is mixed. Sometimes you have to hunt around to figure out something needs a specific prop to work in an expected fashion. Overall though, would recommend.",1523387405.0
hatepoorpeople,I've worked w/ NativeBase and like it fairly well. What yellow warnings are you getting?,1523375057.0
stathisntonas,"React native elements has some errors in documentation or sometimes is incomplete. You’ll need to search at the github repo why the button name (as per docs) attribute wont work, it’s because it’s renamed to title and docs are not updated. 

The above is just an example. Other than that this ui package is really good, you can always check typings to find working attributes/functions.",1523378815.0
shwetassft,"I'm from team NativeBase. These warnings doesn't affect in that way   but these methods will probably be removed in React 17. Deprecated doesn’t mean it doesn’t work, it just means there is a better replacement for it. Do check this link for future updates on this- https://github.com/GeekyAnts/NativeBase/issues/1665.",1523454702.0
joshkmartinez,I very **STRONGLY** recommend material ui,1523682588.0
interactivejunky,Which url's in particular? Not having any issues on my end.,1523328663.0
Ashoat,You want [`keyboardDismissMode=interactive`](https://facebook.github.io/react-native/docs/scrollview.html#keyboarddismissmode) and the new [`InputAccessoryView`](https://facebook.github.io/react-native/docs/next/inputaccessoryview.html). This is only possible on iOS.,1523319541.0
-Alias-,I'd suggest using something like https://github.com/ivpusic/react-native-image-crop-picker to help you with this.,1523286739.0
,"TypeScript fits me better. It also has a huge community, flow seems to be used only within react. ",1523286357.0
shivawu,"I really wanted to say Flow, but I have to admit TypeScript has much better responsiveness on their issues and requested features, where as in flow, it’s just the community talking to each other. Expressiveness side I would image similar-ish, but need to verify that TypeScript can do at least as much as flow.",1523343712.0
oYYY,"I recommend staying within the Facebook ecosystem:

React https://github.com/facebook/react

React Native https://github.com/facebook/react-native

Jest https://github.com/facebook/jest

Flow https://github.com/facebook/flow",1523282945.0
richbuggy,"Definitely TypeScript. There's plenty of great tooling and support. It can also replace Babel too. There are up to date type definitions for most of the Facebook ecosystem - react, jest, graphql, etc - so don't worry about that.",1523317467.0
Noitidart2,"Flow. It just doesn't fight me, it works out of the box with React stuff. With TypeScript stuff just doesnt work without manually/special customization. Also I can just type annoate some stuff and the rest of my app gets annotated for free. ",1523348508.0
,The consensus here seems to be in favor of TypeScript. Has anyone here tried implementing TypeScript with Expo? How did that go?,1523375445.0
MattBlumTheNuProject,Definitely Typescript because it’s great and also used in many different contexts. ,1523303083.0
Calbesz,"Typescript seems like a win win no brainer IMO. Flow didnt really seem to take off anywhere else besides only React developers whereas Typescript seems to be becoming more and more popular within React and its also used elsewhere in Angular.

Just makes more sense to use Typescript so you can translate your experience with it.",1523303432.0
Heka_FOF,I guess there is a reason why you can't ask question on StackOverflow ;),1523274450.0
Neitzches,"What isn't fully transparent? Is it the 2 black lines? If so set borderTopWidth and borderBottomWidth to 0.

If its the input add background color rgba(255,255,255,0.5) where 0.5 is your opacity. ",1523597799.0
yonnyy,Maybe `lightTheme` overrides the backgroundColor? ,1523308401.0
jeevium,"Haven't tried the Nanodegree program... but where to start depends on your level of experience and usually there are more than 1 places you need to look into, in order to get a more 360 degree view. Where do u stand in terms of experience? Have you tried JavaScript / React before ?",1523261046.0
marco5d,Stephen Grider’s courses in Udemy were pretty neat,1523262364.0
Nyquiiist,"Umm, one of the creators of the React Nanodegreeprogram, Tyler Mcginnis, has courses on React and its ecosystem up on his website. $20 a month IIRC. 

Worth checking out.",1523461026.0
stathisntonas,Which navigator module are you using?,1523215352.0
,"React Native is diffrent in the underlying platform , but the api and the dev experience is similar. Also check out flutter if you dont mind Dart, its a nice tool also.",1523201652.0
HomemadeBananas,"You’re still using React with React Native, but you’re targeting a different platform, using components like View and Text instead of HTML elements like div and p. It’s not a totally separate thing but another layer replacing React-DOM. 

I learned React by making React Native apps before I made any web based apps, no issue with that.",1523205397.0
godhatesmetoo,Nice. Thanks for sharing. This might help some people who struggle with TypeScript projects. Have you seen [Phaser](https://phaser.io/)? It's not React Native but you can use it to build desktop and mobile HTML5 games in JavaScript and TypeScript. Maybe it's something you might want to consider when you want to build something bigger.,1523219496.0
Noitidart2,Absolute superb update! Thank you man for this contstant work and sharing. I haven't got a chance yet but I found this really cool thing to test out with useNativeDriver. It's native tracking - https://twitter.com/kzzzf/status/958362032650244101 ,1523251086.0
heinzawhtet,"Due to Apple developer guideline, you can no logner run snack like before.",1523188786.0
Bamboo_the_plant,Was expecting a whole lot more than just a rambling description of a self-explanatory boolean field in `app.json`...,1523183336.0
footballbloodyhell,"of course, I have one app live both using expo camera and notifications. The camera is working perfectly, there are some API for manipulating the image as well after clicking the photo. Expo server will handle both IOS and Android notifications, it's super easy. reliable as well(as much as my experience).",1523132271.0
stathisntonas,"You are asking how to bypass limit ad tracking? You know your app could be removed from app store if you tamper this, right?",1523127584.0
kbcool,"I don't know of an out of the box solution but three.js is available via expothree https://github.com/expo/expo-three

There are plenty of examples of projecting 360 degree images and videos using threejs. Here's one:

https://threejs.org/examples/webgl_panorama_equirectangular.html

Input is done differently so you'll need to hook that up yourself.

Otherwise do as /u/stathisntonas says and use a html based viewer in a webview. Performance difference between the two won't be huge unless you plan to support ancient phones.",1523114639.0
stathisntonas,"At the moment i think it’s not possible for both platforms, webview will work on both platforms though.",1523092182.0
Noitidart2,This one seems to support Android - https://github.com/XebiaStudio/react-native-google-vr-panorama,1523120804.0
Noitidart2,"I started with this when I was new to RN, but quickly learned my mistake. The react-router pattern is useful for when you have URLs. And it does no navigation. I moved to react-navigation.",1523121117.0
Velz_Kyos,"I am the lead mobile developer and we just recently published an app that is unfortunately not open source but, it is incredibly frustrating. Much of my time has been going into fix other libraries or building bridging between native for both platforms. 

For Navigation, what I found to work the best for us is to ""Fake"" normal navigation. A large amount of the ""Stack"" Navigation is actual just our Redux keeping track of the stack and replacing the current view with the correct one on navigation as people move forward or backwards.",1523052422.0
cloudprogrammer,"If your flow is something like the one in my app, I can help you out. I've got nested stacks and drawers which get pretty complex. ",1523053196.0
Dimasdanz,"Have you checked [React Native Navigation by Wix](https://github.com/wix/react-native-navigation)?  
I've been using it for almost a year, and it's great. While their v2 is in the work, v1 is still good enough for most use cases, I haven't met any major issues yet. Any question you'd like to ask, ask away.",1523077519.0
heckchuckman,Have you tried using the AppState API? https://facebook.github.io/react-native/docs/appstate.html,1523047608.0
iamnetminder,"Most push notification packages have a way to subscribe to when the app is opened via a push notification. Here's how I do it (example is with Expo but the concepts are the same): https://github.com/HandlebarLabs/trivia-app/blob/master/mobile/App/util/pushNotifications.js#L55

I'm actually working on a course (https://learn.handlebarlabs.com/p/master-push-notifications-in-react-native) dedicated to push notifications in RN, if you're interested. It'll be open next week.",1523388645.0
jaxoncreed,"I've been trying to figure out what's been going on for weeks. But, haven't found anything that works. :(",1523037281.0
jeevium,"If you can execute `cd android && ./gradlew assembleDebug` then what is the problem? To execute `./gradlew assembleDebug` you need to have navigated in `android` folder first.

Also the description issue in Stack Overflow is big, making it hard to spot the problem.",1523086273.0
stathisntonas,"Biggest challenge/gap in my opinion is navigation. 

React-navigation can bottleneck the bridge and single taps sometimes are not responding, you tap again and the nav stack is being pushed twice. There are workarounds for this though.

Wix navigation has some bugs and resolving them takes too long or devs do not care. 713 open issues speaks by itself. I know they are on the road for v2...",1523035144.0
Gabdelyon,"File sharing
I believe that due to the bridge anything more than 10mb is pretty difficult to work with. At least since we tried and I was something like 5 months ago. ",1523047695.0
Neitzches,"Symlinking. If you plan on sharing code across multiple apps or building a monorepo, you have to use [Haul](https://github.com/callstack/haul) since the Metro Bundler doesn't support symbolic links. Without Symlinks development of node modules is a pain. ",1523108762.0
NikolaiStoilov,Always wanted to know my age,1523035816.0
ExtremelyQualified,Congrats for launching something ,1523041571.0
zebrasinpyjamas,very bad ,1523026752.0
anuragdadheech,Can't imagine anyone asking these.,1523031143.0
BeenLurkingForYears,Maybe number 8?,1523062912.0
jeevium,"They don't look like interview questions indeed.. Maybe number 8 but it's a React question overall.. 

Experience about React Native overall is limited right now, so if you attend an interview there's a high chance the interviewer \(manager or technical\) will not know the details about RN and that's why they will want to hire you...  ",1523086652.0
cloudprogrammer,"I first created my app in Swift for iOS then Java for Android and tried to maintain them separately which as you can imagine, for one person can be difficult.

So I tried Xamarin for a bit but that didn't have support for libraries I was relying on so I had to find something else. Then I found RN and everything instantly starts piecing together for me.

I really like it and believe that it's going to be a big part of the future of mobile dev. Things I like about it: native ui, performance, animations, native APIs, npm, typescript, great VS Code/Webstorm integration, debugging, navigation & other good libraries. Things I don't like: npm, upgrading RN versions(sometimes) & that's it I think.

Even with NativeScript and Flutter getting better, I'd still stick with RN, it's really awesome. ",1523017260.0
andriniaina,"* I hate : upgrading from a version to another is still a pain in the ass, with sometimes breaking changes (but mainly because many ""cool"" libraries are abandonned and reference an old react-native version)
* I love : everything else
* I would like : more native adapters/ui out-of-the-box (eg: in-app purchase). Why not include everything from expo.io?",1523034630.0
rubenescaray,"I left it because I have no interest in writing code using Swift or Java/Koitlin.

I began as a web developer, I used my JS knowledge to build a few RN apps but then I dropped it alltogether when I needed to add functionality via Native Code.

Also I don't have a good enough machine or phone to develop in RN, if I had a Mac, I would have continued in the RN path",1523028782.0
Bamboo_the_plant,"Spent a harrowing year making my first iOS app in Swift. Got fed up of the slow compiler and build times holding me back. I'm a full-time TypeScript dev in my day job and wanted to pick up React as a skill whilst not getting rusty with phone tech, so RN was a perfect fit. Still astounded by it!",1523019914.0
stathisntonas,"I’ve made 2 apps with Ionic 2, they are fine but i always had in the back of my head that i need something better and faster. I played around with NativeScript but i was really furstrated with the lack of mature modules like native maps etc.

I ve build 4 new apps with react native and since then i can’t look back. ",1523031972.0
TheSacredBroom,"I basically just like that you can develop on ios and android at one time and it's code reloading feature.

But besides that, not much. I have just a little of android \(java\) background, so maybe native development suffers from same stuff, but both JS and RN give you really basic packages to which you add a lot of additional packages, which you have to learn how to use, what are their issues, how to overcome them etc. You become dependent on other peoples work a lot, choosing navigation is a lottery, I find supporting all different screens/devices and orientations at one time difficult, mainly catching orientation changes and proper handling of them. I feel like you become those guys on Earth during Apollo 13 mission that were told to create air filter or something from limited stuff they were given, they did, yeah, but didn't seem rock solid..",1523035703.0
knmaswath,"I gave some thoughts about Native Development without CS background . SO My first thought was hell no!!!!

I ran away from native development . I started preparing for frontend . Learned React 

So naturally I started leaned into ReactNative(still learning though).

I live the way its designed . Like Component Based , One way data Flow awesome support from both facebook and community etc...

What I don't like is ... The learning curve . Learning react will give an understanding and minimal advantage . But app development is a completely different platform . So many things have to be learned to develop a complete app",1523042208.0
jeevium,I have documented this info in an article I wrote a couple months ago: [Why I tried React Native and how did it go...](https://medium.com/building-with-react-native/why-i-tried-react-native-and-how-did-it-go-pilot-story-1x01-ae72b0f48474),1523085887.0
Neitzches,"No in-house native skillset, we're a .NET house and have had bad experiences with Xamarin in the past. 

So we trialed Ionic 2 and React Native. RN had the slowest ramp up time to finish the demo project but Ionic was buggy with virtualised lists and some of the cordova native plugins were breaking my build. So we decided to go with RN - Facebook and Instagram use it so that's proof that it scales, too. 

Once I really got my teeth into React Native is when things started flowing quickly. Being able to go from concept to prototype in next to no time. I love almost everything about React Native. 

Dislikes: 
 - No symlink support with the Metro Bundler. Which has had me resort to using Haul. 
 - Navigation is a nightmare for more complex navigation flows. 

Overall I'm happy. ",1523108381.0
Velz_Kyos,"We wanted to cut down development time which it did. However, it is still so young that it is missing any functionality. I know that there are many libraries that can support and add in the missing functionality but they tend to not be made by people with knowledge on the native system they are implementing. ",1523028380.0
filecabinet,"Already know React plus the basics of Android/IOS.

Things that shine to me:

* decent UI components already out there, e.g., native-base
* Expo is a decent gateway (at least for me and the needs of the app I made)
* React itself is relatively concise
",1523033662.0
HertzaHaeon,"I didn't want to learn Java (because it would pull me into the dark underworld of backend development at work) and friends' experiences with Xamarin didn't enthuse me. I know Javascript and React well, so it fit right into that and let me start development with a minimal speed bump. Even better, I could use all the libraries and tricks I know from before.

Overall React Native works well and does what it promises to do. Most solutions are the same or very close to regular React, which is helpful. Performance has been great so far.

Settings up the tools and getting everything to work has sometimes caused strange time consuming bugs. I've also had trouble integrating with native functionality, but that's probably more due to my own lack of skills than anything else.

I've also missed some official ways of solving things with components or patterns. Custom libraries and solutions out there are many but haven't always been very polished. That's slowly getting better though.",1523037207.0
maujour,"I've been coding in Android Java for about 6 years, and when Kotlin cames out I think that was the perfect time to leave and start React Native. First because as the devices keep improving their hardware, perfomance will not be a problem anymore, second, even some Google departments don't believe anymore on native dev (see Flutter)",1523049041.0
agmcleod,"So i dove into react native pretty much when it first released. I worked on a trello clone that i had built a rails + react app in before. I also built a workout app for myself. My workout app i would maintain occasionally, but i think is using something like version 0.3. 

This week i joined a team at work on a react native project. On my own i primarily just did iOS as it was apps for me to use, so i didnt test android that much. Whew do i find it painful to test. Cordova at least i can usb debug pretty easily through chrome. With the remote debugger through the device i need to set the host IP in the device settings. Then when i am connected, everything runs sooo slowly.

What I do like is being able to use react & its ecosystem. I love redux & the component structure. I for the most part like the flexbox styling.",1523064731.0
KyleG,"I already knew React and wanted to write a blood pressure app bc I didn't like the ones on Google Play. I did not want to waste my time setting up Java BS.

Of course now I've ended up learning Dart and Flutter XD",1523073999.0
nathvarun,Try it out : https://expo.io/@nathvarun/apple-music-ui-clone,1523009977.0
chiamaka_sil,"Very nice work. I tried to do this and failed miserably 

Quick question: If you wanted to extend the functionality in that when you press on the miniplayer view, it translates to the top as you have coded using panresponders, how might you go about it?",1524794614.0
cloudprogrammer,I'd recommend vscode and webstorm,1523017357.0
janpaul74,... a year and a half ago.,1523011130.0
Noitidart2,VSCode it is. Nuclide and Atom are definite no's.,1523251250.0
cloudprogrammer,"There was a good set of tutorials about making a voice/video call app on YouTube. I don't think it was too hard, I'll try to find it so you can see for yourself. 

Edit: https://www.youtube.com/playlist?list=PLM5nyCrpk9vaYCZRjGg1TEU4cQZMYZqvy",1523025547.0
stathisntonas,"import {Dimensions} from ‘react-native’ 

const {width, height} = Dimensions.get(‘window’)

Then in your FlatList styles add 

height: height - 20 (any number, it could be the height of your bottom navigation bar).",1522995945.0
limdongwon,"I ended up putting the module into node\_modules directory.

&#x200B;",1536878262.0
super-beef-deluxe,Has anyone successfully used react native with opencv for image stitching?,1532638071.0
SizzlerWA,"Congrats!  But your release notes are hard to read on mobile :-(

https://i.imgur.com/ovCCNja.jpg",1523061019.0
chrisbianca,"I'm pleased to announce the v4 release of react-native-firebase. This has been a long time coming, and includes a complete overhaul of our messaging and notification support to make it more stable, feature rich and generally a lot easier to work with.

We've also added Firebase Invites, Multi-Database URL support, a better API for Firebase Dynamic Links and lots more. Check out the release notes for everything that's changed.",1522956600.0
Neitzches,"It's a spot on library. I was dreading adding Biometric auth to the app, achieved it in around 20 minutes. Very impressed. ",1523108846.0
,People are moving away from Facebook — due to the recent development,1523390789.0
FullMetal21337,Is there an expo link to try this out? ,1522947287.0
Specialistik,You may consider holding data in a json file,1522904125.0
stathisntonas,Check out Realm Database,1522907396.0
raks99832,You can use Realm here. You can check out https://jaxenter.com/realm-local-db-react-native-139697.html,1522909295.0
kbcool,"Nothing wrong with asyncstorage for key/value data. Value can even be JSON, hence complex. It's only when you want to do ""fancy"" queries you need to progress past it.",1522946287.0
Neitzches,"Realm, Async Storage, or if using Redux we're using redux-persist. Does the job for us. ",1523109039.0
LosingAnchor,"AsyncStorage or local database like SQLite.

Realm is great! However it has technical issues which BREAK debugging. These issues make it a no-go for React Native. ",1523547808.0
meganlwood,Why didn’t the chart libraries work? Personally never used those libraries but I would assume using Redux and reloading the data periodically as props passed to the chart should work. ,1522911808.0
stathisntonas,"Check out Victory Native

https://github.com/FormidableLabs/victory-native

Never tested it myself, just pointing out another library.",1522957812.0
chmpgne,"I guess that there is a lot of native functionality provided by third party modules, maybe wrappers around common native libraries.

For example, we use the React Native FBSDK wrapper for social login, maybe the google analytics wrapper. We’ve written some stuff to wrap advert webviews, scrollView syncing. 

For high Perf gestures check out React Native gesture handler which suit most of your performance uses cases.

I know wrappers exist for the chrome cast API, maps API with React-native-maps. ",1522880309.0
Noitidart2,"I use native modules whenever I can. For instance, on my current Android project, I'm using a package specifical to give me the native radio button - https://github.com/sichacvah/react-native-radio-button-android - dropping them in and out is as easy as react-native link react-native unlink. Use them fearlessly.",1523000330.0
hatepoorpeople,"I'm using react-native-navigation, typescript and redux. What sort of problems are you having?",1522860528.0
LEO_TROLLSTOY,"Yeah, don't use react-native-navigation. I had too much issues with them and next project will for sure be without them. The whole Wix thing is looking bleak right now. I was using their camera kit and it's just too damn buggy and they make no attempt at addressing issues. One of the most important things I have learned so far in RN development is to go core. Use as less packages as possible that are maintained by third parties. ",1522907384.0
kbcool,"Unless your app is very basic you'll have to eject at some point. Not much can be done without some sort of native module.

That being said you can probably clone your folder where your project is. Eject, run the initial build app center needs then go back to your original unejected project but don't quote me on that. It would likely cause some problems if you need to eject for another reason later anyway.

Either way it's unavoidable at least once as xcode needs to generate the certs etc for app center to do your builds. ",1522946137.0
TheNumberOneCulprit,I would strongly recommend ejecting as soon as possible. You're going to encounter a good deal of limits that you really don't want later on in the process.,1523369887.0
SolidR53,"Are you talking about how to set it up properly or writing the actual test?

We have detox in ueno's starter kit included by default so it's just matter of writing your own tests. It's pretty simple, actually.

https://github.com/ueno-llc/react-native-starter

Here is the default included test: https://github.com/ueno-llc/react-native-starter/blob/develop/__tests__/SplashScreen.e2e.js",1522903587.0
hatepoorpeople,interesting. I'm actually just getting started w/ a new project where I was curious how to get the three platforms to reuse as much as possible. Will check out reactxp.,1522850745.0
dontforgetpassword,"So I’m not exactly a remote React Native dev, but I have hired them. The contracts just for help if top of their game (think really integrated into the community) cost like 10-20k for 10-20 hours a week. But tend to output amazing work in that time. 

As for getting clients, it’s a different beast. People don’t do it as loosely as web, the value prop is often lost. Web is something people understand. Depending on skill level though...you can get corporate clients super duper easily if you’re a known badass. 

Oh and bonus points: knowing android and RN is a really sought after skill. 

Edit: to easily answer your question, if just picking up random projects you’ll probably need to expect less moola. Per project, in most cases, less than 12,000$",1522814772.0
jasdeep13,I freelance React Native and other web technologies both frontend and backend. And I simply bill by the hour. ,1522818685.0
OYM-bob,"I am (started 6month ago). I started with a startup with very low pay compared to all my work, now I just charge by day (I'm french, so you can't compare to other country, but I charge 400€/day).
It's as easy, I'm also a fullstack dev web in react (without design/ui/ux, just the technical part), and there is plenty of jobs here in France when you have contacts.

Also : full time remote =) Good luck !",1522836321.0
alien3d,"1. i charge per custom project request not per hour basis. 
2. Now seem much harder, either web or phone app. Now market most on phone app. 
",1522828558.0
hatepoorpeople,"Been freelancing for 14 years and have been doing some React Native freelancing recently. Your questions aren't really that specific to React Native at all to me. It's still the same regardless of technology.

1) It depends on what the app does. I pretty much always charge by the hour because it's pretty much impossible to detail every single thing the app is to do and the customer always, always, always changes their mind. With that said, my ballparks are pretty good typically.

2) Not necessarily. It's different sometimes because I think people think apps grow on trees, so I get a lot more sticker shock when giving ""ballparks"" on phone apps vs. web apps. But those who understand the value have been very, very happy so far.",1522848695.0
Cosmosof,"hello everyone, today I just released 'Relate: Relationship Management IOS App' to the IOS Store. 
Love hearing feedbacks.

App store approved in 14 hours.

The Tech Stack :  React Native, Google Functions, Firebase and more.

I am now available for the job market as a React Native, reactJS, iOS, Android and web full stack developer in Boston-MA area or remote jobs.

[iOS app download link](https://itunes.apple.com/us/app/relate-relationship-management/id1367008604?mt=8) ",1522799811.0
SizzlerWA,Can you add an iOS AppStore link?  I can’t find it in search ...,1522804558.0
cloudprogrammer,"This is beautiful dude, seriously good work. Are you using firestore or the realtime database? I started converting my app to firestore but found its querying capabilities to be limited so now I'm thinking about creating my own API, did you run into a similar problem? ",1522831643.0
Gustash,"Try to make a simple Contacts app. Something with simple CRUD, using some REST API like Firebase and use Redux. Try and do something simple that touches on the most important skills you need for React Native. That example is what my current employer asked me to do for my job interview. ",1522783975.0
godhatesmetoo,"You can copy things like folder structure etc. from [here](http://www.handlebarlabs.com/). There's a free video tutorial in which the guy builds a currency converter app using React Native, redux and redux-saga. It's not TypeScript, but you can simply use

    create-react-native-app my-app --scripts-version=react-native-scripts-ts

to create a TypeScript React Native app. When he is setting up eslint, just install

    yarn add --dev tslint tslint-plugin-prettier prettier tslint-eslint-rules tslint-react tslint-config-prettier

Then if you use vscode install the prettier, tslint, react native snippets and react native tools extensions (and the other extensions he uses, if you want). 

I use the following tslint.json

    {
      ""defaultSeverity"": ""error"",
      ""extends"": [
        ""tslint:recommended"",
        ""tslint-react"",
        ""tslint-eslint-rules"",
        ""tslint-config-prettier""
      ],
      ""jsRules"": {},
      ""rules"": {
        ""interface-name"": [true, ""never-prefix""],
        ""member-access"": [true, ""no-public""],
        ""prettier"": true,
        ""ter-arrow-body-style"": [true, ""as-needed""]
      },
      ""rulesDirectory"": [""tslint-plugin-prettier""]
    }

The tslint-config-prettier package disables all redundant tslint rules, so they can be managed by prettier. tslint-plugin-prettier makes all rules managed by prettier nevertheless appear marked in the IDE.

Also add the following workspace settings to ./vscode/settings.json

    {
      ""editor.formatOnSave"": true,
      ""tslint.autoFixOnSave"": true,
      ""tslint.packageManager"": ""yarn"",
      ""typescript.tsdk"": ""node_modules/typescript/lib""
    }

When you run into problems with finding the correct types for redux actions, state or reducers, just use a search engine searching for 'react native typescript' and 'redux typescript'. There is a lot of documentation :)

EDIT: You can get rid of a lot of yellow deprecation warnings by changing the React Native version to 0.54.4 in package.json.",1522786576.0
incurious,"Unfortunately, all of the TS projects I've written in React Native are still proprietary. I'd be happy to answer any specific questions you may have though. I've written 3 medium sized apps with it (between 40k and 150k LOC each).",1522775968.0
Bamboo_the_plant,"I've open-sourced my [React Native TypeScript Expo app](https://github.com/shirakaba/react-native-typescript-2d-game); it's a simple 2D game. You can even try it out from the Expo app store at https://expo.io/@bottledlogic/the-box

Note: It's been getting increasingly complex in the last couple of days of development, as I've been adding new features in. I'll eventually integrate Redux once I can see the limitations of lifting up state and passing props down several levels (it's beginning to show).

It was quite simple, and served as a good starting point for implementing any general project, in version 1.0.2 ([commit fe55b073ce](https://github.com/shirakaba/react-native-typescript-2d-game/tree/fe55b073ce925c177471e985b4c02759bbf9073a)), the same version currently synced to the Expo store. Now that interactive items have been introduced, there's a bit more project-specific code to wade around.",1522841524.0
orebright,"I have nothing against flutter's syntax. JSX may help readability, but it's by far the least helpful thing in using React. When I originally used React, I didn't even use JSX and the benefits were quite clear: unidirectional data flow, feature-scoped encapsulation, composable module structure, conceptually **simple** state management, emphasis on functional programming, **unit-testable UI** (Selenium is the scourge of my life), universal rendering, etc...

I haven't really dove into flutter yet, but if it has these concepts I think it's going in the right direction, and if not they should probably focus on deeper concepts before worrying about the varnish. You know what they say about polishing a turd *cough vue*.",1522715286.0
Noitidart2,"I don't like Flutter, but if i ever wanted to use it, it would be nice if this was in there. Voted up.",1522720596.0
besthelloworld,"That's not what it's supposed to be.  JSX compiles down to plain JavaScript objects, you know.  Flutters style is an object oriented elegant methodology for what really is the same thing (albeit with an awkward language choice).",1522718101.0
,[deleted],1522713027.0
amloelxer,"I have experience in both, but I’m going to bed right now. Will post an in-depth comment tomorrow! ",1522722327.0
amloelxer,"So for context here I use Electrode Native for work and Expo at home for personal projects. As for starting an app from scratch, I would 100% recommend using Expo over Electrode Native. Electrode Native at it's core is made for integrating into a native mobile app. Every time you run ""ern run-ios"" (the equivalent of npm start, or react-native run-ios), it dynamically builds an iOS app known as an ern runner with all the javascript/react native dependencies. By all means you could start and probably finish a project like this, but it's kind of misusing the power of it and you'll be fighting against the grain the whole time. The awesomeness of Electrode native comes from you being able to dynamically generate a native framework with all your javascript/react native dependencies, and easily import it/dynamically generate APIs between react native and Native. By starting a react native project from scratch while using Electrode-Native, you lose all the amazing portability of Expo (i.e scanning a barcode and having it show up on someones phone). That was a terribly brief overview, but let me know if you have any more question and I'll be happy to answer them.
Tl;dr Electrode-Native is amazing but shouldn't be used for starting a react-native app from scratch unless you know it's going to be imported into an existing native app eventually. Choose Expo",1522764075.0
utkvfl,also interested in the responses ,1522721067.0
ddzrt,"Nice article, a plus from me!",1522685110.0
settebello8,"Thanks for sharing, great article for things to consider when building more complex apps. Exactly where I'm trying to go right now with the offline support, queuing actions etc.",1522722252.0
Noitidart2,"I  can't help much but here is a thing that helps create the module - https://github.com/peggyrayzis/react-native-create-bridge
",1522697410.0
dduko,i blame apple for this.,1522673925.0
Noitidart2,This is horrible. Why did Apple do this? I wish Expo fought more to convince Apple to let this stay. Sending text to device is not possible for me because none of them have phone service. Sending email is but Ill have to now setup email on the test devices I get (everytime I get them).,1522697626.0
taktjan,Can someone link me to the part of the Apple Review Guidelines where they talk about using qr-codes? Are they now forbidden?,1522743631.0
nkristoffersen,Super lame and shady. They didn’t even mention it in the app release notes. ,1522670503.0
dduko,i'm messing around flutter and the documentation is awesome. i wonder why facebook projects has such terrible docs.,1522673712.0
-Alias-,It could be on https://github.com/facebook/Docusaurus,1522762636.0
Buliam,"Hey guys, check out the madewithreactnative.com interview for the [Burst App](https://burstapp.io/).
It is a reddit browsing app that is designed to help you burst out of your filter bubbles. ",1522593873.0
dracostheblack,Would be nice to see some game play. All that's shown is logging into Facebook ,1522591325.0
stathisntonas,"Yes you can, react-native-camera supports qr code scan out of the box then use Share from RN https://facebook.github.io/react-native/docs/share.html to send the email or any other community module about email/sms etc you want.",1522522085.0
ogv11,"Also, there is also the bar code library from expo. I used it on my first app",1522522133.0
homanp85,React Native is just an extendable javascript layer. You can do everything that you can do with Swift/Obj-C and Java. You might have to port specific APIs that aren't ported already to the JS layer. ,1522754708.0
Jgfidelis,"I think anything is possible with RN. A cool thing, in my opinion, is that if you think that something is missing, you can make a bridge (native module) and make that available for the community. That is what we did with the react-native-camera (the old implementation was not good enough, we started contributing and eventually became owners of the package) and I created the visa-checkout native module. So anything is possible if you work on it, in my opinion. Open source helps a lot!",1522516401.0
JS_PY_and_Crypto,"You will be using the JS api most of the time. So you're mainly going to be using node packages to communicate with api's. Especially if they use web browser related things in their JS api.

I'm currently having the worst time trying to implement react-native-google-signin inside a react-native-firebase package. React-native-google-signin hasn't had support for like a year...

I'd say 90% of the time you will find support.",1522539720.0
homanp85,"There are actually apps that can't be built solely on the Javascript layer. Specifically apps that should work in the background, example would be chat or voice apps. You can read more about it here: https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/BackgroundExecution/BackgroundExecution.html

After building a couple of production apps I've found that RN is really useful and great when an app is in the foreground. You would probably need to write some Swift/Obj-C if you want to do stuff in the background. 

Don't know exactly how that works in Android but I would guess it's similar. ",1522757937.0
LEO_TROLLSTOY,"Sweet!
",1522508736.0
tweettranscriberbot,"^The linked tweet was tweeted by [@hyper_text](https://twitter.com/hyper_text) on Mar 29, 2018 12:00:54 UTC (13 Retweets | 48 Favorites)

-------------------------------------------------

Making a short write up about how we built Homestory ([http://producthunt.com/posts/homestory-ar)](http://producthunt.com/posts/homestory-ar)) with React Native. One of the coolest benefits, hot reloading in AR! 

[Attached video](https://video.twimg.com/ext_tw_video/979326986383511552/pu/vid/720x1280/vipWuZriFTJHwNJw.mp4)

-------------------------------------------------

^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1522500636.0
b_n,"We just finished building an ARKit app with RN, I wrote about the process [here](https://medium.com/homestory-ar/building-an-ar-ai-furniture-app-with-react-native-1847bc1fcbaa)

React Native ARKit: https://github.com/react-native-ar/react-native-arkit",1522503366.0
madhorse,article link for the lazy ones: https://medium.com/homestory-ar/building-an-ar-ai-furniture-app-with-react-native-1847bc1fcbaa?ref=madhorse,1523738725.0
tweettranscriberbot,"^The linked tweet was tweeted by [@hyper_text](https://twitter.com/hyper_text) on Mar 29, 2018 12:00:54 UTC (13 Retweets | 48 Favorites)

-------------------------------------------------

Making a short write up about how we built Homestory ([http://producthunt.com/posts/homestory-ar)](http://producthunt.com/posts/homestory-ar)) with React Native. One of the coolest benefits, hot reloading in AR! 

[Attached video](https://video.twimg.com/ext_tw_video/979326986383511552/pu/vid/720x1280/vipWuZriFTJHwNJw.mp4)

-------------------------------------------------

^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1522499996.0
stathisntonas,"Use lodash to map objects or convert mapblocks to array of objects:
mapblocks = [{
‘A’: {x:20, y:100},
‘B’: {x:150, y:400}
(...)
}]

Your life will be easier then.",1522479327.0
secretL,"Hmm.... first of all you should provide an expo snack so we can see what the actual result is of what you are trying to do. Your incomplete bits of code are hard to critique.

Your map function looks ok although I would use an arrow function

so 

    Object.keys(mapBlocks).map((key) => {
    //code
    })

Your styles are all crazy looking.

You should declare your styles as (outside your class or in your render):

    const styles = StyleSheet.create({
	touchButton:{
            //style props
        }
    })

then use them like this in the touchable Opacity:

    style={styles.touchButton}

if you want to add styles on top of that but not pre defined in the styleSheet do this. Though i dunno what you are trying to do with this right and top prop, again where a snack would help.

    style={[styles.touchButton, {right: mapBlocks[key][0], top: mapBlocks[key][1]}]}
",1522484926.0
indreamc,"Try to add `position: 'absolute'` & remove `alignSelf` for touchButton, then and `position: 'relative'` to container component.",1522565489.0
Noitidart2,"This is being fixedby the RN team. iOS fix landed, not yet for Android. There was a reddit topic somewhere here about it.",1522533020.0
ExtremelyQualified,Haven’t tried this personally but looks promising https://www.npmjs.com/package/react-native-two-way-list,1522458232.0
Dimasdanz,"How's the FPS so far? When there's a lot of task running (ajax call, etc)",1522411576.0
Bamboo_the_plant,"Do you use any SVG animations? I recently experimented with some (manually animated, not using the native animation APIs or anything, mind) in https://github.com/shirakaba/react-native-typescript-2d-game (source for that experiment not yet pushed), but the performance was unusable.

What are your top optimisation tips, and do you have any experience with using SVGs?",1522418466.0
alexduckmanton,"Hi everyone! Last year I posted about my side project Burst - [https://www.reddit.com/r/reactnative/comments/79wvbt/ive_made_a_react_native_reddit_client_with_a/](https://www.reddit.com/r/reactnative/comments/79wvbt/ive_made_a_react_native_reddit_client_with_a/)

I got a lot of great feedback, but people seemed most interested in how I hooked up the animations. Hopefully this article helps!

Happy to answer questions if there are any.",1522406320.0
LightmanXYY,"great, will test in on our project",1522506198.0
rdrigocs,"Awesome I was looking for something like this a while ago, ended up just handling it in the back end  ",1522433916.0
kbcool,"That's great to see but you're not really much further than other posters previously. You've just made the output of a obj c/java implementation available to react native. Which in itself is nice and helpful but the community is pining for a full set of native bindings.

Can you do that for us?! I've had a look and it's a lot of work so I understand if the answer is no :)",1522403596.0
adamjnav,"Hey oogleh,

If you have a standalone build of your app, the push notifications will be sent to your app. A different Expo Push Token will be generated for your standalone build than the one for the Expo Client so that push notifications will be directed to your app. If you're experiencing any issues with the push notifs not working as expected, please create a post on our forums https://forums.expo.io/ or you can e-mail me at adamjnav@expo.io 

Cheers,

Adam",1522349555.0
langbenj,Look into using Firebase. It's got robust user authentication built in. ,1522346790.0
adamjnav,"Hey,

Can you share some more details about what is happening when you try to load your app? Also, if you are building an Expo app, you'll use the exp CLI to run an android instance by running the command exp android when you have a connected Android device.

Cheers,

Adam",1522349782.0
-Aaron-,"If I run into a random Expo issue I usually have luck uninstalling the Expo app from the device, restarting XDE and installing everything fresh.  Did you happen to give that a try?",1522379626.0
Noitidart2,"That's odd. You can try to `cd android` `./gradlew clean`, then `cd ..` `react-native run-android`.",1522390657.0
liquid_penguins,"It looks like the main part of the animation is:
resizing the cloud icon & changing font size, while moving it from top right to the middle, doing something similar to the location and time text, and finally resizing the scrollview depending on if they're all moving up or down.

You can achieve most of this by using https://facebook.github.io/react-native/docs/animations.html#interpolation .",1522332135.0
eXilz,"Use an animation interpolator that you hook up to the scroll position of your ScrollView. 
This shouldn't be too complicated. ",1522336277.0
Noitidart2,"* https://blog.home.ht/tips-for-high-perf-animations-with-react-native-scroll-based-animations-d0c895d1835b
* https://medium.com/companydev/animated-header-titles-in-react-native-5be9db00bee2",1522390537.0
moufoo,"Here is a component that does a bit of the same with an image and some text. I'm not 100% sure it is what you're looking for but it might give you an idea on how to achieve the same type of result.

https://github.com/bamlab/react-native-image-header-scroll-view",1522338213.0
DrSghe,"Try using an `Animated.ScrollView` and attaching an `Animated.Event()` on the `onScroll` prop.
In the event you should be able to set an `Animated.Value` to the value provided by the scroll position. Now simply interpolate that value with the output values you want, namely the `fontSize`, the `opacity`, etc...",1522398947.0
albertpak,"Came across this guy's tutorials - he's got a series of videos, looks like something along the lines of what you are trying to do: https://www.youtube.com/watch?v=yQK2oaIN0yA&t=268s",1522650241.0
Dimasdanz,">So, companies that have web apps developed can use their website front-end and convert it into mobile apps

No, just no.  
There's a lot of reason to use react native, that ain't one.",1522328056.0
codyswann,"Love React. Love React Native, but this is pure marketing drivel for the company who wrote it. ",1522331695.0
too_much_exceptions,"Sorry, but I downvoted this article.

This is a pure marketing, SEO article. 

With misleading assertions

",1522466030.0
steveappdev,Can't we just report Bacancy Technology? They are literally spammers. This website should be banned on Reddit. ,1522743325.0
tonynguyen_rmit,"I think the top reason to choose React Native is save cost. We have much experience to develop mobile app on Native platform or Hybrid platform like ReactNative or Ionic. However Native is much better about performance and easy to customize difficult features. Meanwhile, ReactNative only save cost around 20%-30%, and suit to small projects. Therefore I highly recommend to develop by Native if  the project from medium to large size. You can reference at here: https://adamodigital.com/mobile-application-development",1524037077.0
kdesign,React Native is not hybrid. ,1522346238.0
stathisntonas,In your video screen use ComponentWillUnmount(){} and inside that function use your code to pause the video.,1522305936.0
raptiq,"Not sure what navigation library you're using but I'd probably try a different approach of pausing the video as part of your navigation action rather then try to implicitly get it to work with some viewport shenanigans. 

",1522305954.0
jsbeckr,Search for font ligatures. One popular font that supports them is Fira Code: https://github.com/tonsky/FiraCode,1522274183.0
foo13,"That’s most likely just a standard >= sign, which the theme or font renders as a single character. There are similar characters for !=, <=, etc.",1522269494.0
gamafranco,Really nice article. Well done op.,1522312195.0
raks99832,"What kind of collection you want.
awesomereactnative.com  - it contains best articles, libraries and whatever you want?",1522260466.0
ItsPossiblyJesus,"This is one of the pains with react native but luckily it's very easy to fix lol, otherwise that would be brrruttallll",1522240653.0
Noitidart2,"This is one of the best articles ever. I had no idea how to even approach this for a long time. After doing this, I created a produciton build, then opened up the APK as a zip, then looked inside the AndroidManifest.xml - i still see the `android.permission.SYSTEM_ALERT_WINDOW` inside it. Is this normal?",1522250102.0
vikkio,"React Native is the only technology made me go from ""yeah sure, as if"" to ""wow that really worked"" passing through several ""wtf, how?"" in less than 4 months, and we had an enterprise multi-platform app ready and stable.
",1522239316.0
Salakarr,"My primary reasoning behind this project initially came from a personal need to fully test our react-native-firebase module - we needed an easier way to test the module end to end with as little effort as possible so that it could be kept up to date easily without constantly writing native tests code and have the ability to automate the entire process.

It's been just over a month, several very long nights/weekends and several iterations of what bridge could be to finally get to a point where I'm comfortable releasing an early alpha of Bridge. What's great about it is you now have the ability to setup continuous integration testing for React Native modules easily just by writing standard JS testing code - it even includes coverage support using nyc/istanbul.

My secondary reasoning is that there's so many great React Native modules out there that we've all come to depend on but rarely are they actually tested because of the difficulty that comes with doing so. Hopefully this will alleviate this difficulty and bring about an ecosystem of well tested RN modules.

I will be providing detailed docs, examples and more over the course of the next few days but would love some early feedback or even thoughts on the whole process.
 




",1522237171.0
Noitidart2,"Seems like it now is basically out of the box:

    react-native init MyApp --template typescript",1522193037.0
batmansmk,"Medium is a bit overkill, isn't it?

TLDR

react-native init MyApp --template typescript

cd MyApp

node setup.js

npm start",1522214735.0
yyotaku,"Just to spread awareness.  Typescript doesn't properly do type checks across platform specific files.  (Foo.android.tsx). 

https://github.com/Microsoft/TypeScript/issues/21926

Please leave feedback on the issue if this is something you'd like them to look at.
",1522216764.0
Drunken__Master,"I'm pretty new at RN and TS so maybe there's something that I've missed, but I started running into a lot of headaches when trying to test with RN&TS and I have a feeling that this doesn't address that at all as well as something like jest-preset-typescript-react-native . ",1522194339.0
stathisntonas,By outdated you mean you tried them and didnt work as expected?,1522185692.0
MakeItMobile,"Recommend checking out an existing SSO provider. Auth0 is popular and has a decent free tier.

You'll need to verify Auth0 supports the SSO provider that the university uses. 

You'll also want to be careful that you're fulfilling the legal needs when working with student credentials and information as set out in FERPA Act and others.",1522182041.0
uokesita,Does the student portal has an API?,1522181271.0
stathisntonas,"Take a look here:
https://medium.com/capriza-engineering/communicating-between-react-native-and-the-webview-ac14b8b8b91a

https://gist.github.com/blankg/d5537a458b55b9d15cb4fd78258ad840

And here:
https://blog.bigbinary.com/2016/05/25/send-receive-data-between-react-native-and-webview.html",1522177039.0
nickthesick0111,Neither,1522181498.0
Noitidart2,"Flow. And the article doesnt really explain why or why not flow. Not does he explain why not typescript. He said ""dont use typescript"" in pet proejcts because they are usually small, but flow is great for that too as you just type a few stuff and it types the rest. He only explains ""why typescript"".",1522252464.0
stathisntonas,You could load the app  (ios folder) in xcode and run it from there. This is equivalent to react-native run-ios. That way you can choose simulator in the dropdown next to the “play” button.,1522177210.0
stathisntonas,"Two handy things you can do with babel:

First:
npm i babel-plugin-transform-remove-console --save-dev

Then edit .babelrc and add the plugin

{
  ""env"": {
    ""production"": {
      ""plugins"": [""transform-remove-console""]
    }
  }
}

Second:
Add this line to .babelrc (if it doesnt exist already)
{
    ""comments"": false
}

After these entries when you go for production all console.log will be removed, comments will always be removed either on dev or production mode so no worries at all about perfomance regarding comments and console.log.

Dont worry about whitespace, it’s been taken care of at transpiling.",1522178316.0
Krizzu,"For plugged android, you can use `adb` to send event to bring up dev menu.
`adb shell input keyevent 82`.
This will work only if you have one device active. Unless (shameless self promotion here) you use `adbs`, which is a small wrapper over `adb` that allows you to target multiple devices (all of them, only real devices or only emulators).

More here:
https://github.com/Krizzu/adbs",1522162668.0
Mingli91,"Since you’re on Android you can use the command

    adb shell input keyevent 82",1522166862.0
MrAngryBeards,"My elbow really is in pain from all the shaking. I'm developing for a Honeywell barcode scanner, that thing is *heavy*. The shake gesture is the uttermost abhorrent way of bringing up a menu that we use so often.",1522155250.0
klaasman,"I don't know what works for Android, but with iOS I've enabled the AssistiveTouch feature, it's possible to map one of the buttons to a shake-gesture. This will require two taps but for me it's less annoying than shaking.",1522152817.0
RRikesh,"I've been using [this](https://github.com/facebook/react-native/issues/10191#issuecomment-277208461) since almost a year and never went back.

Touching your screen with three fingers will then trigger the Dev Menu!
",1522156742.0
LEO_TROLLSTOY,How about press and hold on the menu key if you have it. Not home or back but the third one. On my phone its on the left,1522169004.0
Umm_NOPE,My galaxy has a back button. Just hold it down and the menu will appear? ,1522191091.0
jsbeckr,"I highly recommend react-native-debugger. When you right click almost anywhere in the app you can select reload js which will trigger the app to request the new bundle. And of course it helps with debugging RN apps.

https://github.com/jhen0409/react-native-debugger",1522274595.0
ABrownApple,"To be clear: Android, Not plugged in with cable, want to refresh app or get the dev menu without shaking the phone ",1522153269.0
Bamboo_the_plant,"In Expo, in Profile > Options, you can configure the Expo Menu Gesture to be a two-finger press instead.

As yours is an ejected app, though – I don't know.",1522194651.0
matt_hammond,You can swipe the screen down and in the notifications you should see a blue menu with a refresh button. You can use it to reload the app. ,1522160116.0
SizzlerWA,Why use this over Firebase?,1522131963.0
Eunoia_R,"And yet, Amplify still does not support social login. ",1522132857.0
davidpaulsson,Yes it's exactly like that.,1522081571.0
milkysniper,"What do you suspect you would do otherwise?

Maybe you have some ideas we can help with or you have some unanswered questions still",1522092148.0
I_Amuse_Me_123,"Thanks, I would love to see how something like this is done. ",1522069629.0
Bamboo_the_plant,"If you just want to try out the game without interacting with the repository, you can download it in the Expo Client via the URL:

https://exp.host/@bottledlogic/the-box",1522068292.0
Noitidart2,"* Wow this is very interesting. I also made a 2d game in RN but the hardest time with ""instant"" hit testing natively animated stuff. I can do a hit test with delay as animation isnt stopped. The game I made is FlyThru:
  * Android - https://play.google.com/store/apps/details?id=com.flythru
  * iOS - https://itunes.apple.com/us/app/flythru/id1247138870
* Can you do instant hit testing with natively animated stuff?",1522077963.0
cloudprogrammer,"Definitely man, just keep at it and don't give up. Stay passionate and anything is possible. React Native can get really bloated so make sure to modularise as much as possible. Javascript is a good first language but it has its drawbacks for big projects, once you get comfortable with JS I suggest taking a look at typescript. ",1522065033.0
ratsonale,"Given your have already know HTML and CSS, the React syntax should be very familiar to you, JavaScript is not hard to get start (mastering it is another story, but you don't know to master it for building useful apps)

Following [Getting Started guide](http://facebook.github.io/react-native/docs/getting-started.html), setting up the development environment, creating a simple React Native app should give you better feeling about how things work. If you have an Android, you could also check out [RNExplorer](https://play.google.com/store/apps/details?id=name.ratson.uiexplorer) for different examples.

Everyone starts from zero, just keep learning, one day you will become an expert. Looking forward to see your app soon.",1522073582.0
akie,"Does Magento 2 have a REST api? If so, no issue. If not, get it an API first, because otherwise you’re in trouble. ",1522067041.0
davidpaulsson,"Yeah, for example you can check if it's the leading or trailing and conditionally render your component. Example:
```<SectionList SectionSeparatorComponent={({ leadingItem }) => leadingItem ? <ListSectionSeparator /> : null}
/>```

Docs: https://facebook.github.io/react-native/docs/sectionlist.html#sectionseparatorcomponent

Edit: fat fingers. 
Edit2: Thanks for the gold!",1522081965.0
dduko,"watchman on linux/win is terrible, it misses a lot of changes. on mac it works very well. ",1522147806.0
BigKev47,I still can't get the tunnel to work with devtools installed on KDE Neon... I guess that's what god invented console.log for...,1522048985.0
dasitm,"Wow you sure like pain, by the sounds of it. ",1522009479.0
EngVagabond,This was recently added to React Native. Check out this commit for more info. https://github.com/facebook/react-native/commit/cae7179c9459f12b1cb5e1a1d998a9dc45f927dc,1522002890.0
udfalkso,"Perhaps you'd have better luck with FlatList or VirtualizedList, depending on your scenario.  I'm imagining you're trying to do something like seamlessly preload items on top like the Twitter app does?",1521989764.0
Noitidart2,I didn't know this was an issue. Good question.,1521954203.0
Minishlink,It's a known bug that will be solved in RN0.55 :) (I'm on mobile so I won't link the GitHub issue but you can find it easily) You can use patch-package in the meantime in order to fix the issue temporarily,1521912889.0
stathisntonas,"Offtopic, you dont need to use ‘${}’ , you only need to use them when you need to concat strings with variables.",1521922168.0
filipef101,"I strongly recomend going back to 0.53 as 0.54 has some issues, you can apply this workarround if you dont wish to downgrande: https://github.com/xiamx/react-native/commit/b35071b",1521921090.0
HomemadeBananas,MacBook Pros are excellent machines and Mac OS is great for development. I definitely would recommend that.,1521906106.0
stathisntonas,Without mac you won’t be able to submit an app to the apple store. You will have to pay developer license for 1 year at 99$.,1521891557.0
filipef101,"if you have money, a macbook, also its good to have atleast 1440p screen for design implementation.
Else hackingtosh is the way, you can even search the most hackintoshable builds or laptops
",1521899394.0
chmarus,IMHO osx. Switched to it 5yrs ago and cannot imagine going back to anything else.,1521910880.0
ubermc,"If I had like $5000 to blow on the most powerful mac I would do that, and will eventually probably do that. It would probably be 3-4x faster then any windows machine because UNIX is a beast. I would consider that a really good investment.

Having the fastest possible setup is the second most important possible things when developing with react, the first is optimizing react to compile fast.

I'm not even considering xcode in that decision.

When you've developed professionally and hit ""rr"" like 30,000+ times and type react-native run-android or react-native run-ios like 10,000 times. Even while using hot loading. The amount of time I've wasted ""waiting"" ---__--- granted it gives me time to switch playlists or standup.

On an unrelated note, sometimes I wish I started creating apps in pure native or another framework to understand the difference in time it takes to develop apps. React has stupid amount of quirks, but when you get passed them it's like damn I love it.",1521964269.0
tongboy,"React native runs pretty nicely on Windows. I do most my development on a Linux vm with a win10 parent machine. But I do react native in the parent windows os.

Save the MacBook money",1521893810.0
andrioid,"If you're using create-react-native-app (expo), then you can develop on Mac, Windows or Linux. I use all three, but my least favorite is Windows.

There just a few things in Node.js that are better on Mac or Linux and it's also a bit weird that the paths are different. But all in all, I can do most of my work without issues on Windows as well.",1521915174.0
redpopcornpanda,"If you want to be able to develop for iOS ejected from Expo (if you're doing some more advanced apps, you probably will), definitely go the Mac route. Android development is fine on Windows - but I've noticed it's better on macOS. You simply wouldn't be able to debug locally for iOS without macOS. Remote build/deploy is fine.. but that's a lot of added time before being able to test a change to iOS. And when you're adding new packages or working on creating the release build, you'll definitely want to be able to debug locally. 

Being on macOS gives you the advantage of easily developing for both iOS and Android at once. Expo can help with that in Windows, but if you do need to go beyond the functionality expo offers, you'll definitely want a Mac of some sort. Even if it's a hackintosh!

Saving on the ""cost"" of a MacBook won't be effective either. I do react native android development on my windows laptop, which is a high-end HP enterprise laptop from my school (12GB ram, i7, SSD, etc). And it gets maxed out with an Android emulator, node, Gradle build, etc. It's definitely very usable, my point is that if you have the money, compromising for a $500 windows laptop will give you very poor performance. So you should probably look into spending at least $1k, and at that price point getting a Mac makes way more sense than getting a windows laptop. You could build a PC with great performance and try doing a hackintosh (I have that right now for iOS react native development), but that can still be pricy and hackintoshes are much harder to maintain.

Objectively, macOS is the best OS for react native development because it supports iOS. Neither Linux nor Windows will give you the same level of support for iOS. ",1521921121.0
Homie_Mark_Spitz,There's always the hackintosh option.,1521894748.0
maverickmax90,I built a Hackintosh...,1522084580.0
demoran,"I develop primarily on Windows 10.  I only spin up my mac laptop when I need to build for the iOS store.

I freakin' hate Apple.",1522360646.0
knmaswath,"MacBooks . No doubt . Because of many tools available .

The list of tools only for macbooks
1. Deco Ide 
2. Builder X
3. Fastlane 

these are the few i know . Fastlane is a very important one .

Another reason is Xcode and Ios simulator works in OSX only",1522381412.0
dracostheblack,I got a MacBook air. The pro price is not a justifiable purchase ,1521897743.0
derGropenfuhrer,">currently developing on a PC running Windows 10

Having done node development on Windows and Mac, the Mac wins hands down. I started out my career as a .NET developer, did it for years. I would not go back unless my company made the (absurd) decision to start doing development on Windows. 

~~Linux~~ Nix (Linux, POSIX, BSD-derived, whatever) wins, hands down. Of the Nix dev environments, Mac is best.  There's just so much less friction. ",1521904394.0
Caroga,Nice! Will take a more in depth look tomorrow. Thanks for sharing! ,1521851133.0
IminPeru,"this is such a great share, thanks so much!!",1521840888.0
XeDaniel,"Thank you for sharing this, very helpful.",1522032531.0
Sexual__Redditor,Anyone else having issues with the audio not working?,1522261475.0
ubermc,"EXPO is probably the future, it's just a matter of time before everyone migrates. Only thing I dislike is that it's another step for package developers, and porting native code to expo modules. I'll probably try my next project in EXPO as long as there is a method to somehow create expo libraries using native, despite working with CLI for major projects with great success recently. EXPO does fix a lot of issues that makes me hate my life as a react developer. Mostly porting from Android -> iOS vice versa. Also the streamlined process of publishing to iOS is nice.",1521965518.0
calvinaquino,"CRNA is fully JavaScript, and Expo enables quicker iteration.
Pros:
- Faster testing/QA
- Faster iterations, change something in code and see it reflected ASAP.
- Expo has simplified APIs to deal with platform specific stuff like permissions and notifications.
Cons:
- No native code
- No crash logging
- Limited libraries (the best ones need to be linked manually -> cannot be full javascript)
- Navigation can be a pain (its full JS)

react-native CLI are like hybrid apps. you can have native code (java/kotlin, Obj-C/swift) with Javascript, which enables some great features and good performance.

Source: I am a mobile dev and my team is using React Native framework.",1521817581.0
LEO_TROLLSTOY,Looks like they let the community have it,1521818312.0
garapani,nice tutorial ,1521804908.0
Swagabounga,"In your Android Manifest file you should put this:
android:windowSoftInputMode=""adjustPan""
 Telle if that works :)",1521794785.0
filipef101,"a: position absolute with top = windows height minus its height
b: listen for keyboard did hide and did appear and hide it when keyboard is visible",1521899942.0
Noitidart2,Looks like that repo is unsupported,1521906483.0
RnRau,"Could you post what has been deprecated? Redux is pretty simple (~100 lines of code) and I can't remember anything that has been deprecated. Perhaps you are talking about a piece of middleware?

The best source of redux links is probably - https://github.com/markerikson/react-redux-links - lot of reading :)",1521780163.0
Sephinator,"Check out the official docs first, and read everything.  

Also, redux can be implemented in multiple ways. Both in the folder structure, but also with or without immutable.js, helper functions and more. 

So it's hard to give you one silver bullet for the project you are working on. 

Lastly redux is very small, and I haven't experienced breaking deprecations at all. Sure it's not another related library?",1521780656.0
settebello8,Have you looked into Auth0? Expo has AuthSession class that helps implement that side of things if it fits your needs.,1521757852.0
scttmthsn,"Put your android permissions code into Whatever.android.js, have an empty Whatever.ios.js; import as Whatever and then conditional on Platform.OS. Ugly but it works.

See example [gist](https://gist.github.com/scttmthsn/d7805ee64ea2971e0136b6fddd297318).
",1521830956.0
Velz_Kyos,"Move the import as a var inline with your function call and try using the platform.OS to prevent it.
",1521758588.0
stathisntonas,"Check this out:
https://github.com/joonhocho/react-native-google-sign-in

And this:
https://github.com/adamjmcgrath/react-native-simple-auth",1521749218.0
ddzrt,"If you're using create-react-native-app, or able to add Expo to your app, they have Google and other login stuff there implemented",1521751048.0
baptisteArnaud,"I finally understand the confusion I had. It is between Expo (CRNA) and React Native Code. It looks like I started using Expo thinking it was pure React Native. Here's the article which cleared my mind:
https://medium.com/@paulsc/react-native-first-impressions-expo-vs-native-9565cce44c92",1521799661.0
spoetnik,Advert for a Udemy course,1521784016.0
Noitidart2,"* Android more transition - https://github.com/Noitidart/rfcs/blob/e0e55863b1f84496861107149bb340f92635a03f/text/0006-android-more-transition.md#summary

* and also the current android transition does not match perfectly well with the native android transition. Also in the RFC above. the native android transition in top to bottom is like this:
  * enter - http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_open_enter.xml
    * we see the opacity should happen in 200ms and with `Easing.out(Easing.poly(4))` which is equivalent of `@interpolator/decelerate_quart`
  * exit - http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_close_exit.xml
    * the opacity should happen with 100ms delay and in linear",1521954426.0
inform880,"It really bugs just when people refer to react state as ""setState"".",1521771471.0
Noitidart2,This is a really good question. I also have this requirement in the near future.,1521790765.0
Noitidart2,"This is a great article. Especially the background collection. Thanks. Love the ""backgorund"" hack! I will try out that free module.",1521734809.0
stathisntonas,"Maybe these will help:
https://github.com/wix/react-native-interactable
https://github.com/donaldmorton/react-native-bottom-drawer
https://github.com/cesardeazevedo/react-native-bottom-sheet-behavior/blob/master/README.md

Other than that, you can have a view with absolute position with bottom 0 and animate it to your desired height when clicked or dragged or invoked with a button press.

Edit:
Also check this out:
https://github.com/prscX/react-native-bottom-action-sheet",1521702118.0
LEO_TROLLSTOY,80% of the worlds apps could be done with RN without anyone noticing. The rest cant. React is not trying to replace native code for serious heavy apps and games but tries to halve the price of app development for those 80% of business/light apps,1521709808.0
ABrownApple,Performance (some would argue against this). Heavy apps still needs to be native because of performance and because you want more control. Also in native apps you get access to everything new. React native have to wait for something to be released to native and then implement it so it's always a little behind in features. ,1521703649.0
ikbenpinda,"1. Tooling is less complete. As far as I know there's no such thing as the Material Icon Generator plugin or the UI builder available for Android Studio in React Native. You can use WebStorm so you have the same line of IDEs as Android Studio, but you're still missing a lot of the Android-specific stuff for React Native.

2. The moment you need something that isn't available in React Native you need to write your own components, and the additional layer of the bridge between React Native and the underlying iOS/Android system. I'ven't much experience with this yet so i can't tell how much of a hassle that is going to be.

3. Importing libraries. Some issues are so terribly vague you'll end up wishing it was just applying the android-apt plugin and adding a single line to your gradle.build instead of working with NPM, react-native link, and spending your afternoon reading GitHub Issues drama.",1521721263.0
Noitidart2,"* All of these issues are resolved with experience
  * Perf tools are not so obvious. There are tricks you have to ask the community about - https://www.reddit.com/r/reactnative/comments/7z6zbo/how_to_use_perf_tools_in_release_build/
  * Gimmicks in dev mode - especially on Android (setTimeout 5s may take 20s, or even just a few ms)
  * Gimmicks in when to do react-native start, gradlew clean, react-native run-android and when to connect debugger
  * For non-native devs, installing native modules at the beginning is confusing. It takes a few months to get the hang of troubleshooting these things.
* Below i think is something i have not yet found solutions for
  * Hit testing - with an async bridge this gets funky. I think the solution is to build native component and bridge it",1521709485.0
redpopcornpanda,"Hi! Awesome to see you getting into the field. Just some clarifications, react native is a framework which allows you to build native apps with JavaScript. So you'll definitely need to learn JavaScript, which isn't too hard to do. You do not need to learn React before learning React before learning ReactNative because the core concepts are very similar. React JS would use html (through JSX) and CSS to display the UI in a browser. React native simply has its own API for views and styles and all that. 

The documentation for react and react native is very good. Find good tutorials for either to understand how to use react - I'd suggest the ""thinking in react"" one on the official documentation to get started thinking about it!

Understand the dynamic typed nature of JavaScript - it's not much like programming in C++ or Java or C#. Though if you are well along in other languagep, it's very easy to pick up. I'd recommend the channel fun fun function for general programming best practices along with some videos about newer JavaScript ideas like promises (you should definitely learn what those are) and async/await, along with other stuff. 

In general for these jobs, knowing git is always good, as well as knowing good, basic development practices. 

If you are a quick learner, it's not hard to pick up. Your biggest challenge will most likely dealing with Android studio, Xcode, and anything to do with the native side of things (including code signing). That can get complex, but generally you can get into that down the road as you pick up other stuff!",1521684605.0
ratsonale,"Understand the concept of React would definitely help you develop React Native app, but getting your hands dirty by following [Getting Started guide](http://facebook.github.io/react-native/docs/getting-started.html), setting up the development environment, creating a simple React Native app should give you better feeling about how things work.

I would recommend following the ""Building Projects with Native Code"" section instead of using `create-react-native-app` cli for learning, it may take more time to setup, but it lets you know where are the parts.

Also you may want to check [RNExplorer](https://play.google.com/store/apps/details?id=name.ratson.uiexplorer), there are many examples with code, it should give you better picture what React Native could do. (Disclaimer: I am the author of the app :p)",1521821460.0
ABrownApple,You need to learn javascript first. You don't need to learn reactjs before react native,1521703726.0
tschoffelen,"I’ve released and collaborated on some RN libraries, would love to give you some pointers if that helps. You can hit me up via the email address on my Github profile (same username as here).",1521701054.0
Noitidart2,Super cool thank you!!,1521654345.0
blackanbu,Why not on App store ? (IOS),1521921075.0
theo_readsit,"another great video, I have homework to do - can you point to any references on the ""composition"" function; when I looked for it all I found was ""ref"" prop of components - thanks!",1521667662.0
,"Nice video, lots of great information on setting up a React Native development environment. Thanks!",1521675805.0
Noitidart2,"Awesome video thanks!! Watched it all. I saw the way you fixed perf, however may you please share how you measure perf. Thats a real tricky thing for me. I asked a question about it - https://www.reddit.com/r/reactnative/comments/7z6zbo/how_to_use_perf_tools_in_release_build/",1521734602.0
Noitidart2,"I have experience with the guys question about `delay` not waiting for proper amount of time. This happens with react-native in Android when in debug mode. Android debug mode in RN is notorious for funky issues like this. 

Here is a good explanation from here - https://github.com/archriss/react-native-snap-carousel#important-note-regarding-android

> Android's debug mode is a mess: timeouts regularly desynchronize and scroll events are fired with some lag, [...]. On Android, you will experience time delayed callback issues when [...] JS Dev Mode is enabled, and you might have trouble with unreliable callbacks and loop mode when it isn't. ",1521784639.0
chocomilkz,"Great video! However i feel i'm underpaid as fuck after seeing that you have a team of 5 guys for this. At my company i'm alone doing 2-3 full apps seemingly the same size as this a year :s (RN and backend).
Like my last big RN app was a p2p sales platform with listing publication, user/product following, news feeds, notifications,  a full chat system, buy or rent (with calendars to find available rent times) order system with custom stripe connect integration. And i had about 5 months on the whole stack alone.

Working alone in the RN ecosystem i have of course created my own way of doing many of these things, and you guys have definitely had time to come up with better solutions for many of those. I will try to implement some of your ideas to improve! 

Always love seeing videos like this from other people who have built actual apps and not just tiny examples.

Also fuck navigation. I will look into wix's lib for it. Because nothing ever does the job properly",1522102413.0
ratsonale,"Cool effect! Just added the example to [RNExplorer](https://play.google.com/store/apps/details?id=name.ratson.uiexplorer), feel free to share your feedback in https://www.reddit.com/r/reactnative/comments/863e6d/just_release_a_new_version_of_react_native/",1521823269.0
Noitidart2,https://github.com/wkh237/react-native-fetch-blob/,1521654513.0
theninjainblue,"Okay after searching for a while in github and installing projects on my app. I found cool chinese shopping app open source that does this implemetation.  https://github.com/yokohama199121/AppTokubuy/blob/master/src/app/tabNavigation/Tabnavigator.js

Really it was just the correct sort of optionssthat was messing me up. Ah well.",1521620883.0
fly_guy22,"This is not tested: but maybe something like this might work?

Get the device width
Make the parent a scrollview with 2 x device width
Make the children Views the device width
Change the order of the Views as you need(state/props/etc)

Edit: the scroll functions can be kind of expensive and not fully documented and supported depending on the implementation. So hopefully above works",1521589593.0
makavelixx,npm build..,1521583071.0
kbcool,"I'll get downvoted for saying refer to the archives again but has been asked a few times in the past.

FastLane and Visual studio app center are both excellent choices for CI/CD without needing a Mac turned on all the time. You can just commit to a repo and a build will be spat out and even released to testflight or beta on the play store for you. I would certainly use that in a team based environment or where you have multiple apps that share a similar code base.

For doing it on your machine....

Android: ./gradlew assembleRelease for a release or assembleDebug for testing

iOS: Xcode as pointed out by ramzes_uk is able to just build without running simulator. I am not sure about command line but it's possible. 

",1521590304.0
Noitidart2,"You don't have to run on simulator to build.


Android - https://facebook.github.io/react-native/docs/signed-apk-android.html

iOS - https://facebook.github.io/react-native/docs/running-on-device.html#building-your-app-for-production",1521586485.0
ramzez_uk,What platform though ? If you need iOS just go to iOS folder and use Xcode to build it you can find a few tutorial how to do it. If android go to android and use Gradle. You can take it one more step further and use fastlane to automate it more. ,1521583190.0
redpopcornpanda,"Fastlane works really well for this! You'll want to do code signing with match, and there are some tutorials that can help you get the release builds working and then signing and certificates working, and then uploading to the play store or test flight for testing on real devices. The plus side is that since you're already on the Apple/Google approved beta tool, you're already that much closer to release on the app stores.",1521603261.0
DovidBobson,"If you use expo you can simulate on your phone. The performance is way better and you get the feel of your app, which can help tune stuff like button size and swiping behavior.",1521606019.0
,[deleted],1521577258.0
xxDutchy,"Not a direct solution but maybe this can help  A solution can be to use API Gateway + Lambda in order to create an API and access your DynamoDB. 

",1521583806.0
kbcool,"You're in the wrong place. Your problem is around using AWS and AWS-Amplify which is a generic javascript library.

You might be lucky enough to find someone here but I doubt it. 

Also (this is probably going to sound rude because I can't say it politely): People tend not to like doing your job for you. You've basically just asked for someone to hand you something on a silver platter for free, I assume. You have to show you at least tried. If you posted this on stackoverflow you'd be shutdown immediately.",1521589683.0
FoldableClock,"Hey, SelfishShellfish!

I actually built the backend of my app using DynamoDB with 'aws' and 'aws-amplify'!

[This website](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Operations.html) is going to be your best friend. At the bottom of each page there's a ""Javascript"" option which will show you implementation in Javascript.

Best of luck!",1521665626.0
rsiqueira93,Why do not you try this tutorial? [https://viblo.asia/p/serverless\-mobile\-application\-development\-made\-with\-react\-native\-and\-aws\-mobilehub\-Az45bnmQ5xY](https://viblo.asia/p/serverless-mobile-application-development-made-with-react-native-and-aws-mobilehub-Az45bnmQ5xY),1523998126.0
Kyroche,"A little tricky to pronounce. Partner, partnr or Partners is great imo but it looks to be already taken.

Maybe a synonym for lover like Beau, Paramour, Beloved.

Evolve it a bit? Beaufull (mixing Beau and beautiful, with a hint of full) 
Paramine (like Paramour of mine) or Paramost ( paramour + most)

Or maybe get real start up app-y with it.

Kupple. eLationship, Togethr, etc",1521532726.0
krondog4090,Bae,1521552182.0
Cosmosof,"Hello folks!, I just finished up developing a relationship management app. The app focuses to improve and contribute relationship between couples.
I need advice on naming my app. 
Let me explain what it does; It is a relationship management social app between partners. 
Main features are 
1. Let you create ToDos, which will notify other partner once created. 
2. Let you chat with your partner
3. Relationship related questions, prepared by relationship counselor. 
The app name is ""PEERLER"" do you think it is appropriate name? any advice and suggestions will be greatly appreciated

The tech stack:
React Native, Firebase, Google Functions
I am live in Boston MA-US, available for contract and part time.",1521517572.0
truthBombsForDays,Your app is way more likely to die or be re-written before RN is impacted by Facebook's finances.,1521528674.0
lau2222,"React Native is also partially backed by Microsoft, and is used by plenty of major companies so it's not going anywhere",1521537368.0
Yxven,"Facebook has been known to be evil since day 1. They're still popular. Their popularity may have peaked, but it's hardly nose diving.

On top of that, react native is open source now. If facebook dies, the project can continue with enough community interest. Since react native seems to be the best multi-phone toolkit currently available, I strongly suspect it will entrench enough developers to continue with or without facebook.",1521516721.0
ExtremelyQualified,Facebook isn’t going anywhere. They could burn the main Facebook app into the ground and still be huge just running Instagram and WhatsApp. ,1521517529.0
RaptorXP,Facebook will lose interest in React Native long before Facebook users lose interest in Facebook.,1521536385.0
ShadowsSheddingSkin,"You...probably need to seriously reevaluate the way in which you consume information. 

I really don't mean that in an insulting way, but the kind of thought process that leads to this sort of post is a *serious* issue in the world today. It is a destabilizing force on a global scale. A great first step to seeing if there's any chance of a hashtag-based movement having an impact on the real world is ""three or four days later, does it still exist?""

If you leave it be, and, on Friday it still exists, maybe look into if any other similar campaigns have occurred in the past, how large were those campaigns compared to the current one, and what impact did they have? If you find answers like ""many, pretty much the same, and none"", don't be surprised, this is usually the case.

Then of course, in any social media campaign, always just apply some common sense. 1) What does it want people to do? 2) Does it involve anything more than reposting the hashtag? 3) How many people are reposting that hashtag? 4) How many people, in the world, do you think actually care about [whichever right has been imposed upon or thing that has been stolen] enough to do something which would inconvenience themselves and take more then eight seconds. (Note, the answer to 4 cannot exceed the upper limit established by 3). Does this look like an important number?


>once people realize who Facebook is selling their data to (hint, anyone who will pay).

Did you actually know anyone that did not already believe this to be true? 62% of Americans responded that they trust facebook ""not at all"" or ""not a lot"", and 3% said they trusted it 'a lot' in recent polls. Which is honestly, surprisingly high. I literally have not heard someone associate Facebook with any quality other than stealing your data in maybe five years. Most people I interact with in real life are pretty confident that Facebook Messenger records you through your microphone to sell your private conversations - I'm a bit skeptical, but its veracity is not the point. I still don't know anyone under 40 without Facebook messenger on their phone. 

This story isn't the point, though. Realizing that there is a trending hashtag threatening doom and destruction on *someone* every single day of the week, that a blogpost that was clearly *written* to go viral on Twitter happening to do so isn't any more an indication of something being important than the sun having risen that day, and that 'journalists' reporting on twitter phenomema which are ultimately writing about previous articles ad infinitum, in that ridiculous infinite loop they get into now both *can* make itself fact but just as often proves to be a giant echo chamber without any correlation to the outside  world. 

Oh, and since 1/10 posts I see while actually looking at the hashtag are just porn, with deletefacebook shoved in between a dozen porn-related hashtags, the whole thing and extent to which it matters beyond its impact on Facebook stocks in the coming days/weeks is pretty hard to derive now. Once the obvious bots are out en masse, the decent ones have generally been there for a while. 

EDIT: Update from the next day. 'Movement' and accompanying news articles are doing whatever they are doing, but as of 12:30 EST this is no longer even the biggest drop over three days that's happened this year. Twitter really needs to finally turn a profit, eventually, so it can start saving up for the Versailles-scale reparations I'm increasingly convinced the international community is going to demand of it by the 30s.",1521581703.0
jestzisguy,"This is hardly how Facebook dies.  Compared to their actual user base, the number of people who are even aware of this “scandal” is minuscule.  I wouldn’t worry too much about it.",1521527156.0
MarkOSullivan,"It's one of the biggest concerns I've had about React Native. Just look at how they treated Parse after they acquired them, so many companies had to migrate to Firebase or just run their own version of Parse until they were fed up with no new advancements / improvements to it.",1521539949.0
Existential_Owl,"Facebook still has Instagram and WhatsApp.

The company's not going anywhere.",1521549533.0
boon4376,"1.) Who facebook is selling data to isn't a new revelation. It's their business model and has been since they started trying to generate revenue.

2.) The disconnect between how this ""data abuse"" even turns into a bad outcome for individuals is so great that it really won't change anyone's habits. ""Well it doesn't impact me"" mentality.

3.) React will probably be obsolete in a few years regardless. Something new and better will replace it. ",1521555107.0
alien3d,"Nope, i don't see any next social software can compete with them yet. As i mention before most programming will be max 5 years to 6  then down with new tech.. embrace yourself in re invent wheel syndrome",1521604689.0
chmarus,"I dont know any ready to use component for that, but you can try to do something on your own. 

Just implement OpenCV in Java and communicate with it using Native modules",1521490732.0
MisterLeDude,Im gonna read the rest omw 2 work tomorrow. I read 2/10 and it's a nice read so far :) ,1521498384.0
itsevrgrn,Nice job on this! Pm me if interested in working on other projects I am a designer but pretty new to RN / coding.,1521478935.0
Dested,"App looks and feels great! I'd never know it wasnt native. 

I did have an issue with setting up my twitter however. Please see the image https://imgur.com/a/qYN9c

Let me know if you have any questions about the issue!",1521486701.0
rizwanahmed19,Awesome work man,1521488180.0
Bamboo_the_plant,"How about you use [conditional rendering](https://reactjs.org/docs/conditional-rendering.html)? Any form that wants to use your switchable-type button must conditionally render it based on the type. Each type of your button will get initialised for the first time as either an 'infoDark' or 'infoLight' type, and if a change in `this.props.buttonType` is ever received, it'll just render whichever of the two types is appropriate:

    render() {
    	return (
    		<View>
    			{
    				this.props.type === ""infoDark"" ? 
    					(<MyButton type=""infoDark"" />) : 
    					(<MyButton type=""infoLight"" />)
    			}
    		</View>
    	);
    }

As far as I understand, this means it wouldn't have to re-init the button each time the props changes; just remove the previous type and insert the new type during the `render()` step.

With a bit more brain power, you could encapsulate this as a (stateless?) component called ""SwitchableTypeButton"" or something so that the users don't have to implement this conditional rendering themselves. I'd help with writing an example for this, but I need to get back to work myself!

Think this could solve your situation?",1521473534.0
Noitidart2,"Very cool! I had plans to do a native Android button, maybe I can PR on your repo. :)",1521470140.0
Noitidart2,Do you have screenshots of all the different ways a UIButton can look? Is there a loading state to the buttons?,1521505974.0
neoisgeek,"Check this out,

https://hackernoon.com/building-cross-platform-applications-with-a-universal-component-library-e6292ca9a15",1521547606.0
creambyemute,"So far all the answers I got (from other sources) were:

Go with a separate ReactJS projects and share code where possible.

We were seeing this as the better way to go as well, so we'll settle on that.",1521480624.0
Noitidart2,Why do we struggle to get TypeScript working with RN? It works out of the box with Flow. No guide nothing. Is there some advantage of TypeScript over Flow?,1521419879.0
Noitidart2,This is a great start right here - https://github.com/peggyrayzis/react-native-create-bridge,1521410361.0
Caroga,"Great list, thanks",1521396257.0
Dimasdanz,Anybody uses Ignite? Looks very good. Can I implement it on an already established project? Our app has been in production for almost a year.,1521439814.0
ddzrt,"Very nice list, thanks a lot!",1521388987.0
yippiyeah,Yet another post for advertising a tool... There’s nothing new or helpful in this post,1521894096.0
JohnnyHopkins77,"Look into GraphQL. It's not specific to React Native but as a backend option it meshes with the component structure like peanut butter and jelly. GraphQL is only as strong as its client though so read into some Apollo, GraphQL, and RN stacks. ",1521344866.0
Noitidart2,In Southern California I know a contractor getting $75 per hour but he's underpaid. For sure don't settle for less than this. Don't take less then $100/hr.,1521342642.0
fly_guy22,"I can kind of touch on this. I got hired as a ""web developer"" to build a React site as a web version of their mobile app. Their mobile app was so bad I suggested we re-build the entire thing in React Native and share the code across iOs/Android/Web. So now I'm a React native developer I guess? 

Now that I'm quite deep into the project ~4 months I'm not sure exactly how much of my codebase I can share, probably the majority of my Redux and firebase calls, but they will probably need to be slightly adjusted for the web.

If your not starting from scratch then the previous developer has probably fixed some of the early build issues that you might face. I found when integrating dependencies there might be conflicting version numbers etc(google play services etc).

I could talk about this for days because my life right now is focused on getting this app live, if you have any specific questions DM me, or post them here.

",1521370694.0
makavelixx,"I have not heard about a position ""RN Developer""... With React (Native) Skills you could market yourself as a Frontend Developer.. You would not be a mobile developer because you will not really learn how the Android SDK works in detail or the iOS SDK. What you'll be doing is using a JavaScript ""wrapper"" around these SDKs. 
Instead you should just focus on being a frontend developer with solid react (native) skills. In case you would want to make the shift to a more challenging and better paid developer position you should either pick backend (you'd be a fullstack dev) or learn iOS or Android native development.
How long you'll need to be competitive in the market depends highly on your previous (professional) experience. Generally speaking React Native is a pretty simple framework. What's more challenging behind it is the software architecture (flux? redux? what about the domain and data layer? clean architecture?) and to write and maintain a clean code.",1521331884.0
Drunken__Master,"Stephan Grider's React Native course on Udemy is outdated to the point that you're not able to finish the project by just following the course, definitely go with Maximilian Schwarzmüller's React Native course .  

For React go with Andrew Mead's Udemy course, it's both easier and more comprehensive than it's main Udemy competitors .

",1521309494.0
boomdoodle,"https://egghead.io/courses/build-a-server-rendered-code-split-app-in-react-with-react-universal-component

https://egghead.io/courses/getting-started-with-redux",1521301913.0
hb_to_ms,"Android is also available, working on a video for that next week!",1521291887.0
stathisntonas,"Thanks for the module, are you planning adding  Android support? ",1521299111.0
fupower,Lol no,1521234125.0
Noitidart2,"I'm RN guy but I just took NativeScript for a spin and their native componentry is better! They have `android.systemIcon` and `ios.systemIcon` for this native toolbar. Check it out, unbelievable that RN doesn't have all this yet. IE: [SearchBar](https://nativescript-vue.org/en/docs/elements/components/search-bar), and native action buttons (with native placement! no struggling to match the spacing to the google/apple guidelines) in native toolbar - [ActionItem](https://nativescript-vue.org/en/docs/elements/action-bar/action-item/) - and even a native button component (which RN still doesnt have) - [Button](https://nativescript-vue.org/en/docs/elements/components/button). Native android time picker as a scrollable list - [TimePicker](https://nativescript-vue.org/en/docs/elements/components/time-picker) - native android date picker as a scrollable list - [DatePcker](https://nativescript-vue.org/en/docs/elements/components/date-picker)

yikes. if RN wants to compete i really think they should bring out some more native components. Maybe start with Button lol.

https://play.nativescript.org/?template=play-vue&id=168e7J

    const Vue = require(""nativescript-vue"");
    
    new Vue({
      methods: {
        onButtonTap() {
          console.log(""Button was pressed"");
        },
      },
    
    
      template: `
        <Page class=""page"">
          <ActionBar title=""Home"" class=""action-bar"">
            <NavigationButton text=""Go back"" android.systemIcon=""ic_menu_back"" @tap=""goBack"" />
            <ActionItem @tap=""onTapShare""
              ios.systemIcon=""9"" ios.position=""left""
              android.systemIcon=""ic_menu_share"" android.position=""actionBar"" />
            <ActionItem @tap=""onTapDelete""
              ios.systemIcon=""16"" ios.position=""right""
              text=""Delete"" android.position=""popup"" />
          </ActionBar>
          <Button text=""Button asd"" color=""red"" @tap=""onButtonTap"" />
        </Page>
      `,
    
    }).$start();",1521216827.0
Noitidart2,"To compete with NativeScript native componentry I think we can start by briding these:

* Native button item for toolbar
  * ios - [UIBarButtonSystemItem](https://developer.apple.com/documentation/uikit/uibarbuttonsystemitem) && [full manual](https://developer.apple.com/documentation/uikit/uibarbuttonitem)
  * android - just enhance the already native [ToolbarAndroid](https://facebook.github.io/react-native/docs/toolbarandroid.html#docsNav) component to work with `android.systemIcon`

* Native button
  * [UIButton](https://developer.apple.com/documentation/uikit/uibutton)
  * [android.widget.Button](https://developer.android.com/reference/android/widget/Button.html)",1521230117.0
EddieEsc,@droussel_mtl the options are very limited but I recommend AppSee https://www.appsee.com/ I've tested in React Native and so far it's been really cool. Another option is UXCam https://uxcam.com/.,1521222476.0
jpgarcia91,"We @ [Underscope](https://underscope.io/)  have created a React Native wrapper you can find the source code @ [https://github.com/underscopeio/react-native-facebook-account-kit](https://github.com/underscopeio/react-native-facebook-account-kit)

We are currently using the library in several projects in production and it's working pretty good!",1536244074.0
stathisntonas,"Everything you need is there:
https://github.com/facebook/react-native-fbsdk
https://developers.facebook.com/docs/react-native

Guide:
https://tylermcginnis.com/installing-the-facebook-sdk-into-a-react-native-android-and-ios-app/

Did you checked it out?",1521183328.0
ramzez_uk,Looks pretty!,1521195042.0
DemiliciousOne,"Congrats! The app looks cool and clean.

One feedback I have is that the text on the bottom of the tutorial screens collide with the progress dots. I think it'd be better to have the text a length above those. Also, gray text on orange isn't showing up very clearly.",1521214159.0
Marmelador,Riiiiiiise up!,1521215028.0
,[deleted],1521227381.0
TinyZoro,It's force closing when I try to enable Google fit.,1522013791.0
off_by_0ne,Thanks for sharing this. Didn't even know this was possible. Looking into using this for my current app.,1521204350.0
matt_hammond,"The second example could be implemented with nothing but Views.
Here's the same thing in HTML: https://codepen.io/anon/pen/EEyvxa",1521147242.0
icekeymon,"If applications like Facebook, Instagram and Airbnb are utilising React Native, I am sure you can too. Your concerns are certainly valid for sure, but as you've mentioned, you have 3 JavaScript developers who could learn RN and write a single codebase for both apps, or hire 3 iOS developers and 3 Android developers which is not cost effective.

* Dependency on open-source plugins (which can be abandoned anytime) - This is valid, if so, fork it and fix it and then make a PR. It'll save you time from writing stuff from scratch.
* Development is faster in theory (because majority of code is shared) but for app to truly look / feel native we will have to spend bunch of time on optimising various stuff and we will be much slower in the end - Both iOS and Android apps I have written have worked fantastically, of course performance tweaking is great. Don't you think you have to tweak performance if you write in Obj-C/Java?
* I have read in few articles that react native runs on iOS flawlessly but Android is another story - it is slower and there are quirks between various Android versions (eg. something works fine on 5.1.0 but not on 5.1.1) - Never really witnessed slowness. As for quirks, you get that with platform updates but once again, never really witnessed it.
* Apple will change something. (like introduce notch) and it will take long time for us to adapt to change because of technology limitations - These things get fixed by either the community or RN core developers.

All of your requirements are achievable. There are probably times when you need to touch native code, I have had to and I am not knowledgable with iOS/Android development. ",1521108718.0
jestzisguy,"Go with React Native... yes, there will be quirks, but I think people are quick to call out any flaws in RN, and slow to realize just how often quirky stuff like that pops up in native dev too!  YSK, some of the things you mention will probably require some native code, but it can be minimal.

I’m amazed at how many people who were burned by other hybrid frameworks fail to realize that RN is substantially different.  I’ve had non-technical product leaders strongly discourage my dev team from even trying RN based on what I considered specious reasoning.",1521118703.0
flo850,"You should have at least one native dev on your team either to modify an existing plugin or write your own. That way, the point 2/4/5 are handled

The majority of your app will be done byb your js dev. Native guy/girl will make the finishing touch and help optimize things
",1521132428.0
realbriank,"I've been using react-native for over 2 years.


I love it, also because I love JS and react. There are some quirks to it. Not going to lie, you need to be smart about how you do things or you can easily get your self into a bad performing app. 

But the way you get to think and code when using react/redux/redux-saga/reselect, is amazing for me.

It's my current favorite way to think.",1521133161.0
localhost8100,"I would suggest to go with native app of it is cost effective for you. I have worked with ionic and cordova app. As you mentioned it was hell. In my present company we have a app in RN, I know everyone says RN is different but it is still laggy when compared to native app but better than other hybrid frameworks. At the end of the day after spending all that money you will for sure miss the slight difference in performance. As the guy in top comment mentioned Facebook, instagram and airbnb use RN but only for few components. Most of there app is native.  

We had to implement sqlite storage in our apps to store all the data when user is offline. We had to go through the native way because RN supporting sqlite packages were not old and we'll tested. After rewriting the app to use sqlite in native it turned out that half of our app was written in native. Might as well go for native of you really need good performance using sqlite. ",1521120571.0
Mingli91,"If you want a hybrid solution React Native is likely your best bet. I wouldn’t worry about Flutter, it isn’t going to overtake RN any time soon - plus RN has a ton of other things going for it.

RN is good for everything you listed and if you aren’t trying to bleed out the maximum possible performance from your app there really isn’t much reason to go fully native. Besides, RN actually has pretty decent performance, for things like animations you can offload to the native layer and the entire UI is native (just controlled from a native JSContext).

Been writing production apps with RN for over a year now, currently working for the largest news publisher in the UK and we’re in the process of migrating our apps to RN.

We’re migrating because performance differences are negligible, code reuse is much easier, development is faster and we can bring web devs in to help build the app where previously we had to hire native developers.

The cons of RN are that at some point you’re going to need someone who knows a bit of native development and it’ll take a while for web developers to learn all the native APIs.",1521125773.0
mickybirger,"I can't speak to all of your concerns, but in terms of crash reporting; there is a product called Bugsnag (www.bugsnag.com/platforms/android/) which performs crash reporting on both Android and iOS (as well as other platforms.) It has debug and crash reports, allows you to group crashes and from what I've seen, has a good reputation. ",1521194210.0
latoishi,Go with flutter and dart :),1523883534.0
TheSacredBroom,"Iam currently looking into this same issue, Iam using firebase, but I guess it should not matter with this problem? I found this [stakcoverflow answer](https://stackoverflow.com/a/28353246/8030041) saying listeners are quite inexpensive (but maybe battery draining?). There is also [this github answer](https://github.com/redux-saga/redux-saga/issues/1055#issuecomment-314628814) on redux-saga talking about library that can handle hundreds of firebase paths.

So I guess having many listeners should not be an performance issue, but setting them up might be. Currently I run about 20-30 calls and it takes quite some time to load up on Android in debug, (not yet tested in release), so running hundred calls to set up listeners during app load up might not be a good idea. Also  somehow preventing each listener to call redux update individually, but to stack them up and call one big update once all is done, or in intervals.",1521108521.0
Rizens,"I've looked into Firestore ""listener"" to know more about them.

Basically everytime you use ""onsnapshot"" on a collection , Firebase makes an Http Query with a ""Keep Alive"" headers ( basically a long polling mechanism ) .

So for each ""syncs"" you listen to you'll have one HTTP Query Open + an event listener on the device. Technically it's very inexpensive , ten or twenty listener won't be an issue at all, but a hundred would be especially concerning battery.

What's expensive is updating the UI which entirely depends of the size of the document you are listening to , basically the smaller the better.

>I don't want to put a low limit on results because I need to manually filter some of them out after they're returned

Have you considered denormalizing your data model to make it easier to retrieve data ? 
I don't usually recommend denormalizing , but this is what Firebase recommends in general.",1521112938.0
,"imo, Primitives doesn't provide much more than a wrapper around react-native-web. RNW is excellent and actively maintained.

Primitives has a catchy name and was introduced with a well written medium.com article.  It depends on RNW so it will always lag a bit.

RNW is the best choice right now, I've been using it for many months.  More and more libraries are starting to test against it to confirm support.  RNW just needs more community awareness and maybe a awesome-react-native-web site to highlight packages that work well.

",1521222234.0
theninjainblue,Expo has 2d game example. Maybe that be helpful? https://docs.expo.io/versions/latest/tutorials/create-floatyplane-game.html,1521141434.0
,"Check out react-game-kit.  It supports RN.

Use it as your loop/engine, or as an example.",1521222391.0
funkyfourier,"Here is a talk I think you will find interesting:

https://www.youtube.com/watch?v=cCOL7MC4Pl0

I have evaluated the possibilities to make realtime games in RN, and unfortunately the outlooks are not so good. The tests I have done so far indicates that things will actually run faster in a webview. According to the Expo guys this is mostly because of the javascript JIT being disabled. They are working on this issue, though, so it will be exciting to see what they come up with.",1521103948.0
BooRadleyForever,"- Use FlatList not ListView Or maybe SectionList?
- Try to avoid on the fly js loops, lodash etc. Do any such processing beforehand and store the final version in state.

",1521077203.0
alorr10,"I have this section list component (section list wrapped in an animated view), and you can see that the animation of the list is kind of janky when loading my entire contact book (~3000 contacts). As soon as I search something and the number of contacts goes down to a reasonable number, the animation is smooth again. 

Does anyone have any tips for causing a smooth animation when loading the entire contact book into the section list?

I am also using https://github.com/mjsolidarios/react-native-search-filter for searching, which could have something to do with the slowness. Anyone know of any better ways to search through a list? (Maybe lodash?)

Thanks in advance!",1521071698.0
BooRadleyForever,Vert nice design btw :) May I ask if you hired a designer or used a component library? ,1521077244.0
icekeymon,"FYI, Apple will reject your app if it's merely a WebView embedding a website.",1521064037.0
Rizens,I'm very curious to know if people follow these webinar conference . It seems like there is a trend doing online conference rather physical these days .,1521100326.0
deadcoder0904,"The following are maintained well enough to use them -

1. Nativebase - https://docs.nativebase.io

2. React Native Elements - https://react-native-training.github.io/react-native-elements

3. React Native Paper - https://callstack.github.io/react-native-paper

4. React Native IOS UI Kit - https://callstack.github.io/react-native-ios-kit

5. React Native UI Kitten - https://akveo.github.io/react-native-ui-kitten

6. Your very own",1521031687.0
Mingli91,"UI Kitten doesn’t depend on Expo, I’m using it in 2 projects and never used Expo. It’s a very good component library,

What errors are you getting? I might be able to help",1520956335.0
swiftpolar,Try out [React native elements](https://github.com/react-native-training/react-native-elements).,1520987802.0
demoran,I'm pretty sure that's crazy talk.,1520993461.0
redpopcornpanda,"https://medium.com/@ste.grider/component-kits-for-react-native-84eff4b321b9.

I use some of these in our app and they don't depend on expo. We don't use expo at all, and pretty much every library we use doesn't need it.",1520994372.0
tokyo_on_rails,NativeBase,1521100084.0
rco8786,"so...you don't like RN or Javascript, and Flutter might be better but you don't know and also don't like Dart?",1520969292.0
kdesign,"> But damn, Now we mobile developers have a new toy to play with and I know which framework I am going to use for my next fun project.

Good for you, but (un)fortunately the companies which spend money on development are not looking at these projects as ""the next fun project"". Otherwise we would've had a plethora of Todo lists in the app stores.

So the real question is, does it scale well? Which are the pitfalls for a huge app? It's new so time will tell. That's why it's so naive to compare it against a well established solution (at least for now, since Flutter hasn't proven itself yet).
",1521120089.0
himom,tl;dr - Try Flutter.,1520965370.0
com2kid,"I'm kinda eager to try something where my dev tools don't all break on a monthly basis.

The JS ecosystem is so fragile. ",1521072965.0
Noitidart2,There was nothing about measuring perf in there. Or did I miss it?,1520963990.0
ABrownApple,Constructive feedback on the video is always welcome :),1520927171.0
Noitidart2,"It would be awesome to seperate by ""native"" vs ""pure js"". I haven't seen such a list yet. ",1521004677.0
theo_readsit,thanks for introducing me to Redux Saga; I need to do a lot more digging into to fully comprehend it - but great intro!,1520897462.0
TimeBomb006,Fantastic! I love redux saga. Great example,1520989759.0
Noitidart2,"Question on `forkTimes(worker, 5)`. So now we have 5 sagas waiting for ""request"". So if we dispatch `{ type:'REQUEST', url:'www.blah.com' }` one time, but we have 5 sagas watching ""REQUEST"", won't all 5 sagas take this request and load blah.com? That's what I thought.",1521179744.0
Noitidart2,"* I thought long and hard about the proposed offline system. I can't find a reason that dictates the ""why"" we should allow arbitrary X (forkTimes 5 in video) parallel requests. And I can't find a reason why on fail why just put it back into tail position of queue.

* This is how I use redux-saga in offline first systems - https://github.com/redux-offline/redux-offline/issues/90#issuecomment-367938968
  *  every request is parallel ""if it can be"". a queue is created for this ""if it can be"". ""if it can be"" means if the order of the request doesn't impact on the server.
  * on fail, it gets pushed back into the respective ""if it can be"" queue, and not just in the tail position. It might be in the head position. Or it might not get returend at all (ie: if an ""offline"" delete happened and not yet synced to server, so the DELETE request that came in on ""offline delete"" will be finishing it off). (i have not yet found a reason to put into middle). ",1521916320.0
Battelman2,"Check your MainApplication.java and make sure it’s not creating two instances of the package.

I’m on mobile so I can’t check the specifics of that package right now, but have you tried using [react-native-picker](https://github.com/beefe/react-native-picker)? We use it for our cross platform app and it works great. Take a look and see if it suits your needs.",1520892099.0
Noitidart2,I tried this module and had issues with it. I found this one to be better - react-native-wheel-picker-android - and using the `<Picker>` element of RN if iOS.,1520898118.0
MediocrePreparation,I have added your component to my website http://www.reactnrun.com/button if you don't mind :),1520931513.0
teiamt,"Instead of giving your component a name with ref, you can instead assign the instance to a variable, on which you can then call onFocus whenever you like.

ref={(c) => this.textinput = c}


And then later on in your code...
this.textinput && this.textinput.onFocus()",1520875937.0
kbcool,"Git + Fastlane/

Store the various configs in different branches, one for each app and then use Fastlane or Visual Studio App Centre to setup a build pipeline for each.

Haven't tried this tutorial but a quick skim gives it a thumbs up

https://medium.com/react-native-training/setup-continuous-integration-with-react-native-50ad2f6145f4",1520892925.0
kbcool,"Not sure if you're using the beta but if you are it's based on react navigation and react navigation is notoriously bad at not being predictable on what it does when scenes go out of view.

Probably best advise is don't use if it's that catastrophic to your app behaviour or do what I do and never rely on webviews being mounted at all times and restore. You will have to do this as you get to the level of needing a reliable app anyway. Your webview will remount when the phone has been rebooted or the app killed etc. It's inevitable. ",1521015350.0
loopsdeer,I have a similar question for react-navigation here https://stackoverflow.com/questions/49864539/can-i-never-unmount-a-screen-yet-still-place-it-higher-in-stacknavigator Did you ever find a solution?,1523907602.0
JustOr113,"Seems like the library isn't in active development, what do you think?",1520862151.0
kbcool,Is it harder to do React Native when you have more users? ........End dripping sarcasm tag goes here!,1520889189.0
metomezo,"I was looking for react native for a while but I had no knowledge about react and even any web technology then I finaly decited to make a project with it for learning purpose. And this is my first project with react native and I wanted to share with you.
I'm waiting your comments and I will be happy if you give a star :) ",1520857966.0
kbcool,Might want to post the links,1520821022.0
Noitidart2,"Wow super nicely done, full stack. How does it figure out you used the phone if the app is completely shutdown? Say on startup of device?",1520821999.0
kbcool,"Let me explain why I'm apparently spamming this group with my own react native module.

A couple of days ago someone posted here asking about the availability of Google Play Game services implementations for React Native. 

I volunteered to have a crack at it because no such library existed. The OP then promptly deleted their account so the post disappeared.

I'm hoping this post helps them out, I spent a good few hours on the weekend coming up with it. ",1520817786.0
Bamboo_the_plant,"Swift's compiler is horrendously slow (e.g. autocomplete, type-checking, and everything else), but it will compile to byte code that is no less optimised than Obj-C's is.

As a Swift programmer: just use whatever you prefer to write. But do be conscious of the fact that Obj-C is going out of fashion whilst Swift is coming in, if you're thinking of how it will benefit your skills.",1520812037.0
stathisntonas,"Ωραιος Τασο, ευχομαι το παιχνιδι να παει καλα!",1520794995.0
chmarus,"You can conditionally render any component in the any way you want. Just like in other frameworks for web and mobile app development. 

So short answer to your question is: Yes.",1520785047.0
BooRadleyForever,"You can do this the same way you'd do it with React. Very easy and very doable. Using tokens, state to save user role, etc.
From a UI/UX perspective, ask yourself if you really need to do it on mobile vs on the web. Make sure you're not over-Engineering this.",1520804016.0
excs,Very doable. Using something like Firebase authentication you could easily render components based on the user that's logged in.,1520815320.0
ghaple_bazz,"IMO you can explore following:

* Different redux stores for admin and user
* Switch navigator to control flow
* [Imp] serverside auth check

With the help of generators and reusable components you might be able to achieve this.

Just a suggestion.",1522434645.0
das3ingg,"It's not really a thing. There's definitely not a way to do this well and if you manage to get a working app it'll be relatively featureless and likely buggy. 

For example, how could that tool possibly know how to manage the state of the application? How could it make an API call? How will it know what to do with a form (can sketch create forms?).

There's a reason app development costs tens of thousands of dollars. That stuff isn't easy.",1520780692.0
Rizens,"There isn't any ""decent"" app that would do this yet.

There are a few startups working on this type of tools but it's not yet there.",1520782177.0
ryan4664,"Yeah like the other people said not a thing. Not sure if you’re a dev or if you’re unsure as to why it’s not possible picture this. 

You design a 3D model of a full sized car. You could maybe get it printed sure but how is it supposed to work? How would the lights turn on, or the radio work? 

There is more to these things than just the look of them. ",1520792837.0
demoran,"I suppose it depends on what you're doing.  You could offload the work to an API call and just wait for a result.  You could write a native module and do it there.

I think in most cases simply invoking a promise is good enough.  You probably don't actually need multi-threading.",1520771371.0
Rizens,"Anything that can be done Objective-C or swift , can be done in RN.

In your case , creating binding to Objective-C / Swift to create a thread to execute lots of stuff in a [JSContext](https://developer.apple.com/documentation/javascriptcore/jscontext) would work. 

There is already lots of libs doing it in order to create something like ""[Web Workers](https://github.com/devfd/react-native-workers)"" ",1520769999.0
derGropenfuhrer,">some heavy task

I'm having a hard time thinking of what task you'd be doing that wouldn't be better done on a server somewhere (like an aggregation of data from a database).  I think usually these sorts of tasks need to be offloaded, maybe to an AWS Lambda or a python process running on a server. ",1520797798.0
,[deleted],1520771365.0
Alexintosh,It is very much.,1523641357.0
recycled_ideas,"RN isn't a complete substitute for native coding, it's simply never going to give you the level of power and control that native code will.

If you have a large workload you need to do on device, it's probably not the right tool.

Be aware though that doing a large workload on device is probably not the ideal solution to your problem. You'll pay a pretty hefty battery life penalty for doing work that way, and it only really makes sense if the bulk of your data set is stored only on the device.

It's also worth understanding that because JavaScript is even*t* driven, locking the UI while you're doing work isn't a issue in the same way that it is in most languages. This means that separating work from the UI thread is generally not necessary. ",1520817541.0
Caroga,"This looks very promising. I've just started working with react native and am trying to get up to speed with a lot of stuff. This article looks to have a pretty good flow to answer the questions I keep having. 
Thanks for sharing. ",1520764737.0
derGropenfuhrer,"I'd set that outside the text box and make it locale-dependent or config-dependent. Like 

    ----------
    | 234.45 | €
    ----------

or

    ----------
    | 234.45 | $
    ----------

Symbol could go first too. ",1520738308.0
vebb,Sorry I'm late but you could use this! https://github.com/benhurott/react-native-masked-text,1520929609.0
unplugged_chump,I follow this page for my dose of react native: https://github.com/jondot/awesome-react-native/blob/master/README.md,1520708148.0
jeevium,"Hi there,

there was a very similar link posted a few days ago. Did you had a look already? https://www.reddit.com/r/reactnative/comments/81yxbf/what_learning_resources_besides_the_official/

And there was also this link posted on how to get started with RN. https://www.reddit.com/r/reactnative/comments/82obv7/how_to_start_learning_react_native/

Cheers",1520713673.0
monkJs,Why is Stephan's course outdated? ,1520718784.0
thngzys,"Hey there! I did Stephen's RN courses. Yeah it is a tad outdated but he covers some basic patterns that helps in pretty much any project. However, it's introductory in nature so there isn't much of a deep dive. Really helpful as a booster pack into the RN scene.",1520736982.0
harshdays,"Learn by doing. 
Start with expo and built simple stuff until you want something not provided in the expo bundle then eject or start fresh with a basic react-native init.  Learn the pain points. Don’t expect to put any expo apps on your resume though every three months or so they lose support. 
Get familiar with react-navigation. Its not perfect but it’s the best there is.",1520764939.0
teiamt,"I've been using Typescript with react native for nearly a year for eaten (https://eaten.io).

I would 100% recommend it. More and more libraries now come with .ts files and being able to type out data structures is a big improvement over straight JS.

The only downside we have experienced is when upgrading typescript, there are sometimes breaking changes.",1520731306.0
Rizens,You may want to look [here](https://github.com/Microsoft/TypeScript-React-Native-Starter) . ,1520701715.0
Noitidart2,"I would say use Flow. TS requires a lot of out of the way setup to work with React. Any React module you see out there, if it's typed, it's typed with Flow. React itself, and React Native itself is typed with Flow (and prop-types but this is deprecated). Sure some modules out there have TS typings. A biggie for me is create-react-app, this works out of the box with Flow, and is a ridiculous headache trying to get it to work with TS. Also Flow doesnt make us learn anything new way, its just annotations on our regular ES6, and the transpiler simply ""strips it out"". As opposed to the transpiler for TS which actually ""transforms it to js"".",1520753405.0
Delphicon,"I use Typescript with React Native and love it however, there are two drawbacks I've found:

1. The build process can be quirky. There are some combinations of options in tsconfig that will lead to errors after compilation.

2. Typescript support can be hit or miss. The types almost always come from definition files, often from the @types community but sometimes in the package. The type definition files can be convoluted or may export things wrong and in one case one of the types was just wrong.

That all being said I think it's absolutely worth it, especially since you're already familiar and happy with it. It also seems to have overtaken Flow in the past year so Typescript seems to be the best choice going forward.",1520800940.0
SolidR53,"https://github.com/ueno-llc/react-native-starter

Has hybrid setup, both JS and TS",1521034648.0
alex_plz,"Redux is [not exactly](https://twitter.com/andrestaltz/status/616270755605708800) ""nothing but another Flux implementation."" Redux and Flux share a lot of concepts, but there are some key differences. Possibly the most important difference is that Redux has a single Store object whereas Flux can have many. 

In Flux you may (correct me if I'm wrong) have some value in Store C that depends upon values in Store A and Store B. This means Stores have to be able to subscribe to updates from other Stores.

Redux removes this bit of complexity and ambiguity by having a single store. There is never any question about where a given piece of your state lives or any concern about synchronizing updates across different Stores. After an Action is handled, your Store object is a brand new copy that represents your entire application state.

Another big difference between Redux and traditional Flux is the functional style. Flux has mutable Store objects and you propagate those changes to your components by attaching event listeners. With Redux your Store is immutable and new versions of your state are produced by Reducer functions which take an Action (a plain object) and the current state Store (also a plain object) and produce a new copy of the state. 

In short Redux takes the Flux concepts of Actions and Stores and reduces a lot of the complexity by adding the constraints that there is a single state store and that state updates are purely functional. Having used both approaches, I think Redux is a big improvement over Flux. It's not that Flux is terrible, it's just that I can't think of a good reason to pick Altjs or Reflux or something like that over Redux in 2018. If you think Redux adds too much boilerplate (possibly a valid complaint for smaller projects) there are options like Mobx that would be better than using some crusty old Flux library.

Honestly it's kind of a moot point really. Looking at Altjs and Reflux, which were the top Flux libraries before Redux came along IIRC, neither of them has been updated for over a year. Picking an unsupported library for your projects is likely to cause some pain down the road. The whole Flux community as really converged on Redux as the best choice, so it really simplifies the decision process since it appears to be the only one of that bunch being supported anymore.

As an aside, as you mention, most of the developers you are interviewing already know Redux. This point should not be overlooked. Picking a widely-adopted solution gives you a big advantage when it comes to hiring and training a team. A lot of developers you might hire are already going to know Redux. Zero of them are going to know your Flux implementation that you wrote yourself. I think you'd have to make a pretty strong case about why your home-grown solution is better than Redux to justify the additional ramp-up time for any new hire to be productive. ",1520693348.0
srg666,The Redux devtools changed the frontend game for me personally. ,1520692866.0
jeevium,"Hi there

@alex_plz did a good job covering the Redux VS Flux point. I would like to add a few more points and some maybe more generic:

* The reason why so many front-end people jump on the Redux wagon is because they tried it and they found value in it. Application state management has been a headache for front-end devs for many years now.  Redux offered a solution in a mere of 99 lines of code (https://gist.github.com/gaearon/ffd88b0e4f00b22c3159) Yes it has a bit of learning curve in the beginning it's a bit verbose to code it but then it makes life easier. 

* Making you own custom solution is probably not in your best interest as @alex_plz mentions. You will spend the time (which is crucial for a startup) and effort to build something that we are not sure yet if it will be the best choice and you will also need to train the company's hires. 

* Finally I personally disagree with the use of TypeScript. TS defines types yes but it's not the answer IMO. It actually drives you away from learning JavaScript (if you are OK with that then that's fine) and adds extra code effort to have and maintain these types across your whole project. I personally liked this article: http://walkercoderanger.com/blog/2014/02/typescript-isnt-the-answer/

Cheers",1520713405.0
bishopZ,"A big part of the confusion is that Facebook released the library flux.js at the same time as the Flux design pattern. Redux uses the Flux design pattern, but no one still uses flux.js.",1520702382.0
Mingli91,"If someone decides to go for their own Flux implementation over Redux and they don't have a good reason, I'm left thinking they're not in their area of expertise and are the type of developer who over-engineers everything. It's a huge code smell.

Is there no way you can get an expert on JS and JS tooling to help you out with interviews? It seems a bit odd when you are admittedly new to front end, interview developers with 5+ years experience, and when they don't arrive at the same conclusion you say *they're* the ones lacking knowledge.

Have you actually used Redux before? If you've implemented Flux before then when you try out Redux you should have a lightbulb moment and wonder why you ever bothered with Flux. Remember though, Redux isn't the be-all-and-end-all of state management in JavaScript, there are other solutions out there and times when using Redux (let alone Flux) just isn't worth it.",1520769075.0
themaincop,"What led you to decide to implement your own flux pattern vs. just using the current industry standard?

Personally I would rather work somewhere where we use the Flux implementation that has a massive community and tons of documentation vs. some bespoke one, unless there was a really good reason to use the bespoke version.",1520711032.0
Noitidart2,"TypeScript doesn't really work with React modules out of the box. Mostly everyone has Flow typing ready (any react module if its typed it is typed with flow, React Native itself, React itself, create-react-app [this one is the biggie]). Trying to force it into TypeScript is not going to be fun, mainly for create-react-app. Flow works out of the box with everything React.",1520753130.0
kbcool,React Native employs primatives like a box and text etc so I would say never but if you could elaborate on what you're expecting I'm sure the community could help,1520761303.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/reactjs] [Consequences of Redux](https://www.reddit.com/r/reactjs/comments/83wxcs/consequences_of_redux/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1520877246.0
jeevium,"Congrats on the publication mate!

A few points regarding Play Store presentation (did not download the app yet):

* Try to improve your rating - best things is to achieve above 4.5 which is excellent. Otherwise definitely more than 4.

* Add description mate, Google allows up to 4000 words. When apps look empty, users tend not download (and I cannot blame them). Description also will help you ASO. And you should probably do it in English or localized for the countries you have released you app :)

* I see a few permissions that you probably don't need and you should remove. For example ""draw over other apps"" is an RN permission needed for RN development, you can remove it from production (I always remove it as well) and you probably don't need ""read phone status and identity"". I would suggest that remove that as well. Users want more of their privacy data undisclosed :)",1520679791.0
Noitidart2,"For android how did you remove the default permission ""default id & call information""? And also the ""photos/media/files external storage"" permission? These are default on my RN apps I dont know how to remove them.",1521180340.0
stathisntonas,"Here’s almost all UI Libraries for RN:
https://nativebase.io
https://github.com/shoutem/ui
https://github.com/akveo/kittenTricks
https://github.com/xotahal/react-native-material-ui
https://alligator.io/react/react-native-ui-toolkit-roundup
https://avocode.com/nachos-ui
http://carbon-ui.com
https://github.com/callstack/react-native-ios-kit
https://github.com/futurice/pepperoni-app-kit
https://github.com/binggg/mrn
https://bbbundle.co (paid, not components but screen design)
https://github.com/react-native-training/react-native-elements
https://github.com/callstack/react-native-paper
https://github.com/appbaseio/reactivesearch/",1520762802.0
kbcool,"I tried a few including native base and nachos UI.

Nothing wrong with them but if you want your app to look like your app and not something from a template app you move on quick.

I'm still slowly removing nachos UI from my project so it looks more professional.

They are great to get something off the ground though so I won't disparage them.

If you want to see what you can do with a basic design language knocked up in sketch quickly checkout my app (yes I push it a bit but can you blame me?)

iOS: https://itunes.apple.com/us/app/oshirt/id1348086654?mt=8

Android: https://play.google.com/store/apps/details?id=com.oshirtshop.com.designer",1520660699.0
nitinsh99,"I agree with kbcool but if you are still lookout for thir party ui component library, i find react native kitten pretty useful 

https://github.com/akveo/react-native-ui-kitten",1520661208.0
noonien_soong_86,"Actually, i have. 
I built an RN app, that does some realtime image processing with OpenCV on the phone's camera for both iOS and Android.

After spending many ours on getting OpenCV compiled and linked on both platforms, the rest was not that hard.

I created [Native UI Components](https://facebook.github.io/react-native/docs/native-components-ios.html) in Objective-C and Java, which provided the live camera view, a ""frame processor"" singleton class with a set of wrapper functions around the actual image processing functions (C++, see below) and the communication between those two, as well as some [events](https://facebook.github.io/react-native/docs/native-components-ios.html#events) to notify the RN side with information about the ongoing image processing task on the native side.

For the actual OpenCV code, i used the C++ interface, to be able to share it between both platforms. This code deals with OpenCV mat objects and is held agnostic to the platform its running on.
For iOS, i could mix C++ with Objective-C as you like (source file has to have a .mm ending), for Android i used JNI for running C++.

This common OpenCV C++ image processing routines were then called by the ""frame processor"" object in Java/Objective-C, on every camera frame.

In React Native i imported the Native Component (which shows the current camera frame feed) and call JS methods on it via ""RCT_EXPORT_METHOD""s for the RN->Native communications.
I then overlayed a RN View on top of the Camera Native View, to display the information i've gotten from the native events mentioned above, bounding boxes of recognized objects, in my case.

If you've got any detailed questions, please let me know.

",1520640821.0
kbcool,"Did some more digging. I was probably on the wrong track around how to get the bindings working. It would be best to do them both off the c++ versions and a bridge module.

In the meantime what you can do is to write your code in c++ and pass the results back to React Native. 

See what this person did:

https://github.com/yenshih/Dehaze

They used Djinni to create a cross platform lib then called it from React Native.

There's a React Native extension to Djinni here:

https://github.com/sulewicz/djinni-react-native

Hope that helps.",1520636898.0
kbcool,"No one has a complete set of bindings yet across Android and iOS.

It's quite a large task to pull off. Android would be the natural starting point because there is a node.js implementation of opencv built on the java implementation of opencv so should just be a matter of mucking around to get working.

objective-c will be harder.

Data type wrangling and working through every single function is going to take most of the time building a bridge. The next biggest challenge is getting everything to link and compile nicely.

I was thinking of jumping in but don't have enough spare time currently.

",1520635059.0
Meph1k,"If you're still interested, here's my working and documented example -> https://github.com/brainhubeu/react-native-opencv-tutorial :)",1522401041.0
lau2222,You can embed any JS markdown editor for example https://github.com/nhnent/tui.editor It doesn't need to be anything specific to React Native.,1520609893.0
Snyggt,Draft.js is very customizable and is the base of many wysiwyg-editors out there. My team uses it in our production web-apps and we chose it due to it's customizability,1520623608.0
kingbin,"Don’t understand your question. He walks you through steps on how to code it. Granted it’s 8months old and prob needs a little work to update it to current package versions.

Source is linked at the bottom: https://github.com/browniefed/map_animated_scrollview",1520616805.0
redditdaw,"I was able to fet it to work on both iOS and Android. For Android I am unable to get the Animated markers to work. Currently only show as purple dots.
Was anyone able to have some success with Android?",1521158349.0
fly_guy22,"I’ve implemented this on a near production app, and we haven’t found any issues. 

What exactly is your problem? Some versions of simulator and Xcode can render maps at horrible FPS.",1520623165.0
thatsgreat2345,"Hey, creator here. It's a bit outdated but check out using something other than scrollview with locking. This example won't work on Android until recent versions of react native. Regardless I walk through the implementation and concepts behind it so reworking it shouldn't be too hard.",1520654242.0
fly_guy22,"Store the width of that section as a variable(screenwidth - padding)
Run the function onpress for either of them.
Then use animatable. Try this out(not tested):

    import React, { Component } from ""react""
    import {
	View,
	Animated,
	Easing,
	Alert
    } from ""react-native""

    class someComponent extends Component {

	componentWillMount() {
		this.slideValue = new Animated.Value(0)
	}

    margin(first, second) {
        this.slideValue.setValue(first)
            Animated.timing(
                this.slideValue, {
                    toValue: second,
                    duration: 1000,
                    easing: Easing.quad
                }
            ).start()
	}

	left = () => {
		this.margin(0, 1)
	}

	right = () => {
		this.margin(1, 0)
	}
	
	render() {

        const { width, height } = Dimensions.get('window')

        const somePadding = 30

        const appWidth = (width - somePadding)


		const margin = this.marginValue.interpolate({
			inputRange: [0, 1],
			outputRange: [0, appWidth]
		})
		
		return (

			<Animated.View
				style={[styles.something, {margin}]}>

                {/* some content */}

			</Animated.View>

					
				
		)

	}

}",1520588434.0
lastdrop,Take a look at react-native-animatable,1520578248.0
g00dgame,I think this should be pretty straightforward done with some customizations in the react navigation standard tab navigator. ,1520576140.0
kbcool,"I'm working on it now. I needed a project to practise my react native to native bridging skills on so this seemed like a good one to pickup. 

No iOS but will look at implementing Apple's game centre next and then a unified package later.

I'll work on achievements first and update you here. Any other interests? Events, leaderboards etc?",1520646208.0
soulkito,"Without digging too deeply then no, I don't think there are any libraries out there. But what you are trying to achieve is not that difficult, you basically have to create the achievement on the Google Play Console and use REST to communicate with the service to unlock the achievements. 

Play Games Services links:

[Achievements](https://developers.google.com/games/services/common/concepts/achievements)

[Web Implementation](https://developers.google.com/games/services/web/api/achievements)

[Unlocking](https://developers.google.com/games/services/web/api/achievements/unlock)

Using REST for React Native:

[Networking](https://facebook.github.io/react-native/docs/network.html)",1520591344.0
ubermc,"I just wrote all the native code in a module.
It was absolute hell.",1520671843.0
causeofdev,"Hey, first of all, could you share what you have already perhaps? Might make it easier for us to find something that works.

 I don't think there's a callback on the notification plugin that you could use. (I was thinking of using ""onNotification"", but if i remember correctly, that's a callback on _opening_ the push notification..)

So your best bet would be to set a timer. But then, a timer will not trigger when a user killed your app (so not in foreground, background, but dead). 

Might I ask what you're trying to achieve? Why do you want to absolutely play the sound even if the user set their phone to silent? You kind of have to respect that, imo. (Ok, alarm apps are the exception on that, but is your idea exactly that or is it, for example, an app that manages the state of your plants in your house and you want to notify users when a plant needs water?)",1520610080.0
pirray,"I have used React for all my personal projects for over a year now and would love to develop an app with other people. I haven't yet published a React Native app but I'm working on two projects at the moment.

Contact me if you are interested.",1520572371.0
jeevium,"Hey,
my team and I have built and published with React Native and GraphQL an Android game called Math Warriors (https://play.google.com/store/apps/details?id=com.wizope.mathwarriorsgame). We are currently building more features to the Android version and we plan to release the iOS version in a couple of months.

I would like to learn more about the traction you have, your business goals etc and explore the partnership possibility. Let's talk over PM :)",1520600993.0
,[deleted],1520541632.0
otherworld-dev,"Guys, I just made this. Can I get a feedback? :)",1520514629.0
lefooey,I’m filing this away to try out in a future project. 👍,1520570882.0
unplugged_chump,"With expo, I publish my app to expo very easily and can access it on a different network.",1520515396.0
filipef101,You can use a VPN for that,1520603910.0
Buliam,"I’ve been interviewing people who have made apps with react native on http://madewithreactnative.com and plenty of them have worked with other cross-platform technologies like Ionic and Cordova before.
Most of them had no problem migrating, since they would already be familiar with the technologies needed in React Native (JS, CSS and maybe HTML)

As for reasons, what gets mentioned often is that they could never quite get the native look and feel down with an Ionic or Cordova app. Performance is also a frequently mentioned reason for migrating away from those web view based apps to React Native.",1520509420.0
kbcool,"Well I never got very far with Ionic because I realised pretty quick that the apps look like pretty Cordova apps. 

React native feels native if you don't f&$k it up.

That being said if you don't already know React start there, I prolly wasted a month going through hockey stick ramp up curve in react, redux etc when I could have just gone react web first and lessened the pain.",1520506022.0
mcdngr,"Do it. Migrate to react native from swift/objective c or java. Reason being you can now have your web devs work on it. I am web by background, and had not trouble building a production app in rn. I also know a handful of native devs who used to swear by ______ that now only want to make native apps this way",1520516077.0
nitinsh99,"Currently re-writing ionic app in RN. 
Reasons to leave ionic : performance. performance. performance.

I could never complain about anything else from ionic except performance issues (specially in slower android phones). It ( Ionic) has treated me well so far and I love being able to write code in typescript, angular’s structured code approach and all the awesome ready made components by Ionic team.

However, nothing matters if user feels like they are browsing a web page inside their mobile application. Hence RN. 

RN definitely felt like having a steep learning curve and the overwhelming decision fatigue when it comes to choose pretty much everything: cli, navigation library , component library ,state management etc..",1520661886.0
SizzlerWA,"This is highly unlikely to happen since the access pattern of Firebase and a Rest API generally differ. With Firebase, you generally setup an observer on a Firebase ref and get real-time updates but Firebase controls the timing of those updates.  With a Rest API you make intentional HTTP requests where you control the timing of when they happen.  You could route things through Redux so obscure the network layer, that would work. But still, the access patterns between Firebase and REST are so different that I think layering on top of them will just be a big mess.  In 20 years of experience, I’ve never seen the “we could just swap in a different network layer” ever happen. Coding in advance to handle that is a waste IMHO.

Besides all that, Firebase is both a DB and a network layer. REST is just the network layer, so you need to replace Firebase with both REST and another DB like Mongo or Postgres.  That then requires backups, ops, etc. Firebase dies all of that for you.

HTH",1520524470.0
hello_Mrs_Cumberdale,"looks like it's in an es folder now:
https://github.com/rt2zz/redux-persist/blob/master/docs/PersistGate.md

    import { PersistGate } from 'redux-persist/es/integration/react'
    ",1520490109.0
MisterLeDude,Ty m8,1520466251.0
filipef101,This is great! I'm now in doubt whether to make my secure chat app in xamarin or RN!,1520603833.0
demoran,The emulator that comes with Android studio is fine.  You need to [disable Hyper-V](https://www.itwriting.com/blog/9371-how-to-run-android-studio-on-windows-without-disabling-hyper-v.html).,1520460556.0
jeevium,"Hello. 

I am working with React-Native for a year and I work only with the  Android Studio emulator. There is some configuration you can do when creating a new emulator for how much memory it will consume, but you will need RAM in general while working with RN; especially in Windows.

I considered Genymotion myself but I found it time consuming to configure it so i dropped it.

P.S. If you plan to develop UIs with RN you will need a set of emulators with different screen dimensions, pixel densities etc to verify that your UI works well everywhere (but that's for later on).",1520467452.0
lovemeslowly,"if anyone is having trouble using android studio emulator.. I use this command to launch it ..for Mac

""cd ~/Library/Android/Sdk/tools && ./emulator -avd Nexus_6_API_23 -gpu host""
",1520487651.0
aircraft721,"At work I use Expo + Genymotion because I have an AMD processor and I can't install HAXM on Android Studio. 
https://medium.com/@devmrin/complete-how-to-create-react-native-app-with-genymotion-android-emulator-on-windows-10-in-10-3834fd90b074 -> a quick guide to setup Genymotion.",1520492568.0
rr1g0,r/assholedesign,1520462887.0
kaze0,Not doable. Closest you are going to get is make it full screen,1520465626.0
i_invented_the_ipod,"I don't think there's any way to do these sorts of things from a native iOS app, so there won't be any way to do them from a React Native app, either.",1520467358.0
MainFoot,You can do it with native Android code by using startLockTask for devices over Lollipop. You will need to roll your own wrapper because no one has made one as far as I know. All you can really do for iOS is make your app full screen but you won't really get the experience you're after.,1520478845.0
alien3d,i would like to knew also.. but even facebook also prompt notification even i  on their apps. ,1520483524.0
incurious,i have never found a truly satisfactory camera package :/,1520446107.0
1Gijs,"I use https://github.com/react-native-community/react-native-camera to scan qrcodes. Its great. 

Relevant callback: https://github.com/react-native-community/react-native-camera/blob/master/docs/RNCamera.md#bar-code-related-props
",1520508119.0
Triptcip,I have struggled to find any working camera package.,1520454968.0
filipef101,"yes, in production, 2 bloody weeks to do a camera on my app for sharing an image with overlay, gosh...
I miss xamarin, You might wan't to check my fork, I have the same nick on github
I have enabled some tings like check flash and if has front camera on android ( on iOS we can guess ) 
And we also fixed a bug the view caused a transparent hole in modals",1520499916.0
ExtremelyQualified,"I don’t know if this works for others, but my process is.

1. Pick a project you want to build  

2. Throw yourself into the project, trying to figure things out the best you can. Note the places you are totally stuck on or unclear on.  

3. Now go back and learn how those things work. It will make much more sense since you’re able to tie the abstract ideas to your own concrete experiences.  ",1520442830.0
ikbenpinda,">do I need to get better at functional and oop programming before diving into react native?

Definitely helps understand the functional jargon they like throwing around.

> I find difficult in understanding promises and fetch API and all those stuff. I would really appreciate if you could tell me how should I really proceed and what I need to master so that I can understand every essence of react native. Thanks.

Understanding Promises is one of the most important things to learn in this framework and javascript in general, but they can be tricky to wrap your head around. My advice would be to start with a small side project and try to incorporate it there, because it is one of those things you 'get' by doing it over and over again. 

Maybe it's easier to just start with a basic website (so outside of React or React Native) with html and jquery, and work your way up from XMLHttpRequests to promises, depending on how experienced you are.

:)",1520430637.0
czater,For me the best way to learn RN was to buy React Native Practical Guide on Udemy. Realy recommend it but you should have some experience in web or mobile development if you want truly understood RN.,1520454907.0
Buliam,"I've been interviewing some people who have made apps with React Native on http://madewithreactnative.com and a lot of them said that all they needed to get started was reading the docs and doing the introductory tutorial and then jumping right into a project.
If you are already familiar with basic JavaScript, HTML and CSS, then that seems like a good way to go.

As for other resources, [Egghead.io](https://egghead.io/) is brought up fairly frequently.
And another resource I can personally recommend is the [Full Stack React Native book](https://www.fullstackreact.com/react-native/).",1520456305.0
demoran,"Promises expose a `then` method that takes a function that receives the resolved value from the promise.  If the promise fails (eg an exception is thrown, the promise is rejected), then it silently fails.  To catch a promise rejection you need to use the promise `catch` method or pass a second argument to `then`.

async/await in js works much like it does in C#, with the caveat that exceptions are not thrown, but die silently.  To actually catch them, you need to put your `await`s inside of a try/catch block.  A failed promise will be caught then.

I use fetch in my api module:
    
    import { AppConfig } from '@constants';
    import { getAuth, removeAuth } from '@services/persistence';
    import { Actions } from 'react-native-router-flux';
    import generateUuid from '@lib/uuid';
    import { store } from '@redux';
    import { API_CALL_BEGIN, API_CALL_END } from '@redux/actionTypes';
    
    /**
     * Gets some data from the API
     * @param { string } path - The endpoint path
     * @returns {Promise<*>}
     */
    export async function apiGet(path) {
      const init = await getInit();
    
      return api(`${AppConfig.urls.api}${path}`, init);
    }
    
    /**
     * Posts some data to the API
     * @param { string } path - The endpoint path
     * @param { object } dto - The data transfer object to pass to the API
     * @returns {Promise<*>}
     */
    export async function apiPost(path, dto) {
      const init = await getInit('POST');
    
      init.body = JSON.stringify(dto);
    
      return api(`${AppConfig.urls.api}${path}`, init);
    }
    
    export async function apiPatch(path, dto) {
      const init = await getInit('PATCH');
    
      init.body = JSON.stringify(dto);
    
      return api(`${AppConfig.urls.api}${path}`, init);
    }
    
    export async function apiPut(path, dto) {
      const init = await getInit('PUT');
    
      init.body = JSON.stringify(dto);
    
      return api(`${AppConfig.urls.api}${path}`, init);
    }
    
    export async function apiDelete(path) {
      const init = await getInit('DELETE');
    
      return api(`${AppConfig.urls.api}${path}`, init);
    }
    
    /**
     * A wrapper around the fetch protcol.  Will verify success and throw if a failure.
     * @param { string } url - the complete url to fetch
     * @param { RequestInit } init - options for the request
     * @returns {Promise<any>}
     */
    async function api(url, init) {
      const uuid = generateUuid();
      const data = { uuid, url, init };
      try {
        store.dispatch({ type: API_CALL_BEGIN, data });
    
        const response = await fetch(url, init);
    
        // Throw an error if the response was unsuccessful
        await checkStatus(response);
    
        // Return either the object parsed from json, or the response itself
        return response.json().catch(() => response);
      } catch (err) {
        console.log(JSON.stringify(err), data);
        throw err;
      } finally {
        store.dispatch({ type: API_CALL_END, data });
      }
    }
    
    /**
     * Gets our standard init signature, complete with credentials if we have any
     * @param { string } method - The HTTP method to use
     * @returns {Promise<void>}
     */
    async function getInit(method = 'GET') {
      const init = {
        method,
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
        },
      };
    
      const { access_token: accessToken } = await getAuth();
      if (accessToken) {
        init.headers.Authorization = `Bearer ${accessToken}`;
      }
    
      return Promise.resolve(init);
    }
    
    /**
     * Checks the status of the API response.  Throws if unsuccessful
     * @param { Response } res - The fetch response
     * @returns {*}
     */
    async function checkStatus(res) {
      if (res.status >= 200 && res.status < 300) {
        return Promise.resolve(res);
      } else if (res.status === 401) {
        // Log the user out and redirect them to the login screen if they get a 401
        // This is indicative of invalid credentials
        await removeAuth();
        Actions.auth();
        throw Error('Unauthorized access');
      } else {
        const path = '_bodyText';
        let messageObj = {};
        try {
          messageObj = JSON.parse(res[path]);
        } catch (err) {
          messageObj = { Message: res[path] };
        }
    
        let message;
        let code;
    
        if (messageObj.Errors) {
          const errorObj = first(messageObj.Errors) || {};
          message = errorObj.Message;
          code = errorObj.Code;
        } else if (messageObj.Message) {
          message = messageObj.Message;
          code = -1;
        }
    
        const error = new Error(message);
        error.code = code;
        throw error;
      }
    }    ",1520461356.0
jeevium,"Hey.

I will try to answer your points and give you some kind of direction here.

1. You don't need oo programming before diving in react native. There are very few oo concepts in RN and some of them work differently from other oo languages. An example of that is the usage of `this`. Learn to do the basic things that RN requires (class, constructor, this, bind) and in time try to learn them deeper.

2. It would be good to become better in functional programming, but you will get there as well if you start with a small project (as people mentioned already) and read a lot at the same time.

3. You will not need DOM at all. It does not exist in the RN concept, because you are developing for mobile devices and not for web browsers (DOM is present with React but not with React Native).

4. Promises are important for JavaScript overall not specifically RN. Please do start learning fetch (and not XMLHttpRequests which is the old style) and async/await (instead of .then which is the old style).

Finally, I would suggest for you to start with a solid setup. Download everything separately and don't use the popular create-react-native-app package (for more control and also some 3rd party libraries do not work with it). Then start with a small project that will also include some front end fetching of API calls. I suggest to configure webpack as well.",1520468749.0
raptiq,"One simplish way to handle this would be to set the components state when the ModalDropdown's onSelect callback is called. This assumes the component this is in extends React's Component class. Something like the following would be called whenever someone selects an item in your dropdown:
    
    handleModalSelect = (selectedIndex) => this.setState({selectedTimeIndex:  selectedIndex })


 Update ModalDropdown to have 

    onSelect={this.handleModalSelect}
            

Then in your TimerCountdown you can update it to use that stored index and get the value via your existing array

    initialSecondsRemaining={corresponding_nums[this.state.selectedTimeIndex]}
        
Hopefully this helps get you closer to what you're looking to accomplish, I'd also recommend checking out the React docs on state if you're not sure about how component state in React works. https://reactjs.org/docs/state-and-lifecycle.html

  ",1520418511.0
teiamt,"Hey, look at the onselect prop of the drop down component. You can pass a callback function to it and when an item is selected, it calls that function with the selected value",1520417527.0
Noitidart2,Holy moly why is it 66mb?,1520370693.0
kbcool,http://lmgtfy.com/?q=universal+linking+react+native,1520370599.0
chiamaka_sil,You could make use of firebase dynamic links. ,1520529668.0
developernoob,Downloaded! May I pm u about my questions :),1520367694.0
natedoggnfl,This app was brought to you by the letter N.,1520390689.0
Rizens,"Tested on 5c , boot up in under 5 seconds . Lotie feels super smooth.

What's the back end powered with ? Firebase maybe ? Express ?",1520425503.0
boomdoodle,Hey it looks really good! One thing I would change is the feed list takes up quite a bit of space next to the actual feed. I would have it at the top horizontally instead. ,1520379838.0
kbcool,"On Android you've asked for every single permission available.

Even though as a Dev I know a lot aren't always as scary as it sounds I'm still not going to download your unknown app.

Does your group chat really have in app purchases, require my location, my identify etc etc ? I think not.",1520395538.0
phillyeagles91,Very cool! How long did development take?,1520381330.0
0root,"Sorry for the questions, but was there any reason for choosing RN over other solutions? If it wasn't done in a hackathon and in your own time, would you guys still build it using RN?",1520513767.0
Rizens,"Have you considered making multiple short videos rather than one big ? 

It's much easier to keep focus this way.

Nice initiative with this channel.",1520352912.0
Yxven,"I overall really liked this video.

I do think you need a disclaimer on the ""not using semicolons is a style choice"" bit. It's a style choice that can cause hard to debug parsing errors. It's a valid choice if you and everyone else that interacts with your code base understands those gotchas, but it's not something that should be casually mentioned in a tutorial video aimed at newbies without a ""thar be dragons"" warning.

I didn't mind your video being an hour. I liked that you more or less showed building an app from start to finish.",1520445909.0
unplugged_chump,Thanks for this upload. Really helpful stuff.,1520361005.0
dominicdigital,"Haven't watched the whole thing yet, but from the first 15 minutes, it all seems very well-explained and beginner-friendly :)

Saving (to local storage) and syncing would be interesting features to see in use",1520422216.0
ikbenpinda,"I made a cheatsheet once, maybe this helps.

basic stuff:  

- log everything, using Babel/ES6 String interpolation helps.  
- Split up your reducers.  
- Set a default to your state parameter and keep returning the state as-is in your reducers: e.g.

 ```
thisDamnReducer(state = intialDefaultState){  
  // do stuff   
  return state;  
}  
```
or your state will be reset all the damn time ^(it took me forever to figure this one out)
- [prettier](https://github.com/prettier/prettier) does your code styling for you
- [Moment.js](http://momentjs.com/) does your datetime stuff for you
- when in doubt, ```rm ./node_modules && npm install```

Some common issues you're gonna run into (and how to fix them):

_Configuration with name 'default' not found._  
    ^Run ^npm ^install, ^maybe ^even ^delete ^node_modules.

_React Native version mismatch._  
^Close ^all ^terminals, ^build ^again.

_Package signatures do not match the previously installed version._  
    ^Delete ^the ^app, ^re-install.

_Could not resolve [asset] as file nor as a module_  
^Run ^rnpm ^link

_Could not expand ZIP_  
        ^Run ^toolchain ^as ^admin,        ```Run cd android && sh gradlew clean```

_Wrong root folder_  
    ^Restart ^the ^npm ^server.  

_Please try running this command again as root/Administrator._   
    ^Run ^npm ^cache ^clean
",1520334342.0
moufoo,I know of bitrise and Microsoft app center,1520320483.0
julius559,Any CI service that can be used for iOS and Android (we use CircleCI).,1520348764.0
Swingline0,Bitrise is the only tool I have found success with so far. Supports Android and iOS with partial ability to submit builds to respective app stores as well. ,1520336704.0
7hundredand77,"When the notification is received, and selected, you should push application navigation state to the new screen. ```` NavigationActions.navigate()````",1520332423.0
iaan,Very good talk 👏,1520290673.0
hackerino_cupertino,"Super interesting and straight to the point. A must see for RN enthusiasts.

Edit: typo",1520341429.0
raptiq,"Awesome talk, thanks for posting this. It's great to see learning being shared from experienced teams. My company is in a similar position with a legacy webview app that we're rewriting from scratch with RN. 

You definitely convinced me to give redux-saga a serious chance. I've known about it for awhile but the you presented some very compelling use cases.

Also have to commend you on your presentation skills, clear and engaging all the way through. Only thing I'd recommend is repeating questions asked by the audience because the mic didn't pick up their voices very well.",1520419327.0
jestzisguy,"Just watched this after stashing it away for a couple of days.  Very cool!  I rarely get to hear about RN apps in production.  Also curious to try out saga, which I had dismissed a bit for seeming overly complicated.  Thanks for the talk!",1520629111.0
hawryson,"Do you get any error messages or a stacktrace when the command is run?

Either way, have you tried running `gradlew clean` from the android directory?",1520281628.0
jollybindo,"If it works in the emulator then the build works fine, both js and android. It sounds to me like it’s more of an issue with your Explorer not refreshing the view or you being in another unrelated folder. 

How are you installing the apk on your phone?",1520291071.0
,[deleted],1520299346.0
BuggerinoKripperino,This is great I was looking for exactly this today. Thanks so much,1520376836.0
baby_bel,It's the way to specify default value for the prop using propTypes  ,1520232303.0
benjycap,"The example in the video would make a bit more sense if the prop's `value` was instead called `defaultValue`. This `defaultValue` is assigned to the `state.value` on construction, which is used by the component - the prop is never referenced again.  

If the user doesn't set a `defaultValue` on the component it will be set to 'Hello World'.",1520253098.0
jeevium,"Hey there.

I'm a JavaScript developer myself and have been coding RN for a year now. Recently I wrote a post including resources I found useful when I started with RN 1 year ago. Back then I was new to new React world as well - previously coding with AngularJS. Hope you will find the post useful :) https://medium.com/building-with-react-native/im-just-starting-with-react-native-how-can-i-pick-it-up-1x02-19e3e219bb55

Regarding the specifics you mention, I can say the following:
I have been using ESLint for years and you should too. It evaluates your coding style with rules. And since JavaScript has good and bad parts we should all write it the correct way. 
Both Atom and Vscode are excellent editors. And WebStorm is cool but it's heavier since it's an IDE. I have used all of them from time to rime and every one has pros and cons, so simply choose the one u prefer!",1520209499.0
godhatesmetoo,"I found [this YouTube video](https://www.youtube.com/watch?v=_srHOd6EFQ0), which is from February 2018 and explains setting up VSCode for React Native development.

EDIT: It links to a free video course which I started to watch. He uses OS X, create-react-native-app and yarn, sets up the iOS and Android emulator, installs eslint (here I somehow had to install eslint again after initialising it), then he installs prettier and some tools to automatically run prettier and eslint --fix when adding files with git. He then sets up Visual Studio Code with the eslint and prettier extensions, integrates them with each other and sets editor.formatOnSave. He also installs the React Native Tools and the React-Native/React/Redux snippets extension. The rest of the course is source code organisation, configuring navigation, debugging and styling. So it's not a deep dive but I think it's exactly what you need when you want to start quick and get everything running.

EDIT2: I found out there's also [a second free course](https://learn.handlebarlabs.com/p/react-native-basics-build-a-currency-converter), which goes more into details and is kind of like a follow up to the first course.",1520255968.0
langbenj,I found Learning React Native by Bonnie Eisenman to be well written and very helpful when first starting. ,1520278759.0
Lybra91,"I recommend buying this course for start:
https://www.udemy.com/the-complete-react-native-and-redux-course/

- It doesn't cost that much
- you have it from now on
- you also support the creator
- it is updated
- you also get a ceritificate

From there you can go towards more advanced concepts.",1520253914.0
Noitidart2,"I was using the `<Button>` component that ships with React Native and needed some extra properties to get the various styles seen on the platform. So I created this module. Would love to hear feedback.

I have not yet done the ""loading"" form for iOS, I haven't found out how iOS does this yet, would be awesome if someone can share the ""loading"" button form design on iOS. I'm mainly an Android user.

",1520141056.0
stathisntonas,"You could give a shot at:
https://github.com/reggie3/react-native-webview-leaflet/blob/master/README.md

and try to implement a floor plan:
http://osiris-indoor.github.io/tutorial/2016/04/11/Using-Leaflet-to-draw-your-building-in-a-Smart-City-project.html

Google search “leaflet indoor” and there many ways to acheive it.",1520112439.0
Noitidart2,"Holy heck, that's a ridiculous assignment for an internship. That's a full time job! Super duper not an internship assignment - if you have no prior experience.",1520275784.0
sammypwns,"React native maps should work well for this. You can highlight the buildings by drawing semi transparent polygons on top them. To do that you need GPS coordinates for the corners of all the buildings. It's a little tedious to do this, but generating map data usually is.",1520118994.0
Dean177,Sounds like a CORS issue to me,1520091309.0
ikbenpinda,"Might any firewall be interfering?  
I've had no problems calling my server/docker container from the same machine, but using my app there would always be problems even when using the right ip-address.  
An easy fix was to connect my machine to my phone using a mobile hotspot(tethering the wi-fi), effectively bypassing the firewalls and security.",1520103350.0
fly_guy22,"I am no idea about .NET core API's but I can probably suggest a handful of things.

* What happens when you visit the endpoint from within your browser?

* Are you using localhost or your local IP address, or does Docker run off it's own local IP instance? (Sorry don't know alot about Docker!)

* Are you sending any headers with the request? (or is your API expecting any additional headers?)

* Does your local network have CORS?

* Are you using a simulator or a real device?",1520078285.0
derGropenfuhrer,"> React Native app is telling me the object returned from my Api is ""undefined"".

What's the status code? 

You're probably getting downvoted because this is more of a StackOverflow post than a /r/reactnative post. ",1520096561.0
alien3d,maybe you put localhost instead of local lan  IP.. localhost in android are localhost in android.. ,1520135813.0
fly_guy22,"I would downgrade your dependencies to something more stable - I'm using ""react"": ""16.2.0"" and ""react-native"": ""0.52.0"" and their fairly stable within my environment.

What are the errors in the debugger?


Also I have noticed there's a bunch of warnings(500+) when compiling from xcode. Most of them are just unused variables that I guess are not currently being used in the context of React.",1520089622.0
chrisbianca,"Stop passing your app instance into the .database() and .storage() calls.

They are expecting either no property, or a URL if you don’t want to use the database instance that is set up as part of the initializeApp call.",1520062408.0
mrPitPat,"Your ""databaseURL"" has to be wrong.",1520031411.0
Mingli91,I was going to suggest the second library. What part are you finding difficult?,1520028890.0
Dean177,"I'm surprised that this worked actually. 

If the orientation changes react thinks that the previous Camera has been `removed` and a new Camera has been added.

Try removing the 'key' prop and setting the style prop of the camera element like so:

`<Camera style={{ width: getWindowWidth(state), height: getWindowHeight(state) }} />`

Edit: Depending on how the `<Camera />` component works you might not even need the `<DimensionAware />`

Try:
`<Camera style={{ flex: 1 }} />`",1520032256.0
scttmthsn,"Are you confusing hot reload and live reload?

Live reload will reload entire app,  hot reload will reload the JavaScript bundle only.

",1520014098.0
Kravallen,"My team observed a behavior where hot reload for functional components would not work, could maybe be something to look into?",1520017509.0
Wandows98,no,1520296726.0
DueDueProcess,"There’s Input, Picker, and Switch that come with RN. React-Native-Elements has some nice enhancements.  ",1519992941.0
way2obvious,I've been pretty happy with https://github.com/gcanti/tcomb-form-native,1520020834.0
Dean177,"Forcing Dart on developers means this is just dead in the water.

Kotlin is miles better and already supported on Android, why wouldn't they use that instead! Its an easy migration for developers that know Swift and intellij can auto-convert your Android code.

This is so weird.",1520026360.0
kdesign,"I'm so sick of this marketing bullshit in the software development sphere. If it's so good, why is it using an existing and successful project to gain notoriety?

Just put your project out, see if people like it and they will use if it's good. It's that simple. No need to piggyback on other's success to make it happen. 

I don't understand why this post is in the React Native sub, it has nothing to do with it.",1520161915.0
Noitidart2,"* Don't like it. Reminds me of jQuery. Too much reliance on others to make components. RN is all about ""OEM is good"". RN libs that go stale, are easy to pick up and run with, because the docs from the native component apply. I think this is why we tend to see multiple contributors on single modules in the RN world. jQuery modules had just one, and if that guy left, it's gone.

* Flutters big point is better perf because ""react native talks over the bridge up to 60 times per second"". That ""60 times per second"" is if you do js driven animations, but no one does this, we all use `useNativeDriver`. ",1520012766.0
milkysniper,"There likely isn’t a package yet as not all android devices have support, and iOS device support is pretty limited

If you’re doing AR you’re likely going to be using native libraries :/",1519958404.0
funkyfourier,"Yeah, that's iOS only. You'll have to wait and see if support for this comes to Android also, but that is up to Google.",1519978439.0
dam00n,Viro just added support for image markers on ARCore/Android. So now you can use image markers cross platform. Read more about it here on our blog -> https://blog.viromedia.com/image-marker-recognition-arcore-android-augmented-reality-1855981f5165,1524243728.0
funkyfourier,"I have been trying this out, and it looks solid.",1519978038.0
stathisntonas,Why the app is available only on the US store?,1519992085.0
hatepoorpeople,Congrats,1519945903.0
ysfu,We are on [Product Hunt!](https://www.producthunt.com/posts/coinrate-ticker-and-alerts),1519979325.0
HomemadeBananas,Wut,1519937916.0
liquid_penguins,"The best way is to have a ref to the TextInput, or whichever component you need, then do this.textInput.focus() . That'll bring up the keyboard programmatically.",1519927007.0
fly_guy22,"Have you tried putting it in a separate function and then calling the function on the render of that component?

If you post a repo or some code it might be easier to help out.",1519947243.0
SolidR53,"This is absolutely terrible. What are they thinking??

Is this really the response after the heated JSX discussion... https://github.com/flutter/flutter/issues/11609

Flutter really is going backwards from React Native, they don't bring anything new to the table (other than Dart) and this guide seems to be more about introduction to Dart than how to do things in Flutter.

-	The JS demos are more complex than they have to be.
-	Show me how to translate a view using events from the Gesture wrapper.
-	Not wrapping Native UI API's is terrible and the answer they give for the reason why, is even worse.
-	How do I bridge my favorite iOS library to Flutter? Do they have any examples of community built packages?
",1519899476.0
chocomilkz,Their website works great on mobile,1519906891.0
LightmanXYY,"If you know native side, then fore sure it's better to go with it. Also you can pick one of npm module for a good start and add new features there.",1519903422.0
chrisbianca,"You should take a look at Firebase Analytics for events date. As well as the web interface, you’re able to export the data to Google BigQuery for advanced analytics and then onto other tools for further visualisation.

You can make use of the react-native-firebase library which has analytics support.",1519891766.0
matt_hammond,"2 ways i can think of. You could put the audio player component at the top level, next to the router. Than pass a render prop 'renderPlayer' to all your screens where you want to render it. This way it won't get destroyed when you switch screens. 

Maybe you can create a custom bottom tab bar navigator component that renders the player (if some state is set) and renders the original tab below it. ",1519862716.0
hatepoorpeople,"I think I literally asked the same question yesterday. http://reddit.com/r/reactnative/comments/80qghw/always_active_component/

I got it working today. If you think this is related, the hoc approach worked well for me. ",1519867715.0
fly_guy22,"Have you tried using https://github.com/react-community/react-native-maps ? The example there is fairly good. 

Are you using expo? 

Is it returning an error? If you go into detail why it's not working perhaps we could point you in the right direction.",1519856557.0
tejomayonline,thats cool,1533233997.0
suryakanoria,Please see if this Recycler List View works for you: https://github.com/Flipkart/recyclerlistview. Perhaps you can try initial render index support for your usecase.,1519838992.0
punchingrobots,"Really informative, thank you!",1519851050.0
ikbenpinda,"edit: oops, missed the offline thing, edited.  
I'm using free services instead of writing mocks myself.   
A few months ago, I started with the API by mocking it first-
Since I only recently started with react-native and need to write both back and frontend, there was no real spec in the beginning.   That was a bit of a hassle to get fully figured out, so meanwhile I ended up using the [JSONPlaceholder API](http://jsonplaceholder.typicode.com/) for this and it works like a charm.   

Even if the spec isn't fully there, often you still have to deal with users, some sort of posts or comments, or something you can use those for to substitute them with. 
There's also plenty of [other APIs](https://github.com/toddmotto/public-apis) to [use](https://randomuser.me/) so you don't always have to write it yourself [:')](http://foaas.com) .

Writing mocks internally is much better when i think of it, but new to javascript i found it kinda hard to get the promises to work.

While the backend changed quite a bit in structure on what got returned by the substitutes, in the end it still helped work out all the async REST stuff.

Also what helped was using [RestClient](https://www.npmjs.com/package/react-native-rest-client) instead of Fetch, as it is less boilerplate to write.",1519896197.0
sercand,"Development of React Native is really weird. It is open source project but Facebook develops it as closed source then opens some part of it. There is an internal React Native and github React Native. Also, github issues close after some time automatically and react native maintainers never bother to look for github issues I guess.",1519855135.0
fly_guy22,"What have you tried so far? You might need to be more specific, it's quite a broad question.",1519809564.0
fly_guy22,"Hey,

I don't use the database I use firestore but I'm sure it's the same. So I would think about your app as a completed app and work backwards. Also I wouldn't use spaces in the key for your database either, it just makes it slightly harder to manage objects.

So I would do something like this, starting off as exercise as a collection.

    [
        {
            id: auto_generated, 
            Exercise: ""name"", 
            ExerciseTitle: ""your title"", 
            someOtherProperty: ""some Property""
        },
        {
            id: auto_generated, 
            Exercise: ""name"", 
            ExerciseTitle: ""your title"", 
            someOtherProperty: ""some Property""
        }
]

Then do something like this:

    const collectionName = 'YOUR_COLLECTION_NAME'     
    const theCount = 5 // change this number
    const newArray = []
    firebase.firestore().collection(collectionName)
    .limit(theCount).get().then(function(querySnapshot) {
          querySnapshot.forEach(function(doc) {
          newArray.push(doc.data()) 
        })
    }",1519809425.0
icekeymon,`cd android && ./gradlew assembleRelease` then check `app/build/outputs/apk`. You then upload your apk to Google Play.,1519769973.0
fly_guy22,"Have you tried putting the component inside the parent of your app? 

Something like like this if it makes any sense:

<Provider>

<RootApp/>

<PodcastPlayer/>

</Provider>

You could also have an inactive element at the bottom of your parent tab and when the route changes that’s not equal to the current route it could activate with the current  time stamp?

Something like:
(PodcastPlaying == true) && (currentRoute !== previousRoute){ activateFooterPodcast() } etc

(Sorry in bed on my phone typing this)

If you get stuck pm an example repo?",1519772552.0
wkrause13,"Hey everyone, I finally shipped an app I've been tinkering with since RN 0.23.

On a related note, does anyone have advice on how best adjust the layout so it looks better on tablets? Like should I be setting height, width and padding properties based on a percentage of screen height and width? Or should I be detecting whether the user in on a tablet and defining different styles for that screen profile? Or is there some third way that I'm not seeing?",1519753951.0
stathisntonas,Can you share your package.json?,1519755645.0
etregoning,"Looks well made,  but I don't like how you have to pay 125 a month to get access to all of the features. 

Without the pro features,  I don't see what makes it any better than react.  I suppose I might try the pro trial,  but even if I like it,  I can't afford 125 a month heh. ",1519755039.0
AIDXN3,Fusetools is really nice for UI/UX. It uses JavaScript only for logic. I don't think it's even JavaScript Core(React Native). It's really nice for animation and quick prototyping but that's where it ends. React native is the way to go for building a full fledged app with JavaScript. It has better networking and components. Although navigation is a pain in the ass with React Native in my opinion. :),1519760858.0
jer_feedler,"Speaking about React Native, I’m impressed with the available features and the fact that it's easy-to-use..
You can use web development knowledge to create apps. Also there is a convenient debugging mechanism in the browser. Anyway, here are first impressions from its use https://www.itechart.com/blog/first-look-react-native-front-end-developers-perspective/",1519800105.0
kdesign,"Just curious, why in React Native and how’s that different from React?",1519766841.0
Drunken__Master,"here's an example button

    import React, { Component } from 'react';
    import { Text, TouchableOpacity, StyleSheet } from 'react-native';


    class Button extends Component {
      constructor(props) {
        super(props);
      }

    render() {
      const { buttonStyle, textStyle } = styles;
      return (
      <TouchableOpacity onPress={this.props.onPress} style={buttonStyle}>
        <Text style={textStyle}>{this.props.children}</Text>
      </TouchableOpacity>
        );
      }
    }

    const styles = StyleSheet.create({
      textStyle: {
        alignSelf: 'center',
        color: '#007aff',
        fontSize: 16,
        fontWeight: '600',
        paddingTop: 10,
        paddingBottom: 10
      },
      buttonStyle: {
       flex: 1,
        alignSelf: 'stretch',
        backgroundColor: '#fff',
        borderRadius: 5,
        borderWidth: 1,
        borderColor: '#007aff',
        marginLeft: 5,
        marginRight: 5
      }
    });

    export { Button };

To import the button you would have

    import { Button } from './filepath/toButton';

to use it, it would look something like

    renderAThing() {
      return (
       <View>
        <Button onPress={ probably.someHandler() }> Press Me ! </Button>
      </View> 
      );
    }
",1519687689.0
--Nathan,"Thanks, this brought up an issue I have had several times this morning.  

I enter this at the top:

        import { Text, TouchableOpacity, StyleSheet } from 'react-native';

And I get this when I CTRL-S:
Module not found: 

        Can't resolve 'react-native' in 'C:\Users\DB\Documents\Sites\Example\example\src'

Is that an npm install in the example folder (not big ""E"" Example folder)?
",1519746678.0
sidi09,"Hi reddit! I am one of the authors, would love to hear your feedback. Direct Github link to the project is - https://github.com/appbaseio/reactivesearch/. Contributions, issues, and love are all appreciated!",1519655683.0
maiam,"This looks dope, I'll to try this in a project I'm working on ",1519659159.0
kbcool,"An absolutely positioned view and settimeout to remove it. Throw in react native animatable to make it fade nicely.

Or if you're lazy there are some toast notification components out there which you can google for now you know what they are called.",1519615903.0
LEO_TROLLSTOY,Whats the benefit of this over standard way? ,1519625754.0
iampomo,"Just buy a Mac, no? How little do you value your time?",1519601985.0
stathisntonas,"https://nativebase.io
https://github.com/shoutem/ui
https://github.com/akveo/kittenTricks
https://github.com/xotahal/react-native-material-ui
https://alligator.io/react/react-native-ui-toolkit-roundup

Edit: found some more
https://avocode.com/nachos-ui
http://carbon-ui.com
https://github.com/callstack/react-native-ios-kit
https://github.com/futurice/pepperoni-app-kit
https://github.com/binggg/mrn
https://bbbundle.co (paid, not components but screen design)


Edit 2: just for reference to op findings:
https://github.com/react-native-training/react-native-elements
https://github.com/callstack/react-native-paper",1519575973.0
sidi09,"Just launched https://github.com/appbaseio/reactivesearch/ for React Native today. It's a React and React Native UI components library for use with an Elasticsearch backend.

I am one of the authors, feel free to AMA!",1519652957.0
beastinghunting,"I like the smooth UI. You did a great job man, congrats.",1519589007.0
yarism,"Built my first React Native app. Was an old ionic app but didn’t like the performance of ionic.

Really like React native and proud of the app even though it’s not perfect. Hope to get there after a few more releases. 

The app is a collaborative writing app. Kinda like /r/WritingPrompts where someone posts a first chapter and you write the next (and vote for how the story should progress).",1519567654.0
aforty,Congratulations! Shipping something is hard enough. ,1519568015.0
dialdn,"Looks fantastic! Very well done. 

Seems to be an odd UI issue. If I go to a story, then user then followers and then go back, I need to hit the “back” button twice. Seems the navigation element isn’t loaded when the page renders? Not sure if this delay is a bug.  ",1519609362.0
sharpless512,Looks good!,1519653583.0
gollyrancher,You may have issues with memory leaks cause by things like creating a new function for an event handler in a render function function instead of binding it or using ES class properties. Look up the best practices for optimizing React and RN. ,1519560543.0
dingle485,"You could also try react-native-navigation, which uses a native navigation implementation 

https://github.com/wix/react-native-navigation",1519564654.0
Mingli91,"I don’t use React Navigation, does it have an option to demount screens when they’re not in view?",1519544368.0
Mingli91,"If you have a primary platform to support do most of the development on that. Otherwise continuous testing on both platforms - it takes time and can be annoying, but it sure beats two apps.

Be sure to test on physical devices, I know typical startup culture (many small, frequent changes) can be prohibitive to thorough testing but simulators are no comparison to the real thing. If you don't test on real devices enough you'll hit a load of issues.

As for component libraries, they can be useful but my experience with Native Base wasn't ideal and we ended up removing it from our projects. 

Choose a router you're happy with, this will be critical. React Navigation is the ""official"" solution but is unfinished and you will find yourself scouring the code to figure out how it works since the API definition is just plain wrong in some places. React Native Router Flux is great, provides a clean API on top of React Navigation and patches up a lot of the issues with React Navigation, but performance could be better. React Native Navigation is also good, but I haven't used it extensively so can't say too much other than V2 is in development (and has been for ages), so V1 is falling by the wayside a little.

Other than that, you'll want to make sure you have all your bases covered:

* Research and decide on component patterns that suit your needs.
* Pick a state management solution appropriate for your app.

Edit: Hit submit too early ",1519524345.0
DoNotEverListenToMe,"Currently making the switch (taking courses on Udemy  and building out some simple apps to dig it in).

 Moving most my front end development to React and my app development to React Native. Been a real big Drupal/WP guy. 

I see most Drupal sites I make now being Headless with React.

 I’m not to sure on My WP sites could use opinions on it. Seems like overkill for simple sites.",1519519305.0
akiwarheit,"Curious as to what stack you're currently looking into - I also came from a heavy Android background. We're using Ignite (https://github.com/infinitered/ignite) and stuck with it.

For UI, our designers created a UI guideline so we created each element (buttons, pickers, carousel) into individual reusable components which works for both Android & iOS. Latest Ignite has Storybook (https://github.com/storybooks/storybook) so you'll know how the UI looks like while developing it (though I haven't used this yet, still stuck at a lower version of Ignite). We're pretty old testament at testing components; running the app on both iOS & Android emulators and seeing if it looks alright on top of jest snapshot tests.",1519767161.0
Noitidart2,"I've been listing for over 15min now, I got to the 19:09 mark just now, where does the gaming with RN come in please?",1519573702.0
Krizzu,"Hey BackZilla,

Nope, it works on both platforms. Wix's nav is not really stable with latest RN (0.53) AFAIK, but let's try anyway.

Did you try to add more than one tab? Could this be because tab is missing an icon? What about android logs (logcat)?",1519465406.0
,"If you take a look at the api spec for the package on the official documentation, you can see that the icon is required for tab based navigation. ",1519497161.0
notjonathanfrakes,Probably better suited for r/reactjs,1519475298.0
bbbundleco,"Update: 

- Redesigned website
- Live previews on main page
- 30% off launch promo",1519428849.0
dov69,¿Por qué?,1519395235.0
SolidR53,"Use onLongPress for 3D touch for now, I've yet to figure out the issue with onPressIn and rnn committing to incorrect screen.

Otherwise cool project. Would love to see mobx rather than redux. Also I like to don't pass navigator down to components but rather actions up, so that each screen will manage its own navigation state.",1519452346.0
Dimasdanz,"This looks really good. Sell it to me, why should I use this instead of NativeBase?",1519396566.0
Yxven,"How stable are the components that you have already? Do you expect them to change a lot, or are you focusing on new components?",1519416780.0
scttmthsn,Looking really good😜,1519387167.0
jamongkad,Oh I love this. Definitely using this for my next project!!,1519408915.0
ddzrt,"Looks fancy, gotta try it out. Thanks!",1519465905.0
AndyRoth,"Yes you can. I used the built-in ""react-native init"" command and followed this tutorial.

http://blog.novanet.no/easy-typescript-with-react-native/",1519377192.0
ikbenpinda,"I followed [this](https://github.com/TheaLanherne/TypeScript-React-Native-Starter/blob/102e2dd6887b16418f4643849c00330563cc06aa/README.md) guide and managed to get it set up, but i found it too much configuration to be of any real use, especially since it breaks hot/live-reload by default because ``tsc`` doesn't recompile automatically by default*.

Given this [issue](https://github.com/Microsoft/TypeScript-React-Native-Starter/issues/26) (and lack of response) i considered this deprecated and decided to move on.",1519388164.0
Drunken__Master,"I was using create-react-native-typescript-app, but I couldn't quiet get jest configured the way I wanted so now I'm using react-native-template-typescript-jest. If you're having any dependency conflicts, the first thing to try is using  react@16.0.0-alpha.12 instead of react 16.2.0 

after installing all of your dependencies it's usually a good idea to 
rebuild your dependency trees by removing and then reinstalling your node modules

    rm -rf node_modules 

    npm install",1519408149.0
anjoseb121,"You can try this https://github.com/mathieudutour/create-react-native-app-typescript 
I'm new with react native too. This tool create a new project with typescript without configuration",1519433338.0
SolidR53,"I just added TypeScript support to https://github.com/ueno-llc/react-native-starter

You can have both JS and TS in the same bundle.

Here is the commit if you want to use it as a guide https://github.com/ueno-llc/react-native-starter/commit/fe737d953bda886e6ac1bf51b3ff55885907cbd6

**edit** hot reload works, jest works and detox works.",1519452474.0
ghostpants53,It's even simpler: https://medium.com/@emin93/react-native-typescript-b965059109d3,1522501362.0
mrPitPat,"Well RN is just javascript, so you could use a javascript lib like [https://www.npmjs.com/package/striptags](https://www.npmjs.com/package/striptags) or you could do it yourself with [regular expressions and .replace](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace)",1519351411.0
boon4376,Regular expressions,1519352131.0
djxfade,"     const node = document.createElement('div');
     node.innerHTML = myString;
     const textContent = node.textContent",1519372127.0
csgonutty,Great post man,1519328407.0
desire_rawr,"AppNavigation link is broken , alongside , great course i wanna say.",1519426731.0
coolnat,"Don’t delete that file, follow these instructions: https://github.com/oblador/react-native-vector-icons/issues/626#issuecomment-362386341

At this point you may need to wipe and reinstall your node modules. 

This is a bug with the react native packager and should be fixed soon.",1519407649.0
Noitidart2,"I have this issue on Android I realized a couple days ago. The app starts up at home screen, however all my sagas and state in store is still there. I was hoping to restore it back on the screen it was on when it was minimized. Good question.",1519367288.0
Noitidart2,"Absolutely totally totally awesome. MacOS, Windows, and GTK support? Amazing initiative man.",1519291632.0
scttmthsn,"Looks fantastic and everything, BUT… that GPLv3 is going to be a deal breaker for a lot of people and that means losing traction before you've even started.

Personally I don't give a shit but it depends on what you're aiming for here.",1519387867.0
jamongkad,Wow this looks awesome! Saving this for later use. ,1519351753.0
hdsenevi,I know what my weekend project is going to be!!. Looks brilliant dude,1519355855.0
itslikeroar,"Sounds similar to [react-native-macos](https://github.com/ptmt/react-native-macos).

Is there a way to expose your own native components in JS (like react-native)?",1519358260.0
csgonutty,How does this differ from react-native-web?,1519327136.0
julius559,Does your app function on iPads? I've had issues where the design isn't optimized for iPad screens and it's been rejected. They should have supplied a screenshot of exactly what the issue was (if it was screen design related).,1519280533.0
kraffslol,Make sure your website is working on IPv6 if you're doing network requests in your app.,1519300773.0
Swedophone,"Maybe your app doesn't support DNS64/NAT64 networks.

https://developer.apple.com/library/content/documentation/NetworkingInternetWeb/Conceptual/NetworkingOverview/UnderstandingandPreparingfortheIPv6Transition/UnderstandingandPreparingfortheIPv6Transition.html",1519305491.0
yippiyeah,I have the same problem ,1519432526.0
alppawack,"hot reload while styling components, live reload when I play with states & app logic.",1519288700.0
excs,I use hot reload because i like to see it update immediately. It’s not very often that I want my app to completely reload on save.,1519284807.0
jaypap,https://stackoverflow.com/a/41429055/788004,1519239434.0
xZerKer,Both,1519244104.0
beeseegee,"If it works, then hot reload. It’s nice not having to navigate back to whatever screen. I’ve found the nav libraries don’t always quite work with it though.",1519253084.0
indreamc,"For iOS, in `AppDelegate.m` change

    jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@""index"" fallbackResource:nil];

to

    RCTBundleURLProvider *settings = [RCTBundleURLProvider sharedSettings];
    settings.enableDev = NO;
    jsCodeLocation = [settings jsBundleURLForBundleRoot:@""index"" fallbackResource:nil];

For Android, go to In-App Developer Menu -> Dev Settings -> disable JS Dev Mode",1519275934.0
Noitidart2,Yes there are a few modules out there - https://js.coach/?search=finger&collection=React+Native,1519231234.0
ubercore,Expo has fingerprint API support: https://docs.expo.io/versions/latest/sdk/fingerprint.html,1519245738.0
jordanstarrk,"What is the purpose for using biometric authentication in your app? Is it more for security or convenience?

I've been building biometric applications for 5 years now. OEM Biometrics is fine for simple B2C Applications that just need it for convenience on login. Just know that it is no more secure than your 4\-digit PIN, so from a security standpoint it is brutal. If I have your PIN I can login to your phone, enroll my biometric in the phone settings, and now have access to all your applications that use TouchID e.g. your banking app. 

One of the applications I am working on now is biometrics as a service via a secure SDK. You can access eye, face, voice, and behavioural biometrics that can be used for securing applications.",1526049233.0
TheSacredBroom,"Uses MaskedViewIOS component, so I guess this can be done just for iOS? No android alternative?",1519205247.0
EngVagabond,"Author of the post here. 

Yeah, it only works on iOS right now because we don’t have an implementation of MaskedView for Android. We’d love to see a pull request adding this functionality to Android!",1519232877.0
ramzez_uk,Nice one. ,1519213856.0
isakdev,"Great find! Thanks for sharing
",1519220640.0
maiam,This is awesome!! Would love to see something in Android as well! ,1519223498.0
incurious,"Start by adding a console.log in many of the render functions of your app. If a single dispatch is causing lots of unrelated re-renders, you know you need to start doing performance optimizations. This includes using PureComponents for list items, and using shouldComponentUpdate where it's needed. 

With regard to the specific case of a frequently updating progress bar... hard to day, but this might be one of those cases better served by a local component state.",1519195846.0
kbcool,"hmm thunk promises should alleviate this (non-blocking) but without seeing your code it's hard to tell what's happening.

You could just do away with updates and just have some sort of pulsating progress bar but it sounds like you want/need more than that.

Also: one thing to make sure of is that you're not checking state and then updating state based on the state - that causes massive performance issues. You're even potentially going into an infinite loop - do the logic in your render() function rather than saying if upload progress (stored in state) has changed then update something in state which is then rendered.",1519205790.0
too_much_exceptions,"I don’t see any design issues on having a ‘presentation’ local state on your progress bar component.

Redux helps you dealing with a ‘shared’ state. I think that it is kind of an overkill for your use case, if I understand your question.

Other pattern you may apply: infinite progress bar or a spinner. Displaying a gif when downloading could do it. That way no need to do refresh the Ui each n milliseconds ",1519200567.0
LongSleevedPants,"Ran into the same problem. Solved by dispatching the progress bar update every 10% of progress instead of every 1%. Limit the dispatches and you could fill in the intermediate space with random increments until your 10% benchmarks are met. 

Best of luck.",1519222103.0
IMoby,For a first app this is really nicely done. Congrats!,1519179349.0
Drunken__Master,Is this supposed to link to something more than an image ?,1519164534.0
,[deleted],1519163386.0
moufoo,"Short answer, yes. Airbnb, Walmart and Facebook use it for their app. I've been a RN developer for a little less than 3 years and there is high demand on the market for RN apps.",1519169154.0
chazmuzz,"I built a cross-platform RN app for a major bank, so yes :)",1519175303.0
ipgof,"Yes, Bloomberg uses it for their news app",1519158895.0
Swagabounga,I’ve been hired to do so 18 months ago. Totally viable ;),1519169257.0
,"Yes, it is pretty good. But expect to work on native code as well. NativeModules in React Native allow code written in Java or Swift to work well along side JavaScript code. Don’t rely on existing NPM packages alone. But roll up your sleeves and build your own native modules.",1519194872.0
engnr,Yes.,1519188925.0
Mingli91,Yep - eventually going to port all our native apps to RN and we’re the biggest publisher in the UK.,1519215648.0
contrarianism,"Yes, but bleed edge still applies.  

Heck any node app is bleeding edge IMO.  ",1519372823.0
lighthouse_at_eleven,Could anyone ELI5?,1519124655.0
marksymoo,"Enjoyed reading the post, thanks. A lot of resource links too, which was useful for me. ",1519190794.0
Noitidart2,"* Absolutely awesome article.
* I really like your insight on react-native for desktop applications.
* Definitely love the insight on UWP, I also did some work with it but stopped
* It would be nice to see more about how you built for the web using react-native-web (or was it straightforward out of the box/guide of react-native-web?).
* I also made a game in React Native, its more action based (uses sensors). I struggled with hit testing. Because its an async bridge.
  * https://play.google.com/store/apps/details?id=com.flythru
  * https://itunes.apple.com/us/app/flythru/id1247138870
* I also plan to keep using RN for game dev. I started another one - https://github.com/Noitidart/dangadv - its a puzzle based action game (like towers games with waves)",1519232217.0
Headpuncher,"There were about 5 places at least in that blog post where I thought ""ooh, write a post about that"", f or example ""I wrote a script that stripped unused glyphs from icon fonts, to reduce the app size.""  Probably not that hard, but the sort of thing *a lot* of other app developers could reuse. So many apps use only 2-10 icons/glyphs but include all ~70+.   

An interesting read.  ",1519211761.0
NikolaiStoilov,"The game is a very nice example of RN animations. The game plays good and fluid, though it did crash shortly after starting. The blog post is interesting and helpful. ",1519116085.0
theninjainblue,Interested in how you setup google play achievements in react native since expo hasn't got it working yet.,1519320864.0
matt_hammond,Of course. Just put the text and pics in the state and update the state when you want to switch the text,1519074334.0
ExtremelyQualified,"Make a single component and use it multiple times in your same screen. 

In the same way that you can use the Image component as much as you want. You can make your own component and use it as much as you want.",1519091126.0
osrs_zubes,Have you tried `onkeydown`?,1519034843.0
Tougun,"Have you tried using something like [validator](https://github.com/chriso/validator.js/) ?
Also have you tried using shouldComponentRender to prevent the extra render that happens in the split second?",1519071825.0
KeystoneWebStudios,"A lot of articles on React Native tout the extreme simplicity of RN and the ease in which Web Developers can transition. As a Web Developer who has made the transition, I disagree. For me at least, I spent a pretty significant amount of time understanding what RN was doing and how to write ES6 correctly. Don't get me wrong, I was able to fully understand and write working apps with RN much easier than truly native applications with JAVA and Swift, but there is still quite a bit to master with RN. One things for sure, it's worth the work... what an amazing language. ",1519054306.0
LouMM,all info can be found better written here : https://facebook.github.io/react-native/docs/tutorial.html,1519053795.0
matt_hammond,"I think Flutter is gonna shine in 2018. React Native is great, but the JS-to-native bridge can be a bottleneck. Having limited resources (being a mobile app) pushes you to write performace optimisations all around the app. Flutter, on the other hand, seems to be really fast. Also the code is very similar to RN so the transition should be easy. Only thing stopping me is the lack of libraries, but it's only a matter of time until I switch.
RN is the present of cross platform apps though. And it's pretty awesome! ",1519075444.0
andynator1000,"You can publish to expo's servers using the publish button in Expo XDE. It will generate a persistent url to your app that can be shared. For more information, you can view the Expo documentation about publishing [here](https://docs.expo.io/versions/latest/guides/publishing.html).",1519020322.0
localhost8100,Don't go the create-react-native-app way. Try creating app by react-native init AwesomeApp command. That should work. The create react native app command never worked for me. ,1519007684.0
IIIMurdoc,"Try installing base react native again.

Npm install react-native 


I had this issue a few times where after installing new packages it would 'forgrt' about react native. Still haven't diagnosed issue, but the fix works
",1518969841.0
ExtremelyQualified,"Stops working after you 
`npm install foo -save`
?

Do
`npm install`
Again",1519013815.0
hatepoorpeople,What version of npm are you using npm -v,1519071687.0
Noitidart2,Run `npm i` again then it will work (do react-native run-android or ios),1519111986.0
orebright,"React works best in a functional structure. I'd recommend [thinking in react](https://reactjs.org/docs/thinking-in-react.html).

As for your specific example, you should keep state as high up the tree as it's relevant. So the state should be kept in component two if it's relevant there and passed down as a prop. Whatever triggers the state change in component one should call an update method passed as a prop.

    class ComponentTwo extends Component {
      state = {
        selected: 'value',
      }
      onSelect = selected => this.setState({ selected })
      render() {
        return <ComponentOne selected={this.state.selected} onSelect={this.onSelect} />
      }
    }

    class ComponentOne extends Component {
      render() {
        return <UIthatSelects selected={this.props.selected} onSelect={this.props.onSelect} />
      }
    }",1518927617.0
100kV,"I’m on mobile right now, but one way you could do is pass a handler function to Component2. This handler function gets called with the new value whenever the selected value is changed. Another way is to save a reference of Component2 in Component1 and call getValue. ",1518903750.0
AcidShAwk,"I like events. They make things less dependent.  However using refs is quite easy.

    class ComponentTwo extends Component {
        onSomeEvent() {
            const compOneValue = this.refs['compone'].getValue();
        }

        render() {
           return (<ComponentOne ref=""compone"" />)
        }
    }

or

    class ComponentTwo extends Component {
        _compone

        onSomeEvent() {
            const compOneValue = this._compone.getValue();
        }

        render() {
           return (<ComponentOne ref={c => this._compone = c} />)
        }
    }",1518914984.0
g00dgame,"Just try to implement Redux. Believe me. The further you get, the more work you will have with implement it later on. That really is the typical thing where you want ans need redux.",1518893953.0
RockMeetHardPlaces,"This is one of the many situations where you're going to need some global state persistence.  In most languages/frameworks you'd have some sort of singleton or data store (db) to store that data in.  React hates you and everyone else who wants to do something globally.  (seriously, I can't get over how this isn't just part of the base framework)

So, you're going to have to set up a single store somewhere in your app and send messages to update and persist from that store.  You could roll your own or use Redux.  The reason why Redux is the way to go is because it assists in the figuring out what components need to be updated when the global store is updated.

I hate Redux so I usually roll my own Flux implementation which is to say I keep my ""global"" store in the root object of my app.  Then, I send messages to and from that object with dispatchers.  I'm told by .js people that I ""do it wrong"" because it's not Redux, but I hate Redux.  That said, you probably want to use Redux.",1518913281.0
kbcool,"What you suggested is certainly one way of doing it and in the end becomes similar to redux but with more hassles.

How are you managing data persistence between app sessions today? I would imagine it's going to be a pain without a global store.

Apart from the most simple of apps you always end up using redux or something similar. I gave up the fight early on my first app thank goodness.",1518988696.0
mmilenko,"It's ironic how one can hold utmost respect for Facebook's libraries, but be vehemently against the actual Facebook web application and their business practices.
",1518885187.0
inform880,Ohh pretty,1518852859.0
the_meme_grinch,You should look up metaballs,1518811039.0
kdesign,I think your best bet is [Lottie](https://github.com/airbnb/lottie-react-native).,1518806146.0
nelf86,"Are you thinking android, iOS or both?",1518806116.0
coolnat,"Maybe using the SMS url protocol will work?

https://weblog.west-wind.com/posts/2013/Oct/09/Prefilling-an-SMS-on-Mobile-Devices-with-the-sms-Uri-Scheme

Of course, this switches the user to their SMS app.",1518811020.0
,You could use Modal in React Native. Take the text from the Modal and use an API to send the text. SMS API like Twilio and Nexmo allow doing just that.,1518853478.0
Noitidart2,Try this one - https://github.com/joonhocho/react-native-message-compose,1519112148.0
alecsu88,Hi TheChooster! Did you manange to find any libraries?,1524144083.0
boomdoodle,It looks like it is working as it should. If you set the applicable under the content is rendered under the elements. Your navbar however does not appear to be transparent. ,1518771138.0
epic_awesome,"This issue is because the library you are using still refers to the React proptypes but these have been deprecated and removed in later versions of React and replaced with an external 'prop-types' module. To fix the issue you need to:

A. Find a fork of this project that has been updated to use the new 'prop-types' module 

or

B. Fork the current project, edit the ViewTransformer.js code to import and refer to the 'prop-types' module rather than the built in (now, non-existent) React prop types and update your project's package.json to refer to your forked repo.

I do option b) all the time when a library I want to use is broken or weird in some way. You can get yarn/npm to refer directly to a git repo so I usually just fork a project, edit and commit to the fork and then add the fork url to my package.json (and delete the local copy in node_modules and then yarn upgrade 'package').

It seems like a lot of steps and annoying but once you have done it a couple of times it's pretty easy. 

I also enable watching on the original repo so I know if the author ever updates it and fixes the original problem.",1518753481.0
Mingli91,Did you restart the packager after you installed prop-types?,1518752522.0
mrezende10,"fork it, change the import, clear cache and delete node_modules, install your fork.",1518765210.0
derGropenfuhrer,"Well the first thing to do with performance is figure out _where_ your bottlenecks lie. Things like New Relic etc. are good for real analysis of this. 

Barring that (cost) any javascript/performance optimization blog post should help. ",1518743355.0
LEO_TROLLSTOY,""" as lean as possible"". Why? Do you have a specific bottleneck or speed problem you need to solve?  This "" as lean as possible"" seems like a great way to waste time solving problems that don't exist",1518787230.0
icekeymon,"I spent a little bit of time doing some performance tweaks to React Native (I presume this question is about RN and not JS in general)

- Write a smart `shouldComponentUpdate()` for class-based Components. Only update your components when you really need to. I did a simple check to see if current props and next props were different OR current state and next state were different. If so, return true (e.g. call render()). I inherited app code and this sped up the app dramatically.

- Use reselect from the guys at React (https://github.com/reactjs/reselect), it's a mechanism called memoisation. To put it in simple terms, if you have a func that performs math `const add = (a, b) => a + b`, if you run `add(5, 10)` it'll do computation and return 15. If you call the func again with the same args, it'll used a cached value. Imagine, your reducers do more computation than the `add` function, you'll see speedy responses.

- Always put animations on the native driver, a simple prop `useNativeDriver: true`. You can read more - https://facebook.github.io/react-native/blog/2017/02/14/using-native-driver-for-animated.html

- (Not sure if it counts, but it may help) Integrate ESLint, see what is not being used in files and remove it. Decrease bundle size. This may be small savings but anythings better than nothing.

- Dont use index as keys - https://medium.com/@robinpokorny/index-as-a-key-is-an-anti-pattern-e0349aece318",1518779598.0
magnakai,"Measure things! Otherwise you’ll waste your time introducing bugs with silly “fixes” like:
>	simple things like defining a 'const' is slower than var

Obviously you don’t want to write a slow app, but are there actually any performance issues in your testing? If so, pinpoint those areas and analyse them. If not, and you’re just looking for general efficient JS tips, there are loads of those across the web.

One thing that I don’t often see mentioned is unchaining sets of array functions like `map` or `filter`, as these multiple loops can often be replaced with a single `reduce` call.

Again, make sure you’re measuring it. The drop in readability is rarely reflected in a tangible boost to performance    ",1518752903.0
NikolaiStoilov,A great book on that topic is [You Don't Know JS: Async & Performance](https://github.com/getify/You-Dont-Know-JS/blob/master/async%20%26%20performance/README.md),1518773563.0
coolnat,"Doesn’t react already do a shallow compare for shouldComponentUpdate? Or have I just been assuming the wrong thing all this time?

EDIT: oops, meant to reply to /u/icekeymon",1518851398.0
,[deleted],1518887817.0
_wilm,"UPDATE: I was able to get around this issue by disabling the wix drawer's gesture handling, and now I'm just managing the gesture event myself and manually toggling the drawer when I need to. It was a pain though, DAMNNNN YOUUUU WIIIIXXXX

--------------------------------------------------------------------------------------

You can see my console log under the phone emulator, it's logging the dX value from the panResponder's gesture. Here's the relevant code... wtf am I missing here, this seems like it should be straightforward but it's giving me an aneurysm. :-)

Edit: I realized that it may not be clear exactly what the issue is from the video - essentially what is happening is `onPanResponderMove` only seems to be working for a second before hanging. If I press and move my cursor very quickly, I can sometimes move it further, but a normal press & drag will only go about 10 pixels in either direction before hanging.

Component:

    <View {...this.gesture.panHandlers} style={DashStyle.tabbedWrapper}>
        <View style={DashStyle.tabBar} onLayout={() => this.setTabOpacity()}>
          { this.makeTabBar(this.props.children) }
        </View>
        <Animated.View style={[containerStyles, this.animation.getLayout()]}>
          { this.props.children }
        </Animated.View>
    </View>

Handling:

    constructor(props){
      super(props);
      this.state = {
        activeTab: 0,
        tabCount: 0
      }
      this.tabs = {};
      this.animation = new Animated.ValueXY();
      this.gesture = PanResponder.create({
        onStartShouldSetPanResponder: () => true,
        onPanResponderMove: (e, gesture) => { 
          console.log(gesture.dx);
          this.animation.setValue({ x: gesture.dx });
         },
        onPanResponderRelease: () => {}
      });
    };
",1518724019.0
TheSacredBroom,How is the top graphics made? Just an image?,1518731812.0
chmpgne,"This is a complete shot in the dark, but it might be worth trying the PanResponder from React-Native-gesture-handler; it runs completely on the main thread, and doesn’t use the JS responder system that the PanResponder bundled with React Native uses ",1518731833.0
stathisntonas,"From an ealrier reply in a similar topic:

>Also, `setState` is asynchronous, so setting the value and then immediately checking it could lead to bugs. Anything you want to call after `setState` can be done by passing a callback as a second argument:

    this.setState({ key: 'value' }, () => { console.log('Do something') })

Credit goes to u/Mingli91",1518726823.0
deadcoder0904,There is a tutorial somewhere on [Rational App Dev](https://rationalappdev.com/) & [Infinite Red's Tutorial](https://shift.infinite.red/react-navigation-drawer-tutorial-a802fc3ee6dc),1518714422.0
secretL,"I'm using react-navigation, its been a pain in the ass to figure out but works great. They just released v1 and re did their docs so I think it's much easier now",1518942891.0
gtlose,The erorr messages when something is broken in your render method - basically useless. Same for any issue with includes.,1518718742.0
hicksyfern,"Off the top of my head, for starters:
* ecosystem is a bit Wild West. Full of crappy, half-broken-on-version-X, oops-sorry-we-broke-the-api-in-a-patch type modules.
* the way it works is similar enough but not the same as the web so it’s not completely natural to work in both
* android and iOS  behave differently in subtle ways, like keyboard handling
* test automation doesn’t feel like a solved problem in the way headless browsers/selenium make it on the web
* android emulators are garbage

Overall though, it’s pretty damn good. Coming from a job where we were deploying an HTML hybrid app, the feel you get from a native app is like night and day.",1518717348.0
yhjohn,"No native navigation support which in any app, navigation is probably essential. Sure you can use any navigation library/components out there, but it still feels very much like still in its infancy stage.  ",1518750615.0
mbrochh,"Get prepared to ""rm -rf node_modules && yarn install"" when weird shit just starts happening out of nowhere. Might as well turn this into a terminal alias ;)",1518759072.0
magnakai,"Even the most “official” navigation library, React Navigation, is not totally stable or that well documented.

There may seem to be a handy module to do exactly what you want, but be careful about relying on one which has Obj-C/Java code unless you’re happy to fix whatever bugs pop up when the author abandons it. If you have any native coders on staff, they’ll be very handy.

You’ll want to keep RN up-to-date to receive bug fixes and new features. If you miss an update, it’s advisable to update by individual versions, while testing thoroughly.

In testing terms - unit testing is pretty straightforward thanks to it just being JS and coming with Jest, but we had trouble with E2E testing with Detox, and eventually gave up on it. It may have improved in the interim though.

Edit: 

Forgot one: we had some issues with performance on mid/low-powered Android phones. Some of it could be solved through clever paging, but we had a big issue with a high-res image gallery being janky. 

That all said, we really enjoyed using RN and would definitely do so again.",1518768872.0
no_spoon,Upgrading ,1518750012.0
dduko,"oh man the  amount of time i've spend on github issues because of react native and rn libraries. 

i've done php/django (some android/ios) and most of the  issues i had were my shortcomings in programming, so it's stackoverflw most of the time (questions like: how do i do this, i forgot how to do that, what is the better way to do this, etc). not with RN! all my issues where: bugs in core RN, bugs in third-party libraries, non-existing or wrong documentation, tools that are unreliable (ex: watchman, remote debugger), bugs in npm/yarn, bugs bugs bugs.. :(",1518750564.0
mbrochh,"Use getsentry for error logging.

Consider using ant.design for your UI.

Use glamorous to style your own components.

Use react-navigation for navigation.

Use Apollo & GraphQL for data fetching.

Hard code this build's version into your app, return the min supported version as a response header in every response from your API server. Build a HOC that checks for every response (via Apollo middleware) if the min supported server version is bigger than this build's version, if yes, force the user to download the latest app from the app store.

Get prepared for gracefully handling network outage. Build a HOC that shows a red bar at the top when any Apollo request returned with a network error or times out (via Apollo ErrorLink middleware). Allow the user to tap the bar which triggers a store.reset and tries to re-fetch the data for all mounted components.

Got a multilingual app? Figure out how to deal with that! You don't want to get through your entire codebase again and add gettext() calls everywhere after your app has been built.

Once you have this shit in place, start building your actual app :)",1518759509.0
BuggerinoKripperino,"Theres quite a steep learning curve in my view, less so if you are familiar with React but the error messages are so unhelpful you basically need to translate then to something that makes sense. If you have a lot of native  modules then upgrading can be a  huge pain too (I've never found it toooooo bad annecdotally)

P.S. [Take a look at this for AR. It may help :)](https://viromedia.com/)",1518724975.0
alien3d,"The normal workday

Android
1. Reactotron
2. android studio
3. vscode
4. terminal is a must .. 
5. High speed internet 

Compare to other language, the requirement is nasty  and in the end  you need to knew a little basic of  xcode and it's objective c and also  android studio with java. If you dream to build something exactly like discorpapp or facebook app it short time..Design will be super quick compare native but the implementation of code it will be super nasty and buggy.. ",1518834257.0
localhost8100,"I have gone though kind of similar situation. I joined a company which had the whole app on ionic 1. While app was laggy, no performance improvement and angular just abandoned the framework without any improvement and moved on to ionic 2 which had huge changes to it. 

Our Company was deciding between react native or some other hybrid framework. Company shut down. I moved on to another company who were working in react native app. I was excited as it was hot skill to have in your resume. Lack of api as compared to native app depending on what you are building. Most of the time if you want to add some feature, you are looking for some third party RN packages to get some simple feature to be implemented in your app and the owner gonna depreciate the package in the near future because he can't handle it anymore. In My second company after building the whole app in RN, we are rebuilding it in native for Android as well as ios. The performance for native and RN is also huge difference. 

TL:DR; worked for 2 companies, Both wasted a year worth of money and tried/trying to moving back to native app. ",1519035390.0
akiwarheit,... getting execs to understand how important it is to upgrade RN versions.,1519347712.0
icekeymon,If the apps are exactly the same with the same functionality. Apple may reject your second upload. You can read more here https://developer.apple.com/app-store/review/rejections/ (section titled Repeated Submission of Similar Apps). I would opt for Option #1.,1518705092.0
cloudprogrammer,"I created a similar concept for a client. You can have the login and whatever be the same and check for account type whether it's admin or normal, depending on that you can navigate to a router with screens for the specific user type. ",1518706079.0
anonymousmouse2,"Single codebase. Don’t create separate apps. Use roles and permissions from Firebase. If you’re using redux, you can keep track of the user’s role in the store and then show or hide certain comment based on that role. ",1518714846.0
jackat96,"Hi the map has a method fitToCoordinates in which you can pass in an array of your points, it also takes an options parameter so you can specify padding",1519079794.0
Nyquiiist,I love your content man. Thank you for sharing!,1518717606.0
unplugged_chump,Really appreciate your content mate! Thanks!,1519558695.0
kibag,If you're on iOS I believe that sharing is a separate framework that needs to be imported to XCode. Also check the docs to make sure canShow isn't deprecated.,1518667828.0
srg666,"You are not calling `onWorkoutSelected*` (note I fixed the grammar). 

You need to pass `onClick={this.onWorkoutSelected.bind(this)}` to your `WorkoutSelectionRow` and then call it somewhere. Maybe inside of  `onTextPress`.",1518649548.0
arcad_iaego,"On my phone, but it looks like you could add a property to each row with the name of the react-navigation screen. For example [{... screen: “MyScreen1”, ...}, {... screen:”MyScreen2” ...}]. Then you can pass this as a prop to your UI component for the row. Finally call this.props.navigation.navigate(this.props.screen) from that component. ",1518640738.0
Mingli91,"You should avoid mutating props. Trying to get components to communicate through props and state means you're making things harder than necessary for yourself too.

You want to pass through an `onPress` prop to the components inside the FlatList. Your component should be handling as little data as possible, in this case it only needs to know that it should call a function when pressed. It doesn't even need to know what it's doing when pressed.

Also, `setState` is asynchronous, so setting the value and then immediately checking it could lead to bugs. Anything you want to call after `setState` can be done by passing a callback as a second argument:

    this.setState({ key: 'value' }, () => { console.log('Do something') })",1518650555.0
coolnat,"I’m afraid this is going to be incredibly simple for you.

Facebook provides an endpoint that redirects to the user’s current profile picture that doesn’t require authentication. It offers size options as well. All you need to know is their user ID.

https://developers.facebook.com/docs/graph-api/reference/user/picture/",1518598600.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/firebase] [\[Question\] Best practice for copying image from URL (Facebook) to cloud (Firebase Storage)](https://www.reddit.com/r/Firebase/comments/7xej43/question_best_practice_for_copying_image_from_url/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1518572651.0
ineedlesssleep,"Running into the same thing. I can retrieve the users photo with user.photoURL, but this can only be called on the logged in user and not on others obviously.

I do your first option, and let the user continue on after it’s successfully uploaded. This gives a little extra loading time but ensures that the experience is the same once they’re in the app as opposed to if they signed up via email.",1518576593.0
chrisbianca,"I’d go with a variant on option B:

- on linking to Facebook, save the URL in the database alongside the rest of the information you save as part of the linking process
- have a cloud function listen for this data creation and trigger the download/save process. 
- on complete of the function, either overwrite the image location or save elsewhere depending on how you want to do it

This removes the need for a specific HTTP request and encapsulates more of the logic in the “backend” function. This in turn means that if you wanted to do this on another platform, e.g. the web, you wouldn’t need to replicate this in the client side logic.",1518596092.0
Battelman2,"Unfortunately the Graph API only lets you see (and therefore interact with) Facebook friends that already have your app. This makes it impossible to share with Facebook friends that don't use your app yet. This is a recent restriction Facebook imposed due to some apps abusing the feature.

Int eras of inviting friends to you app, I'd suggest looking at Branch. We use it in our app to enable virality and it's actually a pretty strong tool once you learn how to take advantage of it.

[This is their referral feature](https://branch.io/referral/) but there is a lot more to Branch than just that.",1518572958.0
doubleok,Is it not the same?,1518564872.0
Taschco,"Like you said, Expo doesn't support live streaming, so if you want to use unsupported libraries you're going to have to [eject from expo](https://github.com/react-community/create-react-native-app/blob/master/react-native-scripts/template/README.md#ejecting-from-create-react-native-app).

Of course, doing this you won't be able to use expo's features for publishing/testing on your phone and will instead have to go through the process of building the app before you can test it on your phone",1518554851.0
incurious,"I work with clients through Toptal, and they are not wrong. Never a shortage of solid clients.",1518544681.0
noonewouldknowme,"How are you able to do your initial setup for the monorepo. As far as I understand, react\-native doesn't work well with lerna and links. Can you share a bit more info here? ",1525569983.0
doubleok,"If anyone is interested I was able to achieve this by adding a rn-cli.config.js file to the root of my monorepo with the following content:

const metroBundler = require('metro-bundler');

module.exports = {
  getBlacklistRE: function() {
    return metroBundler.createBlacklist([/NAME_OF_FOLDER_TO_EXCLUDE\/.*/]);
  }
};

When I switch from project to project I can just update the excluded folder and I am good to go. Two different versions of React-Native in the same monorepo.",1518568628.0
IMoby,Very interesting solution. Saving this for future. Thanks!,1518914465.0
Mingli91,Have you tried Passport? It’s really good for handling all sorts of auth methods,1518518165.0
Moulie415,Yeh I use firebase in combination with react-native-fbsdk and https://github.com/devfd/react-native-google-signin and it works well,1518521040.0
csgonutty,"What's on your store page?

Couldn't you have just 4 pages total? Intro page, home, store list page and then a store detail page.

Just make the store detail page dynamic if your store pages are similar

So hook your store list page up to redux along with your store detail and then pass your state as props to the detail page ",1518478742.0
skiplecariboo,"Here is the doc: https://reactnavigation.org/docs/navigation-actions.html

Resetting without animation is a hot topic and cannot be done easily out of the box ..

https://github.com/react-navigation/react-navigation/issues/1865
https://github.com/react-navigation/react-navigation/issues/1493",1518506521.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/reactjs] [React-Navigation NavigationActions](https://www.reddit.com/r/reactjs/comments/7x55l7/reactnavigation_navigationactions/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1518479304.0
stathisntonas,"My guess this is not being bridged to RN because:

>Apple has implemented a few restrictions along with SiriKit release, that’s the doors of Siri is opened only for those apps which belong to one of the six domains- audio or video calling, messaging, payments, searching photos, workouts, and ride booking. 


So dont expect someone to bridge it 😔",1518466272.0
milkysniper,"Honestly I’d try building a prototype in RN, spending your time evaluating existing libraries for bridges. I’d look at it like this: RN to build and maintain the interface, bridges and native to handle the heavy lifting.

Good luck!",1518457348.0
HS_Joe,"I just found this article https://applikeysolutions.com/blog/technology-stack-for-building-a-live-video-streaming-app
It does not really cover the topic of react native vs swift, but it might be quite helpfull",1518457861.0
wengemurphy,">Potential payout: $0

About what I expected.

So where does the ""$$$$"" come in? That's not even a single ""$"" let alone ""$$$$""",1518486600.0
sdavignon,"Where do you see a payout? I finished this on my own, next is kittiebot. ",1520029969.0
derGropenfuhrer,Maybe you'll be more likely to get an answer in /r/javascript. Posting in /r/reactnative and saying you don't want to use react-native doesn't seem very productive. ,1518446194.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/javascript] [Looking for a cross-platform JavaScript bridging library (not RN)](https://www.reddit.com/r/javascript/comments/7x2g9k/looking_for_a_crossplatform_javascript_bridging/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1518457400.0
kbcool,"You need to do some more reading before dismissing react native. 

Its possible to write parts of your code in react native and use the bridge to get your data back to native.

Nothing says you have to use the UI components. 

Not that I have checked it out but doesn't the latest java version let you run JavaScript natively ? 

I would suggest googling for integrating react native into existing app. A lot of tutorials and examples exist.",1518499855.0
Cosmosof,"
Firebase.auth().CurrentUser has emailVerified property But You can  not attach a listener to Firebase Auth, I don’t think this possible. ",1518411392.0
fxnick1,"firebase.auth().currentUser.emailVerified returns a boolean value as to whether they've already verified said email. 
Conversely, to send the email you'd write firebase.auth().currentUser.sendVerificationEmail() which will return a promise. I'm an app I'm working on currently, I check if a user is verified upon login, then send the email or not. ",1518503705.0
icekeymon,"You might benefit from reading https://facebook.github.io/react-native/docs/images.html

tl;dr - Export your images with @1x, @2x and @3x suffixes and React Native will pick the appropriate image.

icon@1x.png
icon@2x.png
icon@3x.png

When you require your 'icon', leave off the @1x suffix.

You should also read about PixelRatio https://facebook.github.io/react-native/docs/pixelratio.html",1518433033.0
chiamaka_sil,"Tried the SafeAreaView API from react-native? Check this out 

https://medium.com/react-native-training/react-native-iphonex-92ff511282af?source=linkShare-f7a50c216461-1518388020",1518388038.0
wcandillon,"If you are working within a <Modal> component (in the case of an ActionSheet for instance), <SafeAreaView> from RN won’t work but the implementation from react-navigation will.

I described this handy tip in the video below: https://youtu.be/1Ol0N71b21c?t=15m4s",1518543162.0
phil14052,"If you want to use the notch for some fun, then I would recommend this: https://github.com/AFathi/NotchToolkit
This is currently only swift code. But there is probably something like this that is coded using react.",1518877195.0
liquid_penguins,Why do you need a local mongodb in your app? Why not use the local storage option for React Native: https://facebook.github.io/react-native/docs/asyncstorage.html ?,1518369793.0
boon4376,"I don't have any rec's for offline MongoDB storage, but Firebase Cloud Firestore's Android and iOS implementation supports offline data.

>With offline persistence enabled, the Cloud Firestore client library automatically manages online and offline data access and synchronizes local data when the device is back online.

If you ever want to update your content / data without having to update the app itself, this would be a great way to have your app work offline, and get fresh content when online. 
https://firebase.google.com/docs/firestore/manage-data/enable-offline",1518373190.0
Prophet_60091,would indexedDB fit the bill?,1518374660.0
-Alias-,Have you tried this yourself? Maybe if you give some code we can help from there.,1518534836.0
EngVagabond,"I’m on the React Native team at Facebook. 

This is a hard problem. The project is so large, that most of the contributors from Facebook don’t look at the github issue tracker. They fix issues we are running into internally, and then those commits get synced out. This means that frequently we fix things there are issues for, but we can’t expect the committee to go track them all down and close them.

In practice this means that we have issues coming in, but we never close them when they are fixed, causing them to pile up. So we decided that the best thing we could do is mark them as stale and close old issues that nobody has commented on in a while. If we mistakenly closed something that is still an issue, the community will let us know and we can reopen it.

Our goal isn’t to play tricks or manipulate anyone with fake numbers of open issues and PRs, our goal is to find a way that lets us balance trade offs around time spent maintaining the github project.

Hopefully the message the bot uses when closing stale issues gets this point across correctly. If not, please let us know how we can improve the message and experience.",1518367992.0
com2kid,"RN is a large project, and the dev team needs to prioritize somehow. If an issue doesn't bother very many people, well.... 

FWIW RN is a project that exists for Facebook's use. They open sourced it so others can benefit, and they get some contributions thrown in, but their devs are going to prioritize issues that impact them the most.

",1518326947.0
rco8786,"> What is going on?


> We're cutting down on the number of outstanding issues, in order to allow us to focus.

...",1518370662.0
Cracky6711,"UPDATE: For anyone who stumbles upon this, I've found the perfect solution for my use case. I can use yarn workspaces to consume local libraries between react and react-native apps!

Amazing tutorial on it here:

https://medium.com/viewsdx/how-to-use-yarn-workspaces-with-create-react-app-and-create-react-native-app-expo-to-share-common-ea27bc4bad62",1518379616.0
collegekid5,"Getting this error.. love the idea 

$ git clone git@github.com:ueno-llc/react-native-starter.git my-new-app
Cloning into 'my-new-app'...
Warning: Permanently added the RSA host key for IP address '192.30.253.113' to the list of known hosts.
git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.",1518712124.0
joebro123,"Bought this, two of the books ""React and React Native"" and ""Mastering React Native"" appear to be pretty similar, with the latter focusing less on React. I've started reading the first as my introductory book.",1518311598.0
jasdeep13,Awesome 👏🏻,1518276595.0
bcit-cst,Looks great. Will check it out.,1518378119.0
joebro123,What were the most useful resources for you used as you were learning react native?,1518311438.0
AlienSoldier,really cool! What is u’r experience with JS and coding in general? (just to understand how long it takes to get to a level of releasing a product. ),1518263465.0
cheese_wizard,"It should be this.setState({...}), not this.setState = {...}  
  
Instead of calling the setState function, you instead overwrote that function to be some goofy object :)",1518217530.0
twisterkid34,Looks like it only picked up some of the formatting. I can reformat in the comments here if anybody needs that. ,1518217043.0
Mingli91,"    <ScrollView style={{ flex: 1 }} contentContainerStyle{{ height: 100, width: 300 }}>",1518222787.0
Cessabits,I am disgustingly lazy. Can you put up some links to it? ,1518221589.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/amaaggregator] [Just release My first React Native App 🎉 It's Greeting Card Capture: an app to Digitally save greeting cards. AMA!](https://www.reddit.com/r/AMAAggregator/comments/7wgoa5/just_release_my_first_react_native_app_its/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1518211003.0
boon4376,Where does it save them to?,1518223451.0
qwert173qwert,What navigation did you use?,1518226488.0
disconaps,Having trouble imagining what this is - do you mean photographing a real greeting card? If so is there any clean up/ processing done to the images?,1518226495.0
aforty,"And here’s why you shouldn’t ever use that pattern, aside from it being a sight for sore eyes:

https://medium.com/dailyjs/demystifying-memory-usage-using-es6-react-classes-d9d904bc4557",1518239438.0
gianpaj,nice! are you going to publish it on the Play Store?,1518282978.0
LEO_TROLLSTOY,"Yes, react native does support websockets",1518186005.0
maxiu86,I use long polling instead of ws,1518283183.0
demoran,"Try initializing state with `favs` as an empty array.  And if you don't have favs saved when fetching from storage, return an empty array.",1518192878.0
Daveyjonezz,"I recently watched some of your videos on React Navigation to help with a project of my own, your youtube channel is a goldmine of information. Thanks and keep it up!",1518217179.0
ninja_bhajiya,Pretty awesome. Short and sweet tutorial. Do you have any more?,1518169042.0
therealslimbatman,"Clear and concise. Awesome stuff.
Subbed! Keep more tutorials coming!",1518191666.0
tech-recruiter,"great tutorial /u/nathvarun , and thanks for sharing it!  the only problem i'm having is when i scroll up or down from camera, i can still swipe left and right (from search and memories).  here are my package.json and App.js files for reference, thanks:

    {
      ""main"": ""node_modules/expo/AppEntry.js"",
      ""private"": true,
      ""dependencies"": {
        ""expo"": ""^25.0.0"",
        ""native-base"": ""^2.3.8"",
        ""react"": ""16.2.0"",
        ""react-native"": ""https://github.com/expo/react-native/archive/sdk-25.0.0.tar.gz"",
        ""react-native-swiper"": ""^1.5.13""
      }
    }    

    import React from 'react';
    import { StyleSheet, Text, View } from 'react-native';
    
    import { Container, Content } from 'native-base'
    import Swiper from 'react-native-swiper'
    
    const styles = StyleSheet.create({
      slideDefault:{
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: '#9DD6EB'
      },
      text:{
        color:'white',
        fontSize: 30,
        fontWeight: 'bold'
      }
    })
    export default class App extends React.Component {
    
      constructor() {
        super()
        this.state = {
          outerScrollEnabled: true
        }
      }
    
      verticalScroll = (index) => {
        if (index !== 1){
          this.setState({
            outerScrollEnabled: false
          })
        }
        else {
          this.setState({
            outerScrollEnabled: true
          })
        }
      }
    
      render() {
        return (
          <Container>
            <Content>
              <Swiper
                loop={false}
                showsPagination={false}
                index={1}
              >
                <View style={styles.slideDefault}>
                  <Text style={styles.text}>Chat</Text>
                </View>
                <Swiper
                  loop={false}
                  showsPagination={false}
                  horizontal={false}
                  index={1}
                  onIndexChanged={(index) => this.verticalScroll(index)}
                >
                  <View style={styles.slideDefault}>
                    <Text style={styles.text}>Search</Text>
                  </View>
                  <View style={styles.slideDefault}>
                    <Text style={styles.text}>Camera</Text>
                  </View>
                  <View style={styles.slideDefault}>
                    <Text style={styles.text}>Memories</Text>
                  </View>
                </Swiper>
                <View style={styles.slideDefault}>
                  <Text style={styles.text}>Stories</Text>
                </View>
              </Swiper>
            </Content>
          </Container>
        );
      }
    }
",1518216616.0
Mingli91,"What were you trying to do with the CLI that gave you a headache? Once you run init you should have a working app. Your post gives makes it sound like you were trying to write your app into the terminal lol.

Anyway I use WebStorm, it’s a full blown IDE which means it’s heavier than VSCode, Atom, etc. If you want something which does everything and then some, WebStorm is for you. Seems like every time my coworkers find a cool VSCode plug-in it’s already a built-in WebStorm feature.

Worth the cost IMO. Free if you’re a student too.",1518124272.0
Battelman2,"So far we’ve just sucked it up and used the RN CLI (mac OS) with NPM for all of our dependency management. We use Visual Studio Code as our IDE. We never build from the command line, always from Xcode and ADS.",1518118469.0
vikkio,"I used expo, but because realmjs wasn't supported yet (I don't know if now it is) we switched to react-native-init template.
As ide phpstorm with the react plugin.
Everything worked like a charm, in all the mayor OS (in my team we were using Windows10 Linux and mac).
No incompatibility whatsoever and the project went really smoothly in no time.
It was great and I can't wait to work with it again. ",1518128656.0
inform880,"I use [Atom](https://atom.io/) and the node js server, but to speed up the process with these [scripts I already have here](https://www.reddit.com/r/reactnative/comments/7sqy4b/android_development_on_windows/dt75goz/), using the tutorials from [the facebook git](https://facebook.github.io/react-native/). 

It all works much better on Mac, and that's coming from somebody who exclusively uses Windows and Ubuntu. ",1518116821.0
demoran,props,1518059601.0
too_much_exceptions,"4 React projects so far. I have never felt the need to use dependency injection lib

One should ask why dependency injection ? Is it for testing purpose or just for having a glorified service locator ?

Mocking/stubbing imported es modules/dependencies can be done without DI: here is an example : https://railsware.com/blog/2017/01/10/mocking-es6-module-import-without-dependency-injection/

When dealing with React components, Props and context could be used so you can “inject” the needed dependencies in your component.

",1518335405.0
,[deleted],1518053035.0
,[deleted],1518085266.0
sevenyearoldkid,"`this.setState({currentPosition})` instead of `this.setState(currentPosition)`

That should do the trick!",1518049907.0
helloJS1,"There are two things you can improve that I see:

In your code, you're setting `this.state.latitude` and `this.state.longitude` but not `this.state.currentPosition`. As the other answer suggests, use `this.setState({currentPosition})` instead of `this.setState(currentPosition)`. 

Second, did you think about waiting until you get the position before you render `MapViewDirections`? Like start your state as LOADING, and don't use currentPosition until navigator callback gets called.

    const LOADING = 0
    const READY = 1

    class YourComponent extends React.Component {
       state = {
           status: LOADING
       }

       getCurrentPosition() {
            navigator.geolocation.getCurrentPosition(position => {
                 // your existing code
                 this.setState({
                     status: READY,
                     currentPosition
                 }) 
             }
        }

         render() {
              return this.state.status == LOADING
                     ? <SomeLoadingIndicator/>
                     : <MapViewDirections origin={this.state.currentPosition}/>
         }
    }",1518078972.0
coolnat,Just control which components are displayed to the user in your app. No one is going to reverse-engineer your app to get into unauthorized areas.,1518067547.0
prkskier,"Someone with more experience should probably chime in, but I have created an app in RN based off of a React/Redux app. There's not going to be a ton you can copy as far as your React JSX goes because the RN JSX is different enough that the correlation isn't 1:1.

You will be able to reuse most (if not all) of your Redux code (actions, reducers, etc.), so that's awesome! If you can get that to some central place and pull it into each app that would make future development on both much quicker as you'd only need to do your Redux work in one place.",1518054631.0
maloRchrd,Spencer Cali (or something like this) on YouTube hackernoon on medium creates great tutorial on react native ,1518051159.0
mcguiretj,"As a freelancer for react native code, there will be some syntax differences for what components you will use in certain situations. Any good tutorials will help you with that. I prefer the maximillian react native course. He goes over a wide variety of react native and you already understand Redux so you will most likely need to focus on React Native itself. As for a high level of thinking, you need to think in screens instead of web pages. There are more real estate on web pages. In mobile world, you may not have that. Knowing that, you have to understand the user flow that seems seamless across each screen. You can do it and it's a great experience. Good Luck!",1518062294.0
yardeni,"I'm wondering about what viewing we elements are available. For example, I want to make a tinder - like swiping functionality from a list of images. ",1518065363.0
Dested,Can you go into detail on how the layout for the gameboard was done? A lot of intricate flexbox? A lot of position:absolute? ,1518026071.0
datswedeinlondon,"Looks really good! 
Hopefully you've changed your Facebook password! ",1517997624.0
nagazuka,Awesome! Any chance on open sourcing the code?,1518012949.0
victorrseloy2,"Wow, looks real good. ",1518015128.0
thatsgreat2345,Short 3 video course on the techniques used to create https://github.com/browniefed/react-native-ticker,1517971369.0
Martin15e,"Have you added the External Accessory framework to your project? That’s the framework that gives you EAAccessoryManager and other ’EA’ prefixed classes. Also, I’m curious what you’re using Zebra’s SDK for that couldn’t be done with basic networking requests. ",1517973986.0
franzwarning,"Hey guys -- a few notes. Right now we are iOS only (Android coming very soon). Also thought it'd be fun to share our package.json to see some of the libraries we used:

    ""babel-plugin-transform-remove-console"": ""^6.8.5"",
    ""chroma-js"": ""^1.3.4"",
    ""color"": ""^2.0.0"",
    ""debounce"": ""^1.1.0"",
    ""emoji-regex"": ""^6.5.1"",
    ""metascraper"": ""^1.0.7"",
    ""moment"": ""^2.18.1"",
    ""normalizr"": ""^3.2.3"",
    ""re-reselect"": ""^1.0.1"",
    ""react"": ""16.0.0"",
    ""react-motion"": ""^0.5.0"",
    ""react-native"": ""0.50.3"",
    ""react-native-actionsheet"": ""^2.3.0"",
    ""react-native-branch"": ""https://github.com/franzwarning/react-native-branch-deep-linking"",
    ""react-native-config"": ""^0.9.0"",
    ""react-native-contacts"": ""^1.0.4"",
    ""react-native-cookie"": ""^0.1.1"",
    ""react-native-cookies"": ""^2.0.0"",
    ""react-native-country-picker-modal"": ""git+https://github.com/franzwarning/react-native-country-picker-modal.git"",
    ""react-native-device-info"": ""^0.11.0"",
    ""react-native-fabric"": ""^0.5.1"",
    ""react-native-fetch-blob"": ""^0.10.8"",
    ""react-native-hyperlink"": ""0.0.11"",
    ""react-native-image-picker"": ""^0.26.3"",
    ""react-native-image-resizer"": ""^1.0.0"",
    ""react-native-indicators"": ""^0.10.0"",
    ""react-native-iphone-x-helper"": ""^1.0.1"",
    ""react-native-lightbox"": ""^0.7.0"",
    ""react-native-linear-gradient"": ""^2.0.0"",
    ""react-native-mixpanel"": ""0.0.16"",
    ""react-native-modalbox"": ""https://github.com/franzwarning/react-native-modalbox.git"",
    ""react-native-open-settings"": ""^1.0.1"",
    ""react-native-page-control"": ""^1.1.1"",
    ""react-native-permissions"": ""https://github.com/franzwarning/react-native-permissions"",
    ""react-native-push-notification"": ""^3.0.1"",
    ""react-native-shimmer"": ""^0.3.2"",
    ""react-native-status-bar-size"": ""^0.3.2"",
    ""react-native-version-number"": ""^0.3.0"",
    ""react-navigation"": ""git+https://github.com/react-community/react-navigation.git"",
    ""react-redux"": ""^5.0.3"",
    ""react-style-proptype"": ""^3.0.0"",
    ""reconnecting-websocket"": ""^3.2.2"",
    ""redux"": ""^3.6.0"",
    ""redux-devtools-extension"": ""^2.13.0"",
    ""redux-persist"": ""^5.0.0-beta.13"",
    ""redux-thunk"": ""^2.2.0"",
    ""reselect"": ""^3.0.1"",
    ""reselect-map"": ""^1.0.3""

Let me know if you guys have any questions or recommendations!
Cheers.",1517943355.0
cloudprogrammer,What are you guys using for your backend? AWS or firebase I'm guessing? ,1517962885.0
contradictyoself,Excited to check it out! ,1517943566.0
too_much_exceptions,"Neat, really neat :)

A couple of questions : 

What font did you use ? I like the bold one.
Icons are cool as well, did you use an icon font library for that ? 
What was the amount of native code written for this app ?

Good job :)",1518363362.0
mikehuebner,"The React Navigation drawer should be fine, using it in my app currently with no issues. Decently customizable, but plan on leaving React Navigation soon.",1517928890.0
cloudprogrammer,"You have to do it in Android Studio and Xcode. Google ""Android studio/Xcode lock screen orientation""",1517903896.0
incurious,"For android you can change the activity in AndroidManifest, like so:

<activity
	android:screenOrientation=""portrait""
        android:name="".MainActivity"">
// your stuff
</activity>

IOS:

<key>UISupportedInterfaceOrientations</key>
<array>
  <string>UIInterfaceOrientationPortrait</string>
  <string>UIInterfaceOrientationPortraitUpsideDown</string>  </array>",1517923289.0
louislatreille,I am using https://github.com/yamill/react-native-orientation. It provides cross-platform support  and the flexibility to choose the desired orientation per screen. ,1517924527.0
Bzaba,"Hello, You probably want to use bindActionCreators from redux to bind your actions.

...

import { bindActionCreators } from 'redux';

...

const mapDispatchToProps = dispatch => bindActionCreators(
    { plantUpdate },
    dispatch
);

export default connect(mapStateToProps, mapDispatchToProps)(PlantForm);",1517895718.0
,[deleted],1517867915.0
deadcoder0904,Checking for a free one. Then join [this course](https://learn.handlebarlabs.com/courses/enrolled/175915) by Spencer Carli. Its awesome & amazing & its free.,1517912948.0
glacierdweller,"I can recommend a book: React Native Blueprints: https://www.amazon.com/React-Native-Blueprints-cross-platform-applications/dp/1787288099/ref=sr_1_1_sspa?ie=UTF8&qid=1517923899&sr=8-1-spons&keywords=react+native+blueprints&psc=1

It is up to date, and each chapter revolves around building one application.",1517923958.0
Buliam,"Also make sure to check out their amazing newsletter! 
http://reactnative.cc/",1517858138.0
iabadie,"This post is in Spanish at the moment.
The theme is ""Creating Native Modules for android in React Native"".
In this post I show the steps to follow to create a native module, based on the React Native documentation to access tools provided by android through our own components.
This is part 1 of the post. Coming soon, part 2 will include raising a native android service from React Native through native modules.
I hope you find it interesting! :D",1517855081.0
ceasterday,FlatList uses virtualization and only renders a few items at a time to increase performance. If you scroll does it load more items after the first few? You could try setting the initialNumToRender prop to a larger value or render your items in a ScrollView instead. The trade-off is you might see a downgrade in performance with large lists. ,1517890414.0
Battelman2,"We just use Firebase authentication with the built-in support for Facebook oAuth.

https://rnfirebase.io/docs/v3.2.x/auth/social-auth",1517794149.0
arkalos13,"If you're using Expo, following their documentation for getting firebase and fb auth setup was pretty straightforward. 

I'm no expert but using an express server sounds like overkill for getting firebase and fb auth up and running. ",1517792446.0
chrisbianca,"Check out our guide for doing this using react-native-firebase: https://medium.com/p/a1ed3d2d6d91?source=linkShare-20ddff065da7-1517816071

Or, if you want to cheat, we’ve also got a premium starter kit with this all done for you: https://rnfirebase.io/kits/auth-starter",1517816264.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/u_gavrosario] [Want to learn React with this WordPress based project, will it be too challenging?](https://www.reddit.com/r/u_gavrosario/comments/7v9tw7/want_to_learn_react_with_this_wordpress_based/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1517780582.0
rco8786,"> What is the best environment to work with React - Windows or Linux? And where do they get deployed?

It doesn't really matter. React is just Javascript. The deployment question would also be up to you, but I don't think Wordpress plays nice with Windows (limited understanding of WP so don't quote that)

> Should I need to know(or have worked with) MVC frameworks? I've read that React is the ""V"" in an MVC.

Not really. React being the V is just so that folks used to the MVC thought process can wrap their heads around it easily.

> If react handles the ""View"", what about the Model and Controller?

Up to you if you want or need them. MVC is not the only way to structure an application's code. I don't believe I've ever seen anything referred to as a Controller in any React project though. And Models are just state objects anyway, they exist everywhere.

> Would this be a complicated project for a beginner like me? Any suggestions to help me out?

Tough to say, we don't really know anything about your project from your post. Though it's unclear where Wordpress is coming into play here. Do you want to put a React front-end on a Wordpress app?",1517784433.0
Kyroche,Wrong sub :(,1517755402.0
lefooey,WacthLocation tells you when the user scrolls the map. You want to update your Polyline coordinates. ,1517895696.0
BuggerinoKripperino,I've been thinking about this for a while now but I've not come up with any solution that would be good enough. You basically have to animate to an entire different layout and then add more elements to the screen. I'll update this if I think of anything.,1517684400.0
BuggerinoKripperino,"[Ta Da.](https://medium.freecodecamp.org/shared-element-transition-with-react-native-159f8bc37f50) 

Edit: stupid link broke, could've sworn it worked thanks to sn0wr4in for coming to the rescue",1517686343.0
tychota,"My understanding is not that flow is bad or so. Indeed, flow or typescript are valuable tools that make you develop faster by catching bugs before they even happen and providing autocompletion.

But this example makes me think that it is better to have flow separated from the library, as flow-typed and that for stuff related closely to internals of reaxt native, maintaining a version of react navigation compatible with multiple react native version and flow version can be cumbersome. Sometimes the great development speed of both flow and react native can have the drawback of too many incompatibilities. 
",1517654897.0
deadcoder0904,"I was thinking of using Flow in all my React Native projects but I can learn from them. I can rather use FlowType. Heck, I don't even need flow I guess 😂YAGNI",1517647363.0
RIPEMD-160,"Well done! Really looks great. But may I ask, why only iOS?",1517611227.0
Overtorment,"Hello! As the title says. Heres the link: https://github.com/Overtorment/BlueWallet Early Alpha, but pretty usable (use it myself in the first place). Still, don't store large amounts. Would really love some contributions on the project. Its ReactNative which means Javascript is used a lot, so if you wanted to jump in Bitcoin development - nows the change. Feedback appreciated!",1517605200.0
dov69,"chop chop, before it all flops!",1517605563.0
phonebatterylevelbot,"this phone's battery is at 9% and needs charging!

---

 ^^I ^^am ^^a ^^bot. ^^I ^^use ^^OCR ^^to ^^detect ^^battery ^^levels. ^^Sometimes ^^I ^^make ^^mistakes. ^^sorry. [^^info](https://np.reddit.com/r/phonebatterylevelbot)",1517605208.0
teiamt,The best way I've found to do this is to add isLoggedIn to the state of your root component and then in the render function return different navigation stacks depending if they are logged in or not,1517588377.0
saltkiller,"Hey,

Here are two starter kits that do exactly that.

1. React Native Todo app (https://hasura.io/hub/project/roarman/native-base-todo-hasura)
2. React Native Starter Kit (https://hasura.io/hub/project/hasura/hello-react-native)

Comes with elaborate instructions to help you get it running.",1517816989.0
CopperHook,"I supply config as environment variables in the AppCenter build, which has been supported for at least since I started using it last October.

I use a prebuild script to echo specific environment variables into a .env file, which gets picked up by react-native-config. Works great.

My only complaint is AppCenter only allows one build per branch, so I use a master branch for staging builds and a release branch for production builds. I'd rather be able to generate each environment build for each change, including on master.",1517591198.0
Technotopia,"I was pretty similar to you in that I only had some limited web dev skills.

What has been awesome for me is going through the video tutorials on Youtube. There are tons of UI tutorials to help you get familiar with the styling and basics of design.

Then there are tutorials that make functional apps and these are best when you want to dive a little deeper. Let me know if you have any more questions and feel free to PM.",1517573521.0
mrezende10,"yo man, im a senior full stack and mobile dev (i pretty much do everything) and ive been working with rn for more than a year now and to learn rn you just have to dive into it! try to build the most dumb application you can think of at first, then you gotta use some different packages to make stufd cooler right? research for open source rn packages in github(there are a lot), after a while you're gonna bump into some weird stuff called redux, try to understand why and how to use it before even considering implementing so youll know the need of it and without much hassle you'll be developing rn applications in a bit! i have 4 small rn applications on my github if you wanna check that out github.com/matheusrezende",1517577455.0
BuggerinoKripperino,"Hi! I came from a 1 year android university module to JavaScript and React Native with little to no knowledge of either now a year later I feel as though I have grasped all the fundamentals, different ways of thinking about problems etc and making good progress on the more advanced stuff like Animations and  handling Gestures. Honestly people say ""learn react first"" or ""learn JavaScript first"" but I feel like I benefitted more from doing neither of those things. JavaScript in react native is ES6 which a lot of old JavaScript tutorials don't go over in depth unless it's a react tutorial. 

I think if you want to do it just try remaking small apps you've made natively before and you'll naturally ask questions like ""where should I make my API calls"" and ""how the fuck do I navigate"" the only prior knowledge I think that's particularly useful is state/props and the lifecycle methods. 

Good Luck!",1517654900.0
chronax,"You need to be able to run `adb devices` from the terminal in order for the app to launch successfully. That command will list all current Android devices either attached via USB + USB debugging, or AVD emulators currently running. 

If its folder isn't in your PATH environment variable, react-native can't find it and use it to install the APK. ",1517534370.0
Technotopia,I'm having the same issue.,1517530180.0
Saad-Ali,Have you tried to run it on an actual android phone.,1517531804.0
Binford46,What happens when you open the project in Android studio? Any gradle messages telling you to update/install build tools?,1517537560.0
,Have you checked to see if the app made it to the AVD? It can successfully build and install without launching the app. Check the app drawer and let us know! ,1517541613.0
interactivejunky,"You can put any React Native view between MapView.Marker tags ...

eg 
<MapView.Marker ...><Text>A label</Text></MapView.Marker>",1517819293.0
BuggerinoKripperino,I know this isn't what you're asking but Mapbox has a react native lib and it has labels.,1517559592.0
lighthouse_at_eleven,"Awesome, keep it up.",1517519435.0
Velz_Kyos,"I have done similar things, and how it worked throw a database. Lets say there is a table in that table it held and id, the URL for the API or a Keyword to use, the information being package (for body and header in my case). And it worked by if the device was online or a function called that did an api call it would submit to the database and then notify my sync engine that it had a new entry. It would check the internet status than perform the calls appropriately.  ",1517607861.0
Jaymageck,"1. Not all mobile devs are web devs so there's no big appeal to writing JS
2. Often people prefer to write the most native code possible for performance benefits.
3. To do a lot of stuff in RN you are still going to need native modules. Maybe not for a todo app - but give voip a try. Some people would argue why introduce JS when you need native code anyway.
4. Many existing native libraries available in a more mature space
5. RN is still making breaking changes constantly and is one of the most unstable pieces of tech out there. 

Note - I work in RN everyday but I totally understand choosing not to. ",1517465828.0
ABrownApple,"Multible reasons.

1. They already now java / swift and not js
2. React native is new (have bugs, not as well tested etc.) 
3. Performance
4. If something new comes out in native it's a delay before react native can use it since it's a layer on native. Native gets support first and then react native developers have to implement support for it.

With that said I love react native and use it myself. I recommend it if you already now js and don't mind working on something new and don't have a super complicated app

Some will argue react native have almost native performance and is well tested and not buggy. 
",1517477799.0
hdsenevi,"For me it's using the correct tool for the job at hand. I was a native app developer (mainly iOS) and now I've been doing react-native for about 9 months or so. I see the appeal on RN to native, but also see the issues as well. I think, if your app requires cross-platform development (ios and android) and is relatively trivial (subjective), then it make sense to go with RN. Because in that case doing RN means you don't have to maintain two code bases.

But like others said here if your doing a non-trivial app (AR/VR/Voip/Realtime/games/image processing/that require a lot of native modules) then it make sense to use native.

Also all the new native APIs will be firstly available as native modules and will take a bit of time to trickle down to a well defined API abstraction for RN, so there is that as well.

But from my experience, it's good to see how RN does some stuff better than native (styling, layout, state management, immutability etc etc) and that expertise can be translated back to native. So if you get the chance to work on a small-medium size RN app don't pass that opportunity up.",1517804132.0
DueDueProcess,"Not to mention: if you want to offer your service in the browser, too; it’s almost like a 3-for-1. 

As of two weeks ago, I had a lot of React experience, but never written a lick of RN (or any native language for mobile). I had an idea for an app that would help attorneys fill out tedious forms for entering appearances, etc. It’s essentially a minimally complex CRUD with signature capture and the ability to fill in pdf forms on the fly, all hooked into firebase. 

Going to start beta testing next week. 😍😍",1517458090.0
mayhempk1,"RN isn't quite at the level of native, as nice as it is.",1517460177.0
canidoitthrowaway1,"Well, React Native is relatively new. With that comes a budding, but immature ecosystem to build apps with.
",1517455286.0
powerje,"Code sharing isn't close to 100% with RN. RN is nice for what it is but doesn't beat the UX of an application built using the native SDKs directly. 

Most places have separate developers working on their native applications, it's not like developers are choosing to create 2 apps. ",1517456496.0
Shiki225,"I'm a huge fan of React Native. But at my previous company we ran into some problems that required native code. For example, one issue we had was running code while an app was in the background.

I think with time, more companies will switch to React native. ",1517462568.0
LQST,Overhead.,1517502546.0
dizzyluo,"Currently, RN apps don’t seem to be able to run without an internet connection, even when I detach the app, I’ll still have to publish it to Expo.

Offline mode feels like an afterthought right now and I’m not comfortable deploying it in projects where I may need Wifi (maybe for websockets), but have no internet access.

Sometimes apps will just show a blank screen and try to download the JavaScript payload even when there’s no internet connection.

I remembered a few years ago where I used RN and it was possible to publish my app’s entire JS payload through Xcode, no frills. That option doesn’t seem to be there anymore.",1517551198.0
alien3d,for currently i would try to make my latest react-native version android and objective c.. because in the future will separate it purpose job. ,1517727471.0
the_argus,I find it terribly unstable personally. Also not huge fan of JSX. If I had to use a *compile to both OSs* thing I'd use Flutter.,1518110996.0
ShrimpOfDeath,"It all depends on the job that they are trying to do. Sometimes React Native fits, sometimes not. 

For example, React Native was fine for Oscar (healthcare insurance company) because they had a whole web dev team using react. They want their people full-stack, so one person can code a feature both on web and mobile, RN helps with that. And with RN you can make better UIs than with PhoneGap and the like. 

NuvoAir (another healthcare startup) also looked at RN briefly, but they've already had invested a lot into native technologies and decided to stick with them. 

React Native is quite fast, but still slower than native apps. https://facebook.github.io/react-native/docs/performance.html - see here. So if performance is important, use Java/Swift.

There are lots of libraries to use, but they've not been properly tested. Also RN develops quickly and your product is always out of date. See the Oscar case here: https://belitsoft.com/react-native-development/top-healthcare-mobile-apps-using-react-native

And yeah, you still need to write some native code even while using React Native. 

",1521195048.0
Ansis100,"This is so weird. I added some more output from debugging, but I still have no idea what the problem might be. Anyone? I've been stuck on this for too long.",1517484773.0
brentvatne,https://forums.expo.io/ is a good place to go,1517513798.0
kbcool,"    git clone
    npm install (or yarn install)
    react-native run-ios

Should work no matter what the age. The package.json has specific versions of packages specified.

You won't get it running on modern packages because as you have noted so much has changed.",1517445521.0
SizzlerWA,Please don’t post ads.  Thanks.,1517972840.0
Abaddon_OD,"I was unable to get High Sierra 10.13 working on the latest VirtualBox. I did get it working on an older version. I think it was 5.1 the one from the Ubuntu repositories. I couldn't get the VM to recognise any USB devices so abandoned the project.

I used this guide http://suzywu2014.github.io/ubuntu/2017/02/23/macos-sierra-virtualbox-vm-on-ubuntu",1517415579.0
vladjjj,"If you build your RN app with Expo, you don’t need a Mac, just an iPhone.",1517440065.0
lan__solo,"It is, but try with Sierra, not High Sierra. The new file system doesn't work well with Virtualbox yet. But be aware that it's officially (EULA) not allowed to put macOS in a Virtualbox not running on macOS host.",1517419107.0
polaroid_kidd,Your can run the latest one in VM ware,1517419116.0
boomdoodle,"RNfetchBlob is all about interacting with the file system. Not quite sure where the video upload thing is coming from but, we have been using fetch blob for over a year and are very happy with it. Even have buffered downloads if video going. ",1517410665.0
kbcool,RNFS does have some pretty badly written documentation but it's so stunningly simple you just have to look at the source code and two seconds later you have worked out what you were trying to do. I think the author just assumed everyone should/would/could do that :),1517525585.0
HappyJebediah,[This article](https://medium.freecodecamp.org/react-binding-patterns-5-approaches-for-handling-this-92c651b5af56) should cover your problems.,1517378505.0
yarism,.bind(this) to your function that you want to run in onPress.,1517382136.0
DasBeasto,That’s a really cool design I’ve been looking for something similar. React-Native-deck-swiper and Nativebase card deck just aren’t very appealing. Hope you figure it out!,1517501129.0
b_n,Would love to hear how you get on with this,1517387124.0
Technotopia,I'd like to know how to do this as well,1517358143.0
Technotopia,"Hi,

First off, this tutorial series is amazing so far.

I noticed you also did a Twitter clone tutorial, but people commented and said that you didn't end up finishing that. Is that true?

And if so, do you plan on finishing the instagram clone completely? I don't mean to complain, just curious. Thanks again for doing this!",1517397105.0
jestzisguy,"You’re most of the way there.  Changing the state will trigger your component to be re-rendered, so now you just need your render function to only make the button if the state is what you expect.  I usually like to structure that as a separate function (e.g. renderButton) and then have an if statement in there.  Then, from your main render function you can just have something like {this.renderButton()}

Sorry for the formatting - am tapping on mobile at the moment.",1517278033.0
stathisntonas,"https://chrome.google.com/webstore/detail/cors-toggle/jioikioepegflmdnbocfhgmpmopmjkim?hl=en

Note that some sites like youtube, github etc won’t work when cors is enabled, so keep in mind to switch it off or on.

Consider using react native debugger:
https://github.com/jhen0409/react-native-debugger

Much better than rn built in debugger tools.",1517271116.0
derGropenfuhrer,How up to date is that book? ,1517259053.0
CitizenAlpha,"This is a partnered link, this means by default you'll be giving money to the '**indiekings**' partner. If you don't intend to give money to this random person visit: https://www.humblebundle.com/partner and opt out.

Additionally posting partner links without disclosing that it is a partner link is a violation of Humble Bundle's partner program and you can report this partner by filling out a quick ticket here: https://support.humblebundle.com/hc/en-us/requests/new",1517582806.0
Bubesteak,Anyone read the react native ones? They any good?,1517269617.0
BuggerinoKripperino,"This post is quite confusing but if you're using CRNA I believe there is a built in maps module. You won't be able to link any modules if you used CRNA which I think is what you're describing when you mention modifying the android folder. 

To actually answer your question. npm start, simply runs a script defined in package.json. If you look you will see a scripts section and a start script whereas react-native run-android is using the actual react native cli. 

Don't use the RN cli if you're using CRNA otherwise it will get very confusing. You should read up on expo and react native to see the difference and what expo adds to the experience. 

PS. CRNA is built on top/with expo which is why I mention it",1517238620.0
Mingli91,"I’ve not used CRNA but this could be an issue with Expo. Using Expo means you can’t use most third party RN packages.

If that’s the case, first see if Expo has a maps component you can add. If not, you will have to eject your CRNA app.",1517238849.0
Noitidart2,"Thanks for this video. Two questions:

1. I like to use `react-native init`  and you recomend we include expo kit, is this easy to do? I can't figure it out.

2. I making an Android app. I have a flat list, and currently I just use straight `<Image source={{ uri:'REMOTE URL HERE' }} />` and I notice on Androdi it fades it. Is it loading it new every time? As I scroll ,even in a flat list, the perf is janky. I don't notice this on iOS. Is there a way to fix this. To emphasize this, we can use `<ScrollView>` and create just 20 `<Image>` with same URI and even though same image, the scroll view scrolling is extremely janky.",1517278838.0
linusan,"That’s helpful, thanks!",1517205456.0
Riki5000,"man I read that like 5 month early before I started working on my current project , It would helped me a lot . 

I used the react native navigation by wix and I kind regret it since  it's not compatible that well with other libs which caused me all sort of problems .",1517219221.0
Mingli91,"Nice. How do you feel about React Navigation? I’ve tried it twice, once a couple of months ago and once a few months before that. Both times it just seemed unready and I had to dig into the source to figure out the APIs because the docs were too inaccurate to rely on.

I’m using RNRF v4 at the moment which uses React Navigation underneath as it smoothies over the current issues and uses different components where React Navigation’s default components are too buggy (eg. Drawer).",1517238603.0
mnngfltg,"If you're new to XCode coming from Unix, you're in for a world of pain. I try to limit my exposure to XCode as much as possible, relying mostly on `react-native link` and `react-native run-ios`. But sometimes you have to bite the bullet and learn a bit about XCode, just enough to get the job done.",1517222901.0
Mingli91,What’s the actual error? There’s enough info on the RN site to build native apps. Do you want to build for production or just run the test build on a device?,1517220477.0
DueDueProcess,"Just to circle back on this, I appreciate the responses. Turns out, I was using the .xproject file rather than the .xworkspace file. Switching immediately led to a successful build. 🤷‍♂️",1517403543.0
peartreeer,"    keyExtractor = item => item.id; // item.whateverUniqueIdentifierYouHave

And then in your FlatList add

    keyExtractor={this.keyExtractor}  

  
From [React docs](https://facebook.github.io/react-native/docs/flatlist.html)

> keyExtractor tells the list to use the ids for the react keys instead of the default key property.

Don't use index as the unique id.",1517197459.0
Noitidart2,"May you please share how manual unlinking is done, it would be nice to know and understand. May you use a font for example. I know unlinking in android is easy, just delete the font file from the ""android"" folder, but not sure about ios.",1517240781.0
fly_guy22,"I’m currently building a react native app, basically converting what previous developers had made in independent platforms into native.

I inherited the previous database and figured that I continue to use it. It’s a self hosted Parse server and I’m using the Parse react native package and the parse hosted dashboard.  If you have any questions or want to check it out DM me.

[https://github.com/parse-community/parse-server](https://github.com/parse-community/parse-server) ",1517132576.0
teiamt,"It doesn't matter what your back end is written in. It is just a tool and you should use the tool that suits you and the company's requirements.

Who is going to maintain the system?
Are there any requirements where it needs to be hosted? Legal/performance/cost?
Is there any confidential data that has to be protected? If so a SaaS solution like firebase might be out.
Do you need a level of control or the ability to add things something like firebase doesn't support?
Are there any specific features you need that have well known libraries available for certain languages? Eg if you need numpy you need to go with python.
Do you need something that is going to save you time?
Finally what language/solution is most comfortable to you?",1517135238.0
,"I REALLY like firebase. 

IF your cool with Google having ultimate control of your data, it's basically the second coming of parse.  Last I checked filestore ( uploading blobs )doesn't work though",1517455430.0
ikbenpinda,"Ejecting your app should generate the appropriate folder you, then you should be able to find both /ios and /android in your project folder.",1517081987.0
Buliam,"This is my favourite interview so far. Evan talks about how he got into programming leading to his current job at Expo. 
Also check out his many open source projects on github: https://github.com/EvanBacon

",1517070865.0
cgsig,I believe you can do it with adb ,1517097815.0
BuggerinoKripperino,Inside the android emulator there's a 3 dot menu that gives you location simulator control,1517221985.0
Manishalexin,"Isn't it just a custom input above the keyboard. You just have to make the input float to bottom with keyboard visible.

You can create an input component with other buttons around them and make it float to bottom with flex.",1517063277.0
redpopcornpanda,"If you noticed, those Snapchat buttons are permanent in the input field and you can change the keyboard as a user to whatever you like",1517063895.0
abhisheknair,https://github.com/DylanVann/react-native-fast-image,1516996536.0
jonnyburger,"Also consider Amazon S3. JavaScript libraries exist for uploading images, hosting is dirt cheap and it is very reliable.
It is also easy to connect an image CDN like Cloudinary or Imgix to it, which will allow for resizing, compressing and generating thumbnails just with URL parameters.",1516981143.0
Bitter-Buffalo,"https://github.com/invertase/react-native-firebase-starter

Never used this repo or firebase, but it looks promising. ",1516979717.0
wcandillon,"If you need to use expo and firebase, I proposed a solution at https://medium.com/@wcandillon/uploading-images-to-firebase-with-expo-a913c9f8e98d",1517002736.0
Noitidart2,"I don't use Firebase, I use imgur (or other popular image hosting services), or my own server. To upload images I use react-native-fetch-blob.",1517240851.0
EQuimper,"Make use of XMLHttpRequest and send that to a s3 bucket. All that by using presign-url.

The code for doing that https://gist.github.com/EQuimper/90fba31f9d0ecb8f6926709a4dbc46d2

This one need the image uri and type. After that that also the url for the presign url",1517283603.0
geirman,"I've used this project...
https://github.com/react-community/react-native-image-picker/blob/develop/README.md",1516953886.0
icekeymon,"I'd allow them to select their 100MB+ photo, compress it, save it to temp location, upload it to your API and then delete it. Compression should be done natively. This library handles video compression, maybe you can get some ideas from there - https://github.com/shahen94/react-native-video-processing

I'm not versed in Swift/Obj-C & Java so I wouldn't be able to help you with implementation.",1516959231.0
legohead258,"Depending on your use case I've found a good approach is to create an [S3 presigned request](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html) on your server and get your user's client to upload directly to S3. This avoids using your own bandwidth.

Additionally, you can compress the images on the user's device before uploading them. Something like [react-native-image-picker](https://github.com/react-community/react-native-image-picker/blob/develop/README.md) can do this. E.g:

    ImagePicker.showImagePicker({quality: 0.7}, response => {
      if (response.didCancel) {
        console.log(""ImagePicker: User cancelled"");
      } else if (response.error) {
        console.log(""ImagePicker Error: "", response.error);
      } else {
        console.log(response)
      }
    });",1516974000.0
mikepc143,I want to say thank you to all the folks who responded. You really helped me out!,1517337293.0
,"Expo doesn't bundle the native firebase sdk, they suggest using the js sdk.  Push notifications need native code, so if you want to use Firebase push notifications, you'll have to eject.

I don't use push notifications, but I use [react-native-firebase](https://github.com/invertase/react-native-firebase) for auth, which works very well.",1516942273.0
tballz3773,Stephen Griders course on Udemy has a segment on this for react native.,1516930077.0
Spyder638,"I'd build a data set like this, that is quick to edit:

    const recommendations = {
        optionA = [1, 2, 3],
        optionE = [2, 3, 5],
    };

    const components = [
        <RecommendationA />,
        <RecommendationB />
    ]


Create a function that

1. Gets passed a value from the recommendations object. (So an array)

2. Loop through the passed in array.

3. For each value in the array, render components[arrayValue].",1517074680.0
lovemeslowly,Following,1516939784.0
canidoitthrowaway1,"Hmm. It would depend more on your use case and specific details of your app.

I would hard code first, then optimize from there. Things may become more clear that way.",1516941180.0
Cosmosof,"If you are able to squeeze each to a view you can do like this;
this.props.A ? <view> please select one B C D</view> : this.props.E? <view> please select one C D F </view> : <view> please start by selecting either A or B  </view>",1517061866.0
ikbenpinda,"^(I'm going to regret posting this.)  
Same here.

To be honest i'm used to MV* and OOP, not this weird functional [RMI-like](https://en.wikipedia.org/wiki/Java_remote_method_invocation) stuff. Let alone dynamic typing and javascript. But I can learn. And _conceptually_ it really isn't that hard...but everything just seems so unnecessarily overcomplicated.
To be honest, this is still my favourite cross-platform framework by far, and that's not really meant as a compliment.

Ironic ranting follows.

Everything is deprecated or broken. Sure, once you figure something out it becomes tremendously easier after the first time. But if i got ten cents for every piece of documentation or code that is outdated, unmaintained and/or deprecated, i'd have enough money to hire someone else to do my work for me. RN's own documentation can barely bother to explain why their damned flatlists work the way they do. ""Here's some code. This is what it does."" No shit your data prop links to your data. But why do i even need to manually map 'key' to 'id'? When was the last time you worked with an ORM or model where your key wasn't referred to as 'id' anyway? Why is it called extraData when it's not data but just a triggerRefreshOnChangesTo...?

Why are you using buzzwords like ""state reducers"", ""action creators"" and ""stores"" when it's just a huge eventbus where everyone is subscribed by default?  

Why is everyone pretending this shitload of boilerplate you need to write for a single function is a _good_ thing?  

Why is every example so contrived? Oh wow, you can hold two strings in your internal state, well done. I'm sure that will stay really neat and organized once you start working with real-life scenarios and oh, i don't know, maybe objects or arrays or more components or something. Oh wait, Redux? You mean writing six extra paragraphs of code along four additional files? No thanks. Flux then? Oh, it's nearly the same thing but with more stores? Instead of saying [You might not need redux](https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367) ad nauseam, can't we just have some MVP-pattern like approach so we can still do that traceability thing without having to spaghetti the UI and logic into each other?

React Native doesn't even come with navigation out of the box, and the package they recommend is deprecated in favor of other stuff. I'm popping ```npm install``` all day like it's xanax because every single thing needs to be a seperate library for some reason, and may god have mercy on your soul if you decide to upgrade _npm_ or _react-native_ along the way because you'll just end up restoring your project the rest of the fucking day. Every component ends up being this horrible mess of UI/logic spaghetti with the only thing your presentational/container thing is fixing is abstracting out mapping your props to a load of...non-props.

I don't hate React Native (as much as Xamarin, for example). But everyone just feels so hacked together it's just such a waste of time trying to fix the small bugs that end up breaking your project for the whole day. Why can't people just try to apply some actual real-life cases and work from there? Where are all the regression tests? Why is everyone in javascript-land just starting and ditching new projects every minute? Why are you telling people they can just contribute when your little bot auto-shuts everything down and/or you can't be bothered to let someone else maintain your project?

Instead of complaining about a failing bundler at line 35, column 2, in '<redacted>', you could have just told me to run ```react-native link``` on the first time i tried to add assets, dammit.  
Neither do I need to fix some :CFBundleIdentifier, all I need to do is ```cd /.gradle && gradlew clean```!

_sobs_",1516974366.0
dduko,react native dev environment is very mac/ios centric. most people having problems are on windows/android. and almost always the problem is that some people don't have any troubleshooting/debugging skills.,1516929451.0
TheBrownRicFlair,"I come from an iOS development background but I started using RN, after my employer wanted me to build out a project and quickly iterate. There was certainly a learning curve but I must say it is much faster getting your code in there and rapidly building. I've gotten quite used to not having to compile every time I want to see my changes. And this was all with no experience with React. Perhaps the experience is entirely different when moving from Web to Mobile.",1516910581.0
Hyroglyph,"The problem is that some libraries can't keep up with RN updates and for some obscure reason stop working when a new RN version releases. 80% of the libs I see still use index.android.js/index.ios.js etc. in their examples and some of them just don't work / need some bs workaround on 0.51+.
Also the RN error messages can be quite useless sometimes, so much so I can't troubleshoot and just just go straight to googling",1516959508.0
kbcool,"LOL been there. It seems to take a week to get over dependency hell and working out how the bundler/simulator/device work together.

Once you get your head around it you wonder why you ever had problems but it's a good week of swearing before you get there.

Other whinges include:

- What's this wanky/pseudo functional programming stuff? We need to make sure everything is immutable, but we don't really when it comes to the crunch
- There's three hundred ways to do something with 500 dudes having written half a medium article on how to do it, the other half is up for you to guess 
- Ditto with documentation - it's there but expect it to be half written in horrible english
- Spending a whole day trying to fix a problem only to find when you've fixed it you've f*&ed up the rest of the app
- Realising those twenty npm packages you installed could have been solved with 5 lines of code and spending a week removing all references and replacing with your 5 line solution

I could keep going all day....",1517041638.0
yarism,I had some issues but usually could google it. It’s not perfect but very good for me so far.,1516914283.0
redpopcornpanda,"I'm using it on a medium sized app and it's amazing. When I'm just dealing with JavaScript, it's so nice. The quick reloading is by far the best feature. Writing a raw Android app takes forever because 1) there is a lot of dumb boilerplate you have to write to get anything done and hooked up and 2) Gradle is not the fastest. The only times I want to kill myself are when I have to deal with Xcode or Android Studio - which I have quite a bit to get different sorts of builds working along with different packages. What errors are you getting?",1516918837.0
Cosmosof,"I straight started to  learn RN, redux, saga and complex state management by building two apps in two months.  There have been many times I hit the wall but it is over, I am really confident now.  The thing is with RN, you have to be patient. ",1517037639.0
harshdays,"Most comments appear to be complaining about the trails of working with node packages. 
React native is better than any other hybrid frameworks IMO. However it doesn’t appear to have any decent guidance for building native packages. The default way it handles production concerns could use some work, but there’s lots of great stuff out there once you figure out how to use it, deployment with fastlane, live bundle updates with codepush, avoiding crashes, debugging android performance issues. To reiterate these are not straightforward or documented in other hybrid frameworks.
React native is great. You’ll learn all the red screens eventually there aren’t too many.",1517328548.0
slk14k,"RN is not bad but those outdated npm packages is such a mess. Sometimes I spend whole day googling and scrolling stackoverflow, maybe it's just my lack of experience with JS, maybe not. ",1517639890.0
TotesMessenger,"I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit:

- [/r/u_nelf86] [React native is bad - rant](https://www.reddit.com/r/u_nelf86/comments/7xjw3d/react_native_is_bad_rant/)

&nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*",1518631250.0
nelf86,"Author of original post.

It has been almost 3 weeks since I started my adventure with mobile.
My original idea with React Native development was to send SMS messages and get their delivery reports to local storage. I tried to use package react-native-sms-x but I couldn't get that to work.

So I tried using Android studio and I managed to get texts sending and their reports showing also, but since I don't know java/kotlin it was very cumbersome to create user interface. 

Eventually after I saw how android apps are made under the hood, it was easier to to back to RN and review the package I tried to use. On their github page I found that there are issues similar to the ones I had. I started looking and their source code and guess what. The code was made for react native 0.36. Core RN has changed since, and it was the main reason for RN to not compile. So I forked their package and changed its source code.

It is all working for me now. I am continuing to work on my react native app and I really enjoy it!",1518631626.0
Ajure,"The following should fit your needs.
https://github.com/mauron85/react-native-background-geolocation

A single google search would also bring this up :)",1516967055.0
kbcool,"Are you really planning on having people do large amounts of data entry in a mobile app?

I'm guessing you want to let them do visualisation more than data entry. There are lots of good charting apps etc for react native. Plus a whole low level SVG implementation. Quite a few javascript browser based libraries have also been ported. Eg:

https://medium.com/the-react-native-log/animated-charts-in-react-native-using-d3-and-art-21cd9ccf6c58",1516956362.0
hhunaid,"You're probably looking for this
 https://www.npmjs.com/package/react-native-table-component",1516881719.0
hhunaid,"Its actually a very common scenario. Keep a boolean in your state called 'loading'; initially false. Then when u fetch your data, turn it to true. 
In your render method, render the list or a loading view depending upon the value of 'loading'.",1516882327.0
snakeroberts,"have the presentation of the ListView depend on the state's data presence, then it won't try and render the null data

    // to hide the row mappings until the data
    !!(data && data.length) && data.map(row=> (<ListItem .... />))
    OR
    // to hide the full component (including headers and such)...
    !!(data && data.length) &&(<ListView> ...)

    // can also have a loading item in there too if the data isn't present
    !!(data && data.length) && (data.map ...) || <LoadingComponent />",1516995800.0
mahesh_98,Is this service free?,1517064840.0
stathisntonas,"You could save the html files locally with AsyncStorage  at first load and then load the saved html into the webview if the device has no connection. (All that if you are fetching html data from an API like wordpress content.rendered, not direct loading of html pages).

Example on how to load local html files:
https://reactnativecode.com/load-local-html-file-webview-android-ios/",1516860492.0
stathisntonas,"You could go the other way around, create an empty app with react native cli and copy the components you want to the new app.

If you’re struggling with this simple task i think you should start learning the basics of react & react native. Everything will be straight forward then and not confusing.",1516860921.0
excs,"off the top of my head, i had this problem and fixed it by doing `item.item.companyName` for example ",1516842675.0
SimonTheEngineer,"Using `onPress={this._onPressButton(item)}` I’ve run into some issues because AFAIK it’s executing the function every time it renders (someone correct me if I’m wrong...) which can lead to some unexpected behaviour 

I use either:

`onPress={this._onPressButton.bind(this, item)}`

Or

`onPress={() => this._onPressButton(item)}`

But the idea is to pass the item (or a single property if you prefer, but I feel the whole item is better practice) into the `onPress` handler


PS: Why is your `FlatList` wrapped with `TouchableOpacity`?",1516871278.0
stathisntonas,"There is Facebook Keyframes too. They are using it in the Facebook app for animations.

https://code.facebook.com/posts/354469174916519/keyframes-delivering-scalable-high-quality-animations-to-mobile-clients/",1516860072.0
anonymousmouse2,"Also if you use Expo, Lottie is built in",1516858735.0
demoran,"I'll share a bash script I wrote to streamline the process.  Starting the emulator is included.

    #!/usr/bin/env bash
    
    # http://tldp.org/LDP/abs/html/comparison-ops.html
    # cf http://linuxcommand.org/lc3_wss0120.php
    
    # Parse our command line options
    avd_name=$DEFAULT_AVD
    variant='betaDebug'
    ENVFILE='.env.beta'
    
    while [ ""$1"" != """" ]; do
        case $1 in
            -c | --clean )          clean=true
                                    ;;
            -v | --variant )        shift
                                    variant=$1
                                    ;;
            -a | --avd )            shift
                                    avd_name=$1
                                    ;;          
            -e | --envfile )        shift
                                    ENVFILE=$1
                                    ;;
            -b | --build )          build=true
                                    ;;
        esac
        shift
    done
    
    # If the env_file is missing, abort
    if [[ ! -e $ENVFILE ]]
    then
        echo ""ENVFILE '$ENVFILE' not found!""
        exit 1
    fi
    
    # If an emulator is not running, start one
    emulator_pid=$(ps | awk '/emulator/ { print $1; }')
    
    if [[ -z $emulator_pid ]] 
    then
        # Ensure the specified avd exists
        if [[ -n $avd_name && -z $($ANDROID_HOME/tools/emulator.exe -list-avds | grep $avd_name) ]]
        then
            echo ""AVD $avd_name not found!  Aborting.""
            exit 1
        fi
    
        if [[ -z $avd_name ]]
        then
            # Get the first AVD defined on the system
            avd_name=$($ANDROID_HOME/tools/emulator.exe -list-avds | head -1) # Nexus_5X_API_26_x86
        fi
    
        if [[ -z $avd_name ]]
        then
            echo ""No AVD found!""
            exit 1
        fi
    
        # Open the emulator for that avd in the background
        echo 'Starting emulator...'
        nohup $ANDROID_HOME/tools/emulator.exe @$avd_name -verbose -tcpdump ~/emulator.cap &
    else
        echo ""Using existing emulator (pid $emulator_pid)""
    fi
    
    # Clean if required
    if [[ -n $clean ]]
    then
        echo ""Cleaning...""
        pushd android && ./gradlew clean && popd
    fi 
       
    echo ""Using ENV $ENVFILE""
    
    # If build is set, build the app
    if [[ -n $build || -n $clean ]]
    then
        echo ""Building the app...""
        ENVFILE=$ENVFILE react-native run-android --variant $variant
    else
        echo ""Starting the packager...""
        # cf http://www.dummies.com/web-design-development/mobile-apps/android-apps/android-emulators-or-whats-so-special-about-the-number-5554/
        $ANDROID_HOME/platform-tools/adb.exe -s emulator-5554 reverse tcp:8081 tcp:8081 # TODO: grep out and save the emulator name
    
        ENVFILE=$ENVFILE react-native start
    fi
    
    # Log it
    react-native log-android > android-debug.log 2>&1 &
    
    # Exit
    echo ""Done""
    exit 0    ",1516839670.0
inform880,"I use Atom, and run 2 shell scripts, one for running the server and one for running the emulator.",1516840566.0
realbriank,"How decent are your computers for the android emulator to actually be usable? 

My home PC was an quad2.6GHZ i7, 6gb of ram, and the emulator was basically unusable it was so slow.",1516899466.0
realbriank,"https://facebook.github.io/react-native/docs/getting-started.html#installing-dependencies

The react-native guides for windows show you how to set it up so you can use the emulator. You don't need android studio running to start it. Because you can run AVD separate of android studio.

Also, most of my team uses atom for development. ",1516899679.0
justdevit,Expo provides a complete example that may be useful: https://github.com/expo/camerja,1516831776.0
megabochen,There is similar library Facebook keyframes. You can try that. ,1516819380.0
amloelxer,"I’m curious, what specifically is the problem with Lottie? I was planning on using it in the near future. ",1516849269.0
ogv11,Great tutorial . I had some problems to run my apps on the android emulator a few days ago. I wish I had your tutorial back then !,1516823037.0
Mingli91,Find a fetch library that can abort requests and has a timeout. Have a component that listens to the network state and have it cancel all requests if it the internet goes. Set the timeout to return a Promise.reject and your async actions will all fail and call your failure action.,1516793396.0
desire_rawr,"are you sure u need redux alongside with firebase?
",1517073227.0
icekeymon,Thanks for the article. Performance is such a hot topic right now! If anyone has anymore tips then please share.,1516809194.0
uokesita,What about Firebase?,1516746478.0
orphans,keen.io,1516765309.0
orhanbayram,"There are a lot of analytic tools out there. Of course, if you want to do an advanced analysis, the options will be a bit narrower.

I tried some of them and can tell you that Countly is better because Countly provides more deep data about users and let me engage with users instantly.

https://github.com/Countly/countly-sdk-react-native",1516777266.0
mnngfltg,"Some navigators leave scenes mounted under certain circumstances, even as you navigate away. Maybe you could use one of these? I remember that the original Navigator did that.",1516737219.0
kbcool,"Mount it in the root of your application and change the zIndex style to bring it to the front when needed.

If it needs to look different depending on where you are then use the redux state to determine which components around it are shown or its size.",1516747329.0
rodrigoelp,"I’ve been using rn and typescript for about 4 months now and love it. It takes a bit of effort depending on the library you are using and sometimes it might not have the type definition but in general is pretty good.

If you check my GitHub you will find all the different experiments I’ve built

https://github.com/rodrigoelp/reactnative-typescript",1516734492.0
tjoskar,I’m currently using react native with typescript and it’s working great! Let me know if you have any question. ,1516724456.0
ioddly,"I've not had any issues with React Native (or React). Bindings for third party libraries and components can be more of a roll of the dice as to whether they exist or, if they do, if they are quality and up to date, but ultimately it is still a win (e.g. I'm using gl-react essentially untyped in one of my projects at the moment, but since my own code is type-checked I'm still catching a lot of errors at compile time).",1516759959.0
hnarita,"We've been using TS with RN for the past year at my job and no complaints here. I would say the only downside is that third party RN npm packages don't always have definition files. But the most prominent libraries like React, React Native, react-navigation, React-Redux, and Redux  do so no need to worry there.

It's just really useful to be able to create interfaces for props and state for each component, especially with VS code. It makes my development so much faster.",1516778679.0
wcandillon,I would definitely checkout the latest improvements regarding flow and react native: https://levelup.gitconnected.com/upgrading-to-flow-0-53-0-and-beyond-e8ce2e6e16b8. This story was written from the perspective of a TypeScript developer.,1516866713.0
ihsw,"TS can be great but such technology choice usually isn't up to you, furthermore the tooling and related documentation leans more towards ES6+ or FlowType.

That said, I will always recommend TS over any other JS flavor because it seems (IMHO) the sanest flavor of JS.",1516719448.0
JuliusKoronci,Tbh we moved to typescript and it is a huge pain in the...for that little value it ads to your code it is definately not worth in my eyes..better of with flow which is great btw :),1516730586.0
off_by_0ne,I have the same questions. Hoping for some answers too,1516764982.0
chiamaka_sil,I decided to go with firebase cloud messaging. Its a pretty solid choice and it's easy to integrate. Check out react-native-firebase ,1516782944.0
TheBrownRicFlair,"I've had some success with:
https://github.com/zo0r/react-native-push-notification

Only used it for local notifications, though.",1516754332.0
SolidR53,"Firebase is the best one, also has a great delivery mechanism.

You can A/B test, send to specific audience based on analytics etc.",1516789819.0
Cosmosof,"React-native-Firebase missing serious push notification features. I was able set up aws sns,  but if you are not familiar with aws, even you familiar with it is tough. Plus it might not worth to download heavy aws SDK to app just for sns",1517037923.0
nunobasto,"I also use https://github.com/zo0r/react-native-push-notification for push notifications in iOS and Android. 
For sending, in rails I use https://github.com/nomad/houston for iOS and plain curl for Android.
In PHP I use https://github.com/mac-cain13/notificato for iOS and again just curl for Android.",1517215833.0
wizloc,"We use FCM in our RN app. Works well and if you ever need to add other services like auth or real time database it is a breeze. I found react-native-firebase library to have the best documentation also, and they have a discord channel where you can usually ask questions and get replies if you need help.",1517254272.0
Pavle93,"You don't need a framework. Make a loading or splash screen load that data
https://facebook.github.io/react-native/docs/network.html

And render it in the appropriate screens. ",1516707853.0
redpopcornpanda,"It really depends how you want it to work and how you want to map the json to your components. Styles in react native are already Js objects, so that wouldn't be hard to do dynamically",1516765851.0
Cessabits,I am pretty sure you are in the wrong sub. ,1516656917.0
SkillFlow,subscribe,1516654285.0
CS_husky,Very cool! I'm a RN beginner and this type of content is extremely useful for me.,1516681832.0
DasBeasto,"Very cool, interested to see how you handle the images, for example what if an image is taller than it is wide, or really really tall and would take up like two screen heights, etc.",1516718613.0
newmeishere,Awesome keep it up 🍻,1516645819.0
_nuke_the_whales,I had JavaScript knowledge and very little react abilities when I started RN. I worked on my first app in my spare time and it took 3 months from start to being published in the AppStore. If you have 3 months to focus on this you will be absolutely fine. Take the experience!,1516656123.0
icekeymon,"I spent a month doing Wesbos' React For Beginners course, paid for the complete package. After completing it, I wrote an deployed a React Native application for iOS and Android in approximately 3 months. Definitely doable. I would suggest listing your features, if you don't need to drill into native code (as suggested by FezVrasta), use Expo. It'll save a lot of time. DM me if you would like to know more.",1516700489.0
Cosmosof,"Schedule an event and sign up form app sounds simple, for an experienced RN developer one-two days. For me, maybe three days, two months old RN developer.  ",1517039172.0
FezVrasta,"If you use Expo the bootstrap of the app will be way easier than with other methods, then you just have to learn the basics of React and React Native, doable in 3 months, your app seems pretty easy.",1516635480.0
kbcool,"For comparison:

I'm just polishing off the UI (last step) for an app I have spent about 2 months full time, 1 month part time. I learnt from scratch React and React Native. Almost 30 years of programming experience (since I was a small child), 10 or so on and off spent doing it professionally. Plenty of previous javascript experience but ES6 pretty new to me.

It's only about 10 screens but has full ecommerce capabilities including native payments in IOS and Android. It's actually two apps in one - one is a product designer and one is the ecommerce capability. It also includes a graph.cool and lambda based backend which I both also learnt from scratch.

I would put it in the top 10% of difficult to pull off in any language non-game apps. 

Not to pull my own chain too hard but I don't think your average programmer could pull off what I have done in the same time. I'm quite experienced (with both breadth and depth) and I could see most of the traps before I got too far down them and there are a lot when learning react, react native, redux, react navigation, graphql, apollo, aws lambda etc etc etc all at once!

If you're capable from the sounds of what you're describing it could be done quite comfortably.",1516657588.0
alien3d,i'm a slow learner.... 3 month not enough.. 2 years would so.. ,1516675452.0
ikhaatje,I assume you don't use any error tracking software. You should take a look at [sentry](https://sentry.io/welcome/). It logs all errors which you can later view on a dashboard. Its compatible with react native and is very easy to install.,1516726891.0
alien3d,"Sir  , don't destroy the market with those number. The real cost are when requirement been made not just  per screen. ",1516622757.0
harshdays,This is related to having the debugger open in chrome for long periods of time. close the debugger tab and refresh the app and it should be back to normal.,1516590493.0
false_creek_change,"Are you using a navigation package? Also, is this only an issue on iOS? ",1516584853.0
GunplaGamer,Link doesn’t work,1516549300.0
aforty,Cool. Does it work in android?,1516577076.0
ExtremelyQualified,This is dope ,1516564024.0
NaveNocab,Great as always!! 💙💙😄😄😄,1516566490.0
kay_meth,"what do you mean with ""cant fetch""? Could you post your code lines?",1516551900.0
franzwarning,"Hey! I’ve run into a similar issue a few times trying to run the debugger.  One thing you could try is manually settings the DNS on both your phone and computer (issue could be at the router level). https://stackoverflow.com/a/47108555

Hope that helps!",1516466543.0
ESTheComposer,Did you try the actual ip address:3000?,1516478769.0
Sprokes,Did you try the lan option and use the real ip adress? And don't forget that if use lan and wifi you will got two ip adresses. ,1516486752.0
beoutside,"Did you start rails so it doesn’t just bind to localhost requests. Try running it like this:


`rails server -b 0.0.0.0`

Then connect to `http://<your machines ip address>:3000` from within the app. ",1516499150.0
maloRchrd,Apple wallet has a seperate API to generate them  you need a dedicated server and an apple certificate to sign all the pass. At least thats was how it was working at the time of passbook,1516580314.0
maloRchrd,Sure this is an alternative you could also check urbanairship.com  i don't know which one is the cheapest but it's always good to compare ;-) ,1516597401.0
,Use redux saga firebase and channel whatever you want to your global state and prop it into the listview. Real-time stream done.,1516387183.0
NaveNocab,"I can work the problem with you some, DM or email bacon@expo.io 👍 free of charge of course 😱😜

Edit:
I would also recommend looking at this progressive Firebase `FlatList` implementation: https://github.com/EvanBacon/Expo-Pillar-Valley/blob/master/ExpoParty/components/Leaderboard/index.js",1516408576.0
NaveNocab,Nice my favorite! 👏👏👏👏,1516408398.0
akie,Curious which hourly rate you calculated this with...,1516342845.0
alien3d,to cheap..,1516520128.0
alien3d,"I'm not sure about other here. Most company don't much specialize on a language.. Freelancer maybe yes. In my experience either  6k dollar job or  600K dollar job  mostly the same requirement . The only much diff was 6k is template base and  hardly  you can get good customazation price while  600k with 10 people in a team with duration period may extends to 2 years. 

I try put as what customazation  i know to the website  , just 6k ? fuh .. pretty scary  if a team.  2 week job can finish okay consider revenue but if extends 3 month..Already on loss .",1516522561.0
Gandalfdorf,I should also note I've been following instructions [here](https://facebook.github.io/react-native/docs/0.51/getting-started.html) and using building projects with native code,1516313564.0
pcarion,Did you start the dev server through npm start? you can verify by typing the URL at the bottom of the red screen... you should see your javascript code there,1516314725.0
HishamP,"https://stackoverflow.com/questions/44446523/unable-to-load-script-from-assets-index-android-bundle-on-windows

The solution to this issue is available in this SO thread. Make sure to change index.android.js to your apps entry point file in the command given in answer.

Also make sure a development server is running after you run the command.",1516333316.0
RnRau,"There are two possibilities I can think of...

a) Emit an event/action when the user ID is found to be valid and let all the reducers that needs the user ID store it in their section of the store. 

-or-

b) Let the screen/parent component pick the user ID up from the redux state. Then include the user ID in the fetching posts action which could be emitted in the componentWillMount. 

I kinda prefer a) - your posts reducer could be listening for an event/action that says the user ID is valid and automatically begin to get the set of posts from the server. A navigation reducer could also be listening for the same event and take the user to the posts view. Nicely decoupled. But down the track you may have more event orchestration to keep track of.  ",1516314358.0
demoran,"I think you need to dig into the fundamentals of redux.

You create a redux store, and on that store there's a `getState` method.  This is how you access redux state (ultimately - more on that in a bit).  

To modify that state, you dispatch actions via the store's `dispatch` method.  An action has a `type` and anything else you want to pass along.  Dispatched actions are passed to your reducer.

Your reducer sits at the top level of your state tree, and it changes state based on the actions it receives.

`redux-react` adds in a bit of magic, as does the ubiquitous `combineReducers`.  `redux-react` gives us a `connect` function that allows us to bind changes in our store's state to component `props` via a `mapStateToProps` function.  mapStateToProps is the main way you'll be accessing state and passing it in to your components.  Connect also allows us to pass in action creators to our component via a `mapDispatchToProps` function.

An action creator is a function that returns an action.  In the context of `redux-thunk`, it may be a function that returns a function that can dispatch an action.

Your side effects should take place in your thunk action creator, not in your reducer.  For example:

    export function validateUserId(userId) {
        return async (dispatch) => {
            const userIsValid = await apiGetUserIsValid(userId);
            if (userIsValid) {
                dispatch({ type: ""VALIDATE_USER_ID_SUCCESS"", data: userId });
            } else { 
                dispatch({ type: ""VALIDATE_USER_ID_FAILURE"", data: userId });
            }
            return userIsValid;
        }
    }

You might do something like:

    const viewUserPosts = async (userId) => {
        var userIdIsValid = await apiGetUserIsValid(userId);
        if (userIdIsValid) {
            navigate.to(""posts"", { userId });
        } else { 
            Alert.alert(""That's not a valid user id!"");
        }
    }

Notice that we're passing the userId here directly to your navigated component, rather than attempting to store what you should be looking at in the redux state tree.  At this point, you don't want to lean on redux for the userId.  Instead, you may want to populate `state.posts[userId] = [ ...postsFromApiCall ]`.

I guess the important thing to remember is separation of concerns - your reducers don't have side effects, and should be fairly ""pure"".  You'll want your api calls to happen either directly from your api service module or as part of a thunk action creator (which should lean on the aforementioned module).",1516361302.0
tcc8,"Are you referring to communicating between javascript in a WebView?

If so, look at window.parent.postMessage",1516387588.0
damienlasvegas,Do you have a twitter act. We can follow?  This is a great post thank you Adam.,1516290065.0
superlameandawzm,"Good post :) about the app not showbil right away in the Apple App Store is because the App Store needs to index the app, and that takes some time 👍🏻",1516299133.0
anuragdadheech,Nice little app. Good work. 🙂,1516304471.0
NaveNocab,"This looks really nice, great work Adam! 😁🎉🔥",1516315632.0
kbcool,"It's not snowboarding season in Australia yet but you might want to make it available here. Bit hard to critique without.

That being said Im guessing the reason it was done in a record 12 hours is scale. Once you have gotten over the ramp up period for react and react native which are quite steep if you don't do the former first then you can knock out small apps quite quickly.

Apps with a backend, content, the need to persist state and quite some number of screens tend to get quite complex quite quickly. It's not a problem limited to react native of course but my cautionary side says please let wanna be Facebook app killers know it's not all roses.

Anyway open up access to Aussies I'm sure plenty of my fellow snowboarding pals want to try it out.",1516364926.0
QueenUnicorn4Dayz,"Nice work on this, have any plans for future updates?",1516391383.0
JustOr113,"I didn't get how the scoreboard works, but looks nice! I wonder if you can get 60 fps, on my lg5 it's a bit laggy, but still fun!",1516268629.0
orphans,"For what it's worth, that's how I did it too. I'm curious if there's a better practice available.",1516280410.0
scotty_pimmpen,I'm recording one right now that uses expo with GraphQL and Apollo,1516251178.0
peartreeer,"You can pretty much just follow any react native courses and get the same out of it. You won't need to do any setup, and when ready to deploy you can follow their guides on the site. But the rest, ie building a mobile app is the exact same.",1516233573.0
demoran,I had no idea about Nebula.  Thanks man!,1516239196.0
kingbin,Recently learned this the other day. I didn’t know the gradle command though. Thanks!,1516246978.0
Binford46,"Preface: I decided to start answering questions on this sub but am by no means an expert. 

Things that jumped out at me. 

this.state=this.defaultstate towards the front of your app. Why not just initialize the state with your default state from the get go and create a second default state object. 

I say this because to me in my head, your state.page + 1 call would always return what was on the page already plus something additional, causing your duplication errors. Again, I'm no expert, I have 1 barely functional listview app to my name, but it seems like you should be doing your page+1 outside of this.setState in order to avoid the problem you are describing. 

PS, one of the reasons I like to answer these questions even though I don't know the answer is that if I'm horribly wrong, some smarter person comes along to call me out and fix your issue for you (and teach me along the way), so here is hoping either we solve the problem or get it solved! ",1516216896.0
trevoreyre,"Forgive me if this is a stupid question, I'm not that familiar with React Native and iOS development. But I thought the idea behind React Native is that it renders native elements, which I thought would make a UI kit like this unnecessary.

Does this provide elements that aren't available natively, but still fit in with the native iOS aesthetic? Or something else? What am I missing?",1516208356.0
rodrigoelp,Are you guys thinking on adding typescript support? If you have the flow description it should be relatively easy to generate the type defs ,1516189271.0
mickey_abbott,Is the site down?,1516215328.0
ziggy723,"It's pretty straightforward if you ask me (thank me later):

Step 1: https://www.udemy.com/understand-javascript

Step 2: https://www.udemy.com/the-complete-react-native-and-redux-course

Step 3: https://www.udemy.com/react-native-advanced",1516179037.0
jjssjj71,"Nice article, nice list of resources at the end of the article too.  Thanks!",1516164978.0
realbriank,bring on the click bait!,1516138928.0
magnakai,"If you like this, check out https://github.com/redux-observable/redux-observable/. We’ve been using it heavily in our React Native app. It’s fantastically useful.",1516139603.0
SizzlerWA,So this would be to observe things in code that’s outside a RN component because otherwise you’d just use mapStateToProps right?,1516294994.0
Abaddon_OD,"There's a pull request with a fix here: https://github.com/wix/react-native-navigation/pull/2545

For now I'm using the pull request authors fork/branch. In package.json ```""react-native-navigation"": ""APSL/react-native-navigation#rn52_android""```",1516194836.0
Binford46,"Problem looks like it's a fault of how Gradle is building your app- two things I'd check

1) run react-native link react-native-navigation to see if there is a missing symlink. 
2) Launch android studio and watch the gradle build process that way, see if it comes up with suggestions. 

I'm not a pro, I've just fuddled my way through android studio with react native, so let me know what you encounter and I can hopefully share some of the weird fixes I had to do. ",1516131589.0
alppawack,I had same problem. I couldn't find a solution and just moved back to react navigation. Which version of react native that you are using? I am using 0.51.,1516176372.0
kbcool,"The short answer is you can't.

The longer answer is look at post message/onmessage that lets you send messages between your web page and react native. As usual the official doc's are hopeless, here's a good writeup:

https://medium.com/capriza-engineering/communicating-between-react-native-and-the-webview-ac14b8b8b91a",1516152763.0
NaveNocab,Expo contains a lot of Google play services already; adding RNfirebase can be tricky. You have to effectively merge the two libs together on Android. iOS was super easy though 😂😜 I find it hard to leave the Expo APIs so this seemed like a logical template to create. ,1516099175.0
,[deleted],1516093836.0
kbcool,"I googled ""react native adhoc network"" because you peaked my interest. Plenty of results. 

Anything you can do natively you can do in react native as all you have to do is create a native binding. The net result of that capability is that pretty much everything native has a binding that's either complete and mature or enough to get you started.",1516079702.0
boomdoodle,What is an ad-hoc network?,1516072972.0
dmvjs,take the second offer,1516042132.0
ismael_m,"I say go for 2nd and find a personal project that you are really passionate about, then develop an app in RN. hopefully your side project can turn into a full time business and off you go!",1516055692.0
kbcool,"Smaller company:

Pro - generally get to make choices yourself
Con - more visibility and more key man issues  - do you want to have that pressure?

Big company:
Pro - You can slack off every now and then and someone else will pick up the slack, more job security

Con - Work can be boring sometimes and politics means your productivity won't be as high

This question isn't about react native as such it's about lifestyle.",1516058594.0
geirman,"Personal story:

I was faced with a similar decision once, many years ago. I had two offers. One as a web developer for a startup. A second managing the IT for a large, well-established and respected company. I had very little web development experience at the time, but that was my passion. I had a ton of enterprise IT experience, so that job offered to pay significantly more money. I went with the startup and never regretted it. And ultimately, I think it lead me down a far more lucrative road as well. So my advice is follow your passion and intuition. You're probably right, and can't go wrong!",1516093836.0
alien3d,i take second offer..   also..  ,1516103251.0
loledgamer,"I am significantly younger than you, I may be wrong, but family is first man, with the second option you will have healthcare, and would not think about that, and you can concentrate only on the job. So you decide, do the best for yourself and your family man! Good luck, write a post after few months when you establish yourself, would love to read that!!! Good luck mate!",1516129871.0
iwantt,take the second offer and keep doing individual projects on the side.,1516044305.0
hey-its-matt,I think you have the wrong subreddit.,1516041745.0
too_much_exceptions,"Hi,

I think that the issue is here:
symbols:responseJson.symbol.

From reading the docs, the symbols endoint yields an array. (There is no symbol property in the response root).
",1515996259.0
hutxhy,"use the renderItem method, render a custom component, pass in the data into that custom component, and handle your onPress in that component. (essentially you'll pass the nav prop to the child component in renderItem, then do `this.props.navigation.navigate('someNewView', anyPropsYouNeed)`)",1515969083.0
rodrigoelp,"Hi, there are two ways you could do something like this... One is to use flexbox and animate the value of each box in parallel. You might also need to track the state of all three boxes so you know which one is expanded.

The second approach is to animate the height of each box, which might be a tad weird.

I am going to create a git repo so you could take a look at the code.",1515974008.0
youssefsami,I’d appreciate any feedback on my first tutorial. Thanks!,1515958408.0
guywhodoesstuff,"Okay fixed it by adding this to Info.plist

    <key>NSMicrophoneUsageDescription</key>
    <string>This app uses the microphone</string>
",1515955439.0
boomdoodle,"Looks good, nice to have the input feature on Android similar to the iOS dialog.Why the need to link if it is pure javascript?",1515992847.0
pnerdalicious,I use axios and then attach a JWT (JavaScript Web Token) in the header. You can use promises or async/await.,1515912923.0
boomdoodle,What do you want to do? Why do you think you need a service worker?,1515913050.0
elibones,Genymotion - https://www.genymotion.com/ I find it much faster than the Android Studio emulators. And it's free for personal use.,1515895773.0
ismael_m,"Currently I use Android studio which will create any kind of device with any dimension you need. Also installation of Google play services is pretty easy.

Also the device factory  in AWS will come in handy when you want to test your app in multiple devices. These are real devices all connected and AWS will give a full analysis of your app in all the devices that you select and a quick video of each one.

But that is for after when you are ready for deployment, for your local development tho, Android studio and it's emulator should do the work",1515899800.0
strahdvonzarovichh,Most people says Genymotion is best and free..,1515958597.0
rdrigocs,"Maybe profiles is undefined in the first rendering, you can see it in the console because it’s an object, try logging some primitive property from profiles like profiles.id, how are you setting your profiles in the state?",1515882742.0
coinengineer,Set the profiles before render time. Like on init or componentWillMount.,1515892518.0
fxnick1,"If properly installed, react-native-firebase should build fine with your RN project. I don't use Deco though. Have you tried just running ""react-native run-ios"" or ""react-native run-android"" via command line?",1516256604.0
akie,"I do on-the-fly rescaling with [Croppa](https://github.com/BKWLD/croppa). Basically I generate 5 links with common sizes / ratios and then pass that as an array into the Image “source” attribute. The Image component will pick the most appropriate one, and my server will only generate it (once) when it is actually requested. After that it will serve the resized image without even touching the application. You can clean out your “resized images” folder automatically for images older than (say) a month or so, to minimize disk use. Overall I think  it’s a win-win-win setup 👍",1515872890.0
bgandy94,I just store a full resolution image in storage bucket and also a scaled down version as a thumbnail. With the combination of those two it should allow you to accommodate any various number of resizing requirements while also allowing you to only get the thumbnail initially for preview. Hope this helps,1515861868.0
NaveNocab,"Firebase cloud functions have some really good examples of uploading images then resizing and saving thumbnails. They use ImageMagick https://firebase.google.com/docs/storage/extend-with-functions#example_image_transformation
I wouldn't recommend this for anyone not using firebase though...",1516098751.0
camelCaseLiberal,"Photoshop is always a winner bro.

",1515904556.0
Axenu,Expo XDE have a tool for uploading your app to their servers for hosting. Then you just share a url with your friends and they can use it any time! Its call publishing in expo,1515831743.0
foo13,Why can’t you just build and install it on your phone?,1515846127.0
foo13,Open Chrome developer tools and add some debug breakpoints to step through the app page/component at a time.,1515835712.0
arya_minus,PRs will be appreciated,1515816602.0
Heka_FOF,Just build a real app without Expo like real RN developers? :D,1515757351.0
shivawu,"Really nice post!

If I'm understanding correctly, the compositor passes the navigator object to all of its children, but if there's a component deep in the stack, the navigator object would have to be passed all the way down? Apologize if this is a n00b question since I have very little understanding of redux
",1515866147.0
soulglo_,"The idea is that it is a drop in replacement for FlatList, but it tracks the scroll position and apply the effect to any Parallax images in the rows.

Keen for any feedback and suggestions! ",1515719360.0
gbland777,This is really cool. You ever think about making this for a horizontal scroll?,1515723233.0
christoshrousis,"Good idea man, I also like the idea of a horizontal scroll. Good luck!",1515728642.0
glacierdweller,"Good job OP, star-ed for future reference, might try this out.",1515758868.0
jamesdeleany,"I just tried it with a new project and the parallax effect doesn't work.
There are no errors, the images render just fine but without the desired effect.
Also tried your example without changing anything and it's the same result.
Do you have an idea as to why this doesn't work(maybe it's something to do with the props, can't think of anything else really...)? Also can you test it with a new project?",1516688390.0
jahans3,"Not sure I 100% understand the question, but generally if you have app-wide data that needs to be used by multiple components it’s fine to put it in the store.",1515696441.0
davidpaulsson,Yes,1515704158.0
rco8786,"Your question is kinda gibberish, but somehow I can still tell you with certainty that the answer is yes. ",1515737057.0
TheSacredBroom,look at [tipsi stripe](https://github.com/tipsi/tipsi-stripe). I used it without a problem.,1515672992.0
warriNot,"OP  question before I answer. 

 Are you using Expo or not?",1515689627.0
SocratesBalls,React-native-web. Shares much of the same code of React-native but built to be used for web applications. It'll give you the best bang for you buck if you're looking to share code between web and mobile apps.,1515679945.0
BuggerinoKripperino,[Take a look at this.](https://youtu.be/8qCociUB6aQ),1515680334.0
Technotopia,"I love this tutorial. The only issue is that it skips around a lot.

Like all of the sudden there is a reducers folder, or there is more code in api.js without explanation.

Is there a reason for this? Thanks!",1515754893.0
Supa_C,"If by load you mean ‘render’, then nesting that component will ‘load it’. 

<ParentComponent>
  <ChildComponent /> // Screen to load
</ ParentComponent>

You can set a flag in the render method of the child to not return its appropriate view until ready.",1515637472.0
crowbar87,Is this what you're referring to https://github.com/wix/rn-synchronous-render ?,1515674607.0
billmalarky,"In case you missed it yesterday this is the post I'm referring to.

https://www.reddit.com/r/reactnative/comments/7oyw7z/react_native_queue_advanced_jobtask_management",1515599170.0
boomdoodle,You could try opacity instead of shadow. ,1515597682.0
rdonnelly,"You could try layering a couple out linear gradients on top of a ScrollView using position: absolute. Pin a linear gradient to the left and right side of the container like:

    <View>
        <ScrollView />
        <LeftGradient />
        <RightGradient />
    </View>

Seems like maybe https://github.com/react-native-community/react-native-linear-gradient could make the gradient. Just spit-ballin' here. :)",1515598981.0
jahans3,"I tried it a good few months ago and while it worked (mostly) it was a pain to even get it setup and the docs weren’t good at all, in some parts they were just plain wrong and I had to go digging through the code just to get setup. After encountering more and more obscure bugs I decided to just call it quits. The repo was barely active at that time either.

Tried it again a week ago and it doesn’t seem to have made much progress. The repo is active again at least, so hopefully so it’ll become useable before long. Docs are still pants though.

I gave up and went for RNRF v4, which actually uses React navigation underneath and offers a great API for it. Still early days but the project is actively maintained and the amount of effort they’ve put in to get React navigation working really shows.

I hate to crap on open source projects but React navigation isn’t being developed or maintained well at the moment, so unless you like unnecessary headaches I would wait a while, even if it is the officially supported navigator.",1515588310.0
kbcool,"StackNavigator still keeps a list of your screens in memory (and I might add mostly mounted - NFI what the unmount logic is). I had to write some custom middleware to reshuffle the stack to remove dupes and I'm still running into issues where there are dupes. Not good for memory usage and even worse if your app relies on there only being a single instance of a screen which is more edge case as is mine. Lots of people asking for an option for de-duping for many many months.

Had I known all this I would have gone elsewhere but I feel it's too baked in now to give up.",1515659244.0
RavenStorms619,"The dup issue is a problem but I'm not seeing the other issues. My biggest complaint was changing tab text required a reload but they've fixed that I believe. Also linking is manual most times on Android now because of the changes to MainApplication.

Other than that it's okay and I'd rather stick with native, the space just isn't great right now with RNN v2 and Airbnb's native-navigation both being in early iterations.",1515814893.0
too_much_exceptions,"Hi, 

What about wix react native navigation?
I have two apps writting with this lib. Pretty strong lib. 

You want a JS only navigation lib ?",1516003586.0
dduko,"tabs in react navigation is very slow, even if you have nothing on those tabs :(",1515600861.0
icekeymon,"Are you looking to improve your overall React Native skills? Or focus on specific areas?

I've read a lot of praise for Stephen Grider's courses on Udemy. I've purchased his Advanced React Native course and it's great. I've completed only one chapter of it though. There's another titled ""The Complete React Native and Redux Course"". **If you purchase through Udemy, go Incognito and check for discounts**.

There's a book from the Fullstack React team. It's incomplete at the minute with a lot of chapters being written, you'll get an update for free once released - https://www.fullstackreact.com/react-native/

I've also just bought React Native Animations from https://reactnativeanimations.com/ because I want to improve on  Animations within React Native. If you're interested, the coupon code ""turkey"" will give you 60% off.

I'm sure there are more, building applications will help you improve your skills. When you're stuck on a problem, look at the documentation first and then if you can't find any solutions, read up about it online and learn it.

Just my $0.02",1515582275.0
billmalarky,"Do you already have a deep understanding of React and react/redux architecture?

If not I would start there first.",1515599042.0
scotty_pimmpen,I have a basics series released here: https://www.leveluptutorials.com/store/products/tutorials/lut-dd014 and am doing an intermediate series with GraphQL that will be released later this month.,1516149298.0
ismael_m,"When I started RN development I quickly found out that development in a Mac is much easier than developing in windows. One of the main issues I had I windows was that some times when it tries to make the bundle you are going to deploy to your emulators, windows locks up the files and then if you don't know, you spend a couple of hours trying to figure out what is the problem but it's just how windows operates.

For daily development my environment is  Visual Studio Code (not to be confused with Visual Studio) VSCode is free and super lightweight and awesome. I use it for RN and NodeJS development.

I have not had the need to use Expo, I hear a lot of great things about it and one of my friends uses it and he lives it. He claims is very easy to deploy from Expo to the markets.

You will need to have an Apple developer account, which costs $99 a year. And if you want to deploy to Android you will pay $25 a year.

As fas as I understand you need to have XCode to compile and deploy to Apple store, this might not be needed if you use Expo but I'm not sure about it.

Lastly, when I finally cave in and admitted I needed a Mac I bought a late 2012 for $400 spent $150 in a SSD and $100 on 16gb of ram. Set it up all myself and I have a very badass development machine.

Do not listen to the naysayers that RN is not ready for prime time, so far my app does not feel laggy or fidgety, I include real time chat feature, map view and animations and while is not 100 perfect is out there in the markets and I'm getting ready to start marketing and such.

Hope it helps",1515561107.0
iceporter,avoid expo/full javascript and embrace native code. that is my advice.,1515553398.0
geirman,"You don't find them in chrome dev tools because network requests are handled in native. In order to inspect network requests, you'll need to use a proxy such as the one found at charlesproxy.com",1515557011.0
icekeymon,"`GLOBAL.XMLHttpRequest = GLOBAL.originalXMLHttpRequest || GLOBAL.XMLHttpRequest;`

I can't take credit, https://stackoverflow.com/questions/33997443/how-can-i-view-network-requests-for-debugging-in-react-native.",1515582514.0
healthyskin4lyfe,"If you run through Expo, it has a built in (albeit rudimentary) request inspection tool. ",1515562580.0
loledgamer,Just use [react-native-debugger](https://github.com/jhen0409/react-native-debugger) it will also help with state management debugging. Hope it helps!! ,1515573918.0
hey-its-matt,I suggest reading [this post](http://www.catb.org/%7Eesr/faqs/smart-questions.html) to ask questions in such a way so that the users here can help you.,1515533485.0
beastlyfurrball,"Why not use [takeEvery](https://redux-saga.js.org/docs/api/#takeeverypattern-saga-args) to simplify it even more? 

In fact you could take it even further and do something like this: 

    function* track(action, event) {
        yield takeEvery(action, function* () {
          yield call(window.ga, 'track', event);
         });
    }

    function* analytics() {
        yield call(track, 'ADD_TODO', 'todoCreated');
        yield call(track, 'DELETE_TODO', 'todoDeleted');
        //other analytics to track
    }

edit: formatting",1515522348.0
jahans3,"Is this what you’re looking for?

https://gist.github.com/boopathi/27d21956fefcb5b168fe",1515502506.0
d3fkonMusix,"Amazing job! I'll give it a try
",1515478116.0
com2kid,"Lots of Firebase tutorials on similar ideas. You can probably re-use one of the chat tutorials and get pretty close, just need a few more levels of nesting in the UI and the backend, which Firebase is pretty good at.",1515522549.0
billmalarky,"Hi guys, you might remember me from the thread where I shared another package, [react native image cache hoc](https://www.reddit.com/r/reactnative/comments/7alqhq/a_react_native_image_caching_persistence_library/) I've built a while ago. Well I got a lot of great feedback and encouragement from you guys then so I've been pretty excited to share my new library with you as well.

**React Native Queue is a priority job queue made specifically for RN and mobile use cases.**

**It's sort of a swiss army knife for task management**, and integrates really well with [RN workers](https://github.com/devfd/react-native-workers) (for processes that require extra performance and should be processed in a thread separate from the main RN js thread). It also integrates well with [OS service](https://github.com/jamesisaac/react-native-background-task) packages and makes it really easy to handle processing jobs in the background when your app is closed.

Some random example use cases:

* Downloading content for offline access.
* Media processing.
* Cache Warming.
* _Durable_ API calls to external services, such as publishing content to a variety of 3rd party distribution channel APIs.
* Complex and time-consuming jobs that you want consistently processed regardless if app is open, closed, or repeatedly opened and closed.

Love to hear your questions & feedback on improving the package!",1515422924.0
demoran,"Yes, let's back this with realm and NEVER BE ABLE TO DEBUG AGAIN.",1515446713.0
,[deleted],1515594034.0
kbcool,"Umm..doesn't a re-render occur only when props change? I understand what he has said is inefficient as you're creating new anonymous functions constantly but the use of arrow functions alone doesn't create the inefficency it just compounds it.

My point is don't sweat the small stuff when you may have bigger issues. I've got a damn complex app I'm near to finishing and the global state (redux) is going to be my downfall and so far it's not been the problem I thought it would be. ",1515404094.0
demoran,I've seen that [somewhere before](https://medium.com/dailyjs/demystifying-memory-usage-using-es6-react-classes-d9d904bc4557).,1515448244.0
Singsteg,I commonly write my new components as arrow functions before I know it's necessary that it needs lifecycle events. Are there any better methods I should follow to writing components?,1515544829.0
wsucoug,"Very clear instruction for both Android and iOS. I don't have any native apps ready to test it out yet, but I found this super helpful for understanding the process. Thanks!",1515362799.0
ReactiveNative,Created a new account just to bookmark posts like this. Going to be needing this soon.,1515370291.0
jamongkad,Awesome thank you!!,1515373449.0
besaph,"This is not a question about react native. If you want to log in with credentials of a site you don't maintain, you'll need a way to communicate with the existing auth system... talk to the IT people of the site who's auth you want to use.",1515351607.0
rodrigoelp,"Wow... no comments, nothing on this uh?",1516748568.0
Jaymageck,"If you use a JS-based navigation solution, JS thread blocking can cause serious jank in navigation transitions.",1515283456.0
alien3d,both un perfect anyway..  Same as  native experience..  If you follow the guideline okay.. If you want to do away from guideline.. It's nasty hack would said. ,1515300241.0
alppawack,is Wix's solution works with rn 51? I am getting bunch of native error's that I can't handle.,1515322567.0
living150,What? ,1515286929.0
BuggerinoKripperino,"Hmm not entirely sure I understand the problem but maybe take a look at using the Animated module built into react native, you can set the value that your slider outputs as an animated value and extrapolate the correct points, it also can 'clamp' so you wouldn't go outside the bounds of the value you enter. [Take a look at this if you're not so familiar with the module.](http://browniefed.com/react-native-animation-book/)",1515486970.0
lovestowritecode,"AirBnB has given the project to the community, the repo has a ton of unsolved issues and has fallen into disrepair ",1515257853.0
Noitidart2,"Thanks for sharing this, it is super helpful.",1515270568.0
Noitidart2,It would be awesome if you could make a npm module out of this when it is ready. That morphing in the only demo seems to be SVG. May you please share a link to that online one?,1515270367.0
ismael_m,"This is very helpful, thank you for sharing",1515219140.0
uokesita,Maybe Async Storage? I would search for local storage in google.,1515179900.0
cloudprogrammer,AsyncStorage and redux persist are both good options depending on what you want. ,1515195824.0
fxnick1,"I also use Firebase, but use React Native Firebase which runs all firebase connections on the native device thread instead of the app's JS thread, improving performance significantly. RNFirebase automatically persists authentication state across app launches because it authenticates via the native SDKs for iOS and Android. This also fixes issues that the Web SDK has with Auth detection for Firestore security rules and issues on Android such as JSTimer warnings that maybe thrown or WebChannel connection issues with Firestore.

There are workarounds for those issues so if you use the Firebase Web SDK, you can use the setPersistence() method to set auth persistence to LOCAL and this would persist authentication on the device. 

RNFirebase is harder to setup, but also helps to familiarize you with dependency management with each platform. I went through the transition a day or so ago, so it is something you can go back and do later if you choose. Nevertheless, I'd start with RNFirebase if I could do it over again. ",1515400473.0
redpopcornpanda,"So I use Firebase for auth in my app, and it saves state by default for you. I'm not sure if a cookie is the best way to go since that's more of a browser thing than a mobile app thing. The server token is probs just so the server can say ""yes you are already authenticated, here's some data.""

If you want to persist state (and if you're using redux), you can do something like here I think. (Haven't tested tho) https://medium.com/@sumitkushwaha/syncing-redux-store-with-asyncstorage-in-react-native-2b8b890b9ca1",1515194903.0
mmieszek,"Hi,

I want to share my React Native knowledge by creating a complete RN course, that takes users from an app idea to releasing the app. I want to share all my experience I got after over two years of React Native development.

I thought it would be fun to ask you here what you wanted to learn about.

If you could just take 3 minutes to tell me, what is your greatest RN challenge, I will be able to design the course specifically towards your needs.

Thank you, it means a lot to me!

Marcin",1515173217.0
the_new_creative,"Quickest/Best/User firendly authentication potentially with social networks/Gmail.
How to work with camera, storage, notification, alarm APIs.
Describing how to format differently for different phones.
Persistent state for opens.
Knowing what needs to be written differently per platform.

Edit: Also Location/GPS  API",1515174672.0
DasBeasto,"I swear I still have not had luck with sizing externally loaded images while keeping correct ratios.

Some tutorials recommend using Dimensions.get(“window”). But then of course you’re working with the size of the window not the parent element, you can start subtracting but then it seems hacky.
Recently started using onlayout which is more successful but that only occurs on first layout and I’m doing calculations on render which I feel is wrong.
You can try loading packages like React-Native-Fit-Image but they never seem to work, mainly end up giving the image no width/height.
For some reason no matter what I do I sometimes get a weird flicker like it can’t decide what size to use so it changes constantly.

So basically, images...",1515459939.0
kbcool,"Why? Machine learning is pretty intense. You going to ask people to sit there and wait while you train up ?

Just take your photo, get your data etc then send it to the cloud to process.

People have and do some basic processing for machine learning using opencv which has some bindings but I would doubt many people have wondered like you whether tensorflow would even work on a phone let alone react native.",1515278362.0
gianpaj,"I've tried this one and it works
https://github.com/reneweb/react-native-tensorflow

See the `ImageRecognitionExample`folder",1527356121.0
grabbou,"I wouldn't worry too much about the fact that there was no update or clarification yet.

Facebook and many other companies, including Microsoft and their Skype app, are extensively using React Native in production. Their employees are already contributing heavily to the repository on regular basis, working on whatever is on their internal roadmap for the framework. 

The support will land, it's just a matter of time. I will highlight this concern at the closest meeting and get attention from Facebook.",1515166677.0
alien3d,"i targeting to learn swift, objective c same time.. if anything failure upon debugging.. don't rely  much on outdated dependency . 
",1515300310.0
demoran,"The redux store holds shared application state.  To update the state, you use store.dispatch() to throw an action at your reducer.  The reducer is like ""Oh, let me see how I need to respond to that action - based on it's `type` property"".  

The reducer is just a function that takes in the existing state and an action.  Redux invokes that function when it receives an action object (ie an object with a type property) via dispatch().  It invokes the reducer function you gave it and passes it in its current state and the action you dispatched, and sets its state to whatever the reducer function returned.

Now usually we have multiple ""reducers"" which are combined into a single ""root reducer"", each of which handles a single slice of state.  So you structure your application state using `combineReducers`.  For example, if your state is like `{ puppies: [], kittens: [], employees: [] }`, you'd have a puppiesReducer and a kittensReducer and an employeesReducer all combined via combineReducers.  You actually provide a map to combine reducers, saying ""I'm going to define slices of application state to you (ie properties on the state object).  For each slice, I want you to use this little sub-reducer to handle it.  Whatever that function gives you back, use that as the value of that slice.""

You're going to wrap the root of your React Native application in a `Provider` component to which you assign the redux store.

Then, when you export your other components, you can wrap the export in `connect` and give it two things to make available as props in your component: parts of your state, and actions to dispatch.  

The state is pretty obvious, but the actions (or more properly, action creators) are invoked *through* store.dispatch.  So they're automagically dispatched for you.

One missing piece is ""Well, if actions just give a type and some data, how am I supposed to get that data?"".  Aside from the obvious (passing in the data through the action creator's function signature), the standard approach is to use `redux-thunk`.  Instead of your action creator returning an action object, thunk allows the creator to return a function, and passes in store.dispatch to that function.  So now in your action creator you can be like ""Hey, I want you to go get me some stuff from the API and pop that into my action's data and then dispatch that thing"" or ""Hey, I want you to go do this thing and if it succeeds dispatch this action and if it fails dispatch this other action"".  Your action creators are one of two places in the redux flow that ""allow"" side effects.

The other place for side effects is a bit advanced, but redux thunk is an example of its implementation: middleware.  Middleware just sits around the dispatching of the action and the processing of the action by the reducer.  So you can do things like mess with the payload, wrap in logging or persistence, etc.

Redux, of course, isn't the only solution.  I'm enamoured of [MobX State Tree](https://github.com/mobxjs/mobx-state-tree).  After watching the free [Egghead.io course](https://egghead.io/courses/manage-application-state-with-mobx-state-tree) on it, I was like ""This guy is a freakin' genius!""",1515143072.0
arguenot,"The [redux](https://redux.js.org/) website is very helpful, I found the Todo App example especially useful. If you just want to get started I recommend reading [Core Concepts](https://redux.js.org/docs/introduction/CoreConcepts.html) and glancing over [Three Principles](https://redux.js.org/docs/introduction/ThreePrinciples.html) from the Introduction. Then I'd jump directly into the [Basics](https://redux.js.org/docs/basics/) sections, which walks you through building a todo app using react and redux. That is how I learned to use redux with React Native, although they don't target RN specifically.

I had to learn Redux but it's not my favorite solution. I like mobx better, just a personal choice. I simply don't run into the problems that redux solves very well. I recommend looking into redux anyway since it feels ubiquitous now and it's good to try different things to gain new insights.

One thing that's worth mentioning is that it's actually very simple. My experience was this overwhelming feeling when I started because of all these weird words and concepts, but if you just look at what the code is doing and leave your prejudice at the door it turns out to be surprisingly simple (to start off with anyway). You just have to push through the weird names of everything and get something working in code. Good luck!",1515160755.0
redpopcornpanda,"I definitely agree that there is a learning curve. Mostly there are just a lot of very weird words - but remember they are just words! In reality, it's super duper simple to work with. Your react component just calls an action with data in it, then your reducer automatically produces the new state from that action, and any component that is connected to the state will update automatically! 

I personally use redux-saga for asynchronous operations, but that also includes a short learning curve because of the unfamiliar words.

I would suggest trying to think of it in terms of something you already know, maybe that well help it make sense!",1515170777.0
selyuu,Learn from Mr Abramov himself - https://egghead.io/courses/getting-started-with-redux,1515184864.0
ubermc,"https://www.udemy.com/react-redux/learn/v4/overview
No easy way around it.",1515537748.0
lau2222,"I don't have a tutorial but for [this project](https://github.com/laurent22/joplin) I've simply used gettext and po files. With gettext you can automatically extract all strings and have them saved to po files (The strings need to be marked in the files with something like `_('my string')`). These files are then easy to edit by whoever is doing the translation.

Then the tricky part is to get back the strings in the po files into the application. For that I've used the gettext-parser extension to parse the po files and I've generated JSON files (one for each language) from it.",1515146383.0
RavenStorms619,Use [react-naive-i18n](https://github.com/AlexanderZaytsev/react-native-i18n). You just have to define JSON with all your strings in whatever languages you want.,1515377972.0
european_origin,"This is content advertising in its worst form. 

There is almost no content in that article, only a quick praise for the technology this subreddit is about and about as many links to the app as possible.",1515192986.0
stathisntonas,“Continue with Facebook”. App deleted instantly.  Not everyone uses social media.,1515163688.0
,[deleted],1515119384.0
az_web_developer,"This pretty much explains it:

https://facebook.github.io/react-native/docs/style.html
",1515162638.0
ubermc,"It will mostly translate over, especially if he's using flex boxes. I guess it's situation though if the current website is responsive or not.

names are written like this
backgroundColor rather than background-color
(Could probably write a converter based on this)",1515538087.0
larspa,"Try contacting one of those recruiters (a.k.a. hyena's).
They will get you a job even if they had to donate a liver.",1515141451.0
Tall-Paul,"What you want to do is use map not FlatList. Map will allow you to position each exactly where you want.

Be careful though as FlatList doesn’t render everything in the list that isn’t shown while map will so if you have a long list you might want to render only a few and just keep adding one every time one is removed.

Forgive the bad formatting in mobile.

Const anArray = [{...},{...}]

Const results = anArray.map((item, index) => <SomeComponent />

return results. 

Does that make sense?",1515036262.0
Calbesz,"It sounds like a misinterpretation of a fairly common pattern.

I personally use the pattern of making a folder for each component named after the component. That way you can contain a stylesheet, tests and such all together with the component.

However while each folder does have an index.js, its a one liner file simply importing and exporting the component to prevent having to import like 'components/Foo/Foo' and being able to just do 'components/Foo'. All the logic and actual code would be in Foo.js within said folder.
",1515023719.0
BuggerinoKripperino,I recommend [reading this article](https://hackernoon.com/the-100-correct-way-to-structure-a-react-app-or-why-theres-no-such-thing-3ede534ef1ed) and changing things so they make sense for you if you disagree with any points,1515025331.0
chickenachos,"    <div>{['img1.jpg', 'img2.jpg', 'img3.jpg'].map(img => <Image src={img} key={img} />)}</div>",1514990423.0
alppawack,Maybe use Flatlist?,1515021687.0
MrHusmusen,"If you have an array containing the components, let’s  call it dogArray. In your render you can simply put:
{dogArray}",1514980755.0
jmcneese,Possibly https://uppy.io,1514964204.0
Buliam,Seems like [react-native-fetch-blob](https://github.com/wkh237/react-native-fetch-blob) does if I'm understanding the docs correctly.,1515091748.0
jmcneese,What about doing the chunking yourself with https://github.com/itinance/react-native-fs ? It looks like the api supports file seeking. ,1515226810.0
hatepoorpeople,I came across your repo. Nice work. I am trying to incorporate TS into a project that was started with create-react-native-app. There are some differences in how things are built in package.json. Have you ever tried to add typescript to an app that was created via create-react-native-app?,1516832837.0
peartreeer,"I've been working on a react/react-native app for about a month and most of the logic is the same, but the component names are different and there are different npm packages you may have to use.

Navigation in native is the most different, since my web is a SPA. But all of the rest of the redux and structure is pretty much the same. My tip would be not to upgrade as new versions of native come out because it can seriously break some of your code, so once you get it set up just stick with it.

Also be mindful of your dependencies version's when using react-native too.

Good luck!",1514956650.0
jahans3,"For sharing code between the two you’ll want to check out React Native for Web (react-native-web on npm).

I’ve personally never used it, but we discussed it at my last job before deciding against it because it was so new and untested at the time.

You write the app as you would with any normal RN app, RN for Web then does some jiggerypokey under the hood to convert the native components into web elements when building for the web.

Great in theory, not sure how much it’s improved since I last looked, lots of potential just something that seems very hard to get right.

For everything else like services, stores, etc. you should be able to just copy it over, however there will likely be some redundancy as certain things will only apply to one platform. ",1514982534.0
BuggerinoKripperino,Check out React Primitives by Airbnb. [This is a great talk on how it works and why it's a good option.](https://youtu.be/8qCociUB6aQ),1515025469.0
SkyzohKey,Take a look at that awesome lib => https://github.com/DylanVann/react-native-fast-image :),1515206538.0
ExtremelyQualified,Doesn’t work that way. The JS “remote controls” a standard set of APIs written in native code. It doesn’t turn into native code. ,1514953149.0
jahans3,"You can’t get an exact native clone without rebuilding it from the ground up and even then it would be fundamentally different.

You can however get a direct native equivalent for most components, since it’s just those native components being called from a JS layer. Learning the components can be really helpful in helping to understand and build better RN apps.

Try wrapping up a native component and exposing it as an RN component, that should give you a good idea of what’s happening under the hood.",1514978775.0
redpopcornpanda,"I mean, even writing a hello world app in each three would give you the absolute basics.


One thing to realize is that the programming languages are reasonably similar in the basics (eg flow control, variables, etc), but the sdks you use for each are really where most of the difference comes in. Writing Java with the android SDK in Android Studio is different from react native more because it's the Android sdk and less because it's Java. For instance, an Activity or a Fragment in Android are both important to know about, but neither is part of Java or Kotlin. 

I'd definitely suggest doing ground up in each different environment with something very simple. Once things get very advanced and you have a lot of state and you're using redux or something, the architecture and layout of the files is probably going to be vastly different anyways. In react native you just write a component to display UI, but android you have to ""manually"" access properties of an XML page for the views.",1514994452.0
dduko,"Show people what projects you've done in React Native, preferably something a bit more complex than the basic ToDo apps. A portfolio of React Native projects is nice, even better is if you have submitted an app in the app stores.",1514960618.0
BuggerinoKripperino,"I started my job 7 months ago coming on board as a React Native developer after 3 months of learning the framework while doing uni studies. I work at a start up company as the sole app developer and the important part of that is START UP. React Native is god's gift to start up companies, I'm the only full time developer for both the android and iOS apps. My advice is to make a portfolio of demos, and then set yourself up as a contractor and make yourself very public. Places like Airbnb and Facebook which famously use React Native can afford to be super picky about Dev experience. 

I should mention that I got my job because I knew the CTO of the company and I'm also a student on a placement year however I feel very comfortable with my knowledge and abilities to the point where I'll be starting to interview people soon to help out. The specific things I will be ask about are: state vs props, redux and other related helper libs, component lifecycle and then some iOS and android specific design questions. 

To address your final point about transitioning from React to React Native. If you want to work in React Native go work in React Native, contribute to some open source, write some small utility apps everything is a learning experience and everything you learn makes you more valuable and desirable. 

I hope this helps I have a tendency to go off on a tangent :)

EDIT - Flexbox is also v important and something I would ask about",1514968624.0
jahans3,"It’s still relatively new so you probably won’t find too many job postings around. We used it heavily at my last place and just replaced our native apps with a single RN app at my current job.

More and more companies seem open to the idea now, but that’s partially because they get to stick front end web developers on fully mobile projects. So you might not immediately find a job where it’s purely RN.

React experience is near enough as good as RN experience, you just have slightly different APIs. So if you can’t immediately find a RN job you won’t be wasting your time going into a React web job.",1514977381.0
kbcool,"I would say the market is far from saturated. I see two key reasons why all the ads for react native developers ask for senior Devs:

1) Risk - it's newish so businesses want to buffer themselves from risk with seasoned Devs who can fix problems 150 days into a migration rather than stalling

2) it's actually quite hard - easy to do a hello world app but I took on a very complex app and I'm struggling - there's so many ways to approach a problem and most are dead ends. Compare that with Java on Android for example and you have very few options and decades of mistakes already made

The third, bonus reason is - look at any job ad. They always ask for more than they want in the hopes of catching someone good who will accept shitty pay.

My best advice as I have been a hiring manager for over a decade now is to show me you can do it in your resume and your work and I'll give you a chance to prove it at the interview. The best way you can do this is to have projects that you have at least worked on and some contributions to open source (they can be one and the same). It might not get you past the HR filters but when I see these on a resume you get instant kudos.

Half jokingly - if you want some unpaid experience you can help me with some UI/UX in my app I'm building and opensource the components as your own work of course",1514960962.0
dracostheblack,I'd say get a job first. I work react native at work but we're just moving into it. I'd say find a place you like to work is more important. You can always do side projects still. ,1514949533.0
engnr,"We’ve had a number of organizations in our city adopt RN over the past year or so. I’m seeing notifications for job ads every few days. My last two contracts have been RN and there does seem to be a shortage of appropriately skilled people.

I recommend that you build some apps as portfolio pieces to show what you can do. It’ll make it a lot easier for employers to accept you.",1514961561.0
alien3d,"It not saturated  , but more on low cheap. I been in software development long time, most people don't have idea they wanted and cheap.. The most hard way is you need to create a portfolio.. ** but mostly i don't even used my old job as portfolio.. Find a problem , create a solution.. and then market  it.. As few job you do start, then  you can get job. 


Some developer will do the paid by hour scheme like 20 dollar per hour.. I don't understand how it work..E.g , you have a similar job and you need 2 hour.. So paid 20 dollar? I used to charge per project  and i been downvoted because of this.. Don't sell you live to devil.. it may devil customer outside there.. ",1514963267.0
hutxhy,"I mainly code using React-Native at work, but the tech is so new we actually have a hard time hiring people. We actively look for talent, but no bites. Conversely I've looked for job postings looking for RN developers and haven't found many.",1515007763.0
dduko,"link to SPAM, no thanks..",1514961079.0
lighthouse_at_eleven,Man I love Maximilian he is such a great teacher.,1514933677.0
crex68,Here's one: https://github.com/gitpoint/git-point,1514909564.0
-Alias-,https://github.com/invertase/react-native-firebase,1514927106.0
tongboy,"Depends on the license the libraries use. Most mit, bsd, Apache licenses don't require credits, most gpl do (or source code release if distributed/sold)

Research your license use and requirements",1514906950.0
nikke1234,"Hello, I've just released a tool called Laska (https://laska.io) which might be what you're looking for. I'd be grateful for any feedback!",1516951535.0
ceasterday,"I'm not familiar with anything like that for react native. Granted it's all preference based but I've been a professional software developer for 6 years and first learned to program 11 years ago. Pretty much everyone I know prefers to write UI code manually. The visual tools just never seem to quite get you all the way there, I would strongly recommend getting more familiar with writing the UI by hand. ",1514853727.0
liming91,You could try Deco IDE: https://www.decoide.org/ it's pretty similar to Xcode.,1514853508.0
MiLeungSF,"[react-sketchapp](https://github.com/airbnb/react-sketchapp)

You would need to buy the [Sketch App](https://sketchapp.com/) though for $99.",1514871725.0
Thelaith5,"There’s currently a tool by the Indian dev team of GeekyAnts called BuilderX: https://builderx.io/

I haven’t used it, but I know they make a decent UI kit in NativeBase, so you can give it a try and see for yourself.",1514949128.0
selexin_,What country are you in? We are looking for RN devs.,1514875980.0
syzygy033,Nice job!  What third party tools did you use as a part of this?  Did you have to do any native bridging?,1514826107.0
jeevium,"Congrats on the publishment!

I'm doing something similar myself over the past months and created a math game with RN for Android; soon to release it for iOS as well.

I am interested on what do you mean by ""Clearly selling app can not be a job if you are independent"" ?? Would you like elaborate on that?",1514894701.0
Tougun,You're probably doing a console.log(this) without using the remote debugger. It hangs when you try to log a big object without the debugger,1514823463.0
ccheever,"I haven’t seen that issue before. You may want to try the exp command line tool or create-react-native-app as a workaround. 

Are there any errors you are seeing that you can share? ",1514756855.0
apphut,"its Electron. Electron is pretty bulky. If you're running on an older PC or have a lot in the background, it'll do that.",1514834467.0
kaweed_deso,"Do you have it to debug js remotely? If not, try reinstalling or run the exp start command via the CLI",1514765477.0
mclxly,Sounds interesting. Do you have any screenshoot?,1514872357.0
ikbenpinda,"You might want to include a readme that says what it does, what it looks like, how to contribute, and how to set it up.

I'd be interested in testing/contributing.",1514889601.0
recycled_ideas,"Why do you have a 32 bit Windows 7 system?

As far as I can recall all Windows 7 keys are valid for both 32 and 64 bit and if you've actually got a 32 bit processor your machine is either too old or too underpowered. ",1514711447.0
brafique,I installed the Facebook Audience Network SDK for both the iOS and Android side and built the native ad components natively. I then ported then to a native UI components such that they would be rendered on the JS side. ,1514717024.0
healthyskin4lyfe,"Not officially, but I’ve done it before and it’s very trivial. Just copy over your source, wire up your App.js (has to be in the root directory due to Expos configuration), and make sure to npm install any dependencies you need. ",1514698523.0
the_ineptipus,"You never 'need' Redux just like you don't need Javascript or React Native.  But Redux is *so* easy to learn and so incredibly useful for managing global state, I can't think of anything more complex than maybe a kitchen timer app that wouldn't benefit from implementing some ducks.

I've actually only been using Redux for a few months, and I originally asked my boss the same question as yours.  The app we're building (like many/most apps) involves asynchronous calls to various data servers or APIS, which at their conclusion return different JSON objects to the global store.  Some of this returned JSON is responsible for how the main data feed is presented, but also is responsible for shaping other components (dumb example: a counter component in a separate screen with the number of yet-unviewed 'fresh' data objects).  

Since UI is a function of state and everything visible in the app is UI, nearly every major component ('containers') needs at least read and usually write access to the state, along with the guarantee of strictly atomic edits to a single state tree and (super important) the guarantee that an update to the state tree from *anywhere* will cause related UI updates theoretically *everywhere*.  

So instead of having to pass variables by hand between otherwise-unrelated components (ex: settings screen and main content screen), you simply subscribe to the property in SettingsScreen and call dispatch methods within MainContentScreen to trigger updates in all subbed components at once.

Redux is basically just a database for the lifecycle of your app instance, so that state property updates (UI updates) are propagated without you having to knot every component to all other components that can update your property.  Redux allows any child of your top-level <Provider> component (or even functions if you import the store's .dispatch() and .getState() methods)  to command/respond to changes in the global state. 
 Because (hopefully) those components are also hooked to the global Redux state, all you need is a subscription to that property in the affected component, which will be called every time the property changes and will at the very least trigger React to re-render.  And that's all Redux does.

That being said, Redux's beauty is its simplicity.  I found it confusing and too rules-heavy at first, but now I wouldn't want to write an RN app of even moderate complexity without it.

I'm curious to know more about your current solution for passing/persisting state, if you've got time to explain.

",1514675347.0
ceasterday,"You certainly don't have to use redux, I've done a smaller one off demo app without redux and it was fine. I am working on a larger app with redux at the moment. Unless it's a dead simple app I think I would always use redux with react native in the future. ",1514670973.0
themaincop,"One sign that you need (or would benefit from) redux is if you're doing a lot of prop drilling, i.e. sending props deep down a chain even though only the component at the very end needs the prop.  ",1514681832.0
rafales,"Depends on the app. Most of the applications doesn't really need redux at all, but it's the bandwagon everyone's jumping on currently.

Redux is for managing global state (one that's shared between many containers). If that's not the case then go for component state.

Also there is nothing wrong with mixing both. If you like redux way of doing things (reducers, actions) you can use something like `redux-react-local`. It's also easy to use reducers and actions without redux at all (just use reducer function to update component's state).",1514684825.0
SofianeG,You should check this: https://www.reddit.com/r/reactjs/comments/7mwjw6/i_dont_really_get_redux/?utm_source=reddit-android,1514678935.0
kingbin,I’ve found it useful when paired with thunk and custom middleware to handle socket.io server requests in an app I’ve been working on.,1514687322.0
eid-a,"If you don't need redux, you don't need it. ",1514694001.0
JuliusKoronci,"Redux is a skill you just have to have today..so worth learning it anyway. You are ok without it for demo applications, maybe even some presentational websites but once you start doing API calls and passing down props more than two levels you should use redux as it will save you a lot of time and problems in the future. The only thing to bear in mind is, that Redux is not easy to learn and use and it requires to change your mindset about working with data and how the data should flow and be used in your app. Cause I have met plenty of people saying how easy it is and none were using it properly and at the end they would be maybe better of without it 🙂",1514712803.0
AcidShAwk,You don't need it at all. Use the EventEmitter and you can do everything natively. I've been developing an app for the past year for both iOS and Android and one of the core requirements was no redux unless absolutely required. I personally favour Event driven design.. and it's worked out nicely for us. ,1514682581.0
cloudprogrammer,"Textinput has a lot of props, google react native text input and read the docs. Off the top of my head you're probably looking for multiline, max height, scrollable. And you can just use a style for the text align.  ",1514605543.0
SofianeG,"Hi mate ! 
React Native here. I chose React Native because I already knew React, and I did a lot of React web and React VR, so, I never asked myself the question, but I know that a lot of companies wanted to use React Native, and the only thing that made them change their opinion was the license (I think they changed it, can somebody check ?)

Furthermore, the big (+) about RN is that you can use native screens inside your app. As an example, Instagram uses React Native everywhere, but uses native for all the ""take a picture"" part.

Last but not least, React Native isn't just a webview, and that makes all the difference, the fluidity is better than many other technologies. If you want to see what it looks like, I have an app on Github that you can check: https://github.com/queue-up/QueueUp-Mobile-League/

Good Luck and Happy New Year to you too !",1514578531.0
ikbenpinda,"Disclaimer: Junior dev, only worked with Xamarin for a prototype last year, and only recently started with React Native.

**TL:DR;** Xamarin was dead, slow, and not as Cross-Platform as it said it was. RN is up-to-date + a lot faster in both development and app experience.

I'm leaning towards React Native, and here's why.

Xamarin sounds really good on paper: I mean, c'mon, _Code-sharing! C#! Native experience! Visual Studio!_

However, it didn't quite live up to the experience. At all.

1. **Language** | C#/.NET  vs. Javascript  
Unlike in RN, the platform-specific pieces of code are also in C#. This sounds like a great idea until you need to write platform-specific code. Every solution you find for your problem will be written in a language you don't get to use, so enjoy porting everything to C# yourself[\[example\]](https://developer.xamarin.com/guides/xamarin-forms/getting-started/hello-xamarin-forms/deepdive/#Launching_the_Application_on_Each_Platform) and hoping it still works. No plugins or native libraries to help you out there. At least in RN you get to see the native language per platform. I don't think you can just drop in native Android libraries in your /android folder, but at least it's easier to understand what's going on. Admittedly, if you aren't used to Javascript and especially ES6 and Babel(like me), the learning curve is a lot lower on Xamarin as the syntax is a lot less shorthand/pattern-based(like 'the usual' OOP instead of closures, functions, prototype patterns), but that loses its effectiveness fast when you're working with platform-specific code.

2. **Code-sharing** | Xamarin.Forms / [Portable Class Libraries\(PCLs\)](https://developer.xamarin.com/guides/cross-platform/application_fundamentals/pcl/)  vs. React Native ^and ^literally ^every ^.js ^library ^out ^there  
Out-of-the-box Xamarin comes with a set of cross-platform stuff. Works fine as far as I can recall, but in scope it was very limited. Want to do some technical background stuff? [Databases](https://components.xamarin.com/view/mysql-plugin)? [Local storage](https://github.com/dsplaisted/PCLStorage)? [JSON serializing without manually mapping all key-values 1-to-1?](https://github.com/JamesNK/Newtonsoft.Json) Nope. Forms is just for the typical Image/Text/Listview and some navigational controls. All those links are to third-party libraries. Which would be less of an issue if there were more third-party libraries, or at least if they weren't outdated/deprecated. But Xamarin used to be a paid framework, and an expensive one at that, so the community wasn't/isn't as big as with RN. With RN everything is still very dependent on libraries, but because it is Javascript and most libraries adhere to the same module pattern, i can just drop in stuff that wasn't even specifically made for RN with perhaps a few tweaks in a config file here or there. e.g: JS doesn't come with built-in date formatting, but i could just drop in [Moment.js](https://momentjs.com/) and done! Even with framework-specific stuff, most of it could be done with a few commands in the CLI: Needed support for custom fonts? There's a lib for that too, and all it takes is [some json](https://medium.com/react-native-training/react-native-custom-fonts-ccc9aacf9e5e) and a ```react-native link```.
It can be a pain to figure out why some libraries aren't working. [In some cases you simply can't see the forest through the trees, or the solution through the libraries.](https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f) But at least there are options.

3. **Tooling**  
Because I was using a Macbook(running a native iOS project on the side), i couldn't use the original Visual Studio(the typical .NET-tool), but some watered down version(~~VS Code or VS for Mac, don't remember~~ Xamarin Studio iirc). On a usually rather fast Macbook, this resulted in relatively huge build times(3 - 5 minutes), random crashes, and overall a very annoying experience. I tried switching to my Windows-laptop, but the random issues were still there. At some point I spent more hours fixing my environment than my app on some days. Probably me and/or probably fixed by now, but worth noting. With RN i just fire up WebStorm and Hyper, launch the app, and can see my changes reflected real-time with the hot/live-reload function(Which Xamarin didn't have). Works like a charm when working on simple views, not so great when it crashes and you're trying to figure out what the stack trace is saying.

All in all, Xamarin is a framework that (i think) still has great potential, but just wasn't meant to be.

So while my experiences with React Native so far have been love-hate as well, it's still ahead of Xamarin by far. Then again, it might just be the honeymoon phase.

",1514595503.0
erwan,"The question is probably: do you prefer to write Javascript or C# code?

Apart from that, react native might have a bigger community so you would get help more easily.",1514584316.0
gmaggess,"I vote React Native too, but Xamarin seems to be more adopted in the enterprise world. Depending on who your customer is Xamarin could be ur best option.",1514585667.0
arunkmoury,I started learning RN as it is faster then hybrid and good to start as it is emerging new platform.,1514710535.0
TheLordness,"Thanks for the videos, I’ve been following the English series and it has been great so far!",1514582097.0
Technotopia,These are awesome! What tutorials do you have planned for the future?,1514586300.0
ismael_m,"These are top notch tutorials man, thank you",1514588660.0
Bluecodejs,"Looks will try it out, Thanks",1514731150.0
Supa_C,Everything is fucking workaround for react native. ,1514560269.0
d3fkonMusix,Performance on large scale apps?,1514563738.0
amberpatrick,"I have solved this by using react-native init, as per the docs ha

You run the project via Xcode not the run-ios from the terminal, and select tvOS in Xcode

I then get another error about missing a library, open build targets for TVos file, remove that library and add the same one that IOS uses React.a
",1514567688.0
mescalito2,What are you using for server side?,1514569226.0
mescalito2,"When I type the password, the characters disappear faster than in a typical native app, do you know why is that?",1514569750.0
AcidShAwk,"Your setState is wrong. 

change 

            this.setState({
                pictureUrlArray
            })

to 

            this.setState({
                pictureUrls: pictureUrlArray
            })",1514487020.0
Toasttotheworld,Yes lol write code to determine if the user is within the bounding box of the room. Turfjs is a great library for your geospatial needs.,1514490936.0
OH_SNAP998,As an alternative store coordinates on a server/in a synced database (realm/firebase) so you don't have to push an app update if the coordinates change,1514520886.0
lovemeslowly,"Its dead simple...just make a polygon, get user location and compare.
I have done that using this library https://github.com/surialabs/react-native-geo-fencing
here is the example code
 https://pastebin.com/auUEhkEG",1514526226.0
julius559,Are your videos just you going through your blog posts?,1514520685.0
awakezion,"Hi are you planning to add a feature to record video+audio calls and save them to server/cloud ? Do you expect this to be complicated ? Thanks for the tutorials , please buy a microphone haha ! ",1521067587.0
,https://facebook.github.io/react-native/docs/navigation.html,1514462271.0
com2kid,"Find a tutorial series that helps you make a real app.

Go through it, ALL of it.

Then you'll understand navigation.

There are a bunch of different nav frameworks, pick whichever one you like, or whatever one you like the documentation for best.",1514510626.0
Technotopia,"Thanks for this. Im going to go back and watch all your React Native videos, and subscribe too!",1514496177.0
zhulf_drekker,"You can pass a ref through props.

Look here: https://reactjs.org/docs/refs-and-the-dom.html

Sorry I'm not sure if there are docs on this for React Native... I mostly us React so this might not be very helpful.",1514411673.0
SizzlerWA,Why does the callback need this?  Can’t it pass its ID or some other meaningful data within the business domain?,1514491351.0
amberpatrick,"thanks guys, I have slided on that project but I will get back to it shortly and Im sure this will help, I am used to just using this, from html and have the actual element passed to the callback function.",1514517280.0
rco8786,"This thread is making me realize how many people can “write React” but don’t have a grasp of JavaScript as a language. (Not you OP, just a lot of misinformation being spread in the other comments...trying to correct as I see it)",1514404905.0
antigirl,OP deleted all his posts. Yall gotta be nicer ,1514454472.0
,[deleted],1514352272.0
Heka_FOF,How this is better than redux-form which is totally awesome? :D Btw the medium article gives 404,1514369599.0
jahans3,"You could use a thunk in place of a ref (assume since you also said key you don’t need access to the ref object):

    onValueChange = ({ identifier }) => event => {
        // stuff goes here

    onValueChange={this.onValueChange({ identifier: ‘picker-one’ })}

Or inside your onValueChange you could see if the class property you’re using to hold the actual ref object is defined, if it is then do whatever you want with it:

    onValueChange = event => {
        if (this._pickerOneRef) {
            // stuff here

Or probably a better idea is to just do what you need to do inside each Picker component and keep it less tightly-coupled to your Form component.",1514315741.0
matt_hammond,"You could use an object to store the references to the pickers. Each Picker would get its ref set to

     r=> this.pickerRefs[pickerId] = r

Then in the onValueChange you can get it's ref through this object.

However refs are not really the React way. You should maybe rethink your problem. Think of it like this - everything in your UI is defined by the state. The state is the source of truth. You should avoid changeing the UI imperatively and instead change the state and the UI will follow. 

So if a Picker value or color or ",1514356214.0
engnr,I’ve used React-native-awesome-card-io with good results.,1514265152.0
epic2012,I'm using react-native-credit-card-input in one if my apps. Really like the UI it provides.,1514270591.0
loledgamer,stripe-elements!,1514459150.0
com2kid,"React Navigation has documentation on [redux integration](https://reactnavigation.org/docs/guides/redux), that is the suggested way to do it.

What is possible, and you shouldn't do, is deconstruct navigation from props inside the class functions you passed to connect, and then pass navigation into the redux actions that happen to use it. 

You can do that, it'll work, but it is somewhat ugly.

You *can* do this, and, it works, but your code ends up ugly. It looks like

    return (dispatch) => {
        dispatch({ type: LOGIN_USER });
    
        firebase.auth().signInWithEmailAndPassword(email, password)
          .then(user => {
            navigation.navigate('main');
            loginUserSuccess(dispatch, user);
          })

inside your action handler.

and your class's function

        const { email, password, navigation } = this.props;

        this.props.loginUser({ email, password, navigation });

But again, don't do this.",1514414467.0
123Code123,"I love Redux Saga. It helps you to abstract out the business logic out of your components. Function generators keeps the code easy to read. It might take a day or two to understand all that Sagas can do. But it will be a great tool at your hands.

In your case, I would create a Saga that does the following.
1. Takes auth request
2. Make a server call
3. Dispatch auth success/fail event based on response
4. If success, dispatch navigation event too

Your components just need to display the state. Your saga can be one point stop to understand what's going on during an event. ",1514253877.0
PM_ME_UR_PICS_GIRLS,"Great app Paul 🙂. I was thinking of building the same.  You are using styled components right? How good is it? I am not using any styling package. 


Couple of questions for you: 

-	Are you thinking of implementing any state management?
-	 Which API are you using for this?
-	Will your app scale well in iPads as well? I really struggle to apply flex in react native so as to scale it perfectly for every device 😓
-	Do you have previous swift/Android development experience? I am a react native developer, with no previous Swift/Android experience. 

Thank you. ",1514304366.0
BuggerinoKripperino,If you're using a recent react native version you can try using the lifecycle method componentDidCatch and alert the error so you can see what's wrong,1514190475.0
a_scottish_lord,"Did you add any native integrations in Android Studio? Try compiling it from there and see what errors you are getting. 

Sometimes I was able to compile from Android Studio and not the CLI because of some packages that had the same dependency and both are importing it.
Good luck!",1514193721.0
anonymousmouse2,Hm... looks familiar 😉 http://ustwo.com/blog/introducing-rando/,1514172405.0
BuggerinoKripperino,The app is very performant and if you didn't say it was react native I wouldn't of guessed. I'd love to know how you made the component with the image and a tap flips it to the map view.,1514191797.0
alppawack,Startup time is amazing. Did you use any library for that splash screen,1514200179.0
RavenStorms619,"Do you filter any content, if so how?",1514213137.0
foo13,"If you’re using `yarn`, rather than `npm`, then you should have a `lock`file, which ensures the same dependency version is installed every time. Although I think `npm` has finally introduced the same now.

I likely won’t take that long to fix the errors once you sit down and focus on them.",1514144794.0
beeseegee,"It could be the dependencies updated when you ran nom install after a long time. If the version numbers look like 

`^ x.x.x`

they will automatically upgrade to patch and minor updates, which in react native are very likely to become incompatible. You can force it to not do that by removing the ‘^ ’. worth a try",1514140454.0
loledgamer,"Yes, not updating RN, is quite pain in the ass, and if you did not update it in couple of months, its even bigger pain. New RN update comes every month, try to update it, with it usually comes new dependencies and peer dependencies, so try to keep up to date every RN project!! :)",1514141471.0
demoran,"For the most part, yarn / npm does a good job at managing dependencies.  However, gradle will suck you into a dependency hell if you let it.  If you're using + instead of specifying an exact version, then it can bite you.

What kind of errors are you seeing?  I'd recommend just creating a branch and toying around.  You can always `rm -rf node_modules` if you need to.",1514160720.0
antigirl,"You need to define width and height of the image. https://facebook.github.io/react-native/docs/image.html

Or if you’re using resize mode 

https://medium.com/the-react-native-log/tips-for-react-native-images-or-saying-goodbye-to-trial-and-error-b2baaf0a1a4d?source=linkShare-3a0c537e1725-1514063073",1514063090.0
recycled_ideas,"DRM is exactly what you want, that's what you're trying to do, manage digital rights.",1514039536.0
redpopcornpanda,"Right. DRM is just the term for ""restricting users from copying media to other users,"" but idk how to implement it. So like you will implement some sort of DRM, but how you do it is up to you. For instance, on iPhone, a user probs wouldn't be able to access local storage at all.

One way might be sort of like:
1) download ebook from server
2) assign it a device-specific code or identifier and save it with the ebook.
3) when the ebook is opened again, the code must match the same device.

However you do it, the encryption or code or whatever needs to be device specific and not app specific or it won't help.",1514087719.0
BuggerinoKripperino,"Hi, I'd think about using Redux for something like this as it seems like a problem that can be solved with it unless im misinterpreting the issue. I've had a lot of problems with navigation params so I try and avoid them as much as possible",1514029103.0
orphans,"Pass it in params instead of screenprops. Then, if you are using redux you can easily expose it to the component by doing something like this:

    const mapStateToProps = (state, props) => ({
        ...props.navigation.state.params
    })

",1514048128.0
arguenot,"        actions: [
            NavigationActions.navigate({ routeName: 'Main', screenProps:{user} }),
        ],

I don't think the navigate action takes in an object with the screenProps property. [It has the properties: routeName, params and action](https://reactnavigation.org/docs/navigators/navigation-actions#Navigate). I'm not an expert, this is just from a quick glance at the docs but it's something:).
    ",1514001310.0
theGuacIsExtraSir,Thank you all!,1514055794.0
crispypretzel,Are you binding your goHome method?,1514137982.0
boomdoodle,Your github link seems to 404.,1514001276.0
selexin_,"Sounds great, the repo's readme could be (a lot) more informative though - perhaps some screenshots/examples that don't require a clone and build of the example app? Just my 2 cents.",1514875826.0
julius559,Why is this in this sub?,1514083221.0
KingNg,how difficult was the transition? ,1513906423.0
fzammetti,"Nice write-up, thanks!  I'm currently working on my first RN app as well and it's definitely been an interesting experience.  The one thing that kind of bugged me is that early on, I just followed the docs on the RN site to get going and didn't realize that I was using Expo until later... or more precisely, I didn't understand that Expo was a separate thing until later.  In the end I'm not sure it's a bad thing because Expo is a pretty nice value-add in most ways, but it's something I think people need to be aware of and the RN docs themselves don't do such a great job of making that as clear as they could or arguably should.  I'm not so sure I want to be dependent on the Expo servers for my app to function, and right now I'm not sure if that's truly the case of not (I've seen some conflicting info)... I know about ejecting and that's probably the path I'm going to head down when the app is basically done, but again, it would have been nice if I knew what I was getting from the start.",1513909005.0
-Alias-,Your best bet is finding a native module and integrating it via RN.,1513885576.0
UnsubFromRAtheism,"I prefer to use Firebase messaging. It's free, sends notifications to iOS and Android and has a pretty basic API (and tons of coverage on StackOverflow.)",1513852713.0
pelesenk,Firebase is good. But you also can consider using [OneSignal](https://onesignal.com/) which is totally free and has a react-native module to make things easier.,1513863429.0
ic0de,I've also seen a lot of apps using Pusher for react-native implementations. Also there is a lot of documentation to get you started with.,1513887798.0
kingbin,"I've been working on a similar request for one of my apps.

I'm currently using local push notifications with [react-native-push-notification](https://github.com/zo0r/react-native-push-notification).

I'm using signalr from the server to send messages to my mobile app and have the signalr client wired up using redux middleware & thunk. Similar to this guy's library: [redux-socket.io](https://github.com/itaylor/redux-socket.io). Messages get dispatched from my middleware piece when I receive a message from the server. I have a reducer that sets the state, fires off a push notification or displays a modal dialog.

I need to test performance and how well this works when the app is backgrounded. So far so good. I've looked at using Amazon SNS if this doesn't work.",1513896697.0
Technotopia,"fbostech.com looks cool, but a little bit too busy. 

Also, this post is soliciting, which isn't terrible, but then again it seems like it should not be in /reactnative since you are web developers. Good luck though!",1513917641.0
davidpaulsson,"I don't agree, that's exactly what we're doing with heja.io at my job, and many other companies as well. 

You're describing problems with firebase, but really, that has nothing to do with react-native. I understand your frustration reading the expo docs, following along just to find it doesn't work. But the reality is that's the way it is with react-native (and js in general). ""move fast and break things"" mentality etc. ",1513873084.0
ismael_m,"In the first iteration of my app I started the same way, surprisingly enough, the iOS version almost worked out of the box. The one thing you're going to have to change in the UI for sure for sure is the margin at the top of the navigation. Android does not need a top margin but iOS does. 

You do not need a real device, once you compiler the app in Xcode, you can run a plethora of device emulators. 

On 5he second iteration of my app, I learned that it was better to install the plugins in tandem (such as Google maps and firebase and social logins etc...) Just because the tutorials most of the time have all the instructions right there and then. It was bit ""boring"" to have to go back and read the tutorial again in how to implement something again but now on iOS, you know what I mean?

For me l, starting up with Android was the best decision (and I have read of others expressing the same sentiment) just for the fact that Android devices have a large range of sizes and models, if you can make it look good in most Android devices most likely is going to look good in iOS

The only caveat right now is iPhone X, this bad boy is going to require you to jump through hoops to make your app look good. The shortest way is to upgrade to RN 0.50 and use the Safeview or safearea API (I think that's what id called)",1513788960.0
vikkio,"I worked on an enterprise project for 8 months using react-native, the best framework we tried then (6 months ago) was native-base, but you know how javascript world is, probably by now there are 25 other projects that do the job better.

About sass and typescript, I am sure you can use typescript, is just another step of transpiling more that we decided to avoid, I am not sure about sass, since the css of RN is not really css. It's more of an adaptation of css for the native components",1513753714.0
demoran,"[Typescript React Native Starter](https://github.com/Microsoft/TypeScript-React-Native-Starter)'s README contains instructions on how to manually implement typescript.

React Native does not use CSS.  You will create style objects to attach to components.  The properties on those style objects have similar names and functions to CSS.  Objects can be composed in javascript as well, so you can create shared styles and combine them as you see fit.",1513764499.0
ic0de,"Ignite is great, the boilerplate gets you going in no time, and once you understand it a bit, nothing can stop you.

As for the UI Kit, I have used [react-native-elements](https://github.com/react-native-training/react-native-elements) in couple of projects, mainly because I've noticed it is the most popular by GitHub stars.

It has a lot of elements and allows you to build material looking apps that will look good on both Ios and Android.

I've also seen that [native-base](https://nativebase.io/) is becoming popular right now.

",1513888255.0
hermanya,"There are line chart, pie chart, bar chart, progress rings and contribution graph.

What charts would you recommend coding next?",1513737771.0
zyx422,"Hey, good looking app.. I am not a cocktail kind of a guy, so can't give you feedback implementation wise. But, the look is great. I have also started building apps with react native, and found it quite easy to code (logic wise). But, design wise, it gets so messy. Maybe I didn't plan for design before creating the app and went on with the flow. Would you share your design experience/hacks with react native that will be helpful with my future projects.",1513706463.0
Turbo_swag,"Great post!  I just downloaded and will check it out. 

I have been working on some react native apps recently. How difficult did you find managing deployments and updates to the app? Is firebase handling all of your hosting?",1513715659.0
deftonechromosome,Great concept love the pixel art.,1513794445.0
com2kid,"First off, sweet app! I already purchased the full recipe pack.

Some feedback.

1. Having to enter similar ingredients is a serious pain. Soda water, sparkling water, club soda, seltzer water. :( Same for the types of gin. Dry Gin vs London Dry Gin. I know that they are different things, but people who aren't programmers are going to be confused here. It'd be nice if there was an option to combine similar ingredients, even maybe just when doing recommendations.

2. Whatever algorithm you are using ingredient search kicks ass. From horrible spellings to finding related ingredients, awesome job!

3. Closing the ingredient search menu on my 1080p Android phone is non-obvious. I have to tap the tiny exposed sliver on the right side of the screen. Every time I try to mash my back button, to no avail.

4. Subjective: Your eggnog recipes are overly complex. :/ [Alton Brown's](http://www.foodnetwork.com/recipes/alton-brown/eggnog-recipe2-2013745) is IMHO simple and A+ quality. It also doesn't involve a cedar plank or 2 weeks of aging.

5. Objective opinion: You have a SERIOUS lack of ~~hot toddy~~ mulled cider recipes. The world's best ~~hot toddy~~ mulled cider is as follows:

a. Jug of apple cider (64 oz)
b. 2 Cinnamon sticks
c. Whole cloves
d. 1 - 2 oranges, more if smaller (e.g. mandarin)
e. kirschwasser (cherry brandy)

Leave skin on the oranges, cut them into quarters, stab 2 - 3 cloves in each segment. Place apple cider, oranges, and cinnamon sticks in a large pot, and simmer with lid partially on for at least 30 minutes. 

Pour into mugs, add cherry brandy as needed.

(I have no idea where I found this recipe at years ago...)

Edit: Bug

If I select details on ""kirsch eau de vie"" from ""stock your bar"" it says ""used in 8 cocktails"", if I select that text, I am only shown 1 recipe that uses it!",1513831728.0
Technotopia,Why might you switch away from React Navigation in the future? What would you switch to?,1513708120.0
calligraphic-io,I waited bar while I was in university. We kept a dog-eared cocktail recipe book under the bar for times when someone ordered something we didn't know the recipe for on the top of our heads. I imagine bartenders would find this a useful tool.,1513767551.0
Noitidart2,Were you able to find a good way to take an image and resize it with pixel (nearest-neighbor) mode? I had this need and couldn't find any way other then using WebView and css nearest-neighbor - https://stackoverflow.com/q/44194861/1828637,1513796877.0
DasBeasto,"Very cool! I love the pixel art concept instead of trying to shoehorn really small product images in there, makes it much cleaner. Although I do wonder what it would look like with something. Like Hexels to give it more realism while keeping I pixel art: https://www.marmoset.co/hexels/",1515857466.0
davidpaulsson,"ReactArtNative are just bindings to the ART library. 

LayoutAnimation proved some easy solutions for simple animations as you don't have to write the animations yourself.

Generally, all animations happen with the Animated API to offload the animations to the native thread. A tip is 'react-native-animatable' (https://github.com/oblador/react-native-animatable) which is a wrapper around Animated and provides a simpler interface (you can write animations more like you do in CSS on the web).",1513941764.0
dracostheblack,Awesome project! Does it inherit all attributes of the image tag? Like for example we have some image services that require headers being set. ,1513741289.0
3vol,"Performance of animations on Android devices in development builds is atrocious. Release builds are fine, though.. ",1513698515.0
kdesign,"Not really a limitation, but I think that the downside is the constant need for upgrading. And it can be a painful process with all the breaking changes (especially if you make use of flow). 

I hope that this will improve after the release of 1.0. ",1513705900.0
Rickeh1997,For me it's having to use 3rd party libraries for basic functionalities. ,1513772969.0
Krizzu,Check out Extended StyleSheet lib for RN,1513693923.0
DovidBobson,Check out Expo.canny.io,1513634890.0
Buliam,"JavaScript if you don't already know it. CSS as well. Also Flex, which you can do [here](http://flexboxfroggy.com/) in a really fun way.
Other than that I would just read the docs, do the tutorial and maybe create a small toy app just to get a feel for React Native.",1513640256.0
twhit093,Just saw this posted. May be useful. https://www.reddit.com/r/reactnative/comments/7kjelu/how_to_learn_react_native_for_androidios_devs/?st=JBCHLVDV&sh=6f3f4d22,1513618913.0
resoneight,Pick a UI from one of the popular apps that you think looks a bit complex and try to replicate it.,1513556209.0
geirman,"I don't know if this is what you're looking for, but Spencer is a great teacher and he's offering a very cheap course that includes 10 exercises that will make you a better RN developer.
https://learn.handlebarlabs.com/p/react-native-exercises",1513571388.0
minivicio,"Hi there, I started there with react native too, I mean challenging myself with some UI design.

 I did a simple (yet unfinished) copy of instagram which you can see on my github ( @AlburIvan) as react-native-instagram.


One site I like to visit for UI challenges is https://www.uplabs.com/android or its iOS counterpart. That or pinterest, but in uplabs you have animated designs so... Good luck :D",1513668266.0
iamnetminder,I like to try to imitate interactions I see on https://uimovement.com/ from time to time. They're often pretty complex though and I can only get part of the way :),1513724918.0
thireven,"You need an Apple dev account in order to test on physical devices, unfortunately.",1513553341.0
milkysniper,"Can you not distribute with TestFlight without a paid account?

I was able to install my own app on multiple devices with a free developer account, also.

Being able to distribute the apk directly is why piracy is such an issue on android.",1513595926.0
ipa_cow,Look at Registering Test Devices: https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/TestingYouriOSApp/TestingYouriOSApp.html#//apple_ref/doc/uid/TP40012582-CH8-SW3,1513567810.0
ic0de,I haven't been able to run the app on device without a paid developer account. The simulator though should be enough for testing at some level.,1513628060.0
NaveNocab,I'm honored that I get to be the one to share this with you: https://expo.io/ !!!! 💙💙💙 ,1513555042.0
JustOr113,"""playing from firebase"" is way too general, you probably want to keep your files in cloud storage, then using a public url load it on the client using simple js and html(or native video player if you're working on Android/ios)",1513510346.0
jadbox,"Neat, very handy!",1513462779.0
speedoinfraction,What about view support for cocos 2dx c++? That would combine native cross platform performance with rn- implemented backend and menus?,1513535927.0
bocian678,I would truly recommend you either opencv.js or as a commercial but we'll working solutions (=less effort) the Microsoft image recognition apis for Javascript. Hope that may help you!,1513438051.0
mwarcholinski,"Yes. It is possible. You can do it with OpenCV. Here you have a case study with an open source code on Github. 

[How To Use OpenCV In React Native For Image Processing](https://brainhub.eu/blog/opencv-react-native-image-processing/)


[Repo on Github](https://github.com/brainhubeu/react-native-opencv-tutorial)",1523008946.0
lovestowritecode,"You can use anything for a backend, the amount of choices are as far and wide the amount of NPM libraries (ok maybe not that big). At the end of the day it doesn’t matter, all you need is a REST API for React to talk to, the type of backend is irrelevant.

i think what your really looking for is the easiest backend for a React developer to use, that’s probably firebase. Some other options are Lambda using Serverless on AWS or a custom node.js sever with mongoDB.",1513439117.0
kbcool,"For list/item type apps with basic write operations then once you get your head wrapped around it graphql and react-apollo let you churn out apps very quickly. I do say basic because you end up falling back on using react-redux for managing your state if you have to do anything locally but for anything client/server focused like chat apps/social apps/todo lists etc etc it's a great combo.

Have a look at http://graph.cool - very good graphql backend. You can even write your own custom code on the backend if you have to.",1513460941.0
stathisntonas,"Firebase, nodejs are some good backend options. Both can provide real time & REST API for almost all your needs.",1513427717.0
saunders_07,"Can anyone give me some guidance on what to look at for getting started with Firebase like reading from the database and also authentication, everything I find is either extremely long winded or requires you to install a load of stuff, surely it’s easier to implement than what I have found online?",1513458351.0
acoalt,Just use style={{flex:1}} on an <Image/>. Place all your other components as child components inside,1513421333.0
cloudprogrammer,"React native gradient could be good for scaling on different screen sizes, apart from that yeah it's good. Have a container component with the gradient as the background and wraps your views with the container. ",1513430065.0
saunders_07,"Producing some quality content bud, keep it up, concise and informative ",1513464226.0
nathvarun,Part 2 - https://www.youtube.com/watch?v=bZj6uzNRs5E&t=28s,1513486085.0
milkysniper,If you’re just trying to refresh you can CMD+R in React Native Dev Tools app on your computer instead of opening the shake menu,1513404916.0
reallurifax,"One way to prevent further damage to your face or iPhone is to enable AssistiveTouch in iOS Settings and add a shortcut to Shake-gesture. This will give you an on screen button for shaking. 
You can turn down the opacity of the button to make it less annoying.

More details:
https://support.apple.com/en-us/HT202658",1513405504.0
,"The react native tools vs code extension has support for launching the dev menu. You can bind it to a keyboard shortcut for extra convenience.

I hate shaking too. ",1513404777.0
NaveNocab,"You can enable 2 finger force touch from the profile page in the top right hand corner there is an ""options"" button. 😝🤣😂😵 Or you could put your phone in a laundry machine... Basically any of the hacks people used to get spins on Pokémon Go 😁🔥🤷‍♀️💙",1513555482.0
geirman,"what's so amazing about it? from the screenshots, it looks like a pretty standard list app to me.",1513390078.0
clelwell,Not available in US?,1513646871.0
assertchris,"`ListHeaderComponent`, [as seen here](https://github.com/facebook/react-native/blob/834b9d4e6eaaa9890f5fc7ae1a2504c0059aa66d/Libraries/Lists/__tests__/FlatList-test.js#L51)",1513333390.0
hnarita,"Sounds about right.

The only thing I suggest to do is learn JavaScript first, then React, then React-Native. Makes the most sense in this order imo.",1513302072.0
pengusdangus,"Sort of, React itself is JavaScript that can render HTML using its own construction of the browser DOM. Since React as JavaScript interacts with Browser APIs, the way they ported this to Mobile was to ship React in the embedded JavaScript engine on most devices: JavaScriptCore. 

JavaScriptCore is the engine that powers Safari iirc, so you're compiling a tiny Browser when you build your app for a mobile target.

React uses web sockets in JavaScriptCore to hit Native APIs for native-specific functionality. You can even build and invoke Native modules you construct from React, like navigation or specific touch behavior.

This is a little better than other solutions because it's not shipping a huge enormous entire browser runtime, just a JavaScript engine that can run Natively (I think, someone correct me if I'm wrong)

It's overkill for tiny projects I think but the usability and re-usability between Native and web is the huge strength. It also can deal with app state really intuitively. It is not 60fps fast if you're doing most of your ""fancy"" stuff and business logic from within the runtime, which is a downside I'd say",1513311229.0
com2kid,"Minor correction, React-Native doesn't use pure CSS, it uses something that looks like CSS with the naming convention changed a bit (camelCase). Also some of the properties are different, and some are missing. It is pretty close though.

> On top of that, it uses a philosophy of writing code that encourages the user to use modern syntax, up-to-date good coding manners and if i start learning React-Native, i will eventually and inevitably learn Java Script as well.

I am taking that route. It is doable, but any API that lacks good documentation or examples hurts more than usual, since figuring stuff out on your own is that much harder.

>  I only know very basic C and a little bit more about PHP.

You should probably start off learning Javascript, there are a bunch of concepts that neither of those languages really prepares you for. Javascript is, despite its syntax and warts, a language that has a lot of rather advanced concepts. Make sure you understand at the minimum lambdas and closures.  
",1513651815.0
hnarita,"Use setState and store the data from AsyncStorage in the state. Then load the data for the FlatList from the state.

After you push the data to listData, use setState.

Edit: Wait, I just realized that you're not even getting the data in listData. Like the guy below said, show us how you're actually setting the data in AsyncStorage.",1513296088.0
kbcool,"FYI: You're probably going to get a better response on Stack overflow but you have to be very humble there as you'll get flooded with comments saying close this post, he/she didn't ask it properly, off topic etc. 

You haven't posted any details about how you're pushing data into async storage. Your code doesn't look fundamentally wrong - in fact it should work if your data is structured as expected in local storage so I don't think you're pushing it in properly.

The one thing you're doing a bit strangely is pulling in every key out of asyncstorage. It would be a lot more efficient to store your list in a single key - called for example ""contacts"".

Try putting your array in one local storage key and just retrieving that single key and assigning it to listData.
",1513298118.0
wow4201,"[Solution?] I had an AsyncStorage issue where it simply pretty much wasn't working. I had to update to 0.5.1 i was on 0.50.3.

It now works however I can't ""reload"" the app with ""rr"" and expect the AsyncStorage  to work, I have to re run react-native run-android every time. For the AsyncStorage  code to work.

Took 8 hours for me to figure this out lol",1513311303.0
reyhanahmed,Seems interesting! I wish I could buy this. ,1513378228.0
,Looks like some great content. I will definitely be picking this one up.,1513296234.0
ArtyomTrityak,Is there any possibility to get some discount? I'm interested but i already know react native and now sure i'll need it,1526929712.0
cloudprogrammer,Asyncstorage is really good ,1513233765.0
Maguspk,https://www.npmjs.com/package/react-native-authentication-helpers,1513240285.0
chmpgne,"I would actually recommend using https://github.com/react-community/react-navigation.

Wix’s navigation solution involves more setup and is less configurable/customisable. You’ll most likely be fine with React-navigation!

React native router flux was popular, but afaik most people tend to use React navigation these days. ",1513227272.0
csgonutty,"You can make your components modular in react native by having them accept properties.

This just means that you could build a load of common components and then just use them in different screens and adjust your props accordingly.",1513203146.0
CapSoftPro,link seems to fail?,1513218600.0
drumnation,Try cleaning and reinstalling your node modules folder. You can also try running react-native link.,1513612032.0
TreSxNine,"Line 24, try binding the function. ",1513161382.0
csgonutty,Could someone please take a look at this code and see where I'm going wrong,1513159116.0
cloudprogrammer,Try using onItemPressed  = serial => {...} instead of onItemPressed(serial),1513164316.0
,"React Native’s own philosophy reinforces this idea. It’s not a write once, run anywhere framework. It’s more like learn-once-write-everywhere.

Without reading the article, I think it’s absolutely best to leverage what works and what doesn’t on the platform. Not only do users have certain expectations about the Ui/UX, but each platform has strengths and weaknesses that should be considered differently.",1513147780.0
Neitzches,"Yeah it seems to apply to all of those, what the author is suggesting is that pure native apps will grant you favor of the Apple and Google gods.

However, there's not a chance I'll be writing and maintaining two code bases for the opportunity to be featured. Not sure how true it is either. Build and design beautiful responsive apps and you'll be golden anyway. 
",1513147966.0
lisbakke,"React Native has, for the most part, Native performance (with exceptions), and it allows you to use native components.

I've written ~10 Objc apps and 4 RN apps. Two of my Objc apps have been featured -- and Fresh Air continues to be featured on / off for 3 years even though its design is dated http://www.freshairweather.io/

The important part is the design and feel, not the technology. If it feels like it was built for iOS and it's got a great feel, Apple won't dock you points for using RN.

The author of your quote very likely hasn't used RN. Historically the multi-platform technologies haven't made apps that felt truly native. So us native devs have carried on the belief that true native is the only way.

RN has changed that. It's performant by using native components and animations & it retains design idioms via native components.

I'm re-writing my weather app in RN right now and the look/feel of my interface+animations will be identical or better.

With RN you can write apps that are of equal quality to purely native apps. You can write a cream-of-the-crop app. And if you do, you'll most likely get featured.",1513176170.0
assertchris,"RN, for me, is not about having 100% code reuse. It's about having 100% knowledge and architecture reuse. That idea extends to React on the web and React in Electron. ",1513170491.0
recycled_ideas,"If your product is your app, build native it's worth it and it's your core business.

If your app only supplements your business by providing a way to facilitate access to your services, then maintaining two code bases in two languages is a really significant cost and you should think twice before committing to that.

Two half assed native apps you can't dedicate enough resources to are worse than one code base you can dedicate enough resources to do properly. ",1513173625.0
,"Depends on how complex things are.

I'm still just getting into React-Native, but let's say you wanted to build a very basic WeChat clone. 

Easily can be done just using expo. 

Want to make a SnapChat clone, a bit harder since ReactNative doesn't support FireBase storage right now, but it's still very doable. 

Want to use a IOS only API that was released TODAY, no. 

I don't really think you NEED to build native apps unless you have a special use case. I've been in app development( like actually working for companies ) since 2013-, the VAST majority of apps just need to do basic crud stuff. ",1513464868.0
Binford46,I think your build.gradle needs to add maven() and google(),1513139513.0
Porcelinpunisher,"Solved.

Deleted my project, recreated it with react-native init ProjectName, ran AVD, compiled project through terminal. I think I altered too many configurations in my old one and needed to recreate it.",1513286463.0
iDuuck,"Once it ran one time, you (normally) don’t need to run it again. Thus far, it’s not part of the build process.

Native code *should* be included of course, because there could be things that youR co-workers nor the React-Native CLI can figure or “guess” and generate during build.",1513120375.0
spaceghost0r,There's nothing to be torn on here. Running it as part of the build process is wrong. You run it once when you install the package in question and commit whatever it changes.,1513165416.0
aforty,"I don't know what you mean with ""build process."" I'm confused by what you're asking.

I don't check my node_modules into git. I do check my Xcode and android project files in, which contain references to node_modules. So once someone downloads source and runs `yarn` to install packages, they should then be able to build from source.",1513215557.0
hansek,"Definitely run it once and commit whatever is changed. Can cause you some weird unexpected problems otherwise. For instance, react-native-sentry for some reason decided to patch your javascript index file by adding a couple of lines of Sentry setup.",1513272212.0
deadcoder0904,"While filing many issues it is boring to do things like `npm -v`, etc... Thanks to Solidarity it won't be a hassle anymore 😃",1513106021.0
Sir_hennihau,"This seems nice. Getting information together was always pain in the ass.
",1513113497.0
coolnat,Yikes Medium.. do we really need to take up 180 vertical pixels for a fixed header and footer on desktop? This reduces the visible area of the article to less than the height of an iPhone 5 for me.,1513128800.0
jakn,"Thanks once more, great work!

I've got two questions:

1. You offer to buy a fiber version with Firebase integration included. Does this include the work that was done in these tutorials?
2. You said in the video you got some feedback, on which platform was this? Would love to talk to other people working on this stuff.",1513177717.0
contrarianism,Fuck firebase,1513105994.0
hnarita,"We use TS + RN + Expo at my workplace and everything runs smoothly for us. The only file that has to remain as js is the entry point (App.js). Expo will specifically look for this file.

The files that are referenced in App.js also have to be js files - these are the files that get compiled with tsc.

Unfortunately, we've come across a lot of issues with outdated definition files. But you can always create your own interfaces and such to get the compiler to stop complaining about type errors.

Let me know if you have any questions. :)",1513132787.0
Bamboo_the_plant,"On Xcode 9.1, my Swift app [LinguaBrowse](https://itunes.apple.com/gb/app/linguabrowse/id1281350165?mt=8), which is mostly a WKWebView uses a steady 100-150 MB in the iPhone X simulator (iOS 11), unless I'm reading the wrong number.

You don't mean the IDE's memory usage, do you?",1513097904.0
Supa_C,Try closing the dev tools before reloading. That seems to help me. What Editor are you using? Try debugging with VSCode. ,1513044271.0
inform880,"What OS are you working on? Windows tends to be flakier. It is possible, I do this all the time.",1513035476.0
Tougun,/r/titlegore,1513027468.0
adamjnav,"Hey ForSprint09, you can actually use Firebase's Auth/Real-Time Database with Expo. You can't use Firebase's Storage however, due to it requiring you to use Blob files which isn't supported in RN yet, but there is a PR being upstreamed to provide Blob support.

Here are the docs for using Firebase with Expo: https://docs.expo.io/versions/latest/guides/using-firebase.html and here are the JS Firebase Auth docs: https://firebase.google.com/docs/auth/

One caveat regarding the Firebase Auth JS SDK, you can not use phone auth with a React-Native (Expo) project since it can't handle the ReCAPTCHA/Verfifer methods out-of-the-box.

If you have any questions or issues getting Firebase to work with your Expo project, please feel free to post in our forums https://forums.expo.io/ or join our Expo Developers slack https://slack.expo.io/

Cheers,

Adam

",1512951328.0
patlux,Set 'drawerBackgroundColor' to 'transparent'. See the docs for DrawerNavigator.,1512952094.0
rizwanahmed19,"I've created a custom component for the drawer but as you can see in the image above applying borderRadius to the top View doesn't make the drawer corners round, I'm not sure how to get rid of that white sticking out. Any help would be appreciated. Thanks ",1512941115.0
Technotopia,"Since you didn't mention compensation, people are going to assume it is only equity. Is that the case?",1512942564.0
RabbiSchlem,"3000-5000 a month is silly money to take as an engineer if you write good mobile apps. 

Also 2.5% is a pittance of stock. 

Also, the stock will be worth nothing, I’ll make reddit gold bets for anyone that doesn’t realize stock is a scheme to get cheap employment that screws over employees. 

I’ve freeelanced for 4 startups in the Bay Area. I take 0 stock only cash. All the full time coworkers at these companies that took stock go into fits of rage after they bust ass for 4 years on terrible salaries only to find out their stock will never be worth anything.

Don’t take stock in exchange for a competitive wage. Unless you don’t need money.

Wanna work at a startup? Cool, be a founder, they’re the only ones with a chance. ",1513000530.0
alien3d,nice idea.. but still  for me i think unless you co operate hotel api system which mostly none... if difficult... ,1512955227.0
,[deleted],1512999450.0
alien3d,"when i saw this topic i remember a picture   and  it should be same concept 

https://9to5mac.com/2017/12/08/homekit-hotels/",1513003444.0
Noitidart2,5k is ridiculously low even for part time. Part timer (20 h/wk) would make at the bare minimum 6k/mo.,1513585940.0
rubenescaray,"Hi, I'm a RN developer from Venezuela, I have developed a pair of projects for companies in Costa Rica and Chile and I'm working on a third one.

I would love to get to know each other and maybe help you and your team.",1512953990.0
healthyskin4lyfe,Do you have links to parts 1 and 2?,1512970373.0
brafique,"I worked on a project that utilized Open CV, where I had all of the image processing done natively in Obj-C and Java. After that I created the respective native modules to communicate with the JS side. ",1512919447.0
tocallaghan,"Hi, 

I honestly don’t know if this will help you or not, but I’ve been looking at doing something similar with ReactNative and OpenCV. What I have found is that it is possible to build out a third party lib using an obj-c bridge. 


https://facebook.github.io/react-native/docs/native-modules-ios.html


As for using Java, I don’t know. I’m using C++ to build a static lib, and including that inside the ReactNatvie and using the bridge to get to the camera. This is currently all theory, but based off the link above it seems more than possible.   

Anyway, hope the link helps. ",1513004233.0
kbcool,"What you want to be googling for is ""opencv javascript bindings"" - you can see in the results that plenty of people have had a go at it. You'd have to sift through the results to see if they were successful.",1513117519.0
deadcoder0904,"I don't think there is a lot of support for Open CV using React Native. It has support for Android & IOS so you are better off with Java & Swift. Also, Facebook only makes what it uses. So I don't think it will support OpenCV. Also, I don't think such a heavy library should be used in JS unless it has some APIs exposed like [Expo APIs](https://docs.expo.io/versions/latest/sdk/index.html)",1512918675.0
maratmkhitaryan,It is usually accepted for such tasks to use a cloud or a server with a rest api.,1512931858.0
mwarcholinski,Here you can find a case study with an open source code on Github on how to do image processing with [OpenCV in React Native](https://brainhub.eu/blog/opencv-react-native-image-processing/),1523008346.0
Technotopia,"People have been wanting a drag & drop for like 50 years+ now, but even when one comes out it always sucks. Mind sharing which starter kit for those that are new?",1512889684.0
ThePreacher19021,Please give me details,1512909732.0
stathisntonas,"Just a few posts below: 
https://www.reddit.com/r/reactnative/comments/7hzfpp/tutorial_learn_react_native_the_practical_guide/?st=JAZRB0OY&sh=bb7bd1c6",1512849150.0
Technotopia,"This was by far the best for me after searching for a week or two: https://www.udemy.com/the-complete-react-native-and-redux-course/

Feel free to PM me with questions.
",1512890419.0
dduko,"can you show us what you've done? preferable something in the apple app store, and your github repo.",1512873613.0
milkysniper,"HTTP is stateless, so it’s trivial to make multiple requests

Do you understand that an app is making up to hundreds of requests a minute while you use it? ",1512805026.0
healthyskin4lyfe,"When you are streaming, you are basically doing two actions at the same time: loading chunks into your stream (consider your stream an array of tiny sections of the video), and playing chunks that have already been downloaded. In an ideal situation, you download an initial set of ""chunks"" of data (each chunk equivalent to several ms of video), do some math to figure out at what point to start playing the video based on how quickly the chunks download, and then start playing those chunks. If your player catches up to the end of your chunks without finishing due to the download rate slowing, that is when you encounter ""buffering"".

When streaming a video, you DO end up downloading the entire thing, you just are downloading it bit by bit and not waiting for the download to finish before you begin playing. More sophisticated video players (YouTube included) have various versions of the video at different resolutions and qualities. If the player detects that your download rate has slowed down enough, it will switch the ""chunk stream"" to a lower quality and those lower quality chunks will stack on top of the higher quality chunks you've already downloaded. This is how video players are able to seamlessly switch between lesser/higher quality streams.",1512863597.0
theviralgriffin,"No, I don't think so. You can design using sketch, if you want a prototype, you can make use of principle for Mac. ",1512759079.0
tequiila,No not at all. Sketch is good for design/wireframe  bur you need to learn html of you want to go Web ,1512767334.0
vitocapelli,"Sketch is for design and HTML is for conversion.
if you want to avoid writing HTML and CSS, visit [Sketch to HTML conversion service] (https://www.reliablepsd.com/)",1516743440.0
vitocapelli,"Sketch is for design, HTML is foe webdev.
If you want to avoid writing HTML and CSS, visit [__Sketch to HTML conversion company__] (https://www.reliablepsd.com/psd-to-html/)",1516744259.0
IIIMurdoc,"This was great. I'm currently learning react and react-native and it was refreshing to see a start-to-finish process for building out some UI. The end result was incredibly close to the Youtube UI as well which just shows that these giant products we all use are not some magical dev wonder product, but just nice clean design using the same tools we all have access to. ",1512762938.0
lighthouse_at_eleven,"Thank you so much for this, looks really really good!  

I have a really hard time being able to position components correctly.  

Would love to see more videos, with even more complex components (visually)! You can break in a series, so the videos are not too long and you don't have to make it all at once!",1512787998.0
ThePreacher19021,"This is so good. Do I need to know React to learn React Native? I am good in HTML, CSS, little bit of JS and Jquery. Can I just start learning React Native?",1512796178.0
,[deleted],1512891290.0
scastiel,"I guess you can use the fantastic [OpenPGP.js](https://openpgpjs.org/), [maintained by ProtonMail](https://protonmail.com/blog/openpgpjs-email-encryption/). I wrote [a blog post](https://blog.castiel.me/posts/003-play-with-cryptography-with-openpgpjs.html) few months ago which should give you basic examples of usage.",1512743090.0
fxnick1,"If you're using Stripe for transactions, might check out [tipsi-stripe](https://github.com/tipsi/tipsi-stripe). It's a Stripe binding for React Native that handles input and tokenization. ",1513062699.0
,"Can you share your code. I can probably help you in identifying whats missing?

I just started using flatlist with JSON data and it worked fine. SectionList shoudnt be that bad ",1512684405.0
Binford46,"Will share it tomorrow, I’m on mobile since I walked away frustrated. 

Flatlist works, it’s the renderSectionHeader that I can’t seem to get",1512687971.0
merxy,"First, are you passing in data in the format specified by the documentation (you'll probably have to transform your Json response, save it to state, then pass that to the list)? Are you implementing the render props correctly (easy to miss destructuring syntax)? use the loading prop to get the loading spinner while data is fetching.",1512690345.0
OffTree,Cool! Does anyone know when tickets go on sale? I think I'll be going.,1512758384.0
sherwoodfm,This is awesome. I've been looking for an explanation for how to do this in React Navigation for ages. Thanks for putting this together!,1512686335.0
Pelleas,"Nevermind, I figured it out. I put 

    this.addItem = this.addItem.bind(this);

directly under the this.itemsRef line in the constructor.",1512645967.0
foo13,"I think you’re losing the context of `this` in your function.

Change:

    this.addItem

To:

    this.addItem.bind(this)

Or:

    () => this.addItem

Also, you may want to remove your Firebase API key from your post.",1512646161.0
HS_Joe,Just wrap the text Input on the right side in a div. All Elements you want in row format place in the div. Then make the div display:flex and flex-direction:row,1512663337.0
fallkr,"If you plan to do anything remote to complex on the map side, you’re probably better off grabbing the Airbnb google maps wrapper or the mapbox wrapper and use annotations or draw tools in that package. ",1512668560.0
digitalWizzzard,"Here's a rough draft of the schema if that helps
https://ibb.co/fOGxfG",1512594642.0
yangchuanzhang,"I just wrote my first native module to do build something I've wanted for a while. This module adds an item to the dev menu to console.log everything in AsyncStorage as one big object.

Maybe some of you will find this useful too.",1512570296.0
mmlolomm,"Have you looked at https://github.com/wix/react-native-keyboard-input or https://github.com/reactnativecn/react-native-custom-keyboard ?
They seem to provide what you're after.",1519533230.0
yangchuanzhang,Maybe you'll find something [on here](https://github.com/jondot/awesome-react-native#seeds) that you like.,1512573854.0
pcofilada,Try this one https://github.com/pcofilada/react-native-boilerplate,1513275515.0
gavrocheBxN,We're all busy writing apps! ,1512522918.0
kbcool,PM me with your budget - I maybe interested or can find you someone who is interested. I'm not a webrtc expert by any means but have worked on many large online streaming applications over the last ten years.,1512528087.0
geirman,"Here's some resources I've bookmarked over time. Hope they're useful

* https://www.toptal.com/react-native/jobs
* https://twitter.com/r_n_jobs
* https://www.upwork.com/ab/find-work/
* https://discordapp.com/channels/102860784329052160/103882387330457600
* https://www.toptal.com/react-native/jobs#remote-developer-job
* http://www.reactnativejobs.io/
* https://www.welovereactnative.com/
",1512536130.0
dduko,"> I've even tried Upwork and Toptal with no real luck

Huh? that's surprising.",1512647206.0
brokentyro,/r/forhire,1512521226.0
dobzy7,"I mostly work on iOS apps as a freelancer, but I’m certainly available as my last project just came to a close!",1512532673.0
alien3d,my suggestion.. find local developer.. plan what you really want to do. ,1512620915.0
wengemurphy,"> which incorporates WebRTC (which is where our current developers are held up)

That's not surprising. WebRTC is a complex spec. React Native is orthogonal to WebRTC; experience with one doesn't strongly correlate with the other.",1512750591.0
tghmember,Pm me!,1512862323.0
SolidR53,"Yeah I have enzyme and jest running on latest react native (0.50.x)

I also have E2E testing with detox and jest running along with it.

I'll be writing a article on some of this stuff in December, but if you have any specific problem, just post it and I can help you.

To get you going, you'll need react-dom ( as a devDependency ), react-16 enzyme adapter in your jest/mocha setup file and maybe react-native-mock.",1512979235.0
jakn,"Thank you, that's amazing. Looking forward to Part 2.",1512665992.0
Tougun,I hope that you learned from your code being deleted and you're using some form of source control now,1512498879.0
cloudprogrammer,"You're gonna need to use react-native-notification, the github page has got good instructions. ",1512484743.0
cloudprogrammer,Just use react native init and use the metro bundler instead ig. ,1512484824.0
LionaltheGreat,"Yes it's annoying to use. They ate a LONG way from being stable, but they do have some pros. I don't think it'd be nearly as bad if they had a better ExpoKit api.  I do NOT want to push everything through their servers",1512537716.0
geirman,"It's the default when using CRNA, but not the default. Use `react-native init`. I do most of the time. But I also think Expo rocks.",1512536291.0
deadcoder0904,"First things first - 

React Native does not make expo default choice. I don't know where you got that info from.

Expo makes it a lot easier to build apps. Much faster iteration than `react-native init`. It has some cons but so does React Native & every other language in the world.

Let me quote Bjarne Stroustrup for you

> “There are only two kinds of languages: the ones people complain about and the ones nobody uses.”",1512496380.0
endless90,I don't like it either. Just use react-native init and build the app like YOU want.,1512485874.0
kaweed_deso,I'm not a huge fan of it either. Is there an alternative for OTA updates? ,1512521456.0
gavrocheBxN,You and everyone else buddy. Just don't use it.,1512501196.0
dov69,use [Deco](https://www.decoide.org),1512484860.0
vikkio,"You are not alone. Well, I don't really hate it, it's just that I prefer to work with the ejected app, is way more stable.
I do use expo to try out components though, as a test project. ",1512543069.0
burntcandy,"Preach!!!

I really hate having to constantly reload and refresh on my device/simulator",1512596163.0
interactivejunky,"Just to provide a counter opinion - I'm using Expo on my latest project but my 9-5 job that pays the bills uses react-native bundler without expo so I have a bit of experience with both.

I haven't had any issues with Expo and I really like how easy it is to share my latest prototypes with my non-technical co-founder who lives an hour flight away. It's made our dev process really dynamic, they can easily check my progress at any time and do user testing without having to use testflight and submitted app store builds.",1513062429.0
Noitidart2,"I think they have some nice modules. They should make their convenient API's modules though that can be used in a `react-native init` project. Other then wanting to use some of their modules, I wouldn't use Expo. I only use Expo for quick prototyping and showing others via a quick share link, it's absolutely fantastic for that. Snacks are an even faster version, love it.

The worst thing about Expo is while developing on Android, the red box has absolutely no helpful information. The debug info on iOS is normal. I'm not sure why it gives junk on Android.",1513586140.0
OffTree,I don't think I've ever even tried **not** using the metro bundler. What does building to expo get you other than an easier way to share a prototype?,1512487070.0
realbriank,"I think expo is being used with react-native to help newbies get started easier. But once you are doing anything more advanced, you should go with a non-expo project.

`react-native init` to start a  project",1512499698.0
kbcool,"Checkout http://graph.cool as well. With that numbers of users you'll still be under the free tier.

Also it's graphql so it looks good on your CV :)

They have a blog post about building exactly what you're after. A chat clone. Hope it doesn't ruin it for you.

https://blog.graph.cool/how-to-build-a-real-time-chat-with-graphql-subscriptions-and-apollo-d4004369b0d4

",1512531886.0
cloudprogrammer,"Firebase is really good for messaging, and pretty simple to set up. I'd go with that over aws, also check out something like sendbird. ",1512478224.0
OffTree,"Coming from someone that has only really done a little bit with react-native and no native development. What is it that people really don't like about the react-navigation library? It seemed to do just about everything I needed it to do when I used it.

I ran into some complications with it initially, but eventually I had that 'duh' moment about how it works, and it kinda clicked after that.",1512406500.0
Ryanrh,"The best decision I made for my personal project was to transition to React-Native-Navigation. Granted, you cannot use Expo or CRNA but the benefit is just amazing. It’s not perfect but after fighting React-Navigation for weeks on end, it felt like a godsent. The amount of poor decisions made in React-Navigation is baffling to me.",1512461274.0
Tougun,"I've been using it on a project for the past 6 months. My problems with it are that the library is that it's way too opinionated, and the documentation sucks.  This is more minor but some of the animations are clunky as hell, and they will most likely not pass QA.",1512439031.0
cloudprogrammer,"I use it and haven't had many problems with it, animations are fine and it was recently updated to support the iPhone X. It's really good for passing props between screens and also very customisable plus you can integrate redux if you need to, I'd say it's worth a shot. I've only used the drawer and stack navigators btw. ",1512442602.0
scttmthsn,Really poor choice of name…,1512407380.0
SolidR53,"I use pods for all my native iOS dependencies, custom libraries that need RN wrapping is the same way.

https://github.com/ueno-llc/react-native-starter",1512979890.0
StylisHD,"Hmm, came here thinking this would be a tips & tricks type post, but it's really just an intro to the concept of RN compared to similar tools.",1512427267.0
jeepjazz91,"Hello,
In your « Alternatives to React Native » you can add « NativeScript ». ",1512469959.0
3vol,"I developed an app for stand-up comedians, part of which allows them to record and playback their performances. For the recording part I used `react-native-audio` (https://github.com/jsierles/react-native-audio) and for the playback I used `react-native-sound` (https://github.com/zmxv/react-native-sound). 

The only issue I encountered was with `react-native-sound` was accurately tracking the position of the playback as the method they offered to get the current playback time in seconds just didn't seem to work properly. I filled out an issue and there have been some responses but since I came up with my own work-around I haven't gotten back to them yet. (https://github.com/zmxv/react-native-sound/issues/228)

My whole app is open-sourced so you can look there to learn how I got things to work. (https://github.com/dereksweet/ComedyCompanion)

I even have everything audio related contained within it's own service so maybe you can just grab the code and use it within your own application: https://github.com/dereksweet/ComedyCompanion/blob/master/src/services/AudioService.js

Hope that helps! ",1512406866.0
mrdibby,this doesn't use React Native,1512829101.0
gbrlsnchs,I've been expecting such a solution since Google's Fuchsia announcement. Seems like a preparation for it...,1512396463.0
,"Hey, just do it yourself using node-apn and react-native-push-notifications. It's super simple, I promise. The github guides are all you need",1512342437.0
goddamnawfulname,Why not use PushNotificationIOS? then there's react-native-push-notification for Android.,1512351568.0
antigirl,I’ve only tried it in expo and it works out of the box. ,1512346227.0
kcuhcx2,"Are you talking about getting users to download the new version  of your app? If so, look at codepush, I got both working for Android/IOS super simple and super effective",1512345816.0
Fossage,"The only library mentioned that my company currently uses in production is React Native Router Flux so I can speak to that a little bit.

PROS:
==============================
1.  Uses a declarative API so you define your routing as a series of components which some(myself included) find more readable than some of the imperative solutions.

2. The latest version uses React Navigation under the hood so you get the same smooth transitions between scenes that you would get with React Navigation.

3.  It uses MobX under the hood to manage its state so it will pretty seamlessly integrate with you app’s data management layer if you are already using MobX. If not, it can still pretty easily be wired up to integrate with other state management solutions(I.e. Redux)

4. It has features like built in nav bars that are easily customizable to get you up and running quickly.

5. It has all of the various Navigation types that you get with React Navigation such as tabs, drawers, modals, and light boxes.

CONS:
==============================
1. The documentation is seriously lacking in some areas and it can sometimes take a bit of digging to get things working the way you want.

2. The newest version is a total re-write under the hood and is still in alpha(I believe) so you don’t always have to look too hard to find some bugs.

3. Because it is a wrapper around React Navigation,  it also wraps React Navigation’s state management, meaning it will typically intercept actions dispatched by React Navigation and subsequently dispatch actions of its own which is what your application will intercept if you integrate with its state management. This is usually fine, however there are times when it appears that the actions from React Navigation get passed all the way up to your application state unaltered, meaning you have to set up your reducer to handle actions in two different formats, React Native Route Flux’s format, and React Navigation’s format.

4. Because it uses MobX as a dependency, if you’re not already using MobX for your state management and using something like Redux, your project now has to take on the bloat of having two state management libraries as dependencies.

CONCLUSION
===============================
There are a number of other issues I have with the library as well, but I’m typing on a phone and my thumbs are getting tired, so I’ll omit them for now. In summary my feelings on it is that, while I really like the declarative aspect of it, there are a lot of issues with it still and the documentation leaves a lot to be desired in certain areas.

  We started using it initially a year or so ago when your options for navigation  in React Native were still pretty cumbersome, and we definitely felt like it was a superior solution at the time. However, being that it is now a wrapper around React Navigation which is already a fully fleshed out, fairly easy to use, and well documented Navigation library by itself, I would probably opt to just use React Navigation by itself.",1512325382.0
Connorpmullins,"I’m using react-navigation and it works. There are some transitions that aren’t quite native (no persisting header between screens), but I had a fairly easy time setting up an app with more than 30 pages.",1512328644.0
AdAstraPerCoffee,"**react-native-push-notifications:** Basically a wrapper for React Native's own PushNotificationIOS coupled with a native android module. Although it's a single api for both android and iOS, there were quite a bit of times I had to do Platform.OS checks due to the differences. Also make sure to add a `PushNotificationIOS.addEventListener('registrationError')`, as the plugin won't inform you of it on it's own, for iOS at least.

**react-navigation:** Pretty good, but it's been a pain in the ass at times, like most react-native navigation solutions. I ended up forking this so that I would be able to disable swiping gestures based on a redux store value, since some of the flows require routes with back enabled until a certain request is made. Although it's possible to clear the nav stack and navigate to the next view, it results in some really strange animations.

**react-native-animatable:** Absolutely innovative and marvelous, I've made some amazing 60fps animations and interactions with this, being able to access the scroll position of their scrollviews as a native animated value allows for some buttery smooth interpolations. The scroll mechanics allow for a very custom experience, and you can make some really nice horizontal scrollview paging/snapping on android, I say this because at the moment, android's scroll snapping feels terrible. Unfortunately last time I checked, it doesn't officially support versions of iOS below 10, which was a dealbreaker when we discovered this via crashes on older iOS devices.

**react-native-i18n:** Works, what more can I say?",1512536474.0
ismael_m,"Try this component, it seems like a good solution 
https://github.com/kfiroo/react-native-cached-image",1512245798.0
Tougun,"Sabre has some nice apis for stuff like this

https://developer.sabre.com/docs/REST_APIs",1512204817.0
cloudprogrammer,"Hey, I've used it and got it working with notifications and stuff so hmu",1512217605.0
harshdays,Use react native web? ,1512208505.0
redditBearcat,"How are you conditionalizing your logic to determine your in the web? At build time or browser run time? Webpack has a concept of require.conrext you might look into, but you'd need to make sure it happened at build time otherwise both or neither could be included in your bundle.

",1512227683.0
fvonhoven,"You would need to check if there's a username and password set when you first mount, and if not, then you could set those values in AsyncStorage. I don't know your component or app structure but you could do it in the componentDidMount of the login screen. Ideally, if you're going to be relying heavily on AsyncStorage, you might think about moving your logic for storing state in a central file, ""Storage"" or something. But the check and set for what you're asking might look something like this...

    AsyncStorage.multiGet(['username', 'password'])
      .then(stores => {
          const username = stores[0][1]
          const password = stores[1][1]
          if (!username || !password) {
            AsyncStorage.multiSet([
              ['username', 'yourUsername'],
              ['password', 'yourPassword']
            ])
         }
     })
",1512165956.0
rooob91,"I only read your title, so Im just going to say read the side bar!",1512155437.0
qu1mby,That’s actually quite nicely designed! ,1512157024.0
Charbots,Very nice! What plugin did you use for push notifications?,1512236034.0
arya_minus,Getting it open sourced? Really like the design,1512179040.0
FezVrasta,I published it on the PlayStore https://play.google.com/store/apps/details?id=io.github.fezvrasta.notificationsforgithub,1512475874.0
Noitidart2,Design is awesome. What did you use for those Android style popup menu?,1513586532.0
Noitidart2,"What did you use for those dialogs with prompt field, and custom text styling within. Like on ""confirm your login"", the code phrase is bigger and more marginVertical then the rest.",1519367440.0
boomdoodle,"Can you put down what you need the app to do in the form of a user story? It is really hard to discern why you are trying to do what you said. You absolutely can do it but if you are asking for advice, perhaps start at the user story. There might well be a simpler way to achieve the goal. 

That being said, You can use react-native-camera to get the feed from the device, store the image and then process the pixels for your rgb values.

Might be interesting to see the values plotted in real time instead of processing a still image. Real time will be a much much harder thing to do. ",1512103496.0
boomdoodle,XD is great for refining design. You can always share it here for feedback. ,1512174762.0
boomdoodle,"Hey there is your user story, the part starting with “chemistry students... “. I will try to watch the video in a bit, just landed in china and have to get my vpn going for youtube. ",1512195256.0
Binford46,"Sorry about not being able to answer your question, but I had one of my own.

That building sort you’re doing, I am rewriting my swift app that sent a current location to bing, coded the distance, and returned it into an array. I’m looking for a react native solution that’s nicer, would you mind sharing what packages or any examples on how you accomplished this?",1512096303.0
mikehuebner,"I honestly have up on this issue a long time ago, best I did was check for renders. I haven't found any better solutions that don't involve ripping everything apart.",1512105401.0
Jilson,A static mock?,1512113383.0
