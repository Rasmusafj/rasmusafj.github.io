author,comment,timestamp
khasaia,"Any feedback would be greatly appreciated.

Twitter: [@\_qaz\_qaz](https://twitter.com/_qaz_qaz)",1543609052.0
sghctoma,"Hi,

IIRC, the article didn't contain any detail's about the algorithm, it just provided a little web service that deobfuscated P-Code.

I won't be much of a help here either, but just wanted to provide a little background. I have also reversed this algorithm (it's really easy once you find out where in that multiple gigabytes of stuff it is implemented), and talked about it a bit in my DEF CON talk All Your Math Are Belong To Us.

I did not reveal the whole algorithm, just one of its layers, because I didn't want to screw over folks who depend on it to protect their research, etc. It was a tough call, I was pondering on what I should do about this for months, but eventually made peace with not releasing my deobfuscater script, but showing only a part of the algo.

A few days after my talk I got an e-mail from one of their security 
guys, we talked about the vulnerabilities I found in their products, and a few weeks after that we also talked on the phone. He talked at length about their plans on how to handle those, and any future vulnerabilities, and he seemed genuinly interested in the security of their products.

It was a pleasant and refreshing experience, which was really not shadowed by the fact that I also was asked to take down any P-Code related content. It wasn't in a threataning tone, and he said they know it is just an obfuscation, they know it is just security by obscurity (they even have a note about this in the manual), but the company don't want the algorithm to be public, they don't want a next-next-finish decoder tool to be available. I don't usually ""defend"" corporations, but I can kind of understand their stance on this - as I've said before, I was concerned about the impact of releasing the algo anyways.

TL;DR: Yes, MathWorks don't want a P-Code decoder to be publicly available, but I didn't get the impression that they only spend time on letters.",1543623407.0
madam_zeroni,"Hey, I’m a noob. I don’t under stand what any of this means. What is p code obfuscation, and why would you want to protect/find this?",1543641471.0
goedt,Try r/datahoarder,1543628944.0
pjfry651,"Hi guys,

I've got experience in programming as a web dev but not a whole lot of reverse engineering knowledge. Recently I've been looking into streaming from my Xbox One to my Android device on my local network. There are currently no solutions for this on the market other than first streaming to my Windows 10 PC, then streaming from there via a remote desktop solution to my Android.

I know it's possible to develop a third-party solution for this, as [OneCast](https://onecast.me) have done so for iOS devices. I wanted to reach out and see if anyone has experience with reverse engineering Windows 10 apps (or iOS apps), so I can recreate the functionality in an Android app. Am I in over my head? Wondering if it's worth investigating myself or would require a team of experts. I'm interested in doing this for personal use only, not commercial.

Thanks!",1543636597.0
TotallyNotCarson,Anyone know where i can find some Linux trojans? I'm doing a research project where I want to see if i can find malicious code hidden in real programs. ,1543892146.0
ophirback,"How do I open an API function with IDA (for example, WinAPI's TerminateProcess)?",1544189581.0
Zophike1,I haven't been hanging out in the Kernemode community and I've noticed some slight differences can anyone explain what happened to the old Mod ?,1544245089.0
khasaia," Any feedback would be greatly appreciated.

Twitter: [@\_qaz\_qaz](https://twitter.com/_qaz_qaz)",1543521301.0
Ryancor,"I think it would be a lot easier to save by right clicking on the function that has the comments, etc. and doing it from there rather than command line. It seems a bit tedious to have to go through all the steps since this is meant to save time. Is there also a way to restore breakpoints and comments without specifying through the command line? I think this is really cool btw just suggesting in my opinion on what could possibly make this easier to use ",1543537086.0
diff-t,"I love joxean - he is brilliant, humble and a fucking cool dude to drink a beer with. Took for 3 times having a beer with him before I realized who he was, never flaunts shit and is always humble. ",1543569208.0
krystalgamer,"Cool ideia :D Until now I've been renaming them manually on their debug strings, never thought of automating it.",1543533981.0
Ansjh,I love seeing all these amazing IDA plugins. I hate not having a copy of IDA Pro to use any of them though.,1543531452.0
tansim,Why is this special? Why wasnt it merged back into main de4dot?,1543580721.0
dudeedud4,"So it's a mode to deobfuscate MaxtoCode? I haven't come across that one before, anyone have any examples of what it would look like?",1543520578.0
Mahakali923,"I don't know if that's your own work or just posting it, but it would be nice if you (or someone) could make it into youtube series.",1543393598.0
pphp,"Thoughts on other debuggers such as binary ninja, Ollie? ",1543428053.0
shuffle2___,"Nice, but I dont think this disproves that infosuck strip... :)",1543733877.0
svn,Why is this obfuscated?,1543265995.0
MaltersWandler,"> adheres to the Unix philosophy of ""do one thing and do it well""

> has built-in 2048 game, port scanner and package manager",1543243177.0
qwertyballer420,radare is amazing ,1543215135.0
kJer,𓂸,1543254124.0
implyingimplicitly,"I'm not sure, but Unicode includes at least 3 penis glyphs.",1543259452.0
mudkip908,"Of course those fun-hating Nazis deleted the question. And I was actually curious, too.",1543301583.0
s0briquet,Asking the **HARD** questions.,1543253887.0
EvanCarroll,I wonder how many hackers went penis hunting because of this...,1543254584.0
SYS_V,This is childish and is irrelevant with respect to reverse engineering.,1543265589.0
Andoryuuta,"Just saw on my GitHub dashboard that something was pushed to the repo.

[Here is the prior discussion & paper](https://www.reddit.com/r/ReverseEngineering/comments/9jg8mc/vmhunt_a_verifiable_approach_to/) here on /r/reverseengineering.",1543188998.0
ntddk,"Wow, finally.",1543282470.0
supercool5000,"Are men allowed to read the slides, or are they just excluded from the workshop?",1543189740.0
Amouse999,"If you want to be good, and teach well, you have to open and share ideas to all minds. It is a matter of fact demonstrated throughout history.

So if youre going to limit your community, your going to face the result of that.",1543339644.0
thearmybender,"Its so wonderful to see bright, talented women in this industry. Bookmarked this for later!",1543195042.0
flarn2006,Is there a WhiteHoodie as well?,1543205827.0
horowitztrureal,"Hi everyone,

Basically, I have a pack.dat file from the game, which I extracted into 2550 or something bin files. I used SJIS dump to dump JP text out of these files and see which ones contain text. I sorted through most of the files already and wanted to know how to locate the pointers and reassemble the files into pack.dat again. What files should I open in IDA or another program to look for the text/pointer combos? And about reassembling, how should I do it? In the course of translation, the files should be modified and inserted using what program? I just need some guidance to make this work.

For more context, here is a link to the a clean post I did on romhacking: [http://www.romhacking.net/forum/index.php?topic=27191.0](http://www.romhacking.net/forum/index.php?topic=27191.0)

&#x200B;

Here is a link to all of the game's files: [https://drive.google.com/open?id=1CXJbNFfohaX7828H89tUD0IIo-aQ3H9o](https://drive.google.com/open?id=1CXJbNFfohaX7828H89tUD0IIo-aQ3H9o)

(the file which contains all of the text is called pack.dat, it is in the ""data"" folder-data>pack.dat)

A link to my partial text dump: [https://drive.google.com/open?id=1y0MbQ5j9sdHH7\_wSxfzb5s7gYWFEzo15](https://drive.google.com/open?id=1y0MbQ5j9sdHH7_wSxfzb5s7gYWFEzo15)

The folder contains the .bin files extracted using a pack.dat (file that contains all of the game's text) extractor tool separated in 3 folders:

1-NO TEXT-(1-Files with 0 bytes)2-ITEM AND AREA NAME TEXT, CODE OR BOTH-(2-Files that still need to be parsed for text)3-FILES WITH MOST TEXT-(3-Files separated as definitely containing text)

Link to the extractor tool used: [https://drive.google.com/open?id=1HUan9N-OXJVb0Qu9GfuKEserec9wrbD6](https://drive.google.com/open?id=1HUan9N-OXJVb0Qu9GfuKEserec9wrbD6)

Link to the sub files you get after extracting pack.dat with the custom extractor: [https://drive.google.com/open?id=1O7TjeZAN3ZkU7mbiO6Wg9t8SwgsGtUkJ](https://drive.google.com/open?id=1O7TjeZAN3ZkU7mbiO6Wg9t8SwgsGtUkJ)

These files are organized in the same way as the SJIS text dump

&#x200B;

I am trying to prepare the files that contain JP text in Hungry Ghosts for translation. However, I needed someone willing to look at the files for the game... All advice in other forums is saying ""look in executable, open it in this program, do this"", etc. I am not ungrateful but it becomes meaningless if the person does not understand that:

1st- I am not an expert or even mildly knowledgeable person in ASM (instructions like: ""what i would do is just pop the executable open in IDA, trace all the text in the executable, and their pointers, and make an assembly file for patching it"" seem meaningless to me if there is no JP text in exe and have no clue about how to make an asm or programming it to patch anything).

2nd- Not all ps2 games are equal, some have all the text on the ""exe""/ ELF and some vary wildly in its location which changes the process to extract/translate/find pointers, etc. This is a unique game, with its own file quirks and whatnot, like many on the ps2 library.

 I really just needed one knowledgeable person to take a look at the files and help me locate pointers, customize them to allow for more text space (if my suspicions are really correct about the character limit) and then prepare a script with pointer reference/offset location to be translated. About rebuilding the extracted pack.dat bin files back into pack.dat again, I also need someone to help with it (because I was not the one who made the extractor) but it all depends on the way I do the rest of the stuff by guidance of said person... There seems to be many ways to go about this but I needed someone to steer me in a sound direction.

All those that help will be adequately credited. And sorry if I don't get some terminology right regarding ASM/programming.  


Thanks in advance! ",1543151216.0
milnak,"Direct link to the sv1.pkg is [https://cdn.korg.com/us/support/download/files/8b9f197387c4097ca2ba3f5355367f5a.zip?response-content-disposition=attachment%3Bfilename%2A%3DUTF-8%27%27sv1-os-v13.zip&response-content-type=application%2Foctet-stream%3B](https://cdn.korg.com/us/support/download/files/8b9f197387c4097ca2ba3f5355367f5a.zip?response-content-disposition=attachment%3Bfilename%2A%3DUTF-8%27%27sv1-os-v13.zip&response-content-type=application%2Foctet-stream%3B)

&#x200B;

I've started analyzing this packaging format format.  It seems that there's a file header in the form

`00 00 00 20`

`<filename in ASCII>`

`00 00 00 00`

`00 00 00 00`

`03 FB 00 00 <- FB = file, F8 = directory entry?`

`38 00 00 <- 18 = file, 38 = directory entry?`

`06 21`

`0c 20`

&#x200B;

I see there's MIDI file entries (spec [https://www.csie.ntu.edu.tw/\~r92092/ref/midi/](https://www.csie.ntu.edu.tw/~r92092/ref/midi/) ) , which is what im particuarly interested in extracting, based on the MThd headers I see.  What's odd is that the MIDI files don't seem to follow the standard, so maybe there's some obfuscation or compression involved here?  Typical header is:

`4d 54 68 64 <- MThd`

`00 00 00 06 <- Length (6 bytes)`

`00 01 <- MIDI type 1`

`00 02 <- 2 MTrk`

`e7 28 <- MS timing`

`MTrk header...`

&#x200B;

but the entries in this package, for example at offset 24F8D1 don't match that format.

Anyone have any suggestions?",1543027968.0
This_Is_The_End,"How to usb log data traffic to a keyboard?

Background: I bought a keyboard Vulcan from Roccat with RGB led and of course there is no Linux software. Since I don't like the software of the manufacturer and I use only monochrome, it's a motivation to do something about it. At every upstart the configuration has to be loaded into the keyboard. So the windows software has to run to get not the standard rainbow pattern. 

The keyboard has 4 endpoints and I tried to use wireshark but I couldn't filter out the packets for the keyboard. I need some hints how to do it with wire shark",1543167567.0
halpertjd,"I have a question about reverse engineering protocols. Let's say I'm observing two devices exchanging short data packets, each packet starting with an incrementing counter value, and I assume the communication is encrypted with an algorithm using the counter and possibly a pre-shared key. If I can capture a bunch of packets I know are identical in their unencrypted form, what tools do I have at my disposal to try and suss out the encryption algorithm/key?

&#x200B;

I've posted more ""target-specific"" details here: [https://reverseengineering.stackexchange.com/questions/19969/how-to-figure-out-encryption-scheme-given-known-packets](https://reverseengineering.stackexchange.com/questions/19969/how-to-figure-out-encryption-scheme-given-known-packets). I think the ""right"" answer is probably to disassemble the firmware for the app and/or the RC car and work out the encryption scheme that way, but now I'm curious about what I can get out of the packets themselves.",1543279541.0
TheLoosestJuice,"'m trying to reverse some C code and I noticed the following  instructions (x86) that store a function into a static variable in the .bsssection. I'm trying to figure out what I can do (or rather, what needs to happen) in order to actually execute that function.

    mov     cs:qword_605318, someFunction 

the variable `qword_605318` is located in the .bsssection of the binary.

So what exactly is going on here? My best guess is that the variable is a function pointer and then `mov`instruction simply causes it to point to `someFunction`.  But how does that function ever get called/executed? There are no other  references to the variable that would indicate it's being used.

FWIW, this is on a Linux system with a 64 bit ELF file.",1543553358.0
MarathiPorga,Do non US citizens even get jobs in this line of work? I ask because virtually every job post I've seen requires a security clearance along with US citizenship.,1543207060.0
arduino_mystery,Is there some tool that allows you to insert instructions into a binary and will automatically adjust any memory references that may have been thrown off by the shift?,1543278195.0
amaljossy,Can it remove proguard obfuscation ?,1542967049.0
CzoKc,Also.. where can I test it? Is there a repo?,1543007242.0
GuyWizStupidComments,Nice read.,1543008144.0
CzoKc,How is it different from the tools you mentioned?,1543007175.0
terpin,Oh man! That's great to know! I'm so glad things worked out for you (and I'm also glad that I'll get to watch all those videos I'd been meaning to as well). Congratulations and hopefully you won't ever have to deal with something like this again.,1542857488.0
MrPanface,Hey Sneaky? Have you ever thought of making an alt and reuploading your old vids in case it got taken down again?,1542858894.0
mikejay707,"glad you're back, I remember when you first made your cheat engine series",1542864222.0
bleuge,"you have a new subscriber, thanks!

and please keep backups, i've seen some very very good channels fall down, and it's very sad.",1542874893.0
0xffff0800," 

Hey guys! I am sharing my Malware sample library that I posted here not long ago but switched to my real username just for more organization.

Anyone can download these samples and study them or reverse them. I made this because when I first started out with malware analysis I couldn't get samples, Every site you had to be vetted in and etc.. So I wanted to change that.

I mainly collect APT variant malware, but there is more in there from other interesting finds.

Make sure you ONLY run the samples on a \*VIRTUAL MACHINE\* and know what you are doing. Do not infect yourself!!

To get more information about each of the samples, Use some threat intelligence platforms to view the information about the samples (Hashes API call outs etc.): Virustotal, Hybrid Analysis..

I have made the server through Tor only. This is due to the fact that hosting malware samples on clearnet I kept getting shut down... (hosting malware? lol) You can reach my server at:

[iec56w4ibovnb4wc.onion.si](https://t.co/6CLIarflpe) or .to (Without Tor Browser)

[iec56w4ibovnb4wc.onion](https://t.co/6CLIarflpe)(With Tor Browser)

I will be posting more each week whenever there something interesting out. You can follow me on twitter for up to date information and news.

[https://www.twitter.com/0xffff0800](https://www.twitter.com/0xffff0800)

Thanks",1542780648.0
harrybalsania,"When someone does manage to clone these devices, we will know how well the other part was designed. ",1542809710.0
CreepingFog,Thank you!! Been looking for reverse engineering anything Pokemon go related for ages now! :D,1542828893.0
0ffsek,"1=>Why instruction addresses changed?
2=>Is it because of any low-level security?
3=>If it is not normal, then how can i fix it?
Thanks in advance :)
Im sorry if title is not perfect for this post :]",1542770619.0
0xffff0800,"Hey guys! I am sharing my Malware sample library that I posted here not long ago but switched to my real username just for more organization. 

Anyone can download these samples and study them or reverse them. I made this because when I first started out with malware analysis I couldn't get samples, Every site you had to be vetted in and etc.. So I wanted to change that. 

I mainly collect APT variant malware, but there is more in there from other interesting finds.

Make sure you ONLY run the samples on a \*VIRTUAL MACHINE\* and know what you are doing. Do not infect yourself!!

To get more information about each of the samples, Use some threat intelligence platforms to view the information about the samples (Hashes API call outs etc.):  Virustotal, Hybrid Analysis.. 

I have made the server through Tor only. This is due to the fact that hosting malware samples on clearnet I kept getting shut down... (hosting malware? lol) You can reach my server at:

 [iec56w4ibovnb4wc.onion.si](https://t.co/6CLIarflpe) or .to (Without Tor Browser)

 [iec56w4ibovnb4wc.onion](https://t.co/6CLIarflpe)(With Tor Browser)

I will be posting more each week whenever there something interesting out. You can follow me on twitter for up to date information and news.

[https://www.twitter.com/0xffff0800](https://www.twitter.com/0xffff0800)

&#x200B;

Thanks",1542752236.0
0ffsek,"1=>Why instruction addresses changed?
2=>Is it because of any low-level security?
3=>If it is not normal, then how can i fix it?
Thanks in advance :)
Im sorry if title is not perfect for this post :]",1542739289.0
Cyph0n,Good stuff! I did not know that Duo worked on low level security. It’s particularly interesting to see how Apple is trying to extend Intel’s exist secure boot infrastructure with its own.,1542771003.0
tansim,does this offer any advantage over a simple unicorn-engine wrapper?,1542724061.0
ilfak,"sorry, it seems to be ""return a1 != 0;""",1542739607.0
Em_Adespoton,"Interesting... I associated the time and volume of the records showing up not with iOS 11 but with the iPhone X (and now the later phones based on the same architecture).

Along with this is Apple’s machine learning module for image processing— if Apple creates this histogram based on the IR sensor data or on the original sensor data, it can use this to ensure any ML transformations don’t modify the original image too much.",1542580834.0
newgre,"Neat, does it support the time travel debugging API in the Windbg preview?",1542573019.0
BigDaddyXXL,Interesting. ,1542534678.0
igor_sk,"wall of text, don't see how it relates to RE in any way",1542561523.0
Psifertex,Is the video broken for everyone else or just me?,1542553755.0
wbbigdave,Should be noted this is in Czech. ,1542471714.0
GuyWizStupidComments,Thanks,1542498100.0
krapht,"If you're going to buy in bulk why not contact the manufacturer or their local sales rep? In fact, why are you asking on reddit instead of phoning their sales office?",1542432619.0
charliex2,"looks like tuned emf 

https://3dcoil.grupopremo.com/blog/electromagnetic-tracking-systems-virtual-reality/",1542482622.0
drakefish,"I haven't used IDA in a while but I remember having to deal with many of those ""issues"" before, especially the unrecognized inline standard functions. It's impressive to see how much the decompiler has improved over time.",1542412741.0
rolfr,"I'm looking forward to making the switch on my next project (I have a good reason not to immediately just throw my database into 7.2). I'm especially keen on a few features that aren't mentioned in this post: ""a method to handle multiple stack variables that occupy the same stack slot"" was mentioned in the [IDA 7.2 announcement](https://www.hex-rays.com/products/ida/7.2/index.shtml), and the new class ``valrng_t`` in hexrays.hpp that isn't mentioned anywhere in the changelogs appears to be an abstract interpreter for a couple of useful domains. One thing that I found weird in the IDA 7.2 announcement as well as this post is the fanfare around ""virtual calls"". While there appear to have been new changes to the C++ type system to support polymorphism, nonetheless, I've been using ""virtual function calls"" in Hex-Rays for 10 years. For example, [here's what I'm looking at in Hex-Rays right now](https://i.imgur.com/V2MpQeP.png). I don't get it?",1542420634.0
kiwidog,Anyone have good resources for starting hardware RE?,1542383450.0
Amouse999,Any open source peephole optimizers? I don't want to have to write one from scratch. I don't mind making modifications ofc.,1542492731.0
chase1635321,"How does one get radare2's scripting (*r2 -i script.py test.x)* to use python3. The -i flag appears to use python2 by default, and for the life of me I can't figure out how to get it to use 3.",1542510659.0
JJHEO,"I'm looking for more info on RE of firmware. For example, I have a double din head unit for my vehicle which has a limited number of features. I would like to write more features into the firmware. I have looked into UART and using various tools to identify pin outs and such. I also have a fair bit of experience in programming now, so once (if) I can retrieve the firmware, I should be ok.

What I guess I'm asking is are there any suggestions anyone has to research this topic more specifically? I found a defcon vid and some other mildly helpful sites, but nothing else that has been substantial.

Post in SE or is this general enough?

Thanks",1542765302.0
0x45454545,"    #	Human injection
    #
    #	Strings which may cause human to reinterpret worldview
    
    If you're reading this, you've been in a coma for almost 20 years now. We're trying a new technique. We don't know where this message will end up in your dream, but we hope it works. Please wake up, we miss you.

&#x200B;",1542396361.0
bleuge,"Thanks for this, I usually process large text files, this will help testing. ",1542443415.0
Matt07211,"```
#	Terminal escape codes

#

#	Strings which punish the fools who use cat/type on this file
```

ಠ_ಠ",1542607673.0
LeopardSkinRobe,"You write very clearly. Thanks for the tutorial. 

I'm a complete noob at this stuff, and my question following your post deals with expanding what we learned here more broadly to what I encounter more often. Is the process very different if we are working in windows? Which parts change the most?",1542310975.0
fyeah,bless your heart,1542320872.0
TailSpinBowler,What happened to the dup2  i see all the time?,1542360097.0
jephthai,"Why waste space in the shell code pushing null to the stack when sys_write takes a counted string anyway? (Note, not trying to be picky, honest question)",1542465913.0
farmdve,$3.5k for a report? No thanks.,1542291950.0
Heroic_Nasty,"I'm an engineer with **Raytheon Cyber Security Innovations (CSI)**. I wanted to reach out to the /r/ReverseEngineering community and let you guys know what we're looking for. All comments here are mine and mine alone and not endorsed by Raytheon proper. Any questions leave them here (preferably so others can benefit) or PM me. I'll answer them if I can.

We're looking for people who want to break things and have fun doing it. We're looking for developers, hackers, researchers, and engineers with an interest in information security and low level development. We take our work and our fun seriously. We refuse any work that isn’t hard and engaging. We make sure our engineers have the tools they need to do their jobs, and focus on recognizing results. Surfboards, pirate flags, and DEFCON black badges decorate our offices, and our Nerf collection dwarfs that of most toy stores. Our research and development projects cover the spectrum of security technologies for Computer Network Operations. If it runs code, somebody in our office has looked at it.

**Key areas of focus include:**

* Reverse Enginering
* Vulnerability Research
* Wireless and Network Communications
* Hypervisors
* Malware
* Mobile/Embedded Development
* Win32/Linux Kernel development
* Constraint Solving
* Exploit mitigation techniques

Basically, if it’s in the cyber (yes we said it) realm, we’re doing something cool with it.

Information security continues to be a growth industry and we are constantly looking to find the right candidates who can do this challenging work.

Familiarity with at least one common low-level architecture (x86, ARM, etc) is important, as is the ability to conduct vulnerability research against applications compiled for that architecture. Experience with software protection and binary armoring is a plus, and familiarity with modern exploit mitigation techniques and counter-measures is a must.

Development experience is desired, but at least some scripting experience is required. Whether in Python, Ruby, or some other language, you should be capable of quickly developing the tools needed to help you succeed in your reverse engineering and vulnerability research efforts. The strongest candidates will have a variety of low-level operating systems experience as well as cross-platform vulnerability research. If you've written everything from a kernel paged pool exploit to a simple userland stack-based buffer overflow, built your own dynamic instrumentation and integrated a solver to help you identify and reach code, or modified emulators and JIT engines to add your own instrumentation to help you identify entire classes of vulnerabilities, you'll be right at home.

Aside from reverse engineers and researchers, we are also looking for developers with an interest in low level systems development. If you're comfortable living in the kernel, developing drivers, or similar kinds of work, we'd love to hear from you! C and C++ skills are definitely a plus.

**US Citizenship** & the ability to obtain a Top Secret clearance is required. If you're already cleared, even better!

Our headquarters is in **Indialantic, FL** with additional offices in **State College, PA; Annapolis Junction, MD; Ballston, VA; Dulles, VA; San Antonio TX; Austin, TX; Huntsville, AL;** and **Greenville, SC**. Relocation assistance is available.

You can find additional information by visiting [Raytheon Cyber](https://www.raytheon.com/cyber/), or just PM me directly.

For the personal perspective, I've been here for several years at our Florida location and it's awesome. We have a lot of flexibility in what we work on and we have a strong engineering led culture. Most of our senior management are engineers themselves and understand the proper care and feeding of technical folk. We feel a lot closer to a startup than what people normally think of when they think of defense contractors. Shorts, flip-flops and t-shirts are standard issue attire, we have unfiltered internet access for ~~Reddit~~ job relevant research, tons of free snacks, and whatever equipment you need to do your job. We trust you with root on your dev box. Want to run your hipster Linux distro of choice? As long as you can do your job with it, have at it.",1542244894.0
f0rki,"I'm a PhD Student at University of Duisburg-Essen (Germany) working with *Prof. Lucas Davi* in the **research group for secure software systems**. We're a relatively young research group, which was formed about 2 years ago, and are looking for research assistants/PhD students. We are looking for new colleagues, which strive for a PhD degree in breaking and fixing software, hardware and anything in between. We have several open positions coming up in the next few months.

We work mostly on low-level software and systems security, studying attacks and defences on various systems. We seek people interested in working on topics such as
- Runtime attacks and software exploits on the binary level on various architectures
- Security of operating systems
- Trusted computing platforms (such as SGX and TrustZone)
- Mobile and embedded systems security
- Blockchain and smart contract security
- Hardware-based software security

As a research assistant in our group you have the possibility to work on these interesting topics and advance the current state-of-the-art a bit further. We have multiple research collaborations around the world, so a lot of work happens in teams spanning multiple universities (sometimes in vastly different timezones). At a university part of the job is also assisting in teaching and supervising students.

We're part of the University Duisburg-Essen, located at the Campus in Essen in the middle of the Ruhr metropolitan area. We offer a full-time position for 4 years, paid according to the TV-L E-13 level german federal salary rate. Speaking german is a plus, but not required. Since this is a positions for acquiring the PhD level, a MSc degree (or equivalent) is required.

More information on how to apply can be found at [our groups website](https://www.syssec.wiwi.uni-due.de/team/offene-stellen/). There is also a very small crackme challenge, which we ask candidates to solve and include the solution in their application. We're looking forward to some good applications. If you have any further questions you can also PM me directly here or send me an e-mail.",1542296916.0
jrocsco,"[Cisco](https://www.cisco.com/) is looking for an Embedded Security Consultant. We need your help attacking connected devices to identify and exploit vulnerabilities in tomorrow's technology. These include connected cars, medical devices, and industrial control systems.

Location: Herndon, VA / Chicago, IL

Telecommuting is not generally possible. This position may require up to 25% travel.

Relocation assistance is available.

US Citizenship is mandatory.

Applicants should possess a bachelors degree or greater in computer science or computer engineering. This position does not require a security clearance.

Candidates can apply [here](https://jobs.cisco.com/jobs/ProjectDetail/Embedded-Security-Consultant/1246784).",1543350340.0
albmed7589," 

Im looking to hire someone to help me reverse engineer a sweepstakes gaming software suit. It's not copyrighted or trademarked.

So far I know the application is coded in C++ and is encrypted. There is a small systemstarter.exe that is sending out TLS packets to a ip address that I will need to fake. I will pay well for help on my project.

**Skills needed:**

**- C++ Coding**

**- Reverse Engineering**

**- Knowledge about how to defeat obfuscation**

**- Encryption Knowledge**

I would like to get to work on this project as soon as possible. I will provide any help I can and am willing to pay well. Please contact be by messaging me here, or by email at albmed7589@yahoo \[dot\] com",1542480101.0
Casey-REDLattice,"REDLattice is looking for engineers with security clearances. We are a dynamic company in the midst of amazing growth. Culture and employee happiness is our focus; which is why we sponsor many social events including game nights, CTF's, happy hours and outings. We offer top-notch benefits and employee ownership that makes offers from our company pretty sweet.   


We need talented folks who want to work on the forefront of cyber. We aren’t talking network defense or basic IT security here. Our positions are mission focused and operational in nature. As a REDLattice Engineer, projects will be undertaken in small teams with close coordination with customers to develop new or enhance existing tools. 

Required Qualifications

* Familiarity with at least one common low-level architecture (x86, ARM, etc)
* Experience with vulnerability research against applications compiled for that architecture.
* Familiarity with modern exploit mitigation techniques and counter-measures
* Experience using C/C++, Python, bash, or other scripting languages
* Whether in python, ruby, or some other language, you should be capable of quickly developing the tools needed to help you succeed in your reverse engineering and vulnerability research efforts.
* Experience with a variety of low-level operating systems and cross-platform vulnerability research.
* Candidates must be able to play both sides of the fence, both defeating and developing new and advanced security techniques.
* Security Clearance

Desired Qualifications

* Experience developing offensive cyber tools
* Familiarity with low-level assembly, and Linux kernel
* Experience with android or iOS development/reverse engineering

REDLattice is a equal opportunity/affirmative action employer",1543438616.0
evm_sec,"I'm an RE at **Johns Hopkins University Applied Physics Lab (JHU/APL),** we have about a dozen RE-related positions open, including for electronic attack and offensive cyber which you can browse here:

[**https://tas-jhuapl.taleo.net/careersection/2/jobsearch.ftl?f=JOB\_FIELD(3640752268,140752268,2240752268)**](https://tas-jhuapl.taleo.net/careersection/2/jobsearch.ftl?f=JOB_FIELD(3640752268,140752268,2240752268))

Feel free to PM me with questions or a resume or you can also apply directly through the above link.

Our culture is very collaborative, and also pretty laid back compared to other government contractors.  We are trying to push the envelope in RE research while still delivering timely solutions to our sponsors.  One of the biggest benefits that distinguishes APL for experienced candidates is a college scholarship benefit of up to half tuition per child.

We are located in Columbia, MD.  US Citizenship is required, and most jobs require a clearance or the ability to obtain one.   

&#x200B;",1542303942.0
Amouse999,"Jesus, the guys asking questions takes so long to talk. Its just killing me.",1542185664.0
Ferdi265,"I totally love this simple implementation of the fibonacci numbers.
It really shows how an xadd instruction can be useful.",1542238329.0
Sn34kyMofo,It'd be great if I still had a YouTube channel so I could make a video demonstrating Squally...lol. =(,1542157418.0
TheShadlyin,"No offense (no, really) but personally I wouldn't buy a 2D puzzle game in early access made by unknown developers for 21 Euro.

I really like concept and implementation tough. It's just the combination of all things mentioned above which stops me from buying it.

edit: will add it to my wish list.",1542178062.0
henke37,Right now it's only a card game about number bases and basic operators. Thanks but no thanks.,1542162767.0
Remote_Yogurt,"Capitalism finally turned what I did as a kid into a video game. This is how I got into IT and security....well at that time I wasn't thinking about any of that. It's the first thing I got addicted to.

I remember being like 11yrs old playing CS 1.6 and just using downloaded cheats and hacks and being absolutely mesmerized. Then CS:S came out and I spent every waking minute after school in OllyDbg (had no idea wtf I was looking at) and Visual Studio trying to take some open Direct3D9 wrappers and hooks and learning from them, breaking it apart, injecting shit, crashing, debugging, researching, try to break down and learn, seeing what I did wrong, trying to understand and conceptualize, try again, rinse and repeat. Then finally one day after countless hours and persistence, I compiled my DLL, injected that into CS:S (hl2.exe iirc), and then pressed F12 on my keyboard and saw all the walls in the game disappear and become see through because I had successfully, without crashing the game, changed the z-buffer of those texture objects. I can still remember that day, I was in cs_office near the T-spawn looking down the long hallway. 

Anyways shout out to Game-Deception if anyone knows that.",1542212575.0
__xor__,"Added to wishlist, but sounds like it's super early access.

Is there anything like mini-games that you reverse and have to hack in a way to cheat them or something, like inject or modify instructions? Or find bugs you can exploit? All I can tell from the description is that it looks like it teaches x86 ASM in a fun way. Granted that's reversing related, but I'm wondering if there's more relation to reversing than just having x86 in it.

I've been wanting a good x86 ASM game but in the same vein as Exapunks or TIS-100. ",1542191500.0
coldbyrne,Will there be any discounts incoming? I would be interested but it's a bit dear to me,1542184350.0
SirBananaKiller,"I have been interested in this game for some time now. Though card games are not that enjoyable for me.  
Is there any ETA for the story mode? PS: Game looks good by the steam images and descriptions, adding to Wishlist.",1542190525.0
0xdea,"Great book. This is my attempt to solve all the riddles... Beware, spoilers!

[https://github.com/0xdea/xorpd-solutions](https://github.com/0xdea/xorpd-solutions)",1542127878.0
tieluohan,"I wonder how that fares with real AV products? VT cannot be used to test if a product is evaded or not, as is stated in their FAQ. Or it can, but it'll give invalid and misleading results.",1542047449.0
igor_sk,"bypassing an AV once is not difficult, you don't even need a VM for that. Once real malware starts using a new approach in the wild, detection rates will go up.",1542046402.0
robertito42,Is this another type of polymorphism?,1542035863.0
dejancz,You have apps with billions installs and still on Google play...,1542012807.0
cyphrack,This was super interesting. Finally understood what linkers do. Great info if you are starting in Reverse Engineering.,1541994454.0
estimatetime,"> What's the *hex* the rest of it?

LMAO!",1542074248.0
,[deleted],1541951402.0
rgov,"Wow, Boomerang was the first decompiler I had heard of, and its [development log](http://boomerang.sourceforge.net/2004.php) goes back to April 2002 (and it was registered with Sourceforge a month earlier). Surprised to see that it's still being developed, although this project is actually a fork of the original.",1541950296.0
badbytesio,x86_64 ELF support?,1541978689.0
ferrum23,It's weird. YouTube has no reason to trust you anymore it seems without being approved and known by them. Which sucks because that's like 90% of of the YouTubers,1541832388.0
purpledollar,Ridiculous ,1541834679.0
beatricejensen,Smart cow not allowed,1541829236.0
wisfor,I miss Zer0Mem0ry.,1541865927.0
VR_AI,This is actually depressing ,1541880055.0
PapaRadroach,"Really sad to see this happening. I've watched so many of your videos, /u/Sn34kyMofo. They've taught me so much about Cheat Engine & reverse engineering in general. Thank you for making them! Hope things work out in your favor.",1541993532.0
wese,Is PeerTube am option for those niches? Have not used it yet.,1541858983.0
ReversedHazmat,YouTube is just scared of us...,1541839038.0
illuminati-agent,Try a blockchain based video platform www.bit.tube,1542609190.0
carnivorixus,I was super late to the party are the videos somewhere available again ?,1543535063.0
jumpifnotzero,"*“I don’t mind that FAANG is censoring conservative view points, I’m  not a conservative, and I don’t see how or how fast this could turn around on me.”*

... you know, normal shit",1541847217.0
Zophike1,What are some great Re startups/companies that focus on the theoretical aspects of Vulnerability Research ?,1542040824.0
Amouse999,Anyone know of any good tools for collecting an execution trace? I'm using x64dbgs tracing feature but its pretty slow. Are there any more optimal solutions? I'm looking at some heavily obfuscated code and I don't think manually stepping through it is going to get me anywhere so I am trying to do some analysis from the instruction trace... but I cant find any good tools to collect a trace.,1541835725.0
Sedbict,"Anyone got any good resources/advice on dealing with self-modifying code (specifically for an uncompressing algo)?

For a bit of background: I'm still fairly inexperienced at reading disassembly so I was naturally dumpfounded when I came across abstruse flag usage. After asking around and consulting good ol' google, I figured it was a self-modifying compression algorithm (probably some homebrew variant of LZ77). I know this is a shot in the dark, but I haven't touched the project in nearly two months because I was just so overwhelmed by this, so really just about any pointer would help tremendously!",1541942445.0
sj109,"I believe I'm able to get remote code execution on a cross-platform Xbox One game. Given everything is sandboxed/virtualized is it worth buying an Xbox One to try? There's not a lot of documentation on the differences between dev mode and retail that I can find, so it doesn't seem like it'll be very interesting. Is there anything neat games running in retail rather than dev mode have access to?",1542144514.0
SerraraFluttershy,Been wanting to approach reverse engineering a game I've played for the last couple of years...I have IDA Pro but don't know where to start. Any tips?,1542168379.0
FearlessObject,is malware analysis in a virtual environment pointless? unless you can emulate the environment really well i see it challenging since most programs can detect when its being run in a virtual machine and act differently,1542176727.0
Amouse999,Any good peephole optimization engines to work off of or frameworks to use?,1542314271.0
joxeankoret,Source code here: https://github.com/vrthra/pygmalion,1541764563.0
Zophike1,"


> Speciﬁcally, function matching is reduced to a graph isomorphism problem [11] between the compared subjects’ CFGs (Control Flow Graphs), ICFGs (Inter-procedural CFGs) and/or CGs (Call Graphs). Since graph isomorphism is known to belong to the NP class, practical methods must be considered for creating a maximal set of matches and approximately solving the graph isomorphism problem. In this paper, we propose a set of carefully chosen function features extracted from a binary’s CG and CFG, which can be used by BinDiff algorithm variants [11], [12], [14] to (i) build a set of initial exact matches with minimal false positives by scanning for unique perfect matches, and (ii) propagate approximate matching information using, for example, a nearest-neighbor scheme


Reading form the abstract this looks very interesting but one question that plagues me is since it seems each binary that functions would be diffed reduces to a unique graph isomorphism problem are there some cases where this problem can't be solved or is just completely undecidable ?


> Speciﬁcally, function matching is reduced to a graph isomorphism problem [11] between the compared subjects’ CFGs (Control Flow Graphs), ICFGs (Inter-procedural CFGs) and/or CGs (Call Graphs). 

 Are there any other theoretical problems that function matching reduces to ?




",1542039764.0
purpledollar,"Wow, they really do a lot. How many developers do they have working?",1541455217.0
port443,"Oh wow the Lumina server sounds pretty neat.

I wonder how quickly it will grow though. At my workplace our IDA machines are generally not internet-connected. We utilize our own internal FLIRT db, but I don't know if this is a normal use-case or not.",1541470386.0
Zhentar,"The hexrays updates include literally everything on my wish list (aliased stack variables, interior/""shifted"" pointers, virtual functions). Just wish I could afford to get it now 😭",1541574680.0
Zophike1,I'm loving this well timed IDA release especially with the writing and development of the MOXII books.,1541534411.0
Secure4Fun,"So for a casual-ish user learning reverse engineering and binary exploitation, would it be worth the yearly license fee to go from 7.1 to 7.2? My license expired last month sometime so no more upgrades for me. ARM is where I'm trying to go deep, but I haven't been playing with the latest and greatest yet.",1541516752.0
goretsky,"Hello,

Derived from https://github.com/mstfknn/malware-sample-library?

Regards,

Aryeh Goretsky
",1541408460.0
,[deleted],1541397087.0
dodiggitydag,Stuxnet!!!!,1541400007.0
joshslaton,Thank you Sir! Post saved for future analysis.,1541420390.0
R1OT3R,Awesome!,1541425447.0
MaybeMirx,What's the best way you suggest I download all of it? Or is it not that big?,1541433461.0
Info_Broker_,Much appreciated,1541647207.0
hotpotatoe33,It's a pity those are only binaries and no source code,1541858871.0
ReversingQuestions,"I have a hostile DLL that I wrote, that I inject into another process.

I played around with manual injection, but after getting it working and learning all those tricks, I know use RemoteDLL to inject it, which is much faster, obviously.

But the application I inject often needs to be restarted, and then I need to re-inject. This isn't the world's worst chore, but I would like it to be easier. So

1. Does RemoteDLL have a command-line way of being called? I'd like to just give it the process name to inject each time.
2. What is the best way, if any, on Windows 7 (my test platform) to just inject my hostile DLL into the application each time it launches? (I control the DLL so I can make it wait for several seconds to start doing its mischief in case I need to wait for other components to be loaded.) 

&#x200B;

&#x200B;

&#x200B;",1541189147.0
hanzou2,"Wondering if someone can answer this:[https://reverseengineering.stackexchange.com/questions/16869/generating-symbol-file-for-closed-source-binary-by-hand](https://reverseengineering.stackexchange.com/questions/16869/generating-symbol-file-for-closed-source-binary-by-hand)

I'd like to take my manually generated list of addresses and generate a symbols file that is compatible with gdb.",1541339225.0
,[deleted],1541323721.0
Zeidzic,I've got to learn assembly for an internship and the primary focus is preventing the reverse engineering (or doing the reverse engineering) of DRMs. Is there a best one to learn for this and where should I start?,1541415621.0
H4x0rus,"Not sure if anyone will see this but one of my top questions is actually how strong reverse engineering really is.

So far I have seen programs being 100% dismantled and repurposed, so how can I make sure that my app isn't destoryed by someone within two minutes? What's the limit to RE?",1541442707.0
pyjava,"Issue: I am working on reversing a TCP protocol that uses compressed packets. The server expects a ping response from the client every few seconds.

How can I approach this efficiently and get to the section of code responsible for the packet handling/compression when I can't keep breakpoints paused for too long? Do I have to try and do this with only static analysis? Or are there any other ideas?

Thanks.",1541503267.0
chestercheetah882,"Hey, I'm trying to write a sort of assistance program online poker. I need to find a way to grab information from an active window or otherwise read the information from memory.

here's an example of what's on the window : [https://imgur.com/a/8AS3AF2](https://imgur.com/a/8AS3AF2)

I want to extract the money amounts and the cards. I've never done anything like this so I started by trying just to find the values in memory using Cheat Engine, but it seems that they are either encrypted or obscured in some way. Can anyone give me some direction or information on how to accomplish this? Alternatively, I'm going to try to use some sort of OCR / image recognition to scrape the information from the screen, but this seems like a far less ideal option. Several HUD programs exist for this poker software, so there must be a relatively simple way to do this, right?",1541622111.0
covi-amento,"I just extracted the contents of a game apk called tattoo tycoon and I want to mod the sprites, I,m prety sure the sprites are in a file in the assets\hdpi folder but the file is imply called gt, it has no extension, when I open it in notepad it says png at the top but I cant open it in any image viewer. Any ideas on how to open it. Here is the link if you wan't to mess around with it https://file.io/nk0tr4 and here is a screenshot https://imgur.com/1uZyX38.",1541871059.0
kreolsky,good work. keep it up Stefano!,1541192219.0
koeningyou666,"Excellent work, I really like your analysis methodology, so much so, that I'm going to incorporate this into my own methodology.

Looking forward to more content.",1541961894.0
rolfr,"Thank you for your submission to /r/ReverseEngineering. Unfortunately, it has been removed because it was deemed to be not pertinent to the mission of this subreddit.

/r/ReverseEngineering strives to maintain a high level of deep, technical material on reverse engineering. Submissions should, in general, focus on analyzing previously-engineered systems in order to ascertain how they were constructed, what their functionality is, and to investigate security-relevant properties. Submissions should, in general, involve assembly language; hardware; or information that would assist in the process of analyzing systems, such as low-level system details, compilation/production techniques, or automated analysis procedures. Submissions on more general computer security topics, such as network or system administration, are most likely not relevant, unless for some reason they involve low-level analysis along the lines just discussed.

We hope that this removal does not discourage you from submitting to /r/ReverseEngineering in the future. However, please heed the guidelines laid out above. Your more general security-related submissions might be better placed in another subreddit such as /r/netsec.",1541058136.0
ThisIsLibra,"Have yet to read it, but took a glance at the index. Looks like a comprehensive guide. Not sure if you are the author, but keep up the good work is all I can say for now. Will return when I have read the piece.",1541000583.0
TheRustyButtons,That was a good read! ,1541170820.0
p1-o2,Turtles work on some cool stuff I've heard.,1540946929.0
ResearchOp,Bypassed the interview and got the gift card anyway,1541011185.0
voxmeus,"Are there any good resources that could help show how solidity code can be broken? I would like to be able to audit solidity code before possibly using, but tough to understand overflows and logic fails. ",1540906231.0
safiire,[https://blog.positive.com/reversing-evm-bytecode-with-radare2-ab77247e5e53](https://blog.positive.com/reversing-evm-bytecode-with-radare2-ab77247e5e53) ,1540952838.0
tcdoey,"Sorry if noob, but what does this mean... eth can be 'hacked' ?
I'm guessing not but would be interested in explanation.",1540958853.0
F3real,Pretty sure you can use radare2 also,1540934444.0
OwnTart,"Does it include functionality for challenges that require augments after the challenge binaries. Such as ""./ChallengeBinary augment""",1540664194.0
shavitush,"hiya! looking for documentation or any articles explaining how to understand common anti-RE techniques, seems like an undocumented area from what i see, although when i google i really only find olly/ida scripts to automate everything",1540625212.0
DiligentArrival,"I'm trying to understand how to bypass ASLR.

I've read it's possible to do this by writing a function to dynamically rebase addresses at runtime. If you use addresses with the XP-base, the code to do a rebase would look like this:

    DWORD rebase(DWORD address, DWORD newBase) {
        DWORD diff = address - 0x400000;
        return diff + newBase;
    }

newBase is the base address of the target that we get the base address from by using CreateRemoteThread() and then GetModuleHandle(). newBase is as I understand not bypassing ASLR. 

&#x200B;

address is as I understand the address to something within the target process. 

&#x200B;

I just don't understand the ""math"" in this function.. 

The address variable will be a fixed address relative to newBase, am I right so far?

We need to rebase newBase, right?

But if we use that rebase function.. We are first subtracting address with the base address (0x400000) (if ASLR was disabled) to get diff. Not sure  what the point is but let's move on to adding diff and newBase. What is  the point of returning that? Because if I've understood ASLR correct,  the base address of every process, will be  different every time we start it..

So, first time we start the target process it's assigned the address 0x600000. The target address within the target process is 0x600200. So.. address = 0x600200 and  newBase = 0x600000. Then we subtract address with 0x400000 and we get  0x200200 which is the diff. Then we add that to newBase and we get 0x800200.

After we restart the target process, ASLR gives it a new base address. This time  it's 0x500000. address is still same relative to the game's base address so it's 0x500200. subtract address with 0x400000 and we get  0x100200 which is the diff.. which is different than the diff from last  time we started the game. Then add that to newBase and we get 0x600200  instead of 0x800200.. so it's not working.. or rather I'm not  understanding how it actually works, I just need help to learn this.",1540734834.0
RCEdude,"About the breakpoint used : dont forget malware can directly use ZwCreateProcess and ZwWriteVirtualMemory instead of the aforementioned api.

I would rather use put bp on those, the downside is : Createprocess is using ZwWriteVirtualMemory itself :p

Nice video as always.

",1541071871.0
AlmightYariv,"Thanks for sharing, well written.",1540597068.0
GuyWizStupidComments,Thanks for your time. I will read it this weekend and comment.,1540567492.0
moshe4pro,"Really nice!

Just a question:  
Why do we need the bad characters?  ",1540505922.0
AbsoZed,"Man, I really don't like a lot of the write ups and tutorials, but I do enjoy yours.

Thanks for posting! I'm working my way towards OSCP then hopefully OSCE and this is the stuff that really interests me. Keep up the good work dude.",1540516255.0
Francium-87,"Big thx for the share, Video on RE are not common ,it’s always a pleasure to watch it",1540932963.0
ragupal,this kind of crap have hardcoded credentials  and working with binwalker on that can really get lot of things,1540474291.0
newtomac18,The Chinese supplier says the issues I have pointed out cannot be remedied... Surely not true???  ,1540462877.0
evil_shmuel,doesn't IDA does this automatically already?,1540454475.0
4e4f5045,Is this how IDA is able to label functions that just show up as a memory address in gdb/radare2?,1540519048.0
sam_binder_of_demons,"this is super cool.  fwiw there was a talk at Thotcon in 2016 on the ESP8266 that relied pretty heavily on reversing.  iirc the author claimed that the processor could never be completely secured because of some flaw in the design of the hardware itself.  I'll look around, I believe the slides are floating around somewhere if you're interested BoredPentester.",1540424715.0
Ryancor,Is there a link to this firmware? So we can download it and follow along :),1540419467.0
pfalcon2,"A(nother) project to reverse-engineer esp8266 firmware https://github.com/pfalcon/xtensa-subjects/tree/master/2.0.0-p20160809

Works with https://github.com/pfalcon/ScratchABit",1541462327.0
reversingio,Take a look at section 4.4 on relocations: [https://software.intel.com/sites/default/files/article/402129/mpx-linux64-abi.pdf](https://software.intel.com/sites/default/files/article/402129/mpx-linux64-abi.pdf),1540417391.0
imguralbumbot,"^(Hi, I'm a bot for linking direct images of albums with only 1 image)

**https://i.imgur.com/xnqzvdz.jpg**

^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&subject=ignoreme&message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&subject=delet%20this&message=delet%20this%20e8b14yy) ",1540313548.0
rolfr,"There is a user report on this post: ""ignored rules of crackme"", which I find very charming. However, I'm not going to remove the submission for that reason :-)",1540253012.0
cHoco-,"On the crackme page the author explicitly says that you're not supposed to patch the binary, so this is not the intended solution (or it would be quite boring...)",1540223173.0
redditticktock,"New project called lynx to analyze code, not an analysis of the text based lynx browser code.",1540066972.0
BLOKDAK,I guess the internet ran out of names for software...,1540075403.0
bitwise-xor,"const unsigned byte in cpp?  Is this an embedded system?  What architecture (x86, x64, something else)?",1540040741.0
mirh,"> Our analysis primarily covers AMD K8 and K10 processors because—to the best of our knowledge—they are the only commercially available, modern x86 microarchitectures  lacking strong cryptographic [protection](https://www.syssec.rub.de/media/emma/veroeffentlichungen/2018/08/20/constructive_ucode-CCS18.pdf#page=14) of microcode patches.

Interesting. 

Did anybody just so happened to also bother reversing AGESA/FSP?",1540044296.0
revivalfx,"Hi,

I'm  a long time embedded C programming professional (GCC, \*NIX,  microkernels, RTOSs, disassemblers, GDB plugins, JTAG emulators etc.)  who came from a more purely scientific/engineering perspective. Most of  my experience has been no x86 (TI DSP chips, IBM Cell, PPC, ARM, etc.) I  am now branching out into the analysis/RE field and it seems like a  comfortable pivot so far. I'm laying out a plan of attack on binary  analysis (no web/database stuff for now) only as a start in the  gcc/linux world (protostar,fusion, etc.) as I work toward studying some  low level CTF papers and then getting into the CTF world for  recreational purposes.

Implementation  details will come with use. But for now, my approach is outlining the  more academic parts of binary analysis so that my google foo can be most  helpful as I research.

Do you mind adding to this list of academic areas anything that I may be missing?

* Stack Related issues:
   * Stack Protection
      * DEP
      * ASLR
      * Canaries
      * NX
      * W\^X
   * Stack exploit methodology
      * stack buffer overflow
      * ret2libc
      * ret2plt
      * rop gadget
      * NOP sled
      * shell code
* Heap Overflows
* GOT (Global Offset Table)
* PLT (Procedure Location Table)
* Remote Exploit
* ELF file analysis
* Privileged Escalation
* Metasploit

Anything else?",1539973755.0
Pelinsquito,"Hey guys! I'm studying software engineering and I'm almost done and I didnt learn too much about reverse engineering and honestly I'm a bit ashamed that a software engineer cant reverse a simple application. What are your guy's thoughts on this? I'm afraid that I'll have to study all my life but I enjoy it and I cant wait to have some spare time to start with reverse engineering. Also, where should I start considering I'm pretty good with high level languages and I have a fairly wide knowledge about computers architecture? Thanks guys.",1539993523.0
ReversingQuestions,"x64dbg: how do I make it not break on CPP EH exceptions?

&#x200B;

I didn't have any of these exceptions until I included the STL in a DLL I injected, when I added /EHsc to the CL.EXE flags. Can I get rid of that flag? The compiler gave a warning that unwind semantics were not enabled without it. ",1540245831.0
moccajoghurt,"Windows 10 kernel question:

In the core my question is about how to reverse engineer undocumented functions.
I want to call the function ""xxxMouseEventDirect"" (located in win32kfull.sys). I have already been able to collect some information for this, but now I am a bit stuck.

The call hierarchy is as follows:
NtUserSendInput -> xxxSendInput -> xxxMouseEventDirect.

The function looks like this:

    NTSTATUS __fastcall* xxxMouseEventDirect (ULONG dx, ULONG dy, ULONG mouseData, ULONG dwFlags, ULONGLONG time, ULONGLONG extraInfo, ULONGLONG, ULONG);

I am relatively sure that I call the function parameters correctly, but there is still a blue screen when I call the function.

The bluescreen occurs like this:

    mov rax, qword ptr [win32kfull!_imp_gptiCurrent (fffffbe9`4c720ec0)]
    mov r14, qword ptr [rax]
    cmp qword ptr [r14+1B0h], rcx ; <--- Bluescreen because r14 == 0

When I call NtUserSendInput, rax points to a pointer which is then used via [r14+1B0h].
When I call xxxMouseEventDirect directly, rax points to 0, causing [r14+1B0h] to cause a blue screen.
I now wonder what is stored in win32kfull!_imp_gptiCurrent and why it is not there when I call xxxMouseEventDirect directly.

I am relatively new in the field of reverse engineering and would like to know how to deal with such a problem in general. Concrete tips are of course also very welcome.

Thank you!",1540248989.0
shavitush,"heya, i'll write what i did and i'll be very thankful if i can be told what i did wrong during this and i think i missed something very obvious

trying to get into RE more recently, wrote my own app in C++, it's basically this: https://gist.github.com/shavitush/595b643d37a35fceded2827628dfdea9

header file: https://gist.github.com/shavitush/9b1051cb84312391290a76b23e265203

now, i'm trying to play around with it. i built it on release mode with no optimizations so it doesn't inline and i didn't include symbols to challenge myself ofc

my goals for this is to call the functions after injecting code into the program to verify that it works, hooking `RE::div` and returning `RE::GOAL` so that it passes the check i put there

now comes the part of finding `RE::div` in memory, opened the exe in IDA pro, found the main function by xrefing the strings, pressed F5 to read pseudocode and found this:

    v37 = sub_411406(v61, v60);
    v38 = sub_411267(std::cout, ""Div: "");
    std::basic_ostream<char,std::char_traits<char>>::operator<<(v38, v37, sub_41131B);
    v41 = sub_4112EE(v40, v39);
    std::basic_ostream<char,std::char_traits<char>>::operator<<(v41);
    sub_4112EE(v43, v42);
    if ( sub_411406(v61, v60) == -1 )
    	Str = ""Congrats, you made it!"";
    else
    	Str = ""Nope, try again."";

so i'd say it's safe to assume `sub_411406` is my `RE::div` function right? well, according to IDA it calls another function with the same prototype and parameters. that function starts at `.text:004125F0`

now.. when i attach a memory viewer to the running program, there's nothing in `004125F0`

i'm very confused.. why is the address i've seen in IDA not the same address where the function is at runtime? ",1540261299.0
coffeebooksandsurfin,"Hi Guys,

I'm trying to learn about simple reverse engineering of XOR algorithms. Are there any good sites or tools for beginners you would recommend for me? What I'm looking to learn is really simple stuff but I'm a total beginner, basically I just want to be able to reverse engineer simple hex algorithms when I know both the potential hex inputs and the hex outputs. 

As a simple example, I know that each of these lines derive the 1 byte hex output from some combination of all or part of the 3 byte hex inputs (always in the same order of bytes), and I know each line uses the same algorithm. 

E5	83	9D	=	78

7F	DD	25	=	5A

65	7F	AC	=	C9

In this case, the algorithm would be Byte1 XOR Byte 3 = Output because:

E5 ^ 9D = 78

7F ^ 25 = 5A

65 ^ AC = C9

Are there tools where I could just enter each line of inputs and their corresponding output, and it would guess at possible algorithms and narrow down the guess the more inputs/outputs I out in? If not, what is the process I would go through to go about trying to reverse engineer these types of algorithms when I know all the inputs and outputs?

Another example of a more complicated one that I don’t know the algorithm for and am trying to solve:

E0	04	01	00	A4	66	76	B4		=	A9

E0	04	01	00	A4	66	4A	ED		=	DD

E0	04	01	00	A4	66	64	91		=	28

E0	04	01	00	A4	66	6E	B4		=	A2

E0	04	01	00	A6	BC	64	D4		=	9C

E0	04	01	00	A6	BC	A0	71		=	01

E0	04	01	00	A6	BC	6D	6F		=	E6

E0	04	01	00	A4	66	51	86		=	CA

Thanks in advance for any help or tips!
",1540364947.0
emtuls,"If anyone has any trouble with something in the walk-through as far as needing clarification or they are attempting to do it themselves and find I messed up somewhere, please let me know! Thank you.

The binary can be found on my github: https://github.com/emtuls/ctf/tree/master/2018-hacktober.org/Binary_Analysis/binaries -> Larry.out


For anyone that needs resources for learning Reverse Engineering, I can provide you with a baseline that I would recommend starting with. Eventually, I plan on making my own set of tutorials...but that's in the works.

x86 Assembly: 


If you don't know assembly language at all, [this list of videos](https://www.youtube.com/playlist?list=PLue5IPmkmZ-P1pDbF3vSQtuNquX0SZHpB) was where I picked up a decent amount of x86 assembly language.


A few good books would be:


* [Hacking: The Art of Exploitation](https://www.amazon.com/Hacking-Art-Exploitation-Jon-Erickson/dp/1593271441) I am a huge advocate for this book. I learned a lot from this and have read it multiple times. It is written very well and teaches someone with no experience how to do C programming and assembly. This is mainly a book for learning exploitation/vulnerability research, but that can play hand and hand with Reverse Engineering. It will show you the assembly language break down of basic exploits and this can help you with RE.

* [Practical Reverse Engineering](https://www.amazon.com/Practical-Reverse-Engineering-Reversing-Obfuscation/dp/1118787315) I read through the beginning of this book and it gave me some good foundations of understanding memory and computer architecture for RE along with assembly of course

* [Secrets of Reverse Engineering](https://www.amazon.com/Reversing-Secrets-Engineering-Eldad-Eilam/dp/0764574817) This book is a bit in depth, but the beginning gives another good foundation for Comp Architecture and assembly stuff.

* [The IDA Pro Book](https://www.amazon.com/IDA-Pro-Book-Unofficial-Disassembler/dp/1593272898/ref=pd_lpo_sbs_14_t_2?_encoding=UTF8&psc=1&refRID=8NM97R8EDBAND37XKA7Y) Haven't personally read this book yet, but I have been told it is the defacto standard for learning IDA Pro, and it has examples you can learn from.

Hands On:


* [Legend of Random](https://legend.octopuslabs.io/sample-page.html) Very useful hands on with tutorials. Mainly based on cracking, but that requires reverse engineering. Highly recommend this!

* [Lenas Tutorials](https://tuts4you.com/download/category/17//) Again, another awesome hands on tutorial, mostly based on cracking as well.

* [Crackmes](https://crackmes.one/) These are more of challenges once you start to have a little understanding down

Courses:

Tons of courses on youtube. I learn well from visual, so I recommend these youtube videos:


* [Basic Dynamic Analysis](https://www.youtube.com/watch?v=_ACDiW2I4ns)
* [Real World Decompilation](https://www.youtube.com/watch?v=vb18UVF4a_o) There are a few videos to this series and he disassembles a game, definitely nice to learn from.


Beyond that, Google will always be your friend, and /r/reverseengineering. I also have a bunch of material for Malware RE, but that's a bit different than Software RE, though it is relatable.",1539984363.0
7histle,[https://kaitai.io/](https://kaitai.io/),1540204501.0
Cnqr15,Too technical for me having only done an intro to C course. What exactly are the possibilities exploiting this? Mass dissemination of information? ,1539910068.0
andrewl_,"This seems so ideal: a single language to specify instruction decoding/disassembly that can emit decoders/disassemblers in many target languages. The specifications are crowdsourced and crowdfixed. Why hasn't it taken off? For example in gdsl-toolkit/specifications/ I only see 5 real architectures (arm7, avr, mips, msp430, x86).",1539810640.0
eagle33322,[https://xkcd.com/927/](https://xkcd.com/927/),1539830176.0
hdmdh,"This is a neat overview. The slides are great, but here are some additional bits from the presenter:

\-  paper: [https://chaosdorf.de/\~barbieauglend/Analysing-compiled-binaries-using-logic.pdf](https://chaosdorf.de/~barbieauglend/Analysing-compiled-binaries-using-logic.pdf)

\- transcript: [https://barbieauglend.re/2018-10-03-logicvsmalware/](https://barbieauglend.re/2018-10-03-logicvsmalware/) 

\- final version of the presentation: [https://chaosdorf.de/\~barbieauglend/final\_preso.pdf](https://chaosdorf.de/~barbieauglend/final_preso.pdf) ",1539753476.0
bd0,"I admit I don't really get these slides. I realize that slides often don't contain the full details of a particular piece of research, and that's fine, but I find these slides especially unclear as to what the research was about. The title says it's about ""automated heap exploitation"" (and the filename is AHEG.pdf, presumably short for ""automated heap exploit generation""). Was this a survey? A theoretical investigation? 

An overview of its contents, minus introductory/organizational slides, memes, and slides with pictures on them:

* Slides 6-14 show a figure of an SMT solver solving a query, and path-based analysis based on constraint solving.
* Slide 15, ""logic gates of memory"", shows an ASCII diagram of a logic gate. I don't understand this slide.
* Slide 17 shows a diagram of memory as consisting of a stack and a heap.
* Slides 19-21 discuss ""applications"" -- of SMT-based analyses, presumably. There are three bulleted lists of ways in which SMT solvers might be employed in binary analysis, specifically in malware, vulnerability discovery, and exploit generation.
* Slide 22 says, in its entirety, ""What we are looking for: vulnerable and exploitable"", with an unrelated picture.
* Slide 24 is a bulleted list of three types of code analysis.
* Slide 25 is a list of two open-source dynamic analysis frameworks and their capabilities.
* Slide 26 says, in its entirey, ""Tool of choice: forward symbolic execution"".
* Slide 27 introduces a formal symbol with no definition. ""Pi\_Vulnerability(Epsilon)"" is a vulnerable path for input Epsilon. It's not really clear what this actually means. The point of formalism is to assign precise meanings to symbols. This is just a symbolic statement with no accompanying formal definition.
* Slide 28 says, in its entirety, ""Plan: Theorem: Given a program, automatically find vulnerabilities and generate exploits for them."" A theorem is a logical statement guaranteeing the conclusion when the hypotheses are met. This statement appears to be a high-level description of an algorithm, not a theorem. Slides 29 and 30 are the same slide with the words ""direct influence"" and ""indirect influence - malloc(strlen(user\_input));"" at the bottom.
* Slide 31, ""Exploit Generation"", says ""Check if it is exploitable. Not that easy anymore... Pi\_Vulnerability(Epsilon) AND Pi\_Exploit(Epsilon), Where Pi\_Exploit(Epsilon) is the attacker's logic"". Again, neither Pi nor Epsilon has been defined.
* Slide 32, ""Exploit Generation"", says ""Implement Pi\_Exploit(Epsilon) for a really special case Pi\_Vulnerability(Epsilon) AND Pi\_Exploit(Epsilon) and then it works MOST of the times. Is it really automated then?"" I don't get it. What does this mean?
* Slide 33, ""Exploit Generation"", ""EXTRA: Evaluate"", has a bulleted list: 1) Find the HEAP, 2) Exploit Verification, 3) State Space Explosion, 4) Environment Definition.
* Slide 35-37 list three limitations: Rice's theorem, an unclear point about hierarchies of formal languages, and ""practical"" (containing only a graphic of a processor).
* Slide 39-40 conclude that symbolic execution is powerful for vulnerability research and can generate exploits.
* Slide 41 describes work that the author has done ... presumably involving symbolic execution?
* Slide 42 describes future work the author intends to do, presumably involving symbolic execution.
* Slide 43 appears to be an introduction slide that wound up in the conclusion.
* Slide 44 is a list of three references: two papers and one person.

Again, slides often don't present full details about the work done on a particular project, and that's fine. In this case, it seems like only slides 27-33 have any details about ""heap exploit generation"", consisting of two symbolic statements ""Pi\_Vulnerability(Epsilon) AND Pi\_Exploit(Epsilon)"", that if we implement them ""for a really special case of Pi\_Vulnerability(Epsilon) AND Pi\_Exploit(Epsilon), then it works MOST of the times. Is it really automated then?"" If I am interested in automatically generating heap exploits, how does this information assist me (either procedurally, or in terms of my understanding)?

I'm confused as to what research actually took place when writing these slides. Formal modelling is supposed to capture the features of systems and/or procedures in an actionable way, such that precise statements can be made about those systems/procedures. This paper presents two instances of formalism, doesn't define them, but seems to insinuate that they capture the process of automated heap exploit generation.

The formalism, undefined though it is, also contains no references whatsoever to the heap state of the system, nor its role in exploitation. Since the formalism doesn't reference the heap in any way, isn't it then fair to say that this is a presentation about automated exploitation of use-after-free vulnerabilities, race conditions, stack buffer overflows, etc.?

I hope the author continues to do and to publish research, but a piece of advice I might give is to focus the presentations on explaining the work that the author has actually done, specifically the novel aspects of the research. Only 7/45 slides in this presentation focus on the topic, as opposed to the background material or conclusions. This doesn't leave enough space to explain the author's novel contributions to the topic. Get rid of the memes and the pictures, shorten the introduction and the conclusion, and focus on the technical problem as well as your contributions to it.

For the benefit of readers, a related piece of advice would be to include a section comparing and contrasting the author's research against existing research. For example, [Sean Heelan's work](https://arxiv.org/pdf/1804.08470.pdf) in the area contains a ""related work"" section with 22 citations of related work, and detailed comparisons with the most elevant articles.",1539628512.0
possiblyquestionable,This is the craziest and the single most interesting thing I've read for a very long time,1539653488.0
rolfr,"Really cool work. Running multiple instances at the same time, and disabling and re-enabling them selectively, reminds me in an abstract way of models of non-deterministic computing from undergrad (i.e., NFAs). As for differential coverage, [an old BitBlaze paper](http://bitblaze.cs.berkeley.edu/papers/diffslicing_oakland11.pdf) comes to mind regarding an alternative mechanism for computing this information from execution traces, as well as visualization techniques.",1539661017.0
i_went_full_retard,Chatroulette would be amazed!,1539642741.0
irqlnotdispatchlevel,"This is awesome. I can't wait for the next posts about it, especially the one about the MMU. ",1540477884.0
wchill,"You can actually take advantage of the way the binary rewrites itself in order to solve the puzzle.

There are 33 instances of a ""puzzle"" struct in the binary that specify puzzle metadata. Each of these puzzles corresponds to a few characters of the answer string for that iteration. After every iteration (regardless of answer), the program shuffles the puzzle order and then writes itself back out to the file.

You can take advantage of this to read known addresses in the binary and parse the puzzle metadata, then attempt to bruteforce the answers. This was my initial approach: use a Python script to read the binary, decrypt the code for each puzzle and then pass that to a helper C program that just loaded the code into memory and then jumped to it. This works, but it took about 20 minutes to finish running to completion.

There is a trick you can do to speed things up drastically. Because the only thing that happens after each iteration is that the puzzles get shuffled around, the little 1-3 character snippets making up the answer get shuffled around also, but the characters themselves do not change. So once you calculate the first set of answers, you can take advantage of this property which reduces your search space from 95^3 iterations for a 3 character snippet to 11.

Doing it this way takes about 1 minute to solve all 666 iterations. It can very likely be optimized even further, but this was good enough for me. There are some small issues like the fact that I don't actually track when the CTF binary has finished writing a new version of itself to disk, opting for a sleep(0.1) instead, but it works.

Note: there was some weird funky stuff going on with two of the mini puzzles where it would try to read from the previous stack frame, giving me bad answers, so as a hack I just wrote inline assembly in my C helper program to clear 40 bytes from the stack before doing the jump to the puzzle check code snippets.

My below solution works on a clean copy of the CTF binary - only external dependency needed is elftools for Python.

Python code: https://gist.github.com/wchill/e3285d45751af93121975937376adaab

C helper code: https://gist.github.com/wchill/9b1ea22f48d6ab67e12030229b01f548",1539639249.0
kavo555,Awesome work 👍,1539616250.0
416D6974,"Woah. Patching the binary is a great idea.
My solution (https://github.com/The-mit/Flare-on5-magic) used linux's ptrace to brute-force the characters and jut re-enter them each iteration.

All i can say about my solution is: DON'T. It was a nightmare to debug (can be seen by the intense printing and code in comment) and overall slow ( might just be my shitty code though).

I'm going to steal you idea for next time i need to ptrace something 😈",1539640873.0
Heartleak,"Great solution!

I have also just uploaded my solution to this challenge, check it out 

[https://www.youtube.com/watch?v=3iYlpYLTn-0](https://www.youtube.com/watch?v=3iYlpYLTn-0)",1539766472.0
plowsec,Honestly such a list would be more useful if it included advantages / disadvantages for each tool. Otherwise it is to hard to choose one. Thanks nonetheless.,1539594367.0
mewkiz,"> Honestly such a list would be more useful if it included advantages / disadvantages for each tool. Otherwise it is to hard to choose one. Thanks nonetheless.

@plowsec You're most welcome, and as for listing pros/cons I agree with you. However, most pros/cons are subjective. The main suggestion I would give for a quick evaluation of the various tools is to see if there has been any recent developments (any commits within the last 6 months/one year or so). Otherwise the linked project is likely dead.

The top two/three projects I'd recommend are MC-Semantics (which uses Remill as a back-end), RetDec (which includes a fully-fledged decompiler with support for C output), and llvm-mctoll (mainly because it has a big backer, Microsoft, and it was recently announced, so will be active development the coming months).

Other than RetDec, Fcd is also interesting as it too features a decompiler. Both RetDec and Fcd are actively developed. Perhaps RetDec more so, as it has a large organization behind it (Avast). Fcd started as a one-person project.

The following projects may be considered (semi-)dead:

* Fracture (last update May 28, 2015)
* rev.ng (last update Apr 27, 2017)
* OpenREIL (last update Oct 8, 2017)
* Dagger (last update Dec 2, 2017)

The following project is incomplete (but actively developed)

* libbeauty (last update 21 hours ago)

The following projects are actively developed, however, I have not tried them so can't say more than that. May definitely be worth looking at, if they support lifting from the machine architecture of interesting.

* reopt (last update 25 days ago)
* bin2llvm (last update Jun 5, 2018)
* RevGen (last update 14 days ago, note this update is in a larger repo, the tool itself was updated about two years ago)

Hope that may be of some help. Let us know if you take one of them out for a spin, so we can learn from your experience too.

Cheers,
Robin",1539721969.0
binaryswap,"""Those who talk; Doesn't know, While those who do know, Doesn't talk."" - Guess he's Right. Haha

&#x200B;

PS:

Sorry for the absurd intro music, Its actually Boyce Avenue Playlist on my Local Disk; Welp, I apologize if you find it quite annoying. Hehe. :)",1539581596.0
kavo555,Excellent write-up indeed. Very clear thought process and detailed results. Thank you for sharing such awesome work.,1539546855.0
computerfreak97,Also very similar to https://github.com/trailofbits/mcsema,1539397246.0
k4st,"If you want to lift x86(-64) or aarch64 to LLVM bitcode, check out [Remill](https://github.com/trailofbits/remill). An example of using its APIs is [here](https://github.com/trailofbits/remill/tree/master/tools/lift#remill-lift-). Remill is used by [McSema](https://github.com/trailofbits/mcsema), which lifts whole programs to bitcode.",1539444102.0
Arrilius,"This is really cool! It reminds me of [https://rev.ng/](https://rev.ng/)

> rev.ng is a suite of tools for binary analysis based on QEMU and LLVM, aiming at accuracy and portability of the analyses across a wide range of architectures. 

&#x200B;",1539396091.0
randomatic,And if you want a lifter bap (GitHub.com/binaryanalysisplatform) is far more mature. ,1539413654.0
mewkiz,"Thanks! Yes there are a lot of interesting projects out there! I've tried to summarize a list of the ones I know at https://github.com/decomp/decomp/blob/master/front-end.md

MC-Semantics, rev.ng and Remill are on the list. Not BAP though as it targets BIL rather than LLVM IR. Still a very good tool for binary analysis.

@IdealImperialism I've not been able to use KLEE with these this yet, but definitely using symbolic execution on top of the lifted LLVM IR is the next step in reverse engineering :)",1539592343.0
IdealImperialism,Anyone tried this with something like KLEE?,1539414536.0
ReversingQuestions,"I'm using x64dbg.exe to hand-inject my DLL into an enemy binary.

I have it working enough that it loads the DLL and calls DllMain() on it.

But after loading my DLL, the program runs into a ditch and crashes. I am doing

      push r8    # push the three variables I will use onto the stack
    push rdx
    push rcx
      # all my stuff here, which sets three variables in those three slots, then calls LoadLibraryExA.
    pop rcx    # restore state, in reverse order
    pop rdx
    pop r8

But the variables I get back off the stack are not the same. In particular, rcx, which I pushed into the stack as FFFFFFFF, comes back off as a dupe of rcx, some specific address.

This causes mayhem.

Is my calling convention wrong? Earlier [I had a version that never loaded the DLL but at least never crashed]. 

What am I mucking up this time?",1539639222.0
angrybaldguy,"I need to pick my electives for my computer science program. I am taking as much reverse engineering as I can, but I was wondering what other areas of security would complement that on the job market.  C, Python, and operating systems are all part of the core requirements, but when it comes to things like networking and web app security, I have no idea what to pick.",1539679762.0
petak5,"I am new to Reverse Engineering and I am wondering whether Windows is the default platform for RE. Windows has way more tutorials on the internet than Linux and it also has a lot of massive, industry standard software that seems to be easier to use for beginners compared to valgrind and radare2 on Linux side (I've come to this conclusion after searching the web for hours and reading this subreddit's info). Why is it so and what platform would you recommend to start with for a beginner?",1539793066.0
reddit_fuuuuu,"technical content is alright, but it's presented like a discord chat for some reason",1539358165.0
hapoo,And I’m sure the company completely ignored him. ,1539383888.0
lulzury,"Very cool! I've never seen such as straight-forward explanation of reverse-engineering of an Android app. Other than the memes, this was a very cool write-up.",1539573751.0
slarbarthetardar,That bit about pulling the apks and decompilation was cool. Nice hack!,1539380972.0
Statically,What level of knowledge is needed to understand the video? I wouldn't mind watching when I get home. ,1539337098.0
HairyNopper,"Very cool stuff. I switched from computer engineering to computer science during my undergraduate studies, because they never showed us things like this (instead, we did mostly theoretic fundamentals of electrical engineering). Finally my symbolic knowledge about logical connectives and my shaky knowledge about logical gates connect - and that is what it looks like.",1539333659.0
h0m3us3r,Instant subscribe,1539325390.0
saadmrb,Its sensors can be used in X-Ray vision .. Reverse engineering gave me an idea to turn a cellphone camera to an x-ray object founder ,1539739383.0
TheRealSophistifunk,WAT,1539259402.0
secthrow1,REFUND MY TIME.,1539275041.0
Adikso,This post is completely unreadable in this form (Big block of text with Uppercase words In The middle Of Sentence) and I don't really see the point of it.,1539478290.0
eagle33322,Too bad ee is down again.,1539303598.0
TheWass,"I've enjoyed this series so far, thank you.",1539289647.0
uncacheable,"knowledgeable group of people with lots of people doing active CTF competitions. worth while to join if you're looking to get started or talk to like minded people

&#x200B;

glad to see there's a lot of people too - i posted an article that was posted in there to this reddit not too long ago",1539202220.0
androshka,Props for this!,1539215354.0
DrawBacksYo,Is there any beginner-friendly irc channel for it?,1539208657.0
ps3o-k,I'm like a super beginner tho. what stuff should i learn?,1539218012.0
stmafi,Could you Provide a new invite link? The one stated above has stopped working.,1539237977.0
Gbps,Another updated invite link: https://discord.gg/weKN5wb,1543521616.0
wenz3l,"Hi !

if you are curious, project repo is here: [https://github.com/Wenzel/r2vmi](https://github.com/Wenzel/r2vmi)

I'm not able to analyze malwares yet, since my issue while intercepting and reaching a new process's entrypoint is that the page is not mapped yet, therefore no possibility to set a breakpoint ¯\\\_(ツ)\_/¯

&#x200B;

I will definitely continue working on this in the future,  
if you have any questions, feel free !  
",1539183212.0
redb2112,That made me loopy.,1539144286.0
breadchris,"lol i did the same exact thing, nice writeup 😜",1539150741.0
jwstone,"good write-up. i tried similar and got hung up on the undefined behavior, so i'm glad to learn your solution to that. how did you obtain the decompiled C? do you have a higher version of binja? did it come from a different tool? did you hand-write it?",1539370461.0
ecks,thanks!,1539140602.0
Zophike1,I wish there was a more active online community to discuss the Theoretical side of Vulnerability Research. Is there like a mailing list or something for topics along those lines ?,1538999739.0
zznop_,Inspired by this blog post: https://x-c3ll.github.io/posts/fileless-memfd_create/,1538923068.0
cob_258,"Hi, thanks for sharing, this is the first time I read a code of an injector/run_pe/memExecution in linux, so I have this question : in windows, when you append extra data at the end of a PE you can obtain their location and size from the header (you do some arithmetic) so you don't have to hard code it then hex edit it, is there a way to do it for ELF file? (Excuse my noobness, I know nothing about Elf format) ",1538930742.0
farmdve,Any video of this conference?,1538902273.0
Glenn_Carbon,"Nice blog, I've been getting into reverse engineering lately and trying to get a good understanding of how things work and this looks like it will definitely help.",1538816420.0
HerpDerpImARedditor,"Excellent series, thanks! Really easy to read and follow, thorough without being insurmountable/info-overload.",1538864343.0
breadchris,awesome writeup dude! I was the challenge writer and am super stoked to see a writeup for this ❤️,1538809984.0
andrewl_,really cool ROP animation!,1538800123.0
madam_zeroni,How can I reverse engineer why my ex left me,1538764825.0
Zubastic,How to unpack VMProtect virtual machine?,1538868475.0
AbortTheFort,I want to make a private server for a long dead game. It's mobile so how would I go about making a private server for this that I can play on.,1538832360.0
ReversingQuestions,"I'm trying to roll my own DLL injection. It's a 64-bit program, and I want to inject a 64-bit DLL I wrote. I've tested this DLL: when I LoadLibraryExW(""p.dll"") from a small test program I run, DllMain() is called and executed.

I am injecting by finding an existing call, say DLL_Victim(), that I know is called. Fortunately this instruction is just a JMP to another address, surrounded by a lot of dead-space, so I had plenty of room to modify it. I used x64dbg.exe to change it from

    jmp 0xabcdef  

to

    push r8    # push the three variables I will use onto the stack
    push rdx
    push rax
    sub eax, eax  # set arg3 to 0
    sub r8d, r8d  # set arg2 to 0
    lea eax, ds:[ptr to 0xFILE] # set arg1 to L""p.dll""
    call qword ds:[<&LoadLibraryExA>] # LoadLibrary
    pop rax    # restore state, in reverse order
    pop rdx
    pop r8
    jmp 0xabcdef  # go back to the original call we were supposed to do


The reason I used LoadLibraryExA is because that function is already imported.

The code above works, by which I mean it doesn't crash. But ""p.dll"" is not loaded. I put p.dll into both the directory other DLLs are loaded from, as well as the program's home directory. It doesn't get loaded. I ran up process monitor to see if it was trying to load from someplace else, and it never even tried grabbing ""p.dll"" from anywhere.

So what is my major malfunction?
",1538872085.0
MusicManColin,"Any help?  
[https://reverseengineering.stackexchange.com/questions/19567/reverse-engineering-flat-data-file](https://reverseengineering.stackexchange.com/questions/19567/reverse-engineering-flat-data-file)",1538951172.0
andnbspsc,"I just got a pretty simple hybrid smart watch (no screen, normal watch face but vibration and encoded watch arm functions) that syncs to an app over bluetooth. I'm wondering how and if it would be possible to find out how it communicates with the app and then potentially write another app for it. A bunch of the functionality is probably contained within the watch and not alterable but I would like to find out how much.",1539022059.0
monkeyapplez,"Would anyone be able to point me in the direction of where to get started with reverse engineering? I want to get more into this but have no idea where to begin and am slightly overwhelmed.

&#x200B;

Thanks!",1539285296.0
spoiledtoast,"I know this is vague, but I'm trying to find a VM where the idea was you are trying to reverse some hardware.  A neat thing I remember about it is that it included a manual for the ""product"" that you were supposed to reverse.  And the story for the VM mentioned they managed to ""secure a prototype"" or something like that for ""only $10000"".  Has anyone heard of this VM and knows where to find it?

I can't remember much more than that, so I understand if this doesn't get answered.",1539300291.0
TheBeginningofTalent,"Looking for older versions of IDA because I'm trying to reverse engineering a Wii game. 7.0 doesn't offer much and the plugins I have only work for 32 bit PPC systems, and again IDA is suddenly lacking.

Does anyone know where I could find someone like this or similar programs?",1539327709.0
spoiledtoast,"I know this is vague, but I'm trying to find a VM where the idea was you are trying to reverse some hardware.  A neat thing I remember about it is that it included a manual for the ""product"" that you were supposed to reverse.  And the story for the VM mentioned they managed to ""secure a prototype"" or something like that for ""only $10000"".  Has anyone heard of this VM and knows where to find it?

I can't remember much more than that, so I understand if this doesn't get answered.",1539299600.0
CPunch_71,Thanks! Very interesting read!,1538751713.0
xxc3ncoredxx,ELF is pretty cool. I once wrote a program to parse the header as part of a project of mine.,1538756178.0
mewkiz,"For those curious, the study is part of a larger project, to build a compositional decompilation pipeline: [https://github.com/decomp/decomp](https://github.com/decomp/decomp)",1538604019.0
affinitive2,The code is open-source!,1538530817.0
HerpDerpImARedditor,Excellent work and a fantastic article.,1538497494.0
ilfak,Thank you for sharing your experience!,1538549772.0
harrybalsania,Adobe amazes me all the time. They really don’t give a shit. ,1538514004.0
ru57,Bingo !,1538503465.0
Phantasm1975,i dont understand.,1538495678.0
Ryancor,Nice read! Only thing it would have been nice to see in detail what bytes you extracted in all and how you used them in a XOR calculator. ,1538445295.0
ragnar_graybeard87,Awesome idea. ,1538358053.0
kirbae_,Sounds nice. Will look into it,1538381302.0
Mumbles76,"I got:

>Application popup: Squally.exe - System Error : The code execution cannot proceed because MSVCR110.dll was not found. Reinstalling the program may fix this problem. 

&#x200B;

You may want to test/debug this on a machine without any development tools on it.

&#x200B;",1538448841.0
raggy456,`ls-la.fyi’s server IP address could not be found.`,1538239672.0
ps4pls,really enjoyed reading this,1538245938.0
Pettteee,"Now, how do we prevent this? There is a single if statement in my code to enable or disabled the whole software, it seems to be very easy to hack by this for beginners method.",1538246593.0
farmdve,Why on earth? You could always use it by continuing.,1538244990.0
madam_zeroni,"Solid reference points? For starting? Something that helped you? I hate asking this type of question cause all technical based subreddits are FLOODED with this question, but, yeah....",1538161341.0
amaths,"I found a potential entry-level RE job. The first challenge is to break down a 32-bit ELF binary and find an email address therein.

So far, I have opened the file in Ida Free. I can see dwords being loaded into memory sequentially, so I'm guessing that is the email, but I also think it is obfuscated based on the surrounding assembly.  I see some weird bit shifting, multiplication, and addition. 

The final character is loaded as such:

**mov     dword ptr [eax+50h], 23A3h**

So far, my approaches have not worked. I've walked through the assembly but it never ends up making sense at the end. I've moved it over into SASM and Visual Studio to try and build-then-debug it. I can make it build but not really debug it for some reason. Is this the correct approach to finding this hidden email, or is there something else I should try?

Edit: I am not looking for the solution, but simply for some hints. I'm having a blast working on this and want to see it through.",1538163676.0
fiddlerquestions,"I've done a lot of unix reverse engineering but not much on windows.

I am trying to inject a DLL into an existing program. I was following the guide at https://blacksunhackers.club/2016/08/post-exploitation-persistence-with-application-shims-intro/ and I got to the part about finding ""InjectDLL"" in the list of compatibility fixes. I have this fix in the 32-bit version of **Compatability Administrator** but it doesn't exist in the 64-bit version. Is there another tool I need to install, or does DLL injection not work with 64-bit programs?",1538193933.0
ConspiraciesDoExist,"Does anyone know how to convert windows 10/store apps (.Appx ?) to a format that can work on Windows 7 ? Maybe some hex edit can do something? (I think some .exe files can be extracted but don't seem to be compatible enough to run)

Or does anyone know how to get Windows Ink/sketchpad (found in Windows 10 under Windows Ink Workspace) to work in Windows  7 ? (I hate Windows 10 but like this program).

It looks like this: https://images.techhive.com/images/article/2016/04/windows-10-windows-ink-sketchpad-100657268-orig.jpg

I don't even know where the folder location is. I was wondering if a portable cross-OS version could be made. This program's drawing feels unique even compared to Photoshop, Gimp, Krita, etc.


",1538239867.0
AllUrRootRBelong2Me,"Attempting to RE Tuddy Ruxpin after I saw it at DEF CON, and getting hung up on slide 19:

https://media.defcon.org/DEF%20CON%2026/DEF%20CON%2026%20presentations/Amir%20Etemadieh%20-%20ZenoFex/DEFCON-26-Amir-Etemadieh-Zenofex-Dissecting-Teddy-Ruxpin-Reverse-Engineering-the-Smart%20Bear.pdf

I don’t know how to interpret what I’m reading in the file. How would I go about learning how to decode/read something like this? Best way to go about testing what piece(s) of data do in the file? Any other tools you would recommend for this (using windows, and have unbuntu on VM)?",1538246706.0
BestLibertarianTemp,"I have a win32 application and a companion DLL library from which the program calls some exported functions. Both the lib and the app are win98 era by the way.

Is it realistic to extract the function params, return value types etc so that I can call em from my code (considering I am also unfamiliar with the RE)? I just got no idea if it is even possible, but in that fortunate case it maybe achievable, perhaps you may suggest some route I could try (I realize no1 is going to do the job and it could be somewhat hard but I need functionality inside the DLL in question and running the accompanying program becomes more and more problematic)

Sorry if this question is dumb.",1538325937.0
Unknow0059,"What exactly is Cheat Engine? Is it related to reverse engineering?

I'm asking because it's the only way i found for modding games that don't have mod support and whose source code is closed, but then i stumbled my way to this subreddit.

Well, i think reverse engineering can be used to mod those games. I'm not sure. That's why i'm here. Can it?",1538350683.0
soullessredhead,"I took part in a CTF recently that had an image we were supposed to RE to get a flag, and only 4 people managed to solve it.  After the competition was over the person who wrote the specific challenge told us it was an ARM image, and the title of the challenge (""bicep"") was a clue.

So my question is, if you're going into something like this blind, is there a way to tell from a hex dump or something what kind of architecture something is compiled for? Is there some tool that makes this identification easier?

EDIT: To add some information, this is what I get when I run `file` on the ... file. My machine is an x86_64 Linux:

    $ file puzzle
    puzzle: data",1538411830.0
redfanglicker,Are there any guide like lena's but updated for windows 10? Hers is almost a decade old,1538543743.0
-SQUD-,"Hello,

good introductory article!  
i think there's a mistake in the *funcX* function.

"" cmp \[ebp - 4\], 0xd "" should be "" cmp \[ebp - 8\], 0xd "" as  ""\[ebp - 4\]"" points to the return address.",1538168684.0
hackmebr0,Thanks for sharing such great information.,1538190550.0
perihwk,I hadn't seen anyone post about this years Codebreaker challenge and figured it is worthwhile to share. Unfortunately it is only available to people with a valid .edu/.gov/.mil email address.,1538079322.0
bosley7186,Anybody have hints on task 3?,1542043077.0
jeremywildsmith,"This is a really interesting read, I am about half way through.

1. It mentions VMHunt is open source, is there a repo I can look at? I would love to see some of the code
2. After all Data-Transfer instructions are translated to moves, you run a peephole optimization on the sample. I am curious if open source implementations (I.e LLVM's peephole optimizer) is sufficient or if a custom implementation was required? If so, what were the pros/cons?

Thanks!",1538108232.0
moyix,Awesome. The multi-granularity symbolic execution work here is really nice. And I really like that they went actually proved equivalence of the deobfuscated code!,1538080094.0
IdealImperialism,I always giggle when I see 'stack-based buffer overflow and 2018 in a CVE'.,1538078707.0
henke37,Looks like assembly code that manually parses the export table for kernel32 to find the function `CreateProcessA` and then proceeds to call the function. All without any null bytes.,1538010761.0
GuyWizStupidComments,Thanks. It's a couple of years since I worked on reversing elf binary. I will have a look at it to brush up,1538004205.0
draeath,"I have to say that the `.animating.sticky.centered-top-container` CSS on your website theme is *incredibly annoying.*

On the desktop it's only a mild annoyance, but on my Android it was wasting almost 15% of the screen.

But thank you for the articles :)",1538076511.0
CommoG33k,"Not Today, ISIS.",1537826476.0
,[deleted],1537824921.0
,[removed],1537843832.0
antlife,This is more of a mag card swipe issue that's likely causing it to send zeros or an empty string triggering to think it's a test or debug card.,1537759048.0
,[removed],1537795449.0
igor_sk,slides from Recon Brussels 2018: https://recon.cx/2018/brussels/resources/slides/RECON-BRX-2018-Hacking-Toshiba-Laptops.pdf,1537822299.0
Samguy3,This is absolutely legendary work!!,1537832803.0
ragnar_graybeard87,Nice. Can you do a working denuvo tutorial next? /s,1537706545.0
cnova35,This guy knows what he's doing. KUDOS!!,1537724010.0
raoulduke1967,Love it. Please do more stuff like this!,1537720247.0
youthagainst,Are you using the IDA pro decompiler for this? What are your thoughts on it? Worth it good bad drawbacks etc,1537727302.0
krystalgamer,Guys use the following link: http://krystalgamer.github.io/spidey-breaking/,1538508225.0
occamsrzor,It obfuscates sections in the binary to try and prevent reverse engineering.,1537639659.0
rolfr,"Cool stuff! I personally enjoy reading multiple write-ups on a given project to see contrasting views and analysis styles. Should anyone want an alternative write-up for comparison, [here's mine](http://www.msreverseengineering.com/blog/2014/6/23/compiler-1-x86-virtualizer-0) from 2008.",1537584305.0
jeremywildsmith,"Apparently the link was not working for some users so I deleted the old post and added http:// to the url. Hopefully that works. It is working fine for me.

http://jeremywildsmith.com/?blog%2Fx86devirt

I think some people might find the article interesting. So hopefully you enjoy the read.

Thanks.",1537578307.0
Ryancor,Check your link.,1537571654.0
kevin_at_work,What's the best way for somebody experienced with RISC architectures (MIPS/PowerPC/ARM) to pick up x86/x64? Any recommended resources?,1537590854.0
captaindelta,Does radare2 have an equivalent command as 'symbol-file'? when the executable runs execve the executable can still disassemble the code but it doesn't load the new image as its symbol reference. I'm running it on Linux system and i haven't found any related command or variables so far.,1537679956.0
xCyb0rg,Looking for a mentor need someone to guide me I have all the books and stuff I need just need to make sure I'm going down the right track. Please help.  ,1537669499.0
shavitush,how could i determine which packer has been used on my target? ,1537859241.0
FluffyCarbon,"I was wondering what the best place to practice and/or learn reverse engineering is? I've tried some things like [pwnable](https://pwnable.tk).kr and some random CTF's. I'm not entirely sure wether or not this is a good place to start or that there is some place with a better build-up in difficulty. I've noticed that most CTF RE challenges can be quite difficult for a beginner. I do have basic knowledge about assembly and computer architecture but any RE specific books for beginners would be very much appreciated as well. (This stuff might be in the sidebar but with reddits new layout, I can't seem to find the sidebar anymore.)",1537972515.0
h8149,"I hope I'm at the right place (a froum linked to this subreddit regarding flash).

This [old .swf Encyclopedia map](http://web.archive.org/web/20120503180011/http://kr.turbonick.nick.com/shows/avatar/index.swf) (web.archive) of Nickelodeon's Avatar had many interesting facts written in it. Unfortunately the site was taken down sometime in last two years. The [archive link](http://web.archive.org/web/20120503180011if_/http://kr.turbonick.nick.com/shows/avatar/index.swf) (file only at web.archive) I managed to find has a not so well functioning map, but all I want now is the text to ""Fire/Air/Waterbending"" you can see when you hit their respective rectangles in the corners. The text of Earth is fully available, but the other 3 elements are cut off after a little bit of scrolling. I managed to download the .swf file with WinHTTrack Copier and recover the little amount of available sprites, forms, sound files, images etc. of the map but unfortunately the text is dynamic. I looked through the files with Sothink WSF Decompiler, Editor and other programs, but I didn't find the text of the four elements. Is there a way for a noob like me to find the text, or can someone recover the full text of the three elements for me? Thanks in Advance!",1538000563.0
ehraja,"I want to get access to the firmware file's source code. Then I can ask people if the software contains something shady.

[http://www.meier-geinitz.de/sane/gt68xx-backend/](http://www.meier-geinitz.de/sane/gt68xx-backend/)

[www.meier-geinitz.de/sane/gt68xx-backend/firmware/PS1Gfw.usb](https://www.meier-geinitz.de/sane/gt68xx-backend/firmware/PS1Gfw.usb)

Is there a video I can follow to reverse engineer the file?

Thank you.",1538057898.0
henke37,"Executive summary, by using delayed calls into ROP chains that use VirtualProtect, mallware can hide itself in non executable memory to avoid standing out like a sore thumb.",1537805193.0
,[deleted],1537354512.0
desertfox12311,"A true textbook masterpiece, you should gather all your papers and write a book, Rolf.",1537437094.0
serpiRE,"Great work!

Note on the opaque predicate: it seems the opaque predicate does come from native ollvm. You can find a reference to this in this paper:

[https://blog.quarkslab.com/deobfuscation-recovering-an-ollvm-protected-program.html](https://blog.quarkslab.com/deobfuscation-recovering-an-ollvm-protected-program.html)

""""""

By looking at the equations given by *Miasm* we saw that the opaque predicate equation was: **(x \* (x - 1) % 2 == 0)** (minus one instead of plus one).

""""""",1537509722.0
MFMokbel,"Thank you for sharing this great work.

I'm unable to get the plugin loaded by IDA. I'm running IDA latest version. It is always giving me the error:

HexRaysDeob.dll: ""error: %1 is not a valid Win32 application.""
HexRaysDeob.dll: ""can't load file""",1537499007.0
tansim,Damn destroying the font of text not yet visible is a horribly annoying way of releasing slides!,1537290719.0
MrSynAckster,I would love to see a separate  write up of how the engineer discovered the bug in the first place. ,1537410294.0
ngildea,Is there anything in here to obfuscate the code beyond running it on a VM? E.g. why is this more obfuscated that running on any other VM?,1537266374.0
Lywqf,"Thanks for the article, i've read a bit of it and it seems really interesting. I'll save it for my weekend to try & see :D",1537212162.0
mohitesachin217,Interested...,1537117352.0
neolex29,Is it legal ?,1537157725.0
superdisk,Not sure if I'm misunderstanding this request but compiled PS2 binaries can't be disassembled into C#.,1537038429.0
tambry,"> PS2  
> Unity  
> C#

Doesn't compute.",1537038479.0
KeenSnappersDontCome,A method I have used is to run the game with PCSX2 and use  CheatEngine to scan for memory values. Once I find the memory locations I am interested in I subtract 0x20000000 to convert from CheatEngine memory location to PCSX2 memory location. (PCSX2 uses 0x20000000 memory region for emulating the PS2 MIPS addresses.) Then I use the PCSX2 debug window to set a breakpoint on memory access to find the code I am interested in. From there I normally edit the function to make the cheat I am interested in but for your purposes you just have to read the code and write it in C#.  The benefit for this method is you get symbol names for the functions and can play with the memory values to help understand what the code is doing and the effect it has on the game.,1537038623.0
TimothyCarmack,"I'm so glad this video was well received, I wasn't sure if it was a good fit for /ReverseEngineering but it appears it is",1537233637.0
AnteAnteAnteAnte,HOW INJECT?!?!?!,1537030237.0
playaspec,"Makes sense. If *you* were Intel making baseband processors for the mobile market, would you A) pay a license fee to ARM holdings for every baseband processor shipped, or B) use your own, basicly free IP?",1536966754.0
mirh,"I would suppose that to be one of their [Quark](https://en.wikipedia.org/wiki/Intel_Quark) cpus?

Not sure what other design could fit baseband power requirements. ",1536970184.0
corysama,Not mine.  Via https://news.ycombinator.com/item?id=17988756,1536946862.0
desertfox12311,If anyone wants a devkit they should look at Telit,1537031368.0
alain_proviste,https://github.com/airbus-seclab/cpu_rec can be used to identify any common CPU architecture in an arbitrary binary file.,1537260750.0
getting_serious,Oh Intel. ,1537007324.0
Orangy_Tang,"I have a closed source RF protocol I'd like to reverse engineer - how do I start trying to capture and reverse engineer it?

It's consumer hardware so easily obtainable to poke locally. I know that it uses the 833Hz band, and that it's likely very small data packets sent infrequently responding to user input. I have a hunch that it's not encrypted.

What hardware/software do I need to start capturing, replaying and reversing the protocol?

Thanks.",1536941146.0
raggy456,How do you find a good project to work on?,1536938883.0
ShinyCyril,"Has anyone done a deep-dive on Apple's T2 chip yet? I'm curious about the flash encryption portion of it – specifically how they prevent people from snooping the data as it moves from the T2 chip to the CPU.

Perhaps I'm not understanding which attack vector they're trying to defeat. I assumed they were trying to ensure the flash chips couldn't be lifted and read by the attacker. But then I see two potential vectors:

1. Snooping data going between the T2 and CPU (obviously they must be protecting against this, but I would like to know how).
2. They recommend backing up data to an external disk to protect against failure of the T2 chip. Which means the additional security provided by the T2 chip has been bypassed, because an attacker can just grab the data from the external disk instead (though, still needing to defeat the standard FileVault encryption or whatever).",1537480601.0
ArrayCreator,"What is the best way in your opinion to put myself out there?  
And on  a simular note - What are the chances of me getting hired (had a long standing argument with my parents about this)  
I am a reverse engineer, finished highschool and without a degree or certifications,  
Been doing RE (usually malware) for the past 2 and a half years in a semi pro / pro manner in a top secret workplace ( 9+ hours a day , 5 days a week) = meaning i cannot show off my work from the projects i have done there  :(

&#x200B;

That wok place is a mandatory thing where i live and i got lucky enough to get into RE from that place ( wont say anything more that that )

I have 2 more years in that place after that im free to go to the world.

&#x200B;

What is the best way to show off my skill set? create a blog ( Already have one - [0xdavid.com](https://0xdavid.com) )? talk to companies that do malware RE and ask to help them for free to prove my skills?  
Im in a loss for what to do 

&#x200B;

TL;DR

Young adult with no degree but with 2.5 years of pro RE experience is lost about  what to do to show his worth and has 2 years to do so.  
So much so that even his parents dont really believe he is able to get a job \\ has a chance to get hired

&#x200B;

P.s sorry if i went too personal or ""HI EVERYONE LISTEN TO MY PROBLEMS"" - mods feel free to remove this message at any time <3 ",1536941848.0
hackmebr0,Awesome !,1536940160.0
my_words_are_better,I'm looking forward to the early release.  Donation made.,1536858900.0
ecstasyx,funding secured,1536889479.0
foofleee,Reeeeeee,1536862169.0
Rotdhizon,"Sounds very cool. There was a popular hacking game some 5-8 years ago, I can't remember what is was called. It was more meant for fun than it was to teach. If anyone can pull the name of that out of their hat, I'd be impressed. I remember it had a black and gold? theme. I think it was revolved around a small network, you had to get money from a bank, and keep finding ways to get money from them as the security stepped up. ",1537472203.0
joxeankoret,Is it going to be either source code or binaries available at some point?,1536778363.0
niobal,Paper: https://files.sri.inf.ethz.ch/website/papers/ccs18-debin.pdf,1536770609.0
LocalH,Any way this can add support for PS2 ELFs? :),1536796274.0
Directory177x,"Wow 10 years, totally flew under my radare.",1536712375.0
KuhKuhKuhKuh,Congrats from one of the lurkers! :) Keep up the good work,1536700915.0
raggy456,"I wish I was active around the Woodmann days. I always wanted to be a part of a community with thousands of reverse engineers active every minute, posting. Is there such a community today?",1536726997.0
tansim,exetools is still there.,1536750783.0
TechLord2,Congrats!,1536832479.0
luchoz,congrants!!!,1536703250.0
mohitesachin217,Just got into the party,1537156046.0
BoobDetective,"> Note: If you are looking for a simple Web-based CTF then my advise would be to not read this as it’ll affect your eyes as there is a lot of assembly dump down there which you won’t be able to handle.

Horribly arrogant. You chose to do a writeup on a beginners challenge, and you explain introductory material, so I suggest you change your attitude towards your readers. ",1536690327.0
TheOtherWhiteMeat,"You, uh, have a typo in your domain name.",1536723498.0
osamamahmood00,Hahahahaha yeah the training was not available ,1536748681.0
MaxMouseOCX,"~~""unpacking the non-unpackable"" is a double negative, did you mean that? Or did you mean ""unpacking the unpackable""~~

~~Edit: lol down vote me if you like, *unpacking the non-unpackable* makes no sense.~~

See below. ",1536669359.0
mmd0xFF,"Hello! The video of the talk has just been published by RADARE2/R2CON2018 in [twitter](https://twitter.com/radareorg/status/1051523301745549312) with the link of [this youtube video](https://www.youtube.com/watch?v=BLfJAAJFVyQ), see [this description](https://www.reddit.com/r/LinuxMalware/comments/9eqn6m/about_my_presentation_of_unpacking_the/) for HD video or slide access or insights of the talk.",1539591832.0
robahearts,Great video. Thanks,1536589072.0
farmdve,I dig the term.,1536582936.0
,[deleted],1536594241.0
stack_pivot,At least put those sweet [graphics](https://i.imgur.com/v5ntt1A.jpg) on the page ;) ,1536600460.0
TotallyNotCarson,"Awesome! Any chance you could tell me about how you learned to write a bootloader? I'm pretty interested in what your loader is exactly doing, thanks.",1536683071.0
edmcman,"I'm one of the authors.  I'd be happy to answer any questions about the paper.

It's been previously shared on this sub-reddit already, but the source code can be found on [github](https://github.com/cmu-sei/pharos).

&#x200B;",1536587359.0
netburnr2,"thumbnail in my reddit app is waffles with strawberries, looks yummy",1536497597.0
desertfox12311,why did he release such masterpiece? is his tools so superior to ours?,1536927420.0
DarkLinkXXXX,Some really interesting stuff here! Thanks for sharing. ,1536464821.0
TailSpinBowler,"So what is the process here?
Run x86devirt.py against protected exe.

It calls x64dbg to dump find vm sections, then run main.exe over the blob?

printf(""Arguments: <vm code dump> <dump base> <initial ip in hex> <inst map dump> <decryptRoutineDump> <jmpMap>\n"");",1536407480.0
porfy94,Great explanation! :),1536393335.0
sudolaw,"I'm a beginner at reverse engineering, and I've only studied a bit of it, but I have a dongle that is needed in order for a program to work that I would like to try reverse engineering. I have found some documentation on this type of dongle, but since it was written in 2006, I think it may be outdated and not relevant anymore. I was wondering if there was any starting point I could try or any more recent documentation on this type of dongle. Thanks!",1536339630.0
xCyb0rg,How do you know when you are good enough to get a job as a malware analyst and do you need certs or just know what your doing?,1536463666.0
TmHAL9000,"this might be a long shot question, if i would have multiple versions of the same version that the only thing different is the packer trying to obfuscate it, is it theoretically possible to find correlations between the files?",1536338843.0
JungieEUN,"What do you guys think about the book  ""Practical Reverse Engineering: X86, X64, ARM, Windows Kernel""?

Worth reading? Good for beginners?",1536655631.0
spoiledtoast,"I have been working on the Protostar challenges for Expoit-Exercises and had a question about format1, which is found [here.](https://exploit-exercises.com/protostar/format1/)  I have already solved all of the format exercises.  My question is, why does the value I target on the stack move around in this challenge, while the other challenges it stays constant no matter how many bytes I add to the vulnerable string?
",1536792223.0
YeoPEVA,"I am trying to find For analysis \[R2D2 / Bundestrojaner\] scuinst.exe, but I can not find it. Can I get binaries or advice on this?",1536482917.0
xoitx,"Is it possible to reverse engineer video games so that it has low spec requirements? How low can we get? theoretically it seems we can get it to a single shading pass. I might be using the wrong terminology, but if we can reverse engineer a game to scrap out all the fancy effects it can possibly be reduced to lesser calculations? I already know this sounds difficult, but is it practically possible using tools like radare2 and such? I'm a noob if you can't tell already :P Any insight would be appreciated, even a technical one, I'll google the rest. Regards.",1536758853.0
motherhooker,"I don't really know what I am doing but currently I am trying to modify some default values on a program. The file I am working is intel hex formatted. I used onlinedisassembler and read some constant string values but the value I am looking for is not there. I am guessing it's either encrypted or defined locally (I've read somewhere that only global variables shown as constant strings). Finally I decompiled hex file to c file but now everything, constant readable strings too, converted to c code. Can someone tell me if it is possible at all (decompiling intel hex format to anything readable)? I think this file I am working on has been pulled from EPROM and system itself has i386 architecture. What should I do? Where should I start? I already looked information for beginners post on the side panel couldn't find anything for hex format.",1536783576.0
dalurka,I just whish that they would start to officially support OpenBMC,1536337789.0
sudolaw,"Sorry for the messed up link. Basically, I have a Sentinel SuperPro/UltraPro dongle ([https://sentinel.gemalto.com/software-monetization/superpro/](https://sentinel.gemalto.com/software-monetization/superpro/)) and I wanted to try my hand at reverse engineering it. I'm pretty new to reverse engineering, but I was wondering if there was any kind of documentation on this type of dongle on how to reverse engineer it and perhaps where to start. Thanks.",1536308482.0
,[deleted],1536266433.0
Ryancor,"The title of this post is misleading because this isn’t a read on binary exploitation. It’s an x86 reference guide.., still useful! but not exploit.",1536212895.0
TailSpinBowler,Plenty of assembly books on Library Genesis,1536230345.0
binaryswap,"To be honest I was on the edge of studying the basic fundamentals of Reverse Engineering and of course Binary Exploitation; Where I must apply a bit of sense on the Assembly Side of the Programming materials. So I bumped suddenly into a Thread wherein the Link was a good read indeed. And of course I found it quite useful for Engineers soon to be like me, To read thorough it. :)",1536210662.0
QuantumG,Isn't that what liberals believe in?,1536238072.0
dack42,"It's a comma separated value  (CSV) format. Each row is an entry consisting of multiple fields separated by commas. At least some of the fields are almost certainly hex values (because they have characters 0 through 9 and a through f). Unfortunately, the file itself doesn't tell you anything about what any of this data means. You would have to find a specification for it, or try and work out the meaning of the data yourself.

&#x200B;

A few things I notice:

* Field 1 looks like it's a counter for something. It's an increasing hex value, but occasionally repeats. Maybe total runtime/hour counter or something like that.
* Fields 2 & 3 look like date and time, with dates starting from April 2015 and going up to yesterday.
* There's not much to say about the other fields without more information to go on.

Generally with something like this, I would try and determine what causes the fields to change. For example, does it log messages when you turn it on or off? What do these messages look like? Are there sensors readings you can physically affect? What fields change if you make the sensor detect a higher/lower value? Basically you need to do a whole bunch of experimentation and observing the effects to narrow down the details.

&#x200B;

I'm guessing 'Gemini' is some software that uses these files. If you can manage to get that software, it might give you more information as well.",1536205272.0
jhakk,"Looks like sieve beds may need servicing
Start there",1536198648.0
FlyingBishop,Are there any human-readable data visible on the device itself? You might be able to line up some of the fields by manually recording their values over time and comparing them to the hex. Of course the value you have might be a dial so even converting the hex to decimal doens't necessarily help much. that said you could convert each entry in the CSV from hex to decimal. That might make it more obvious what the fields mean.,1536207723.0
iajphoto,"My dad is getting error messages of 'low oxygen' on his portable oxygen concentrator. I found a service manual that showed me how to do a datalog dump to a usb drive from a port on the back, but it looks like the log is in hex maybe? I tried converting to text, and got nothing but gibberish. The service manual for an earlier model says something about uploading the log file to 'Gemini' for analysis? 

The concentrator is out of warranty and the company wants 400/month for service. 

It's probably some sort of proprietary log, but I thought I'd ask here in case anyone recognizes the data format.

Thanks in advance. 

[Here's the service manual](https://www.inogen.com/pdf/96-03996-00-01-Rev-F_Technical-Manual_Inogen-One-G3.pdf)",1536197860.0
Kopachris,"Definitely hex values, but looks like plain CSV format. No ideas what the columns represent other than the first one looks like some sort of index and the next two look like a timestamp. You might try analyzing the values over time to see if any of them make sense.

Some of the data looks mangled, might have been corrupted. How was the data acquired? Glancing at a couple manuals for this manufacturer, some transmit over IR and some over USB.",1536204399.0
edward_snowedin,This seems illegal,1536198534.0
ohmantics,Article is an ad for an Android-specific obfuscation package.,1536069593.0
henke37,"""A code written in Java is easy to decompile than the one written in C/C++."" Time to fire your copy writer.",1536075450.0
peterferrie,The obvious answer: don't release it.,1536085433.0
AND_MY_HAX,"Cool!

Another relevant post on ZKM: https://medium.com/@graxcoding/taking-a-closer-look-at-zelix-klassmasters-flow-obfuscation-7d8a17fdfa57

I did some relevant work in making an ugly string deobfuscator myself here: https://github.com/jfktrey/exXOR",1536020169.0
PartOfTheBotnet,"You should update your existing repositories over creating new ones. It makes your profile / repository list cluttered. Plus its not good for SEO. Regardless, good stuff here!",1536001622.0
,[deleted],1535954077.0
fizuhe,"Those are the famous ""Lena Tutorials"" of the past, similar to ""LegendsOfRandom"".

&#x200B;",1536002311.0
danonny,"Here is olly1.10, some plugins and help32 for win10 which is pretty usefull if you are gonna do these tutorials.


https://github.com/danh3707/OllyDbgV1.10-plugins-and-Hlpfile",1536034874.0
ntnhan233,"For these old tutorials, check [https://tuts4you.com/download/category/19//](https://tuts4you.com/download/category/19//) out.",1536244760.0
RedditAndShill,"These are Lenas' tutorials, right? Very known tutorials, a nice entry point for sure.",1536328016.0
farmdve,Those tutorials are well known.,1535914336.0
Nukeyyy,OP you might want to check out https://github.com/ytisf/theZoo which is pretty organized and seems very similar to what you are trying to do.,1535910707.0
evolveair999,How did you get all of these...,1535899295.0
Solidak,"OP, what sort of help are you looking for? Making a proper README would be nice. I can submit a PR, if needed",1535907899.0
Dwedit,Probably would be better to ask the speedrunning or romhacking community about that.,1536282595.0
good_job_nate,"I'm not really sure what you're asking, but in general, if you want to unpack or otherwise parse a known file format, you can just look up the specification for that format (example descriptions for DMG: \[[1](http://newosxbook.com/DMG.html)\], \[[2](https://en.wikipedia.org/wiki/Apple_Disk_Image)\]).

Reverse engineering really only comes into play when the format specification isn't fully available, as is often the case with proprietary formats for software applications. In my opinion, one of the best ways to approach this problem is to use the associated software to make a minimal change to a test file, then do a binary diff to see how that change is reflected in the binary representation within the file. Repeat until you can account for each byte in the file and predict with 100% accuracy how it will change in response to a given change in the application. You can also do the inverse, changing one or more of the bits in the file and observing how the application changes in response, although that's usually better for testing your understanding of the format rather than for exploring.

If there is encryption, obfuscation, or proprietary compression in play, things get more interesting, and at that point you may find yourself needing to reverse engineer the software that reads/writes the files. In fact, if you are much more familiar with debugging and reverse engineering software, that may be your best approach from the beginning, but it really depends on the problem.",1535822295.0
binaryswap,"I don't know yet if it may sound absurd or stupid to ask a rather invented answer to this question; But if anyone could raise a helping hand, I'd gladly accept the answer to it; Just a little glimpse of how File Handling works with Reverse Engineering a certain Apple or any DMG File from scratch; A tip of Algorithm will do. Thanks!",1535812071.0
binaryswap,[Decoding Process or Extraction Process for the DMG Extractor.](https://scontent-nrt1-1.xx.fbcdn.net/v/t1.0-9/40527910_172304640331742_5835726933005959168_n.jpg?_nc_cat=0&_nc_eui2=AeFHY2CSgdSMcvJTuV1hV3K5ILvqEl3vS29MyafE0dF7tqhbwCbf8wFw-VhnTT0BhLavKowAYDdRsUpCDVVhLTy2D8G6mghyH_z5h53hNvcpxg&oh=b7b90357f29c5be449fed076a77b6fa9&oe=5BF2B828) Alright folks; Here's what I did so far; Now only the things left are how to extract a Text-based Code from the .txt or .md into an Output or Processed File. They call this as the Conversion Process. :),1535871060.0
eagle33322,"bitly link for some of the src, nice.",1535907310.0
ThinkPrimary,"I have two questions actually. I've been playing FireEye's Flare-On and I guess i found out what my level of skill is like (stuck on level 4 ;) ).


What to do to improve my reversing skills?


any opinion of this Training Course ?(i may able to convince my company to pay for it) Binary Literacy: [systematic static Reverse engineering](http://www.msreverseengineering.com/training)",1535728655.0
TotallyNotCarson,"Anyone able to find a good toolkit for repacking firmware? Looking at a random embedded device and wanted to repack my binwalk extraction, unable to find anything though. I've tried FMK but doesnt seem to be working.",1535824926.0
mumbel,"Are exploit dev questions okay?  
  
I have an overflow in a thread that is watchdog'd somehow (no debugger, and I haven't been able to track this down).  I have ROP and everything working to RWX the stack and have stable code exec w/ shell via:  

    if (!fork()) {
      fd = syscall(_nr_socket, ...)
      syscall(__nr_connect, ...)
      syscall(__nr_dup2, fd, 0)
      syscall(__nr_dup2, fd, 1)
      syscall(__nr_dup2, fd, 2)
      syscall(__nr_execv, ""/bin/sh"", [""/bin/sh""], [])
    }
    <ROP cleanup>  
Is this basically the correct approach?  are there any concerns with fork() in a pthread? Is rop cleanup needed in the child or is having rop cleanup worse (register cleanup, stack adjustment, correct return address)?  The caller's stack looks unused for what I'm overwriting, but if i leave my netcat just sitting there, the process will sometimes die anyways.",1535922990.0
darkyline,Did anyone try reverse engineering the Apple TV Remote Trackpad ? Or found a touchpad HID report Descriptor that works on it ?,1535979857.0
angrybaldguy,"So I am thinking about going back to school.  If I want to end up working in reverse engineering, should I go for computer science or computer engineering?  Also my original degree is in psych. Should I try to get in a master's program or just go for a second degree?",1536136603.0
wiadro123,"Hi guys,

I am trying to follow  [this\_blog](https://crypto.stanford.edu/~blynn/rop/)

Can You please advise me, what I am doing wrong because output of `ps -eo cmd,esp` always returns tons of zeroes, like:

>root@archlinux:/proc/6596# ps -eo cmd,esp  
>  
>CMD                                      ESP  
>  
>/sbin/init                  0000000000000000  
>  
>\[kthreadd\]                  0000000000000000  
>  
>\[rcu\_gp\]                    0000000000000000  
>  
>\[rcu\_par\_gp\]                0000000000000000  
>  
>\[kworker/0:0-mm\_percpu\_wq\]  0000000000000000  
>  
>\[kworker/0:0H-kblockd\]      0000000000000000  
>  
>\[kworker/u30:0-events\_power 0000000000000000  
>  
>\[mm\_percpu\_wq\]              0000000000000000

Regards,

ps. ofc I tried to find solution on my own - I wonder if there's any switch in kernel settings which fixes mentioned issue..

&#x200B;",1535820642.0
CrimsonWoIf,Biggest question: how do I get started?,1535853209.0
guest348034,Any suggestions how do i reverse engineer Microsoft Edge browser? I'm trying to find out where does it request web page and in which process? I have tried many things but can't find exact location. For example i tried to breakpoint Winsock API in MicrosoftEdge.exe and in MicrosoftEdgeCP.exe process but no luck . Any help would be appreciated.,1536687700.0
,[deleted],1535700904.0
umbreon222,I've been following this developer since they first started creating squalr the c# memory editor. Super interesting stuff. ,1535728280.0
xenoperspicacian,"Seems like it would be really easy to crash the program or create some accidental buffer overflow issues, how do you stop that from happening?",1535742681.0
marcan42,"Reminder: this is actually a [documented feature](http://datasheets.chipdb.org/VIA/Eden-ESP/Eden%20v1.4.pdf) of these Via CPUs, and is only active if a particular MSR bit is set. It's not a backdoor, it's a (partially) documented debug mode. What *is* a backdoor is that apparently some boards/BIOSes enable it by default (or neglect to disable it, if it is enabled on power-up on certain CPUs).

I'm not sure why he didn't find and read the above datasheet or others that mentioned this feature. It's not an ""embedded RISC core"", it's an alternate instruction frontend (probably the internal microcode one, or something used for extended microcode) for the same core/logic that normally executes your x86 instructions. All the patents he cites in the presentation are actually about hypothetical CPUs capable of executing x86 and ARM instructions in two different modes.",1535563922.0
cyandyedeyecandy,"This reminds me of something similar I once found while reverse-engineering the BIOS routines on an old Pentium laptop. A seemingly nonsensical sequence of plain x86 instructions would suspend the whole system and launch the BIOS setup program. I was unable to find any trace of this program in main memory, and couldn't single step through it with a ring-0 debugger, which led me to conclude that this sequence transfers control over to some secondary embedded CPU.",1535589420.0
just2commentU,"This guy is borderline genius. I played with his sandsifter before and was really impressed with the originality of his ideas on how to poke around. 

But this, at least for my limited understanding, is a whole new level. Reversing a bloody ISA through such a limited channel of info... Good god. ",1535581296.0
PortJMS,"I am not sure if op happens to be the presenter, of if he comes here by chance, but please do a talk over that testing setup. I saw the talk live at BH, and was impressed with the findings, but really was impressed with the testing setup he made. I know in theory how to do it all, but that thing was a work of art! ",1535645715.0
PsychologicalBadger,"Insanely stupid of Intel (And I hear AMD) to put this simple backdoor into the hardware.  I'm particularly disturbed by the undocumented side CPU that has the password of ""null"" to be able to access anything even on computers that are turned off (But still plugged in)  This literally makes all modern CPUs garbage.  All of your banking, medical, legal (anything) is easily open to attack.  Safety as well as financial loss has to be nearly incalculable and unimaginable.  

I suggest a class action lawsuit by basically every owner of a computer to financially disassemble both companies and seek criminal charges against who ever had anything to do with this so that this never happens again.

I think the future is in open ""source"" hardware design.  When hardware emulation pods became illegal it should have been obvious this was going to happen.  Our computer cpu, hard disks, video boards, usb connectors have been proven to be unsafe from simple attacks.   Worried about cyber security?  

Trust no one!",1535849803.0
Azsu,Very cool!,1535568526.0
,[deleted],1535606090.0
RedditXiaohu,"Taken in consideration,the phenomenon of learning Windows Kernel is not as thick as it is in America .And I introduce my basic condition on my knowledge of Assembly:I can use assembly code influently(80386),but I still don't know what a  bunch of code represent for.Maybe it is accounted for my lacking of [practice.My](https://practice.My) ultimate target is to be a professional security advisor . I want to be farmiliar with every detail of windows operation system and everything about Intel [CPU.So](https://CPU.So) can you give advice in detail.Thanks in advance",1535547613.0
soullessredhead,"At first I thought this said ""Writing an OS *with* scratch"".",1535505935.0
har3na,"Cool, any chance you going to record and upload them later on?",1535489819.0
ScyllaHide,thanks for posting!,1535456989.0
,[deleted],1535389605.0
binaryswap,Since I lack experience; You can follow up with the Text-based Sessions for the meantime; As for the recorded ones; I'm deleting some of my YouTube Videos; In preparation for my Career someday as an iOS / Android Developer! :),1535377957.0
HiFiDuino,God this is so cool. I want to start RE-ing iOS apps but I'm already updated too far to jailbreak. Here's hoping there's an iOS 12 jailbreak I can use to get started on,1535412194.0
TechLord2,"**Vba2Graph**  

A tool for security researchers, who waste their time analyzing malicious Office macros.  

Generates a VBA call graph, with potential malicious keywords highlighted.  

Allows for quick analysis of malicous macros, and easy understanding of the execution flow.  

**Features:**  

* Keyword highlighting  

* VBA Properties support  

* External function declarion support  

* Tricky macros with ""_Change"" execution triggers  

* Fancy color schemes!  

**Pros:**  

    ✓ Pretty fast  

    ✓ Works well on most malicious macros observed in the wild  

**Cons:**  

    ✗ Static (dynamicaly resolved calls would not be recognized)",1535227176.0
Dwedit,"I heard that the Ilspy NET decompiler ended up with a security hole that could be exploited, so make sure that anything designed to analyze code is bulletproof and can't just be hacked by trying to analyze it.",1535239294.0
poopadox,"Can anyone point me in the right direction?  I need to retrieve firmware from a microcontroller (STM32F103 RCT6).  I have a serial cable/box which was specifically designed for the circuit board containing the microcontroller, but I am having trouble ""identifying st-link"" in the software I downloaded from the ST website.  I have spent the last three days trying to google the answers, but I simply lack the understanding/brain power to swim through all the information.

The product belongs to me, although we had the circuit board which controls it designed in China and now our manufacturer has lost all their engineers and cant help us with the firmware so we can manufacture elsewhere.   The endgame is to retrieve the firmware so I can get someone to pull apart the circuit board and provide Gerber/drill files and BOM.  

I am happy to provide any information/photos which may help me take my next step.

Help me reddit, your my only hope!",1535190049.0
zingbat99,"Hi,

I'm looking for some recommendations on good crackmes/RE ctf problems, specifically ones not targeted at beginners. I'm familiar with the normal sources: crackmes.de mirrors, reversing.kr, tuts4u, w3challs, etc however between all of them there are quite a few problems and its not clear which ones would be interesting to solve.

Without spoilers, are there crackmes or RE ctf problems you've particularly enjoyed or learned from?",1535130317.0
Armavica,"I am reverse-engineering a USB communication protocol. I captured packets on Windows with [USBPcap](https://desowin.org/usbpcap/) and on Linux with the kernel module usbmon. I can't understand why supposedly the same packets (for example, Control instructions like getting string descriptors) with the same payloads don't have the same headers as shown by Wireshark and not even the same length on both platforms.

I am wondering this because I am able to make manually any Control request I want, but I haven't yet managed to engage the conversation in Bulk & Interrupt mode, as the Windows software does once the enumeration is complete. The differences between the Windows and Linux Control requests make me wonder if there are also differences for the Bulk and Interrupt modes and if this is the cause of the device not responding to me.

* So where does the difference that I see in Wireshark come from: (1) Really from the OS (i.e. Windows and Linux implement different ""versions"" of the USB protocol), or (2) From the capture method: what transits on the wire is the same, but USBPcap and usbmon don't ""see"" the same things and report the packets differently?
* Can that make any difference for the device if I try to talk to it from Windows or from Linux? Is it possible that my device speaks ""Windows-USB"" but not ""Linux-USB""? Or is it just me not sending the correct payloads?",1535373397.0
Fnarglebargle,"Hello everyone, 

I'm trying to get hold of some text assets from an android game made in unity. I have decompiled it and extracted the assembly-csharp.dll in which I found two bits of information, the encryption used and the kwy/IV. But I can't seem to decrypt the files even though I have found that. Can anyone help me see what I'm missing? 

I have also disassembled it in IDA, but I haven't found anything of value in there yet. 

Any and all pointers are appreciated! 

From the .dll:
BlowfishCS: https://pastebin.com/HXfMTEuh
Cryptography: https://pastebin.com/fZs4KFLQ

One of the encrypted files:
Encrypted file: https://pastebin.com/NcpWLSVE
Encrypted file hex: https://pastebin.com/keuW2vcV
",1535384037.0
IrishYogaShirt,"I'm completely new to reversing so please bear with me. I created a crackme executable in c++ and was hoping to patch it with some software. I found the code in IDA which needs to be changed but from what I've seen, there is no debugging support for the free version (this makes sense since I couldn't find a way to add break points or run the program). I also tried olly debugger but I think olly only works for 32 bit applications and not 64. What tool(s) should I be using. Sorry for being the annoying newbie",1535123977.0
yuyu,"Here is a question I have about using machine learning w/ reverse engineering. I've posted it in /r/MLQuestions but figured I'd post here as well:

I have a binary file which includes a large array of elements of some custom structure (I'll call this structure an ""item"") which I don't have the structure definition for. The array contains ~50000 items, and I'm trying to write a parser to pull each of those items out separately to do further work on them. I am having a difficult time because each item has a different length (in bytes), so slicing them up and pulling each one out isn't straightforward. When analyzing the binary, I can manually see where these items are separated because of patterns, but trying to define those patterns in code has been a challenge.

Since I can manually pull out items, I started thinking that a ML approach might be viable. The idea is that I could pull maybe ~100 of these items out manually and feed them into a training set. I could then use that model to predict the byte length of whatever item instance I pass into it. The end goal would be to then analyze what the NN has determined are significant bytes which contribute to the length of the item, and use that information to aid in writing my own parser.

There are indicators in the item data that determine the total byte length. For instance, one item might have a 0x02 byte in some position and another might have an 0x03, where the latter item turns out to be exactly 4 bytes longer than the other. My assumption is that this is referencing the length some array of 32-bit integers within the item (since that count is 1 higher, there is an extra element in the array thus 4 extra bytes of data in total for that item). There are multiple situations like this though and it's difficult to track them all down manually.

I'm not very experienced with ML but I know general concepts. Does anyone know if a ML approach to this would be viable? Any starting point or information, links to research doing a similar thing would be really helpful.

Thanks!",1535239109.0
,[deleted],1535281072.0
prashu210,"I recently tried to unpack a cracker but after dumping and rebuilding ,when I open it the antivirus detects it and says its virus.How can I solve this problem",1535478129.0
marcan42,"This has fail written all over it. The production schedule is completely unrealistic, the budget is completely unrealistic. They haven't even started validation (the design isn't finished) and they want to tape-out in November? What? And $22k for an entire end-to-end ASIC design and fabrication plus boards and other perk overhead? Where's the schedule and budget for the inevitable second spin (because the first one won't work)?

Sorry, but doing what they're doing for $22k on that kind of schedule is a pipe dream.",1535115423.0
ThrowAwayCaaount,"None of those are exactly scarce.

Given the price of a new real CPU, what is the point of this?
",1535131128.0
r_retrohacking_mod2,"See also:

-- [Earlier 6502.org Forum discussion](http://forum.6502.org/viewtopic.php?f=4&t=4904)

-- [FOSDEM presentation ""Is an ASIC made with fully open source tool chain possible ? Is it affordable?""](https://archive.fosdem.org/2018/schedule/event/cad_os_asic/)

-- [Hackaday article](https://hackaday.com/2018/08/23/retro-uc-your-favorite-instruction-sets-on-custom-silicon/)",1535102783.0
igor_sk,how is this RE?,1535223793.0
ContainerKing,"Great share, thank you!",1535254092.0
CuriousExploit,Absolutely beautiful,1534998823.0
ryhanson,"**TL;DR?** Here is the advisory: [ATREDIS-2018-004](https://github.com/atredispartners/advisories/blob/master/ATREDIS-2018-0004.md)

**PoC||GTFO?** Here is the Proof-of-Concept: [CVE-2018-0952 SystemCollector](https://github.com/atredispartners/CVE-2018-0952-SystemCollector)",1534890791.0
tansim,How does the loading of the dumped evil dll work?,1535097722.0
0xAlexei,"Recorded demo videos from DEFCON can be found here: https://media.defcon.org/DEF%20CON%2026/DEF%20CON%2026%20presentations/Alexei%20Bulazel/Alexei-Bulazel-Reverse-Engineering-Windows-Defender-Demo-Videos/

I shared some code here: https://github.com/0xAlexei/WindowsDefenderTools

This work was a sequel to some previous work I did in reverse engineering Window's Defender JavaScript engine, which I presented earlier this year. That material (slides, video, etc) can be found here: https://twitter.com/0xAlexei/status/963432394551451649",1534868095.0
toolCHAINZ,Great talk!,1534874423.0
,i loved your research on the windows defender js engine. thanks for posting this!! it's inspiring to know one day i could do this cool shit.,1534920077.0
tansim,"Great work, but the slides are in presentation-format, not release-format, which makes them annoying to read. Any chance you can re-export them in the proper format?",1535277536.0
krrrah,"One question: What does ""IL"" stand for? Its used since slide 50.. Maybe I just didn't notice its definition. Aside from this: good slides!",1535880498.0
kiwidrew,"Interesting, will have to read through this soon!  It appears to be a followup to their USENIX '17 paper, ""Reverse Engineering x86 Microcode"" \[1\], where they are able to figure out how AMD K8 microcode works simply by fuzzing the published microcode updates and observing how the CPU behaves after the fuzzed updates were applied.

I believe the AMD K8/K10 family is the only modern x86 CPU that doesn't use encrypted/signed microcode updates, which is why the authors were able to successfully use the CPU itself as a black-box oracle to figure out how the microcode works.

\[1\]  [https://www.emsec.rub.de/media/emma/veroeffentlichungen/2017/08/16/usenix17-microcode.pdf](https://www.emsec.rub.de/media/emma/veroeffentlichungen/2017/08/16/usenix17-microcode.pdf)",1534846683.0
Einh,"It is possible to change the web adress to the server in the game.

My question is if would be possible to create a server software that could communicate with the game itself? ",1534711453.0
movntdqa,"Looks like JSFuck.

[https://en.wikipedia.org/wiki/JSFuck](https://en.wikipedia.org/wiki/JSFuck)",1534701103.0
w4yai,"Honestly, the music is terrible. 

Also, there is no point in doing a video for such tutorial, as 99% of the video is watching you typing in Notepad++. Please write an article on any blogging platform and post screenshots, that'll make things much clearer.",1534718988.0
TailSpinBowler,What is backreading? Decompiling?,1534737521.0
binaryswap,"[Reverse Engineering - 101 Basics.](https://medium.com/@k0rra/reverse-engineering-01-75ef1d77eb96) \- I just started out, So this Medium Thread / Post / Article might be a Good Read! :)",1534762511.0
binaryswap,"Alright folks; Late Evening, I just wanna clear things out for the heated argument. I'm gonna be purchasing a Personal Website for the Visual Aids and of course the Supporting Details. So, Kindly stop arguing about my video; Being with a Cryptic Music and / or lacking of Supporting Details; Its my 2nd Video Tutorial; The 1st One was kinda blurry, There's always room for mistakes like a starter besides me. I can always correct that out; Instead we learn something here, We are arguing over it, For the next Videos to come; I'll make sure my Personal Website and / or Blogger Website is up and running; Which of course diverted from Medium that is; Because I cant post something rather personal in it. Or something useful perhaps? :) Keep in Touch guys, Thanks for the Worry and Sorry for the rather Nuisance and lets just say; Cryptic Approach! :) See ya folks on YouTube. <3 Love You Reddit.",1535033206.0
binaryswap,"What I usually do during my spare time; Or for a Living. Back Reading; Hex Analysis; Decompiling; and Debugging of the Programs, and of course with that said; Likewise, Back Reading or Reverse Engineering. I am a Filipino by the way; And I am proud to be it.

\- Binary Korra",1534681790.0
binaryswap,"It might be confusing with the Notepad++ read or instructions; But its my 2nd video; The other was a Dota 2 Gameplay of which I was playing on, Here's a tip. I refer to the Keygens as the same as the iPhone's Software Password Generator, Which of whom George Hotz called it as I think I remembered, The Golden Ticket. The Golden Ticket is a set of Hidden Function not made available on the Main Function itself; That's why its called a Ticket Generator because imagine lining up in a Ticket Booth and without your Tickets you can't enter the Train or a Concert. Literally speaking the Golden Key / Ticket Generators. :)",1534682957.0
binaryswap,"Guys; FYI, I'm also based on Industrial Technology; Major in Electronics, So what I was up to right now, Was Cyber Security for RC (Remote - Control) like devices, Wherein I can Reverse Engineer a certain device via its Firmware, What I had in mind before was Android / iOS; Of which I am going to research for a while, Till the next video; Catch up with my video series if you ain't disappointed too. :) Haha, No offense and no worries, The next videos I will post here will be from beginner to advance tutorials for the guys and lads I am catching up with; Like GeoSn0w (otherwise known as George Hotz) and the few others like p0sixninja and Joshua Hill. :) Have Fun, till then; and I will post a Text-based Tutorial later on like a supporting details for ARM (Advanced RISC Machine/s) :) and or other stuff till next time folks; And oh, One more thing like I am really sorry you guys got disappointed; Hehe, Its not actually Back Reading - as Back Reading is for Reading back the Old Conversations. Haha, Its actually; Reverse Engineering / Back Engineering, for a fact. And oops; Sorry for the quite Misleading Title and the Terrible Music (some said, and even down-voted my 2nd YouTube Tutorial) I just started out to be honest; Wow, Haha long read yeah? :) God Bless Reddit, and God Speed to the RevEngingeers out here! :) Have fun. \^\^ Till next time. xP",1534761540.0
binaryswap,"My Mistake it is actually; Back Engineering and / or Reverse Engineering. \^\^;

\- Binary Korra",1534684084.0
farmdve,"This is very common actually, third party developers making signed kernel mode drivers with no protection that can be used by other users. ",1534620785.0
TailSpinBowler,Reminds me of the Capcom rootkit thing.,1534675703.0
0xF0xD1E,Thanks for the read and the PoC!,1534638522.0
seanshoots,I dig the site layout,1534665224.0
tansim,"> However, due to Win32 intricacies, the produced handle ends up belonging to the process invoking the request to the driver.

what?, why?


And what would be the right way to do it?",1534667130.0
tnavda,"I would say if you are going to write an introductory article/blog, make sure you understand the material.  

Writing, “oh use 13 instead of 12 but I don’t know why” isn’t very useful for you or the reader.  Look at memory and investigate.",1534606351.0
igor_sk,"pretty thin on details, seems to be mostly an ad",1534528584.0
lilkillpain,"The Farsi text is ""نه به حجاب اجباری"" not ""به به حجاب اجباری "", and it means ""No to the forced hijab"", blog post says ""to the forced hijab"" which means completely the opposite! ",1534727791.0
RubiksHnK,I love the flareon challenges. =),1535161958.0
zingbat99,"Hi,

I'm looking for some recommendations on good crackmes/RE ctf problems, specifically ones not targeted at beginners. I'm familiar with the normal sources: crackmes.de mirrors, reversing.kr, tuts4u, w3challs, etc however between all of them there are quite a few problems and its not clear which ones would be interesting to solve.

Without spoilers, are there crackmes or RE ctf problems you've particularly enjoyed or learned from?",1535097041.0
HNX_,Anyone has experience reverse engineering asm.js code ? (generated with emscripten). What tool did you use beside chrome developper tools ? ,1534533585.0
JoustingZebra,What sources do you recommend for someone trying to learn more about electrical/electronics reverse engineering?,1534554570.0
leo150,"Hello everyone. I'm trying to debug macOS application using radare2. In the entry0 it has several sym.imp.* calls (sym.imp.ptrace, sym.imp.getpid, sym.imp.sysctl etc). Here is how such functions look like:

    / (fcn) sym.imp.ptrace 6
    | sym.imp.ptrace ();
    \ 0x1001376d0 jmp qword [0x100166568] ; [0x100166568:8]=0x100138a96 fcn.100138a96

After jump is executed:

    / (fcn) fcn.100138a96 10
    | fcn.100138a96 ();
    | ::::::: 0x100138a96 push 0xe40b
    | ===< 0x100138a9b jmp fcn.100137834

Jumping to fcn.100137834. As far I understand, it’s dynamic links resolver:

    / (fcn) fcn.100137834 15
    | fcn.100137834 ();
    | .......-> 0x100137834 lea r11, [0x100164008] ; [02] -r-x section size 8816 named 2.__TEXT.__stub_helper
    | ::::::: 0x10013783b push r11
    \ ::::::: 0x10013783d jmp qword [reloc.dyld_stub_binder] ; [0x100164000:8]=0
 Here jmp qword [reloc.dyld_stub_binder] always jumps to 0x00000000. Am I correct, that the program is trying to use functions from shared libraries, that are not loaded at execution moment? How can I resolve it? ",1534680529.0
YourlionBro,How would one go about seeing how a file is opened and translated by a software? As in a license or keyfile for example.,1534784028.0
Fnarglebargle,"Hi,

I'm fiddling about with decompiling a Unity based android game to find some text assets, and have gotten as far as reading the assembly-csharp.dll, found out that the files I want to read are flat-file databases and encrypted with BlowfishCS. From the .dll I am also able to see pointers where it gets the keys to decrypt the files. 

However, since I am not able to read the .dll while it is running due to it being an android game I'm a bit stumped as to where to go next. I have extracted some text snippets from reading the emulator memory, can I find the key in there somehow? 

Here's a pastebin with the BlowfishCS code if it helps: https://pastebin.com/7LTgpH2U",1535027446.0
igor_sk,I keep seeing it as “Semmie”. Surely I’m not the only one?,1534534101.0
IAMINNOCENT1234,"> It compiles code into a relational database

LOL ",1534524195.0
engelant,"If you're unaware of what I'm talking of, it's a platform from a  company called tuya, that enables vendors to build smart IOT devices  like bulbs, sockets etc. They provide a pretty much [out of the box package](https://en.tuya.com/platform)  of the wifi controller (ESP8266), firmware, cloud infrastructure and  mobile apps, which can be branded and therefore are relativly common and  popular. Afaik the app is (vendor branded) availible as following apps for  android (propably incomplete):

* TuyaSmart
* Smart Life
* Jinvoo Smart

Also the entry barrier as a vendor is really low, so I could easily take a [look at it](https://iot.tuya.com/)  to find out, that several aspects are unavailible to the basic user,  but you need to be an enterprise user. OTA is one of them. Since you can  create up to 10 devices with your custom app as an basic user, I would  assume smaller chinese-ish manufacturers would just use the basic  package without OTA to bring their products to market.

This is sort of where my problem kicks in, as my device won't get and  update that I could sniff. Till now I was able to figure out, how to  register the devices ""offline"", to get secKey and localKey, thanks to [@tuyaapi/link](https://github.com/TuyaAPI/link).

However, as my device won't update, I would like to ask if anyone has  a device with tuya firmware on it, where he maybe sniffed the http  traffic related to updating or could provide me with a firmware dump of  their stock firmware (I currently only have 1MB flash)",1534366421.0
henke37,The actual topic of the article: the substrate bias voltage generator. Still interesting tho.,1534385602.0
DrawBacksYo,"This is a great post,thanks! ",1534321109.0
The6P4C,It's always serialisation,1534299800.0
kilogears,"So is this really a bug in .NET’s deserialization? If so I suppose it may exist in many other .NET applications. 

(Sorry, not a MS developer so I may be uninformed about the root cause.)",1534288240.0
podjackel,"Thanks man. Saw your talk, melted my brain so I've been looking forward to doing an extended review of the material.",1534251866.0
k_x90,"Great talk dude, thanks for giving it.",1534268155.0
r_retrohacking_mod2,[Discussion at Hacker News](https://news.ycombinator.com/item?id=17751599),1534203689.0
polybium,"Damn, these were so much more complex than I thought. The actual coding is done so beautifully. David Hampton was so ahead of his time, especially with the integration of the sensor units and the logic of the software. Incredibly elegant code. You can totally see he treated Furby as a sort of magnum opus.",1534216584.0
Lord_Nightmare,"Note about the sidebar rule: ""Subjects such as stolen source code and pirated software are never acceptable and will always be removed."" - this source code is not stolen.

It comes from the 'patent wrapper', i.e. the legal correspondence between a patent filer(and their patent lawyer) and the patent examiner at the US Patent and Trademark Office (USPTO), and is a matter of public record.",1534459118.0
kenshirriff,"Wow, that's quite an impressive reverse engineering effort, figuring out so much assembly code and commenting it nicely.",1534357186.0
Seonid,"That's my Z80 fix for the day, thanks. Also nice to see a working NMI (looking at you Mr Spectrum ROM).",1534409062.0
Newtonip,I love looking at stuff like that. Is there a list somewhere of disassembled and commented software?,1534860897.0
celegans25,Evidently OP's friend needs to learn about http://letsencrypt.org,1534187068.0
rationalmaverick,got a “connection not private warning.”,1534187024.0
0xF0xD1E,He’s gonna teach us about RE but doesn’t know how to configure a site?,1534200215.0
olirowanxyz,I've saved the link for when the SSL is fixed. Sounds like it could be interesting ,1534269549.0
wifuhacker,A self-signed certificate for www (dot) example (dot) com?    ,1534691986.0
792485402,404,1542588535.0
adwait1-g,"Hello Guys!

You can visit [adwait1-g.github.io](https://adwait1-g.github.io) for the same content. 

The Site is being migrated from wordpress to github pages. 

Thank you!",1543113531.0
purplestarfish56,hosting a beginner RE workshop for some peeps. Would love some feedback.,1534121180.0
rolfr,"I liked your research. I enjoyed your presentation, up until about slide 38 -- I thought you did a good job of explaining the relevant x86 and Windows OS concepts, including a few small sequences of assembly code that I found fit well within the material and were highly appropriate. However, on slide 38, there were 12 consecutive slides showing screenshots of the exploit code. I think it's not possible for a live audience to grok this in real time -- nor should they have to -- and for an audience who is reading the slides instead of watching the video, putting the code is unnecessary since that audience can read the code at the provided link which is duplicated on each of these slides. 

Just my two cents; I meant it constructively, I hope you take it that way.",1534132263.0
0xNemi,"Feel free to ask any questions here too. I'll try my best to answer them.

Code implementing the exploit can be found on Github: https://github.com/nmulasmajic?tab=repositories",1534115881.0
hash_define,"Cool bug. I like architectural bugs, they always seemed more interesting than some random memory corruption in a program.

How did you first learn of the delayed interrupt handling of movss/popss? Do you just love reading intel manuals?",1534138993.0
JustMakeSomeShitUp1,"Sorry if this is a dumb question, as I'm an analyst and not an engineer, but do you know what evidence of this exploit might be visible in windows event logs? How might someone investigate whether this exploit has been used on a machine?",1534264104.0
guedou,"Feel free to ask me questions about the talk!

Here is a list of the tools developed during this project:

* [MeP support in miasm](https://github.com/cea-sec/miasm/pull/763)
* [guedou/r2m2](https://github.com/guedou/r2m2), a radare2 plugin for miasm2
* [guedou/flashre](https://github.com/guedou/flashre), a collection of tools to interact with the FlashAir cards",1534152628.0
igor_sk,"really nice, many useful firmware RE tricks!",1534187072.0
-Reo,[CVE](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8897),1533927273.0
farmdve,"Wow, so simple, yet so powerful.",1533921356.0
0xF0xD1E,Can someone help me understand the impact? Looks like red hat only issued a DoS issue for this,1534004977.0
Zznzz,"Could someone nudge me in the right direction for some research? I'm looking for a method of analysis for reverse engineering some numeric translations, based only on a fairly large number of inputs and outputs only. The problem is a MAC address to serial number conversion, and I think they might be related. The output is some 13 hex chars, and input is 12 hex chars. I don't think it's encryption, since the numbers loosely track each other (meaning two inputs only 0x1000 apart have outputs maybe 0x50000 apart.. two inputs 0x10000 apart might be 0x1000000 apart). It's definitely not linear, and some bits of the output look fixed.. so is there some bit-analysis methods that might be a good starting point for me to look into?",1533951767.0
SirensToGo,"Does anyone have any favorite reverse engineering writeups? I'm looking to do a monolithic piece on this big project I've been working on but it's starting to feel like an awful high school lab report. Do people prefer narrative, ""just show me the data"", or something entirely different as a style?",1533939872.0
,[deleted],1534068698.0
SlayerOfBabies,"Hey, I'm looking for some crackme challenges, be it Malware or otherwise. Do any of you know of a free database online cosisting of these?",1534345211.0
kuwze,I recently found a project on github and forgot the link entirely. It was a link to some software for Windows 10 that was able to grab information locally before it was encrypted for TLS/etc. I am having trouble finding it and if anyone can remember it I would really appreciate it.,1534354893.0
Rioghasarig,"Does anyone know a way I could edit .NET assembly files that would allow me to comment the code I write?

I've been playing around with reverse engineering video games. I started with this game called Enter the Gungeon. I have a lot of ideas for things I want to try but before I get started I've been looking to find a good development environment. 

I need to edit the dll files directly . Since the game was written in 
Unity I can disassemble these into .NET assembly files. I figure I can try and edit these disassembles to make the modifications I want. I found some good programs that would allow me to do this (dnSpy and ILspy with Reflexil) but the problem with these is that they don't allow for the code I write to have comments. This isn't a dealbreaker, I just think commenting my code would be really helpful if I try and do something complex. ",1534514395.0
Dwedit,For VIA cpus only.,1533863882.0
Toxoplastic,isn't this just applied sandsifter? I mean it's cool and all but seems a bit underwhelming.,1534007416.0
Zophike1,"> The following graph presents a high-level overview of these relations. Each node represents a malware family or a hacking tool (“Brambul,” “Fallchill,” etc.) and each line presents a code similarity between two families. A thicker line correlates to a stronger similarity. In defining similarities, we take into account only unique code connections, and disregard common code or libraries. This definition holds both for this graph and our entire research.

It seems like tools from GT(Graph Theory) are being used is their a more formal(mathematical) approach to this sort of problem ? Because it seems like there's an easy way to fool this sort of detection.",1534031581.0
nonefx,😂,1533831935.0
joxeankoret,"I fail to see why was it required to write one more disassembler. I fail at seeing why is it any better than existing ones. I also fail to see why they decided to create a +5 GB JSON file instead of using, say, a SQLite database with indexes.",1533802845.0
mozark24,"I see it as a mixed bag. Significant innovations in the RE environment need to be spurred on by marketplace options... instead of relying on the behemoth(s). Not saying this is a significant innovation, but even small improvements can create ripples. I'm hoping to see some new visualizations or workflow advances in the future.

My notes:

- I would like to see more evaluation examples between this and other disassemblers.

- I find it interesting that they focused on json dumping static analysis elements, usually relegated to basic plugin capability. I suppose one rationale is to use the output in EMBER (Endgame's ML malware analyzer), but I wonder if there is an alternative motive...

- Somewhat sad its in Rust. Never got around to learning that one.

- Open source!

- Talk about automating analysis but little shown in this regard

- Uses FLIRT signatures

- Recursive disassembling

In the end, I looked back at the ""Problem"" slide and I am not seeing the clear linkage with their solution. Comparison metrics and analysis on speed would have strengthened the case.
",1533820758.0
rolfr,"For what it's worth, most of my own projects are done out of curiosity, obsession, or sometimes my motives are even unknown to myself personally. I've written these same components before just to learn the intricacies of them. That being the case, I can only applaud the release of this framework, even if I think most or all of the functionality can be accomplished with existing tools. Perhaps its release will motivate somebody to do research they otherwise wouldn't have done, and/or new public tools will be developed on top of it. Certainly nobody was harmed by the release of this project.",1533869421.0
shogunlab,"Hey all! I helped to write this blog post on some great work performed by another security researcher (Jackson Thuraisamy). It goes into the technical details regarding ARM device vulnerability research on Crestron touch panels. 

Hope that it's helpful for others trying to accomplish this work!

*EDIT: ICS-CERT has published their advisory regarding the CVEs outlined in the blog post (https://ics-cert.us-cert.gov/advisories/ICSA-18-221-01). Check out the ""Mitigations"" section for links to the latest firmware.",1533594405.0
tweettranscriberbot,"^The linked tweet was tweeted by [@AshEvans81](https://twitter.com/AshEvans81) on Aug 04, 2018 21:34:09 UTC (1 Retweets | 3 Favorites)

-------------------------------------------------

A quick call-to-arms to all coder / FPGA / MAME peeps...



I'm hoping to figure out how to interface MAME directly to FPGA boards, using something like the FT232H USB chip...



[http://www.ftdichip.com/Products/ICs/FT232H.htm](http://www.ftdichip.com/Products/ICs/FT232H.htm) 

[Attached photo](https://pbs.twimg.com/media/DjyTvFSX4AEXhTr.jpg:orig) | [imgur Mirror](https://i.imgur.com/JaoXQOE.jpg)

-------------------------------------------------

^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1533420490.0
irqlnotdispatchlevel,"> Maintaining EPT page mappings is arguably more complex than debug register bookkeeping

Are there any plans for HyperPlatform to actually implement EPT? ",1533825206.0
c0d1nguy,"Nice work! I enjoyed the article, very interesting and more importantly, useful.
On a side note, there is an error in the last sentence of paragraph two, ""trust the in client"". ",1533371417.0
mrexodia,Gives a new meaning to “hack and slash”,1533397927.0
Sn34kyMofo,"I'm always amazed by client/server Mono-based games that aren't at least obfuscated to prevent ease of readability after decompilation.

Sure, it's simple enough to find your way to a particular obfuscated method by finding what accesses an address of interest, but you at least HAVE to do that. And when you do, you're not guaranteed to understand the full purpose of the method or siblings of the same class you find yourself within, etc.

It really doesn't get much easier for us game hackers than what you outlined in your post. That's a very important takeaway for game developers to understand!",1533573014.0
SirBananaKiller,Could you link the first part as well or is it a recent post?,1533339324.0
DrawBacksYo,"When I'm stuck on some examples,I can't go further. How should I practice? Looking for another code to practice or insisting on that example? 

Edit: How can I start to reverse engineer hardwares/firmwares? Is it better to get used to reversing user applications first?",1533313051.0
catzybluphish,What's the upside of using a disassembler when you can use a decompiler that outputs or at least tries to the source code?,1533337925.0
ThePantsThief,"I have an important interview coming up. I am confident in my abilities and that I am a good fit for the job, but I'm nervous for the phone call itself. When asked to talk about my interests or skills, what do I say?",1533332518.0
smirnoffq,"Is it better to start learning RE by reading a book, or should I get some crackmes and get my hand dirty immediately?",1533669226.0
buzztiga,"How to locate/modify default subreddits in this free [app](https://play.google.com/store/apps/details?id=com.purdy.android.pok&hl=en)?

Upon installing, this app will prompt user to import subs, the default is a bunch of irrelevant subs which I hope to modify to  something else. I managed to decompile the apk and I have looked everywhere in all the smali files,  I am not seeing any URL, /r/, or anything like that.

Newbie here. Just started to learn how to reverse engineer apk. But I have successfully decompiled, built and signed the apk following some tutorials.

Among the folder, I thought folder called ""dialogs"" could be relevant, as it contains files with intrigueing names like ""GroupPromptDialog.smali"" & ""GroupPromptDialog$GroupAddListener.smali"". (See [http://startvclub.blogspot.com/2018/08/pok-smali-files.html](http://startvclub.blogspot.com/2018/08/pok-smali-files.html))

Any help will be appreciated.",1533892319.0
pogblack,"I know to program in C, Python and assembly Language's.
Is it also necessary to study C++ for reverse engineering? If so, which book is most recommended?",1533310919.0
drunken_yinzer,"i tried it out and gave some feedback a couple months back. At that time they were having issues with the latest version of the HexRays decompiler, but otherwise it worked surprisingly well. Developers were very open to feedback and were quick to fix bugs if you hit them up on IRC",1533247875.0
joshgarde,">It will also download Powershell on older Windows OS’s that do not have it installed by default.

Oh, well that's useful.",1533250777.0
anonymous_dev,"The registry tricks were discussed in a write up by Symantec in 2015: https://www.symantec.com/connect/blogs/kovter-malware-learns-poweliks-persistent-fileless-registry-update

Good write up though!",1533341133.0
realblade,Really amazing what you can discover if you look hard enough. Nice writeup.,1533160067.0
Madlogik,"Great read up! Question: how do you find out there is a telnet server, how to activate it and such? You make it sound obvious but sounds like you knew what to look for and how to enable it... How did you find out the telnet server existence in the 1st place? Thanks! ",1533165437.0
,[deleted],1533180468.0
hack3rsp0t,Great Analysis and write up. :),1533208410.0
pierenjan,Cool!,1533228700.0
jackk445,"For some reason I always liked reading about the backdoors in the IP cameras. They're simple, the explanation is easy to follow. There's also a great defcon talk about this topic also for anyone interested: https://youtu.be/B8DjTcANBx0",1533322387.0
HiFiDuino,This is awesome,1533521641.0
ipsecnerd,beautifully explained. Thanks!,1534564305.0
Storm_from_techbliss,"I own a Hikvision camera that dont have the backdoor, to my horror, i found out that if you simply dump the  IVMS-4200 client process the password are in plain text, also exposed the admin password, even if you are just a a user.",1537001868.0
_exgen_,"Ok so it's basically an obfuscated VM check.

It loads a 9 byte function on stack (at `ebp-14h`), and calls it.  
Take a look at it [here](https://onlinedisassembler.com/odaweb/bnraBvBX/0). Zeros will be replaced by address of `ebp-8`.

If you look at the function, it's just one simple instruction: `sidtd`  
So what does `sidtd` do? It's a 32-bit alias for [`sidt`](https://www.aldeid.com/wiki/X86-assembly/Instructions/sidt)  
It dumps IDT register which can be used to identify usage of virtual machine (explained in the link above).  
At `0x004014B8` you can see it loads the last byte of IDTR (`[ebp-3] && 0xFF`) and compare it to `0xD0`. If it is larger, then returns true.",1533135965.0
_exgen_,"Seems like it tries to call a function on stack. 
Loads 9 bytes onto the stack at var-14, then replaces bytes 4 to 7 with the address of var-8.
So you need to disassemble those bytes to find out what it does.  
What are the values of those dwords and byte?

I think at the end it checks the first byte of old ebp and compare it to D0h.",1533130813.0
darrell259,"So, I'm reversing this crackme, but I'm having difficulty understanding the function above.

this function is called at the beginning of main() function.

dword\_403110 value's: 0x0D010F

and dword\_403114 value's: 0x0C3000000

byte\_403118 is 0you can see at 0x4014b3, it calls ecx which is base pointer - 0x14.

now. Looking in windbg I set bp at 0x004014B6 to see what's ecx containsecx = 780d010f

ecx+4 = c30018ff

these values are combination of both vars (dword\_403110 and dword\_403114) but they lead me to nowhere since the memory is invalid :P

How can it call an invalid memory address ?

I think the problem is me understanding at 0x004014B0",1533130927.0
s1nistersheep,"Hey everyone, I'm pretty new to both reverse engineering and blogging. I decided to start doing some challenges on crackmes.one and blogging about them to get more experience. Feedback is greatly appreciated. Thank you for taking a look at my post!",1533100896.0
robinarthur,"could you please tell me which was your objdump command? i am a beginner and tried it on my own, but i dont know how you get the end address (0x804882) of the textsection.  
",1533792262.0
0xf3e,"The book ""Practical Reverse Engineering"" is very good, it's worth it for this book already.",1533025884.0
,[deleted],1533071651.0
knackmate,Is the 15$ tier worth it over the 8?,1533067896.0
veggiedefender,"I bought this bundle last year, and the new books don't really look that interesting. However, *Reversing: Secrets of Reverse Engineering* is in the $1 tier.

Does anyone here recommend it, and is it worth it if I already have *Practical Reverse Engineering*?",1533057260.0
AceOfShades_,"God bless, I’ve wanted a couple of these for a while but couldn’t afford it, and there appears to be some good stuff in here I haven’t heard about.",1533085867.0
har3na,"Shame, I hoped for a larger update. I've bought the one last year. Can't say I'm interested in the new books. However if you didn't buy this, there is a lot of good stuff in this.",1533043194.0
,[deleted],1533108072.0
rolfr,"This entry is sort of borderline for what constitutes acceptable content on this subreddit. Beyond the lack of detail provided by the title, the text itself is vague, brief, and difficult to interpret. For example, it makes reference to locations within the binary, but the binary itself is never linked, and those locations are not shown. It's hard to imagine how the reader could get much out of this. I'm not going to remove your post, but I'd suggest reading other peoples' write-ups to get a sense of what information you should convey, and how to convey it. When you read a write-up, what do you personally like to see? What do you find most understandable? Think about those questions, and try to incorporate those features into your publications in the future.",1533067319.0
igor_sk,please try to use a more descriptive title next time,1533040484.0
mobacyberkid,Thanks for sharing nice write up :),1532981097.0
rolfr,"Part two: [https://fail0verflow.com/blog/2018/ps4-syscon/](https://fail0verflow.com/blog/2018/ps4-syscon/)

Part three: [https://fail0verflow.com/blog/2018/ps4-ds4/](https://fail0verflow.com/blog/2018/ps4-ds4/)",1532913000.0
ThePhantomGMR,Thanks ,1532921971.0
mirh,"You can read more about the work for getting into Aeolia in the first place [here](https://www.psxhax.com/threads/volodymyr-pikhur-to-give-ps4-presentation-at-recon-brussels-2018.3588/). 

I wonder if this (together with the other thing with syscon) couldn't help nearing those damn HD encryption keys?",1532969566.0
r3v3rs3r,Anyone have tips / tricks for Themida packed executables?,1532741299.0
BB874C3LTM,"I am currently working in Information Security. For my training this year, I would like to focus on Malware Reverse Engineering for broading my knowledge. I have already done something. However, I want to do a full intensive week training in London.

Do you know about a good training that I could join? Price should not be an issue as the company will be paying but I would say around $4000 or so.",1533125452.0
Parad0x13,"Any good references on disassembled ASM common patterns?

Like what a switch statement looks like, loops, etc?

I open things in IDA and am often confused about what is happening",1532722616.0
Parad0x13,"Any beginners to masters binary CTFs/Wargaemz resources?

I’d like to start at the VERY most simple and work up to competition level flag finding",1532722753.0
AngryTeaKettle,"I used process monitor to have a look at the call stack for some application. I'm looking for something specific in the app, but the addresses I get in the call stack (Executable.exe + 0xOFFSET) don't match up to the addresses ollydbg (v2) gives me when opening the .exe

How do I find the right lines in the code? alternatively, got a better tool that can take me to the assembly code corresponding to each of the calls in the stack? Ollydbg doesn't seem to show me anything in the call stack.

I understand it may be a problem (if I understand correctly, DLLs might be loaded into the memory and look like part of the .exe when running?), so any suggestion for tools/methods to do this are appriciated :)",1532798768.0
hackmebr0,What's a good source to learn x86 assembly ? Would it better to use learn windows or Linux version ?,1532705064.0
Gilgameshismist,"Does anyone have a tutorial for removing/unpacking Alladin HL envelope? 

Currently running software from 2006 on XP with a hasp emulator (the dongle kept crapping out and the company which sold the machines went bankrupt). The idea is to move the software to a win10 nx64 environment without an emulator.",1532767103.0
exdev_throwaway,What is the minimum mathematical background one should have before attempting to reverse engineer software?,1533172832.0
HitandWalker,Does anyone have useful information on CASIO FX-9750GII file formats?,1533276061.0
yokozoko,Recommended Tools?,1532720729.0
theDaveAt,This article is far too simple to use as any type of “case study” or discussion on incident response. ,1532699094.0
fireh7nter,Darkcomet analysis,1532680334.0
nickthetait,"\+1 for Practical Malware Analysis, an excellent book. While a number of years old by now, all of the techniques/skills are still relevant. Includes labs and sample malware to practice against.",1532623732.0
maslen,"Xeno Kovah's ""Intro to x86"" course is also a great resource:
http://opensecuritytraining.info/IntroX86.html

Bonus: Includes video lectures and downloadable slide decks",1532639870.0
tParadox,"Depending on your level of understanding, grab some malware, slap it into a VM and get to work

if you keep it on your host pc then change the extension to avoid accidental executions",1532614996.0
adsjhflke4ho9h,https://securedorg.github.io/RE101/,1532634725.0
YOjulian,https://www.begin.re/,1532713460.0
Alienium,"Don't forget this guy ! One of the best professional resources, for FREE !!

[https://yurichev.com/](https://yurichev.com/)",1533803306.0
certifieddumbn00bboy,"I'm interesting in Program Synthesis and Cyber Autonomy (Autonomous Hacking), now most computer science subfields shifted toward ML/AI (in other word combined ML/AI with their subfield) is Program Synthesis and Cyber Autonomy (Autonomous Hacking) more ML/AI (Machine Learning/Artificial Intelligence) rather than PL(Programming Languages) or not, considering ML/AI now used widely in nearly every subfield of computer science.  

My second question is what the best path to specialize in Program Synthesis and Cyber Autonomy?    
Also should I dual major in both math and CS or in CS only keep in mind I'm interesting in Program Synthesis and Cyber Autonomy only.",1532705269.0
testudobinarii,"Great job, there are so few references out there for beginners to learn DBI and it's horrible to pick up from documentation and samples. ",1532556392.0
mozark24,Awesome write-up!,1533823483.0
tathanhdinh,"This is fantastic!!! Respect the author, the whole process may take me years to finish :)",1532508944.0
n0obs1337,Fantastic!!!,1532524438.0
nbhullar00,Ohhh!! Nice ,1532551481.0
herrcore,Nice work from Hasherezade! Finally a PIN project that uses a current setup to build : ) Looks like a nice project to get familiar with PIN and useful for quick API call deobfuscation. Looking forward to seeing what else is possible with this! Github link [https://github.com/hasherezade/tiny\_tracer](https://github.com/hasherezade/tiny_tracer) ,1532294363.0
dwndwn,"xigncode stores shellcode blobs encrypted with a ""hwid"" style key on other platforms. check the entropy for things that aren't obviously executables. iirc it's some small block based encryption algorithm where changing one block doesn't affect the next. ",1532302461.0
Zman96,What are your next steps from here?,1532290167.0
ash_w,"Very cool. 


BTW, I saw your Android JIT talk at infiltrate in miami this year, really helped on some android internals assessments I worked on this summer.",1532565722.0
knackmate,"I’m looking for a live (static) reversing video/stream from an expert, so I can learn how he thinks, how he works with IDA, how he navigates the program, what is he looking for, etc..

Have you guys ever watched a video like this? Thanks!",1532115993.0
thehelloand,"Sooooo, what version of IDA yall rockin?",1532099580.0
greyersting3,What's the best way to collect/organize finds and notes while reversing?,1532223077.0
RCEdude,"Do you happened to have a working Ollydbg on Windows 10 1803? 

For some reason i cant use it, every time i try to debug something there is an unhandled exception and the program cant continue.

I switched to x64dbg , which is cool, but its not the same thing.",1532356369.0
G-Man-f,"When debugging, how do you find out at which exact point the program terminates? 

I am trying to find out why a program terminates at a certain point with x64dbg. Going through the program step by step takes ages. But when I just let the program run in the debugger it simply terminates and the debugging is over. What I want to know is how to find out at which instruction the program terminates. 

If I knew that I could set breakpoints in the debugger close to the termination point. That way I could work backwards from the termination point to find out why the program terminates. 

Is there any way in x64dbg or any other debugger to see the last few instructions that where executed before the program terminated? 

That seems like a feature that should not be too hard to implement but would be really helpful for reverse engineering. But I couldn't find anything on that matter yet. ",1532102569.0
mozark24,If you could improve some visual aspect about IDA for beginners or experts what would it be?  ,1532113906.0
,[removed],1532124171.0
Fcuk-,"What do you guys prefer for kernel debugging, WinDBG + IDA or is there a better combo?",1532140435.0
sweetcherry7,"What's the best way to cope with an .exe and ALMOST perfectly fitting pdb file (which can't be loaded to debug that exe), any scripts, tools, tips?",1532195054.0
TotallyNotCarson,"I've been checking out Unicorn lately and am looking for more docs beyond the initial python/c tutorial, and for some more samples than provided in the repo. If anyone knows of any cool unicorn scripts out there plz drop a link. Thanks",1532206299.0
USRapt0r,"Have a virtual memory/ELF related question I'm pondering from something I've noticed while practicing:

One of my guinea pig ""hello world"" programs I'm targeting while scripting Capstone/Unicorn gets loaded into 0x0000555555554\*\*\* (see below)  - even if I compile it with -fno-pie/-fno-pic.  Can anyone shed light on why this is, and when/when not to expect gcc to create a binary that will get loaded into the canon 0x400000 base address?  Would like to learn more about what goes on here.

(gdb) break main

Breakpoint 1 at 0x66e

(gdb) run

Starting program: /home/user/re\_practice/block\_viewer/hello\_bv 

\[Thread debugging using libthread\_db enabled\]

Using host libthread\_db library ""/usr/lib/libthread\_db.so.1"".

Breakpoint 1, 0x000055555555466e in main ()

(gdb) ",1532351882.0
,[deleted],1532408508.0
Sharp_Eyed_Bot,Does anyone know an easy way to find LuaC functions in a game? Or any ida plug in and no this isn't for roblox haha,1532499952.0
BubbleBassOrder,"I'm using Olly to solve a crackme but I need to know what's at a specific misterious address referenced as: 

        TEST BYTE PTR DS:[EDX+ECX*2],48

How can I see what's stored at that location?",1532658807.0
GreyXor,Good write up of nice game,1532167846.0
moshe4pro,Nice tnx for sharing,1532037528.0
KontraEpsilon,"Some additional info

https://www.riskiq.com/blog/labs/magecart-ticketmaster-breach/

",1532101277.0
HiFiDuino,Wouldn’t the setTimeout only run send() once after a 30ms delay since it’s setTimeout and not setInterval? ,1532196027.0
Zophike1,Is their like a gitbook for PyKD ? I mean we have one for IdaPython and Radare2,1532014811.0
ClickableLinkBot,"##r/WindowsSecurity
---------------------------------------------
^(For mobile and non-RES users) ^| 
[^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| 
^(-1 to Remove) ^| 
[^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/853qg2/ignore_list/)",1531968885.0
Zophike1,Can some give an ELIU on Data-Only attacks and are they still prevelant for exploitation of Windows 10 Kernel ?,1531968740.0
ahiddenmessi2,I asked the question in c++ subreddit but no one answered me. So im posting it here to seek for help. thanks a lot!,1531954025.0
rolfr,Text posts are disallowed. You'll have better luck on the Reverse Engineering StackExchange: [https://reverseengineering.stackexchange.com/](https://reverseengineering.stackexchange.com/),1531958897.0
sinkmanu,"On Linux: readelf -S <file>

On Wndows: Use PEview and go to .text section",1531981746.0
balr,">...during one check we might log that a debugger was detected, and for another check we may change the behavior of some code down the line, or cause the game to crash five minutes later. This unpredictability helps keep the detection more difficult to spot and also helps us get telemetry on how and when people try to analyze the game client.

I suppose it would be wise to isolate the machine before attempting to use a debugger on this game. ;)",1531905078.0
MrSynAckster,"I want to link to the similar thread on REGames - [https://www.reddit.com/r/REGames/comments](https://www.reddit.com/r/REGames/comments) \- I gave some constructive criticism on the new protections: 

>When I read articles like this, I am saddened by the lack of good tools and original ideas out there for people looking to secure games. I'm just going to write out my thoughts on the various mitigation techniques the author describes, with my thoughts on their efficacy.  
>  
>Encryption/Packing: This is the first thing any seasoned reverse engineer will expect, and is very easy to bypass (as they acknowledge) with dynamic analysis. I'm not sure the article makes it clear enough that cheat developers can use dynamic analysis to create a version of the executable that is unencrypted, such that static analysis can be resumed.  
>  
>Anti-Debug: Again, almost every ""intro to reverse engineering"" crackme has the anti-debug calls sprinkled through it. Cheat developers will be expecting this, and doing it a lot and in various ways will only be a temporary irritation.  
>  
>Checking Imports: This can be bypassed by using system level hooking. The attacker redefines the meaning of the functions checking the imports (I am assuming riot are using the win32 apis for this and not rolling their own code for it) and we are back to square one.  
>  
>Moving Data Across Memory to Confuse Memory Editors: This is a little more interesting, but only represents a temporary annoyance for people who know what they are doing. I agree, this is enough to discourage a script kiddy, but not a RE vet.  
>  
>I do think that the fundamental premise of removing useful data from the client is incredibly important. This is easily the most important thing they described in the write up.  
>  
>Don't get me wrong - these are very positive changes in an ecosystem where there are no easy answers. However, I can't help but wish there were better solutions for games in particular where some critical values must remain on the client. The fact is that the above techniques are so widely used by commercial packers and malware that there is a massive body of knowledge on how to subvert them. The authors obviously know this, but it really is hard to say how many would be cheat developers this will discourage when so many are motivated by the thrill of bypassing security measures.  
>  
>In my opinion the fundamental issues games have to overcome here is detecting hooking in an untrusted, attacker controlled environment. This is very, very hard. Here are my suggestions for game developers (just spit balling!):  
>  
>Require knowledge only the server has wherever possible. Imagine a scheme where values are cryptographically validated server side somehow, such that the attacker cannot alter values to be used server side without knowledge of some ever shifting server side value. Just off the top of my head, you could try out a scheme like : mana + nonce such that the nonce must be pulled from the server in a strictly timed set of events that would be easily disrupted by tampering. That example wasn't perfect, but I think there are some interesting ideas to be had in that direction.  
>  
>Require ever changing server side values to decrypt compartmentalized sections of code. Make it nearly impossible to decrypt the binary without a valid, recent session on the server. Make sure that the encryption area is split up into multiple sections with different keys such that decrypting one section will not easily allow for decryption of another.  
>  
>Obfuscate control flow such that human static analysis of control flow is impossible (commercial packers do this.)  
>  
>Require knowledge only provided by a current server session to derive values for successful control flow. I.E rely on jump tables that must be decrypted with new keys each server session.  
>  
>Constantly update relative addresses, offsets, variable ordering and the design of structures.  
>  
>Design self modifying code such that relative offsets and locations of functions are different are hard to identify each run.  
>  
>Do sneaky integrity checks on everything (Maybe they already are?)  
>  
>What games really \*need\* is something like a TPAM unit for local game data that is impossible for hooks to access at run time. Maybe that's not possible, but isn't a nice thought?

There's a little debate about this on the original thread, so you should check it out. ",1531931162.0
SirHorace111,This is also the reason I can't play on Linux anymore. Because they hate us,1531925596.0
mikaelhg,"This is kind of a losing battle, because the end game is a $100 [physical](https://www.prnewswire.com/news-releases/rockchip-released-its-first-ai-processor-rk3399pro----npu-performance-up-to-24tops-300578633.html) device with a HDMI [input](https://github.com/cliffordwolf/SimpleVOut) and output, and USB input and output, WiFi, that does computer vision [object detection](https://arxiv.org/abs/1804.02767) at 30 fps, and sends mouse events and keystrokes through a custom [CAN](https://arxiv.org/abs/1411.1784) that disguises them as your own.

I'm kind of surprised that I can't buy one on AliExpress right now, someone is slacking and leaving money on the table.",1531909509.0
zackline,">We don’t share the state of other players if it doesn’t need to be shared, so we can avoid common cheats like “map hacks” (revealing all players on the map).

Kind of funny that this is one of the first things mentioned, when for years recalls are send even in fog of war, allowing scripts to fire projectiles into the enemy base to hit exactly when the player finished recalling (teleporting back).",1531937131.0
stuxood,"While this for sure does not solve the issue of cheating, this post still is very fascinating. Besides that their attempts in obfuscation-security, will lead to the solution that the majority of public cheats will be detected. Sure, top tier and small user-based providers, will still find a way, but that is and will always be the case.

Very nice insight and very cool methods used there. I like it. Valve should read this.... :D",1531911714.0
MrSynAckster,"Are you guys planning on releasing a tool based off of this? Didn't give the paper a deep dive yet, but I didn't links to a github. ",1531880091.0
igor_sk,">Obtaining the class hierarchy is a critical step in understanding the flow of control in a program[...]

Not certain I would call it ""critical"". Sure it may help, but can also confuse more than necessary.",1531926261.0
,[deleted],1531966733.0
MrSynAckster,Nice writeup. I'm curious if anything significant differs in the handling of VPN connections through the preference pane and the command line utility. Also wondering if XPC is treated safely. Did you use Hopper for the Disassembly or IDA? ,1531880013.0
ilfak,"A nice post!
Please note that there is idaapi.get_arg_addrs(), it finds the instructions that prepare the call arguments. get_arg_addrs() requires the prototype of the called function to be present, though.",1531918870.0
,[deleted],1532620748.0
MrSynAckster,"Glad to see this accessible, as I don't think I would have gotten to take the Black Hat training for a while. I like the detail in the slides, and would have even liked a longer presentation. If anything, I would like to see a version of this that has more concrete examples of automated detection of the vulnerabilities built into the presentation. You go into this a bit, but seeing example static analysis code in places would have made an awesome course more awesome.  ",1531880907.0
tweettranscriberbot,"^The linked tweet was tweeted by [@Atredis](https://twitter.com/Atredis) on Jul 16, 2018 18:13:43 UTC (20 Retweets | 23 Favorites)

-------------------------------------------------

Here's the deets for this year's BH ticket binary challenge. We've got BH tickets, swag, and party invites for the top players. Good hunting! 

[Attached photo](https://pbs.twimg.com/media/DiPvInbUcAAPUtG.jpg:orig) | [imgur Mirror](https://i.imgur.com/L2hLhYx.jpg)

-------------------------------------------------

^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1531772517.0
herrcore,"The step-by-step install guide is posted on our blog ... 

[https://oalabs.openanalysis.net/2018/07/16/oalabs\_malware\_analysis\_virtual\_machine/](https://oalabs.openanalysis.net/2018/07/16/oalabs_malware_analysis_virtual_machine/)",1531746998.0
Men_Of_Spoons,"Something is wrong with the script, boxstarter.org/bootstrapper.ps1 returns 404, the domain has to be ICANN verified.
  
EDIT: boxstarter.org doesn't 404 anymore.",1532035042.0
tansim,How far are we from an opensource Curellium?,1531735852.0
Zophike1,Is their a guide for booting the Win_Kernel on Qemu ?,1531765417.0
firstEncounter,Cool write-up! How'd you end up tracking down what kind of serial port is used?,1531745305.0
SirensToGo,This is the sort of thing I’ve always wanted to try by was worried I wouldn’t get anywhere. Super cool! ,1531799814.0
samamanjaro,"This has inspired me to try to reverse engineer the psx game skuklmonkeys! Ever since I was young I have wanted to browse through the game assets. Usually you could find a tool that someone had written, looks like I'll have to be that someone.",1531652969.0
ChapieTheRobut,Awesome I've been looking for a replacement for crackmes.de!,1531597400.0
thelambeers,Awesome. Appreciated!,1536240591.0
Heroic_Nasty,"I'm an engineer with **Raytheon Cyber Security Innovations (CSI)**. I wanted to reach out to the /r/ReverseEngineering community and let you guys know what we're looking for. All comments here are mine and mine alone and not endorsed by Raytheon proper. Any questions leave them here (preferably so others can benefit) or PM me. I'll answer them if I can.

We're looking for people who want to break things and have fun doing it. We're looking for developers, hackers, researchers, and engineers with an interest in information security and low level development. We take our work and our fun seriously. We refuse any work that isn’t hard and engaging. We make sure our engineers have the tools they need to do their jobs, and focus on recognizing results. Surfboards, pirate flags, and DEFCON black badges decorate our offices, and our Nerf collection dwarfs that of most toy stores. Our research and development projects cover the spectrum of security technologies for Computer Network Operations. If it runs code, somebody in our office has looked at it.

**Key areas of focus include:**

* Reverse Enginering
* Vulnerability Research
* Wireless and Network Communications
* Hypervisors
* Malware
* Mobile/Embedded Development
* Win32/Linux Kernel development
* Constraint Solving
* Exploit mitigation techniques

Basically, if it’s in the cyber (yes we said it) realm, we’re doing something cool with it.

Information security continues to be a growth industry and we are constantly looking to find the right candidates who can do this challenging work.

Familiarity with at least one common low-level architecture (x86, ARM, etc) is important, as is the ability to conduct vulnerability research against applications compiled for that architecture. Experience with software protection and binary armoring is a plus, and familiarity with modern exploit mitigation techniques and counter-measures is a must.

Development experience is desired, but at least some scripting experience is required. Whether in Python, Ruby, or some other language, you should be capable of quickly developing the tools needed to help you succeed in your reverse engineering and vulnerability research efforts. The strongest candidates will have a variety of low-level operating systems experience as well as cross-platform vulnerability research. If you've written everything from a kernel paged pool exploit to a simple userland stack-based buffer overflow, built your own dynamic instrumentation and integrated a solver to help you identify and reach code, or modified emulators and JIT engines to add your own instrumentation to help you identify entire classes of vulnerabilities, you'll be right at home.

Aside from reverse engineers and researchers, we are also looking for developers with an interest in low level systems development. If you're comfortable living in the kernel, developing drivers, or similar kinds of work, we'd love to hear from you! C and C++ skills are definitely a plus.

**US Citizenship** & the ability to obtain a Top Secret clearance is required. If you're already cleared, even better!

Our headquarters is in **Indialantic, FL** with additional offices in **State College, PA; Annapolis Junction, MD; Ballston, VA; Dulles, VA; San Antonio TX; Austin, TX; Huntsville, AL;** and **Greenville, SC**. Relocation assistance is available.

You can find additional information by visiting [Raytheon Cyber](https://www.raytheon.com/cyber/), or just PM me directly.

For the personal perspective, I've been here for several years at our Florida location and it's awesome. We have a lot of flexibility in what we work on and we have a strong engineering led culture. Most of our senior management are engineers themselves and understand the proper care and feeding of technical folk. We feel a lot closer to a startup than what people normally think of when they think of defense contractors. Shorts, flip-flops and t-shirts are standard issue attire, we have unfiltered internet access for ~~Reddit~~ job relevant research, tons of free snacks, and whatever equipment you need to do your job. We trust you with root on your dev box. Want to run your hipster Linux distro of choice? As long as you can do your job with it, have at it.",1531588119.0
RobloxAahz,"Company: **Roblox**

Roblox is a gaming platform that allows users to create games and play games made by others. (You may not have heard of us, but ask any 9-16 year old, and they'll be able to tell you all about us.) Our platform is gigantic and our top game developers make millions of dollars per year, so while a lot of our focus is on kids, we're definitely not a small operation.

Unfortunately, in addition to a bazillion users who play games on our platform, we also have a number of people who want to exploit our games. Search for ""Roblox exploit"" and you'll find DLLs that people have developed to cheat, grief, and cause general chaos in our games. We have a security team who deals with these threats, and we're looking to add people who are skilled in reverse engineering to help us combat these exploits. If you understand system/process internals well enough to detect and prevent code injection, memory modification, API hooking, and similar nefarious things, then you're the person we're looking for.

We're located in San Mateo, CA (a little south of San Francisco). Right now we're looking for local candidates only, though we'll be happy to help people relocate to the Bay Area. You don't need US citizenship, just a work visa, and there's no security clearance.

If you're interested, apply at [https://corp.roblox.com/jobs/?gh\_jid=1001237](https://corp.roblox.com/jobs/?gh_jid=1001237). If you have questions, email me at [cswiedler@roblox.com](mailto:cswiedler@roblox.com). Cheers!",1532739107.0
RedLatticeRobs,"REDLattice is looking for engineers with security clearances. We are a dynamic company in the midst of amazing growth. Culture and employee happiness is our focus; which is why we sponsor many social events including game nights, CTF's, happy hours and outings. We offer top-notch benefits and employee ownership that makes offers from our company pretty sweet. 

We need talented folks who want to work on the forefront of cyber. We aren’t talking network defense or basic IT security here. Our positions are mission focused and operational in nature. As a REDLattice Engineer, projects will be undertaken in small teams with close coordination with customers to develop new or enhance existing tools. 

Required Qualifications

* Familiarity with at least one common low-level architecture (x86, ARM, etc)
* Experience with vulnerability research against applications compiled for that architecture.
* Familiarity with modern exploit mitigation techniques and counter-measures
* Experience using C/C++, Python, bash, or other scripting languages
* Whether in python, ruby, or some other language, you should be capable of quickly developing the tools needed to help you succeed in your reverse engineering and vulnerability research efforts.
* Experience with a variety of low-level operating systems and cross-platform vulnerability research.
* Candidates must be able to play both sides of the fence, both defeating and developing new and advanced security techniques.
* Secret or higher Security Clearance

Desired Qualifications

* Experience developing offensive cyber tools
* Familiarity with low-level assembly, and Linux kernel
* Experience with android or iOS development/reverse engineering",1531942060.0
AngryPandaRacing,"Company: [APR LLC](http://www.goapr.com/)

APR produces aftermarket software and hardware for performance automobiles from Audi, Volkswagen, Porsche, BMW and others. The software we sell improves the power output over stock. It can also add features to the vehicle. 

In order to produce and distribute this type of product, engineers at APR must gain access to the binary contents of the ECU (Engine Control Unit). Relevant parts of the binary must be disassembled and understood. Features must be added, removed and modified within the binary. Flashing protocols must be developed for each ECU, as well as compression and cryptographic signing routines that are compatible with that particular ECU. Obviously, the OEM does not provide us with any tools or processes for this, so it must all be attained through a combination of forward and reverse engineering.

This work empowers our calibrators (physicists and mathematicians) to tune the engine software and ultimately produce the product that we sell to the market. 

For this position, we need candidates with a strong understanding of computer architecture, assembly and crypto. Useful competencies include embedded specific experience (flash storage, ARM/PPC/etc assembly, boot processes, serial buses, etc.) and recognizing/implementing software and hardware exploits to achieve execution on locked down systems. 

This position requires you to live in the Auburn, AL area. Relocation is available. Perks include casual dress, flexible schedule, and working in and around very powerful automobiles. A degree in computer science/engineering or a related field is desirable, but given the context of the work, non-standard educational pasts are acceptable. Just start a conversation and help me understand your qualifications. 

If this type of work appeals to you, send a resume or start a conversation with me at dheigl@goapr.com",1536184810.0
,[deleted],1531930618.0
RedBalloonSecurity,"Red Balloon Security | New York, NY | Full time and Interns | Onsite | Visa welcome | Undergraduate, Masters, PhD| Rolling start dates/application deadline|redballoonsecurity.com

About Us:

Red Balloon Security is a venture backed startup cyber security company headquartered in New York City. Our mission is to provide embedded device manufacturers with strong host-based firmware security. We believe all embedded devices require strong protections against malware and intrusions, and seek to provide these protections to our customers. 

Our key markets include enterprise equipment, automotive, aviation, unified communications, SCADA, Internet-of-Things, network infrastructure and more. There is a vast universe of vulnerable embedded devices deployed around the world that need security. 

We have created a means to inject our Symbiote host-based security technology onto any device, regardless of CPU type, regardless of functionality, regardless of operating system and without changing the performance and functionality of the device. We do not require access to customer source code, nor do we require manufacturers to change their product design to accommodate our security solution.

Red Balloon Security offers a full benefits package, 401k, a generous vacation policy, and paid health and dental plans. The company is located in Midtown West in New York City. We are an Equal Opportunity Employer of minorities, women, protected veterans, and individuals with disabilities.

Open Positions:

Security Researcher / Security Software Engineer 

Python Engineer

Business Intelligence Analyst

Software Engineer in Test

Security Intern

Business Intelligence Intern

More detailed job descriptions: r/https://redballoonsecurity.com/jobs/

To apply, email jobs@redballoonsecurity.com. Make sure to include what job you are looking for in the subject line!",1533246086.0
PuffThePed,"Hey all, I'm looking for someone to help reverse engineer the USB protocol for this device: http://www.ecomatic.ee/get_file.php?file_id=535

This is a paid remote position. Please DM me.",1533933519.0
XD2lab,"**Company: D'Crypt**

**Position: Mobile Security Researcher**

\*\*Location: Singapore **(remote work is possible for experienced candidates)**

At **Xerodaylabs**, a division of **D’Crypt**, you will get to perform zero-day vulnerability research with a dynamic team of security researchers from diverse backgrounds with distinguished credentials and experience, in a highly collaborative environment. We specialize in providing knowledge of software vulnerabilities to our customers as well as research cutting-edge tools to power the vulnerability discovery, analysis and exploitation process.

**Job Description:**

This is an exciting role responsible for discovering and exploiting vulnerabilities affecting high profile off-the-shelf and commercial applications and appliances. The work includes bug hunting, reverse engineering, vulnerability analysis, exploitation and tool development.

**Primary Responsibilities:**

* Conduct zero-day vulnerability research on iOS or Android platform at user and kernel space.
* Build in-house fuzzer and/or leverage on open-source fuzzing frameworks, such as AFL, Syzkaller and Difuze, for fuzzing
* Assess if identified vulnerabilities are exploitable and determine the root-cause, using reverse engineering techniques such as static and dynamic binary analysis
* Develop proof of concept exploits to reproduce and demonstrate the impact of vulnerabilities
* Write summary and technical reports on new vulnerabilities
* Document and enhance the research framework, methodology and processes

**Desired Traits:**

* A drive to succeed and a passion for low-level security, vulnerabilities and exploits
* A keen eye for detail and a persistent attitude to explore all avenues
* Able to work collaboratively in a team environment while also being self-motivated to effectively work independently.
* Organized thinking and excellent problem-solving with the ability to think “out of the box”

**Requirements:**

* B.S degree in Computer Science, Computer Engineering or a related field preferred
* Knowledge of iOS/Android security frameworks – their implementation and mitigation controls
* Keep up-to-date with the latest security vulnerabilities (e.g. reported CVEs), their impact and exploitation techniques
* Hands-on experience with open-source fuzzing frameworks, such as Syzkaller and Difuze, is a plus
* Demonstrated experience in researching vulnerabilities or participating in bug bounty programs or other security related activities is advantageous
* Senior and entry-level positions available

**Perks:**

* Casual dress code
* Opportunity to work in a team with experienced researchers
* Training and conference attendance

We have openings for Windows Security Researchers as well. Get in touch with us for the opportunity to be part of a growing team. Email: [xdl\_hr@d-crypt.com](mailto:xdl_hr@d-crypt.com)",1532392643.0
SkySafeIO," [**SkySafe**](https://www.skysafe.io/) is looking for talented, driven **Reverse Engineers** interested in **drones**.

If you love tearing apart binaries, reversing custom protocols, and developing tools to abuse functionality, then SkySafe would like to hear from you! We are looking for Senior Level REs that are excited about reverse engineering embedded devices and related drone technologies. Come join our small team of San Diego based hackers who enjoy daily free lunch, full health coverage, wellness benefits, snacks, and flexible work hours.

We’re continuing to grow the world’s leading team on drone security. If you would like to learn new skills and poke around interesting systems, while pushing the boundaries of what’s possible in an entirely new industry, then SkySafe might be right for you! Email us at [jobs@skysafe.io](https://www.reddit.com/).

**Responsibilities**

* Stay on the forefront of drone product development, releases, and hobbyist communities.
* Research capabilities and features of new systems, worldwide.
* Analyze hardware and software components, protocols, and data formats.
* Produce and maintain internal documentation of system features and interfaces.
* Stay current with embedded reverse engineering techniques.
* Work in a small team environment, leveraging version control systems, issue trackers, and messaging tools.

**Requirements**

* Experience reverse-engineering hardware and software systems.
* Research capabilities and features of new systems, worldwide.

**Useful Skills**

* Vulnerability Research, Fuzzing, Exploit Development
* IDA Pro, JTAG, GDB, and other debuggers
* ARM, PPC, MIPS and other embedded architectures
* RTOS implementations
* Protocol analysis
* Binary exploitation, cracking, etc.
* Proficiency with software-defined radio frameworks and instruments.
* Experience with radio communication systems, modulation techniques, error-correction algorithms, etc.
* Experience with a range of embedded protocols, including USB, ethernet, I2C, SPI, CAN, etc.
* Experience in wireless system standards and technologies including OFDM, MIMO, CSMA-CA, WLAN, GSM, and LTE.

The team is located in San Diego, with optional light travel.",1532733365.0
somersetrecon,"**Somerset Recon** is looking for **Penetration Testers** who like to break software and embedded devices in **San Diego, CA!!!**

We're a small team located in San Diego that focuses on security analysis and reverse engineering. The projects we work on are always different, but the projects generally involve conducting cutting-edge security research and vulnerability assessments of complex systems. 

**Required Skills:**

* Web application penetration testing
* Mobile application penetration testing
* Source code vulnerability analysis
* Serious problem-solving skills
* US Citizenship

**Good to have Skills:**

* Ability to identify and exploit web vulnerabilities (XSS, CSRF, SQLi, SSRF, arbitrary file upload, etc.)
* Ability to identify and exploit mobile vulnerabilities (API issues, insecure storage, memory corruption, deep links, etc.)
* Protocol analysis
* CTF experience
* A degree in CS or related field
* Secure coding practices
* Cryptography
* Network penetration testing experience
* Reading and writing assembly (x86 and ARM)
* Binary analysis tools and debuggers (IDA Pro, Immunity, WinDbg, etc.)
* Exploit Development
* Embedded systems experience

**Perks:**

* Work with an awesome small team
* Salary, equity, and possible bonuses
* Conference attendance
* Flexible work, you'll be involved in determining future projects
* Paying for training courses
* Healthcare and vacation benefits

If this sounds like something that you are interested in, let us know! You can reach out to us on Reddit or apply via our website at: [http://www.somersetrecon.com/careers/pen-tester](http://www.somersetrecon.com/careers/pen-tester)",1533068257.0
buzztiga,I need to reverse engineer a reddit client for certain community. Contact buzzlima \[a\]  gmail dot com,1534673790.0
RedLatticeRobs,We now have positions open in Melbourne FL also! RE and VR. check us out on www.redlattice.com,1535557392.0
albmed7589,"Im looking to hire someone to help me reverse engineer a sweepstakes gaming software suit. It's not copyrighted or trademarked.

so far after doing some preliminary research using olliedebug and some google-fu, I know that part of / most of the code is compressed/obfuscated. From what I can tell it's systemstarter.exe process is sending and receiving TLS data from a ip in Taiwan on startup. I need help deobibg / decompiling the systemstarter to see what meesages the process is expecting.    

**Skills needed:**

**- C++ Coding**

**- Reverse Engineering**

**- Knowledge about how to defeat obfuscation**

**- Ability to communicate over discord / a messaging app** 

I would like to get to work on this project as soon as possible. I will provide any help I can and am willing to pay well. Please contact be by messaging me here, or by email at **albmed7589@yahoo \[dot\] com**",1541709317.0
albmed7589," 

Im looking to hire someone to help me reverse engineer a sweepstakes gaming software suit. It's not copyrighted or trademarked.

So far I know the application is coded in C++ and is encrypted. There is a small systemstarter.exe that is sending out TLS packets to a ip address that I will need to fake. I will pay well for help on my project.

**Skills needed:**

**- C++ Coding**

**- Reverse Engineering**

**- Knowledge about how to defeat obfuscation**

**- Encryption Knowledge** 

I would like to get to work on this project as soon as possible. I will provide any help I can and am willing to pay well. Please contact be by messaging me here, or by email at albmed7589@yahoo \[dot\] com",1542116289.0
cybergibbons,Been using this on a recent job. It's really slick compared to the others available. ,1531591036.0
mtufan,"this looks great, thank you :)",1531575065.0
TaineeBusec,Very nice! Been doing this type of stuff in 010editor up until this point.,1531581782.0
baseball2020,Awesome. The others were pretty lacklustre as far as I could see. ,1531616700.0
Juukamen,got some interesting tools on that github also :D,1531771823.0
paul_h,Why?  Because none of those listed changes require a reboot.,1531554193.0
Shoddy_Tennis,"So, I don't use Macs because I actually know how to use a *nix *smug* but re: not requiring a restart : ""fixes an issue that may prevent Photos from recognizing AVCHD media"". I don't know what hardware Mac's use these days but anything running an Intel chipset x58 or higher will have native hardware decoding capabilities. I dont' know how Photos interfaces with the chipset, but it *could* require a firmware upgrade.

RE: ""each update""- not really into the Mac scene, as I mentioned, but I'd check the Hackintosh forums. The people who write the bootloaders will probably have enough low level knowledge to at least point you in the right direction. IIRC, populating a symbol table into IDA is reasonably easy since one of the earlier releases (if not the current ones) didn't strip the bins. 

Identify the changes by dtrace'ing any device request/hooking open()/read()/lseek()/whatever, or just VM snapshotting, installing the update, then diffing. Then it's just a matter of Zynamics BinDiff'ing. 

You have a leg up too since not only do you have a symtable, but presumably Mail.app and Photos.app are both written in Obj-c which do so much dynamic resolution that nearly no information is lost even with your compiler optimizations maxed out (class names are still in there, nicely sectioned together in a linear fashion; if a method is missing, it's generally trivial to guess what it is since it'll be surrounded by similar methods coming out of the dylib, etc.)

When I use OS X or Win10 (and Chrome and Firefox for that matter), I'm pretty much expecting there to be junkware ""telemetry"" added every update or patch, so I don't even bother poking around to see what's phoning home, but if you really wanted to see what changes were made, it'll be fairly easy.",1531559113.0
igor_sk,repost direct link without blogspam,1531574417.0
lolsrsly00,Did the IDA Python modules become self aware and take over IDA?! Where will they stop?!,1531539627.0
QSCFE,"Great job OP by maintain and update IDA IPython, I always want to play with it but never have the time :)  

How does it differ from [eset pyida](https://github.com/eset/ipyida) other than that ipyida is cross-platform?",1531766429.0
desertfox12311,"Hi Tamir,

when testing on IDA7 there is no toolbar and starting a kernel manually
doesn't let anyone type anything, there is only an echo of the line ""::"" out there",1531782438.0
eloquentdelinquent,unfinished,1531514754.0
greyersting3,"Is there a sort of ""roadmap"" for learning reverse engineering that anyone knows of? I'd assume it goes something like starting out with programming such as x86, probably C++, and maybe Python or similar. Then maybe learning windows api a bit for Windows stuff. After that learn some analysis tools (IDA Pro+WinDBG?). This is just a complete guess and it's just to get an idea of what I'm looking for. Anyone know of a resource that lists something like this or willing to make a write-up? Thanks.",1531510873.0
h_saxon,What tools do you use for going from op codes to asm?,1531512839.0
Ariana1729,Is trying to get something like hex-rays decompiler worth it when there are decompilers like r2dec,1531571665.0
,[deleted],1531726424.0
SirensToGo,"Anyone have any tips for finding raw bitmaps in a RAM dump? I’ve made a little utility for iOS which dumps all the VM segments but I can’t seem to find them. The dump is around 1.6GB (though mostly null bytes) and the images should take around 30MBs (w*\h\*4)

**edit**: never mind, figured it out. Turns out images are only decompressed when they are needed for display, ie if the image isn’t already visible it won’t be in ram as a bitmap. Easiest way to find it is just look for a file with lots of 0xFF’s because iOS bitmaps are in the RGBA format and usually the alpha channel is at 255. My other tip was making a gigantic 75MB bitmap with the rgb color (0x41,0x41,0x41) so you end up filling a bunch of pages with a known pattern. ",1532055183.0
vey_Nick,How do you crack a TEA encrypted text?,1531825502.0
Mattisanidiot999,"For a job interview I have to do +ma reversing, currently on riddle 3, can anyone throw a pointer my way? ([http://3564020356.org](http://3564020356.org)) Would appreciate any help!",1532000511.0
Zophike1,"> We demonstrate our methodology to the problem of computing upper
bounds to loop iterations in the code. This problem is particularly important
in the domain of Worst-Case Execution Time (WCET) analysis
of safety-critical real-time code. However, our approach is general and it
can applied to other static analysis problems.

^ Reading this makes me ask how has their formalism compared with other techniques does it still have any present disadvantages/limitations ? ",1531460453.0
rolfr,Meh.,1531513293.0
0-1-2-3-4-5-6-7,I don't use frida but I heard of it. How good is it?,1531415686.0
Miracleb,"I was not aware of such libraries. Such an amazing read it has been about Frida to see what it can do.

It makes me wonder though, how do you call such a library and secondly, are there more tools out there?",1531422747.0
QSCFE,"The cool thing here is  
>As some of you may have picked up on, there may be a book on Frida in the works.   

https://twitter.com/fridadotre/status/950085837445836800 
>Rumor has it there may soon be a book on Frida in the works. Anyone interested? Please RT for “yes”, and feel free to reply with topics you’d like to see covered.  

I'm not expert with Frida but I hope those who have experience with it reply.
",1531489321.0
andrewcooke,5 - memetic mind virus insertion,1531404809.0
Zophike1,"Has their been any papers on ""formalizing"" the notion of Speculative attacks ?",1531343891.0
S33dAI,"`if (x < len(b))
    return a[b[x] * 512];`

`if (y < len(c)) c[y] = z;`

Where is b and c coming from? They are not attacker controlled...",1531385249.0
CookiePLMonster,"Props for a choice of a blog theme, I've been using the same one for a while and it's absolutely perfect!

Looks like a very good read too, I'll make sure I read it soon.",1531307287.0
piazzt,"Seems to be mostly a primer on wasm as an architecture. That being said I haven't explored the sexpression format except for debugging in Chrome; I've had much better luck [transpiling](https://github.com/WebAssembly/wabt/tree/master/wasm2c) to C.

Since wasm -> C inherently needs to convert from stack expressions to infix, it's probably possible to obfuscate wasm so it can't be represented in C, e.g. by having different stack usages between two branches of an if statement, though I've never come across this :)",1531197184.0
b1t_viper,Non-referral Link: https://www.udemy.com/learn-website-hacking-penetration-testing-from-scratch/,1531109324.0
SmashedSqwurl,"I just found out this community existed thanks to my post on /r/homelab, and thought you might find this interesting.",1531105429.0
TailSpinBowler,"I am guessing that https://github.com/gdbinit/EFISwissKnife required Ida Pro license to work?

We had some lenovo laptops at work with forgotten bios pw. Absolutely no way to fix.

I used UEFItool to pull apart a bios update, but was getting lost with  they way modules talked to each other.",1531136453.0
0-1-2-3-4-5-6-7,"/r/liveoverflow.

I genuinely thought I was reading this from there. Regardless you should definitely check the page out: has info on the specific game you want to hack",1531057393.0
Freefall01,"Feel free to correct me on this but most games ship without debug info such as function names right?

How would analyzing work without function names?",1531383270.0
TailSpinBowler,"Maybe someone can help me here. I know some basic python, but ive never seen/explained the ""script.on"" and how ""send(exports[i].name);"" relate to each other.

",1531046419.0
zenware,"I want to play this game :O
",1531060502.0
Dillinur,You could maybe also post this to r/REGames,1530975364.0
Cabby503,Awesome post! I remember my WoW days. I wish I was a programmer back then! I would've tried the same thing.,1530975518.0
Lywqf,"Not gonna lie, that is an extensive article and i'm gonna need more than one coffee to process it.

Good job on you, that seems like a really good and interesting read !     ",1530986005.0
test-acc,"This is awesome, need more of these!",1530999720.0
marsh0,"Thanks for posting, I tried creating my own hacks and could never figure out how to get the static address. This covers it nicely! ",1531016019.0
danukeru,Now let me see you take on Warden 2.0. ;),1531326212.0
0xF0xD1E,inb4 blizzard sues you also github or gtfo,1530972455.0
Zophike1,"Does anyone have a good reading list for papers in Static Program Analysis ? Especially papers that :

- Work in black box situations where one has debugging information is entirely absent or present (at the binary level)

- Has Techniques that work with the following Vulnerability Classes:
   - Heap Overflow
   - Buffer Overflow
   - Stack Overflow
   - Information Leakage 
   - Integer Overflow/Underflow
   - Type Confusion
   - Null Ptr Deference 
   - Format strings
   - Double-free 
   - Race conditions



- Has implementations readily available 

- Has techniques that can be readily generalized 

- Has techniques that work on large binary's such as Kernel-Mode drivers or custom heap managers

- Has contain outlines of proofs and leaves details to the reader

- Has techniques that are extremely reliable in nature and are applicable to proving the presence or absence of vulnerability classes 

- Has employed techniques that are highly nontrivial in nature

- Approaches that are from Data flow analysis, Constraint-based analysis, and abstract interpretation
 
- Has techniques that work for C/C++ X64,X86, PowerPC, ARM64, etc

- Has approached the process from Vulnerability to Exploit entirely from a Formal Methods/Static Analysis perspective

- Has techniques that are backwards compatible

- Has techniques that revolve around theoretical frameworks 



 ",1531114152.0
QSCFE,"Is there any debug engine (like TitanEngine) but for windows, Linux and mac.  
Even if it's just dummy prototype :)",1531053586.0
QSCFE,"The post on /r/Malware say [removed] ?
",1530894894.0
igor_sk,use the question thread,1530899064.0
imguralbumbot,"^(Hi, I'm a bot for linking direct images of albums with only 1 image)

**https://i.imgur.com/JfwNhNG.jpg**

^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&subject=ignoreme&message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&subject=delet%20this&message=delet%20this%20e1ue591) ",1530813237.0
yalogin,"Correct me if I am wrong but there is nothing new here right? All of this is already in the wonderful paper ""Intel SGX explained"". 

",1530806188.0
tvetus,Nice diagrams. Does anyone know how they're made?,1530850565.0
,[As promised by the EZ-FLASH team.](https://gbatemp.net/threads/ez-flash-omega-k-1-03-fw-5-released.509450/),1530787570.0
koro666,"With a fucking .exe committed within the source (`bin2c.exe`), amateurs.",1530836479.0
__xor__,"You know, this sort of work might be of a lot of interest to /r/astrophotography for capturing deep sky objects. If you could write a script to control the length of exposure and have it take maybe 2 to 30 second exposures continuously over a few hours, that could be very useful. Usually if you use a DSLR you might have to buy something like [BackyardEOS](https://www.otelescope.com/store/category/2-backyardeos/).

I'm not sure how they do it or if there's an existing Canon API or something, but if you had the capability to write your own python script to handle it that'd be awesome.",1530754706.0
SirensToGo,"Something that makes this process ten times easier is to use HCI snoop log on Android. It dumps all the commands between the Bluetooth chip and the OS and so if there’s an app you can dump the traffic without any encryption in a bit of a more round about way.

This also exists on OS X with the Hardware IO Developer tools. They’re really horribly out of date (though not because they aren’t used, Apple has been updating them internally according to someone I spoke with at WWDC). ",1530775853.0
tvetus,Nice diagrams. Does anyone know how they're made?,1530850575.0
Darkphibre,"Once the master binary is on the wire, I can inject my modifications into it before it's rewritten? Seems you'd need to only distribute the post-obfuscated executables. ",1530724135.0
,"The dev said in one of the comments to the video:

>I used EDK II framework.
About the keyboard input, Program reads the value from 0x60 port directly because of multi-key input processing.
I measure the timer count twice(for 1sec) by using the rdtsc instruction  to make game delay more accurate.
I didn't implement the audio output.﻿

One can read in the video that it's a port of [MoarNES](https://moarnes.sourceforge.io/) (0.13.8.21 alpha).

You might also be interested in:

-- [CHIP-8 Emulator for UEFI](https://github.com/Openwide-Ingenierie/CHIP-8-UEFI)

-- [Implementing UEFI Boot to Zork](https://mjg59.dreamwidth.org/27881.html)

-- [Flappy Bird UEFI (there's also a video of a Street Fighter 2-like game demo there)](https://github.com/hymen81/UEFI-Game-FlappyBirdy)

-- [Firmware Security blog UEFI games posts](https://firmwaresecurity.com/tag/game/)",1530645137.0
playaspec,How is this RE? UEFI is an environment *made* for running other things.,1530658475.0
HenkPoley,Booting to BASIC could be cool as well 😂,1530709664.0
Zophike1,It would be interesting to see some Game RE done here or maybe perhaps and exploit :>),1531173732.0
relaxedricky,"You need to setup a DNS record for pwnthebox.net:

`user@laptop:~$ dig` [`pwnthebox.net`](https://pwnthebox.net) `+short`

`user@laptop:~$ dig` [`www.pwnthebox.net`](https://www.pwnthebox.net) `+short`

[`184.72.114.181`](https://184.72.114.181)",1530641161.0
existential-duck,Is the site down?,1530639102.0
adwait1-g,"There is a problem with the link posted. Sorry for the inconvenience.

Link: [www.pwnthebox.net](https://www.pwnthebox.net) ",1530639860.0
madushan1000,"If it's not heavily obfuscated you might probably be able to recover the code using dnspy(https://github.com/0xd4d/dnSpy).
I had great luck using this on some domain specific applications. ",1530614840.0
Kopachris,Do you have a copy of the software that you can share via dropbox?,1530586678.0
PartOfTheBotnet,"It's been [about half a year](https://www.reddit.com/r/ReverseEngineering/comments/7tthr0/recaf_a_modern_java_bytecode_editor_with/) since I last posted, to say there have been updates would be an understatement. 

----

Major rewritten components:

* User interface
    * Now with JavaFX 
        * Totally customizable via CSS, so changing the look is [easy as cake](https://col-e.github.io/Recaf/theme.html)
    * No more dozens of inner windows with MDI
    * No more _""ugly""_ swing design

* Backend
    * Loading a jar file now stores the contents as a virtual file system. This was done to allow a few features such as:
        * Non-lossy exports _(When exporting a program, non-edited classes pull the exact same bytecode as their original form)_
        * Undo/savestates _(You can save your progress after editing, continue editing, then undo anything and revert back to the last state)_
    * Better [plugin API](https://col-e.github.io/Recaf/plugins.html) / utility classes

More information can be found on the github-pages site: [Here](https://col-e.github.io/Recaf/)

Thanks for checking out the project and if you have any feedback please do leave a reply.",1530529024.0
,[deleted],1530538812.0
0x00xx,Do you consider integrating .apk files into your decompiler?,1530556361.0
my_dev_acct,"I wrote this to make it a little easier to look through smali files in vim. Android Studio + `smalidea` is still probably better in general, but I figured some people here might find this useful.

You have to rebuild ctags for it to work.

It supports classes, fields, and methods. The reason I had to do it as a C plugin instead of with the typical flags is so the `Lfoo/bar/baz/Class;` part could be included in method and field tags.",1530469671.0
TailSpinBowler,"> http://secret.re/frick#reading-memory

0xf1e3d109
I feel like the output alignment should start from 0 and just indent until 9 places in on the hex dump.",1530418203.0
sr4r4,You might get more of a response on https://www.reddit.com/r/Malware/,1530372717.0
hatemycollege,"Solved, apparently the sample was corrupted somehow before it was sent, so it wasn't unpacking properly.",1530558806.0
hatemycollege,"Hello, I'm a novice reverse engineer and I am struggling with my first malware problem. I'm trying to find out the effects of the ransomware, but no matter what I try, I cannot force the malware to execute on a VM (tried XP and Windows 7 32-bit). Basically what I've found out is that the outside layer is UPX and that it is unpacked easily. The problem comes with the inner protection layer. The program uses VirtualAlloc calls to allocate buffers in which it unloads the contents of an actual malware's executable. First several buffers are used to unload the unpacking code as well as the compressed/hidden buffer contents of the original executable. The call that should decompress this buffer is RtlDecompressBuffer that gets called with the appropriate parameters returns STATUS\_BAD\_COMPRESSION\_BUFFER (0xC0000242). According to MSDN, it is returned if the output buffer is too small. Well, I've manually changed the values of VirtualAlloc and RtlDecompressBuffer to force a larger buffer, and it still returned the same value. The buffer is freed (VirtualFree) soon after the decompressing is done. 

 If anyone has any insights or ideas on what I can do next, I'd be happy to hear them. 

 Thank you for your time. 

Download link:

[https://www.dropbox.com/s/fs7ncpaka130o41/7f82c7f0ba2ce10a7ecd530c41a8a29ce52033e5.zip?dl=0](https://www.dropbox.com/s/fs7ncpaka130o41/7f82c7f0ba2ce10a7ecd530c41a8a29ce52033e5.zip?dl=0)

PASSWORD: bulletproof2018

Automated analysis:

[https://www.virustotal.com/#/file/ff43abd81a9a9abc8c5dd067a443fc9ff0a7510aef9debc210adfae8d2f44447](https://www.virustotal.com/#/file/ff43abd81a9a9abc8c5dd067a443fc9ff0a7510aef9debc210adfae8d2f44447)

[https://www.hybrid-analysis.com/sample/ff43abd81a9a9abc8c5dd067a443fc9ff0a7510aef9debc210adfae8d2f44447](https://www.hybrid-analysis.com/sample/ff43abd81a9a9abc8c5dd067a443fc9ff0a7510aef9debc210adfae8d2f44447)

[https://www.reverse.it/sample/ff43abd81a9a9abc8c5dd067a443fc9ff0a7510aef9debc210adfae8d2f44447](https://www.reverse.it/sample/ff43abd81a9a9abc8c5dd067a443fc9ff0a7510aef9debc210adfae8d2f44447)",1530311848.0
gregdhill,"You could try my new cryptographic identification tool (https://github.com/AbertayMachineLearningGroup/CryptoKnight), though I've not tested it on Windows. I'd love to get more collaborators and testers onboard!",1538845267.0
Hooftly,Thanks for this!,1530384827.0
igor_sk,"looks very interesting, but no code as usual :(",1530366783.0
cthulusbestmate,Thanks chaps,1530795589.0
jonathansalwan,"* [Paper](http://shell-storm.org/talks/DIMVA2018-deobfuscation-salwan-bardin-potet.pdf)
* [Slides](http://shell-storm.org/talks/DIMVA2018-slide-deobfuscation-salwan-bardin-potet.pdf)
* [Scripts, results and samples](https://github.com/JonathanSalwan/Tigress_protection)

Few months of work with [Quarkslab](https://quarkslab.com/en/), [CEA-List](http://www-list.cea.fr/en/) and [Verimag](http://www-verimag.imag.fr/?lang=en).",1530292196.0
igogo-x86,Have you tried to apply this approach to commercial packers with virtualization like for example VMProtect?,1530621534.0
reph,Enable https yo.,1530338405.0
thegovernmentlies2u,"I'm trying to figure out how a vendor product is storing passwords in our database so that I can automate user creation.  ...but I can't quite figure out how it's hashing these passwords.

I created a few examples in the system to test, but I can't figure it out...  I do know that if I give two users the same password, it'll create the same DB entry, so it's not hashing or seeding with any other fields.

Password | What is in the DB
---|---|----
adildo | QW1qJuJrQwHLm/yPOZWxWg== 
1dildo | bWxT5sA7e3CUB5dx7FREJQ==
123 | X5IOQOMbfQQdcsAs8IdYmQ==
12312312312312312312312312312312 | ho+ZbE8PJc7MdaHkwoSyXZCZ/PypyOr1hRrda4r/24pm6UvU74osO4hM+lnKNCsu 

Any ideas?",1530328363.0
balodja,"(Solved)

Hi, I'm trying to reverse a binary file with experimental data, a large file with timestamps and measurements. And I'm stuck with a non-trivial behavior pattern. Here is [a chunk from the file](https://gist.github.com/balodja/e272859acc80dfd9cd0290f0d374928c) formatted in binary and hex.

You see the data have a simple pattern. It is organized in 10-byte chunks with mostly repeating contents.  Before the line ee6b92e0 the only changing bytes are 6th and 7th. They are incremented every chunk with the least significant increment bit being the high bit of 6th byte, and the other increment bits are located in the 7th byte.

What I'm trying to figure is the transition from line ee6b92d6 to ee6b92e0. The increment in 6th and 7th bytes is being overflowed, and some strange transition in bytes 1st-4th happens. Even the overflow in increment is not exact due to not changing high bit in 7th byte.

So what kind of data structure has that strange behavior? For me that looks like some sort of timestamp but to the point I couldn't figure out the exact format.",1530469360.0
dmke,"(solved)

Hi,

I'm trying to reverse engineer the proprietary Ubiquiti Unifi Inform protocol (Access Points periodically send an encrypted JSON-blob with statistics to a central controller). Capturing and decrypting the packets was easily done (the controller writes the AES key into a MongoDB collection). However, the packet's payload is not plain JSON, but compressed with some kind of back-referencing encoding scheme:

- [decoded payload](https://gist.github.com/dmke/d001965c5da658592695b339420ba0b3#file-musikbunker-decrypted-b64) (Base64 encoded)

The first few dozen bytes read

    0000: BF 35 80 7B 22 61 6E 74 65 6E 6E 61 5F 74 61 62    ?5.{""antenna_tab
    0010: 6C 65 22 3A 20 5B 7B 22 69 64 22 3A 20 34 2C 20    le"":.[{""id"":.4,.
    0020: 22 6E 61 6D 01 13 68 22 43 6F 6D 62 69 6E 65 64    ""nam..h""Combined
    0030: 22 2C 20 22 77 69 66 69 30 5F 67 61 69 6E 22 3A    "",.""wifi0_gain"":
    0040: 20 33 0D 11 00 31 15 11 34 7D 5D 2C 20 22 62 6F    .3...1..4}],.""bo

where 0x01 0x12 0x68 (offset 0x24) somehow encodes `e"":`+(sp), completing `""nam` (0x20) to `""name"": ""Combined""`, which looks like JSON. Starting from the `m` (0x22) and counting 0x13 bytes backward, we find `e"":`+(sp). So, my current guess is that 0x01 introduces a tag, and 0x68 encodes the length (4)?

I can SSH into the AP and manually retrieve a dump (`/usr/bin/mca-dump` pretty-printeds to stdout). This dump was created at around the same time when I've captured the blob above, so it should be structurally identical, but with minor differences in some counter values:

- [similar JSON data](https://gist.github.com/dmke/d001965c5da658592695b339420ba0b3#file-musikbunker-json)

Looking at the `mca-dump` binary, `ldd` shows two compression libraries:

- `libsnappy.so` (https://github.com/andikleen/snappy-c implements [this format](https://github.com/google/snappy), the controller bundles also a `snappy-java.jar`)
- `libz.so` (which might be just a dependency of `libcurl.so`)

However, [zlib.NewReader](https://golang.org/pkg/compress/zlib/#NewReader), [flate.NewReader](https://golang.org/pkg/compress/flate/#NewReader) and [snappy.Decode](https://godoc.org/github.com/golang/snappy#Decode) (I'm using Go here) all fail with ""corrupt stream"" or similar.

There's also link to `libubnt.so` which could reveal further information (UBNT = Ubiquity Networks), but this file is possibly obfuscated (`ldd` reports corrupt section header and dies, `radare2` trips over invalid block sizes).

Any idea what I should try next?

// edit: replaced expired file.io links",1530481141.0
,[deleted],1530484598.0
port53,"The only reason I bought a Pi was to run RISC OS on it.

https://www.raspberrypi.org/blog/risc-os-for-raspberry-pi/

> With such radically new hardware, they needed a new operating system. What they come up with was Risc OS, and it was operated entirely through a graphic point-and-click desktop interface with a pinboard and an icon bar. This was pretty much Windows 95, 8 years before it happened.

Poor [Arthur](https://en.wikipedia.org/wiki/History_of_RISC_OS#Arthur), the stop-gap OS that everyone forgets.",1530736215.0
CuriousExploit,"Gotta really appreciate people sharing interesting ideas, even when they seem to fail",1530288251.0
hoffmm,"This was done over a year ago by  Joe H @brkr19
https://www.fracturelabs.com/posts/2017/exploiting-ms17-010-on-windows-embedded-7-devices/",1530135286.0
,"not sure why they switched from jerry to whatshisface

but the guy doing the tutorials is ermin kreponic  ",1530074333.0
cephalopod__,"come on, how the fuck is this reverse engineering",1530108598.0
comprop,I see no tutorial...just someone’s explanation of the definition of hacking?,1530101830.0
G0vind,its actually great ,1530104603.0
palowd,Very good presentation! I have one question. Where did you find the information about being legally allowed to run DBI tools on any binary file? I am doing a project and would like to read more about the legal aspects of this. ,1538665119.0
,[Info about the original BBC Domesday project](https://www.domesday86.com/?page_id=2140).,1529882545.0
alain_proviste,"Typical paper: interesting idea, no tool available, severe limitations :

> Our BinPro prototype currently supports only code that are fully compatible with GCC or the ICC Intel compiler because the ROSE framework used by BinPro does not work reliably with code written for other C/C++ compilers. BinPro also supports only x86-64 binary code because our IDAPro scripts are implemented for x86-64 binary code only.

So: to try to reproduce the result, one has to redo all the work instead of working on improving the idea.",1530021252.0
rolfr,"Your domain is now banned as spam as per the rules on the sidebar:

""When feasible, post direct links to content. Blogs and websites that re-host or merely link to content that was originally available on another site, and remains available on its original site, are not allowed. Domains that do not produce original content of their own and only exist to re-host content will be banned on the grounds of being spam.""",1529867229.0
BrushGuyThreepwood,Need moar advertisements.,1529853714.0
mostthingsweb,"Excellent article, thanks!",1529848314.0
mrexodia,"Excellent article, thanks!

Out of curiosity, why aren’t you using Github pages to host the rendered markdown?",1529868118.0
rolfr,"This is a consequence of the fact that in analysis of machine code, [control flow analysis and data-flow analysis are the same problem](http://www.cs.rhul.ac.uk/home/kinder/papers/vmcai09.pdf).",1530119898.0
galapag0,"> Q. Why doesn't Zeratool work against my simple exploitable?
>
> A. Zeratool is held together by scotch tape and dreams. 
",1529774995.0
0x00xx,"No time atm to test your tool (because of exams coming up next week :( ), but I have a question:
Does it automatically extract a file called flag? Or is it able to spawn a shell, if there is no file called flag (so you can look for it yourself)?

Thanks for the share anyways, gonna try it out later :)",1529834459.0
TotallyNotCarson,What does unconstrained path mean in this case? Is it related to the symbolic states?,1530211720.0
,You can also read about the project [here](https://www.gofundme.com/amiga-4000-replica-with-schematics).,1529683746.0
SirensToGo,"What's your tool of choice for documenting what you find? 

I've got this terrifying organic structure where I have a folder with the over all project name and then sub folders for each components (digging deeper into more subfolders of course) and I just have a file named ""NOTES.rtf"" in every single level. It's getting to the point where I have to use search to find any of my notes which I've so helpfully named ""NOTES"". Maybe I just need some spring cleaning as this project is about eight months (off and on) deep but it's getting pretty unmanageable ",1529823025.0
faxfrag,"Hello, I have a question about using debugger tool like ollydbg/x64dbg to reverse engineer software.

How do you deal with software that try to prevent you using debugger and you have no idea what's going and what the program try to do?

How do I tackle this problem in reverse engineering?",1529853505.0
faxfrag,Is there any recommend book / course / online tutorial to fully learn reverse engineer by using debug tool like OllyDBG?,1529941168.0
equd,I liked it!,1529662431.0
pougetat,I really enjoyed it! Please do more of these 😀,1529673614.0
ThisIsLibra,"Thanks for all the positive feedback! I've decided to make a series of these, starting by the basics and gradually increasing the difficulty. Stay tuned for more posts and PM me if you have any questions!",1529754863.0
ThisIsLibra,"For all of those who replied and wanted to be kept up to date, I've published a new part of the series about the basic CPU architecture. It can be found \[here\]([https://maxkersten.nl/binary-analysis-course/introduction/basic-cpu-architecture/](https://maxkersten.nl/binary-analysis-course/introduction/basic-cpu-architecture/)) on my site or \[here \]([https://www.reddit.com/r/ReverseEngineering/comments/8uwu4h/follow\_up\_on\_the\_radare2\_stepbystep\_binary/](https://www.reddit.com/r/ReverseEngineering/comments/8uwu4h/follow_up_on_the_radare2_stepbystep_binary/))on Reddit. Additionally, I described the set-up for the required programs in detail in \[another article\]([https://maxkersten.nl/binary-analysis-course/introduction/the-set-up/](https://maxkersten.nl/binary-analysis-course/introduction/the-set-up/)).

If you've got any form of feedback, please do reply or PM me so I can improve the articles!",1530335631.0
RasberryDye,"So good, keep um coming! ",1529683848.0
Waimeh,"Definitely do more! I'm trying to dive into RE, and more step-by-step blog posts are always better!",1529733601.0
bleuge,"What a crazy idea very nice developed and implemented.

Genetic algorithms, if anyone wants to learn more and do some nice coding, search for genetic evolver in recode/corewars, lots of code already to learn and very very fun to test. 

I am coding here a MSDOS binary analyze/indexer and knows how hard is parsing executable data.",1529567404.0
gl0rf1nd3l,LLIL is the best,1529547907.0
,[removed],1529594780.0
b4d_tR1p,ty dude gj,1529486360.0
darkades94,Can this be achieved with any binary compiled with DWARF information ?,1529515378.0
TheophrastVH,"Wow this is awesome, you're the man!",1529490477.0
plusgarbage,"Big study behind this

galaxyhaxz made an exellent work. Yeah, great job man/girl ",1529495991.0
,[deleted],1529599357.0
theqlabs,Incredible work. /bow,1529503672.0
The_DashPanda,Good work. ,1529538832.0
kernbase,"If you haven't heard of ret2, keep an eye on them. New(ish) players on the block but a lot of great results. And as this blogpost shows, they're quick adopters of the latest research advances.

Of all the record/replay tech mentioned in their article, I'm partial to PANDA. Their tech report ""Repeatable Reverse Engineering For the Greater Good With PANDA"" is worth your time: https://mice.cs.columbia.edu/getTechreport.php?techreportID=1588&format=pdf&. 
",1529450438.0
miszczyk,"so, this is an alpha version of a program I've been working on. it's a hex editor which doesn't assume that the data you're editing cleanly divides into 8-bit bytes. I'm not sure if it will be of use to anyone else but if you have any suggestions, feel free to comment.",1529423152.0
de_hatron,"Thanks, now I can finally use UTF-7.",1529435080.0
Deroad,I'd like to point out that also r2 supports bit-level editing,1529576402.0
landave,"Having reported more than a dozen vulnerabilities via [Bitdefender's Bug Bounty program](https://www.bitdefender.com/site/view/bug-bounty.html) during the last two years, I wonder why someone would report such a vulnerability to ZDI. Maybe they are paying better, but other than that, it seems to me that this has only disadvantages. Reporting to ZDI will just introduce an unnecessary middleman, slowing down the disclosure process. When I reported a bug to Bitdefender, their response was always great, and they fixed it (usually) within less than 24-48 hours.

Maybe I am missing something, but I think ZDI is providing no value here. The researcher even seems to have written the full write-up himself/herself. If you have done so, why would you want ZDI to publish it in their name instead of publishing it just yourself?",1529526838.0
SirensToGo,Am I just stupid or is there no way to undo in Cutter? Like for example I accidentally wrote too big of an instruction and it overflowed into the next one. I had to pull up a new copy and recreate the instructions.,1529394337.0
VeNoMouSNZ,"FWIW, cutter isn’t new",1529442860.0
alain_proviste,Paper: https://airbus-seclab.github.io/ilo/SSTIC2018-Article-subverting_your_server_through_its_bmc_the_hpe_ilo4_case-gazet_perigaud_czarny.pdf,1529335826.0
khasaia," Any feedback would be greatly appreciated.

Twitter: [@\_qaz\_qaz](https://twitter.com/_qaz_qaz)",1529323424.0
Wildbook,"Last mention of AMMYY is missing a Y, otherwise everything looks good. Super interesting and well done write-up, so thanks for writing/sharing it!",1529339543.0
haxyman,"Nice write-up, this thing has been making the rounds lately. ",1529343563.0
9aylas,nice **shot** !   :D ,1529545551.0
RecursiveImprovement,28:6:42:12,1529272891.0
Kopachris,"Just EXIF data which is frequently stripped during photo editing anyway? Here I was hoping they were looking for different patterns in the compression that would fingerprint certain camera models... I don't know how that would work, but that's why I clicked the link.",1529249484.0
mirh,"I dunno, arguably already analyzing in-deep the latest 2-3 iphone models would cover a quite fair range of devices. 

Speaking of android instead.. IIRC quantization (not to mention, of course, metadata tagging) happens *after* you have received the RGB/YUV ""bare"" image from the camera sensor black box. 

*Which means* that you freaking have the **sources** of said process. I mean, nobody obliges OEMs to release their device tree (only the kernel is mandatory), and it's not like they cannot do some secret modification here or there.. But I can't see any less than 95% of the settings being always the same. ",1529256824.0
Zophike1,This is actually a pretty neat challenge,1529244793.0
bradn,"I knew the whole ""degrade the timerz1!!"" mitigation approach was foolish; now it's confirmed:

> JavaScript does not provide access to the rdtscp instruction, and Chrome intentionally degrades the accuracy of its high-resolution timer to dissuade timing attacks using performance.now() [1].
> However, the Web Workers feature of HTML5 makes it simple to create a separate thread that repeatedly decrements a value in a shared  memory  location  [18,  32].   This  approach yielded a high-resolution timer that provided sufficient resolution.

Thanks, now we just made timing resolution worse for no gain.  Half baked BS ""fixes""...",1529263398.0
z0r0,I'd suggest double checking your post. Looks like a plaintext markup page?,1529171609.0
thebarbershopper,"Great talk, thanks for the quick slides",1529174747.0
ntrid,This is cool. If anyone is aware of  plugin that would allow syncing symbols between databases when executable is updated please drop me a note.,1529140917.0
Sirmabus,"Interested in knowing more about the particular diffing strategy. Yea the code is there, but it's hard to get a higher level overview with out breaking it down.
So far it looks like it's all signature based. Function and block level signatures; how they relate in a hierarchy of their relationships in CFGs.
Be nice to see a whitepaper and/or a video presentation. 

",1529359961.0
playaspec,Have you thought about setting up a FAQ on the Wiki? It might be nice to have a persistent resource listing common tools and techniques. ,1529085051.0
SirensToGo,"What’s the best way for me, a regular mortal human being, to reverse a binary protocol? I’ve got to do it mostly blind since the communication is happening between two devices that I can’t control. I know it’s not encrypted because I recognize certain things like the device IPv6, the MAC, and the host name embedded in the actual payload of the protocol. My current strategy has been writing on screenshots of hexdumps with my iPad and I feel like that’s not the best way",1529109237.0
hipstergrandpa,What do you all do as a career?,1529342712.0
cpt_ruckus,"Hey team,

My goal is to reverse some SOAP requests on my Harmony hub ultimate (universal remote)..

My initial thought was to connect the hub to a hotspot and simply decrypt the traffic using wireshark... traffic is SSL encrypted. I then attempted to use a  SSLKEYLOGFILE and wireshark, unfortunately that failed also.. the ""myharmony"" app seems to run on a web interface which is why I thought of this.

I then turned to mitmproxy, configured the proxy on my android device and attempted to sniff some packets from the android app... unfortunately this failed also.

I'm at a loss, I know there must be a easy way to strip the SSL traffic, I just don't have much experience doing so.. the next thing I'm considering doing is reversing the APK (quite experience with android reversing), although this would be heaps easy if I could connect the hub to my hotspot, strip the ssl traffic and debug via wireshark...

What would you guys do ?",1529101553.0
muniategui,"Hi, i was wondering which debbuger/disasambler would you recomend? The learning step curve can be ignored. Ida pro, radare2 with cutter gui, ollydbg,immudbg... (Any other that you think that ia better than those. Which is the best one if you master it? (Preferible for windows platforms)",1529410656.0
darkades94,"Can any program compiled with DWARF information be fully RE to compilable code just like the Diablo PC version that was posted just recently?

I mean because there's this game that was hacked, and the game servers were hacked as well, and the main game binary is compiled with DWARF information on it, there are even file names of the source files and most of the RE code is almost compilable by copy - pasting into a whole new project.",1529515452.0
ihartrice,"What are some ways to deal with control flow obfuscation in binaries that messes up graph generation?

ie.

push 0x123456

add \[esp\], 2

ret 

I guess one way would be to replace the whole thing above with jmp 0x123458 and nop's, but was wondering if there are any better ways? ",1529643894.0
TechLord2,"## Return of the Hidden Number Problem ""ROHNP""- Key Extraction Side Channel in Multiple Crypto Libraries

**Abstract**  

Side channels have long been recognized as a threat to the security of cryptographic applications. Implementations can unintentionally leak secret information through many channels, such as microarchitectural state changes in processors, changes in power consumption, or electromagnetic radiation. As a result of these threats, many implementations have been hardened to defend against these attacks.  

Despite these mitigations, this work presents a novel side-channel attack against ECDSA and DSA. The attack targets a common implementation pattern that is found in many cryptographic libraries. In fact, about half of the libraries that were tested exhibited the vulnerable pattern. We implement a full proof of concept against OpenSSL and demonstrate that it is possible to extract a 256-bit ECDSA private key using a simple cache attack after observing only a few thousand signatures.  

*As far as we are aware, the target of this attack is a previously unexplored part of (EC)DSA signature generation, which explains why mitigations are lacking and the issue is so widespread.*    

Finally, we give estimates for the minimum number of signatures needed to perform the attack and suggest countermeasures to protect against this attack.  
  



**Easy To Understand Discussion of How the Attack Works:**  

https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2018/june/its-back...understanding-the-return-of-the-hidden-number-problem/  

**Technical Advisory: ""ROHNP""- Key Extraction Side Channel in Multiple Crypto Libraries:**  

https://www.nccgroup.trust/us/our-research/technical-advisory-return-of-the-hidden-number-problem/  ",1529026841.0
SirensToGo,"Apple *really* loves NSKeyedArchiver and plists. I'm like six months deep reversing a custom Apple protocol and I've just recently found out that Apple put a plist, signed with PKCS7, encoded as NSData, archived, and then placed inside another plist.

Crazy buggers.",1529041965.0
corysama,via https://news.ycombinator.com/item?id=17313235,1529000166.0
p1-o2,"Holy crud, this is the best article I've read around here in a while. I want to see if I can replicate this over the weekend. Nice flame charts!",1529033809.0
moosekk,"It's not an OBJ, it's an older Three.JS binary model format that doesn't seem to be bundled in Three.js anymore. The header ""Three.js 003"" gives it away.

I'm not aware of any tools out there that convert it to OBJ, but you could try reverse-engineering it based on OBJ->ThreeJS converter script here : https://github.com/timoxley/threejs/blob/master/utils/exporters/obj/convert_obj_three.py",1528915140.0
DeviateFish_,"I took a crack at it, but I don't have any way of checking my work.

I wasn't able to figure out how to cleanly extract the texture uvs from it, however, and I didn't want to sink much more time into it.

I posted up the wavefront .obj file [here](https://drive.google.com/file/d/1E0loppz-kP4exW6n3KRAmJ1HdXZSrkSC/view)",1528962979.0
ZFreakyIndustries,"Basically, I want the 3D model presented, however the original source doesn't have it anymore, but this 3D model search engine definitely still has the file in a cached state, but it appears to be compiled for the model viewer, which I've tried viewing through a hex editor to see if I can't find an obj pattern and simply cut and paste that section to get the file, but to no avail. Any tips or tricks I'm missing? Thanks.",1528902117.0
perror,"Quite interesting talk about the failure of the reverse-engineering community to build efficient tools to solve overly common problems encountered in everyday life (for a reverser...). Thomas is good at making this kind of talk, as usual! :-)",1528908233.0
XSSpants,"This site is flagged as malware.

I'd guess some keyword trigger or code sample...but....",1528825450.0
peterprank,"Ahh, yea, that's how I would have done it too.

wtff",1528837458.0
MonstarOfficial,I didn't understand shit but looks like you know what you're doing so let's upvote this lmao,1528824065.0
intellidumb,Timeline shows 2015?,1528883554.0
imguralbumbot,"^(Hi, I'm a bot for linking direct images of albums with only 1 image)

**https://i.imgur.com/fObXxC3.jpg**

^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&subject=ignoreme&message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&subject=delet%20this&message=delet%20this%20e0i5bwv) ",1528749500.0
khasaia,"Any feedback would be greatly appreciated.

Twitter: [@\_qaz\_qaz](https://twitter.com/_qaz_qaz)",1528724225.0
bleuge,"Very good analysis, it remembered me years ago in OCR times when some people (including me), did some cpu emulators to run checking code inside. 
I think the first one I got was a little .com file by SolarDesigner (now of OpenWall/John the Ripper fame), I talked with the guy via email from Uni, when browsers didn't exist, via PegasusMail. 

I became obsessed with the little crackme, as it was untraceable, and I didn't understand absolutely anything about it. Years ago i got the source code and wondered about the brilliance. (for reference look for hackme.com by solar designer)

As far as old cpu emulators, first ones I've seen, and also I've put a bit of work all these years and being unable to solve it, are the protection used in very old floppy disk copier software Copywrite by Quaid Software (he also coded a very nice low level debugger QuaidAnalizer, and a very nice disk explorer... and other software). Contacted the guy some years ago, but after a little answer (yes i am the Quaid that coded all that software), i lost the contact.

It uses what i think is a cpu/opcode controlled to run code. He used the same protection from Copywrite 08/84 to 01/92 (first and last versions i got). It's a code obfuscator no a key/serial check.

Going back in time, last year I was curious about Microsoft Adventure game, a pc booter. Dated 1981 and coded by Gordon Letwin, OS/2 lead architect, etc... 

I started with boot sector of course, then discovered it uses cpu/machine emulator, and became lost in the tight and convoluted code. 

Probably the Z-machine used in Infocom games, and other Interactive fiction games, used something similar. But maybe less convoluted, I don't know, but I still wonder the people who reverse engineered it entirely, and then build a compiler for it.

Great times, thanks again for the good analysis.

",1528790133.0
ragnar_graybeard87,"Vscode ftw!
Clean write up!",1528770423.0
MiniWire,"Haha ""This baguette sentence"". I like that writing style",1528706430.0
mixblast,They still had to open the machine and fiddle with the BIOS jumpers.  With physical access they could as well dump the RAM contents.,1528991835.0
playaspec,Christ! This is *STILL* a thing? It's been vulnerable since XP.,1528719832.0
H3LL0WORLD_,Great article. Please do more or these!!,1529694146.0
eftstats,Any update on this? Server down.,1539735911.0
phamtieugiao,"What exactly in Windows 10 do you want to reverse? Windows 10 is huge, there are many components in it.",1528689106.0
JShuma,"Yes, your first step is to understand the windows sub-systems and the various API's(highly detailed and available)..once you research that..then start reversing the NativeAPI(closed source).",1528664879.0
irqlnotdispatchlevel,"Yes. First, general knowledge about Windows is a must. Windows Internals is a good book that will get you started on the basics. Then, just fooling around with WinDbg and IDA will make you understand various parts of it better. Then there are people like [j00ru](http://j00ru.vexillium.org/), [Alex Ionescu](http://www.alex-ionescu.com/) and so on. Check their sites, papers and twitter accounts and you will discover more, depends on what part interests you more. 

It highly depends on what part interests you, but some general knowledge about the big picture is nice to have regardless. ",1528718489.0
h_saxon,"I love this style of write up. 

Keep it up!",1528597551.0
Teekayz,"Pretty awesome how you revisit something from such a long time ago and stuff like this was still left in the game on release!

Also, this wasn't mentioned anywhere but 'zuru' means cheat in Japanese for those wandering if it meant anything.",1528634844.0
netsec_burn,"> Memory editors can be opened by holding one of the three buttons mentioned earlier, and pressing another button twice. For example, holding L and tilting the C-Stick left twice opens the ""S(SREG)"" editor. holding L and tilting the C-Stick left again flips to the next page, and so on. The editor closes when there are no more pages or when different button combo starts (e.g., holding R and pressing Start once).

> Editors are navigated using the D-Pad to scroll up and down between items, and left and right between possible values. The editor that opens from holding R and pressing Start, ""H(HREG)"", can be used to activate a debug controller input display by navigating to item 47 and setting its value to nonzero.

Really cool. By using this code, it looks like it's possible to run anything on a factory unmodified GameCube with the right input. Kind of like how Flappy Bird was injected into Mario on the SNES.",1528634177.0
DeuceDaily,"I'm a little shocked that something like this was shipped with debug symbols.

I wonder how common that is for Nintendo or even consoles in general.",1528633427.0
boyled,It’s crazy to me that assembly was used to code entire GameCube games. Maybe it was compiled into assembly from some higher level language ,1528591953.0
snb,/r/REGames,1528660120.0
,"I'm playing around with reverse engineering some online javascript applications (Tidal, Spotify and other web players). I want to be able to hook into the internal Javascript functions that they have in the app source code, for example, the method for seeking so that I can make a shortcut for skipping forward/backwards 10 seconds. These functions are in a closure and not accessible in the global window object.

I could download and unmifiy the script and replace it locally with my modified functionality, or target the elements that trigger the events and accomplish this that way, but I would prefer to be able to interact with the functions in the chrome console directly. I would like to update an extension that I use to be able to support using these methods on a hotkey. Any pointers on how I can do this?

Screenshot of Chrome console at breakpoint: https://i.imgur.com/SCDqn8d.png

Thanks!",1528820567.0
-ninninon,I'd like to reverse engineer a VST to learn about signal processing and hopefully help me build my own VST. I have two .dat files but cannot figure out how to open them and get some readable code from them. Any advice?,1528890923.0
ps3o-k,Hi. Quick question there's an APK that I'd like to reverse engineer. The APK is extremely intrusive. Most likely makes a lot of money using (?) telemetry without the individual knowing. I was just wondering is there anyway I can break down at the application? I'm new to these sort of things I'd like to try it and I'd like to know if I'm good at it. I want to take everything bad out of the application and just leave the good things. And I'd like to give it out for free without any ads or anything invasive. Thanks. ,1528582268.0
ScrollingWaste,"A very handy Chrome extension called AllowCopy turned out to be a trojan (according to Kaspersky). It's now removed from the Chrome webstore.

Any experienced people here who can give a clue on what it did?  
Link to Chrome extension code containing a Trojan according to Kaspersky: https://pastebin.com/shX3nS2X

Some of the other files from the extension :
https://pastebin.com/NKW490N4   
https://pastebin.com/7nSbMbzf   
https://pastebin.com/JXtPkeH1   (forgot the filename so called it file2)",1528728460.0
ifuckedup213,How do I lean assembly ?,1529047570.0
Zophike1,"I don't see a write up anywhere in sight of this failed attempt: (╯°□°）╯︵ ┻━┻)

",1528549373.0
igor_sk,some explanation on how it works would be nice.,1528385016.0
flarn2006,This is the very definition of irony.,1528258424.0
Phptower,Was is it? DL link?,1528206312.0
semigroup,$40 for someone so you can take the other $960 for yourself without doing anything. I’m sure you’ll get lots of takers.,1528206829.0
gdmgd,"oh, i'm going to pocket the whole 1K myself.",1528387071.0
hellafoxey,"just had time to skim through it, seems like an excellent read, very detailed. i have a feeling this could be used as a guide of sorts to more advanced binary analysis, which is hard to find on the net.",1528196630.0
jacob16682,Remember reading this back in December. Very detailed write-up!,1528730423.0
Resquid,I loathe bitmojis but applaud your efforts!,1528179784.0
matthewnau,Hey guys! I wanted to share what I've been working on. I've been reverse engineering some of the Bitmoji API and I managed to make a little library that can help you to make Bitmojis easily! I would love feedback :\),1528164928.0
igor_sk,wrong subreddit?,1528188220.0
0xad,"On a related note: https://github.com/dyjakan/egvm

Enjoy.",1528276782.0
helmed,"good tutorial, Now I know how to unpack a binary. But I don't know anything about assembly.",1528130101.0
belligerent_poodle,"Awesome, thanks!",1528259146.0
otokkimi,Pleasant read -- thanks for sharing!,1528103029.0
netsec_burn,"Interesting, I didn't know C# could be decompiled so easily. Great share. (and thanks for the tip about dotPeek)",1528117932.0
sudofox,"I was guessing it would be a video from Miss Micah Scott, aka Scanlime! She's worked on things like that before. I heartily recommend taking a look at some of her past streams and videos :)",1528062783.0
fonve,"Would be cool if someone could work out what these hex values mean 0610010176cc72061002080031eb
I noticed that even the values are different they do the same thing.",1528049281.0
0xc0ffea,Someone tell this guy about CTRL+A,1528077761.0
TechLord2,"**Intro from the README:**  

Although this method of API obfuscation is relatively old, my friend who was wanting to increase his skills in the Windows sphere confronted me about a way a few malware families seem to resolve APIs. It's pretty simple, however he could not find any documentation with a solid programming example on the matter at the time, so I thought I'd quickly write something up regarding it. I was going to write my own loader for this example (loading the desired module via LdrLoadDll within kernel32.dll, walking the InMemoryOrderModuleList to find the desired loaded module, finding the exported function we're after within the EAT..) - however I thought this might of have been a bit overkill for such a simple concept, I want to cover writing your own PE loader in the future though as it's an interesting subject.",1528023933.0
cra0,Yeah nice right up for new people getting into writing shellcode and such using this method to hide imports.,1528078137.0
The6P4C,That was one of the most interesting and well written reverse engineering posts I've ever seen. Finding that vulnerability must have taken so long; I can't imagine the amount of trial and error that must have gone into it. Thank you!,1527982343.0
timeparser,That’s it. I’m too dumb for this subreddit.,1527997502.0
rootb3r,"Great work man!!

I'm looking for more such posts about RE'ing STB's, Baseband Processors, Wifi-chips and other important chips and extracting firmware and finding 0-days in it.

If you know any more such posts please link them here I'd really appreciate it.

Thanks again.",1528012245.0
luchoz,really good write!!!,1528039536.0
darksim905,"What does a reverse engineer and/or a sr. reverse engineer care about? Recently, I was given a task where I was given a snapshot of a box that had known malware and/or a c2 server on it & had to do some analysis. I was doing this as a favor. My experience is more as a Sysadmin/Security Analyst -- I'm not a reverse engineer by any stretch, so I prefer sticking to basic static analysis techniques.

What things should I care about to pass along to a sr. analyst or someone who is going to blackhole a domain or a server? Strings against binaries? Browser history? Source code of the binaries if possible? ",1527871422.0
AmroMustafa,"I am looking for good resources on the inner workings of the IDA pro. How does it work from the inside ? If you have any books or links tackling the subject of disassembly, please post them.",1527975219.0
Zophike1,Is their a mind map of what's going with the Windows Kernel security-research wise on the level and detail of something like [this](https://math.stackexchange.com/questions/124709/mind-maps-of-advanced-mathematics-and-various-branches-thereof) ?,1528038781.0
PinealGlandOptic,"A setup program loads bunch of DLLs. Is there are a way to replace this DLL to my, patched one? 

Redirect somehow. when I put my patched DLL to c:\\windows..., it has no effect. 

What can I do?",1528123498.0
Zophike1,Is their an implementation of SemFuzz anywhere in sight ?,1528237793.0
kissonchen,**amazing & unbelievable library!**,1527823599.0
waruqi,Great! ,1527823769.0
ForgedBanana,Suitable content for /r/iamverysmart and /r/gatekeeping,1527778945.0
aris_ada,">0045 Have you ever patched binary code?

>0046 ... While the program was running?

Looks like some things never change in 30 years :)",1527778984.0
retroEXX,Props to Valve for fixing the problem in 12 hours. Unlike some companies who let exploits and vulnerabilities remain in their code for years after being reported.,1527792638.0
rockstar504,"I don't know what the Wacom Pen is, but it looks like you're using the beastly Analog Discovery from AD, how does it suit your needs? Compared to a more traditional DSO? Thoughts? Opinions? Thanks.",1527740844.0
nlh101,"Wow! Impressive. Good job, if the author is here.",1527696753.0
Psifertex,"Nice research! I've actually been debating using Lambda for some upcoming projects, nice to know a bit more about the internals. 

Curious why you thought Binary Ninja would irritate some people? ",1527793711.0
Ryancor,"This is cool, this is almost like using windows api GetTickCount() or BeingDebugged() functions for anti-debugging",1527653554.0
manuscelerdei,"Other drawback to their self-modifying code approach: breaks code signing on any implementation that enforces runtime integrity of text pages (e.g. iOS).

If you're really worried about this, you're probably most interested in JITing some code into an anonymous executable mapping. But if the attacker figures up what you're up to in that case he can trap the write to the JIT region and replace it with a bunch of no-ops. ",1527671749.0
kracksundkatzen,"If I remember correctly a popular reverse engineering tool's anti-debug implementation makes use of STOS instructions and syscalls, too.",1527722209.0
Gbps,"Unfortunately, strace can detect and locate all of these calls pretty easily",1527728625.0
oleavr,"This can be bypassed using [Frida](https://frida.re/)'s [Stalker](https://frida.re/docs/javascript-api/#stalker), similar to [this](https://github.com/frida/frida-presentations/blob/master/R2Con2017/02-transforms/04-aes.js) example. That would also work if the anti-debug code was JITed. The attacker always has the upper hand as their early instrumentation gets the opportunity to run before the application's own code.",1527770917.0
Zophike1,"So for each technique described it seems like they give each inherit advantages and disadvantages based on the give scenario, is their a tools that implements all given methods described in the paper in application towards Vulnerability Research?",1528042229.0
CookiePLMonster,"This is a pretty comprehensive write-up I made about fixing a startup crash in The Godfather: The Game. I reverse engineered my way to the cause of the crash, as well as ""forward engineered"" a fix in form of a code injection to the game's process.

A handful of people who had a chance to read the article all said it's a pretty good read, so hopefully it is useful as far as RE knowledge goes!",1527594920.0
steamruler,Damn cool.,1528460736.0
TechLord2,"**Github Sources** : [A fully implemented kernel exploit for the PS4 on 5.05FW](https://github.com/Cryptogenic/PS4-5.05-Kernel-Exploit)  

**Summary:**  

In this project you will find a full implementation of the second ""bpf"" kernel exploit for the PlayStation 4 on 5.05. It will allow you to run arbitrary code as kernel, to allow jailbreaking and kernel-level modifications to the system. This exploit also contains autolaunching code for Mira and Vortex's HEN payload. Subsequent loads will launch the usual payload launcher.  

This bug was discovered by qwertyoruiopz, and can be found hosted on his website . The GitHub Pages site automatically generated from this repository should also work.  

",1527583162.0
hak8or,"This is great, hopefully the guy gets to talk at Defcon or CCC or whatever.",1527619144.0
mixblast,"> two easy steps

Yeah, easy... lol",1527694675.0
TailSpinBowler,"What is JOP?

Also: ""220 GPUs pulling ~30kWh"" < kW not kWh 
/pendantic",1527587343.0
pravic,"That `osquery` it's an analogue of WMI, right? SQL-like language to query various system information.",1527600157.0
wenz3l,"Hi !

I didn't expected that someone would put a link here on reddit, as it's not quite ready yet.

But I'm the dev, ask me anything !",1527538291.0
rolfr,"I had high hopes for this paper. Sadly, it was trivial. I'm surprised any conference would accept a paper that bereft of novelty in 2017. TL;DR: to find bugs in different x86=\>IR translators, use equivalence checking on the output \(after having normalized the individual IRs used by the translators into a common format\).",1527479211.0
Zophike1,"> Binary lifting, which is to translate a binary executable
to a high-level intermediate representation, is a primary
step in binary analysis. Despite its importance, there are only few
existing approaches to testing the correctness of binary lifters.
Furthermore, the existing approaches suffer from low test coverage,
because they largely depend on random test case generation.
In this paper, we present the design and implementation of
the first systematic approach to testing binary lifters. We have
evaluated the proposed system on 3 state-of-the-art binary lifters,
and found 24 previously unknown semantic bugs. Our result
demonstrates that writing a precise binary lifter is extremely
difficult even for those heavily tested projects.

So can someone give me an ELU(Explain like a Undergrad) on the Theoretical tools used to show the correctness of a Binary lifter ?

> Furthermore, the existing approaches suffer from low test coverage,because they largely depend on random test case generation

Can you give an example of an existing approach and how it failed due to random test case generation ?",1527460047.0
ConservativeShia,Shame it doesnt seem to cover  the new BinaryNinja stuff.,1527463605.0
corysama,HN discussion https://news.ycombinator.com/item?id=17164700,1527430443.0
Sn34kyMofo,"This is just a simple little tutorial I figured I would share for beginners interested in learning how easy No-CD patches *can* be (not always, but quite often as per my personal experience). I touch on topics like:

- x86 Assembly
- Function Prologue/Epilogue
- Default Base Address of Binaries, and ASLR
- UAC Keyword Flagging of File Names

And more. Hopefully a beginner will have a lot to take away from this. Relevant links are in the description section of the video.",1527357481.0
retroEXX,That was actually very interesting to watch \(and useful\).,1527373947.0
,[deleted],1527374497.0
Trks,"Loved your video. Audio was good, explanations were concise and well-thought-out. Cheers!",1527375841.0
MarthaPhucker,"Fantastic, loved it. Subscribed :) ",1527393682.0
ragupal,Omg baldman started making tutorial of how he cracked Games ,1527397348.0
Pendax,Thank you for the effort you put in. Great tutorial.,1527402980.0
Creath,"Please do more of these! You literally answered every single question I had while watching. Loved the references to external resources, and your pacing was spot on. Seriously - this is gold.

Learned way more than I thought I was going to in a 9 minute video.",1527633688.0
Kopachris,"Awesome tutorial, thanks!",1527359277.0
gamblers_choice,"Really good turorial, thank you very much.

I only have one problem: I tried this on NFS Underground 2 and I can't find the strings of the error messages. There are only some weird string I have found. Even the whole alphabet is in there (WTF EA).

And if I continue the code, another error message appears: ""A debugger was detected. Please close the debugger""

Thanks in advance",1538422165.0
Jinrou7,Does anyone have this video saved or mirrored? Youtube nuked the channel :(,1541894812.0
soullessredhead,"Thanks for this. I'm trying to learn radare2 as an alternative to Ida, and it's pretty intimidating.

On a side note, I think I have more lists starred on GitHub than actual code repos. ",1527291450.0
spitfire55,Radare2 is proving more and more attractive everyday. Thanks for this!,1527302015.0
RockDiesel,"Posted this question a few weeks back, but no replies, so posting it again.

How is [Hopper](https://www.hopperapp.com/) these days? Anyone using it regularly? 

Thinking of picking up a license, but just looking for some opinions before I purchase.",1527272003.0
FallenArch3809,"Just to show you how far along I am: I'm just getting started with a few super basic crackmes and already getting lost. So I'm a total beginner here.

For windows .exes, what free tools should I use?  Everything I've read says Olly and Radare2 are the best free ones. But Olly seems extremely outdated, and I haven't found much on Radare.

Thank you.  
",1527300040.0
mexcatolico,"Hey folks,

As a beginner I found this thread very useful:  
[https://www.reddit.com/r/ReverseEngineering/comments/hg0fx/a\_modest\_proposal\_absolutely\_no\_babies\_involved/](https://www.reddit.com/r/ReverseEngineering/comments/hg0fx/a_modest_proposal_absolutely_no_babies_involved/)  


However, as I start to learn asm I have yet to find a tutorial that goes into depth on everything about learning the language. Most books and tutorials skip on the explanation on the function prologue and the stack/heap management while the code is being initialized. Does anyone know of a good book or tutorial that would explain \(graphically would be better\) all the details on a simple hello world program?   


Basically I want something that explains why the code starts in that particular region of memory, why sometimes you subtract 0 from a register at the beginning, why do you subtract bytes from the stack register instead of adding them to ""grow"" the memory region, etc?  


Thanks!",1527606407.0
LLTV,"I've done decompiler of everything.
I was able to decompile Core Impact 2017, Maya 2018 but I want something even more difficult.

What are the steps to doing RE in a windows type system?
I start where?
I want something more challenging.

Thank you",1527310271.0
tecknicaltom,"I noticed during quals decompiling mydb.so from the php extension challenge that ida properly demangled an exported c++ function, along with the parameter types. However, the hexrays function fell back to the generic DWORD parameters. Does hexrays really ignore the demangled function parameter types or am i missing a setting or a must-have plugin? (Ida pro 6.95)",1527313671.0
xCyb0rg,Can anyone reading this start a RE club where we work on projects together and then teach people who want to learn. ,1527599007.0
PM_ME_STOLEN_NUTELLA,"I've just gotten started with IDA/x64dbg and I'm looking for information about good practices and conventions for organization, label naming, etc. Are there any good resources for this?

Thanks",1527628929.0
ifuckedup213,is there a number of the vulnerabilities per year ?,1527435311.0
,[removed],1527441883.0
dem0n,Can you not spam this in a bunch of unrelated subs?,1527198363.0
igor_sk,"pretty nice, but: 

1. no RE (at least I didn't see any)

2. You really need a proofreader/copyeditor
",1527177859.0
archimedes_ghost,"It's a bit hard to find out what this actually is, even looking at their 'About' page.",1527170618.0
joxeankoret,PDF slides by Fabian Yamaguchi found in this tweet by him: https://twitter.com/fabsx00/status/999354852823183360,1527152822.0
,"Pictures don't show up for me, neither in FF nor in Chrome.",1527115723.0
iWonHitWonder,Cool write up and nice job solving it!,1527131249.0
archimedes_ghost,"Clear write up.

The quote output at the end is bit interesting...? Is there something else to find?

EDIT: Disregard, I just read the official blog post.",1527135785.0
Comprachicos,Wtf why are the image urls 167490 characters long,1527162066.0
Hellcleaver,"GW, but not obfuscated python script??? WTF is this, pre-school? :D",1527262663.0
,[deleted],1527106673.0
Sirmabus,"Look all over the board for test pins/holes.
Could have a JTAG and/or some type of other serial port.
",1527726073.0
Sn34kyMofo,"Copying over details to avoid you having to click-through:

> Hey, everyone! Some of you may recognize me (aka [DSASMBLR](http://dsasmblr.com/how-to-crack-and-patch-applications-with-cheat-engine/) / [Stephen Chapman](http://youtube.com/seowhistleblower)) from around the RE community. Anyway, I've decided to start focusing on doing live-streams on Twitch in place of YouTube videos.

> For my first live-stream, we'll be creating a flycam hack from scratch in one of my favorite old-school FPS games, [Painkiller: Black Edition](https://store.steampowered.com/app/39530/Painkiller_Black_Edition/).

> I expect this stream to be somewhere between 3-5 hours in length between the content I have planned, interacting with chat, etc. I've already done an initial run-through of creating this hack, so that will allow me to minimize most of the guesswork that goes into initially hacking a game; however, I'll be relaying the most minute details I can for valued takeaways.

> The tool I'll be using is [Cheat Engine](http://cheatengine.org) (aka CE). I'll be utilizing memory scanning, memory reads/writes, reading through instructions within relevant subroutines (x86 Assembly, since this is a 32-bit game), creating various scripts (both Assembly and Lua--the latter of which being what our main flycam script is created in), and much more (like CE tips/tricks, etc.).

> Ultimately, I'd say this is geared more towards the **intermediate to advanced** crowd (though all are welcomed, of course) who maybe haven't created a flycam hack before. Naturally, there are many ways to create such a thing, but there should be a lot of ancillary takeaways with my approach.

> Whether you show up to learn, answer others' questions, or provide additional tips/tricks, you're welcomed!

> This first stream is the start of a bi-weekly live-streaming schedule, so I hope to make this a regular value-add component in the game-hacking community. I'm looking forward to doing this and likewise hope those who attend will all have a great time as well!

> **Link to Twitch**: [https://www.twitch.tv/sn34kymofo](https://www.twitch.tv/sn34kymofo)",1527104888.0
PM_ME_ANIME_TITTIES_,Will the vod be available on youtube/twitch?,1527116686.0
timee_bot,"View in your timezone:  
[Saturday, 5/26 at 6 PM EDT][0]  
[0]: https://timee.io/20180526T2200?tl=%22How%20to%20Reverse%20Engineer%20Video%20Game%20Cameras%22%20-%20Live-stream%20on%20Saturday%2C%205%2F26%20at%206%20PM%20EST.%20(x-post%20%2Fr%2FREGames)


*****

^^Assumed ^^EDT ^^instead ^^of ^^EST. [^^undo*](/message/compose?to=timee_bot&subject=reprocess_ntz+request&message=%21reprocess_ntz+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkemduNGZiIiwiYWN0IjoicmVwcm9jZXNzIiwib3AiOiJTbjM0a3lNb2ZvIiwicG5tIjoidDNfOGxtYmdyIiwiaWF0IjoxNTI3MTA0ODI5fQ.ISWGw2GJAcbmdfGg0fNmDJQn_8WexmoLQacyWlUPbTU)

[^^delete*](/message/compose?to=timee_bot&subject=delete+request&message=%21delete+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkemduNGZiIiwiYWN0IjoiZGVsZXRlIiwib3AiOiJTbjM0a3lNb2ZvIiwiaWF0IjoxNTI3MTA0ODI5fQ.BeZHPLG5iKoQ7NFDULPCOApIfDQlieK0Qfcxgt2BOA8)
^^|
[^^reprocess*](/message/compose?to=timee_bot&subject=reprocess+request&message=%21reprocess+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkemduNGZiIiwiYWN0IjoicmVwcm9jZXNzIiwib3AiOiJTbjM0a3lNb2ZvIiwicG5tIjoidDNfOGxtYmdyIiwiaWF0IjoxNTI3MTA0ODI5fQ.ISWGw2GJAcbmdfGg0fNmDJQn_8WexmoLQacyWlUPbTU)
^^|
[^^ignore ^^me](/message/compose?to=timee_bot&subject=ignore+request&message=%21ignore+me)
^^|
[^^help](https://www.reddit.com/r/timee_bot/wiki/index)

^^*OP ^^only",1527104829.0
henke37,And here I was hoping for actually understanding the logic behind camera placement. Not another cam hack.,1527159735.0
kankertje,"If anyone is wondering, the code snippets shown are from Corebot malware.",1527085233.0
scubascratch," Nice detailed explanation of this classic noise make chip.

The Atari game “Asteroids” used a collection of 555 timers for most of the games sound effects.",1527038004.0
rolfr,"This contains links to all of the write\-ups for that challenge, along with the creator's ranking for the submissions. 

I'm happy to see things like this in the reverse engineering scene, in which I have something of an interest given my moderation of the RE reddit and my publications in the field. Things like this bring the community together, and leave behind valuable tutorials for especially the beginners in the scene, but perhaps even more experienced people can pick up a trick or two. More please!",1527014143.0
Hackers-are-bad,"This challenge was great!

The author also co-authored one called White Rabbit (I think, it was a while ago), worth checking it out if you enjoyed this one.

Look forward to more challenges like this.",1527349229.0
FUZxxl,The German Chaos Computer Club uses these things for their live streams.  Having a constantly waving cat visible on camera is a surprisingly effective way to detect if the stream is hanging when little else is moving on screen.,1527025885.0
corysama,Via https://news.ycombinator.com/item?id=17125511,1527010227.0
,"That was fun, nice read",1527035355.0
Syonyk,"Nothing terribly exotic, but some nice work digging out blobs from the registry for the new Windows OpenSSH implementation. ",1526913092.0
lolsrsly00,Write-ups like these make me feel insecure.....,1526931431.0
SlayerInRed,"Say what you want about developers of such malwares, but you got to give it to them for using every trick in the book to hide them.",1526926561.0
RCEdude,"All those tricks just to hide from AV..

Meanwhile, a malware analyst can just dump the last binary with accurate breakpoints for process hollowing.",1527850221.0
mrexodia,What are advantages over radare2?,1526877436.0
AND_MY_HAX,"Comment from the article:

> Instead of a NOP, it could be an IMUL (0x69) instead, which would accept five bytes without crashing, but not transfer control. That would be even funnier.

Pretty smart. You could set up the asm such that the written jmp is effectively nop'd, but program execution continues completely as normal.",1526945189.0
xXxXx_69sw4g20_xXxXx,"This is a well written article, but it kind of blows my mind that this is state of the art. Why should this process require so much manual reversing? I want to just give a program some C code or even a binary, and for it to use symbolic execution as a fuzzing aid.

Pretty much, how I see it, if there was a version of AFL that could simply work around the ""myvar == 0xdeadbeef"" bottleneck, that would be a crazy powerful tool. Is interpreting and running an SMT on a simple CMP/JMP sequence that hard?",1526843956.0
Arrilius,That was a really good read. Thank you for sharing.,1526832991.0
reini_urban,"Using CBMC is much easier than Klee. It works directly on the C code, no need to convert anything to python. Also with Z3, but you can also use --boolector, --mathsat, --cvc4 or --yices. Default is minisat, which works best here.

E.g. for the velvet.c add:

    #ifdef CBMC
    # define exit(n)  __CPROVER_assert(0, ""fail"");
    #endif

...

    #ifdef CBMC
      for (int i=0; i<27; i++) {
        buf[i] = nondet_uchar();
        __CPROVER_assume(buf[i] >= 26 && buf[i] <= 125);
        __CPROVER_input(i, buf[i]);
      }
    #elif defined KLEE
      klee_make_symbolic(buf, sizeof(buf), ""buf"");
    #else

...

    #ifdef CBMC
      __CPROVER_assert(1, ""found"");
    #elif defined KLEE
      klee_assert(0);
...

$ cbmc -DCBMC velvet.c --cover assertion

=>

    Runtime decision procedure: 0.872s
    ** 38 of 38 covered (100.0%)
    ** Used 34 iterations
    Test suite:
    ='W', ='h', ='a', ='t', ='_', ='Y', ='o', ='u', ='_', ='W', ='a', ='n', ='n', ='a', ='_', ='B', ='e', ='?', =':', =')', ='_', ='l', ='c', ='_', ='l', ='a', ='|'
    ='W', ='h', ='a', ='t', ='_', ='Y', ='o', ='u', ='_', ='W', ='a', ='n', ='n', ='a', ='_', ='B', ='m', ='?', =':', =')', ='_', ='l', ='c', ='_', ='l', ='a', ='|'
    ='W', ='h', ='a', ='t', ='W', ='Y', ='o', ='u', ='_', ='W', ='a', ='n', ='n', ='a', ='_', ='B', ='m', ='?', =':', =')', ='_', ='l', ='c', ='_', ='l', ='a', ='|'
    
...
",1526840590.0
mherick,Now thats freaking cool,1526829226.0
phamtieugiao,nice ,1526965931.0
khasaia,Any feedback would be greatly appreciated. https://twitter.com/_qaz_qaz,1526714006.0
MidnightOw1,Good job. Sad that so much bruteforcing was required.,1526767496.0
Samwise42,This is late-- what do you plan to do with this? Could it be used for 3D mapping?,1528328047.0
w4yai,Have you posted any write-up somewhere we can read ? I'd love to see how it is made,1526724082.0
LiverReich,Nice work dude,1526711803.0
joshgarde,"Not trying to take away from the work done, but wouldn't it have been faster to just rip the assets then develop something in an engine like Unity?",1526708024.0
ArrayCreator,"I have a couple of questions :

* Is there a thing like ""\(Per file/ malware\) reverse engineer freelancing"" ? or something along the lines \- I would love utilize my free time and both get experience and some finances out of it
* Assuming i already have some knowledge in the field, what are some ways that i can show my abilities ? Ive heard that a  tech blog is an option ? ",1526659178.0
SoAppropriate,"Talking with a FBI colleague about malware source identification. He says that a majority of the malware RE is done by the government as opposed to private sector and that the private sector has little->no interest in it. 

As an appsec & network redteamer looking to expand his horizons (and generally warned about how much a waste of time forensics and RE is/can be), does this opinion/anecdote hold true with anyone else? Is there money to be made in the RE/forensics field?",1526662512.0
foomly,"Why are RE courses always based on Windows (as far as I know, please correct me if I'm wrong) instead of any unix OS. Genuinely curious about this, it's the reason I decided to learn by myself instead of taking a course.",1526659293.0
soullessredhead,"I know IDA Pro is pretty much the gold standard when it comes to disassemblers, but are there any others that will work ok, especially for someone who is just starting to learn? Bonus points for open source and Linux compatible.",1526662158.0
Freefall01,"How would you develop an aimbot/wallhack for an android game?(lets  set aside the moral problems now)

On windows you have pretty awesome debuggers/tools at your disposal (x64dbg,CE) but on android all of this is much more limited...

are there any good sources of info/writeups on this subject?
",1526812260.0
dookie1481,"Might be a better question for /r/AskNetsec, but how much RE/binary exploitation is done by the ""elite"" (sorry) consulting firms?",1526676275.0
smartman294,So I about to start doing a lot of malware analysis and I have the Practical Malware Analysis book and The Art Of Memory Forensics. Are there any other good books out there for reference?,1527086024.0
xCyb0rg,I have a question guys I'm thinking of buying ida pro named license but I see the decompiler is a while nother price. Do I need this decompiler or can I just use something open source to save money?,1526845461.0
BubbleBassOrder,"What are the advantages of IP relative addressing in 64 bit binaries?
Is it just me or it actually gets a little bit harder to follow? ",1526880063.0
montouesto,"I have a question about system integrity level. I know why malwares need high integrity level (administrators privileges) but still don't know why they want to get system privileges.

I saw one malware uses privilege escalation exploit but it looks need this privilege because it spread with browser exploit and need to escalate privileges.

But some malwares use TrustedInstaller's token even they have administrator's privilege already with UAC bypass vulnerability.

So my question is what makes them to want to get system privilege, not just administrator's.

I think they can do whatever they want with administrators privileges.

Thaknk you.",1526989133.0
e80000000058,To note: I believe the author updated this to be consistent with IDA 7.0+. It's a good intro to IDA's Python API.,1526575147.0
herrcore,I constantly use this as a library to look up example code for different scripts... just so helpful! Glad Alex released an update for 7... now all he needs to do is add a chapter on the hex\-rays API : \),1526823502.0
nishan8583,Thanks man,1526516542.0
thefuture,Is there a tool download?,1526525924.0
usualsuspect,"I hope it's fine that I'm posting my own material but I think it may be useful to others.

Personally at least I've seen lots of blog posts that stop at renaming struct members so I thought I'd write how I deal with that problem when reversing.",1526442195.0
sam_binder_of_demons,"Does anyone know if/when/where the Recon brussels talks have been posted online, specifically the videos?",1526490717.0
ClickableLinkBot,"##r/REGames
---------------------------------------------
^(For mobile and non-RES users) ^| 
[^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| 
^(-1 to Remove) ^| 
[^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/853qg2/ignore_list/)",1526339679.0
thenightwolf51,Interesting read ,1526343825.0
Thaxll,"Why not use the free version of IDA 7.0?
https://www.hex-rays.com/products/ida/support/download_freeware.shtml",1526569938.0
safiire,Binary Ninja seems like trash.  Am I wrong here?,1526383811.0
youareadildomadam,Only works on non-VM machines thankfully.,1526262602.0
mmd0xFF,"Hmm, the concept of CVE-2018-8897 itself can be applied in wide-ranged to trigger several payload methods, I think this sample case (good work btw!) is only one of several possibilities. If I may say, the concept of MOV SS hence CVE-2018-8897 (RE screenshot: https://i.imgur.com/T5V3iMJ.png ) itself is a new code exec vector that makes any kind of payload execution possible, as long as the stack's IST isn't exist in that OS, the one that we really must concern the most.",1526375699.0
Statically,No I'm not,1526169528.0
TechLord2,"**Access the Github Sources here :**  
  
[**Multiverse** : A static binary rewriter that does not use heuristics](https://github.com/utds3lab/multiverse)  

# Multiverse

*Multiverse* is a static binary rewriter with an emphasis on simplicity and correctness.  It does not rely on heuristics to perform its rewriting, and it attempts to make as few assumptions as possible to produce a rewritten binary.  Details about Multiverse can be found in the paper ""Superset Disassembly: Statically Rewriting x86 Binaries Without Heuristics.""

Multiverse currently supports 32-bit and 64-bit x86 binaries.

## Requirements

Multiverse requires the following Python libraries:
* capstone (linear disassembler) (we use a slightly modified version that is needed to rewrite 64-bit binaries.  Our modified version can be found [here](https://github.com/baumane/capstone))  

* pwntools (for its assembler bindings)  

* pyelftools (for reading elf binaries)  

* elfmanip (for modifying elf binaries) (can be found [here](https://github.com/schieb/ELFManip))  

",1526125103.0
toodamnparanoid,"Automating this would be awesome. So many times have I done this by hand only to have a page full of hex addresses and potential machine-code candidates for replacement, only to start confusing which one was I going to NOP or modify to a mov eax, 1.... shit.",1526145288.0
zid,Looks like applying basic dynarec methods from the emulation realm.,1526181794.0
,"[Video announcement](https://youtube.com/watch?v=6fVacXNkx7E)

Forum thread: http://www.lemon64.com/forum/viewtopic.php?t=67978",1526112760.0
0x660D,This article does not focus on reverse engineering.,1526065462.0
Sn34kyMofo,"The author clearly states on [the working version of the page](https://puri.sm/posts/intel-fsp-reverse-engineering-finding-the-real-entry-point/) why:

> **2018-04-23 update**: after receiving a courtesy request from Intel’s Director of Software Infrastructure, we have decided to remove this post’s technical contents while we investigate our options.",1526056117.0
sirusdv,Streisand effect incoming https://web.archive.org/web/20180403000121/https://puri.sm/posts/intel-fsp-reverse-engineering-finding-the-real-entry-point/,1526063793.0
Valmar33,"https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/1024192-purism-s-fsp-reverse-engineering-effort-might-be-stalled?p=1024261#post1024261

> Intel might even not threaten to sue, only said to them: publish this and forget about future hardware shipments from us.",1526086183.0
AoeAoe,"Legality is subject to laws and courts, mere threatening of lawsuit by Intel and likes is an equivalent of a gun next to your temple. 

If they can't scare you into compliance, they sue you for real and you spend next few years in a court draining your money on lawyers regardless of whether you win or not.

It's typically not in your best interest to piss off corporation with.unlimited resources and global reach.",1526071464.0
alexandernst,"Because it's in the best interest of Intel to keep whatever is hidden in there, well... hidden. 

Next question.",1526055961.0
Weird_Tolkienish_Fig,Obviously the illuminati hid the page,1526118979.0
,[deleted],1526056026.0
desertfox12311,"how does one approach browser exploitation nowadays?

it looks like there are a number of papers nowadays which explain browser vulns today but they're all missing information or hard-to-compile to impossible

how does one do that if they wish?",1526484353.0
BubbleBassOrder,What ELF section contains function names that are removed by **strip**?,1526271706.0
Ravitejasd,"Hi This is Raviteja I am a SOC analyst now i am pursuing Reverse engineering on my own, can any one suggest me where to start please!!!",1526365325.0
poetryrocksalot,"I want to learn how to reverse engineer an Android smartphone's physical keyboard and to re-purpose it as a Bluetooth keyboard. Is this a possible task? What can I do to one day be able to do this? What resources and materials can I read? What concepts should I learn. What kind of degrees should I work towards to do this? 

Any advice towards this task is appreciated.",1526189342.0
AND_MY_HAX,"Never thought I'd see Zelix KlassMaster pop up here. Years ago, I did some RE to figure out that ZKM is what my professor used to obfuscate the Java IDE he'd created, [jGrasp](http://www.jgrasp.org/). I wanted to poke around and see how it worked, but couldn't even get anything intelligible out of it by running `strings`. Turns out he'd used ZKM's string obfuscation.

I ended up creating a tool (with horrid UX) to undo the string obfuscation and give you an interface to search and replace arbitrary strings within the Java classes, [exXOR](https://github.com/jfktrey/exXOR).",1525991713.0
travolter,"Seems like very basic, not very good Control flow obfuscation? ",1526032970.0
Prav123,Also see the Tutorial for [**Second Part of the Part 2**](https://scriptdotsh.com/index.php/2018/05/09/ground-zero-part-2-2-reverse-engineering-xor-encryption-windows-x64/),1525935225.0
Zophike1,This very great resource do you recommend any books on Cryptography with a focus on theory and implementation for those with no background in the area ?,1525957157.0
yolotroll,"This looks extremely useful. Does anyone here know about similar plugins for other tools like gdb, r2 etc?",1525898584.0
baordog,"Wow, only the second assembly language game ever. I hope it’s as good as tis-100, and not some kind of hold your hand stuff. ",1525763029.0
lduffey,Linux support? ,1525782913.0
HumanSuitcase,"neat!
",1525780443.0
Mahakali923,I need this in my life,1525789659.0
Zeno84,"This is awesome. I love TIS 100 and Shenzhen. 

Can’t wait.",1525811731.0
june5079,thx man    ,1525777432.0
kiwidog,"The unreal engine has a ton of type information associated with the classes for a numerious number if reasons (editor, blueprints etc) and this information you can pull out of the game executable because they follow a specific structure or use rtti. You automate this to generate the classes. You can't do this with all classes, but for any game object you can.",1525712462.0
edward_snowedin,"there are tools of the trade, ReClass and kn4ckers sdk generator.

but before you can use those, you need to find an anticheat bypass for battleye and EAC, which is why the authors of these types of cheats can charge 250$ a month

also, epic games is known to sue pretty much everyone, so make sure this is what you wanna do

since you posted this in r/learnprogramming, while i appreciate shooting for the moon, if you start now and really go at it, you could have a pretty good grasp on things in about 2-3 years",1525725473.0
j1939,the best hooking framework!,1525762039.0
passauhallo,"can someone name some more malware analysis youtube channels, preferably more advanced one?",1525628812.0
TailSpinBowler,*An oligomorphic engine is generally used by a computer virus to generate a decryptor for itself in a way comparable to a simple polymorphic engine. It does this by randomly selecting each piece of the decryptor from several predefined alternatives.* - yay wikipedia.,1525680268.0
,!remindme 4 hours,1525682148.0
,[deleted],1525623284.0
krangs,Cool talk :),1525547230.0
jusu,Nice to see you on Reddit. Cool stuff. ,1525600846.0
TotallyNotCarson,Anyone have the Linux kernel exploitation slides from infiltrate?,1526071607.0
TotallyNotCarson,"Hey yall, I'm trying out radare2, can someone tell me what aav.<addr> represents? Im assuming its trying to resolve some sort of function pointer. The function i see it in is signal, which takes a void *. Not quite sure how to print out what is at aav.<addr> as trying to print a function at the addrress just returns an error. Sorry if this is a basic question but ive googled a bit and found nothing helpful. Thanks",1525481862.0
BubbleBassOrder,What is the ELF symbol table?,1525597755.0
reversebynature,"So just out of curiosity, how difficult is it to build something like HexRay's IDA Pro with the associated decompiler? I just find it really annoying that there is no open source solution that can compete. I've tried Radare2 (probably just haven't used it enough to really get to know it) but I find it kind of clunky/disorganized. I've been working on an ARM decompiler so I know a little bit about where to start and I'm aware of the philosophical/theoretical problems with native decompilation (AFAIA HexRays ""decompiled"" C code doesn't actually compile). It just seems to me that this community is big enough that someone should have already written an open source solution. I hear plenty of bitching about the price tag and the licensing terms but are the people at HexRays so gifted that no one else can match their work?

Obviously my guess is that it would probably require years and years of toiling to do something like this and after that, I'd probably have a hard time standing on principle and giving it away for free. IDA Pro looks fucking awesome judging by the free version but what makes it so great that people are willing to shell out $3k+ not even counting the add ons for a pro license? Plus I'm sure it costs money to upgrade/update the license etc.",1525867077.0
BubbleBassOrder,is SIGSEGV the same as SIGFAULT?,1525682780.0
idkpeople123,"I'm using sasm to do some basic assembly using nasm and default settings. But in the cmain function when I try to use push ebp and debug it it places mov ebp, esp at the top.

    section .text
    global CMAIN
    CMAIN:
        mov ebp, esp; for correct debugging
        push ebp
        mov ebp, esp; for correct debugging
        ;write your code here
        xor eax, eax
        ret

What the reason for this? how do I stop it if I want push ebp there.",1525708132.0
4ud1b31,"Has anyone done any work on InDesign or the indd file format? It's really the only thing tying me to Adobe at this point. I downloaded IDA and I'm looking through the object file, but I'm inexperienced and could use some pointers. Should I be looking primarily at the indd files themselves or at the application binary? Or absolutely both?  I've had a hard time finding anything about it online except for everyone complaining they can't open the filetype in anything but InDesign.",1525729006.0
Superb-username,"Hey all, I want to learn Reverse engineering from scratch.

  


I have basic-intermediate knowledge of C & Python

Can someone please guide me to some good resources to learn and some CTF kind of challenges to practice.

Cheers",1526015122.0
desertfox12311,"how does one approach browser exploitation nowadays?

it looks like there are a number of papers nowadays which explain browser vulns today but they're all missing information or hard-to-compile to impossible 

how does one do that if they wish?",1526472112.0
Zophike1,Is their a Slack channel for topics in Re mainly things like obfuscation and exploit analysis ?,1525957237.0
occamsrzor,"document.getElementsByTagName(“video”)[0].playbackRate = 3

You’re welcome.",1525399585.0
yegor3219,Your video is strangely hilarious. ,1525410865.0
,[deleted],1525390989.0
ImDose,This is awesome. lmao,1525435513.0
aydiosmio,"Keep in mind that adding an arbitrary antenna that's not tuned to the output stage of the transmitter will likely make the range *shorter*, not longer.

Buy a transmitter with higher output power, but does not exceed the power limits of FM broadcast in your country (Sweden?).",1525307008.0
jet_heller,"The top right corner looks like it says ""ANT"", but backwards. ",1525295573.0
Einh,"Hello, Im trying to extend the range of this tiny FM-transmitter by adding an antenna to it but I cant find where to solder it. Do you guys have any idea where it might be?

Here is a picture of the transmitter before it was opened:
https://www.kjell.com/se/image/Product_235970sv/full/1/linocell-fm-sandare-3-5-mm-anslutning?635484609790169173
",1525292394.0
Benutzeraccount,Please take a photo of the other side of the pcb ,1525292944.0
ilukis,Other side of the pcb mate,1525295236.0
Trawlz,According to the Pinout of the chip(QN8027) at the top the 5th pin is the antenna. Following the trace or using a multimeter should allow you to see where it goes and where to solder on a new antenna. If you know the frequency of the transmission you should easily be able to work out the optimal antenna length. As one of the previous commenters mentioned you’ll need to check transmission laws in your area if you intend to boost the power of the signal!,1525506505.0
vzq,Is it me or is this just an advertisement?,1525361939.0
SirJelly,I think it's just common sense that use of `eval()` isn't ideal. ,1525293892.0
petterroeav2,Neat tool,1525265031.0
The6P4C,This is the kind of RE I really love seeing. Interesting stuff I would never have thought of. ,1525247622.0
Chromelon98,"Hey, this guy is from my school!",1525280365.0
jurassic_pork,"Excellent read, thanks.",1525224229.0
BinaryN1nja,Ahh man I’ve been looking for some Cylance dirt recently. Well done ,1525236360.0
sarkie,Very very nice!,1525241719.0
Ryancor,And this is why you set you set your directory and file permissions correctly! ,1525309623.0
,[deleted],1525246177.0
corysama,"> Some local Chinese newspapers suggest the gang made more than 30m yuan from selling a variety of cheating programs.

That's about $4.7m",1525143640.0
chuiy,"I love how the article calls them a gang.

Is this what gangs are now in 2018, computer geeks that sell cheats?  Like mobsters used to rig fights?",1525159637.0
,[deleted],1525168321.0
buyusebreakfix,admittedly i am unfamiliar with the full consequences of theses guys actions but this response seems a bit heavy handed for what seems like basically just elite level trolling,1525156790.0
,[deleted],1525128744.0
mikebailey,Tyler was my favorite by far but our club archive is at videos.competitivecyber.club if people wanna see Shellcode or other ?somewhat related? topics,1525144260.0
Narcius,"One question. 

What is a function's return pointer?",1525101675.0
flarn2006,Upvoted just for the thumbnail 😂,1525024711.0
ryanmerket,You choose a dvd for tonight,1525027284.0
,Packers!!! Wooo!!!,1525058303.0
TailSpinBowler,subd,1525088303.0
vzq,"This confuses me. Half of it is pretty good tips. The other half is “here’s a bunch of x86 instructions”. If you need that, I’m not giving you much chance to get get to the point where you need the other half. 

Who is this for?",1524994648.0
TechLord2,"**PoC BSOD or Denial of Service Using a Hand-Crafted NTFS Image**  

This is the PoC for a NTFS crash that works in various Windows versions  

**Type of issue:** denial of service. 

One can generate blue-screen-of-death using a handcrafted NTFS image. This Denial of Service type of attack, can be driven from user mode, limited user account or Administrator. It can even crash the system if it is in locked state.  

Reported to Microsoft on July 2017.  

**Their Reply:**  

*Your report requires either physical access or social engineering, and as such, does not meet the bar for servicing down-level (issuing a security patch). [...]*  


**Affected systems**  

1. Windows 7 Enterprise 6.1.7601 SP1, Build 7601 x64  

2. Windows 10 Pro 10.0.15063, Build 15063 x64  

3. Windows 10 Enterprise Evaluation Insider Preview 10.0.16215, Build 16215 x64  


Note: these are the only systems that have been tested.  

Does not seem to reproduce on the  current build: 10.0.16299 Build 16299 x64 (not sure)",1524907864.0
DeepConflict,"tl;dr a null dereference on a cmp in an ntfs.sys function.

Shit bug, waste of time.",1524958790.0
perpetual_C000009A,"Flag capture winners have all been announced.  
It's just the ""write-up"" competition that's still open now.",1524910121.0
nigori,"Hmm, how did this manage to get to #2 on my /r/all feed? There are no comments, and only 5 points. 

What exactly are you gentlemen reverse engineering on front page placement? ",1524845937.0
yegor3219,"A newbie question. I have a .s19 firmware file (14 kB) for my car's stock head unit. Its CAN chip, to be more precise. Can it help me figure out how to read steering wheel's position? I need it to draw active back-up guidelines like the stock HU does, but on an Android tablet. Or will it be easier to just sniff the bus and see what's changing there when I turn the wheel?",1524860784.0
PinealGlandOptic,"What packers/unpackers would you recommend to learn? And to read about them?

Which are popular these days?",1524980203.0
KeystoneC,Say you have a stripped executable elf32 sample with 3000 unnamed functions and no noticeable imports. Where do you begin in determining functionality?,1524885064.0
pravic,Is there any wasm loader for IDA Pro? Could not find any.,1525061424.0
guicrith,"Are there any plugins for ida that make it list the full opcode name instead, I am making a Palm OS emulator(m68k) and I can handle assembly but dont have the time to learn all the short names for the opcodes like ""jsr, btst, rts"".  

Is there something that will make it display ""jump to address, bit * is true, return""?",1525199003.0
QSCFE,Any good book/lectures to learn ARM assembly language.,1525261602.0
Static_Variable,"Has anyone successfully used radare2 in win x64 with either gdb or windbg?

Every time I run radare2 -D <dbgr> <config> I am able to connect, but nothing happens after that, it just hangs. Pressing ctrl-c just prints <ctrl-c> pressed and nothing else happens, no interaction etc.

I am able to use radare2 -d binary.exe and do some debugging that way, just not with plugins it seems.",1525361379.0
icebunny08,"How to get started?
",1525065288.0
tnavda,Not really any useful information here,1524744688.0
Benutzeraccount,"Wrong sub, try /r/masterhacker ",1524755970.0
FaithLV,The site doesn't even load...,1524764894.0
bukc_,well that sucked.,1524781382.0
Zed03,... what are the implementations? ,1524815506.0
igor_sk,Please don't post fluff pieces without technical details.,1524816882.0
arthurloin,"Super interesting!

Maybe you could do another blog on how you distinguish the exploitable crashes from the non-exploitable ones?",1524750606.0
ashishkum,Great post. Thanks for posting!,1524777513.0
rolfr,"This paper is Sean Heelan's foundational work on automating the types of heap manipulations that are necessary for exploiting heap overflow vulnerabilities. Basically: a vulnerability exists that allows a program to write past the end of a heap\-allocated object. Thus, your tasks are to 1\) find something juicy to physically locate after the object\-to\-be\-overflowed \(for an easy example, an object that contains a function pointer \-\- though other data\-oriented examples exist\); 2\) to devise a strategy for turning the overwrite into code execution; and 3\) to discover a series of interactions with the program that cause the heap to attain the desired layout.

Heelan addresses points 1 and 3 in this paper in the context of PHP and its memory allocator. For point 3, first he mines existing PHP source code \(its regression tests\) to discover the details of the PHP API \(function names and legal argument numbers and types\). Next, he hooks the memory allocator to record the series of allocation/free operations that take place during a given PHP API function. From there, he uses a template\-guided, largely randomized strategy to generate series of allocation and free events. The end goal is achieved if the victim object becomes situated after the object\-to\-be\-overflowed.

For point 1, he partially automates the process of finding juicy objects that might assist in exploitation by scanning their memory contents after they have been allocated to determine whether they contain pointers, such as pointers to other allocated objects or function pointers.

Good stuff; I look forward to full publication, as I'd like to take a look at the source code and the completed PHP exploits created with the help of these tools.",1524644257.0
sam_binder_of_demons,"This is well worth your time.  His thesis is also fascinating.  One of the other co-authors, Daniel Kroening also co-wrote an excellent book on decision procedures which is now in its second edition.  I've only read the first edition, but its excellent as well, if your interest is in SAT/SMT solving and the ways these techniques can be put to use you'd be hard pressed to find a volume that makes the subject as approachable as it does.  

website for the first edition:
http://www.decision-procedures.org/",1524672256.0
McTerd,This is fantastic! In school we're all C++ based and our Computer Architecture class was all x86 Assembly. Definitely going to forward this to my old professor.,1524636298.0
lolpls,"I'm currently learning about polymorphic and metamorphic code myself, so this is really useful, thanks!",1524681343.0
spilk,"I'm a little confused why they made a ""responsible disclosure"" to Google, not NVIDIA.",1524583901.0
CodyBranner,"I've just read this. It does not explain basic things about how instruction pointer is saved and that ""sub esp, 123"". It is just an overviewm  dissassembled pieces of C/C++ code. Ye, to get into RE you definitely should know assembly language as well. However, if you know it already, you should know that basic things. Then what is the purpose of this tutorial? ",1524555980.0
igor_sk,This was already posted last week.,1524574484.0
TechLord2,"**Frida-Python-Binding**  

Easy to use Frida python binding script for Android reversing automation. The idea behind the script was to make frida's binding much easier and quicker, as of:

* Enumerate every connected device (usb/remote/local) to your machine and generate a selection menu.  

* Automatically install frida agent on a selected device with changeable arguments (dir location, execution path etc). inside the bin folder I have placed a frida-server v10.7.3 for android x86, make sure to use the same version on your client or just replace the file with your current version, in other cases you can use the --frida-exec-path argument to specify a different path for your frida-server binary.  

* Ability to enumerate running processes(--list-pids)/installed packages(--list-apps) and generate a selection menu for the user, so each spawn/attach will become easier to handle.  

* Download and set as default new/old frida-server version and arch by user demand, use the -d argument to use this feature, also the user can choose a specific version that is already located under bin folder, use the -fv argument.  

[**Click to view  DEMO Clip**](https://camo.githubusercontent.com/58d97d064381e6603dc730bdebc78832dc81fe02/68747470733a2f2f692e696d6775722e636f6d2f53794e636169782e676966)
",1524483662.0
TechLord2,"**System Requirements and limitations**  

* x64 Windows 7/8/8.1/10.  

* TDL designed only for x64 Windows, Vista not listed as supported because it is obsolete.  

* Administrative privilege is required.  

* Loaded drivers MUST BE specially designed to run as ""driverless"".  

* No SEH support for target drivers.  

* No driver unloading.* Only ntoskrnl import resolved, everything else is up to you.  

* Dummy driver examples provided.  

You use it at your own risk. Some lazy AV may flag this loader as malware.  

**Differences between DSEFix and TDL:**  

While both DSEFix and TDL uses advantage of driver exploit they completely different on way of it use.  
* DSEFix manipulate kernel variable called g_CiEnabled (Vista/7, ntoskrnl.exe) and/or g_CiOptions (8+. CI.DLL). Main advantage of DSEFix is it simplicity - you turn DSE off - load your driver (or patched one) and nothing else required. Main disadvantage of DSEFix is that on the modern version of Windows (8+) g_CiOptions variable is subject of PatchGuard (KPP) protection, which mean DSEFix is a potential BSOD-generator.  

* TDL does not patch any kernel variables, which makes it friendly to PatchGuard. It uses small shellcode which maps your driver to kernel mode without involving Windows loader (and as result without triggering any parts of DSE) and executes it. This is main advantage of TDL - non invasive bypass of DSE. There are many disadvantages however - the first and main -> your driver MUST BE specially created to run as ""driverless"" which mean you will be unable to load any driver but only specially designed. Your driver will exist in kernel mode as executable code buffer, it won't be linked to PsLoadedModuleList, there will be other limitations. However this code will work at kernel mode and user mode application will be able communicate with it. You can load multiple drivers, of course if they are not conflict with each other.",1524481481.0
mirh,There's also https://github.com/katlogic/WindowsD as a third attempt of driver signing bypassing. ,1524494640.0
AndroidL,Last time I tried using TDL on Windows 10 it didn't work. I think the shellcode was outdated. Has anyone else had any luck on either updating the shellcode or simply using TDL as is on Windows 10?,1524528136.0
,[deleted],1524506238.0
xanaxolotl,"Nice writeup, this part however is incorrectly annotated as being an initialiser for *litArray*:

      mov rax, fs:28h
      mov [rbp-28h], rax

It is in fact setting up a stack canary, copying the value from FS:0x28. You can see at the end of the function it is checked:

      mov rax, [rbp-28h]
      xor rax, fs:28h
      jz short loc_400EBC
      call ___stack_chk_fail

In addition to IDA (or perhaps [instead of](https://i.imgur.com/BCFzS4U.png)), I strongly recommend trying Matt Godbolt’s [Compiler Explorer](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAKxAEZSAbAQwDtQB9T5UgZ1QFdiyTCADkAUgBMAZjwtkDflgDU46QGEeBfKgB0CNdnEAGAIJTZ8xSrWbtDPACN9hk%2BZlyFSzKo08AnjwA9HzIANaYBC7SRmYWntY%2BtiyRcpFBctGx7pZeNn4ExHLAWW7xVt6%2B6vwseFropXEeFfnqTMQADkwZKVEGMWXNeUkaHQQIxJhMDf3Zg9JYAGZpygAKAPIASgAqyrTS0gDsZWYAbqh46MoAQkw8eMimxMRMgRAAlKqH127Kf8pBILKLAKdrFZSsCHPV7KADuhAQEOUDgImBeDF%2B/zkBGRhCeL384gArNdaMZiQARNQ/Mz/VS0/6A4GYUFFNgQlhQglwhFI05gpiOBiYTF/bHKfGvADKeAAXiMKXtydIaaY6eL%2BcRJYSSdqZfLKdSTmrGUCQcw2cAOVyYfDxsoOpMALRLNJXVCOKgsgg8UXKcUeqja4mk8lExVqCPfYykeiSUjSUgAFlIRNIADZSIdSAAOUgATnEhypKuNdKZPEiBHBkLkWAAHv7OZD2tyiNbA96/SjgySwxHpIr9kcjXEGX8mZNCnhMKca5zCJgALbKRbEVArlvQwnjps44WRXyKnvbkP90fmXdM5CTJjV9lMZRLu9FRt2xGPlFopgY3filEALIvng9YhvshokiO4YXn6163veVqPs%2B05vrymp4IKwq%2Bn%2BLA4uusI8EeezSBe6q4coaAMIRkbKCOpZjiaYrkZqQEoSG%2BG%2BtBJKUZxJaqrBQJyB0/AEAhyjtkhwGgbuLFSSGSYQdckj9kRw7HPRl6MQCQJTkUs7gmuG5Ishr5%2BuKrGvgAMpgh40bJbEkgpXFKeeGlFlSDHnJcawXLhaI8B8XyqmROIsPwK40WSMFXkCHS%2BaixDiag1rigQ/gdCKMXKAgqAMOghHjD40zoJMPCEagiwpeRaUZco6GYZlWnigAVHF2JotFWlMlI6a2PVQoijEyi6TOpyYAVCA%2BEuy4kP4ELoCV43lZVhXKJ2yAEH6bV%2BYlNE9WFS6dXSjrYosEBSJIB0gKokhEugxLqCwF2kMoB3vKR/wnbhZ0Xa18VotdUh3Q9T2SPGyh/e1xDvRpx1sgQP1g6YC2lctr3hYDt0dCDz03emb0fX8X0I%2BdSMo0ta2VQdyj8Pc7LbQlmNEtjRKPbjDNojDwWffDiOSMji1lZTDr/cQTMs2zYMvT1HPQzBxbGl5VzPgwDCoMg7CYPWgVFtzfzIAg7QQ9NS7sD%2BavIEdpoQqr6t3lNM3EHNiwkHstAUYbLwbf5fom2btvIERKsWxAtDu81yj3PKFUQAb7TvFzZbW0uqBjeJk2R9O7IXQAEpgtvKAA6iQeUXXuyUm7NfpaEIHT%2BBAfvm%2BrpC5/natFyX91g4nDFw6dpOSMH6tOo3AdM5xkvg6PFs95p5ZAmuNk2xb9vK47O5aYvmAN8u/sz/LHmaUrFFNxrWs698fpx4lzXT%2BrVsTkCp/20%2B6%2Brq7Yce%2B0TDe8Q2FaXfQONFkCn1DvQSOcpMAx2vgnB%2B2knypySGDPOBdi7EFLmDcur9Tan2roUZAdcd44IDtLZBbdkpoIwZIWeW1eYDxAQHEeu9T7jxxlLbBe91Y0KylvZedtURrxTk7P0W8iGcOQDQhWnkLhXFvAHdgojPi6yvp7Y2zCA5wKZM/VE2DZrv0Sp/a%2BP8Er/zpIAoOoDP4RyjlAs6MDuFdSBCnNOrdUGdzLqgXCFd1EWzwbXeugDSGSBQe3ShXdqFwOJnzORFsnRbyYcQi2T4WE3SJBPUGU8fFcM0TpKYAcX6Vydvo5Qkh3ZGN/qY/45iaIxPVmI0%2BL1SkQwgdHOxntYFuSys4pBpSDiHGykmesxhEoAAEWCeP8CnVAlYy7Ym8Yk%2B%2Bu4a4EICVk7gN1elHAGUM0Z4yWCTNQNMkU3dIl0IurU5AcTJiYASeI4aeSLasNZhkl6gCHHz1XNcvhICBG6OEbuURbyD6KxkcoCk/gWBAQDhfPWyT5Hn1nnSBhFtNba0Rf8C5CjrkfGBdI7yUo0RjWIDCpOj9I6Hn4B0JshAMIMHJcQIldUBQDUqUxHElYGVoheqEMIL1%2BSKEGrCmu/ANqR3VmEYqxB2ByHmoLX0sMsTkVQGMVShM9yyvQZgTkNEbEx0lUtdF%2BtVGOH4IsRYHUSRkkkE5AcUZrjkgVgqo1RtmocqJZNAue0wYEs5YlEJqALpqoEhReCPgeWRGroStERFw0EAgKYAAYuwAAkgAOWwNsF6Up1jqAANLsClNsTY2BTAAResYd51s7wEB/oiWNSURbEBxGpSNPpxXKrjW6rlyhs2WQLTm3NGas3rHYMWgAqlKEtFIKSbC%2BOoHtI7x2To2DsUh6YO3csgTHDtHT%2BJZTQCwZYwBBBFXJmVP0%2Bqyq6DpgopgS48AMDmjRRNKb03bDVZeng165BmxRte39JUiJptMNOzY7BTCpoAJofrPV%2Bm9cUm1EQQEQFgAUV3bErWSxwdYxXhEPO2LtxA/TYZYOgCAhGXrkcKCK9l4rJUQ3epIdMn7N2tIgJ%2B3dpL4EOC0Fq4pCgZy4W7HUVELByNRrILRTD8Cf7CBVQelIG08CeOruKoisnMBjHE76yjwrRU8vo81RjzHYO6fFcKFg7ACBGZ6pKiz0nJxTCuIZFc9aFPemU09GSP5%2BAKnudMcj4qXomrNd2q1SZpNRIHkDdJuMQvmrlp0xx5LSOvzKkwYAPhPG4YiDidzSmVNLK1WRnl3KJMerVtywoFntPuvIe8ctkjD5uGPuoBwWq41KMvks6j%2Bm6Mo2lc2WDarxQ8qIjGJlAq1V6do%2BESVg36VEoA0Rp1X8b4VfVu18iXrJBtcEzif1gbVvX2UPFi1oZrWUiIrrB1fEuNwSmDo%2BtqnwgxvFZEeNSa01DoXXmgtRaS1luUBWnJ5KcSUpy4edam1dwm0rHGnqhHlvKBemAUQxg0esdsbVtEy3OO93%2BEjyV37LOLDvQ%2Bp9g4JRfbfdNiTy2SfsAQziGiyHPFoa2Bh0HB6iU4mTasDVFN2wkfaM7EgyEzK9CZyhz7r6fsXVoJIQ4uhjAq90LQXGiP6fE5vZKhzQJ8s4gIxJq%2BnjFOdqC8oKjxAaM5cM8ZonKMscx0dyVfHc9raVlSxdPbHXlCHcwdNdLmWG2EcjaRwL4QXobYEx1qrmqxMx62wQBrwP9f%2BbXsHnwLnFvRsQYlNzZuPOFa0vy3zRFbwlct2dyT4XItnLBjFth4Ma9NZBfi97BBVjrmAC8Jc962Akt3D6olOLVu%2B9wmP/iUij6gtvv4cYleIDH2apqYAHQuuwqZF0Wm2eP7koPfdJZB4Oih3r/3Vx7cc9LgXxMJzze294quNsO/0xihD60mMV/6ArPiUuKci/MGF/Oof0QiRwTAF2SYdOHwRfe/Z5C6dPG8R7IqV6TAWEdOSvGmOmK0VaG/WA6YVcGoArLzT/fAn/JA%2B2UmdMasdAF6VNMdSySyV5W/SvOghgyydPKgXyaAjApzHke0XApgGVMgraMg9gLguQCAGgtgxg8/b6AeYAwiEApgRYBKHgkQ%2BAk5NyGfNwcUZ8SQ96OIbrZLWgXQG4O4B4CUbcVleBSQMw1YUWGwpkaQMw9ACFcnQOQpOabRTzYNJMMw%2BtR0VAXvO9AfYAYNIkMwsg4oLjW4e4R4awqfP0BwqGAKQ1MFCFKFEOdIqUTvbvYIvvMIpI3cF/Svd/aTKcQQTkZUafCkUQBrBgMQIkUQUgFgMQYwFo1AMQedPgQQYQG6aQWgFoggdo%2BohrMIEAIkGMRo0QJMFoto9HTosQFongEAGMEYxYhrOAWAJANAJcDoB9LlCgWODcA44UMWZAYAQ4RMZYBgExSgRwUY0gEXJ2MQIY0gPY6aXCdYFgR9J4rAZ8NgYUf4vASYJTMaVYxY0gLWFkESEQUQd49qGYjo0gacJcUYho1gDgLgRgJwVYyABrDtTzSElYgQIQEQWgBopo%2BYp4ro0QesHMdMJ0dMJMZQYAZAQOZXaQK3XAQgV2CwcBdQU4w43aGQSk5QdQYYjE8YyY6YsQOY1o2k5Y3gNY1E6UxgMQSQGkqEukqUzYhrIle4TxEAJMIAA%3D) for interactive examination of compiled code, using different compilers, compiler flags, and architectures. It's very useful indeed for this sort of exploration.",1524446196.0
Weird_Tolkienish_Fig,Excellent!,1524440696.0
khasaia,Any feedback would be greatly appreciated. https://twitter.com/_qaz_qaz,1524376493.0
Hellcleaver,Let me just fire up my IDA Pro,1524333135.0
hipstergrandpa,Just FYI this is usually for I believe RE for software/malware. Hope someone here can help answer your question though!,1524324546.0
FUZxxl,These screws are probably painted over because they are part of the calibration.  It might not work correctly anymore once you remove the calibration by unscrewing the screws.,1524322228.0
insinsinsin,"Hi guys. I hope this is somewhat correct subreddit. Here's the beef: im trying to disassemble old military coincidence rangefinder. If anyone happens to have a somekind of manual on these things it'd be much appreciated. If not I'm open to ideas how to continue on taking this thing apart. You see its a bit broken, and I'm trying to get inside. I've provided an album with detailed pictures and comments of my findings. Thanks.

EDIT: Oh yeah, and if you know a better place for this then I'm all ears!",1524322003.0
draeath,"Do you understand interferometry? If not, the operation of this machine is going to be black magic, for you.

The TL;DR, I believe, is that a modulated beam is projected, and the reflection gathered. The phase of the reflected signal is then mixed/compared with the original, and the time offset is then converted to distance (given the local speed of light is near static enough to be a constant).

The ""calibration"" screws are likely to align the laser's projection. I have laser boresighting tools that have similar - they're factory adjusted to ensure the laser points straight forward relative to the casing.",1524336425.0
thawigga,I have no idea but have you tried rotating the housings around the e knob to see if any budge? ,1524336828.0
shoff_00,"More of a discussion point then a straight question, but did anyone else notice that the microcode updates for AMD's Zen uarch are unencrypted and seemingly unobfuscated? It looks like they use a signed hash for authentication, so I guess it really doesn't matter that the data is just plaintext, but I find it pretty interesting.

You can see from a simple hex dump that the code is organized into ""quads"" of 4 64-bit uops followed by a 32-bit sequence word for control flow. So it's pretty much the same thing as disclosed in the [USENIX '17 paper](https://www.usenix.org/system/files/conference/usenixsecurity17/sec17-koppe.pdf) but with quads instead of triads. Small excerpt from my hexdump (no adjustments for little-endianess):

    80 1E 40 17 0C 1C 00 5B 
    00 10 02 E0 38 9E 07 32 
    00 10 00 00 2D 9C 32 02 
    00 10 00 80 2C 9C 32 02 
    82 00 10 03 
    
    80 1E C0 14 0C 1C 00 5B 
    00 10 00 60 20 9E 05 32 
    00 91 00 60 00 1D 2F 1A 
    00 10 00 80 2C 9C 32 02
    82 00 10 03 
    
    00 00 00 00 00 9C 7F 00 
    00 00 00 00 00 9C 7F 00 
    00 00 00 00 00 9C 7F 00 
    00 00 00 00 00 9C 7F 00 
    01 00 00 04 

You can see some repeating patterns between the different instructions. Pretty much impossible to reverse I'd imagine unless you could somehow get passed the authentication stage to fuzz the different fields, but I think it's cool.",1524257485.0
idkpeople123,"Currently going through practical reverse engineering and on stuck on one of the exercises on page 17 q 4:
""In all the calling conventions explained the return value is stored in eax. What happens when the return value does not fit in a 32bit register? Write a program to experiment and evaluate your answer. Does the mechanism change from compiler to compiler?""

I don't know C that well but if I try to return a string it will only be a pointer to the string (since its an arry I'm assuming).

If I try int c = 999999999; gcc wont compile with a warning about an overflow.

I'm kind of stuck here, I don't know if I know enough C to continue. I mostly script in python. 

Searched for other blog answers and they all seam to be using structs, is there a reason why?",1524517690.0
38211141255,"I'm trying to implement an example of an ELF .text infection as described in ""Learning Linux Binary Analysis"". I'm currently having a problem where I successfully injected my data into the .text section, readelf displays no errors but the program terminates during startup. 

My process so far is:

 1. Increased sh_size of the .text section header by the size of the data I want to inject.
 2. Shifted all sections after the .text section by the size of the injected data (Modifying sh_offset and sh_addr in section headers).
 3. Find the program header where the .text section resides by checking p_type, p_flags, and p_offset; then increasing p_filesz and p_memsz by the size of injected data.
 4. For all other program headers afterwards, add the size of the injected data to p_offset.

The entry point to the file has not been modified.

When I try to debug the resulting file in radare2, it outputs:

    [0x7fd315665007]> aa
    [Cannot find function 'entry0' at 0xffffffffff600530(aa)
    [x] Analyze all flags starting with sym. and entry0 (aa)
    [0x7fd315665007]> 

If I list the number of functions I see a lot are missing:

    [0x7f05c7bff007]> afl
    0xffffffffff600000    1 10           sym.imp..6
    0xffffffffff600800    1 10           fcn.ffffffffff600800
    [0x7f05c7bff007]> 

Compare to the original file:

    [0x7f3700c6dea0]> afl
    0x55daca36a000    3 73   -> 75   sym.imp.__libc_start_main
    0x55daca36a4e8    3 23           sym._init
    0x55daca36a510    1 6            sym.imp.puts
    0x55daca36a520    1 6            fcn.55daca36a520
    0x55daca36a530    1 43           entry0
    0x55daca36a560    4 50   -> 40   sym.deregister_tm_clones
    0x55daca36a5a0    4 66   -> 57   sym.register_tm_clones
    0x55daca36a5f0    4 49           sym.__do_global_dtors_aux
    0x55daca36a630    1 10           entry1.init
    0x55daca36a63a    1 34           sym.main
    0x55daca36a660    4 101          sym.__libc_csu_init
    0x55daca36a6d0    1 2            sym.__libc_csu_fini
    0x55daca36a6d4    1 9            sym._fini
    0x55daca56afe0    1 1020         reloc.__libc_start_main
    [0x7f3700c6dea0]> 

Listing the section headers using readelf also show that some sections are missing:

    Segment Sections...
       00
       01     .interp
       02     .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .plt.got .text .fini .rodata .eh_frame_hdr .eh_frame
       03     .init_array .fini_array .dynamic .got .data
       04
       05     .note.gnu.build-id
       06
       07
       08     .init_array .fini_array .dynamic

Compared to the original file:

    Segment Sections...
       00
       01     .interp
       02     .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .plt.got .text .fini .rodata .eh_frame_hdr .eh_frame
       03     .init_array .fini_array .dynamic .got .data .bss
       04     .dynamic
       05     .note.ABI-tag .note.gnu.build-id
       06     .eh_frame_hdr
       07
       08     .init_array .fini_array .dynamic .got

I think there's a problem in the way the section headers are being moved, but I haven't found the problem.",1524709102.0
BinaryN1nja,ahh i love liveOverflow. :\) ,1524188730.0
McTerd,Holy fuck!,1524194378.0
igor_sk,repost with proper title,1524209324.0
tweettranscriberbot,"^The linked tweet was tweeted by [@jebdec](https://twitter.com/jebdec) on Apr 19, 2018 19:33:17 UTC (7 Retweets | 7 Favorites)

-------------------------------------------------

C++ Discovery, Reconstruction, and Decompilation for x86 files in JEB 3 Alpha - short clip here [https://youtu.be/vN6VBh-LBSM](https://youtu.be/vN6VBh-LBSM) and we'll publish more in the coming weeks \#ReverseEngineering 

[Attached photo](https://pbs.twimg.com/media/DbK1eZ5VwAAhUXI.jpg:orig)

-------------------------------------------------

^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1524167707.0
BeanBagKing,"I gathered some of the hashes here: https://nullsec.us/stresspaint-malware-iocs/

The site serving it was live last I checked, but if it's not anymore, you should be able to download it from one of the hybrid-analysis links.",1524191161.0
workOrNah,great deep dive. Random questions will HQTrivia be upset if they found this article? Isnt creating a bot to play against their TOS?,1524144279.0
maxnarvaes,"Pretty good read, congratz.",1524151253.0
bjesau,I’ve been waiting for an analysis of HQ. Thanks!,1524161248.0
theqlabs,"Great work y'all, thorough and patient explanation. Family has been asking me to do this for a while glad I can mark it off haha. ",1524243205.0
Brashendeavours,A cube with two smaller cube cutouts on the top and front.,1524135609.0
sarkie,My favourite blog to read,1524129866.0
beat3r,It amazes me that Windows 10 can still ship with services that can be abused for local EoP. ,1524138021.0
TechLord2,"**Brida**  

Brida is a Burp Suite Extension that, working as a bridge between Burp Suite and Frida, lets you use and manipulate applications’ own methods while tampering the traffic exchanged between the applications and their back-end services/servers. It supports all platforms supported by Frida (Windows, macOS, Linux, iOS, Android, and QNX).  

**Brida 0.2**  

Brida 0.2 was presented at Hack In The Box 2018 Amsterdam and includes some new features that speed up dynamical analysis of mobile applications, including:  

* An integrated console in which output from all Frida and Brida hooks are printed  

* An integrated JS editor with Javascript syntax highlighting, in order to be able to add your own Frida exports and Frida hooks directly from Burp Suite  

* An analysis tab, in which you have a tree rapresentation of the binary (Java/OBJC classes and methods, inports/exports) and from which you can graphically add inspection hoooks (that print arguments and return value every time that the hooked function is executed) and tamper hooks (that dinamically change the return value of the hooked function every time that it is executed)  



**A brief article containing details on usage and various examples:**    

[Brida: Advanced Mobile Application Penetration Testing with Frida](https://techblog.mediaservice.net/2017/07/brida-advanced-mobile-application-penetration-testing-with-frida/)  

**Slides of the conference presented at Hack In The Box 2018 Amsterdam that describes the new features of the version 0.2:**  [SLIDES](https://conference.hitb.org/hitbsecconf2018ams/materials/D1T1%20-%20Federico%20Dotta%20and%20Piergiovanni%20Cipolloni%20-%20Brida%20When%20Burp%20Suite%20Meets%20Frida.pdf)",1524072533.0
TechLord2,"Also read  [Bypassing Android Anti-Emulation, Part (I\)](http://www.juanurs.com/Bypassing-Android-Anti-Emulation-Part-I/)",1524071536.0
TechLord2,"**GPG Reaper**

**TL;DR: Obtain/Steal/Restore GPG Private Keys from gpg-agent cache/memory**  


This POC demonstrates method for obtaining GPG private keys from gpg-agent memory under Windows.  

Normally this should be possible only within 10 minutes time frame (--default-cache-ttl value).  

Unfortunately housekeeping() function (which is responsible for cache cleanup) is executed only if you are using GPG (there is no timer there).  

This means that in normal GPG usecase like: you sign some file then close GUI and do other task you password is still in gpg-agent memory (even if ttl expired).  

Attacker, who has access to your current session, can use this for stealing private key without knowing your passphrase.  



**Introduction**  

[GPG-Agent](https://www.gnupg.org/documentation/manuals/gnupg/Invoking-GPG_002dAGENT.html) is a daemon to manage private keys independently from any protocol.  

GUI interface communicates with agent using Assuan Protocol.  

By default agent caches your credentials.  

*--default-cache-ttl n* option set the time a cache entry is valid to n seconds.

The default is 600 seconds. Each time a cache entry is accessed, its timer is reseted.  

**Under Windows sign process looks like this:**  

[Sign Process](https://github.com/kacperszurek/gpg_reaper/raw/master/images/pksign.png)  

Crucial part here is housekeeping() function which is responsible for removing expired credentials from the memory.  

But there is one problem here: this function is executed only in two places (inside agent_put_cache and agent_get_cache).  

This means that cached credentials are NOT removed from the memory until some gpg-agent commands which uses agent_put_cache or agent_get_cache or agent_flush_cache are executed. ",1524022712.0
reph,"Ugh, does the timeout flaw affect other OS too, or is it Win-specific?",1524029470.0
mkosmo,This is why gpg tokens (eg yubikeys) are a really good idea.,1524059818.0
rolfr,"Funny enough, I found that the 3/3\-difficulty questions were easier than the 1/3 and 2/3 questions. A lot of the former involved things I had seen while reverse engineering, whereas a lot of the latter were language\-level stuff that disappears by the time the source code becomes a binary.",1523932175.0
ofan,"http://cppquiz.org/quiz/question/160

> §8.3.6¶10 in the standard:
A virtual function call (10.3) uses the default arguments in the declaration of the virtual function determined by the static type of the pointer or reference denoting the object. An overriding function in a derived class does not acquire default arguments from the function it overrides.

This looks ridiculous to me, any reason why it is this way? ",1523977650.0
ythl,"This is why the `explicit` keyword exists - so you don't have to memorize C++ standard corner cases (at least, the problems involving multiple constructors).",1523934301.0
ynot269,"Note that this is not me, the author is http://yasoob.me/

I found this really fascinating and am interested in seeing other articles like this. ",1523922195.0
,[deleted],1523960560.0
Scott10012,"Super interesting and easy read, even though I don't know how to read python!",1523973406.0
Lagor31,"Had some fun with it:
http://lagor.epizy.com/",1524838864.0
failedgamor,"expect it to get patched soon ;)
",1523978523.0
AntiProtonBoy,Various firefox plugins have been doing this for donkey's years. Interesting article none the less.,1523945084.0
linotype,"Aww, I thought this was about reverse engineering Bolo, the first multiplayer networked video game.",1523988498.0
TechLord2,"**Virtual File System Editor**

A tool to extract embedded files from application virtualizers. This was originally released exclusively on the tuts4you forum. Made open source on April 16, 2018.  (By ExtremeCoders-Re)

**General Information**

Virtual File System Editor is a tool to extract/modify embedded files from packed executables created by application virtualizers. The main tool is provided in the form of a DLL which needs to be injected into the process you want to extract files from. Since DLL injection is a separate topic with it's own nuances, I have not provided a DLL injector in this package. You may use any DLL injector. I recommend the one developed by Ralph Hare available at ysgyfarnog.co.uk or RemoteDLL available at SecurityXploded. The latter is particularly recommended for ASLR aware systems.",1523902873.0
TechLord2,[Youtube Video Link](https://www.youtube.com/watch?v=vNPd0cvtKAA),1523877174.0
slanderousam,"For the second question, it's because minesweeper moves the mine if it's the first thing you click. They didn't want the game to be over in one click. ",1523852669.0
TailSpinBowler,">When I started planning the workshop’s last session — I had no idea what to do. I was looking for an interesting challenge that I could use in my workshop

I would not recommend this for a beginner class.

Maybe look at CMU bomblab.

",1523880262.0
variablev,"Assuming they store the game board in a 2D array, you could write a NOP instruction when the game board is being written to with mines, or jump out of that entirely.",1523890346.0
Jump3r3,Or just swap blank mine tile with flag. ,1523893784.0
irqlnotdispatchlevel,"I don't see why this is labeled as new. 

Starting the process in a suspended state, injecting and resuming is old news. What this is doing that is kind of new is the fact that it is using an APC instead of creating a remote thread (which is, again, old news). It's a bit amazing that a lot of AV software fails to detect this. ",1523865197.0
TechLord2,"[**Code Injection Video**](https://www.youtube.com/watch?v=_sI76NLPMjI)  

**Other References Where This Technique Is Used:**  

* The “TurnedUp” backdoor written by [APT33](https://www.fireeye.com/blog/threat-research/2017/09/apt33-insights-into-iranian-cyber-espionage.html) – An Iranian hackers group  

* A variant of the notorious “Carberp” banking malware and by the [DorkBot](https://research.checkpoint.com/dorkbot-an-investigation/) malware  

* [Carberp Malware](https://www.welivesecurity.com/2013/03/25/carberp-the-never-ending-story/)  

**The Malware Code Injection Flow :**

1. Create a suspended process (most likely to be a legitimate windows process)  

2. Allocate and write malicious code into that process  

3. Queue an asynchronous procedure call (APC) to that process  

4. Resume the main thread of the process to execute the APC",1523841513.0
khasaia,"Any feedback would be greatly appreciated.
https://twitter.com/_qaz_qaz",1523803524.0
fwork,Nifty! ,1523791750.0
TechLord2,"I know it's a bit old but is a nice article and decided to post it when I came across it today :)

[Github Sources](https://github.com/AdrianCitu/slae/tree/master/slae3)",1523749107.0
bad-tempered,Where's the rest of the article?,1523758681.0
ressdfw,Good project. But sounds it needs a lot of work. Wish 3G and 4G works soon since 2G is getting abandoned.,1523716633.0
unrznbl,Yes. 2G is going away many places. There is hope that we can proceed from 2G as a basis and move forward.,1523720709.0
insec99,"Uni is going to start in 4 months am doing a cs degree, but i have always been interesteed in re and malware analysis would apprciate if you give a rough roadmap along with resources, how i go from knowing basic python to a re and malware analysis, what cert should i pursue that would give me a solid foundation and what all topics, concepts i need to learn any resource geared specifically towards this is appreciated.",1523670484.0
kiwidog,Anyone have experience with writing bios loaders in Ida? (The stock one doesn't work and if I'm writing my own in Python need pointers),1523654952.0
TailSpinBowler,"This might be more a /r/malware question, but I have been wondering why things like CreateRemoteThread exist or are allowed? Is there  a legitimate reason to have it? And can you disable it via gpo etc?",1523881116.0
NewYearNewMemes,Has anyone dumped the contents of their iphone's memory and examined it or know about a good tutorial/blog post that does it?,1523927045.0
rootb3r,"How to get started with RE'ing network and radio protocols? 

Like ssh,telnet,DSSS,FHSS,ICMP,SNMP etc.",1524034602.0
idkpeople123,"I'm working through the practical reverse engineering book and want to start playing with the snippets of assembly code. Are there any easy ways to do this, if I use the SASM IDE and compile with nasm it uses gcc to link and the exe is filled with junk I don't need or want to see. Eg if I compile mov eax, 1 and open the exe in ida I have to jump around to even get to my code. Same if I use the visual studio stuff.

I don't know if I should be looking for a simple compiler or if there are options to turn off the junk I don't need or if I need a simple linker just so I can compile and play around in a debugger with the code.",1524068810.0
DarkLurker17,"I was looking around at server emulation for online games and was wondering, is it possible to create an emulated server for an online-only Mobile Game like Fate Grand Order so that it will continue to be playable when it eventually goes offline?",1524152926.0
,[removed],1523670857.0
xXxXx_69sw4g20_xXxXx,WTF did I just read... I generally consider myself pretty savvy and I understood literally none of that.......,1523609318.0
TechLord2,"CVE-2017-0263 is a UAF vulnerability in Menu Management Component in win32k kernel module of Windows operating system, which was reported to be used to attack with an EPS vulnerability to interfere the French election.  

This article will simply analyze the CVE-2017-0263 part of the attacking sample in order to come up with the operation principle and basic exploiting idea of this vulnerability, and make a brief investigation into the Menu Management Component of Windows Window Manager Subsystem. The analyzing environment is Windows 7 x86 SP1 basic virtual machine.  

In this article, in order to highlight the important points, in the analysis of the involved system functions, the irrelevant calling statements will be omitted. Only the calling and assignment statements that affect or possibly affect the vulnerability triggering logic are paid attention to and analyzed or interpreted.  

**REFERENCES and Proof of Concept Sources:**  

* [The proof of concept of this analysis](https://github.com/leeqwind/HolicPOC/blob/master/windows/win32k/CVE-2017-0263/x86.cpp)  

* [Kernel Attacks through User-Mode Callbacks](http://media.blackhat.com/bh-us-11/Mandt/BH_US_11_Mandt_win32k_WP.pdf)  

* [TrackPopupMenuEx function (Windows)](https://msdn.microsoft.com/en-us/library/windows/desktop/ms648003(v=vs.85).aspx)  

* [sam-b/windows_kernel_address_leaks](https://github.com/sam-b/windows_kernel_address_leaks)  

* [EPS Processing Zero-Days Exploited by Multiple Threat Actors](https://www.fireeye.com/blog/threat-research/2017/05/eps-processing-zero-days.html)
",1523591025.0
VikingFjorden,[Seems kind of uninspired](https://stackoverflow.com/questions/48270127/can-a-1-a-2-a-3-ever-evaluate-to-true).,1523572424.0
Dwedit,"If you got properties, then it's easily true.",1523581942.0
0-1-2-3-4-5-6-7,***aggressively adding to read later bookmark folder***,1523589380.0
OK6502,"windbg is an excellent tool. Very unweildy, and the learning curve is exceptionally high, but once you get the hang of it it's really quite excellent.",1523540094.0
fourhundredthecat,"why would anybody want to study windows kernel ?

Or, actually, why does anybody still use windows ?

If you are a hacker, you can actually study linux kernel, join the open and free community, and become kernel developer.

",1523528866.0
apple____,https://www.bestbuy.com/site/sony-30-fd-trinitron-169-hd-ready-flat-tube-tv-silver/6494135.p?skuId=6494135,1523506922.0
apple____,16:9 crt Sony i think,1523506847.0
C5H5N5O,"Also a common technique in malware is to actually find the vtable which contains various pointers to methods related to ssl/tls handling. In boringssl, the struct is called `SSL_PROTOCOL_METHOD`.

BoringSSL actually defines a global variable of type `SSL_PROTOCOL_METHOD` which is an initialized vtable of all relevant tls methods.

    static const SSL_PROTOCOL_METHOD kTLSProtocolMethod = {
        false /* is_dtls */,
        ssl3_new,
        ssl3_free,
        ssl3_get_message,
        ssl3_next_message,
        ssl3_open_handshake,
        ssl3_open_change_cipher_spec,
        ssl3_open_app_data,
        ssl3_write_app_data,
        ssl3_dispatch_alert,
        ssl3_init_message,
        ssl3_finish_message,
        ssl3_add_message,
        ssl3_add_change_cipher_spec,
        ssl3_add_alert,
        ssl3_flush_flight,
        ssl3_on_handshake_complete,
        ssl3_set_read_state,
        ssl3_set_write_state,
    };

It's actually pretty easy to find this global in memory by doing checks like whether each field actually points to valid a valid memory location which also contains code and is executable.",1523481389.0
rolfr,"Worth a read since Hex\-Rays plugins are still fairly rare in comparison to ordinary IDA plugins. I might suggest for the first example involving GetProcAddress to try to find the string name in the type libraries, and if found, applying the proper function pointer type to the return variable. For the second example, I'd probably try to find things that look like characters being written to adjacent stack variables within the same basic block, and use that to guess the size of the stack buffer, rather than just converting any individual characters into a character representation. Still, useful stuff, and a testament to the genericity and power of Hex\-Rays.",1523390074.0
TechLord2,"**Introduction**

Since the initial release in February 2017, P4wnP1 has come a long way. Today advanced features are merged back into the master branch, among others:

* the **Windows LockPicker** (unlock Windows boxes with weak passwords, fully automated by attaching P4wnP1)  

* the **HID covert channel backdoor** (Get remote shell access on air gapped Windows targets tunneled only through HID devices, relayed to a WiFi hotspot with SSH access with a Pi Zero W. The target doesn't see a network adapter, serial or any other communication device).  

* the **HID covert channel frontdoor** (Get access to a python shell on P4wnP1 from a restricted Windows host, tunneled through a raw HID device with low footprint. The target doesn't see a network adapter, serial or any other communication device).  

* refined USB, **modular USB setup**  

Please do read the [**Full README**](https://github.com/mame82/P4wnP1) for more details  


**DEMO VIDEO LIST:**

* [Crack open locked Windows machines - P4wnP1 LockPicker payload demo](https://www.youtube.com/watch?v=7fCPsb6quKc)  

* [Snag Windows Passwords With Pi Zero | P4wnp1](https://www.youtube.com/watch?v=KDJKE10LCjM)

* [Stealing saved webpage credentials with P4wnP1](https://www.youtube.com/watch?v=iZXNQNIpm7s)  

* [Backdoor Windows lockscreen with P4wnP1](https://www.youtube.com/watch?v=uu15fIb9vbs)  

* [Beyond BadUSB and BashBunny... P4wnP1 covert HID channel demo](https://www.youtube.com/watch?v=MI8DFlKLHBk)  

* [PC Backdoor With Pi Zero | P4wnP1 Tutorial](https://www.youtube.com/watch?v=Pft7voW5ui8)  ",1523326684.0
fanuch,I actually bought a RasPi Zero to test this. Unlucky for me that the Zero I received was DOA!,1523359637.0
BinaryN1nja,Been loving xpnsec lately. 👍🏻,1523339207.0
RandomGuyNumber4,What would be even cooler is if someone takes those Gerber files and modifies them to make a version of the motherboard that fits into a standard ATX case and with a mask to solder on a ATX power supply connector.,1523294952.0
,There's also this project: [A4000+ Alice motherboard DIY](http://eab.abime.net/showthread.php?t=91531),1523282403.0
SkyMC,Lets just hope this survives and doesn't get taken down like WhatsApp bots. ,1523274887.0
corysama,"via https://news.ycombinator.com/item?id=16789644

edit: better discussion https://news.ycombinator.com/item?id=16793180",1523250166.0
ressdfw,"Wish someday all message apps  Messenger, Line, Wechat, Telegram, Viber, Tox can be reversed and united in one app.",1523299132.0
TechLord2,"**Interesting Material:**  

* Getting Cozy with Auditing on MacOS … The Good, the Bad, & the Ugly  
 
* UEFI BIOS firmware analysis at scale  

* Skorpio: Advanced Binary Instrumentation Framework  

* Improved KRACK Attacks Against WPA2 Implementations  

and many others from  
 
* [Lightning Talks](https://github.com/comaeio/OPCDE/tree/master/2018/Lightning%20Talks)",1523168544.0
3xpert3,Seems interesting,1523194811.0
NewYearNewMemes,"Love this thanks for posting!
",1523214023.0
Ryancor,"I just purchased the license key for $99 so the price is pretty fair! Their decompiler could use some work but it’s not bad... I would like to see their pseudo-c use variable types eventually. Their debugger is good but the organization of how the windows panes work could use a lot of work, the debugger window almost becomes an inconvenience. As far as the app itself, it works pretty damn smoothly... the binary editing and patching works like a charm!

Let me know your thoughts on this!",1523064683.0
igor_sk,"For once, non-ugly decompiler output :)",1523046983.0
0xad,Vulnerability timeline is interesting.,1523343261.0
questionablebrocode,Much obliged ,1523042536.0
eteran,"You should check out edb for Linux too 😉

http://github.com/eteran/edb-debugger",1523056882.0
Nightlark192,"I'm looking at a wireless device that seems to be using some form of ASK/OOK, with a 3 ""level""/value encoding per bit -- the signal I see seems to be high-low-high for a 1 (or high-high-low... not sure if the value for the ""bit"" comes before or after the high-low sequence), and high-low-low for a 0. Does anyone know what this type of wireless encoding scheme is called, and what the purpose of the ""high-low"" sequence might be, as opposed to the device just sending a synchronizing sequence followed by high/low values corresponding directly to the bits sent?",1523218904.0
DanjbGames,I'm looking for someone to help me understand the image-loading routine of an old abandoned game called Rival Realms. I'd like to know how to extract the game's images so that I can create an open-source remake. Anyone interested?,1523362074.0
rootb3r,"I'm getting started with RE but stuck with this...

1. After reading few posts and tutorials I've came to conclusion that i need strong base of x86,x86-64 & ARM work asm knowledge to get started with RE. I'll be reading 


RE for Beginners, 


Practical RE for x86,64,ARM 


IDA pro 2nd edition.


Also, will be referring to Open Security Training videos for the same.

2. I also need to know C programming fluently specially from a system programming perspective. So I'll be reading 

K&R, 

Linux kernel Dev, 

Understanding Linux kernel, 

Linux programming interface ,

Linux system programming.


Is this flow correct?


Any other helpful book/tips for a newbie?



",1523418805.0
cpb2948,"out of curiosity, what is n in that section of the code? The side of the array a?",1522956092.0
TailSpinBowler,"Curious what this hex editor thing, with color highlighting.
https://static1.squarespace.com/static/5894c269e4fcb5e65a1ed623/t/5ac53c93aa4a99de7a8abf21/1522875563166/

And was fluorescence sitting on this bug? Or did he have to find it during the comp?",1523008816.0
TechLord2,Links to [Part 1](https://blog.trailofbits.com/2017/01/31/breaking-down-binary-ninjas-low-level-il/) and [Part 2](https://blog.trailofbits.com/2017/02/13/devirtualizing-c-with-binary-ninja/)  . ,1522858355.0
chatmasta,"Cool project. Not sure if you’ve seen this research on “evolving a decompiler,” but you’ll likely find it interesting: http://storm-country.com/blog/evo-deco",1522850970.0
BobFloss,I wonder why this (as far as I can tell) isn't based on [radeco](https://github.com/radare/radeco-lib)? It seems like a lot of duplication of effort.,1522867243.0
hipstergrandpa,Isn't pdc sort of similar? I'm still pretty new but glad to see there's work done in this direction.,1522853614.0
CPunch_71,possible competitor to hexrays?,1522876974.0
bizziboi,Is it me or does the sample output have a wrong comparison in the while?,1523126537.0
bike_brap,"Title is false.

It's extraction of the backup database that it still encrypted.",1522845083.0
ressdfw,"So is there a safer app that can protect its database from decryption? Messenger, Line, Wechat, Telegram, Viber, Tox, can these databases be safe? ",1523210017.0
The6P4C,"I'm not seeing how this is anything more than ""many applications let you write plugins, and plugins let you run code""? What's the merit to this in terms of reverse engineering?",1522841341.0
pogblack,"You wrote how the technique is performed, but you did not write about why this technique works.",1522764791.0
lurker10001000,"> Malware authors use many tricks to try to get ~~passed~~ antivirus solutions.

*past",1522726720.0
TechLord2,[**Sources** available here](https://github.com/theori-io/zer0con2018_bpak),1522567815.0
RenaKunisaki,Is that a PDF of the source of a page?,1522602654.0
igor_sk,previous work on this topic: http://stratigery.com/userlandexec.html,1522838258.0
lickedwindows,"Just a quick heads-up but it looks like that site uses in-browser mining. I originally view-sourced to see how they had so badly fucked up stopping the C code being interpreted as HTML and noticed a big chunk of webAsm in the page source. 

I didn't see any obvious ""we will background mine whilst you use this site"" anywhere, but at the bottom of their About Us they have apropos of nothing, an explanation of browser mining. Opening two-tabs turned my fans on so I'm guessing their implementation isn't particularly smart about multiple invocations.",1522591062.0
sickgrof,thankyou soo much!,1522815173.0
RockDiesel,"Opinions on [Hopper](https://www.hopperapp.com/) these days? Thinking of buying a license.

Looks like the most recent post about Hopper in this sub is 2 years old, so just wondering what the latest opinions on it are before I buy it.",1522511310.0
iamaforinvg,"Is there a list of functionally equivalent Windows API sequences?

I’m doing research on adversarial machine learning in the malware domain and I’m looking into replacing API sequences with other functionally equivalent sequences to evade malware detection machine learning models.  ",1522514780.0
rolfr,"This is a great writeup. It provides a lot of background, context, and references for all the various technologies and concepts used by the exploit \(perhaps an experienced reader would even say that there was too much context\).

TL;DR: The PS4 allowed any user to access the Berkeley Packet Filter \(BPF\) kernel\-mode device, whereas most other platforms would restrict access to the owner of the device. Thus, on the PS4, BPF is part of the attack surface for unprivileged users.

BPF contains an interpreter for user\-written packet filter programs specified as bytecode. The bytecode language includes an instruction to write to memory, which could be dangerous if abused. Therefore, like most such systems, BPF includes a validator to ensure that the untrusted packet filter programs can't do anything nefarious, such as access memory out of bounds. Thus, attempts to abuse BPF at run\-time have to find some way to bypass the validation checks.

One technique that has become common in these kinds of exploitation scenarios is to pass in a valid bytecode program, allow validation to pass, and then somehow overwrite the validated bytecode program with a malicious one that would have failed validation. That's exactly the strategy employed by this exploit.

In particular, the authors discovered that ""bpf\_setf\(\)"", called when installing a filter, and ""bpfwrite\(\)"", called when writing to the BPF device, have two complementary weaknesses. First, ""bpf\_setf"" will deallocate the old buffer containing BPF instructions, then allocate a new buffer, and copy the new BPF instructions into the new buffer \(prior to validation\). Second, ""bpfwrite"" will eventually execute a buffer of BPF instructions without synchronizing access to the structure containing the pointer to the BPF instructions.

Thus, ""bpf\_setf"" can potentially have a use\-after\-free vulnerability. If the buffer it frees is still being used in another thread, and if the new allocation size coincides with the old buffer's size, then it's possible that the new allocation will return the address of the old buffer, which will then be overwritten with unvalidated instructions. Since ""bpfwrite"" does not synchronize access to the structure containing the BPF instruction buffer pointer, it is vulnerable to a race condition where the contents of the structure might change during execution.

The exploit uses three threads. The first repeatedly installs a BPF filter that is valid and  benign. The second repeatedly installs a BPF filter that is invalid and malicious. The third repeatedly writes to the BPF device to trigger execution of the BPF filter.

If we win the following race, the result will be execution of an unvalidated BPF program:

* Thread #1 installs a valid, benign packet filter that passes validation.
* Thread #3 writes to the BPF device to trigger execution of the packet filter, but is pre\-empted by thread #2.
* Thread #2 tries to install an invalid, malicious packet filter that would not pass validation. In so doing, it triggers deallocation of the BPF instructions allocated and validated by thread #1. The memory allocator then returns the address of that same buffer of BPF instructions, and then bpf\_setf copies the invalid BPF instructions atop the valid BPF instructions.
* Thread #3 wakes up and continues to use its same buffer of BPF instructions, which has now been overwritten with invalid, unvalidated ones.

To detect successful exploitation, the malicious program returns a different value from the benign one, which is propagated back to thread #3 as the return value of the write syscall.

As for the exploitation method, I found it similar to \[Mark Dowd's old work on exploiting Flash\]\([https://www.cs.utexas.edu/\~shmat/courses/cs6431/dowd.pdf](https://www.cs.utexas.edu/~shmat/courses/cs6431/dowd.pdf)\). It uses surgically\-targeted BPF write instructions to overwrite the return address in bpf\_filter, as well as its first argument on the stack \(i.e., the QWORD stored above the return address\), by way of an invalid index to a BPF instruction that writes to a stack buffer on bpf\_filter's stack frame. The overwrites are targeted precisely, and nothing else on bpf\_filter's stack frame is unnaturally modified. The return address is overwritten with the address of a ""pop rsp"" gadget, which is used to initialize the stack pointer with the address of buffer containing a ROP exploit.

The purpose of the ROP payload is to add a new system call, which the authors call ""kexec"", that allows arbitrary code execution at an address supplied from user\-mode as a parameter. \(Actually, they overwrite an existing syscall handler to point its function pointer to the address of a ""jmp \[rsi\]"" instruction.\) Now user\-mode programs can supply kernel addresses to trigger execution in kernel mode.

Sony patched this by removing bpfwrite\(\) from the kernel.",1522372440.0
Codebender,"Something like:

    for (int i = 0; i < 0x38; i += 4) {
        if (!doSomething(&foo, &bar[i])) {
            break;
        }
    }

Or, if you're that sort:

    for (int i = 0; i < 0x38 && doSomething(&foo, &bar[i]); i += 4);

",1522363518.0
saudi_hacker1337,lolwut,1522331050.0
HairyNopper,"A surprise, to be sure, and not a welcome one",1522340499.0
TechLord2,"DdiMon is a hypervisor performing inline hooking that is invisible to a guest (ie, any code other than DdiMon) by using extended page table (EPT).

DdiMon is meant to be an educational tool for understanding how to use EPT from a programming perspective for research. To demonstrate it, DdiMon installs the invisible inline hooks on the following device driver interfaces (DDIs) to monitor activities of the Windows built-in kernel patch protection, a.k.a. PatchGuard, and hide certain processes without being detected by PatchGuard.

* ExQueueWorkItem
* ExAllocatePoolWithTag
* ExFreePool
* ExFreePoolWithTag
* NtQuerySystemInformation

Those stealth shadow hooks are hidden from guest's read and write memory operations and exposed only on execution of the memory. Therefore, they are neither visible nor overwritable from a guest, while they function as ordinal hooks. It is accomplished by making use of EPT enforcing a guest to see different memory contents from what it would see if EPT is not in use. This technique is often called memory shadowing.  


* [Video demonstrating that shadow hooks allow you to monitor and control DDI calls without being notified by PatchGuard](https://www.youtube.com/watch?v=UflyX3GeYkw)  

**Related Papers:**  

* [SecVisor: A Tiny Hypervisor to Provide Lifetime Kernel Code Integrity for Commodity OSes](https://www.cs.cmu.edu/%7Earvinds/pubs/secvisor.pdf)  

* [SPIDER: Stealthy Binary Program Instrumentation and Debugging via Hardware Virtualization](https://www.cerias.purdue.edu/assets/pdf/bibtex_archive/2013-5.pdf)  

* [Dynamic VM Dependability Monitoring Using Hypervisor Probes](http://assured-cloud-computing.illinois.edu/files/2014/03/Dynamic-VM-Dependability-Monitoring-Using-Hypervisor-Probes.pdf)",1522281892.0
kevin_at_work,"Is it just me, or is 4% code similarity pretty low to confidently attribute it to Lazarus group?",1522256349.0
0xF0xD1E,That’s sexist.,1522233137.0
BCosbyDidNothinWrong,Is this a tech conference or a night club? ,1522244932.0
tweettranscriberbot,"^The linked tweet was tweeted by [@womenintechfund](https://twitter.com/womenintechfund) on Mar 26, 2018 19:56:51 UTC (87 Retweets | 113 Favorites)

-------------------------------------------------

Are you a woman doing \#ReverseEngineering? Do you want to attend one of the top security conferences in the area? We are thrilled to announce that .[@l](https://twitter.com/l)has donated 2 tickets to attend the upcoming conference in Montreal! \#WomenInTech [https://womenintechfund.org/](https://womenintechfund.org/) 

[Attached photo](https://pbs.twimg.com/media/DZPUUAQWkAAxLLc.jpg:orig)

-------------------------------------------------

^^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1522228284.0
pagefault0x16,Year of the 486 desktop when?,1522190247.0
sysop073,If this actually works well that's exciting; I looked into this a few years ago and the existing plugins were terrible,1522216480.0
devnoname120,"This plugin is pretty neat.


Note that there also exists YaCo which is an actively maintained IDA plugin that enables collaboration. It uses Git as backend so it's pretty robust (if it breaks, just checkout the commit before it broke).


https://github.com/DGA-MI-SSI/YaCo",1522449843.0
mayhemsm,Not released yet but also check out solidarity. https://solidarity.re/,1522224061.0
dr_my_name,"I really like this tool.
It also worth mentioning that this tool doesn't just dump the modules blindly, it repacks them , so they are (usually) parseable by IDA.",1522160177.0
TechLord2,"**Attempts to address this question :**

*What types of obstructions and anomalies in the PE file can make the Windows Portable Executable Image Loader and other PE parsing programs fail to load the file or display an error message?""*",1522095520.0
bgeron,Link to the old website for the curious: https://web.archive.org/web/20060203012817/http://crackmes.de:80/,1522067250.0
Avery3R,Where's the search though? How do you filter by os and language?,1522091357.0
premeditated_worder,This is fucking awesome!,1522067946.0
anancap,"I'm pretty new to RE stuff and just like messing around with stuff when I have some free time.

Anyway, are these bins audited in anyway? Are they safe to run outside of a VM?

edit:too many words, I should proof read more.",1522117617.0
bootyhumper,great news!!!,1522074291.0
_exgen_,Nice!,1522078801.0
Aceofsquares_orig,I was looking for crackmes.de the other day and sadly found it was taken down.  This makes me happy.,1522099356.0
bleuge,"https://archive.org/details/crackmes_one

I found this archive.org mirror 
peoples are fast these days",1522143274.0
zware,Damn that's awesome! Found my old crackme there too :D,1522323737.0
TailSpinBowler,"Is this a firefox thing? I got 0byte download file. I checked download list, and saw these options.

[INFO]
This file is not commonly downloaded. -- crackmes.one -- 6.54pm

+allow download

Are you sure you want to allow this download?
This file is not commonly downloaded and may not be safe to open. It may contain a virus or make unexpected changes to your programs and settings.

You can search for an alternate download source or try again later.

1. Allow download
2. Cancel.",1522137465.0
goocy,These are probably the weights that tell their neural network how your face looks like. I doubt you can do anything with them.,1522050553.0
tweettranscriberbot,"The linked tweet was tweeted by [@knight47](https://twitter.com/knight47) on Mar 25, 2018 20:03:14 UTC

-------------------------------------------------

Downloaded my facebook archive and noticed that they're also storing some sort of facial recognition data. Wonder who they might be sharing this with... 

[Attached photo](https://pbs.twimg.com/media/DZKNNEZUQAAdqyM.jpg:orig)

-------------------------------------------------

^• Beep boop I'm a bot • Find out more about me at /r/tweettranscriberbot/ •",1522009643.0
Nz-Banana,"Some ""information"" here
https://www.facebook.com/about/basics/manage-your-privacy/face-recognition#1 ",1522046537.0
duckythescientist,"I like the script. I've rewritten the same type of solve script at least three times now. It'll be nice to have a generic one that I can reuse. I had started on one, but yours is finished. ",1521966589.0
Arrilius,"This tool was inspired by write ups like:

* [A binary analysis, count me if you can](http://shell-storm.org/blog/A-binary-analysis-count-me-if-you-can/)
* [GoogleCtf 2017](https://github.com/SPRITZ-Research-Group/ctf-writeups/tree/master/googlectf-2017/reversing/counting)
* [baleful Writeup](https://github.com/VulnHub/ctf-writeups/blob/master/2014/picoctf/baleful.md)",1521921081.0
malweisse,I'm building an IDA Pro plugin that allows you to use angr in the debugger. It has also a GUI. Check it on youtube: https://www.youtube.com/watch?v=orFYI9C1KqE,1521889059.0
deckbsd,Thanks for that :-),1521897917.0
TechLord2,"[Github Sources](https://github.com/kkamagui/shadow-box-for-arm).

Also, [Older Version of Sources](https://github.com/kkamagui/shadow-box-for-x86)",1521829322.0
ALittleSkeptical,"Read it twice, how do they claim to get the app base in attack 1? They clearly show the ropper with app_base but don't discuss how they get it. What am I missing? ",1521851553.0
malweisse,I developed a POC script for the libc leak out of curiosity. The chain is too long but it can be useful when you don't have so much time to write the exploit like in the ctf. https://github.com/andreafioraldi/leakyleak,1522089543.0
Benutzeraccount,csu? Also ick wähl Die Partei ,1521846364.0
ApprehensiveBoss,they had me at taint analysis ,1521847096.0
TechLord2,"**Excerpted from the Summary Abstract of the talk :**

*We show how program synthesis-based techniques can be applied to modern, commercial protection systems such as Themida and VMProtect. Further, we discuss the role of program synthesis in the landscape of modern deobfuscation techniques.*",1521831600.0
,"Important quote from the thread:

>There are actually a handful of people currently working on this [i.e. a Super FX implemention]

[PityOnU's GitHub repo](https://github.com/PityOnU/SuperFXinVerilog)

[RedGuyyyy's GitHub repo](https://github.com/RedGuyyyy/sd2snes/tree/gsu)

[megari's GitHub repo](https://github.com/megari/sd2snes)",1521826147.0
ythl,May also want to talk to the dude that made VeriSNES,1521844385.0
TechLord2,[Full Github Sources](https://github.com/danielbohannon/Invoke-DOSfuscation) and a [Short Intro](https://www.fireeye.com/blog/threat-research/2018/03/dosfuscation-exploring-obfuscation-and-detection-techniques.html) by Daniel Bohannon,1521825590.0
asdfmyasdfin,"Any good x86 assembly optimizers somone can suggest?

I am dealing with aome heavily obfuscated code and I am going to run a trace of it, dump it and then optimize it.

Would then optimizer be able to reco struct control flow structures like loops?

Ie say you have

inc eax

do stuff

inc eax

do same stuff

etc

Would that be optimized into

loop:

do stuff

cmp eax 10

jge loop",1522087982.0
Xarizzar,"Is there any way to obtain a copy of IDA Freeware 5.0 anymore? It seems to have been removed from the website, now that 7.0 is out",1522124045.0
snake_plisskin777,"Looking for a good RE class -walkthrough for (ARM) ios apps -malware and Hopper? I look at the some of the side bar items .. Six years old, some really good stuff Tho.. Thank you all for doing all you do.
And thank you in advance for the question. ",1522126875.0
gopherblane,"Hi RE'ers. I'm looking at an application in ollydbg, and tried running a buffer overflow PoC python script (CVE-2017-16930) which sends an abnormally long message to the API for the application, which results in a crash. When this happens, the last thing in the stack shows the instruction ""RETURN to ntdll.77407A04 from ntdll.ZwTerminateProcess"" and EIP isn't being populated by a string of AAAAAs (As the python script for the PoC would suggest?) - rather it points to ntdll.7740EA4C - in fact, I'm not seeing any of the 0x41s appear anywhere in memory. Does this indicate that the application is actually closing cleanly rather than through a seg fault? The application window shows the data before it terminates, so I know it's being passed to the application... Has this question even made any sense? ",1522132386.0
welcometotheregime,"That was an interesting read, thanks for taking the time to publish it.",1521844624.0
falllol,"I don't have advanced exposure to cryptocurrencies in general so sorry if this question is dumb.

I was under the impression that with Ethereum, everyone could access the source code of the contract. So, is that not the case? If the source code is optional, how can people verify the contract?

Or am I missing the point?

Thanks for the article.",1521853026.0
deckbsd,Nice :-) thanks you,1521915368.0
vopi181,"hmm autodownloader. im sure that wont be used for ""personal"" purposes. 

Seriously though I liked the article. I was just looking to RE a API for something and this was an interesting walk through. Thanks. ",1521743882.0
erictheturtle,"Back while trying to develop my own linker I looked all over for a good detailed spec on PE, but without any luck. Was I missing something or is it just not well documented anywhere?",1521732845.0
iagox86,I'm glad to see that SOMEBODY is using gpg!,1521657881.0
Struppigel,"GPG was used by ransomware before that one
, e.g., CrypVault.
https://blog.trendmicro.com/trendlabs-security-intelligence/crypvault-new-crypto-ransomware-encrypts-and-quarantines-files/",1521959819.0
drecklia,Oh man. This brings back good old memories.,1521684705.0
hipstergrandpa,"I was going a blog post also going through a bomb lab with radare2! However, I was going to write it as I was learning how to use r2, so I'll probably be using yours as reference now. Thanks!",1521655038.0
Ishmaeli_Pequodi,"Great video.  

My only suggestion is to slow down the mouse movements when providing demonstrations where you will have people following along. 

Keep up the good work.   ",1521579477.0
loociano,"It starts unpromising, but gets _very_ interesting midway.",1521501854.0
khasaia,"Any feedback would be greatly appreciated.

Twitter: https://twitter.com/_qaz_qaz",1521479676.0
coderob,"I love reading these

Thanks.",1521489891.0
blauefarbe,Good read! And im greatfull that i found your blog. Will be digging through your old posts. ,1521493038.0
loociano,"Hi there r/ReverseEngineering,

I started [this preservation project](https://github.com/loociano/tamatown) to bring TamaTown back online, or at least part of it. You can check the progress on http://tamagotch.org/tamatown.

Tamatown was an interactive website for the Tamagotchi virtual pets, that allowed players to earn prizes and items. In 2013, Bandai shut down all servers.

Thanks to the Wayback Machine I could recover some of the Flash (.swf) files that were once available, although many remain lost. Some people have done this in the past (see this [TamaTalk thread](http://www.tamatalk.com/IB/topic/194300-games-from-the-old-japanese-tamatown)).

The project is still in a very early stage, any feedback would be more than appreciated!",1521380265.0
0xF0xD1E,Cool idea but you should recreate it in not flash if you actually want to revive it for the modern era,1521451397.0
harrybalsania,This might have changed my approach drastically. I will probably use this daily once I give it a test run. ,1521349447.0
TechLord2,[Youtube Channel of the talks and Demos](https://www.youtube.com/channel/UCqCZRfUpl2azw8ZfvCiOIKA),1521312540.0
rolfr,"Hi, thanks for all of your contributions lately. I think a post like this one is probably better\-suited for r/netsec. In general submissions to this subreddit should contain something along the lines of assembly\-language code, or the description of a process of analyzing a system in order to figure out how it works. You have posted a good number of highly relevant posts, for which I am, and the community is, grateful. However, some of them aren't in\-line with the mission of this subreddit. Please don't let my request deter you from submitting on reverse engineering\-related topics, but please also keep the general network security posts for more suitable subreddits.",1521344489.0
nhaccount,"Is there any indication of what jobs or careers are out there for reverse engineering? This is something I am very interested in, the bits I have delved into have been quite fun, and I am looking at changing careers.

Sorry if this is too vague or in the wrong place.",1521514746.0
Lurkkeli,"Hi,

Im trying to RE an algorithm from 32bit elf that encrypts a part of a password and compares it to a value in memory. If its a match, it will keep going to the next letter of the password until its done.

I wrote the algorithm in python but Im running to some issues.
The algorithm always starts with:

mov eax, var_NumberOfCurrentIteration
cdq
shr edx, 0x1D

Where edx contains the piece of the password.
Im having hard time understanding cdq instruction and how to emulate this in python? 
What does this cdq do in the above context?
I guess this is my missing link in the algo since all else Im comfortable with.

Also if you have any tips n tricks on identifying encryption algorithms or reversing them. Im all open for ideas.",1521588359.0
Milk71,"Has anyone ever used Binary Ninja? How would you compare it to other Disassemblers like IDA/Olly/Immunity/etc? Also, is Binary Ninja a one time payment?",1521756730.0
,Are there any repos or places where I could find malwares/crackmes source code packed with obfuscation/anti-debugging/anti-disassembly techniques? Sometimes I have hard time getting past those during reverse engineering and I'd love to practice being able to peak into source code,1521470668.0
_-_throw-_-away_-_,"I think this is a pretty easy one, and maybe not the right place, but this book I'm reading said I'll constantly see `xor reg, reg` to set it to NULL/0. Why not `and reg, reg` or `mov reg, 0`? Is XOR more efficient for some reason?",1521508078.0
asdfmyasdfin,"I am trying to reverse engineer an executable that uses a lot of control flow flattening obfuscation (i.e, lots of subroutines that end with something like jmp esi, jmp eax) IDA Pro isn't able to resolve where the jump can branch off to and I'm not really sure what to do here.

I made a plugin for x64dbg ( https://github.com/JeremyWildsmith/x64dbg_scripts/blob/master/traceAreas.py ) that locates and monitors the branching instructions in a provided list of subroutines and generates graphml diagrams that I am reading (i.e example like this: https://i.imgur.com/kL4USza.png ) that I am viewing and analyzing in yEd live.

But it generates a lot of data. I know there is a vm hanging around somewhere in there and I am having trouble finding it just because of all the obfuscation. The collected control-flow data is here (warning, big text file, 45kb) https://pastebin.com/ePFGygb1

When I open it in yEd Live it looks like there are multiple virtual machines or something? Yeah not really sure where to go with this, if anyone has any advice that would be awesome.

If I look at the control flow in a radial diagram ( https://imgur.com/a/6QPgZ ) I think I can identify the center as some sort of dispatcher or interpreter for the bytecode instructions? But what throws me off is how much branching goes on later on through the execution.



Thanks.",1521518099.0
hipstergrandpa,"Might be a dumb question regarding radare2, but using the visual mode (VV) is supposed to give me the ASCII graph I thought. However, it only gives me the web GUI, which I'd rather not use at the moment while I'm learning. How do I access the ASCII call graph instead?",1521704707.0
RCEdude,"Does someone here have any paper on control flow rebuilding for dummies? Lets say i have a target

* Control flow is messed up within a method. Basically the job is to rebuild the method flow, which may be easier than rebuild a whole binary.

* i've programatically cleaned all the dead code and false jumps  from the method.
All i have is blocks of instructions beginning with a label and ending with a forced jump (with sometimes conditional jumps inside) or a return

* jumps (conditional and unconditional) are tied to labels and not relatives 


",1521814226.0
Em_Adespoton,"This works fine for code written by a single person or even a single coding house — but how does it handle code re-use?

I know I’ve used similar techniques to fingerprint code fragments from pastebin and stack overflow, but it seems to me that you must eventually get to the point where the binding code in compiled form is no longer unique enough to indicate any level of provenance.

And what about intentional obfuscation?",1521209792.0
iamLurch,"Very interesting. The accuracy achieved is quite impressive -- I think it would be lower when the technique would be applied in practice, since the assumptions that are made are quite strong. For looser assumptions (no disclosure about the compiler/optimization level, highest optimization level enabled, larger pool size), the technique is less accurate.

In practice, it might be interesting to give a fuzzier output - the esimated probability that an individual wrote the code for a certain binary. This would help when two programmers (say, Alice and Bob) write code that yields binaries with similar properties. In the current system, either Alice or Bob is picked -- there is no way to express that it might be either of them.",1521224609.0
,Relying on the C decompiler is a bad idea.,1521581731.0
mrexodia,"Jesus, so many ads",1521200744.0
yigitemres,"AdGuard [warns](http://i66.tinypic.com/2yma815.png) me about crypto-currency miner on the site!

",1522067873.0
TechLord2,"* [PDF Presentation - Step by Step Guide to run the PoC](https://github.com/convisoappsec/firefox_tunnel/blob/master/doc/Beamer_Keynote_looking_style.pdf)  

* [Youtube DEMO Video](http://www.youtube.com/watch?v=C23N4yDRkjU)  

* [Github Sources](https://github.com/convisoappsec/firefox_tunnel)  ",1521161938.0
rolfr,"Hi, what's the connection with reverse engineering?",1521213861.0
,Outpost Firewall used to complain when applications tried to launch a web browser for a variety of reasons surrounding this. ,1521224941.0
Asl687,used to do something very similar when we wrote games in 100% assembly language.(8bit & 16 bit days). if you need functions called after the current function your in and then return to calling function you could just add em to the stack.. dodgy but worked and was fast...,1521143810.0
ApprehensiveBoss,"I'm an embedded guy, would love to get into reverse engineering professionally...Should really think about how to make the hop. I love this stuff.",1521146027.0
linotype,Step 2 feels a bit like the step after “collect underpants”...,1521176096.0
igor_sk,is this your work?,1521141446.0
fsxfreak,"Nowadays, defenses such as ASLR and non executable memory prevent this exact attack. But, building up a chain of ROP gadgets can still work. One of the professors at my university invented the technique: http://cseweb.ucsd.edu/~hovav/talks/blackhat08.html",1521165932.0
TailSpinBowler,"Is stack pivoting a thing?
Looks like controlled memory is in the heap, which is non executable?
Stack grows top down, unlike the image.

/not hating.",1521192477.0
igor_sk,"no RE, no technical details. Please don't submit stuff just because it's ""mildly interesting"".",1521052995.0
TechLord2,"**AndHook :**  

AndHook is a lightweight hook framework for android. 
It is primarily written in C++ and easy to use.  

**Support :**  

Android 4.x or later (with preliminary support for Android 8.1, SDK 27), excluding customized Android ROMs such as YunOS.  

* Java method instrumentation (hook java method in Java/C/C++)
* Native interception (hook native C/C++ functions in C/C++)  

[Download Compiled Releases](https://github.com/rrrfff/AndHook/releases)",1521047540.0
Heroic_Nasty,"I'm an engineer with **Raytheon Cyber Security Innovations (CSI)**. I wanted to reach out to the /r/ReverseEngineering community and let you guys know what we're looking for. All comments here are mine and mine alone and not endorsed by Raytheon proper. Any questions leave them here (preferably so others can benefit) or PM me. I'll answer them if I can.

We're looking for people who want to break things and have fun doing it. We're looking for developers, hackers, researchers, and engineers with an interest in information security and low level development. We take our work and our fun seriously. We refuse any work that isn’t hard and engaging. We make sure our engineers have the tools they need to do their jobs, and focus on recognizing results. Surfboards, pirate flags, and DEFCON black badges decorate our offices, and our Nerf collection dwarfs that of most toy stores. Our research and development projects cover the spectrum of security technologies for Computer Network Operations. If it runs code, somebody in our office has looked at it.

**Key areas of focus include:**

* Reverse Enginering
* Vulnerability Research
* Wireless and Network Communications
* Hypervisors
* Malware
* Mobile/Embedded Development
* Win32/Linux Kernel development
* Constraint Solving
* Exploit mitigation techniques

Basically, if it’s in the cyber (yes we said it) realm, we’re doing something cool with it.

Information security continues to be a growth industry and we are constantly looking to find the right candidates who can do this challenging work.

Familiarity with at least one common low-level architecture (x86, ARM, etc) is important, as is the ability to conduct vulnerability research against applications compiled for that architecture. Experience with software protection and binary armoring is a plus, and familiarity with modern exploit mitigation techniques and counter-measures is a must.

Development experience is desired, but at least some scripting experience is required. Whether in Python, Ruby, or some other language, you should be capable of quickly developing the tools needed to help you succeed in your reverse engineering and vulnerability research efforts. The strongest candidates will have a variety of low-level operating systems experience as well as cross-platform vulnerability research. If you've written everything from a kernel paged pool exploit to a simple userland stack-based buffer overflow, built your own dynamic instrumentation and integrated a solver to help you identify and reach code, or modified emulators and JIT engines to add your own instrumentation to help you identify entire classes of vulnerabilities, you'll be right at home.

Aside from reverse engineers and researchers, we are also looking for developers with an interest in low level systems development. If you're comfortable living in the kernel, developing drivers, or similar kinds of work, we'd love to hear from you! C and C++ skills are definitely a plus.

**US Citizenship** & the ability to obtain a Top Secret clearance is required. If you're already cleared, even better!

Our headquarters is in **Indialantic, FL** with additional offices in **State College, PA; Annapolis Junction, MD; Ballston, VA; Dulles, VA; San Antonio TX; Austin, TX; Augusta, GA; Huntsville, AL;** and **Greenville, SC**. Relocation assistance is available.

You can find additional information by visiting [Raytheon Cyber](https://www.raytheon.com/cyber/), or just PM me directly.

For the personal perspective, I've been here for several years at our Florida location and it's awesome. We have a lot of flexibility in what we work on and we have a strong engineering led culture. Most of our senior management are engineers themselves and understand the proper care and feeding of technical folk. We feel a lot closer to a startup than what people normally think of when they think of defense contractors. Shorts, flip-flops and t-shirts are standard issue attire, we have unfiltered internet access for ~~Reddit~~ job relevant research, tons of free snacks, and whatever equipment you need to do your job. We trust you with root on your dev box. Want to run your hipster Linux distro of choice? As long as you can do your job with it, have at it.",1521088301.0
draperlab,"Draper is a nonprofit MIT offshoot in Cambridge, MA. We are actively hiring in the following areas:

* **Reverse Engineering**
* **Vulnerability Analysis**
* **Exploit Development**

We have the following positions open:

* **Senior and entry-level positions**
* **Summer internships**
* **Student Co-op positions**
* **Fellowships**

What makes Draper different? We are looking for individuals who want to design and develop capabilities in offensive security, as opposed to just working on projects for our customers. Instead of offering you 20% time to work on your own ideas like some companies do, Draper is offering you the ability to work 100% time on your own ideas. We are looking for passionate researchers who want to work on cutting edge security technologies.

US Citizenship is required. Draper’s headquarters is in Cambridge, MA, with offices in Washington, D.C.; Reston, VA; Annapolis Junction, MD; St. Petersburg, FL; Cape Canaveral, FL; Houston, TX; and Huntsville, AL. Draper provides relocation, conference attendance, on-site training, full tuition reimbursement, among many other great benefits!

PM for more details!",1521660786.0
MasterRevers,"This is a contract, remote work, work as many hours as you please. 

Need someone to assist in reverse engineering android apps (and even some web apps) obtain the API and automate requests to them and provide a library with function calls to key functionality e.g. registration, login etc. 

Willing to pay hourly or fixed price per project. Have workload to keep you busy 40+ hours a week or as little as 20 hours a week.

No location, language, education or other requirements. 

Assistance and training can be provided. If interested add me on skype: duplicate.mast",1522307284.0
mit_ll,"I run a fairly large research team at **MIT Lincoln Laboratory** outside of **Boston, MA** and we are looking for reverse engineers (of both software and embedded systems), people who can build and break software systems, and people interested in leading-edge dynamic analysis tools and instrumentation. We are passionate about computer security, and look to put real hard science behind it, but also share the hacker mindset.

**Requirements (for some loose definition of require, we encourage, facilitate, provide a lot of training):**

 *  Understanding of static and dynamic software analysis tools and techniques
 *  Assembly-language level understanding of how systems work
 *  Systems programming experience
 *  A great attitude, curiosity, and a willingness to learn
 *  US Citizenship and the ability to get a DOD TOP SECRET clearance

**Nice to haves:**

 *  Operating systems & kernel internals knowledge
 *  Familiarity with malware analysis techniques
 *  Familiarity with concolic exectuion, SAT, SMT solvers
 *  Knowledge of python, haskell and/or OCaml
 *  Knowledge of compiler theory and implementation
 *  Experience with x86, ARM, MIPS and other assembly languages
 *  Embedded systems experience
 *  A graduate degree (MS or PhD)

**Perks:**

 *   Work with a great team of really smart and motivated people
 *   We often play together on a very well-ranked CTF team
 *   Interesting, challenging, and important problems to work on
 *   The opportunity to work on important and challenging problems that impact the nation (we're not here to sell ads or push products)
 *   Sponsored conference attendance and on-site training
 *   Great continuing education programs
 *   Relocation is required, but fully funded (sorry no telecommuting).

Please PM if you are interested. HR stuff will come later, but I'd like to talk to you first, and if we seem like a match we can proceed from there. The people are brilliant, the work is challenging, and and the perks are great.
",1521041689.0
Cyberisabuzzword,"# Principal Financial Group - Cyber Security Penetration Tester  

* Business Area:	Information Services  
* Location:	IA - Des Moines  
* Career Category:	Experienced Professional  
* Full/Part Time:	Full-Time  
* Regular/Temporary:	Regular  
* Date Posted:	03/22/2018  
* Relocation Assistance:  Negotiable  

##Responsibilities:  
Are you a problem solver? Do you like complex, challenging puzzles? If so, this position might be just what you're looking for! This role offers an opportunity to conduct security assessments and detect potential weaknesses, while protecting financial customers. Principal is looking for a penetration tester who will use offensive security tactics during assessments. You will be conducting penetration testing and vulnerability assessments against a broad range of targets to uncover potential security holes that could be exploited by adversarial threat actors. You will also develop and assess penetration testing tools for use on engagements, draft deliverable reports addressing testing methods, actionable findings, and recommendations for mitigation strategies and comprehensive security program improvements.   
 
###Responsibilities:  

* Perform Penetration Tests and Vulnerability Analysis on web applications, mobile applications, thick clients, and embedded devices. 
* Adequately explain, present, demonstrate [when applicable], and document the operational impact of a vulnerability.
* Research and maintain proficiency in tools, techniques, countermeasures, trends in vulnerabilities, and other security topics.
* Analyze business impact and exposure based on emerging security threats, vulnerabilities, risks and help to adjust our overall security strategy accordingly.
* Perform technical security assessments as well as develop technical solutions to help mitigate security vulnerabilities.
* Stay up to date and be an active participate in the overall cyber security industry.  

##Qualifications:  
* Associate's or Bachelor's degree with a preference in a science, technology, engineering, or math related field or equivalent work experience (6 years of experience equates to an Associate’s degree when defining “equivalent work experience”) 
* 3+ years of relevant security consulting or industry experience
* Familiarization with XSS, filter bypassing, SQL Injection, etc.
* Familiarity with common reconnaissance, exploitation, and post exploitation frameworks
* Familiarity with assessment tools, such as scanners, administrative utilities, local proxies, debuggers, fuzzers, etc. 
* Ability to perform targeted penetration tests and exploitations without the use of automated tools
* Able to conduct Penetration Tests and Vulnerability Analysis using Automated and Manual TTPs
* Strong familiarity with OWASP Top 10   

###Additional preferred technical experience:  

* OSCP, GPEN, OSCE, GXPN or equivalent penetration testing certification is preferred.
* Deep understanding of cyber security concepts and the ability to device and execute appropriate solutions
* Knowledge of application reverse engineering techniques and procedures
* Have a solid working experience and knowledge of Window and Unix / Linux
* Experience with scripting (Windows or Linux), Bash Python, Perl, or Ruby

###Keys to success in this position:  

* Analytical with strong problem-solving skills and exercises, balanced decision making
* Ability to write clearly, succinctly, and in a manner that appeals to a wide audience
* Able to handle change in priorities 
* Have a passion for variety in their job
* Be a life-long learner to advance their technical skillset

You can [Apply Here](https://secure05.principal.com/hr/recruiting/ext/jobDetailLink.faces?seqid=1&jid=221596)
Message me for questions",1521813308.0
RedBalloonSecurity,"Red Balloon Security | New York, NY | Full time and Interns | Onsite | Visa welcome | redballoonsecurity.com

About Us:
Red Balloon Security is a venture backed startup cyber security company headquartered in New York City. Our mission is to provide embedded device manufacturers with strong host-based firmware security. We believe all embedded devices require strong protections against malware and intrusions, and seek to provide these protections to our customers. 

&nbsp;

Our key markets include enterprise equipment, automotive, aviation, unified communications, SCADA, Internet-of-Things, network infrastructure and more. There is a vast universe of vulnerable embedded devices deployed around the world that need security. 

&nbsp;

We have created a means to inject our Symbiote host-based security technology onto any device, regardless of CPU type, regardless of functionality, regardless of operating system and without changing the performance and functionality of the device. We do not require access to customer source code, nor do we require manufacturers to change their product design to accommodate our security solution.

&nbsp;


Red Balloon Security offers a full benefits package, 401k, a generous vacation policy, and paid health and dental plans. The company is located in Midtown West in New York City. We are an Equal Opportunity Employer of minorities, women, protected veterans, and individuals with disabilities.

&nbsp;

Open Positions:

* Security Researcher / Security Software Engineer 
 * Research embedded security
 * Design and implement host-based defense software for black-box embedded devices
 * Design and implement automated hardware/software testing infrastructure
 * Conduct offensive and defensive research on embedded hardware and software
 * Contribute to the FRAK (Firmware Reverse Analysis Konsole) framework
 * Perform hardware and software reverse engineering on embedded devices
 * Automate vulnerability identification for embedded software
* Python Engineer
 * Write awesome Python
 * Develop, test and maintain in-house FRAK (Firmware Reverse Analysis Konsole) framework
 * Scale reverse engineering and binary analysis toolchain towards a cloud-based infrastructure
 * Optimize performance of core backend when dealing with extensive operations over massive sets of binary data
 * Collaborate with security research staff to design and implement the infrastructure for the deployment of host-based defense software for black-box embedded devices
 * Streamline distribution of core product libraries and software toolkit
 * Design and develop large-scale automated test farm
 * Secure all the things
* Business Intelligence Analyst
 * This role supports the activities of Red Balloon Security through analysis, business development, and project management. A person in this role will research commercial and government markets for embedded devices and embedded device security. The business analyst will be expected to analyze collected data, determine what the data represents, identify trends, opportunities, and key decision makers, and present such findings to the internal management team. The analyst will also support Red Balloon Security's contract negotiation teams, develop relationships with customers, and participate in trade shows and demonstrations. Business analysts are often called upon to assist with accounting and perform project management tasks. There is also the opportunity to help develop Red Balloon Security's high level business strategy.
* Security Intern
 * Intern version Security Researcher and/or Python Engineer
* Business Intelligence Intern
 * Intern version Business Intelligence Analyst
&nbsp;

More detailed job descriptions: https://redballoonsecurity.com/jobs/

&nbsp;

To apply, email jobs@redballoonsecurity.com. Make sure to include what job you are looking for in the subject line!
",1522966224.0
MITRECorp,"The MITRE Corporation is holding an invitational event at our 300 Sentinel Drive (6th floor), Annapolis Junction, MD facility on Tuesday, May 15th from 3-6pm.
Register: www.mitre.org/invitational

This invitational is for folks to come in and learn a little bit about MITRE and why we are different.

MITRE is a not-for-profit corporation and our mission is to serve the public interest, solving problems for a safer world.  Here you have the opportunity to come up with big ideas that impact public – not commercial – interests.  Here we get to tackle some of the hard problems facing the public sector as well as the freedom to explore and innovate in ways that just aren’t feasible or attractive in the private sector.  We get to shape the way the world looks tomorrow.  

MITRE provides numerous internal research opportunities.  Can you think of something novel you’d like to explore with independent research?  Put in for an internal research proposal and make it happen!

Outside of work, MITRE gives you the flexibility to enjoy your life beyond the office.

We are seeking experiences engineers and SMEs for one or more of the following mission areas:
•	Acquisition
•	Algorithm Analysis
•	Antennas and RF Receivers
•	Artificial Intelligence
•	Cyber/EW Access
•	Cyber Operations
•	Cyber System and Protocol Research
•	Data Science
•	DoD/Cyber Policy Expertise and Joint Staff/OSD Experience
•	HW and SW Reverse Engineering
•	Infrastructure Device Analysis
•	Machine Learning
•	Mobile Device Analysis
•	Proof of Concept Exploitation
•	Software Defined Networks
•	Video/Media Forensics
•	Weapon System Analysis

Register at www.mitre.org/invitational. 
We have offices all over the US and overseas.
",1525801870.0
XD2lab,"**Windows Security Researcher** 

**Location: Singapore** (relocation as full time staff preferred)

**D'Crypt** is a Singapore-based high-value design and development house dedicated to providing highly secure and proven security technology to our customes. It is  our aim to provide our customers wiht best of breed technologies that integrate into their products and services, thereby enabling customers to enjoy sustainable distinct competitive advantages in their respective markets. 

At **Xerodaylabs**, a division of D’Crypt, you will get to perform zero-day vulnerability research with a dynamic team of security researchers from diverse backgrounds with distinguished credentials and experience, in a highly collaborative environment. We specialize in providing knowledge of software vulnerabilities to our customers as well as research cutting-edge tools to power the vulnerability discovery, analysis and exploitation process.  Job Description: This is an exciting role responsible for discovering and exploiting vulnerabilities affecting high profile off-the-shelf and commercial applications and appliances. The work includes bug hunting, reverse engineering, vulnerability analysis, exploitation and tool development.

**Job Description:** 

This is an exciting role responsible for discovering and exploiting vulnerabilities affecting high profile off-the-shelf and commercial applications and appliances. The work includes bug hunting, reverse engineering, vulnerability analysis, exploitation and tool development. 

**Primary Responsibilities:** 

•	Conduct zero-day vulnerability research on Windows platform at user and kernel space. 

•	Build, maintain and extend the distributed fuzzing framework for the discovery and triage of vulnerabilities. 

•	Assess if identified vulnerabilities are exploitable and determine the root-cause, using reverse engineering techniques such as static and dynamic binary analysis

 •	Develop proof of concept exploits to reproduce and demonstrate the impact of vulnerabilities

 •	Write summary and technical reports on new vulnerabilities 

•	Document and enhance the research framework, methodology and processes 

**Desired Traits:** 

•	A drive to succeed and a passion for low-level security, vulnerabilities and exploits 

•	A keen eye for detail and a persistent attitude to explore all avenues

 •	Able to work collaboratively in a team environment while also being self-motivated to effectively work independently. 

•	Organized thinking and excellent problem-solving with the ability to think “out of the box” 

**Requirements:** 

•	B.S degree in Computer Science, Computer Engineering or a related field preferred  

•	Knowledge of C/C++/C#, python, assembly language (x86/x64) or additional scripting and programming languages 

•	Familiar with static and dynamic analysis tools such as disassemblers and debuggers, and Windows operating system internals

 •	Keep up-to-date with the latest security vulnerabilities (e.g. reported CVEs), their impact and exploitation techniques 

•	Knowledge of different Windows mitigation controls (e.g. ASLR, DEP etc) 

•	Demonstrated experience in researching vulnerabilities or participating in bug bounty programs or other security related activities is advantageous 

**Perks:**

* Work with an awesome small team
* Training and conference attendance

Get in touch with us for the opportunity to be part of growing team. Email:xdl\_hr@d-crypt.com",1529916283.0
toxicosmico,"# Who are we?

**Hispasec Sistemas** is a pioneer company in the Spanish and Latin-american Information Security industry. Well known for the first security bulletin in Spanish (Una-al-día, circa 1998) and alma mater of the VirusTotal and Koodous projects.

We are looking for malware analysts, **either senior or junior profiles (Juniors, don't be afraid!)**. If the study and dissection of binary specimens is your thing, we have a operation table waiting for you. **Currently interested in REMOTE WORKING profiles, with the possibility of moving to our offices**.

# Requisites

* Deep knowledge of reverse engineering in Microsoft Windows environments.
* Skilled usage of the caracteristic tools: IDA Pro, OllyDbg, WinDbg, sandboxes, etc.
* Programing: High level languages (Python, C, C++) and x86 assembly.
* Be aware of the lastest trends in malware tecniques: crypters, anti-debuggers, detection of virtualized environments, ramsonware, etc.
* Good level of English language, both written and spoken.

# We also value

* Knowledge of reversing and malware trends for Android platform.
* Contributions to Open Source projects.
* Knowledge of Spanish language.

You can apply directly emailing us at [empleo@hispasec.com](mailto:empleo@hispasec.com)",1531402921.0
FocalPointAcademy,"I am an instructor/researcher with [Focal Point Academy](https://focal-point.com/academy). We are currently hiring for multiple positions with remote work available! If you are technical, enjoy public speaking, and are willing to travel, lets chat!

The official listing can be found [here](https://social.icims.com/viewjob/pt1521301562744665e9), but let me get you the main points: Travel is required, between 25% and 50%, with our busy season being Summer into Fall. A partial list of the courses we offer can be found [here](https://focal-point.com/services/focal-point-academy/technical-courses), with updates coming soon. Clearances are accepted but not required. As this allows for remote work with travel in the US, applicants must reside in the United States and relocation is not provided.

We are explicitly looking for strong reverse engineers, or at least people with a solid C background willing to ramp up quickly on RE. By no means are you expected to have a background with  everything we offer - just be good at what you do!

If you are interested or have questions, PM me with your resume!
",1521302030.0
Thomas_1835,"Hiring a Reverse Engineer to be our Company’s Dedicated Reverse Engineer
• Willing to by either the hour or specific things wanted (depends on how long a task takes)
• Offering good pay for straight forward tasks
• Will be reversing dumps/applications coded in C++ for specific functions
• For more information please send me a PM.",1527345166.0
SkySafeIO," [**SkySafe**](https://www.skysafe.io/) is looking for talented, driven **Reverse Engineers** interested in **drones**.

If  you love tearing apart binaries, reversing custom protocols, and  developing tools to abuse functionality, then SkySafe would like to hear  from you! We are looking for Senior Level REs that are excited about  reverse engineering embedded devices and related drone technologies.  Come join our small team of San Diego based hackers who enjoy daily free  lunch, full health coverage, wellness benefits, snacks, and flexible  work hours.

We’re continuing to grow the  world’s leading team on drone security. If you would like to learn new  skills and poke around interesting systems, while pushing the boundaries  of what’s possible in an entirely new industry, then SkySafe might be  right for you! Email us at [jobs@skysafe.io](https://www.reddit.com/).

**Responsibilities**

* Stay on the forefront of drone product development, releases, and hobbyist communities.
* Research capabilities and features of new systems, worldwide.
* Analyze hardware and software components, protocols, and data formats.
* Produce and maintain internal documentation of system features and interfaces.
* Stay current with embedded reverse engineering techniques.
* Work in a small team environment, leveraging version control systems, issue trackers, and messaging tools.

**Requirements**

* Experience reverse\-engineering hardware and software systems.
* Research capabilities and features of new systems, worldwide.

**Useful Skills**

* Vulnerability Research, Fuzzing, Exploit Development
* IDA Pro, JTAG, GDB, and other debuggers
* ARM, PPC, MIPS and other embedded architectures
* RTOS implementations
* Protocol analysis
* Binary exploitation, cracking, etc.
* Proficiency with software\-defined radio frameworks and instruments.
* Experience with radio communication systems, modulation techniques, error\-correction algorithms, etc.
* Experience with a range of embedded protocols, including USB, ethernet, I2C, SPI, CAN, etc.
* Experience in wireless system standards and technologies including OFDM, MIMO, CSMA\-CA, WLAN, GSM, and LTE.

The team is located in San Diego, with optional light travel.",1528504454.0
_mykill,"There are openings in FireEye's FLARE team:
<https://www.fireeye.com/company/jobs.html>

Search for FLARE on the jobs page above to find details about these positions:
* FLARE - Senior Vulnerability / Reverse Engineer - Remote OK
* FLARE - Staff Malware Analyst / Reverse Engineer - Remote OK
* FLARE - Staff Research Engineer - Remote OK
* FLARE R&D Manager - Remote OK
* FLARE - Vulnerability / Reverse Engineer (Top Secret) - Reston

Here are some of the things I and my colleagues do:

* Watch, learn, and often laugh, at an infinite conveyor belt of malicious software.
* Step up for the Mandiant Incident Response (IR) team after they walk into the next big breach and start throwing mountains of malware over the fence.
* Support the Mandiant Red Team in attacking hard targets and demonstrating impact.
* Attack apps, drivers, and hypervisors to circumvent security models.
* Analyze exploits and participate in 0day disclosure.
* Weaponize exploits and write backdoors, loaders, etc.
* Write tools to automate analysis at scale.
* Write debuggers, hooks, scripts, kernel modules, and hypervisor code to subvert anti-RE.
* Travel internationally as an instructor for internal, public, and private audiences.
* Write reports, publish blogs, and sometimes author finished intelligence products, to be consumed by the Mandiant IR team, iSight and threat intelligence staff, FireEye R&D, our customers, and the public.
* Write FLARE-On Challenge binaries and write-ups that are visible to the entire reverse engineering community.
* Create and improve public-facing tools such as FakeNet-NG, FLOSS, FLARE-VM, etc.

Supporting the Mandiant IR team puts FLARE in the front seat of our industry. Between IRs and our threat intelligence work, FLARE's tasking gives us firsthand visibility into some of the most interesting malware, such as:
* The malware used by APT29 to attack the Democratic National Committee (DNC)
* Malicious router firmware
* The XagentOSX malware, and other macOS samples
* Exploits and kernel shellcode thrown at customers in the wake of various hacking tool dumps
* Compromised boot records
* The source code and ancillary binaries/plugins, key material, and project files for the Carbanak backdoor

We have a laidback and fun team spread across the world. We set aggressive goals to do innovative work, but management is also good at acknowledging when we've been pulled in different directions. Working in FLARE means having your finger on the pulse of all the most interesting breaches as well as your finger on the trigger of some of the new tools and techniques that we create collaboratively with the Mandiant Red Team to penetrate customer defenses. I can't overstate how important it is to me personally to have a job that I can't wait to get back to every day. If you're looking for that too, then put in an application. We'd love to talk to you.
",1530900353.0
scopeviper,"Colsa Corporation – Aircraft Penetration Testers – Edwards Air Force Base, CA
I work on an aircraft research team and we are searching for team members that can help us conduct penetration tests on aircraft systems. The experience set we are searching for is pretty broad, but generally fits into 3 areas; IT system penetration testers, hardware/software reverse engineers, and embedded systems engineers. If you enjoy working in a fast-paced multi-disciplinary environment, learning new technology areas, and breaking things, this is the place for you. The group is well funded, and we are moving into a new lab facility in the second half of 2018. If you like aviation, working on the most advanced aircraft in the world is a plus. We provide a number of opportunities to learn ranging from on-the-job training with other team members to formal courses for unique technology areas. If you are interested, please message me and if we seem like a good match I will put you in contact with HR.

General Requirements: We realize that no one will have all of these qualifications. We are looking for people that can bring a strong foundation in one of the listed areas and are motivated learn the others.

**General Requirements**
• Bachelor’s degree in Engineering or Computer Science, or equivalent combination of education/certification and experience. 
• A great attitude, curiosity, and a willingness to learn 
• US Citizenship and the ability to get at least a DOD SECRET clearance 
• Software development experience is desired, but at least some scripting experience in Python, Ruby or similar language is required.

**Penetration Testers**
• 2yrs experience testing networks using Nessus, Wireshark, Metasploit, Kali, Nmap and related tools. 
• Certifications like CEH and OSCP are a plus.

**Reverse Engineers (Software and/or Hardware)**
• Understanding of static and dynamic software analysis tools and techniques. 
• Assembly-language level understanding of how computer systems work. 
• Experience with IDA Pro, Binary Ninja, or related disassembler tools. 
• Familiarity with at least one common architecture and associated assembly language x86, ARM, PowerPC, etc.

**Embedded Systems Engineers**
• Experience designing, building, or testing embedded systems. 
• Experience with a non-IP bus protocol (CAN bus, Mil-Std 1553, ARINC 429, etc). 
• Experience with real-time operating system environments like VxWorks or Green Hills is a plus. 
• Experience with aircraft avionics is a plus.

**Perks:**
• Work on very challenging problems that are important to the nation.
• Work with a great team of smart people in an environment where everyone is expected to learn and expand their areas of expertise. 
• Great pay and benefits. 
• Customer sponsored training courses on a wide range of applicable skills
• Our team has attended BlackHat for the past 2 years
• Flexible work schedule and part-week telework options",1521852731.0
,"Such a great tool - I recently had the pleasure of using frida on an Android game and its capabilities were seriously impressive, being able to hook and modify functions inside of the JVM (well, ART technically) and native code with the same tool at the same time is pretty amazing. ",1521043388.0
0xdea,"Thanks for this, keep up the great work!",1520981362.0
danrandt,"Frida is awesome! for me invaluable tool when pentesting mobile applications for Android, iOS. Thanks Ole and the whole team!",1521104926.0
TechLord2,[Chimay Red Persistence Exploit - PDF Article](https://github.com/BigNerd95/Chimay-Red/blob/master/docs/ChimayRed.pdf),1520965179.0
cyphrack,Nice,1520985228.0
CornerAssignment,"Hi!

I'm just starting to play around with reverse engineering, and so far I'm having tons of fun.

This is my first blog post. I know it's not the best article ever, but I think the result is pretty cool. Feel free to let me know what you think!",1520936815.0
TechLord2,"[Github Sources](https://github.com/ufrisk/pcileech)  

[Project Wiki Pages](https://github.com/ufrisk/pcileech/wiki/)  

Separate instructions for [Android](https://github.com/ufrisk/pcileech/blob/master/Android.md)  

[Youtube Channel](https://www.youtube.com/channel/UC2aAi-gjqvKiC7s7Opzv9rg) with example videos.  

**Capabilities:**  

* Retrieve memory from the target system at >150MB/s.
* Write data to the target system memory.
* 4GB memory can be accessed in native DMA mode (USB3380 hardware).
* ALL memory can be accessed in native DMA mode (FPGA hardware).
* ALL memory can be accessed if kernel module (KMD) is loaded.
* Raw PCIe TLP access (FPGA hardware).
* Mount live RAM as file [Linux, Windows, macOS*].
* Mount file system as drive [Linux, Windows, macOS*].
* Mount memory process file system as driver [Windows].
* Execute kernel code on the target system.
* Spawn system shell [Windows].
* Spawn any executable [Windows].
* Load unsigned drivers [Windows].
* Pull files [Linux, FreeBSD, Windows, macOS*].
* Push files [Linux, Windows, macOS*].
* Patch / Unlock (remove password requirement) [Windows, macOS*].
* Easy to create own kernel shellcode and/or custom signatures.
* Even more features not listed here ...  

**Functionality and Limitations :**  

- The Memory Process File System is currently only supported when running PCILeech on Windows.
- x64 64-bit target operating systems only, no 32-bit, no ARM.
- Read-only mode on memory dump files, read-write mode if PCILeech FPGA is used on a live system.
- Automatic process identification only in Windows memory dumps.
- Automatic identification of EPROCESS, PEB and DLL addresses in Windows memory dumps.
- May fail on memory dumps taken from Virtual Machines, such as VirtualBox.
- May fail for various other reasons as well.",1520909401.0
,[deleted],1520959042.0
ebeip90,Cool stuff! I'd recommend looking into the `memfd_create` syscall for reducing artifacts.,1520888315.0
mclarenmclaren,once the lib is loaded in memory with gdb you could also rm the lib from disk?,1523582584.0
HairyNopper,Project site seems down to me...,1520853791.0
TechLord2,"**Samsung Galaxy S2 phone** is also based on Exynos 4210, so it should be relatively easy to emulate its BootROM in QEMU.

This article describes how to extract BootROM (and associated fuses) from Galaxy S2 phone, implement additional required peripherals in QEMU (like the hardware cryptographic engine), and debug inevitable issues.   

[Source code has been published on GitHub](https://github.com/frederic/qemu-exynos-bootrom).   

We'll also take advantage of the dynamic debugging capability offered by QEMU to have a quick look at secure boot implementation.",1520846526.0
LpSamuelm,">1. Take the IC out of the circuit board
>2. Mill it down until the die starts to show
>3. Draw the rest of the owl

This is cool, but... I'd really like to know *how* to successfully decap a chip using acid, and how to successfully solder at such incredibly fine pitches. Perhaps you've got that info lying around somewhere else?",1520839995.0
TechLord2,"[Full Github Sources](https://github.com/Cisco-Talos/pyrebox)

PyREBox is a Python scriptable Reverse Engineering sandbox. It is based on QEMU, and its goal is to aid reverse engineering by providing dynamic analysis and debugging capabilities from a different perspective. PyREBox allows to inspect a running QEMU VM, modify its memory or registers, and to instrument its execution, by creating simple scripts in Python to automate any kind of analysis. It also offers a shell based on IPython that exposes a rich set of commands, as well as a Python API.

PyREBox is currently under development, and still does not support every architecture and operating system. Nevertheless, this support will be extended in the future. We believe this framework can be valuable for the community, and we invite researchers to contribute with new scripts that can unleash the full potential of PyREBox. ",1520771270.0
danrandt,sounds VERY cool and powerful,1520853975.0
khasaia,"Any feedback would be greatly appreciated.

https://twitter.com/_qaz_qaz",1520769178.0
Meral_Harbes,Damn this is well made. It's the right speed and answers a lot of questions before they pop up in my mind. Great work!,1520756024.0
forensec,What a great video. Thanks for posting,1520763467.0
blauefarbe,"Really good work, especially the use and diversity of standart tools thats is demonstrated. Hoping for more content!",1520766204.0
agent00420,"Excellent video! If you’re planning on making more, maybe one about determining encryption type and how to crack common passwords?",1520793060.0
missing-data,"For a GUI version on Windows, I've found 7-Zip file manager useful for exploring binaries.",1520762335.0
,[deleted],1520787758.0
,">So as the title says, this post is about the Xband Modem for the sega genesis and super nintendo. Myself and a few others have been chipping away at the xband over the years until we ended up breaking through a few major barriers. We currently have quite a bit of control of the modem and can make it do quite a few things but are still working on a few key items. We don't really have an ETA here but we want the modem to be able to be used as much as anyone else out there. Please get the word out and share this information/video if you would like to see the xband modem become useful again.  
The goal is to restore the network and continue to add more titles and features. Currently on facebook we have the xband group which is closed but approval isn't terribly difficult. We also launched Retro.Live (www.retro.live) which is admittedly super super lacking and basic and just a standing site but it links to our patreon that we are running for anyone that wants to donate and help this project along if it peaks your interest.

Source: [ASSEMbler forum thread](https://assemblergames.com/threads/x-band-modem.66403/)

[Their YouTube channel](https://www.youtube.com/channel/UCso1HT_SsDl8cnPlL2pgqqw)

[Twitter account of one of the devs](https://twitter.com/Krazystyle/status/896574445464293376)

[Facebook group](https://www.facebook.com/groups/xband2)

You can also find this on their webpage:

>Retro.Line is a crazy experiment to build a free and open phone network that supports dial up. We needed to do something like this so we could (in at least this example), take the 800 number’s embedded in the software of the devices that Retro.Live supports, as well as allow people to access those servers without having the outrageous monthly fee’s associated with land line phones (If you can even still get them!).  
We are eventually hoping to be the open and free solution for dial up BBS’s, and dial up based games.  
Retro.Line is in beta, and currently requires an unlocked Linksys SPA 1001 (About $15), and a Free Retro.Line account. Swing into our discord for more details.

If you don’t know what the XBAND was about, or you want to learn more check out:

* [XBAND (Wikipedia)](https://en.wikipedia.org/wiki/XBAND)

* [Interview: Konstantin Othmer (Catapult VP of Product Dev.)](http://www.sega-16.com/2007/07/interview-konstantin-othmer/)

* [Sega Genesis XBAND Commercial](https://www.youtube.com/watch?v=BF-BS5PRLbs)

* [XBAND Promo Video](https://www.youtube.com/watch?v=HnnND_UTU6Y)

* [XBAND source code on GitHub](https://github.com/X-Band)

Other similar projects:

* [Gensoip](http://www.sega-16.com/forum/showthread.php?26831-Gensoip)

* [First network game for Mega EverDrive (video by Krikzz)](https://www.youtube.com/watch?v=m6OeJYWAJ6c)

* [Online with the Sega Dreamcast and a DreamPi in 2018](https://www.youtube.com/watch?v=9jo8jdvWrBA)",1520711257.0
ForgedBanana,This is actually about *cdecl*.,1521001475.0
GrizzlyBear45,"Very intresting reading. I missed the detail of deepsound watching Mr.Robot :D
Thank you for sharing!",1520637328.0
asdfmyasdfin,"Any good books that cover unpacking in detail, especially with modern packers that virtualize code with randomly generated vms?

I've only ever seen this topic glossed over in any reverse engineering related book and its starting to irritate me how hard it is to find thorough information on this topic.",1521004071.0
edward_snowedin,"I am looking for forums or other resources that have information regarding kernel drivers, rootkit, shellcode, hooking methods/code injections, and other fascinating topics.

I am disappointed that, for many of my searches, unknowncheats is often the top result, and while I don’t want to take away from many of their brilliant users, I am looking for something a little more advanced (focused?)
",1520638318.0
asdfmyasdfin,"Where do you guys go to find documentation on the internal documented windows API, in kernel and user mode. Any plugins for Ida or x64dbg that make this functionality more easily accessible when you encounter these apis un disassembly?",1520808313.0
,[deleted],1520877840.0
rootb3r,"https://www.reddit.com/r/securityCTF/comments/841r5h/looking_for_free_tutorialsvideo/

Pls, can someone answer my question from above thread?

Thanks.",1520918889.0
c-pid,"I have a .NET WPF application consisting of two .exe files and some DLLs. It's obfuscated with eazfuscator.NET in an unknown version. I deobfuscated it using de4dot. Sadly the unobfuscated application crashes when I start it. I tried runing de4dot with --dont-rename but the deobfuscated application still crashes. (Can't provide crash log right now, will provide later).

Has anyone expierence with reverse engineering a WPF application? What's my best bet here? Is there any more ressource about reverse enginnering a .NET application? I would like to debug it in visual studio. The application does some weird loading of an encrypted file with some custom Streamer class. I expect some fishy stuff there and I would like to know what exactly it does there. Would be nice if somebody could point me to the right direction.",1520971906.0
RodrigoDron,What are the most popular topics related to Software Reversing?,1520843679.0
TechLord2,"SharpShooter is a payload creation framework for the retrieval and execution of arbitrary CSharp source code.  

SharpShooter is capable of creating payloads in a variety of formats, including HTA, JS, VBS and WSF. It leverages James Forshaw's DotNetToJavaScript tool to invoke methods from the SharpShooter DotNet serialised object.  

Payloads can be retrieved using Web or DNS delivery or both; SharpShooter is compatible with the MDSec ActiveBreach PowerDNS project. Alternatively, stageless payloads with embedded shellcode execution can also be generated for the same scripting formats.

[Github **Payload Generation Framework ** Sources](https://github.com/mdsecactivebreach/SharpShooter)",1520472027.0
whitem00s3,"Hey Nick, impressive work! I'm by no means an expert, but a student in IT Security and CSCI and ironically learning assembly this semester. I do have a few comments on the video however.

First, thank you for getting rid of that blue bubble thing in your first video. It drove me nuts!!

Second, I would have liked to see you actually walk through the process of performing the hack in the video. You did a great job of walking through conceptually what was happening in your several stages of the hack in the editor but if I'm watching these videos I really want to see you do them in action while you talk me through the concepts as well. Show me the jumps, show me why the comparison between %DX and 0x880 is there in the debugger. Show me what happens after stage one when there is no stage two, then put stage two, etc. I wanna see that! I know you said you do this on stream normally but if you're looking to do youtube videos, I'd recommend doing a more thorough walk through.

Lastly, I think ""How To Hack"" as a title is a bit misleading. This isn't an instructional teaching but more of a walk through (albeit conceptual) of how you performed your hack on this ctf. I'd suggest using a title that better represents the videos. If I searched youtube for ""How to Hack"" and I clicked on this video, there's little chance that I fit in the criteria of knowing assembly, but rather a novice with little to no knowledge. I'd suggest something like ""pwnable.kr echo2 walk through in assembly"" since that is a little more descriptive of what's going on. If you want to do a How To Hack, I'd suggest with a bit more of rudimentary CTFs by using python, kali, and vulnerable VMs or something similar. 


I know this is only your second video, and I really enjoyed the hack as I'm learning assembly. However it's very advanced and could use more guidance and walk through. Let me see you write that script and walk my noob ass through it!

Looking forward to your future videos,
Moose 

Edit: grammar and words",1520570504.0
rootb3r,Can you make more tutorials on the same and other technique's used in dumping flash? I'm specifically looking for dumping RTOS from DSP and other processors in the SOC any info regarding this would be helpful.,1520701868.0
perihwk,For people who are interested in getting into cryptography I highly recommend working through [Cryptopals](https://cryptopals.com/). They are a challenging and fun way to learn both the basics and some more advanced techniques.,1520398317.0
ScyllaHide,"interesting! thanks for sharing.

but how high is the possibility that somebody still opens an excel file from an unknown mail adress? (i never got this, why this still works.)",1520420595.0
,[deleted],1520387679.0
0xad,"This is 101, explained gazillion times already. -1

Also, this website definitely does something funky. Reported as spam.",1520408845.0
khasaia,Any feedback appreciated: https://twitter.com/_qaz_qaz,1520356878.0
,[deleted],1520357378.0
WeakGlutes,Would love to see this get somewhere. Get a mod to play as the ninja. Ninja snake vs Gray Fox would be fun,1520381460.0
havok13888,I'd be interested. I'm experienced with software development but just a newbie with reverse engineering. Definitely going to keep an eye out on this when I feel I can contribute without being a burden.,1521415918.0
Zophike1,Can someone give an eli5 on the paper ?,1520341934.0
asdfmyasdfin,This is interesting. Anyone here have experience using this with themida?,1520447607.0
verideth_01,"This title gave me uh, really weird thoughts.",1520278619.0
TechLord2,"[Link to Github Sources](https://github.com/mhelwig/apk-anal)

What does it do?

It's an static analys tool for APK files based on radare2, apktool and APKiD. It tries to quickly determine interesting features like root detection, emulator detection, unusual files, URLs, IPs, interesting API access (camera, mic, bluetooth, nfc, location, fingerprint...) etc.

Under the hood, it uses radare2 to look for certain strings, methods, symbols and imports in the dex file(s). It also extracts the APK and disassembles it to smali files (using apktool) so you can continue your analysis afterwards.

When doing extended analysis (via --extended flag) APK-Anal tries to find cross references within the code to show you which methods access certain strings, files, urls etc. so you have a starting point for further analysis.

The script was more or less quickly hacked together and only tested with a handful of malware samples. Don't expect too much. You might get similar information using online services like ""koodous"". Still, it's useful for quick analysis on your local system.

This script was based on an article by @trufae on analysing APK files with radare2: https://www.nowsecure.com/blog/2016/11/21/android-malware-analysis-radare-triada-trojan/",1520278240.0
frothface,"Wow. This is something I would never even think to try, because I wouldn't imagine it could be this simple.",1520281259.0
bsmt,"A friend of mine did this same thing a while ago, but by inserting a dylib that overwrites the characterLimit symbol. https://twitter.com/kracksundkatzen/status/930215665239248896",1520317113.0
o_dub9,You guys are great. There are lot of smart ppl out there but very few that can explain clearly what they are actually doing in a way that ppl like me can follow along. Super job!,1520226336.0
charlie_gaspar,"What you think about make a 101 Reverse Engineering for beginners? It's hard to find good and updated material about RE, I also ♥ the way you transmit knowledge.",1520298011.0
TechLord2,"All @offensive_con slides released! Include all 010 templates for Intel ACM and Boot Guard (KM + IBBM). All these details been Reconstructed from AMI FW. Discovered few Intel Boot Guard bypasses: 2 SW + 1 HW. Never underestimate RE in your Threat Model! , etc",1520145483.0
fridayRE,"there is not even a Makefile, what a joke",1520247531.0
verideth_01,"HTTPS is setup, heres the HTTPS url: https://reversing.re/",1520067420.0
jaheave,"I'm attempting to reverse engineer an old DOS game in IDA, and I'm having difficulty getting the binary loaded correctly.  I have some experience with linux, but I'm new to DOS executables.

The file is GERMANY.EXE and available for download from here:

https://www.myabandonware.com/game/kingdoms-of-germany-305#download

The file runs in DOSBox without any problems.

When I open it in IDA, I select ""Binary file"" and get a pop-up asking about 16/32-bit mode.  I don't really know which it is - I thought IDA would tell me.  Anyway:

Attempt 1: I select 32-bit.  Next, I get a pop-up:

""IDA can not identify the entry point automatically as there is no standard of binaries.""

Maybe 60% of the file successfully disassembles into function.  What I don't have is any information about where the binary accesses something external to itself.  If this were a linux file, I would expect to see lots of calls to named libc functions, for instance.  For a DOS file, I expected at to at least see some function names where I could google what they do.

Also, I can see lots of strings that are in-game messages (0x43B46: ""Wall Sections Breached"", for instance.)  However, IDA has no recognition of the strings; I have to hit 'a' for them to appear as more than a sequence of db's and there are no references to the strings.  Meanwhile, there are plenty of references pointing at uninteresting data locations - maybe all references are off by a constant and thus hitting wrong locations, but I'm really just guessing.

The two main ways I know of to start static analysis are looking at external function calls (or named symbols) and to look at string references, and none of them work here.

Attempt 2: I select 16-bit.

Absolutely no analysis happens by default - I get raw bytes, without even the 60% made into functions.

Attempt 3: Backing up a step, when I open IDA, I select ""MS-DOS executable (EXE) [dos.dll]"" instead of ""Binary file"".

I get the pop-up:

""The input file has extra information at the end (tail 4E6E5h, loaded 501h), continue?""

As the message implies, when I continue, I see only 0x501 bytes loaded.  (The full file size is close to 0x4E6E5 + 0x501.)

Any guesses as to what I need to do to get string references and/or external function calls parsed?",1520017156.0
Failure__Overload,"I have a piece of equipment that is controlled by a microcontroller and provides limited access in ""Customer Mode"", via RS485.  I have very good reason to suspect that I can obtain access to a Factory mode, if I can just find the right term to use.

My question is this; does anyone know of a list that would be appropriate for use with a dictionary attack to gain access to this mode?  I know how the ""customer mode"" protocols are structured, so I am guessing that the ""Factory Mode"" commands are the same, but I just can't seem to find the right terms to try.

The MCU is locked to prevent reading out the firmware, which would have made this much easier.  ",1520041553.0
asdfmyasdfin,"I'm trying to reverse engineering a target packed with themida protection - and I have unpacked lots of targets before but I cant seem to get this one unpacked.

Based on the type of target and its performance reqirements I am pretty sure it isn't virtualized - which is nice but I still can't locate OEP to do the dump.

I have tried a couple anti-protection plugins but they're missing something, I've also installed a custom rdtsc driver to detour some of the rdtsc checks I found while tracing through.

There is just an insane amount of garbage code, anti-debug checks etc, not really sure where to go with unpacking this or locating the anti-protection mechanisms it is using that I am not circumventing.

I'm thinking I can probably just dump the processes after it is already running; I kinda want to learn how to unpack these things though.",1520244230.0
dehriva,"(This is a repeat of question from 2 weeks ago that went unanswered) With the rise of AI(and possibly other fields in CS too but well AI is probably the focus of most discussions), there's a lot of talk about automating several tasks. I've seen some work about using AI in binary analysis such as function detection and function signature extraction(although results of some have been disputed for possible bias in testing set). What's the possible impact of such advancements(not just in AI) on reverse engineering and binary analysis? What's the future of these fields possibly going to look like in a few years time?",1520051237.0
rootb3r,"I'm looking for resources to learn RE'ing bootloaders and other firmware like RTOS and possible attacks and vulns on the same. Something like baseband attack on the DSP of SOC in our smartphone 

OR 

dumping the firmware from embedded and IoT devices and RE'ing them.

Also any resources regarding rootkits would be helpful.",1520355586.0
CornerAssignment,"What kind of risks do I run by letting malware run in a VM with a NAT network - not using another VM to whitelist and manipulate the traffic, not sure about the correct term here - for the purpose of analysis?

I'm analysing windows malware on a linux host, so I assume the only likely problems would be damage that the malware might try to make online with my connection.

What do the professionals usually do? :)",1520359243.0
Azer0s,"Hello All,

I just came accros a comment on news.ycombinator.com, which talked about Certificate Pinning (Facebook's app in this case): *If you're the reverse engineer and I'm the app author, you find/replace my CA file. Then I respond (or anticipate!) by checksumming the file to detect tampering. Then you respond by find/replace on the checksum.

Then I obfuscate the checksum string. Then you respond by faking out the platform's checksum API so that it always returns true. Then I respond by computing a checksum that I know should fail and verifying that the checksum API isn't just always returning true. Then you respond by faking out the platform checksum API with a whitelist of blobs whose checksum it should lie about.

Then I respond by statically linking my own checksum verification code into my binary instead of calling the platform's. Then you respond by patching my binary to jump around the code. Then I respond by using code obfuscation techniques.
And on and on. *

I was wondering if you encountered such cases IRL, or if this is more of a fictional scenario? I know this can be done, but is it really?",1520500677.0
joxeankoret,"I fail to understand why the guy wrote his rudimentary program diffing tool instead of using Diaphora, BinDiff, Darun Grim, Turbo Diff, radiff, etc... Or, if the person wants to compare binary data aligning and stuff, radiff, Beyond Compare, bdiff, ...",1519986847.0
Dwedit,Is this a disassembly followed by ignoring the literal values?,1520003032.0
_WhatTheFrack_,"This is what CSRF prevention is for. 

Interesting concept tho",1519959898.0
reddithater12,Amazing. Does anyone have a sample of  this? I would like to challenge myself.,1519990262.0
truelai,Stellar work.,1520006877.0
peter_gazin,u/rolfr -- I thought you had done this in one of your earlier posts before the MS team?,1520360237.0
TechLord2,Note: Source Code for the demo available [here](https://github.com/zodiacon/InterceptionDemo),1519883610.0
loociano,"Hi /r/ReverseEngineering!

Inspired by this [29C3 talk](https://www.youtube.com/watch?v=c4PkcZScBV8) by /u/natashenka_ about Reverse Engineering Tamagotchis, I decided to create [this website](http://tamagotch.org) to document how Tamagotchis work, from a technical POV.

Hopefully some of you enjoyed the talk too and will find the website useful. Let me know if you have any feedback!",1519855264.0
herrcore,"Hey Nick I used to watch your xenobot dev streams on liveedu a couple years back, awesome to see you doing some security focused vids!",1520204397.0
pocorgtfoftw,"I'm sure it's fine and all, but adding the words ""Completely LEGIT Code"" only makes me think the opposite of it.",1519794499.0
igor_sk,"what does ""LEGIT"" even mean here?",1519810959.0
IAmALinux,"Add the MIT license, please.",1519822999.0
Johner1261,"> With this version of IDA we publish the decompiler intermediate language: the microcode.






God, I wish IDA were cheaper. That is really cool. Is there documentation for this available, without paying? I just wanna see how it looks, beyond what the image shows.",1519759823.0
joxeankoret,"Opening the micro-code is a big step. I'm not sure yet how good it will be for many data flow analysis problems. Although, the 'proof of concept' it's build on top of it, is the only good decompiler out there.",1519748635.0
cmsimike,One of these days I will pick this up!,1519748050.0
,[deleted],1519771592.0
Statically,I bloody well did not!,1519751494.0
edward_snowedin,"I am doing some side work on a C# app and they are obfuscating their main DLL. This will be a valuable resource for me if they decide to change their obfuscator.

In a nutshell, thanks!!",1519798708.0
SomeRandomBuddy,Awesome! Really tedious obfuscation but great work detangling it all,1519740042.0
gnarlin,"Amazing work!  
I hope that the developer considers implementing the support for his mouse into the libratbag project which is gathering up support for as many mice as possible to create a generic mouse support and control library for gnu+linux.",1519704384.0
irve,The obscurement probably stems from the hope that manufacturer won't create a chinese fake without going through the same steps.,1519711811.0
,"Great write up! I've been interested in this sort of thing for a while now, strange that the device uses some sort of obfuscation to encode things... not sure why the manufacturer would decide that has any purpose for mouse settings?

I did something similar a few months back with another mouse, although solely relied on wireshark's usbmon support and pyusb to implement a way to change things on Linux (see [here](https://github.com/Jigoku/ayatool) and [here](https://bytepunk.wordpress.com/2017/03/25/reverse-engineering-a-usb-mouse/) if interested).

The one thing that stumped me with this mouse was the hardware based macro support, thanks for writing that part up at the end, i'll have to check if my mouse does something similar.",1519722630.0
philipwhiuk,"You're wrong. I own this mouse (or maybe the prior model) :)

I was just happy when the kernel was patched so it even worked at all: https://github.com/torvalds/linux/commit/d4f5189052c68f5bae3aac62b357577ecb862fee",1519731226.0
ragnar_graybeard87,"That's cool. I feel like that info was worth more than 15,000 to them though.",1519648205.0
jak1715,"So, they keep parallel  sites with all user data but incomplete security, that seems to me a really big deal.  ",1519690440.0
rom3ocrash,Lol,1519676827.0
FaithLV,How did you know the verification number range? Why wasn't the range 0 - 999999 ?,1519714448.0
,"[Read the discussion here, please](https://github.com/hex007/freej2me/issues/27).

This could potentially improve the 3D support in J2ME emulators such as [FreeJ2ME](https://github.com/hex007/freej2me) or [J2ME Loader](https://github.com/nikita36078/J2ME-Loader). I post this because maybe someone would like to look into this.

You may also find this discussion interesting: [The state of j2me/midlet/jar emulation, and the in-danger software for the platform that needs to be preserved](https://www.reddit.com/r/emulation/comments/4o2er3/the_state_of_j2memidletjar_emulation_and_the/)",1519608139.0
FlyingTriangle,Oh hey this is my tool. I've done a lot of testing and it seems to be largely bug-free. I'm still testing and adding to it for the next few weeks before a stable release annoucement so if anyone has any suggestions as to what features might improve this I'm all ears.,1519669938.0
yardightsure,Nice! How to defend against this?,1519637700.0
stupicsec,This seems incredibly fun but I have no idea what is going on. But I really want to.,1519602269.0
bleuge,"When i read the ""call eax"", was like, wait..., what?
Great!",1519641810.0
sbmotoracer,"Thank you for the responses.
How do you remain motivated when dealing with long strings of code?  Sometimes I feel like Im getting no where...",1519422233.0
smirnoffq,"Hey, I started reading ""practical malware reverse engineering"" book, and I checked for jobs in that field, but (at least in Poland) there is little amount of offers. Is this field worth going in (in terms of carieer) ? I want to work in IT and have very big struggle in chosing my specialization.",1519416104.0
,[deleted],1519698110.0
JustFinishedBSG,"Are there any ressources to learn reverse engineering ? I want to take things into my own hands to write a ""driver"" on Linux I'm apparently alone to want",1519739034.0
HiFiDuino,"Any up to date material on reversing macOS/iOS?

I’ve done some reversing on windows but recently got a MacBook Pro and have begun to develop iOS apps. I’m looking for anything that can point me in the right direction (tutorials, recommended reading, etc.) The crackme’s and things I’ve found are all out dated.

On the other hand, would it be more feasible to simply stick to windows given my overall lack of RE experience?",1519852919.0
TycoDJ,"Is there some sort of Reverse Engineering discord channel where I can ask questions and where other RE stuff is shared?

There has been posted a link 2 months ago but it isn't valid anymore.

(also the first question that I'd ask I'll just ask here; do I have to use IDA 32-bit to decompile 32-bit software? Because when I press F5 in IDA 64-bit nothing happens but on 32-bit, which I've been using so far, F5 runs the decompiler. IDA 6.8)",1519907927.0
rockstar504,"Seems like a good read for a noob like myself, saved. Thanks.",1519362646.0
verideth_01,"I just have to fix a few things up, figured I'd share it right now in its current state, also its windows only.",1519311518.0
johkotorm,"Hey, can you please tell us which font and color scheme do you using in Visual Studio?",1519316847.0
mostthingsweb,"Interesting and nice write-up, but I don't think anyone should really be surprised/concerned that double clicking a URL follows it.",1519301797.0
danrandt,but it's an issue in Qt framework ?,1519295126.0
ph00k,How exactly is it RCE? I can't find the _remote_ part,1519314719.0
TechLord2,"Links for the Phases #2-4 : [Devirtualizing FinSpy, Phase #2: First Attempt at Devirtualization](http://www.msreverseengineering.com/blog/2018/2/21/devirtualizing-finspy-phase-2-first-attempt-at-devirtualization), [Devirtualizing FinSpy Phase #3: Fixing the Function-Related Issues](http://www.msreverseengineering.com/blog/2018/2/21/devirtualizing-finspy-phase-3-fixing-the-function-related-issues), and [Devirtualizing FinSpy Phase #4: Second Attempt at Devirtualization](http://www.msreverseengineering.com/blog/2018/2/21/devirtualizing-finspy-phase-4-second-attempt-at-devirtualization)",1519274025.0
hackmac89,Rolf is such a crack. Always an interesting read.,1519307631.0
Elcomsoft,"In order to extract all of that from an i-device, you’ll need the extraction tool (iOS Forensic Toolkit) and a working jailbreak. With Apple constantly tightening security of its mobile ecosystem, jailbreaking becomes increasingly more difficult. Without a bug hunter at Google’s Project Zero, who released the “tpf0” proof-of-concept iOS exploit, making a working iOS 11 jailbreak would take the community much longer, or would not be possible.
",1519127910.0
birkbork,Is that a valid serial? https://blog.elcomsoft.com/wp-content/uploads/2018/02/set_port.png,1519177900.0
VoteMePlease,I can't wait for them to be sued,1519104933.0
triszroy,They are now going to lose more money than they lose through piracy. ,1519123375.0
moveaxme,"Hi lrgame1983,

I'm posting on reddit one week after I make my posts public. So, Crackme0x08 is already on my blog. Feel free to check it ;)
Next monday, I'll make crackme0x09 available.

Glad to know that you're enjoying,
MOVEAX.ME",1519118207.0
lrgame1983,"Hellyea! Another one! I thought 6 was the last you would do, well I'm certainly happy there's a seventh available, thank you very much again!",1519056503.0
Neruomute,looks like another channel to binge.,1519130576.0
port443,"I liked the video, really engaging. At [9:21 in the video](https://youtu.be/4VBVMKdY-yg?t=561) you got a typo though, and put in 0x600000 (one extra 0) which might be why your imports failed?

I feel a little pedantic mentioning this, but this seemed like an example of reflective loading rather than traditional packing. I've seen samples that just throw the real executable in the resource section then load them up like yours did, so sometimes you can skip the whole fixing-up if you catch it before its loaded.",1519104539.0
iCkerous,"u/herrcore - Lovin the channel man.  I've tried to follow this thread to analyze a recent emotet sample but not having luck rebuilding the import table (the script gives 0 output).  Able to take a look?

https://www.virustotal.com/#/file/10c5df8ad6bb3bff3174f300e558be862aa0274cd84a9bc130120aeec8b858d2/detection

Keep up the great work and content!",1531354788.0
TechLord2,You can access the **Github Sources** [here](https://github.com/trailofbits/deepstate),1519031103.0
FoolFox444,"on the site, worker-asmjs-min[1].js reported as infected by JS/Miner.c by McAffee.",1519042125.0
DuplicatesBot,"Here is a list of threads in other subreddits about the same content:

|Title|Subreddit|Author|Time|Karma|
|---|---|---|---|---|
|[Radare2 Google Summer of Code 2018 - call for students](https://www.reddit.com/r/netsec/comments/7yl0j4/radare2_google_summer_of_code_2018_call_for/)|/r/netsec|/u/XVilka|2018-02-19 15:27:29|1|


----

 I am a bot [FAQ](https://www.reddit.com/r/DuplicatesBot/wiki/index)-[Code](https://github.com/PokestarFan/DuplicateBot)-[Bugs](https://www.reddit.com/r/DuplicatesBot/comments/6ypgmx/bugs_and_problems/)-[Suggestions](https://www.reddit.com/r/DuplicatesBot/comments/6ypg85/suggestion_for_duplicatesbot/)-[Block user (op only)](https://www.reddit.com/message/compose/?to=DuplicatesBotBlocker&subject=remove%20user&message=XVilka)-[Block from subreddit (mods only)](https://www.reddit.com/message/compose/?to=DuplicatesBotBlocker&subject=remove%20subreddit&message=ReverseEngineering)

Now you can remove the comment by replying delete! (op only) ",1519025296.0
igor_sk,"""Target source must be compiled with symbols information""

So which is it?",1519032333.0
VeNoMouSNZ,Very badly written article.,1519004988.0
bradn,"Javascript you say?  I think a neat trick would be only requesting a small portion of the code at a time from the server, and if the server detects an impossible code fetch transition, it terminates any further contact. ",1519016290.0
MaxMouseOCX,"Is English not your first language? There's some interesting usage of words there, slavic maybe? ",1518997173.0
qqqyqnz,"Btw, you can set the toString method of a function object to return something different than what it actually is.",1519002158.0
D2HLC,Beautiful,1518980908.0
crypto_mind,Why not just build syscall wrappers in their own memory block and grab the index from a file mapping to maintain portability? Once all the gates you want are built you can also hash the memory block and validate it on each call.,1518970199.0
khasaia,Any feedback appreciated: https://twitter.com/_qaz_qaz,1518952740.0
mrexodia,"Just so you know, there is no distinction between jnbe and ja (and many other of the branch instructions mentioned)...",1518951138.0
shogunlab,"Hey! I'm the author of this paper, please let me know if you have any questions or feedback for things that could be improved. Thanks for reading!",1519078025.0
RenaKunisaki,Are there not 1.8V serial ports inside things?,1518879999.0
diff-t,"Interesting paper, is the code not getting released? Don't see it on the authors site.",1518845055.0
rootb3r,How to get started with RE? I'm currently an undergrad pursuing electronics & telecom as my majors but I'm more interested in low-level exploitation and RE. I'm currently an embedded Linux intern at a startup and learning to build Linux OS using yocto and revising my ARM concepts I'd like to get started with RE and exploitation of ARM architecture. I have no knowledge of comp architecture and I'm a mid-level C programmer have never written any ASM code. Where do I start? What pre-requisites should I learn before proceeding? ,1518800974.0
CornerAssignment,"How is the job market in RE related fields?

How easy is it to get a job in a RE related field, assuming you're competent but don't yet have a CV?

Is there a good amount of remote jobs?

After I get familiar with the basics and dip my toes into a bit of everything, on what should I start concentrating more (eg malware) if I'm looking to get a job in a reasonable amount of time in a RE related field?

Least importantly, how is the pay like?

I know I'm getting into RE regardless, since it's something that always interested me, but I'm still curious about a potential job path.",1518805287.0
schweininade,What is the best way to reverse engineer communications between embedded components with large parallel buses (say the operating frequency of each is 100mhz)? If I'm looking at a CPU talking to an embedded graphics accelerator with 32 bits of addressing and 32 bits of data lines - is there any affordable way to scan/intercept this data while the circuit is live? Solutions like Saleae products/similar only allow for up to 16-32 data lines at a time including the lines for a clock trigger. ,1518800243.0
montouesto,"I have a question about MBR. I heard that if we got a Administrator Privileges, then we can remove MBR. I think it's odd. Why User Mode processes should have this privilege? If kernel mode driver can manipulate MBR, then i think it's not strange. But i can't imagine the situation that user mode process should manipulate MBR. Anyone knows this?? Thank you.",1518837723.0
maratmkhitaryan,Can I use Radare2 for EXE reverse engineering on mac/linux? ,1518938290.0
SeanTheLawn,"I'm working on a d3d9.dll wrapper, but I've run into a weird issue. The wrapper DLL works fine, but if I add any additional exported functions, the process crashes upon loading my DLL. As a test, I implemented all the exported functions of dxgi.dll, and tried to load the DLL as a dxgi.dll wrapper. This works fine (even with the d3d9.dll exports), so I don't understand why it's crashing when loaded as a d3d9.dll wrapper. Has anyone else run into an issue like this?",1518977680.0
xhankhillx,"hey pals. wondering if anybody has had success reverse engineering compiled javascript that's NOT been obfuscated, but ran through  v8::ScriptCompiler""",1519053586.0
dehriva,"With the rise of AI(and possibly other fields in CS too but well AI is probably the focus of most discussions), there's a lot of talk about automating several tasks. I've seen some work about using AI in binary analysis(although results of some of them have been disputed for bias in testing set). What's the possible impact of such advancements(not just in AI) on reverse engineering and binary analysis? What's the future of these fields possibly going to look like in a few years time?",1519119951.0
smirnoffq,"Which book is better for very begginers?
https://www.amazon.com/Practical-Malware-Analysis-Hands-Dissecting/dp/1593272901/

or 

https://www.amazon.com/Practical-Reverse-Engineering-Reversing-Obfuscation/dp/1118787315",1519218081.0
reddithater12,Is the talk available online?,1518994775.0
bradn,Already posted on this sub - https://www.reddit.com/r/ReverseEngineering/comments/7v0e5p/starcraft_emulating_a_buffer_overflow_for_fun_and/,1518751995.0
Zed03,Incredibly well written walkthrough,1518731222.0
Ryancor,Wow amazing!,1518746752.0
rolfr,"Summary: The authors employ a formal model of an x86 processor that represents instruction execution at the microarchitectural level, and not merely the semantic level as with many other applications of constraint-based analysis to machine code security. Having a model of the microarchitecture, and especially of the caching features, allows them to describe attacks like Spectre and Meltdown in very high-level and abstract terms. Moreso than the mere ability to describe these attacks in concise prose, it allows them to formally specify patterns of attacks very succinctly in terms of microarchitectural operations. Having such patterns in terms of the same operations as the instruction set model means that the authors can pose program synthesis queries searching for programs that instantiate the attack patterns. These queries are solved by an ordinary SAT solver, and then translated back into microarchitectural execution patterns derived from actual x86 instructions.

In section 4.1, the authors specify a pattern for Spectre and Meltdown-style ""Flush and Reload"" attacks, and then employ synthesis to create x86 programs that embody the pattern, i.e., reconstruct those attacks via synthesis. In section 4.2, the authors specify a similar pattern in terms of cross-core ""Prime and Probe"" attacks -- namely, by having the attacker populate cache lines (""priming"" them) on one core, then allowing the victim to execute, and then probing the cache and timing the accesses, thus leaking information about the cache activity of the victim. They translate this pattern into their microarchitecture model, and employ program synthesis to construct graphs of microarchitectural activity corresponding to an x86 machine code program that instantiates this pattern across two cores. They call the ""Prime and Probe"" variants of Meltdown and Spectre MeltdownPrime and SpectrePrime, respectively. The authors report a 99.95% accuracy for SpectrePrime compared to 97.9% for Spectre.

The authors then adapt the Spectre POC to implement the attack in C code, which is in appendix A. Their new POC is very similar to the existing Spectre POC with some minor refactoring. The primary difference is that the attack takes place in two threads. The ""primeProbe"" thread first primes the cache and then waits for the ""primeTest"" thread to finish executing the ""victim"" functionality, the standard ""out-of-bounds speculative read"" Spectre attack. After the victim finishes, the primeProbe thread then performs timing analysis to determine which bytes were likely read by the victim functionality. The remainder of the code involves computing statistics over multiple runs of the attack. 

Thoughts: First off, cool stuff! It's hard to argue with results and working source code. That said, given that the paper is published on Arxiv and is a bit sparse at the moment -- weighing in at less than seven pages -- it feels like this particular publication is intended to plant a flag among that research community. I hope a more detailed paper follows eventually, since some details that I would have been keen to know aren't yet well-explicated. I am familiar with program synthesis of machine code programs, [having published original work in that area myself](http://www.msreverseengineering.com/blog/2016/11/8/synesthesia-modern-shellcode-synthesis-ekoparty-2016-talk), but I would have liked to have seen perhaps the actual x86 programs that were generated by the synthesis tool, and also the corresponding microarchitectural model for those programs. Relatedly, the paper kept promising to explain how the query solutions were translated to programs in section 5, but once I got to section 5, it did not explain that, and instead referred to a manually-constructed example in appendix A.

Another thought that struck me was that, although it wasn't explained in great detail, the abilities of the synthesis tool seem to be fundamentally constrained by the use of a SAT solver. I guess I should read the references to understand the capabilities more fully, but I was expecting to see a quantifier somewhere in this paper, or at least a reference to a form of constraint solving that involved quantifiers (or maybe even a mention of SAT-based quantifier elimination). Synthesis often involves a universal quantifier over the input state, and an existential quantifier over the parameters for the program-to-be-synthesized. Although universal quantifiers may be too stringent for this situation (because of the probabilistic nature of the attack), the lack of them means that the machine state cannot be abstracted out of the formula, ergo a query can only be zeroth-order (i.e., can only reason about some specifically-enumerated set of machine states). Hence the machine state must be part of the solution to the synthesis query. At least, those are my thoughts at present; I'm keen to know more when the fuller paper comes out, or maybe I'll read the references.

Perhaps my harshest criticism of this paper is that -- even as a formal methods geek -- it wasn't entirely clear to me what formal methods brought to this paper, apart from a bunch of graphs. The end result of this paper is a manually-tweaked variant of the Spectre POC, where the tweaks were speculated to be possible by the original Spectre paper. No doubt, the authors of the present paper did good work -- original work that I applaud -- in investigating and reifying this variant into a real POC. But given the lack of gory details from the synthesis tool to really understand its output; given also the manually-constructed nature of the POC; and given also that the variant described was speculated to be possible in the original Spectre paper: I ask again as a formal methods geek, what did formal methods bring to this paper?",1518679858.0
Natanael_L,This should be crossposted to /r/netsec,1518702414.0
stay_spooky,"Ha. Saw the thumbnail and thought, ""That looks like Endgame's UI"". They're a solid group of folks!",1518659990.0
johnyma22,"Brilliant write up of a really *brain dead* topic. 

Thanks OP!",1518636309.0
hipstergrandpa,"Nice read! I've done this exact procedure to lift the firmware for an IP phone. Do you happen to know how I would emulate the firmware on my computer? I was looking into using this new platform called Avatar2 but I'm still pretty new to this, so it's still tricky for me.",1518596681.0
PerfectlyStill,"Asking as someone with only a feather touch in the RE world...

Once you grab the firmware.bin, how opaque is the majority of the things you get to play around with?

I see the author ended up with a small Linux filesystem, but if you start digging in is it all a bunch of obfuscated code or can you pretty much hit the ground running with everything being open with commented code etc..?",1518663649.0
bWljcm81,When you dump a file it is still compressed.   Using a tool such as binwalk will detect and decompress your binary for IDA to understand. ,1518525751.0
chaostheory88,"Maybe ARM cortex m4, try the first two words of the ROM, first should be MSP, second one the address of the reset vector, but of course it's just a suggestion.",1518566709.0
draeath,"[For some context.](https://www.reuters.com/article/us-olympics-2018-cyber/games-organizers-confirm-cyber-attack-wont-reveal-source-idUSKBN1FV036)

As one who cares little for sports or competitive events, I had no idea this had even happened.",1518556133.0
lrgame1983,"I never met you, don't know how you look or what your preferences are, but I love you :-D

thanks for all these great crackme solutions, I'm learning a lot from it!",1518516486.0
igor_sk,please try to submit more technical posts.,1518299462.0
ZeroSecond,"awesome watch, cheers for the share :)",1518258285.0
nvin,Great work and presentation. Happy to see the reasoning and problem-solving logic.,1518280779.0
FroYoSwaggins,"Nice video. I didn't know about that ""Replay"" option for Fiddler. Definitely going to use that in the future.
",1518467614.0
port443,LiveOverflows videos are always excellent. I love seeing him posted here. He has his own subreddit as well if you enjoyed his style.,1518285989.0
Phill_wenneck,"I am a college CS student, and one of the things I'm looking to get into reverse engineering. I am currently trying to learn assembly and make my way through the books ""Practical Malware Analysis"" and ""Hacking: The Art of Exploitation (2nd ed.)"". Is that a good place to start, and is there anything else I should be doing? Going that route seems to cover a decent amount of the stuff in the ""for beginners"" thread.

Thanks!",1518200162.0
lehrling_,"Hello, I've seen some papers describing in great detail the functionality of a malware, eg ""Analysis Results of Zeus.Variant.Panda"" from GData. Now, I haven't analysed many samples, but Zeus seems to be a complex piece of software (number of functions, multiple threads, etc). 

1. Is this kind of report done mainly through code reverse engineering or static/behavioral analysis?
2. How much time should someone take to extract as many details as the ones presented in that report?
3. Considering the only possibility is code reverse engineering, how much time should it take to complete describe the malware behavior? I don't have IDA Pro.

Thanks!",1518711297.0
Benutzeraccount,"Yeah, you know, downloading random files from the internet...",1518173402.0
igor_sk,please don't post direct links to exe/zip files.,1518193352.0
baordog,Anyone going to this? ,1518184004.0
farmdve,"I'm on my phone so I can't, someone should mirror this. ",1518078197.0
m1zaru,"""Tutorial""",1518110482.0
baordog,"So it was my understanding that Denuvo downloads some parts of the binary at run time, and that they are somehow customized to run on just one CPU. How do cracks get around this in a general purpose way? It looks like he is patching the CPU checks, but wont he need the missing snippets of code that Denuvo downloads from it's server? 

I'm going off of https://www.reddit.com/r/CrackStatus/comments/43dgej/how_denuvo_works_and_why_its_so_hard_to_crack/?st=jdfzuvfy&sh=703b7263 for me understanding of how Denuvo actually works. 

I have never seen an in-depth analysis of how Denuvo works, but the guy in the above post seems to know what he's talking about. 

If the analysis in the above post is correct, the cracker would have to get a legitimate copy of the game and copy the CPU specific code chunks after Denuvo has authenticated in order to make a crack that works without authentication. He would also have to patch out all the CPU specific bits. 

Somehow people are making general purpose cracks that work on multiple systems, so there must be an established technique for doing it. 

Note: Didn't watch the whole video, too long for now. ",1518184766.0
simonobo,You need to be running in the kernel to disable the flag. At that point you are already ring 0 and can do literally anything to the rest of the OS.  How is making a process unkillable anything special?  Or am I missing something?,1518033174.0
khasaia,Any feedback appreciated: https://twitter.com/_qaz_qaz,1518024280.0
alain_proviste,Related tools and exploit demo: https://github.com/airbus-seclab/ilo4_toolbox,1518018139.0
baordog,"This reminds me of the talk Alex Ionescu gave at Recon 2017. If I recall correctly, he spoke about exploiting a power controller on a Microsoft Surface tablet that had it's own embedded OS. ",1518185391.0
ryobiguy,Anyone else having difficulty reading the gray sans-serif on white background??  This sounds awesome but my eyes are killing me.,1518026377.0
fullouterjoin,reminds me a bit of http://hachoir3.readthedocs.io/,1517886976.0
IronArthur,"Sorry for the noob question, this is like using the templates of 010 Editor?? (i have only used 010 for reversing binary data)
Edit:sorry, i´ve read the docs, you generate a file description format file and you can use it to read the file on different platforms. 
",1517991011.0
Armaru,This guy's website is using a JavaScript crypto miner called CoinHive which will ramp your CPU to 100%. Beware.,1517817549.0
Ryancor,This is pretty cool. How’s the decompiler?,1517809747.0
kiwidog,"Clarification for those who are new: This does not enable cfw, piracy, hen, or anything for your PS4.",1517758080.0
snotsnot,"Was the PS4 ever hacked? Like for CFW, piracy and such? Just curious... I don't game much now a days",1517793190.0
Baelfire_Nightshade,"Is the video of this available somewhere? Or just the slides? 

Edit: probably just the slides for now considering the happened today. ",1517772454.0
andrewl_,"Wow so Elias is to credit for EUD support in remastered? Very nice work! It's cool to see RE be awesome outside of malware and vulnerabilities and crap.

Here's a visual tour of some of the insane things that are possible: https://www.youtube.com/watch?v=JhPdfz-IglQ and then brief technical description here: https://www.reddit.com/r/starcraft/comments/66axtd/as_a_korean_118_is_a_disaster_on_fish_server/dghfhjp/?st=j8fvr4ty&sh=9df497ca

Broodwar is still such a great game with new strategies discovered literally within the last month, after 20 years.",1517692528.0
bricksampson,dope thanks for the share,1517707717.0
Toizi,"In case anyone else doesn't like downloading and opening .ppt files, I uploaded it to [google drive](https://drive.google.com/open?id=1IJo5VpqFX5400SXmVMTK8dh3nGmM9n0H)",1517686988.0
TailSpinBowler,"What did he mean by IR?
Thought he was talking about intermediate.language.",1517736489.0
edmcman,Microcode C++ API will be available in the next version of IDA.,1517840626.0
montouesto,"I'm studying Process Hollowing (PE Image Switching) and there's what i can't understand forever. As you guys know, we use WriteProcessMemory() and we move .rdata (IAT : Import Address Table) too. And IAT is still not changed to real addresses of APIs, because it's in file state. So i thought that if we change EAX to Entry Point and do ResumeThread(), Loader will do his job cause we CreateProcess in SUSPEDNDED.

But there is another way, you know, changing EIP to Entry Point. I really can't understanding, because who change the IAT to real addresses of APIs then?

I tested this. Directly after i write .rdata to the other process's memory using WriteProcessMemory, i attached the other process and i saw that IAT is changed to real address. What does it mean? Who the hell did this? The PE which located in my program have a IAT which not changed. And i checked this right before calling WriteProcessMemory().

So what is the problem? Am i doing wrong? Someone knows?",1517629240.0
JohnnyGuitarFNV,"Hey guys, leyman here but I'm doing some research on security and encryption and I was wondering if anyone ever tried or succeeded to hack like a robot to obtain or reverse engineer the source code? Could you, if given access to say an ATM's motherboard, read out the source code from the memory? Or anything like that? Or something like the Tesla autonomous car. Could you obtain the source code or algorithms and basically make your own self driving cars?
",1517913931.0
xhankhillx,"having trouble reverse engineering nodejs exe packed by ziet pkg, looking for tips or suggestions on tools to use or really where to start. done the usual stuff I'd do, but this is a new world to me.

it seems to be node.exe compiled in with obfuscated javascript, but I can't tell where one bit starts and one bit ends!



any help would be appreciated <3 
",1518118474.0
fedcod,"I'm looking for tools / tutorials to reverse android apk, any ideas? Thanks",1518088509.0
ahmedMAE,"as a novice i found it easy and clear, thanks jacob",1517968242.0
port443,"Nice writeup! It was an enjoyable read, and how lucky they left all the symbols included

The ""magic number"" you are talking about looks like default behaviour by gcc for a modulus 3 operation. I wrote up some quick C that does the obfuscation your adversary was using:

    int main(void) {
            char str[] = ""ddddddddddddddddddddddd"";
            int counter;
            for (counter = 0; counter < strlen(str); counter++) {
                    if (counter%3){
                            str[counter]++;
                    }
                    else {
                            str[counter]--;
                    }
            }
            printf(""\n%s\n"",str);


And the snippet from the modulus part:

     804848b:       8b 4d f4                mov    ecx,DWORD PTR [ebp-0xc]
     804848e:       ba 56 55 55 55          mov    edx,0x55555556
     8048493:       89 c8                   mov    eax,ecx
     8048495:       f7 ea                   imul   edx
     8048497:       89 c8                   mov    eax,ecx
     8048499:       c1 f8 1f                sar    eax,0x1f
     804849c:       29 c2                   sub    edx,eax
     804849e:       89 d0                   mov    eax,edx
     80484a0:       89 c2                   mov    edx,eax
     80484a2:       01 d2                   add    edx,edx
     80484a4:       01 c2                   add    edx,eax
     80484a6:       89 c8                   mov    eax,ecx
     80484a8:       29 d0                   sub    eax,edx
     80484aa:       85 c0                   test   eax,eax

I don't think I would call this encryption though... its just too simple. Theres no key or randomness.",1517706592.0
odd100,OMG OMG OMG OMG,1517573115.0
revolct,is this real?,1517576085.0
the_isra17,Does it support saving IDBs?,1517587103.0
C0rn3j,"Seems real - TOS from the installer

https://haste.c0rn3j.com/muticizaja.txt

About 


    Freeware version with the following limitations:
    1. Only for non-commercial use
    2. Without technical support
    3. Only supports x64 code
    For commercial use please acquire the full version
",1517577237.0
Server_Bot,"FYI no IDAPyhon support, just IDC. Not complaining, this is still great!",1517589914.0
kierenj,can anyone verify the download? not a signed executable..,1517575669.0
601error,"I'd love to try IDA, but my personal, non-commercial project is not a x64 device, and I have zero interest in x64. They were unwilling or unable, last time I asked, to give me a trial licence to see if it was appropriate for my needs.  Given the cost, I'm not buying it without using it first.  So, I rolled my own static analysis tool and gave up on IDA.  Seems like they have plenty of customers without me.",1517629689.0
flarn2006,Is 7.0 the latest version right now?,1517596300.0
TailSpinBowler,"Nice to see 64 bit finally supported. Was looking at this last week, and wondered who the 32bit was appealing to?

Also what is up with hexrays requiring you to buy the 64  AND 32 bit versions? They should be the same product. ",1517633674.0
danrandt,are ELF files supported ? or just PE files ?,1517585177.0
IronArthur,The pseudo code decompiler can be loaded in this version?,1517591933.0
gatzke,"Reversing noob here. Is this a full, free version of IDA? ",1517607827.0
Plailect,"# Abstract

We demonstrate attacks on the boot ROMs of the Nintendo 3DS in order to exfiltrate secret information from normally protected areas of memory and gain persistent early code execution on devices which have not previously been compromised. The attack utilizes flaws in the RSA signature verification implementation of one of the boot ROMs in order to overflow ASN.1 length fields and cause invalid firmware images to appear valid to the signature parser. This is then used to load a custom firmware image which overwrites the data-abort vector with a custom data abort handler, then induces a data-abort exception in order to reliably redirect boot ROM code flow at boot time. This executes a payload which, due to its reliable early execution by a privileged processor, is able to function as a persistent exploit of the system in order to exfiltrate secret information (such as encryption keys) from normally protected areas of memory.

# Background

Information in this article (especially the code execution vulnerability) is original, independent work unless cited otherwise. Note that the code execution vulnerability detailed here is the same one documented publicly as ""boot9strap"" by much of this team including ""SciresM"" on sites such as [3DBrew](https://www.3dbrew.org). Additionally, note that the RSA signature parsing vulnerability detailed here is a different implementation of the concept documented publicly as ""sighax"" by ""derrek"" and ""nedwill"" and ""naehrwert"" at the [2016 33c3 conference](https://media.ccc.de/v/33c3-8344-nintendo_hacking_2016).

# Usage

Information on using the open source software based on the described vulnerabilities can be found at my own https://3ds.guide",1517537345.0
rolfr,"To whoever reported this submission, I think you must've only read the title and not looked at the contents. This link is about reverse engineering malware masquerading as a keygen for Burp Suite.",1517458160.0
gibbdaddy,"Such a strange looking error on the website, not sure if I'm just not seeing this secret page or what",1517418113.0
PartOfTheBotnet,"As with my [last post](https://www.reddit.com/r/ReverseEngineering/comments/7hqa8v/recaf_08_a_modern_java_bytecode_editor/) I've made some major updates that I'd like to share with my project.

***

Major improvements:

* Instrumentation: You can now attach Recaf to running java processes and modify their bytecode in-memory.
* Decompilation editor: If you're unfamiliar with bytecode you can decompile a method, make changes, and recompile your changes.
* UI can be configured even more
    * Translateable via config files
    * Rearrange-able context menu items

***

Usage docs and more are linked on the repo's readme. I would love any advice on how to make Recaf more user friendly or how to improve it in general. ",1517243928.0
The6P4C,This is Part 2 of my series on hacking the CASIO fx-CP400 graphics calculator. Hope you enjoy!,1517221514.0
decryptsh4,"I have been following your Casio hacking series. I wish to figure out the compression of some wired crap Casio translator files. Could any one give me any directions on how to figure out? These wired crap files pulled from addon micro-SD card are:  
magnet:?xt=urn:btih:e9302cb4aec4bfbf33837d9c620849ef1fca4854  
I saw your start point is a firmware update file, so I downloaded some of these:  
magnet:?xt=urn:btih:17d4cbbdee32e823c8676a8fa6a2b93186a3c25b",1517242094.0
aris_ada,Did you open the calculator to take pictures of the PCB and chips? That's usually the first thing I do when working on an embedded device. It reduces guessing when trying to analyze the firmware,1517232591.0
zachydev,"Really impressive. I tried to hack a ""new"" casio electronic dictionary model some time ago but I failed.

Casio calculator hacking communities have a lot of technical information available. Casio calculators and dictionaries share several things in commom (hardware, ...). Even the font used in your calculator test menu is the same from my dictionary!

I'll try to see if I can do something similar - I need to find a way to run native code. :) My goal is to port the brijohn's sdk toolchain and ultimately his gnuboy port.",1517529911.0
edward_snowedin,"This is loaded with malware for sure 

Edit: OP deleted this post from his history https://www.elitepvpers.com/forum/playerunknowns-battlegrounds/4420321-blatant-playerunknowns-battlegrounds-aimbot-esp-radar-more.html but I still had it in my browser history

Stupid fucker posting this in an RE sub. I may just RE it and wait for this retard to connect",1517102986.0
Jahames1,"I really hate hacks that ruin a competitive game :( but if I can make money off of it, I'd do it.",1517093341.0
khasaia,Any feedback appreciated: https://twitter.com/_qaz_qaz,1517043602.0
jmcph4,"What's the purpose of `and esp, 0xfffffff8` in the middle of a function prologue? The code in question occurs at the very start of the `main` function in this particular executable:

`push ebp
mov ebp, esp 
and esp, 0xfffffff8
sub esp, 0x52c`",1517189315.0
rom3ocrash,Which are the the fundamental points to looking for understanding the flow of the program. I mean how to understand the big picture ,1517046435.0
Ba_COn,What are some ways to deobfuscate?,1517049325.0
edward_snowedin,"I want to dump a packed driver from memory, since obviously it will be unpacked. What’s the best way to do this ?

Alternatively, is there a way to run trick kernel drivers to run in user mode ? I saw some stuff on x64dbg’s blog, but the renaming of the driver to an exe never ended up working (invalid pe even after setting the subsystem type)",1517200943.0
shotone,"Hi. I have suspicious program that create another process and injects into some dll/shellcode. This program is really obfuscated and i can't find part of the code that injects it. I tried use process monitor but i can't find any WriteProcessMemory calls, how can i dump these shellcode?",1517346429.0
mickey106113,If i was wanting to create a private server for a game how would i go about doing so?,1517295891.0
pfalcon2,"Following the testing https://www.reddit.com/r/ReverseEngineering/comments/7q48r4/please_help_test_capstone_integration_for/  (thanks to everyone who helped with testing), release 2.0 of open-source interactive disassembler with IDAPython-compatible plugin API is available. Major changes in this releases:

* Capstone-based CPU plugin for x86 and ARM. (Follow README for Capstone installation intructions.)
* Support for ""alternative ISA"" during disassembly (used e.g. for handling Thumb mode for ARM).
* Update version of Pymsasid3 disassembly library with 64-bit mode fixes.
* Switch off some assertions by default, making end users' experience better (exceptions are still logged to scratchabit.log).
* More idaapi and idc modules functions.
* Documentation improvements.
* Example ELF files for the supported architectures and subarchitectures are provided (extending on a few out of the box examples available previously).
",1516955127.0
mewkiz,"Glad to see the 2.0 release with x86 support!

Cheers,
/u",1517011129.0
0xF0xD1E,"thanks for the great video! great analysis, commentary, and quality.",1516938562.0
tathanhdinh,Why are softwares (i.e programs) abstracted as FSMs? Aren't FSM Turing complete?,1516884500.0
jackk445,"Good video explaining the whole process. Does anyone have anything similar that would show how program analysis/disassembly is approached (including trials and errors, which greatly help to understand the thought process)?",1516832121.0
idrumlots,I very much enjoyed this.,1518329072.0
dsrakroute,Great post /u/rolfr! I'm really looking forward to the next part. ,1516923627.0
swick_,Unfortunately the site doesn't load images for me. COR and JS errors in the console.,1516917839.0
khasaia,Any feedback appreciated: https://twitter.com/_qaz_qaz,1516613958.0
jacob16682,"Thanks for sharing this! As a naive, novice analyst, what should I do if I were to come across this?",1516625323.0
Frederick_VI,"I don't think ""ReverseEngineering"" means what you think it means ",1516558292.0
idrumlots,I enjoyed this.,1516500542.0
,[deleted],1516570279.0
jl3-,Good read and easy to follow along. Thanks for sharing,1516514920.0
Badel2,"Great post, I like this idea. You could add some error correction to improve stability, but then it would be harder to hide the true purpose of the code.

But why is this comment inside the parentheses? Was it that difficult to finish the malloc call before starting the comment? God, it hurts...

    void* mem = malloc(n + 1 /* + 1 to avoid an out of bound write in readMemoryByte*/);",1516452279.0
AoeAoe,"Will take a closer look at this when I have some time, but all I'm gonna say for now is that this shit looks pretty fucking scary.

Like taking over a car scary, but with needles and shit.",1516408648.0
RenaKunisaki,"tl;dr send a DHCP response with a long field, overflow a buffer, and conveniently overwrite a function pointer right after that buffer which is executed immediately afterward. Very convenient bug.",1516405230.0
wm32d,"Please don't editorialize titles for this sub! ""Automating VMware RPC Request Sniffing"" was fine",1516392144.0
crosenbauer2112,"I'm a bit paranoid when it comes to internet access and futureproofing. With that in mind I bought rewasd recently. It really bugs me because it checks for internet on the first run and it has to be connected to the internet to validate the license. Which isn't a big deal now since I have a valid license but I'm not a fan of requiring internet.

I have done a little research and started to try to learn how to code. At first I thought that the main .exe or a .dll must perform a hash check on the .exe. If I open the program in .net reflector and make no changes to it, then save it as a new .exe with reflexil, it doesn't function as it should (and has a new file hash). It won't recognize a controller when it is attached. However, I then realized that the original file is digitally signed while my new one is not. Transfering the certificate did not work. I have determined the licensing is probably maintained by one .dll that I can open and another that I can't. No matter how I change the .net .dll that I can edit, it doesn't seem to function properly. And I'm too new to figure out how to debug the one I can only view in IDA. To be honest I'm at a dead end with my skills and need some guidance.

Also, in version 2.0 they introduced a tray icon. Interestingly enough, the tray icon will recognize the controller is connected even with the main exe being modified and therefore unable to recognize controllers.

I hope someone can help me learn how to get around this. I don't have much interest in having someone do it for me. I would like someone to teach me how. I use a combo of x64dbg, reflexil, IDA, and .net reflector. Thanks to all",1516492507.0
thc42,"I’ve made a simple program in C as a training for me that has a locked function behind a randomly generated number, you can unlock it by typing in the correct pin code and after 3 failed attempts the pin code will change again. How would one approach this problem ? Edit: i used the rand() function to generate the code so there are no visible strings",1516914358.0
Zed03,I thought virtualized graphics adaptors in VMWare or Virtualbox don't support DX11 or DX12? Could this be used on anything modern?,1516221869.0
real_namreeb,"Since you’re talking about Windows game hacking, it is probably worth mentioning Windows Time Travel debugging. Read about it here: https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/time-travel-debugging-overview

I was discussing this with a friend of mine recently, another avid game hacker, who is actually a developer on the MS security team. 

As I understand it, time travel debugging allows for user-land introspection by recording execution, similar to VM based introspection tools. ",1516257787.0
wuddupdok,"Good stuff. Can definitely see where this can be applied beyond just games, or used during development for easily saved state. ",1516263574.0
farmdve,"Depends on the games. If you try to run a DX9/DX11(or newer API) game under a VM, the game likely wouldn't run due to missing graphics adapter that is DX/OpenGL capable.",1516225062.0
Sn34kyMofo,"Using VMs is, of course, a staple in many areas of RE; however, it's something rarely ever mentioned where hacking games is concerned. Thus, I wrote this post appealing primarily game hackers, hopefully sparking all kinds of fun and interesting ideas for them once they wrap their head around the topic. =)",1516217182.0
The6P4C,"This is the first blog post I've ever written, so any constructive criticism you might have would be welcome!",1516186763.0
luchoz,"Really nice lecture, i am more a hardware guy but i love read about software disassembly.  
Keep going! i want to know whats is inside that calc",1516192087.0
decryptsh4,"This is awesome! It's SuperH! Casio has used superh processors not only in their calculators but also in their dictionaries. 
The contents of their firmwares and files must have something in common. The files of the Casio's addon micro-SD card have been pulled using this tool https://github.com/brijohn/libexword However, except some plain text htm files, I can't figure out the compression of other files. I will wait for your part 2 and these files are shared below for anyone interested.  
magnet:?xt=urn:btih:e9302cb4aec4bfbf33837d9c620849ef1fca4854",1516915603.0
DEElekgolo,"Very cool and well written! Makes me want to mess with my own calculators again and reverse engineer some of the USB protocols again of other ""closed"" tech I have. ",1516212004.0
Dwedit,"Or in other words, Hacking the Firmware Updater and getting the firmware out of it.  Nothing else was hacked yet.",1516254511.0
bradn,"Lol, I see Casio hasn't changed much... their tradition of doing weird crap in the internals of their calculator stuff is still strong!

I reverse engineered much of the Algebra FX series (it's an 8 MHz V30MX x86 CPU running Datalight's ROM-DOS and math software from Saltire).  Their add-in programs turned out to be compressed disk images of either 128, 256, or 384KB size, and it had a memory mapper to switch pages between areas of ROM or flash, and they used Datalight's tools to convert their executables to run straight from read-only memory with only volatile areas placed in RAM.

My first method of extracting the add-in images was about the same as yours - only they didn't apply any obfuscation to their temp folder files back then.  I had a hard time figuring out what compression they used to recreate add-ins it would install, so I ended up reverse engineering the compression and making my own decompressor and encoder.  It turned out it was the same compression used back in the Win3.1 days with like filename.aa_ (4KB sliding window), and my Windows 98 had the proper utility built in already to extract it (though it wouldn't work with Casio's extra header in front).

But yeah, you can imagine how weird this thing got, just from the premise laid out above...",1516326952.0
Peponci0,"This is the second post, following a [previous one](https://redd.it/7fn2ag) where I received a signal and talked about decoding it, while in this post I'll impersonate the studied remote by transmitting a signal. This time I also added a section regarding legal matter.

I hope that you all enjoy this content and find it educative, and that it fits this subreddit (I though that studying the protocol counted as reversing, but I may be wrong...)
",1516140924.0
MarekKnapek,"This is written by somebody who teaches a lot. Or is paid by document length. Or is targeted to complete newbies. Or English is not theirs native language. Anyway, excellent read, thank you.

You didn't mention that enumerating thread from user-mode and suspending them one-by one (might?) cause a race. If the application spawns new threads while you are in-the-middle of enumerating them, you might miss to suspend some of them. The kernel-mode seems to take some kind of lock, probably to prevent this situation.

I guess that calls to ObpReferenceObjectByHandleWithTag + ObfDerferenceObjectWithTag functions are there to prevent thread termination while we are ""working on it"". You forgot to mention that.

I don't understand about the offset value. Why do you translate from 0x648 to 648 to 0x288 and back, seems typo to me.",1516145322.0
Rebreok,"I'm subscribed to a lot of engineering subs, legit wondered for several seconds what that thumbnail had to do with the string mechanism in Venetian blinds lol",1516132810.0
,"""Dissecting FPGAs from bottom up, extracting schematics and documenting bitstream formats

In this talk I describe the basic makeup of FPGAs and how I reverse engineered the Xilinx 7 Series and Lattice iCE40 Series together with the implications.

FPGAs are used in many applications ranging from networking, wireless communications to high performance computing, ASIC prototyping and so forth.

They would be perfect to create true open source hardware but we would still be bound to use proprietary toolchains provided by the manufacturers.

To generate a valid configuration file this toolchain needs to know every single wire, switch, possible connection, logic block and the corresponding bits to configure each them.

In other words you are required to have the blueprints of the FPGA in your toolchain to be able to do the place&routing and generation of the bitstream file from your netlist.

Naturally manufacturers do not like to disclose this information, possibly because someone could reverse engineer valuable intellectual property cores.

I will explain each component used in FPGAs from Lattice and Xilinx, like switchboxes, the interconnect, logic blocks, memory blocks.

Furthermore I will talk about how I reverse engineered the 7 Series from Xilinx and the iCE40 from Lattice.

At the end I will demonstrate how to create your own bitstream by hand, implementing a small logic circuit and testing it live on a Zynq 7000 FPGA from Xilinx.""

[Source](https://fahrplan.events.ccc.de/congress/2017/Fahrplan/events/9237.html)",1516054460.0
HeWhoGotGud,/r/ringzero,1516054687.0
zdimension,"Quick recap of the project : currently around 40% of the code has been decompiled. The game can load levels and script files, and we're starting to render 3D meshes.

**Also:** we are desperately in need of more people. Currently we're only two working on this project, and with school we can't work that much on the project. If you are fluent in C and know x86, MIPS or simply how to use IDA, send me a PM or come chat on the TR Dev Discord (PM for invitation).",1516032519.0
wormnut,Uh. Am I missing something? Source code for a commercial game decompiled by a third party who has licensed it MIT? That seems like copyright infringement.,1516025880.0
wung,"Since there is some mapping from disassembly to C, how do you maintain that mapping? E.g. renaming `sub_xxxx` to a human readable thing? Is the idb somewhere? Is there a script that names known functions which people apply once opening their idb? ",1516054725.0
,[deleted],1516046508.0
Exant64,"Really cool! Reading the source code, I noticed there are parts where you define local variables like v0 and v1 and there are comments by it like //eax@1. Are those autogenerated by something?",1516697926.0
ids2048,"This is quite simple, but it's my first attempt at reverse engineering that successfully achieved something useful.",1515999004.0
Delta-Echo,"> Reverse engineering something like this is in principle fairly simple: run their software under Windows and use Wireshark to see what commands it is sending to the USB device. Then figure out which are relevant, and send the same commands under Linux.

I...I never even thought about using Wireshark for this. Goddamn, OP, thanks for this.",1516035257.0
44khz,I hardly know whats going on when I read these post but they always amaze me that someone figured it out. Good Job!,1516016921.0
gnarlin,"Now, hopefully, begins the long road to integrating this settings into the kernel driver, then maybe simplified cli command/sound utility and then into the gnome/kde/xfce/whatever sound gui config.",1516034785.0
roothorick,"You know, I'm kinda interested in an E1 now.

Now, if someone could sort out the clusterfuck with the SoundBlaster Z series jack mapping...",1516064210.0
The6P4C,Closed the page as soon as my whole screen filled with an ad.,1515991201.0
GuyWizStupidComments,"Can it be used as library? Does it provide APIs to access/manipulate, for example the CFGs? ",1515958399.0
,[deleted],1515922507.0
dagmd,"What does „file $filename“ say? The extension is only a part of the filename, after all.",1515921735.0
IDA_noob,"I am a huge fan of UniExtract2. 

https://github.com/Bioruebe/UniExtract2/releases",1515947336.0
bleuge,"Check this: http://mark0.net/soft-trid-e.html 

Run through it, maybe it can identify the file type.",1515922663.0
yurikah,"I have tried DZip, which is the .dz filetype but it still wouldn't let me to extract the contents of this .apk. I am trying to datamine it and I posted to r/datamining and a mod told me to ask my question in r/reverseengineering.

Thanks in advance!",1515917970.0
pfalcon2,"ScratchABit, easily retargetable and hackable interactive disassembler, gets a Capstone disassembly plugin. Before shooting a formal release, I'd like to collect some feedback for how well (or not so well) it works.

The link in the title leads to the installation instructions (including for Capstone Python bindings installation). Currently, ARM disassembly is enabled by default via Capstone, and x86 can be done using it (default is still Pymsasid). The repo contains few sample ELF files for both architectures.

Let me know if you're interested in other archs (and ready to test it, e.g. supply test binaries, etc.)
",1515847425.0
pm_me_good_c,"I’m getting pretty annoyed with anti-virtualization. On a per case basis, it’s usually not a big deal because I can just log function calls and see what’s going on, and even on obfuscated binaries, it’s usually something you can work around fairly easily. 



That said, having to do it at all gets pretty tedious. There are so many ways I have seen to check if something is running in a VM that it can be a really big pain even on individual samples too. Is there some script or something that people use to remove the tedium from dealing with anti-VM?",1515771307.0
biggustdikkus,"I've been searching for resources on explaining the logic behind pattern scanning, but couldn't find any. If anyone could link me some, that would be really nice.   

I'm new to reverse engineering.",1515830062.0
WeakGlutes,"In comp sci atm and I took an operating systems course which I found really interesting and learned a lot. Also really enjoyed a computer architecture course learning about MIPS and assembly.

Outside of that (and stuff related to gaming) I'm completely new to anything related to hard ware and interested in learning more and actually doing some stuff.

I got an old Symbian OS and android phone lying around. I would like to learn to unlock the phones myself ( the proper way ) instead of just following instructions on how to unlock the phone.

How and where do I even start? I dont even know where I can find the resources to start coding Symbian files or  the hardware in the phone works. Any tips?
",1515900865.0
Zendan,"What's the best resource (book, MSDN, etc) to thoroughly understand the Windows system (kernel and user-space) and the Windows API? I've always used MSDN for the specific functions and/or resources but is there any detailed guide on where to start understanding the system and API as a whole?",1516012970.0
Men_Of_Spoons,"I was reversing a program that launched a message box after the instruction ""div 0"", I think it had something to do with overwriting the exception handler. Is this common practice?",1516657002.0
,,1515802620.0
TailSpinBowler,"Was there one of these that showed entropy, eg, compressed vs encrypted. I think was a firmware tool, not IDA. Might be worth adding if it isnt already.",1515742376.0
wchill,"lol, at least get an actual domain name and email address",1515633422.0
nandu88,"Thanks for the article! Just a small thing, when you say:

""For example, if you add 1 to 0xFFFFFFFF, it will give you ‘0’ but the “Overflow flag” will be set in the FLAGS register.""

Are you sure you didn't mess up OF with CF? See: http://teaching.idallen.com/dat2343/10f/notes/040_overflow.txt",1515558563.0
corysama,via https://news.ycombinator.com/item?id=16104958,1515525706.0
excidius,Thanks for this!,1515552073.0
blackspiderz11,I am about halfway through it and coming from a semi novice point of view this so far is very well explained. Thanks for the share.,1515599679.0
linotype,"Was futzing around with some of these toys over the christmas break, and discovered that they can be booted into various debug/diagnostic modes that cause them to output FSK data instead of singing about letters of the alphabet.",1515491220.0
Adobe_Flesh,The part about needing debug mode for different languages makes a lot of sense. Some advanced stuff in this! I guess the electronics are cheap enough these days to justify complex components,1515508626.0
,[deleted],1515512753.0
Matt3k,A toy for 1-5 year olds. Are you sure about that? Sounds like your nephew got you the perfect Christmas gift!,1515532752.0
off_me_head_pal,"Vtech is the shit, I remember the kids laptops had basic programming on it 20 years ago, not sure if that's still a thing as normal laptops are cheap",1515522514.0
Meral_Harbes,"VTech mafia! I know it's stupid, but tearing these apart gets some part of me.",1515536974.0
,[deleted],1515527898.0
draeath,What's that 5-pin header opposite side of the board as the wheel sensor?,1515536870.0
IM_A_MUFFIN,My son is 1 and got these for Christmas as well (only Frank and the firetruck playset). Sounds like I need to buy him the others so I can take the old Frank apart and give him the new one. ,1515556071.0
ElucTheG33K,I'm always wondering how hard it would be to hack a toy phone and change the lame songs and talks by other sounds I'd like.,1515565886.0
ApeOfGod,"But where is the reverse engineering, all you did was open it and look inside. :(",1515526721.0
tx69er,"Wow, that's a really cool article. Seems like speculative execution can definitely have a lot of real gotchas if you don't truly understand how the processor under the hood is working. ",1515462049.0
perihwk,This was a fascinating read I wonder just how many processors have a similar issue.,1515465475.0
Sn34kyMofo,"Absolutely fantastic write-up, but that tricky fucking video ad on the page that forces focus no matter where you are on the page, is absolutely atrocious. Added *.pubmine.com to manual block list accordingly.",1515516978.0
,[deleted],1515509342.0
veganjay,The crackmes are from IOLI.  You can get them here: https://github.com/Maijin/Workshop2015/tree/master/IOLI-crackme/bin-linux,1515461759.0
rar_m,where can we find the crackme's?,1515450557.0
port443,"Theres some terminology mixup here, but I suspect thats more to do with the French/English stuff.

You dont crack a password from a website, you crack hashes or other representations of the password. Basically, you crack encryption to reveal plaintext.

HTTPS traffic ^(relevant username!) is secure because the protocol the data is being sent over is encrypted. This is the difference between data at rest vs data in transit. In the case of HTTPS, if you are sending the data ""hello"", this data is only encrypted while it is transit (because the protocol is doing the encryption)

I suspect what you are trying to do is a man-in-the-middle (MITM) attack, where you sniff the data being sent to the website.

You should check out `ettercap`

[This tutorial](https://null-byte.wonderhowto.com/how-to/hijacking-cookie-sessions-0161854/) puts it rather succinctly:

* Sniff --> Unified Sniffing
* Hosts --> Scan for Hosts
* MitM --> Arp Poisoning and ONLY check Sniff Remote Connections
* Start --> Start Sniffing

This should work on any machine on your LAN. It will break SSL connections, but normal HTTP traffic will flow just fine. To learn why it works, google ""ARP poisoning""

If I'm mistaken and you are actually trying to crack hashes you've recovered you would use something like JTR or Hashcat.

If you are actually asking about breaking into your website, I didn't click the link so sorry. You could use nikto/uniscan/sqlmap, dirb/dirbuster, nmap, and fierce for enumeration of a site though.",1515397272.0
paranoid_twitch,"For me reversing is all about figuring stuff out on your own. But I'll give you a hint. When you are reversing something new, learning about the mechanics of how it works in practice first. I would study the process of how the browser interacts with the server. You can also check out the link in the side bar, it has some tooling and relevant links.",1515397374.0
LovePCMoreThanHumans,I hope you do not mind the french though,1515393963.0
quadruplefault,This series was so awesome. It was really helpful and all the links were great too. Thanks so much! ,1515427368.0
dem0n,Dope video as always,1515239134.0
lazalius,"Hi, what do you think are the most requested skills to find a work with reverse engineering? If I am looking for an entry level job, what should I prove to be able to do?",1515227588.0
,"Is it possible to look for specific function calls like malloc using binary ninjas python API? Ive been looking but havent found anything, thanks.",1515460952.0
TailSpinBowler,"Have a question regarding UEFI bioses. Prolly not the best place, but only others are bios modding websites.

Been wondering if UEFI sets itself to readonly before booting the local operating system.

Really wanting to know if is possible to make bios setting changes such as passwords etc via WinPE environment. 

The OEM tools can read bios, but will reboot the machine to flash etc.

Back in the bad days, you could Peek and Poke NVRAM, err Cmos. Not sure how it works now.",1515494237.0
jornorsam,"Is there a nice way to get a memory dump of all the data on a connected USB device (using a Linux machine, through the command line) or to somehow manipulate the data stored on it in general? E.g. if I connected some special camera or phone to my computer and I wanted to look at the actual memory stored or pull out data matching certain patterns.",1515594990.0
cbpowell,"Hi. Not looking for shortcuts or easy outs, just straight advice.

I'm a professional software dev. I've recently obtained cracked samples of my team's commercial products (from e.g. TPB). This has given me the opportunity to do side-by-side comparisons of my regular vs. the cracked DLLs, using CmpDisasm -- I can see what the cracker did to reverse our DRM. But what really frustrates me is comprehending how the cracker was able to RE our commercial DRM (Flexera FlexNet Publisher).

My question is: how do I learn what he learned, in order to be able to better combat it? When I look at the disassembly diffs, I'm flabbergasted that it was so easy to RE our protections.

I may be asking a preposterously vague question, along the lines of ""how do I become a famous actor"" or something. Anyhow, as said, not expecting tab-A-slot-B instructions here. I'm grateful for any pointers in the right direction.",1515636348.0
,"Hello.

I want to use my mouse without the software. I have tried everything I know but as soon as I uninstall it and restart the PC, the default or hardwired settings in the mouse are activated.

Having the software installed, the settings apply themselves when the windows loads. The software starts up and sends command to the sister software 'atkexcomsvs' to communicate with the mouse and change settings.

I want everything removed and settings permanent. I absolutely dont want any services to be running on my PC. My previous mouse had no such requirement.

Can anyone help me?

I am using Windows 7 64bit.

Link https://www.asus.com/ROG-Republic-Of-Gamers/ROG-Strix-Impact/HelpDesk_Download/",1515652456.0
Johner1261,"This is great and all, but wow, do these tools you unpack actually sell? Good job making them look super lazy.",1515252192.0
Craftkorb,"Interesting response in the comments by **Doug Wyatt** ([Source](http://www.righto.com/2018/01/xerox-alto-zero-day-cracking-disk.html?showComment=1515134329527#c7553137849120106445)):

> I'm flabbergasted. That's my Alto disk you broke into!

> The APL stuff is surely related to some work I did with Leo Guibas, showing why lazy evaluation would be a really good idea for implementing APL: see Compilation and delayed evaluation in APL, published January 1978. (That paper gives me an enviable Erdős number of 3, since Leo is a 2.) I'm sure it's not a complete APL implementation, just a proof of concept. It happens that my very first part-time job at PARC, in 1973, involved writing decision analysis software in APL -- on a timesharing system!

> Given the AATFDAFD hint, I'd guess the real password is ADDATADFAD. This derives from a project I did with Jef Raskin at UCSD in 1974. (He mentioned it in this interview.) The Data General Nova we were working with produced some garbled message with ADDATADFAD where it should have said ADDITIONAL, and it was a running joke ever after. Strange, the things that occupy some brain cells for over 40 years.

> Thanks for an amusing blast from the past.

> -- Doug Wyatt (Xerox PARC 1973-1994)

Was wondering at first if the passwords were just hash collisions, but at least this one isn't entirely!",1515161066.0
diff-t,The comments from the original authors of those disks make this post pure gold.,1515137324.0
flarn2006,"Is it possible that those random strings weren't the passwords, but just strings with the same hash?",1515108343.0
corysama,via https://news.ycombinator.com/item?id=16073191,1515103177.0
corysama,Via https://news.ycombinator.com/item?id=16042141,1515008502.0
0xdea,"It looks like the Intel bug was reproduced by an independent researcher:

https://twitter.com/brainsmoke/status/948561799875502080",1515000207.0
joxeankoret,"Apparently, this is the culprit of the bug: https://cyber.wtf/author/andersfogh1974/",1515000222.0
newgre,Full details by Project Zero: https://googleprojectzero.blogspot.ch/2018/01/reading-privileged-memory-with-side.html,1515020022.0
TacoJockey,putting on my tinfoil hat: https://www.fool.com/investing/2017/12/19/intels-ceo-just-sold-a-lot-of-stock.aspx,1515003423.0
icxcnika,Could this be used to dump Intel ME memory?,1515069393.0
playaspec,Looks like some of the fix is [handled by the compiler](https://lkml.org/lkml/2018/1/3/780),1515035898.0
eclectro,"Read the [Wikipedia article,](https://en.wikipedia.org/wiki/Meltdown_(security_vulnerability\)) as of this posting time it's up to date.",1515122972.0
fluoroamine,On /r/hardware people are speculating games don't make much syscalls. Is that true?,1514994869.0
0xNemi,"Seems like a lot of this is enabled due to the ""rdtsc"" instruction (profiling for cache hits). Any reason why they didn't mask the value returned for ring3 applications? Basically, [this tweet](https://twitter.com/nickeverdox/status/949013117509435394). It seems like a more elegant solution than what the OS vendors did.",1515101508.0
Byteguru,Could this kind of bug be used for RE on game consoles? I mean for example the XB1. Uses a custom AMD CPU but if it uses speculative execution it may be vulnerable correct?,1515274390.0
siliconmon,Why not use Yara?,1515039758.0
,"All three of those sectors require different sets of knowledge. How did you learn policy, security practices, code, and software engineering all in your career? Would you say you’re a jack of all trades, or do you have any specialties?",1514917949.0
cerberus1234,I think the best point is to create a quiet workplace. That is actually what I dislike about my full time office. Stupid open office designs.,1514921208.0
butters1337,"Great talk.  As someone who's worked in that industry, cybersecurity is a huge huge huge problem.  The old guard (experienced mid-career and senior) ICS personnel have limited IT ability at best and almost no concept of urgency around security.  It's always a speed bump and always sacrificed for convenience.

If a real war were to break out between sophisticated state actors, knocking out real infrastructure would be trivial.",1514751647.0
Haleek47,"My favorite talk of 343C, as someone who's not in the industry is a great source of topics to learn about.",1514795821.0
This_Is_The_End,"What the CCC and it's hackers don't get is, that the problem isn't just an administrative one. The the issue is so huge, that smaller companies have no change to get control of the issue. And even larger companies have problems, because if they take care, they will be to expensive. 

What it need is a common hard- and software platform. Good luck with that",1514826481.0
heerajnair,"WIthout root, using frida in possible. You just have to put the .so file of firda into the lib of the apk and recompile with apktool. Checkt this blog, https://koz.io/using-frida-on-android-without-root/",1524560341.0
ehochx,You forgot the part where you do anything interesting. ,1514732619.0
moyix,"I'm especially excited about the fact that this can be used with PANDA – so you can create a recording of a physical embedded device, and then replay it later without that device being present (or even send it to someone else for analysis).",1514772096.0
,[deleted],1514678321.0
prcrst,It's here on media.ccc.de: https://media.ccc.de/v/34c3-8941-console_security_-_switch,1514646073.0
sniperczar,"The official video was taken down, but after some hunting I found a Vimeo link. Really excellent walkthrough of the extensive security features and how each one eventually failed.",1514600736.0
BozzCL,"Ugh, those jerks whistling the Jeopardy song while he was trying to get the browser to work.",1514642165.0
r4xh3x,"The talk has already been mentioned [here](https://www.reddit.com/r/ReverseEngineering/comments/7mgiqj/syntia_synthesizing_the_semantics_of_obfuscated/) a few days ago. Here are [slides](http://synthesis.to/presentations/34c3_synthesis_deobfuscation.pdf),  [code](https://github.com/RUB-SysSec/syntia) and [academic paper](https://www.usenix.org/system/files/conference/usenixsecurity17/sec17-blazytko.pdf)",1514563222.0
,[deleted],1514572781.0
perror,"Also done by the authors of the talk (github repo): [x86 Microcode Samples](https://github.com/RUB-SysSec/Microcode)

And, their [USENIX'17 article](http://syssec.rub.de/media/emma/veroeffentlichungen/2017/08/16/usenix17-microcode.pdf).",1514644621.0
Jerking_In_Circles,"Does anyone have any suggested reading and/or tutorials regarding hardware hacking/reverse engineering? I have ""hacking the Xbox"" but I would like to add to my collection. ",1514571416.0
sarkie,Gorgeous!,1514473168.0
GreekLogic,ELI5 please.,1514516315.0
Triple_Elation,"I too am at 34C3

In all seriousness, I felt that lecture suffered a bit from ""promise the moon, show demo of the hill next door"" syndrome. I was left with a lot of questions about what happens in practice when you try to use this method to ""learn"" anything which reacts in a less forgiving way than a sum to minor input perturbations, or anything which produces some random by-product which the algorirhm misinterprets as output, or let's say SHA256. There might be answers for all these questions but the talk failed to showcase them. Assuming these really are unaddressed issues, I would rather the authors outright said ""this is a proof of concept, the holy grail is quite a journey away"" -- it would have clarified a lot.

Props to the authors for implementing their approach and uploading their code to github, this already shows a healthy will to actually contribute and not just check the ""spoke at another conference"" box.",1514411949.0
rolfr,"This submission links to the white paper published earlier this year at USENIX Security. [Here are the slides from this year's CCC](http://synthesis.to/presentations/34c3_synthesis_deobfuscation.pdf). They are very well-illustrated (be sure to use contiguous mode for scrolling through the PDF -- i.e. the left and right arrow keys rather than scrolling through the slides in an unaligned fashion). (If you're wondering, the VM used as an example in the presentation looks like VMProtect with a new direct-threading feature with which I am unfamiliar.)",1514420173.0
andreacento,What does it offers compared to Intel Pin?,1514369524.0
praddo,"was bored last night, surfed and found this. 
was actually nice to know I am not the only one bothered with terminology.",1514299775.0
RenaKunisaki,This felt like it ended just as it was getting to the point.,1514323457.0
dack42,"> The law in the US prohibits any modification to purchased software product

I know breaking copy protection is illegal under DMCA, but how is it illegal to modify software if you aren't doing anything with copy protection? ",1514346722.0
igor_sk,marketing fluff. ,1514462812.0
The6P4C,`assemble` is an interesting name for a function that disassembles and prints the disassembly...,1514287968.0
Maijin,Why not contributing to radare2 or an existing project ?,1514299101.0
davenobody,So why chip-8?  I had to look it up to find out what exactly it is.,1514271980.0
de_hatron,"I don't really see this as a contest. It's a job where you may get a computer as a compensation, but likely it takes so long that it's better to just buy one. ",1514109316.0
tambry,"> Dell Broadcom BCM5719 Gigabit Ethernet Card  
> Price: $195.24

Would love to try, but it's too pricey.",1514104874.0
torpcoms,"There are some additional presentations by Guillaume Delugré linked at the RCS Wiki page for [BCM5719](https://wiki.raptorcs.com./wiki/BCM5719#Resources)

They also mentioned that apparently the firmware identifies itself as BCM**9**5719 while the chip itself has BCM5719 clearly printed on the top.",1514093919.0
fearless0,Turns out it is fake news: https://github.com/0xd4d/dnSpy/issues/617#issuecomment-353681961,1513986765.0
siliconmon,Mother of god,1513972406.0
Hooftly,Pwned,1513975195.0
0xd4d,"Since some of you trust anonymous pastebins and don't realize what an archive button really does, I've posted this too, thanks to fearless0 for posting the other link

https://github.com/0xd4d/dnSpy/issues/667",1513990438.0
mgostIH,How would you practically reverse engineer an application that uses a virtual machine based obfuscation like VMProtect?,1514029004.0
,"As far as I am aware, iOS apps are encrypted in transit and after installation, only being decrypted when they are run, and to obtain a decrypted copy from an iOS device requires a jailbreak so the app can be dumped from memory after loading.

Is this still correct, or are there other non-jailbreak methods of doing this?

Is anything known about the decryption method and where the keys originate from?",1514297976.0
MrK_HS,"Is it feasible to reverse engineer the Intel HD Control Panel? The reason is that I'd like to implement a way to have nearest neighbor interpolation for integer resolution multiples: for example, with a 4K display (4x1080p), 1080p scaling would not be blurry like it normally is on Windows 10. I'm not completely sure if it's possible to achieve this without editing the Intel HD driver 'tho.",1514394596.0
transtechgirl86,Can anyone point me to a resource where I can download all of the Microsoft API functions explanations and returnable values? I want it for an offline analysis box and find the MS website impossible to navigate.,1514461541.0
rolfr,"I read most of this paper, though I had to stop once I got to section 6.1.4. Specifically, the appendices should contain source code for the two implementations of the example program, but they are blank instead; and the material starting at that subsection makes heavy reference to those implementations. Thus I could no longer follow. I'll give it a second look when a subsequent version is released.

On to the content of the paper: it's mostly a conceptual approach to bringing the long-underdefined concept of a ""weird machine"" closer to a formal description. If the attempt is successful, and if the approach captures exploitation concepts in an actionable way, it could serve as a bridge between the formal community and industrial exploit developers. That's a laudable goal and I hope it succeeds.

I myself straddle the line between formal and industrial research, though I'm not heavy into vulnerability analysis. Some of my impressions while reading this paper:

* I don't think side channel attacks are as much of a stretch to the main thrust of this paper as the author states in the introduction. You could model the output of the side channel as being a formal, observable ""output"" of the program -- in fact I think this idea suits the formalism better than several other scenarios that I'll describe below.

* Given that the paper was largely conceptual, many of the choices on how to formalize the individual components of the system are immaterial. In concert, abstract interpretation theory really describes a generic concept: analysis and transformation of program execution artifacts enabled by Galois connection between the underlying ""real"" domain of program execution and an ""abstract"" one in which analysis is facilitated. Parts of the concept are independent of execution model, and papers are free to choose an existing model or invent their own. Thus, ""weird machinery"", if established, can eventually isolate its fundamental concepts and leave some choices in formalization (e.g. the execution model) up to individual authors. But at present, I thought some of the formalizations weren't well-chosen for practical reasons. 

The first example is using an execution model wherein registers are assumed to be stored in memory. Some processors like the ATMEL ATmega16 actually do this, but for those that don't, I would strongly advise against modelling them as though they did. This is a one-way ticket to a painful and probably intractable analysis to prove that each individual memory operation does not modify a register (see [Brauer](https://www.embedded.rwth-aachen.de/lib/exe/fetch.php?media=bib:bkk10.pdf)), despite the fact that this behavior will not occur in practice. It's easy enough to define the machine state as consisting of both memory and registers. Abstract interpretation already involves a loss of precision; it's best not to unncessarily exacerbate it. 

Secondly and probably more controversially, I didn't think that finite state automata were a necessarily the best choice for describing the ""intended FSM"". Although the examples in the paper match well with the FSM formalization, and though the author later made basically an implicit big-step semantics argument justifying it when discussing ""programming weird machines"", the choice strikes me as being unwieldy and as limiting the applicability of the results in general. 

There are many different ways to model the execution of systems; the models expose different features, and may be more suitable or less suitable in describing a particular system. An easy example is in considering what ""the halting problem"" means for different kinds of program. For one example on one hand, a compiler takes input from the command-line and from files, processes and transforms input source code, and produces another structured programming language object as output. It makes a lot of sense to ask whether a compiler will terminate; we certainly want it to. But take for a second example on the other hand an FTP server. It is probably implemented by a thread running in an infinite loop accepting network connections and passing them off to other threads, which may run for an arbitrary period of time. It makes a lot less sense to ask ""halting""-type questions about an FTP server. Accordingly, we often use different models for studying systems with different execution characteristics like this. In particular, model checking under an assumption of non-termination is probably a more appropriate area of study for the FTP server than it is for the compiler.

And so the FSM-style model is a better match for the FTP server than the compiler: it continues to execute while recieving input, and producing output, on behalf of the user. Adapting this model to a compiler is not as straightforward. The compiler takes a collection of inputs up front (as its only interaction with the user), maybe prints some textual strings while it executes, and produces an ouput.

Addressing both of these points, I would probably scrap both the ""memory machine"" concrete execution model and the finite state machine abstract execution model, and replace both of them with transition systems. Transition systems provide all of the necessary features, aren't mandated to have any of the unwieldy ones, can easily be augmented with new features like input and output instructions, and their adoption would simplify and clean up other parts of the paper (such as the replacing the discussions of transitory states in section 4 and interaction in section 5 with arguments about big-step semantics abstractions). Doing that might also get the author closer to having a real Galois connection between the two machines in section 4.

* The discussion of the IFSM as an abstraction of the program in section 4 was interesting. I haven't fully sorted my thoughts out on that subject, but it will likely rattle around in my brain for a while. What's presented is somewhat close to abstract interpretation, but at present does not satisfy some of the key criteria (for example, the codomain of the instantiation function is different from the domain of the abstraction function -- already it is impossible for this mapping to form a Galois connection, which is the first step in establishing abstraction in the sense of abstract interpretation). If it were a legitimate Galois connection, this would immediately provide many tools to assist this study. I'm still pondering some of the nuances of how to go about doing that.

On the subject of the IFSM, though, I thought that the definition was a bit too vague for formal analysis. There is an assumption that programs correspond to imperfect realizations of ""Platonic ideals"" of a perfectly-working hypothetical programs with no security vulnerabilities. Of course we don't want our programs to have security vulnerabilities, but they can happen at the design level before the implementation-level. E.g. if the program is derived faithfully from a specification, where the specification itself has a vulnerability at the logical level, then this does not correspond to a deviation of the program from the ""intended"" behavior.

Thus, as the author states, ""it is impossible to even define ’flaw’ without taking into account what a bug-free version of the software would have been"". (Though I'd argue that if the program is intended to behave legally with respect to the underlying system and programming languages, that certain behaviors like dividing by zero or dereferencing a NULL pointer with no exception handler in place, accessing unmapped memory, invoking privileged instructions, etc. are ""flaws"" regardless of the intention.) And so the precise way to analyze what behavior is unintentional is in the form of a disequivalence proof between a formal specification and an implementation -- but if we had formal specifications, many of these problems would not exist in the first place.

I'm kind of murky on how to define the ""intention"" if not for formal specifications. If it were me doing this research, I'd probably start by formalizing how rowhammer could cause a formally-verified implementation to deviate from the execution model -- by doing that, you would have a very rigorous and well-defined logical basis from which to begin studying, without having to ponder the definitions of the base-level concepts of intention versus implementation.",1513987204.0
igor_sk,"> Abstract—The concept of exploit is central to computer security, particularly in the context of memory corruptions. Yet, in spite of the centrality of the concept and voluminous descriptions of various exploitation techniques or countermeasures, a good theoretical framework for describing and reasoning about exploitation has not yet been put forward. A body of concepts and folk theorems exists in the community of exploitation practitioners; unfortunately, these concepts are rarely written down or made sufﬁciently precise for people outside of this community to beneﬁt from them. This paper clariﬁes a number of these concepts, provides a clear deﬁnition of exploit, a clear deﬁnition of the concept of a weird machine, and how programming of a weird machine leads to exploitation. The papers also shows, somewhat counterintuitively, that it is feasible to design some software in a way that even powerful attackers - with the ability to corrupt memory once - cannot gain an advantage. The approach in this paper is focused on memory corruptions. While it can be applied to many security vulnerabilities introduced by other programming mistakes, it does not address side channel attacks, protocol weaknesses, or security problems that are present by design.
",1513888645.0
PMOS-FTL,"> Clearly, if irrespective of any attacker actions (input) the
machine always transitions into a well-defined and intended
state **without any observable effects**, the transitory state is
not relevant for the security properties of the IFSM.

Key in bold.

The problem here is that ""observable effect"" is not well-defined at the FSM level. Side channel attacks are a thing.

Papers about provably-correct programs tend to gloss over the problem of mapping the abstract machine to reality in a way that preserves guarantees, and this is no exception.",1513926132.0
,Bit of a stale repo,1513947226.0
ak0xax,q: is Zydis thread-safe by design ?,1513637378.0
greenee111,Please tell me how you get the memory address on the left side to show up in IDAPro  like starting from 0040117A.  Been looking around how to do that.,1513469831.0
JakeCoble,"I'd love to help, but IDAKnow the answer.",1513487599.0
Nightlark192,Why are you using pastebin? And maybe include more information about what kind of challenge you're talking about.,1513402736.0
phoenix616,Is there any reverse engineering of Discord done? Would be awesome if we could implement custom clients. (or even server),1513422903.0
hzer0,Why discord and not slack? Discord is basically enhanced voice chat for gaming. Slack is much better for this sort of thing imo. ,1513468364.0
verideth_01,https://discord.gg/qWzbWBp - new link,1519256893.0
,[removed],1513389075.0
DefenTheNation,"I am starting out, used Cheat Engine to inject code to save the pointers to a global pointer and used those in my cheat table. The pointer scan is kinda clunky in CE IMO, so...    

1. Whats a good alternative to CE for pointer scans so I dont have to inject code to find the values? Are there better methods than this to quickly find those values?    

2. What are some good methods for reverse engineering functions to call them at will? Is there a better way than trying to manually figure out the disassembled instructions?     

Any help and links to solid tutorials would be great. Ive had to sift through a lot of bad youtube tutorials to figure out the little I know.",1513361565.0
HexCC,"How does a program interact with a device driver in Windows? I can see that a program has a handle to a device driver, but I don't see it call CreateFile and it doesn't contain a \\Device\\[name] string, so I'm unsure how it managed to get that handle.",1513368309.0
Tycoonie259,"Okay I know this isn't really suited for beginners, but I got programming experience and know MIPS assembly so I hope to give it a shot.

A game I've been playing until 2012 was shut down due to financial issues. There's no captures of any server-responses or offline mode, so it's unplayable in every way, although I firmly believe it's possible to edit the client enough to either find out what a remake of a server would have to do, or to force it to some form of offline playing (there was an online practise mode, for example)

Now I could just completely remake the game (which I'm a fan of, I'm currently coding tools to rip certain 3D assets etc.) to play it again, but the original game just had such wonderful feelings to it that a ""fake"" just won't cut it. Somebody is also working on a remake (so I'll give any asset I can rip to him) so doing double work won't really contribute.

Where would I have to start if I wanted to take on the task of making the game playable through editing the executable (& potentially remaking the server) ? 

Any tips and guidances are welcome, I'm doing this next to school so I won't be able to spend a lot of time on it, but enough to get somewhere I think. I haven't done any server programming or reverse engineering before. I'm okay in C++ (or C if that's somehow more useful) and like I mentioned I've had MIPS-assembly, so learning a different kind of assembly wouldn't be any issue (with the right resources at least)

[with okay in C++, I mean that I've made a decent remake of Monopoly with a good object-oriented design and a graphical interface in Qt as assignment last year, during my first year of computer science at uni]

Somebody also did some editing to the game's executable so that it's anti-hackshield does load up, so that's not an issue.",1513386974.0
internetsupertroll,"This is a followup question to an old post from this sub:

https://www.reddit.com/r/ReverseEngineering/comments/2m7ylm/i_have_a_webp_file_which_is_encoded_somehow_could/

I've got an encoded webp from the same source (kakaotalk app)

direct link to the webp I'm currently working on: http://item.kakaocdn.net/dw/4407124.emot_002.webp

(others are accessible by changing the 002, it should range from 001-024)

using the python script provided by /u/supersaw7 in the previous thread and updating some of the syntax for python 3.0

I was able to get this decoded output: 

http://www120.zippyshare.com/v/L4XZ7Yp7/file.html

the new file is showing the expected webp header
>RIFF (length)x4 WEBPVP8X

so I thought the key hadn't changed since the last post, however, it still fails to display an image, so I'm unsure how to proceed.

The expected output is an animated image of a cartoon bear running while holding a giftbox above his head, if the image number corresponds to its in-app arrangement.

The decoded output is also several bytes larger than the input. In the provided files it is 28 bytes larger. In another, the difference was 24 bytes.

----
This is the current form of the python script I'm using

    import sys
    import glob
    import base64

    def xor(a, b):
        return ''.join([chr(x ^ y) for x, y in zip(a, b)])
        
    
    def b64tostring(b):
        return base64.b64decode(b)

    key = '''
    561CWxbxgRlmQjxEZ41EuE5YHOnD2hxQR0zvUEqLwMs/Eb
    PkNHCgeqOuLFtLEcMBI36CWUwdw80B0hwja+OftrIuYNen
    qf6eP7pYXWTxoIIUbFey/ZoSSU04X9KQb/ybjcvFfrcMAV
    d9I05PvUiEA5RRaCn4z0tLOkMYVgg94ow='''

    key = b64tostring(key)

    for fname in glob.glob(sys.argv[1]):
        if fname[-9:] == '_dec.webp': continue
        fin = open(fname, 'rb')
        fout = open(fname.split('.webp')[0] + '_dec.webp', 'wb')
        fout.write(xor(fin.read(128), key).encode())
        fout.write(fin.read())

Any insight is greatly appreciated !",1513366319.0
RandomGoatLover,"I've been following a few persons involved in hacking closed devices.
But there are a few things I don't get and cannot find any info about on the web.

Reversing desktop applications is ""easy"" because we have tools such as debuggers, we have access to the files, etc...

But how do these guys start reversing and exploiting closed devices such as the 3ds for example or even the switch. I understand that the webkit exploit used on the switch has been ported but how do these guys do it ""blind"" ? ",1513524105.0
,[deleted],1513614127.0
montouesto,"I'm studying decoding routines of packers. A lot of packers use very simple routines, i mean short. But i really can't understand the logic. (or algorithm?) I understand each instructions and what they do roughly. But i can't imagine the algorithm. Unless i have plenty time for analyzing, I can't understand these things perfectly (can't see the big picture). So my question is that i think i'm short of basic know-how (or knowledge) of assembly routines(used for that). Are there any sources for study? Actually i don't know exactly what i want (and lack of english skills), so i'm asking for help with my situation. Thank you.",1513645062.0
,[deleted],1513683172.0
DanSec,The link to the pdf 404s,1513349599.0
rolfr,[Code](https://github.com/ampotos/dynStruct).,1513321162.0
OG_L0c,"This is awesome. I just started to learn about this a few days ago. Currently learning Assembly, looking forward to learning more about crackme! ",1513217705.0
NamPNQ,Awesome,1513226840.0
iltaek,9reat,1513343890.0
LeopardSkinRobe,Thanks a lot these were a lot of fun. Where would you recommend going next to expand on what we learned here?,1513348934.0
,The site is down for me,1513252101.0
Tilduke,"Nice, I'll have to give this a shot. Even if it's half decent it could save paying for the hexrays one for the occasional use.",1513159572.0
pruzinat,"This is the same thing they had previously available via their web interface right? I remember it looked pretty cool, but there were some limitatations (bigger binaries would timeout during parsing).

*\o/ to folks @ Brno division.*

todo: look at integrating this into r2/emilpro",1513170921.0
,[deleted],1513185355.0
Zed03,"The whole client-server thing to decompile using an API key, even from IDAPro, is a huge no for me. Hopefully there are future plans to have an offline plugin.",1513187180.0
,Link's broken? Videos not playing. ,1513165024.0
Sn34kyMofo,"For those having issues seeing the video, try this link instead, which is a direct link instead of a time-segmented embed (3:06-1:50:00 is the full livestream): https://youtu.be/iYTCBPUn98c",1513171572.0
real_namreeb,Getting an error. Is it over?,1513141278.0
Hellcleaver,"Try mortal online, you can steal items from houses, remote kill players on distance. Half dead f2p game, but still a lot of fun with hacks.
That's not me in the video.
https://www.youtube.com/watch?v=YXG1bLxfalY",1513697429.0
mewkiz,"Really lovely to see retdec released as open source! I've been waiting for this day since 2015 :)

Congrats and happy reversing!

Cheers,
/u",1513111626.0
bemitc,"Just for clarity, I don't have anything to do with the retdec project -- I just posted it here. In addition to Hack.lu, here are the slides from botconf https://retdec.com/web/files/publications/retdec-slides-botconf-2017.pdf",1513134665.0
Johner1261,How does it compare to Hex-Rays?,1513137842.0
fridayRE,"Great job, thanks for releasing this!",1513130287.0
Sn34kyMofo,"For anyone wondering exactly what RetDec is, here's a good lightning talk (~4 minutes) on YouTube from Hack.lu 2017: [RetDec: An Open-Source Machine-Code Decompiler](https://www.youtube.com/watch?v=jXYxPenTcHs)",1513131353.0
killbug2004,Great job!,1513132661.0
Sn34kyMofo,"Looking forward to checking it out! There's a similar repository that I've quite enjoyed, so you (and others) might as well: [AntiDBG](https://github.com/cetfor/AntiDBG).",1513094740.0
fridayRE,"Nice work, keep it up!",1513130312.0
khasaia,"Any feedback appreciated.

Twitter: https://twitter.com/_qaz_qaz
",1513085888.0
Sn34kyMofo,"My main purpose with this repo is to break down the barrier between general reverse engineering, and game hacking as an isolated branch of mostly dynamic analysis via a handful of tools.

I want to demonstrate how people can use tools like *Binwalk* to, say, identify and extract resources from games. Or perhaps creating custom *YARA* rules that can help a game hacker quickly identify if a game is using a certain game engine, what its version is, etc. Or using *CDA (Code Dynamic Analysis)* to narrow down function calls over the course of a timeline to identify, say, a ""restore health"" function or ""add ammo"" function.

The list goes on. Anyway, I just wanted to share in case this is something you all might be interested in.

Note: This repo isn't to be confused with a similar but different repository I'm running in regards to [online game hacking](https://github.com/dsasmblr/hacking-online-games).",1513051724.0
0xa08f60,"Cool! I just released a tool called pointer sequence reverser that will output the subset of instructions used by an application when accessing a given address. The instructions' operands usually contain information about data structure relationships and sometimes a repeatable path from a predictable address (e.g., a fixed offset from the base of the executable) to the given address. Very useful if you want to write a hack that accesses game data and need to be able to figure out where that data is at any given time. Cheat Engine's pointer scanner achieves the same thing but with a different and (in my experience) inferior method. Code can be found on [GitHub](https://github.com/nccgroup/psr). ",1513152393.0
seanshoots,Not sure where to ask this - the dnSpy repository is archived now? Kinda spooky.,1513483102.0
CPunch_71,Seems a lot like a proxy dll lol. Still really neat!,1512931791.0
montymintypie,"This is my first big long technical piece, so I'd love any feedback! I really tried to focus on my methods and thoughts as I progressed through this, as that's what I find most interesting when reading other RE writeups.",1512825696.0
shinyquagsire23,I'm mildly relieved that I'm not the only one throwing `_maybe` and `do_the_thing` names around.,1512852468.0
Broadway14,"Interesting read, thank you!",1512831650.0
Johner1261,"Wow, I literally just read your mechanicalkeyboards post and now I see this. You’re on a roll! Nice job.",1512841816.0
yesimnathan,Very cool write-up! Thanks for sharing =),1512934992.0
nsk_nyc,"Very inspiring. After working on a project myself, i found myself in stale mate. Now i'm leeching off your creative burst from the article. Waiting for more.",1512967146.0
Kriegdavid,This was a fun read! Cheers mate.,1513019552.0
CriticalException,When reverse engineering is a part of your skill set how much does it improve your opportunity in the job market?,1512760244.0
,"Can someone explain how to unpack and encrypted PE with several passes through the xor. 

It’s calling a function, but I’m unable to break the encryption on the data in the function because of the pass through on the xor. It appears to be RCA but I’m not sure. 

I can’t provide a sample of the PE because reasons, but if someone better than me can explain how to RE encryption that uses several passes through xor, I would be greatly appreciative. 

",1512793690.0
W9CR,"Does anyone here know about an old RTOS ""pSOS+"" which was acquired by Windriver in 1999 and then killed off? 

And/or any ideas on debugging a 68360 processor running code from ROM?  You can't set software breakpoints, and even the hardware breakpoint doesn't work when running from ROM.",1512794440.0
OmnipotentEntity,"Working on my first Java project.  I have my class files, but I know next to nothing about Java bytecode.  Where the best place to start? (Assuming I have previous RE experience.)  (There's also a good chance that this particular program is obfuscated.)",1512884718.0
nsk_nyc,Beer button please! Great release.,1512820985.0
igor_sk,[slides](https://www.blackhat.com/docs/eu-17/materials/eu-17-Sklyarov-Intel-ME-Flash-File-System-Explained.pdf),1512636908.0
playaspec,"Well,  *that* didn't take long. ",1512661310.0
doodle77,So the Intel code had stack cookie protection but memcpy_s didn't?,1512661476.0
moyix,Recently summarized by The Morning Paper: https://blog.acolyer.org/2017/12/06/the-dynamics-of-innocent-flesh-on-the-bone-code-reuse-ten-years-later/,1512621185.0
igor_sk,"I guess no hope for the code release, as usual?",1512655341.0
mrexodia,Try x64dbg ;),1512594898.0
farmdve,"Very interesting article, thanks.",1512534181.0
ttrmn,Is that protection from the Warbird gaming forum?,1512565159.0
PartOfTheBotnet,"I posted this nearly [two months ago](https://www.reddit.com/r/ReverseEngineering/comments/768glv/recaf_a_modern_java_bytecode_editor/) and am making an update post. Figured if [Bytecode Viewer](https://www.reddit.com/r/ReverseEngineering/search?q=bytecode+viewer&restrict_sr=on&sort=relevance&t=all) did it, then I could too.

---

Anyways, all of the feedback from the last thread has been addressed and even more has been added. The changelog is found on the [releases](https://github.com/Col-E/Recaf/releases) page. The version from the previous post is 0.6, so the changes are the combination of 0.7 and 0.8. 

**TLDR** Changelog: 

* _Started_ a plugin system
* Fixed dozens of bugs / inconsistencies
* Theme is easily swapable if you don't like java's Nimbus LAF.
* You can verify the integrity your edits 
* More search options

---

",1512487450.0
ohaz,Does this properly replace Bokken? Somehow Bokken has been broken for ages,1512402139.0
Zed03,Anyone have a screenshot of it running?,1512485422.0
ThePixelCoder,"Is there a tutorial on how to install this on Linux somewhere?

EDIT: Nevermind, it's in the readme. Does anyone know how to add a menu item in GNOME?",1512391582.0
anomalous_cowherd,"A long time ago now it was found that certain dialup modems would use the RS232 data lines to drive the Tx/Rx activity LEDs directly.

To a human eye it was just 'flicker when busy', then somebody realised you could use this same technique to read the actual data. You could even do it from across the road and through a window, using a photodiode attached to a telescope...

",1512294802.0
TailSpinBowler,"I think it would be better to explain what FSP was in the intro, rather than crash course into assembly. Not once did you mention Firmware in an article about Firmware?",1512263133.0
tambry,Do people willingly use AT&T assembly syntax?,1512228351.0
the_kok_god,This was beautiful to read. I took an assembly class in college and I've always wanted to dig a bit deeper. Maybe today is that day.,1512242031.0
ImmortalZ,"Hello.

We're working on reverse engineering the CAN bus on a 2006 Honda Civic so that we can run a standalone ECU on it while retaining the stock dash functionality. We have a Macchina M2 (Arduino Due with automotive interfaces like CAN, K-Line and so on) that we have used to capture packets from the factory CAN bus. We have identified several frames we need to control the dash.

The problem is that several of these frames have a last byte that is acting as a checksum for the rest of the data. If we use a fast enough frame rate along with a simple counter for the last byte, we can have the dash respond thanks to some values from the counter matching the expected checksum due to chance. However, this is not really a solution.

Below is a snippet which has a few frames with the frame ID 0x158. Here, D1-D2 is speed for non speedo purposes, D3-D4 is RPM for non tacho purposes, D5-D6 is speed for speedo purposes, D7 is an odo tick that changes in value when the vehicle moves 10m. The values don't matter, only the fact that it changes does. D8 is the checksum.

&nbsp;

|time stamp |ID |LEN|D1 |D2 |D3 |D4 |D5 |D6 |D7 |D8 | 
|-----------|---|---|---|---|---|---|---|---|---|---|
|329738518|0x00000158|8|0x01|0xDF|0x01|0xD1|0x01|0xE3|0x40|0x35|
|329748518|0x00000158|8|0x01|0xDC|0x01|0xD4|0x01|0xE0|0x40|0x0B|
|329758685|0x00000158|8|0x01|0xD1|0x01|0xD8|0x01|0xD5|0x40|0x1D|
|329768517|0x00000158|8|0x01|0xD0|0x01|0xDA|0x01|0xD4|0x40|0x2C|
|329778708|0x00000158|8|0x01|0xCE|0x01|0xDC|0x01|0xD3|0x40|0x3D|
|329788516|0x00000158|8|0x01|0xC7|0x01|0xDD|0x01|0xCC|0x40|0x0E|
|329798514|0x00000158|8|0x01|0xBC|0x01|0xDE|0x01|0xC0|0x40|0x14|
|329808512|0x00000158|8|0x01|0xBC|0x01|0xDD|0x01|0xC0|0x40|0x24|
|329818676|0x00000158|8|0x01|0xBB|0x01|0xDD|0x01|0xBF|0x40|0x36|
|329828505|0x00000158|8|0x01|0xAD|0x01|0xDC|0x01|0xB1|0x40|0x07|
|329838689|0x00000158|8|0x01|0xA7|0x01|0xDB|0x01|0xAA|0x40|0x15|
|329848510|0x00000158|8|0x01|0xA3|0x01|0xDB|0x01|0xA7|0x40|0x2B|
|329858508|0x00000158|8|0x01|0x9F|0x01|0xDB|0x01|0xA2|0x40|0x34|
|329868509|0x00000158|8|0x01|0x9B|0x01|0xDB|0x01|0x9E|0x40|0x00|

&nbsp;

And this is a snippet from the frame ID 0x1DC. Here D1 is always 0x02. D2-D3 is the RPM and D4 is the checksum byte.

&nbsp;


|time stamp |ID |LEN|D1 |D2 |D3 |D4 |
|-----------|---|---|---|---|---|---|
|65956326|0x000001DC|4|0x02|0x05|0xA2|0x38|
|65976465|0x000001DC|4|0x02|0x05|0xA5|0x08|
|65996321|0x000001DC|4|0x02|0x05|0xA5|0x17|
|66016310|0x000001DC|4|0x02|0x05|0xA3|0x28|
|66036339|0x000001DC|4|0x02|0x05|0xA2|0x38|
|66056312|0x000001DC|4|0x02|0x05|0xA2|0x0B|
|66076447|0x000001DC|4|0x02|0x05|0xA0|0x1C|
|66096314|0x000001DC|4|0x02|0x05|0xA3|0x28|
|66116310|0x000001DC|4|0x02|0x05|0xA4|0x36|
|66136311|0x000001DC|4|0x02|0x05|0xA4|0x09|
|66156298|0x000001DC|4|0x02|0x05|0xA4|0x18|
|66176303|0x000001DC|4|0x02|0x05|0xA8|0x23|
|66196297|0x000001DC|4|0x02|0x05|0xA3|0x37|
|66216295|0x000001DC|4|0x02|0x05|0xA3|0x0A|
|66236299|0x000001DC|4|0x02|0x05|0xA4|0x18|

&nbsp;



[time stamp] is in microseconds. It is an arbitrary timer that allows you to see frame timings. This is created by the device that reads the frames. Frame ID is self explanatory. LEN is the length of the frame. For regular CAN frames, this can be up to 8. D1 - D8 are the 8 bytes in the frame. For both of my examples above, the last byte is the checksum byte.

0x1DC deals with the RPM alone and thus was easier for us to attack first. We found the following:

* If all the other bytes stay the same, the checksum byte cycles between four values. So, if you load this dataset into a SQL DB and do a SELECT DISTINCT against the data bytes (D1-D3 for frame ID 0x1DC), you will only see four rows for each unique set of data bytes.

For example,

|d2|d3|d4|
|----|----|----|
|0x03|0xD9|0x03|
|0x03|0xD9|0x12|
|0x03|0xD9|0x21|
|0x03|0xD9|0x30|

&nbsp;

|d2|d3|d4|
|----|----|----|
|0x03|0xDA|0x02|
|0x03|0xDA|0x11|
|0x03|0xDA|0x20|
|0x03|0xDA|0x3F|

(Yes, the fourth row doesn't fit the pattern. We see this all over the place)

* The difference between these four values is 0xF. Sometimes, we've seen it skip a multiple, so the difference between the first two would be 0xF and the third one would be 0x1E away.
* The checksum is always between 0x0 and 0x3F (0-63 in decimal).

&nbsp;

We are hoping the hivemind can help us figure this checksum out so that we can move on and make some boost. 

&nbsp;

For those of you interested in looking at a large dataset, it is [available here](https://we.tl/qfT8P95P5I). ",1512197068.0
excaliboor,"How often do you come across invalid instructions?

I'm writing a disassembler and don't know how to handle for example invalid ModR/M values or whatever shouldn't happen. Here's a example of my output, with preceding bytes for context. How would you guys handle this and other similar things?

(Edit formatting)

> ...

> 64

> [SEG = FS]

> ----------------------

> 89 0d 00000000

> MOV e_CX -> [disp32 (0)] 

> ----------------------

> 59

> POP e_CX 

> ----------------------

> 5f

> POP e_DI 

> ----------------------

> 5e

> POP e_SI 

> ----------------------

> 5d

> POP e_BP 

> ----------------------

> 5b

> POP e_BX 

> ----------------------

> 81 c4 000000dc

> ADD e_SP + 220 -> e_SP 

> ----------------------

> c3

> RET

> ----------------------

> 8d 49 00

> LEA [e_CX + disp8 (0)] -> e_CX 

> ----------------------

> 3c d2

> CMP 210 - AL 

> ----------------------

> 40

> INC e_AX 

> ----------------------

> 00 9e 000040d2

> ADD [e_SI + disp32 (16594)] + BL -> [e_SI + disp32 (16594)] 

> ----------------------

> d3 40 00

> ROL [e_AX + disp8 (0)] @ CL

> ----------------------

>     **62 d3**

>     **Critical error: #UD exception - second operand is not a memory location at line: 538**

>     ????

> ----------------------

> 40

> INC e_AX 

> ----------------------

> 00 c4

> ADD AH + AL -> AH 

> ----------------------

> d3 40 00

> ROL [e_AX + disp8 (0)] @ CL

> ----------------------

> 26

> [SEG = ES]

> ----------------------

> d4 40

> AAM 64

> ----------------------

> 00 00

> ADD [e_AX] + AL -> [e_AX] 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 01 05 05050505

> ADD [disp32 (84215045)] + e_AX -> [disp32 (84215045)] 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 02050505

> ADD e_AX + 33883397 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 03 05 05050505

> ADD e_AX + [disp32 (84215045)] -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 05 05050505

> ADD e_AX + 84215045 -> e_AX 

> ----------------------

> 04 cc

> ADD AL + 204 -> AL 

> ----------------------

> cc

> INT 3

> ----------------------

> cc

> INT 3

> ----------------------

> cc

> INT 3

> ----------------------

> cc

> INT 3

> ----------------------

> cc

> INT 3

> ----------------------

> cc

> INT 3

> ----------------------

> cc

> INT 3

> ----------------------

> cc

> INT 3

> ----------------------

> cc

> INT 3

> ----------------------

> cc

> INT 3

> ----------------------

> 6a ff

> PUSH 255 

> ...",1512155380.0
jackwilsdon,"I recall reading a post about someone reverse engineering the file format of a Japanese game, and they used a language which is designed for describing the layout of a binary file. I can't remember for the life of me what the name of this tool is, but I think the name may have began with a K?

**Edit**: Found it! Near the top of all time on this sub. [Kaitai Struct](http://kaitai.io/) and [Reverse engineering visual novels 101](https://hackernoon.com/reverse-engineering-visual-novels-101-d0bc3bf7ab8).
",1512336225.0
Zophike1,Can someone recommend me a reading list: Papers/books to understand exploitation in Firefox(on Linux) across various bug classes thanks.,1512436179.0
----___----___----__,"Hello! I'm trying to learn how to use angr, but I keep getting ""<PathGroup with 1 errored>"".  The CTF binary I'm working on reads input and does a strncmp. If the sting looks good, it prints ""Validated"".
I've been using pg.explore(find=lambda p: ""Validated"" in p.state.posix.dumps(1)), where pg is path_groups(), of course.
Also tried pg.explore(find=0x080486f5, avoid=0x080486c9) to no avail. Same error. Addresses were found in radare2. I don't think this is an environment problem, as I'm working from EpicTreasure (thanks u/thebarbershopper). Any tips would be greatly appreciated. Thanks a bunch!",1512448951.0
newgre,"Things like these drive me nuts:
I open the github repo and try to find out *what this is and why i'd want it*. Readme says ""Fork of Corelan’s mona.py for x64dbg"".
Maybe the corelan repo has a better description? Let's see, go to the corelan mona github repo. Their readme: ""Corelan Repository for mona.py"". *sigh*",1512125561.0
