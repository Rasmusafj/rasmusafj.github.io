{{Use dmy dates|date=August 2018}}
{{pp-pc1}}
{{unreliable sources|section|date=October 2018}}
{{Software development process}}
'''DevOps''' (a [[clipped compound]] of "development" and "operations") is a software development [[methodology]] that combines [[software development]] (''Dev'') with [[information technology operations]] (''Ops''). The goal of DevOps is to shorten the [[systems development life cycle]] while also delivering features, fixes, and updates frequently in close alignment with business objectives.<ref>{{Cite web|url=http://radar.oreilly.com/2012/06/what-is-devops.html|title=What is DevOps?|last=Loukides|first=Mike|date=7 June 2012}}</ref> The DevOps approach is to include automation and [[event monitoring]] at all steps of the [[software build]].{{cn|date=October 2018}}

==Definition==
[[File:Devops.svg|thumb|[[Venn diagram]] showing DevOps as the intersection of [[software development|development]] (software engineering), [[information technology operations|operations]] and [[quality assurance]] (QA)]]

Academics and practitioners have not developed a unique definition for the term "DevOps".

From an academic perspective, [[Len Bass]], [[Ingo Weber]], and [[Liming Zhu]]—computer science researchers from the [[Software Engineering Institute]]—suggested to define DevOps as "a set of practices intended to reduce the time between committing a change to a system and the change being placed into normal production, while ensuring high quality".<ref>{{cite book|title=DevOps: A Software Architect's Perspective|author1=Bass, Len|author2=Weber, Ingo|author3=Zhu, Liming|isbn=978-0134049847|year=2015}}</ref>

The term DevOps, however, has been used in multiple contexts.<ref>{{cite web|url=https://devops.com/surprise-broad-agreement-on-the-definition-of-devops/|title=Surprise! Broad Agreement on the Definition of DevOps|date=2015-05-13}}</ref>

==History==
In 2009 Patrick Debois {{failed verification span|coined the term|date=October 2018}} by naming a conference "devopsdays"<ref name="jediblog">{{cite web|last=Debois|first=Patrick|title=Agile 2008 Toronto|url=http://www.jedi.be/blog/2008/10/09/agile-2008-toronto-agile-infrastructure-and-operations-presentation/|publisher=Just Enough Documented Information|accessdate=12 March 2015}}</ref> which started in [[Belgium]] and has now spread to other countries.<ref name="devopsdays">{{cite web|last=Debois|first=Patrick|title=DevOps Days|url=http://www.devopsdays.org/|publisher = DevOps Days|accessdate=31 March 2011}}</ref>

==Toolchain==
[[File:Devops-toolchain.svg|alt=Illustration showing stages in a DevOps toolchain|thumb|Illustration showing stages in a DevOps toolchain]]
{{Main|DevOps toolchain}}
As DevOps is intended to be a cross-functional mode of working, rather than a single DevOps tool, there are sets (or "[[DevOps toolchain|toolchains]]") of multiple tools.<ref>{{cite report |title=Gartner Market Trends: DevOps – Not a Market, but Tool-Centric Philosophy That supports a Continuous Delivery Value Chain |publisher=Gartner |date=18 February 2015}}</ref>  Such DevOps tools are expected to fit into one or more of these categories, reflective of key aspects of the development and delivery process:<ref>{{cite web| title=Integrating DevOps tools into a Service Delivery Platform|last=Edwards|first=Damon|url=http://dev2ops.org/2012/07/integrating-devops-tools-into-a-service-delivery-platform-video/|website=dev2ops.org}}</ref><ref>{{cite web|title=Exploring the ENTIRE DevOps Toolchain for (Cloud) Teams|last=Seroter|first=Richard|url= http://www.infoq.com/articles/devops-toolchain|website=infoq.com}}</ref>
#Code – code development and review, [[Version control|source code management]] tools, code merging 
#Build – [[continuous integration]] tools, build status
#Test – [[continuous testing]] tools that provide feedback on business risks
#Package – [[Binary repository manager|artifact repository]], application pre-deployment staging
#Release – change management, release approvals, [[application release automation|release automation]] 
#Configure – infrastructure configuration and management, [[infrastructure as code]] tools
#Monitor – [[Application performance management|applications performance monitoring]], end-user experience

Note that there exist different interpretations of the DevOps toolchain (e.g. Plan, Create, Verify, Package, Release, Configure, and Monitor).

Some categories are more essential in a DevOps toolchain than others; especially continuous integration (e.g. [[Jenkins (software)|Jenkins]]) and infrastructure as code (e.g. [[Puppet (software)|Puppet]]).<ref>{{cite web|url=http://devops.com/2016/02/05/devops-stack-shoestring-budget/|title=DevOps Stack on a Shoestring Budget|last=Theakanath|first=Thomas|website=devops.com|date=2016-02-05}}</ref><ref>{{Cite web|title = Stronger DevOps Culture with Puppet and Vagrant|url = https://puppetlabs.com/blog/stronger-devops-culture-with-puppet-and-vagrant|website = Puppet Labs|accessdate = 22 October 2015}}</ref>

==Relationship to other approaches==
=== Agile ===
{{Main|Agile software development}}
{{cn span|The need for DevOps arose from the increasing success of agile software development,|date=October 2018}} {{cn span|as that led to organizations wanting to [[Software release life cycle|release]] their software faster and more frequently.|date=October 2018}} As they sought to overcome the strain{{which|date=October 2018}} this{{which|date=October 2018}} put on their release management processes, they had to adopt patterns such as [[application release automation]], [[continuous integration]] tools, and [[continuous delivery]].{{Request quotation|date=October 2018}}<ref name="CD_LC">{{Cite journal |doi = 10.1109/MS.2015.27|url = http://ieeexplore.ieee.org/xpl/articleDetails.jsp?reload=true&arnumber=7006384|title = Continuous Delivery: Huge Benefits, but Challenges Too|journal = IEEE Software|volume = 32|issue = 2|pages = 50–54|year = 2015|last1 = Chen|first1 = Lianping}}</ref><ref>{{cite report |title=Best Practices in Change, Configuration and Release Management  |publisher=Gartner |date=14 July 2010}}</ref>

===ArchOps===
ArchOps presents an extension for DevOps practice, starting from [[software architecture]] artifacts, instead of source code, for operation deployment.<ref>{{cite book |last1=Castellanos |first1=Camilo |last2=Correal |first2=Dario |date=15 September 2018|title=Executing Architectural Models for Big Data Analytics |journal=Lecture Notes in Computer Science |volume=11048 |issue= |pages=364–371 |doi=10.1007/978-3-030-00761-4_24 |isbn=978-3-030-00760-7 }}</ref>. ArchOps states that architectural models are first-class entities in software development, deployment, and operations.

=== Continuous delivery ===
{{Main|Continuous delivery}}
Continuous delivery and DevOps have common goals and are often used in conjunction, but there are subtle differences.<ref name="CD_HJ">{{cite book|title=Continuous Delivery: reliable software releases through build, test, and deployment automation|last=Humble|first=Jez|last2=Farley|first2=David|date=2011|publisher=Pearson Education Inc.|isbn=978-0-321-60191-9}}</ref><ref>{{cite journal|last=Hammond|first=Jeffrey|date=9 September 2011|title=The Relationship between DevOps and Continuous Delivery|url=http://blogs.forrester.com/jeffrey_hammond/11-09-09-the_relationship_between_dev_ops_and_continuous_delivery_a_conversation_with_jez_humble_of_thought|journal=Forrester Research|volume=|pages=|via=}}</ref> 

While continuous delivery is focused on automating the processes in [[software delivery]], DevOps also focuses on the organization change to support great collaboration between the many functions involved.<ref name="CD_HJ" />

DevOps and continuous delivery share a common background in [[Agile software development|agile methods]] and [[lean thinking]]: small and frequent changes with focused value to the end customer.<ref name="Agile Now">{{cite journal|last=Ambler|first=Scott W.|date=12 February 2014|title=We need more Agile IT Now!|url=http://www.drdobbs.com/architecture-and-design/we-need-more-agile-it-now/240169361?queryText=Release%2Bmanagement|journal=Dr. Dobb's the World of Software Development}}</ref> They are well communicated and collaborated internally, thus helping achieve faster [[time to market]], with reduced risks.<ref name="CD_LC"/><ref name="Micro_Chen">{{cite conference 
|url= https://www.researchgate.net/publication/323944215_Microservices_Architecting_for_Continuous_Delivery_and_DevOps
|title= Microservices: Architecting for Continuous Delivery and DevOps
|first= Lianping |last= Chen 
|date= 2018 
|conference= The IEEE International Conference on Software Architecture (ICSA 2018)
|conferenceurl= http://icsa-conferences.org/2018/ 
|publisher= IEEE
}}
</ref>

===DataOps===
{{Main|DataOps}}
The application of continuous delivery and DevOps to data analytics has been termed DataOps. DataOps seeks to integrate data engineering, data integration, data quality, data security, and data privacy with operations.<ref>{{Cite news|url=https://www.tamr.com/from-devops-to-dataops-by-andy-palmer/|title=From DevOps to DataOps, By Andy Palmer - Tamr Inc.|date=7 May 2015|work=Tamr Inc.|access-date=23 August 2017|language=en-US}}</ref> It applies principles from DevOps, [[Agile software development|Agile Development]] and the [[statistical process control]], used in [[lean manufacturing]], to improve the cycle time of extracting value from data analytics.<ref>{{Cite web|url=https://medium.com/data-ops/how-to-become-a-rising-star-with-data-analytics-6e4f611e85dd|title=How to Become a Rising Star with Data Analytics|last=DataKitchen|date=15 March 2017|website=data-ops|access-date=23 August 2017}}</ref>

===DevSecOps===
DevSecOps is another practice that rose from DevOps that includes [[information technology security]] as a fundamental aspect in all the stages of software development.<ref>{{Citation | last = Weinberger| first = Matt| title = Microsoft study finds everybody wants DevOps but Culture is a Challenge| publisher = Computerworld| date = 25 November 2014| url = http://www.computerworld.com/article/2851974/microsoft-study-finds-everybody-wants-devops-but-culture-is-a-challenge.html }}</ref>

===Site reliability engineering ===
{{Main|Site reliability engineering}}
In 2003, [[Google]] developed [[site reliability engineering]] (SRE), an approach for releasing new features continuously into large-scale high-availability systems while maintaining high-quality end user experience.<ref>{{cite book|title=Site Reliability Engineering|date=April 2016|publisher=O'Reilly Media|first1=Betsy|last1=Beyer|first2=Chris|last2=Jones|first3=Jennifer|last3=Petoff|first4=Niall Richard|last4=Murphy|isbn=978-1-4919-2909-4}}</ref> While SRE predates the development of DevOps, they are generally viewed as being related to each other.<ref>{{cite web|url=https://devops.com/sre-vs-devops-false-distinction/|title=SRE vs. DevOps — a False Distinction? - DevOps.com|date=18 May 2017|publisher=}}</ref> Some aspects of DevOps have taken a similar approach.<ref>{{cite|url=https://www.atlassian.com/it-unplugged/devops/site-reliability-engineering-sre|title=Love DevOps? Wait until you meet SRE}}</ref>

===Systems administration===
{{expand section|date=June 2018}}
DevOps is often viewed as an approach to applying [[systems administrator|systems administration]] work to cloud technology.<ref>{{cite web|url=https://techbeacon.com/sysadmins-survival-guide-devops|title=How to stay relevant in the DevOps era: A SysAdmin's survival guide|publisher=}}</ref>

===WinOps===
{{main|WinOps}}
[[WinOps]] is the term used for DevOps practices for a Microsoft-centric view.

==Goals==
The goals of DevOps span the entire delivery pipeline. They include: 
* Improved deployment frequency;  
* Faster [[time to market]]; 
* Lower failure rate of new releases; 
* Shortened lead time between fixes;
* Faster mean time to recovery (in the event of a new release crashing or otherwise disabling the current system). 
Simple processes become increasingly programmable and dynamic, using a DevOps approach.<ref>{{cite web|url=http://newrelic.com/devops/what-is-devops |title=What is DevOps? |publisher=NewRelic.com |accessdate=21 October 2014}}</ref> DevOps aims to maximize the predictability, efficiency, security, and maintainability of operational processes. Very often, automation supports this objective.

DevOps integration targets [[Software delivery|product delivery]], [[continuous testing]], [[Software testing#Software quality assurance .28SQA.29|quality testing]], feature development, and [[maintenance release]]s in order to improve reliability and security and provide faster [[Development cycle|development]] and [[Software deployment|deployment]] cycles. Many of the ideas (and people) involved in DevOps came from the [[enterprise systems management]] and [[agile software development]] movements.<ref name="AgileInf2010">{{cite web|last=Nasrat|first=Paul|title=Agile Infrastructure|url=http://www.infoq.com/presentations/agile-infrastructure|publisher=InfoQ|accessdate=31 March 2011}}</ref>

=== Views on the benefits claimed for DevOps ===
Companies that practice DevOps have reported significant benefits, including: significantly shorter [[time to market]], improved customer satisfaction, better product quality, more reliable releases, improved productivity and efficiency, and the increased ability to build the right product by fast experimentation.<ref name="CD_LC"/>

However, a study released in January 2017 by [[F5 Networks|F5]] of almost 2,200 IT executives and industry professionals found that only one in five surveyed think DevOps had a strategic impact on their organization despite rise in usage. The same study found that only 17% identified DevOps as key, well below [[software as a service]] (42%), [[big data]] (41%) and public cloud infrastructure as a service (39%).<ref>{{cite journal|last=Bourne|first=James|date=23 January 2017|title=New research questions strategic importance of DevOps despite rise in usage|url=http://www.cloudcomputing-news.net/news/2017/jan/23/devops-usage-continues-rise-strategic-importance-needs-more-working-out/|journal=CloudTech}}</ref>

==Cultural change==
DevOps initiatives can create cultural changes in companies <ref>{{cite report |title=Emerging Technology Analysis: DevOps a Culture Shift, Not a Technology |publisher=Gartner}}</ref> by transforming the way [[Information technology operations|operations]], [[Software developer|developers]], and [[Software testing|testers]] collaborate during the development and delivery processes.<ref>{{cite book|last= Loukides | first= Mike | date= 11 June 2012 | title= What is Devops? | publisher = Oreilly Media}}</ref>  Getting these groups to work cohesively is a critical challenge in enterprise DevOps adoption.<ref>{{cite web|title=Gartner IT Glossary {{ndash}} devops|website=Gartner|url=http://www.gartner.com/it-glossary/devops/ | access-date= 30 October 2015}}</ref><ref name="Jones et al">{{Cite book| url = http://dl.acm.org/citation.cfm?id=2945410| first1 = Stephen| title = Proceedings of the 2nd International Workshop on Quality-Aware Dev ''Ops'' - QUDOS 2016| pages = 7–11|last1 = Jones| first2 = Joost| last2 = Noppen|first3 = Fiona| last3 = Lettice| date = 21 July 2016| doi = 10.1145/2945408.2945410  | isbn = 9781450344111}}</ref>

===DevOps as a job title===

While DevOps describes an approach to work rather than a distinct role (like [[system administrator]]), job advertisements are increasingly using terms like "''DevOps Engineer''".<ref>{{Cite news|url=https://devops.com/is-devops-a-title/|title=Is DevOps a Title? - DevOps.com|date=20 March 2014|work=DevOps.com|access-date=22 July 2017|language=en-US}}</ref><ref>{{Cite news|url=https://www.monster.com/career-advice/article/devops-jobs|title=DevOps: A Job Title or a School of Thought?|work=Monster Career Advice|access-date=22 July 2017}}</ref>

While DevOps reflects complex topics, the DevOps community uses analogies to communicate important concepts, much like "[[The Cathedral and the Bazaar]]" from the open source community.<ref>{{Cite web|url=https://devops.stackexchange.com/questions/1403/what-are-known-useful-and-misleading-memes-in-the-devops-culture|title=What are known useful and misleading memes in the DevOps culture?|website=devops.stackexchange.com|access-date=29 June 2017}}</ref>

* Cattle not Pets: the paradigm of disposable server infrastructure.<ref>{{cite web|url=https://www.theregister.co.uk/2013/03/18/servers_pets_or_cattle_cern/|title=Are Your Servers Pets or Cattle?|last=Sharwood|first=Simon|website=[[The Register]]|access-date=2 July 2018}}</ref>
* 10 deployments per day: the story of Flickr adopting DevOps.

===Building a DevOps culture===
[[File:DevOpsTShirt.jpg|thumb|DevOps T-shirt worn at a computer conference.]]
DevOps principles demand strong interdepartmental communication. Team-building and other [[employee engagement]] activities are often used to create an environment that fosters this communication and cultural change within an organization.<ref>{{cite book|last=Walls |first=Mandi | date= 15 April 2013 | title= Building a DevOps Culture| url= https://books.google.com/?id=XO1So8BTj2wC&printsec=frontcover#v=onepage&q&f=false | publisher=OReilly Media |isbn=9781449368364 }}</ref> Team–building activities can include [[board game]]s, trust activities, and employee engagement seminars.<ref>{{cite journal|last=Roach |first=Patrick | title= Dice Breakers: Using DevOps principles and nerdery to reimagine Team building | url= http://devops.com/2015/10/08/dice-breakers-using-devops-principles-nerdery-reimagine-team-building/| journal=DevOps.com |date=2015-10-08 }}</ref>

==Deployment==
Companies with very frequent releases may require a DevOps awareness or orientation program. For example, the company that operates the image hosting website [[Flickr]] developed a DevOps approach, to support a business requirement of ten deployments per day;<ref>{{Cite web
 | url = http://www.slideshare.net/jallspaw/10-deploys-per-day-dev-and-ops-cooperation-at-flickr
 | title = 10+ Deploys Per Day: Dev and Ops Cooperation at Flickr
| date = 2009-06-23
}}</ref> this daily deployment cycle would be much higher at organizations producing multi-focus or multi-function applications. This is referred to as [[continuous deployment]]<ref>{{Cite web
 | url = http://www.svforum.org/index.cfm?fuseaction=Calendar.eventDetail&eventID=13703
 | work =  SVForum
 | title = SAM SIG: Applied Lean Startup Ideas: Continuous Deployment at kaChing
}}</ref> or [[continuous delivery]] <ref>{{Cite web
 | url = https://www.cutter.com/article/why-enterprises-must-adopt-devops-enable-continuous-delivery-416516
 | title = Why Enterprises Must Adopt Devops to Enable Continuous Delivery 
 | work = [[Cutter IT Journal]] | first = Jez | last = Humble 
}}</ref> and has been associated with the [[lean startup]] methodology.<ref>{{Cite web
 | url =  http://www.slideshare.net/pascallouis/applied-lean-startup-ideas-continuous-deployment-at-kaching
 | title = Applied Lean Startup Ideas: Continuous Deployment at kaChing
| date = 2010-05-26
}}</ref> [[Working group]]s, [[professional association]]s and [[blog]]s have formed on the topic since 2009.<ref>{{Cite web
 | url = http://www.devopsdays.org/events/2009-ghent/
 | title = DevOps Days 2009 Conference
}}</ref><ref>{{Cite web
 | url = http://dev2ops.org/blog/2010/4/26/devops-meetup-recap.html
 | title = DevOps Meetup Recap | first = Damon | last = Edwards
}}
</ref>

===Architecturally significant requirements===
To practice DevOps effectively, software applications have to meet a set of [[architecturally significant requirements]] (ASRs), such as: deployability, modifiability, testability, and monitorability.<ref name="ArchCD_LC">{{cite conference |title=Towards Architecting for Continuous Delivery|first=Lianping |last=Chen|year=2015|place=Montréal, Canada |conference=The 12th Working IEEE/IFIP Conference on Software Architecture(WICSA 2015)|conferenceurl=http://wicsa2015.org/ |publisher=IEEE|doi=10.1109/WICSA.2015.23}}</ref> These ASRs require a high priority and cannot be traded off lightly.

===Microservices===
Although in principle it is possible to practice DevOps with any architectural style, the [[microservices]] architectural style is becoming the standard for building continuously deployed systems.<ref name="Micro_Chen"/> Because the size of each service is small, it allows the architecture of an individual service to emerge through continuous refactoring,<ref name="Ach_Chen">{{cite conference |title=Towards an Evidence-Based Understanding of Emergence of Architecture through Continuous Refactoring in Agile Software Development|first=Lianping |last=Chen |first2=Muhammad|last2=Ali Babar|date=2014 |conference=The 11th Working IEEE/IFIP Conference on Software Architecture(WICSA 2014)|conferenceurl=https://web.archive.org/web/20140730053454/http://wicsa2014.org/ |publisher=IEEE|doi=10.1109/WICSA.2014.45}}</ref> hence reducing the need for a big upfront design{{citation needed|date=January 2017}} and allows for releasing the software early{{citation needed|date=January 2017}} and continuously.

===DevOps automation===
{{expand section|date=June 2018}}
DevOps automation is a [[software engineering]] practice, which aims at eliminating manual handoffs, aligning siloed Dev and Ops departments, and delivering release-driven systems through the utilization of automation tools in development, test, stage, and production [[Deployment environment|environments]].{{cn|date=December 2018}} DevOps automation can be achieved by repackaging platforms, systems, and applications into reusable building blocks through the use of technologies such as [[Virtual machine|virtual machines]] and [[Docker (software)|containerization]]. <ref>{{Cite news|url=http://www.devopsdigest.com/full-potential-of-containerization-for-devops-1|title=Unleashing the Full Potential of Containerization for DevOps|last=|first=|date=20 September 2017|work=Unleashing the Full Potential of Containerization for DevOps|access-date=20 June 2018|language=en-US}}</ref><ref>{{Cite news|url=https://www.techrepublic.com/article/containers-vs-virtual-machines-a-simplified-answer-to-a-complex-question/|title=Containers vs. virtual machines: A simplified answer to a complex question}}</ref>

Implementation of DevOps automation in the IT-organization is heavily dependent on tools, <ref>{{Cite news|url=https://techbeacon.com/devops-automation-best-practices-how-much-too-much|title=DevOps best practices: How much automation do you need?|work=TechBeacon|access-date=2018-11-14|language=en}}</ref> which are required to cover different areas of the [[Systems development life cycle|systems development lifecycle]] (SDLC):

# Infrastructure as code — [[Ansible (software)|Ansible]], [[Puppet (software)|Puppet]], Chef
# CI/CD — [[Jenkins (software)|Jenkins]], Shippable, Bamboo
# Test automation — Selenium, Cucumber, Apache JMeter
# Containerization — [[Docker (software)|Docker]], Rocket, Unik
# [[Orchestration (computing)|Orchestration]] — [[Kubernetes]], Swarm, Mesos
# Deployment — Elastic Beanstalk, Octopus, Vamp
# Measurement — NewRelic, Kibana, Datadog
# ChatOps — Hubot, Lita, Cog

== Adoption ==
Some articles in the DevOps literature assume or recommend significant participation in DevOps initiatives from outside an organization's [[information technology|IT]] department, e.g.: "DevOps is just the [[agile software development|agile]] principle, taken to the full enterprise."<ref>{{Cite web | url = http://devops.com/2015/03/04/devops-is-agile-for-the-rest-of-the-company/ | title = DevOps is Agile for the Rest of the Company | publisher = DevOps.com| date = 2015-03-04 }}</ref>

A survey published in January 2016 by the SaaS cloud-computing company [[RightScale]], DevOps adoption increased from 66 percent in 2015 to 74 percent in 2016. And among larger enterprise organizations, DevOps adoption is even higher – 81 percent.<ref>{{cite journal|last=Harvey |first=Cynthia | date= 9 January 2017 | title= 10 Ways DevOps is Changing the Enterprise | url= http://www.datamation.com/data-center/slideshows/10-ways-devops-is-changing-enterprise-it.html | journal=Datamation }}</ref>

Adoption of DevOps is being driven by many factors – including:
# Use of agile and other [[software development process|development processes]] and methods;
# Demand for an increased rate of production releases – from application and business unit [[Stakeholder (corporate)|stakeholder]]s;
# Wide availability of virtualized<ref>{{Cite web | url = http://www.it20.info/misc/virtualizationscomparison.htm
 | title = Virtual Infrastructure products: features comparison | work = Welcome to IT 2.0:  Next Generation IT infrastructures}}</ref> and [[Cloud computing|cloud infrastructure]] – from internal and external providers;
# Increased usage of [[data center]] automation<ref>{{Cite web | url = http://www.information-management.com/infodirect/20071026/10000120-1.html | title = Bringing Order to Chaos through Data Center Automation | first = Jennifer | last = Ellard | work = Information Management | publisher = SourceMedia | deadurl = yes | archiveurl = https://web.archive.org/web/20100611073000/http://www.information-management.com/infodirect/20071026/10000120-1.html | archivedate = 11 June 2010 | df =  }}</ref> and [[configuration management]] tools;
# Increased focus on [[test automation]]<ref>{{Cite web | url = http://devops.com/2015/08/21/impacts-devops-testing/ | title = Impact of DevOps on Testing | publisher = DevOps.com| date = 2015-08-21 }}</ref> and [[continuous integration]] methods;
# A critical mass of publicly-available best practices.

== See also==
* [[Twelve-factor app]]

==References==
{{Reflist|30em}}

==Further reading==
*{{Cite book|url=|title=Effective DevOps : building a culture of collaboration, affinity, and tooling at scale|last1=Davis|first1=Jennifer|last2=Daniels|first2=Ryn|publisher=O'Reilly|isbn=9781491926437|location=Sebastopol, CA|oclc=951434424|date=2016-05-30}}
*{{Cite book|url=|title=The DevOps handbook : how to create world-class agility, reliability, and security in technology organizations|last=Gene|first=Kim|last2=Debois|first2=Patrick|last3=Willis|first3=John|last4=Humble|first4=Jez|last5=Allspaw|first5=John|isbn=9781942788003|edition=First|location=Portland, OR|oclc=907166314|date=2015-10-07}}

{{DEFAULTSORT:Devops}}
[[Category:Agile software development]]
[[Category:Software development process]]
[[Category:Information technology management]]